; ModuleID = '../bcout/drivers/tty/synclink_gt.llvm.bc'
source_filename = "drivers/tty/synclink_gt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_slgt_init6:\09\09\09"
module asm ".long\09slgt_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.86, %struct.list_head, %struct.list_head, %union.anon.87 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.84 }
%union.anon.84 = type { %struct.anon.85 }
%struct.anon.85 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.4, %union.anon.76, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.76 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.77, i32 }
%union.anon.77 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.69, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.20, [0 x i64] }
%struct.anon.20 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.21, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.21 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.22 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.29, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.30, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.31, %union.anon.35, %struct.key_restriction* }
%union.anon.29 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.30 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.31 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.32, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.32 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.35 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.37, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.37 = type { %struct.anon.38 }
%struct.anon.38 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.90, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.130, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.90 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.42, %union.anon.45, %union.anon.46, [48 x i8], %union.anon.47, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.49, i32, i32, i32, i16, i16, %union.anon.51, %union.anon.52, %union.anon.53, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.44 }
%union.anon.44 = type { %struct.net_device* }
%union.anon.45 = type { %struct.sock* }
%union.anon.46 = type { i64 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, void (%struct.sk_buff*)* }
%union.anon.49 = type { i32 }
%union.anon.51 = type { i32 }
%union.anon.52 = type { i32 }
%union.anon.53 = type { i16 }
%struct.ifreq = type { %union.anon.91, %union.anon.92 }
%union.anon.91 = type { [16 x i8] }
%union.anon.92 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.94 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.94 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.95 }
%union.anon.95 = type { %struct.anon.96 }
%struct.anon.96 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.127 }
%union.anon.127 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.128, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.128 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.129 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.129 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.130 = type { i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.40, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.40 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.41 }
%union.anon.41 = type { [4 x i32] }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.54 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.54 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.sock = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.0, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.0 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.55, %union.anon.56, i32 }
%struct.request_queue = type opaque
%union.anon.55 = type { %struct.list_head }
%union.anon.56 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.57 }
%struct.anon.57 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.61 }
%struct.anon.61 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.68, i32, [12 x i8] }
%union.anon.68 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.69 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.70, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.73 }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { i64, i64 }
%union.anon.73 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.27 }
%union.anon.27 = type { %struct.anon.28, [48 x i8] }
%struct.anon.28 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.86 = type { %struct.list_head }
%union.anon.87 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.78, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.79, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.80, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.78 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.79 = type { %struct.callback_head }
%union.anon.80 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.7, %union.anon.8 }
%union.anon.7 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.8 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.83 = type { %struct.pipe_inode_info* }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.39 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.39 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.88, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.88 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.81 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.81 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.slgt_info = type { i8*, %struct.tty_port, %struct.slgt_info*, i32, [25 x i8], %struct.pci_dev*, i32, i32, i32, [4 x %struct.slgt_info*], i32, %struct.mgsl_icount, i32, i32, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, %struct.timer_list, %struct.timer_list, i32, %struct.cond_wait*, %struct.spinlock, %struct.work_struct, i32, i8, i8, i32, i8, i8, i32, i32, i64, i8*, i32, i8, %struct._MGSL_PARAMS, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8*, i32, i8*, i8, %struct._input_signal_events, i32, i32, i32, i32, i8*, i64, i32, %struct.slgt_desc*, i32, i32, i32, i16, i32, %struct.slgt_desc*, i32, i32, i8*, i32, i32, %struct.spinlock, %struct.net_device* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.89, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.89 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.mgsl_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.cond_wait = type { %struct.cond_wait*, %struct.wait_queue_head, %struct.wait_queue_entry, i32 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct._MGSL_PARAMS = type { i64, i8, i16, i8, i64, i8, i16, i8, i8, i64, i8, i8, i8 }
%struct._input_signal_events = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.slgt_desc = type { i16, i16, i32, i32, i8*, i32, i64, i16 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.hdlc_device = type { i32 (%struct.net_device*, i16, i16)*, i32 (%struct.sk_buff*, %struct.net_device*)*, %struct.hdlc_proto*, i32, i32, %struct.spinlock, i8*, i8* }
%struct.hdlc_proto = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*)*, i16 (%struct.sk_buff*, %struct.net_device*)*, i32 (%struct.sk_buff*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, %struct.module*, %struct.hdlc_proto* }
%struct.sync_serial_settings = type { i32, i32, i16 }
%struct.if_settings = type { i32, i32, %union.anon.93 }
%union.anon.93 = type { %struct.raw_hdlc_proto* }
%struct.raw_hdlc_proto = type { i16, i16 }
%struct.gpio_desc = type { i32, i32, i32, i32 }

@__UNIQUE_ID_file319 = internal constant [41 x i8] c"synclink_gt.file=drivers/tty/synclink_gt\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_license320 = internal constant [24 x i8] c"synclink_gt.license=GPL\00", section ".modinfo", align 1, !dbg !7979
@__param_str_ttymajor = internal constant [21 x i8] c"synclink_gt.ttymajor\00", align 16, !dbg !8074
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@ttymajor = internal global i32 0, align 4, !dbg !8070
@__param_ttymajor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_ttymajor, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ttymajor to i8*) } }, section "__param", align 8, !dbg !7984
@__UNIQUE_ID_ttymajortype321 = internal constant [34 x i8] c"synclink_gt.parmtype=ttymajor:int\00", section ".modinfo", align 1, !dbg !8034
@__param_str_debug_level = internal constant [24 x i8] c"synclink_gt.debug_level\00", align 16, !dbg !8079
@debug_level = internal global i32 0, align 4, !dbg !8072
@__param_debug_level = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_debug_level, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug_level to i8*) } }, section "__param", align 8, !dbg !8039
@__UNIQUE_ID_debug_leveltype322 = internal constant [37 x i8] c"synclink_gt.parmtype=debug_level:int\00", section ".modinfo", align 1, !dbg !8041
@__param_str_maxframe = internal constant [21 x i8] c"synclink_gt.maxframe\00", align 16, !dbg !8081
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_maxframe = internal constant %struct.kparam_array { i32 32, i32 4, i32* null, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([32 x i32]* @maxframe to i8*) }, align 8, !dbg !8083
@__param_maxframe = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_maxframe, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_maxframe } }, section "__param", align 8, !dbg !8044
@__UNIQUE_ID_maxframetype323 = internal constant [43 x i8] c"synclink_gt.parmtype=maxframe:array of int\00", section ".modinfo", align 1, !dbg !8046
@__UNIQUE_ID_ttymajor324 = internal constant [76 x i8] c"synclink_gt.parm=ttymajor:TTY major device number override: 0=auto assigned\00", section ".modinfo", align 1, !dbg !8051
@__UNIQUE_ID_debug_level325 = internal constant [87 x i8] c"synclink_gt.parm=debug_level:Debug syslog output: 0=disabled, 1 to 5=increasing detail\00", section ".modinfo", align 1, !dbg !8056
@__UNIQUE_ID_maxframe326 = internal constant [76 x i8] c"synclink_gt.parm=maxframe:Maximum frame size used by device (4096 to 65535)\00", section ".modinfo", align 1, !dbg !8061
@__UNIQUE_ID___addressable_slgt_init342 = internal global i8* bitcast (i32 ()* @slgt_init to i8*), section ".discard.addressable", align 8, !dbg !8063
@__exitcall_slgt_exit = internal global void ()* @slgt_exit, section ".exitcall.exit", align 8, !dbg !8065
@maxframe = internal global [32 x i32] zeroinitializer, align 16, !dbg !8085
@.str = private unnamed_addr constant [13 x i8] c"\016unload %s\0A\00", align 1
@driver_name = internal global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), align 8, !dbg !8088
@serial_driver = internal global %struct.tty_driver* null, align 8, !dbg !8090
@slgt_device_list = internal global %struct.slgt_info* null, align 8, !dbg !8092
@.str.1 = private unnamed_addr constant [32 x i8] c"tty_unregister_driver error=%d\0A\00", align 1
@pci_registered = internal global i8 0, align 1, !dbg !8094
@pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([5 x %struct.pci_device_id], [5 x %struct.pci_device_id]* @pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @init_one, void (%struct.pci_dev*)* @remove_one, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !8096
@.str.2 = private unnamed_addr constant [12 x i8] c"SyncLink GT\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@.str.3 = private unnamed_addr constant [12 x i8] c"synclink_gt\00", align 1
@pci_table = internal constant [5 x %struct.pci_device_id] [%struct.pci_device_id { i32 5056, i32 112, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5056, i32 160, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5056, i32 128, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 5056, i32 144, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !8098
@.str.4 = private unnamed_addr constant [30 x i8] c"error enabling pci device %p\0A\00", align 1
@slgt_device_count = internal global i32 0, align 4, !dbg !8124
@.str.5 = private unnamed_addr constant [30 x i8] c"%s request_irq failed IRQ=%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"%s device alloc failed adapter=%d port=%d\0A\00", align 1
@slgt_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @carrier_raised, void (%struct.tty_port*, i32)* @dtr_rts, void (%struct.tty_port*)* null, i32 (%struct.tty_port*, %struct.tty_struct*)* null, void (%struct.tty_port*)* null }, align 8, !dbg !8108
@alloc_dev.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8101
@.str.7 = private unnamed_addr constant [27 x i8] c"&info->status_event_wait_q\00", align 1
@alloc_dev.__key.8 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8106
@.str.9 = private unnamed_addr constant [20 x i8] c"&info->event_wait_q\00", align 1
@default_params = internal global %struct._MGSL_PARAMS { i64 2, i8 0, i16 1, i8 3, i64 0, i8 -1, i16 1, i8 0, i8 0, i64 9600, i8 8, i8 1, i8 0 }, align 8, !dbg !8110
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.11 = private unnamed_addr constant [15 x i8] c"%s bh receive\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"%s bh status\0A\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"%s unknown action\0A\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"%s bh_handler exit\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"%s rx_async count=%d\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.17 = private unnamed_addr constant [13 x i8] c"%s %s data:\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"%s rx frame status=%04X size=%d\0A\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"%s hdlcdev_rx\0A\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"%s: can't alloc skb, drop packet\0A\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"rx_get_buf size=%d\0A\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"%s bh_transmit\0A\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"%s tx_timeout\0A\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"%s rx_timeout\0A\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@tty_dev_prefix = internal global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i32 0, i32 0), align 8, !dbg !8112
@.str.31 = private unnamed_addr constant [3 x i8] c"GT\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"GT2\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"GT4\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"AC\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"(unknown model)\00", align 1
@.str.36 = private unnamed_addr constant [47 x i8] c"SyncLink %s %s IO=%08x IRQ=%d MaxFrameSize=%u\0A\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"ttySLG\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"\013%s hdlc device alloc failure\0A\00", align 1
@hdlcdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @hdlcdev_open, i32 (%struct.net_device*)* @hdlcdev_close, i32 (%struct.sk_buff*, %struct.net_device*)* @hdlc_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*, i8*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ifreq*, i32)* @hdlcdev_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* @hdlcdev_tx_timeout, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !8114
@.str.39 = private unnamed_addr constant [37 x i8] c"\014%s:unable to register hdlc device\0A\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"drivers/tty/synclink_gt.c\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"%s hdlcdev_open\0A\00", align 1
@.str.42 = private unnamed_addr constant [19 x i8] c"%s hdlc_open busy\0A\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"%s startup\0A\00", align 1
@.str.44 = private unnamed_addr constant [29 x i8] c"%s can't allocate tx buffer\0A\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"%s change_params\0A\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"%s hdlcdev_close\0A\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"%s shutdown\0A\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"%s hdlcdev_ioctl\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.50 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"%s hdlcdev_tx_timeout\0A\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"%s hdlcdev_attach\0A\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"%s hdlc_xmit\0A\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.55 = private unnamed_addr constant [33 x i8] c"%s reg addr conflict, addr=%08X\0A\00", align 1
@.str.56 = private unnamed_addr constant [42 x i8] c"%s can't map device registers, addr=%08X\0A\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"%s DMA buffer alloc fail\0A\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"slgt_interrupt irq=%d entry\0A\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"%s gsr=%08x\0A\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"%s iosr=%08x\0A\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"%s bh queued\0A\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"slgt_interrupt irq=%d exit\0A\00", align 1
@.str.63 = private unnamed_addr constant [27 x i8] c"%s isr_serial status=%04X\0A\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"%s txeom status=%04x\0A\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"isr_rxdata %s RDR=%04X\0A\00", align 1
@.str.66 = private unnamed_addr constant [28 x i8] c"dsr_change %s signals=%04X\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"cts_change %s signals=%04X\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"dcd_change %s signals=%04X\0A\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"ri_change %s signals=%04X\0A\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"%s isr_rdma status=%08x\0A\00", align 1
@.str.71 = private unnamed_addr constant [26 x i8] c"%s isr_rdma rx_restart=1\0A\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"%s isr_tdma status=%08x\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.73 = private unnamed_addr constant [12 x i8] c"testing %s\0A\00", align 1
@.str.74 = private unnamed_addr constant [36 x i8] c"register test failure %s addr=%08X\0A\00", align 1
@.str.75 = private unnamed_addr constant [28 x i8] c"IRQ test failure %s IRQ=%d\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"loopback test failure %s\0A\00", align 1
@register_test.patterns = internal global [6 x i16] [i16 0, i16 -1, i16 -21846, i16 21845, i16 26985, i16 -26986], align 2, !dbg !8116
@register_test.count = internal global i32 6, align 4, !dbg !8122
@.str.77 = private unnamed_addr constant [6 x i8] c"\016%s\0A\00", align 1
@.str.78 = private unnamed_addr constant [30 x i8] c"%s can't allocate tty driver\0A\00", align 1
@slgt_driver_name = internal global i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), align 8, !dbg !8126
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* null, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @open, void (%struct.tty_struct*, %struct.file*)* @close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @write, i32 (%struct.tty_struct*, i8)* @put_char, void (%struct.tty_struct*)* @flush_chars, i32 (%struct.tty_struct*)* @write_room, i32 (%struct.tty_struct*)* @chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @set_termios, void (%struct.tty_struct*)* @throttle, void (%struct.tty_struct*)* @unthrottle, void (%struct.tty_struct*)* @tx_hold, void (%struct.tty_struct*)* @tx_release, void (%struct.tty_struct*)* @hangup, i32 (%struct.tty_struct*, i32)* @set_break, void (%struct.tty_struct*)* @flush_buffer, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* @wait_until_sent, void (%struct.tty_struct*, i8)* @send_xchar, i32 (%struct.tty_struct*)* @tiocmget, i32 (%struct.tty_struct*, i32, i32)* @tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* @get_icount, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, i32 (%struct.tty_struct*, %struct.serial_struct*)* null, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* @synclink_gt_proc_show }, align 8, !dbg !8128
@.str.79 = private unnamed_addr constant [33 x i8] c"%s can't register serial driver\0A\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"\016%s, tty major#%d\0A\00", align 1
@.str.81 = private unnamed_addr constant [33 x i8] c"%s pci_register_driver error=%d\0A\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"%s no devices found\0A\00", align 1
@.str.83 = private unnamed_addr constant [33 x i8] c"%s: open with invalid line #%d.\0A\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.85 = private unnamed_addr constant [18 x i8] c"%s init error=%d\0A\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"%s open, old ref count = %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [26 x i8] c"%s block_til_ready rc=%d\0A\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"%s open rc=%d\0A\00", align 1
@.str.89 = private unnamed_addr constant [20 x i8] c"%s block_til_ready\0A\00", align 1
@.str.90 = private unnamed_addr constant [25 x i8] c"%s block_til_ready wait\0A\00", align 1
@.str.91 = private unnamed_addr constant [33 x i8] c"%s block_til_ready ready, rc=%d\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.92 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.93 = private unnamed_addr constant [26 x i8] c"%s close entry, count=%d\0A\00", align 1
@.str.94 = private unnamed_addr constant [25 x i8] c"%s close exit, count=%d\0A\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"%s write count=%d\0A\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"%s write rc=%d\0A\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"put_char\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"%s put_char(%d)\0A\00", align 1
@.str.100 = private unnamed_addr constant [12 x i8] c"flush_chars\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"%s flush_chars entry tx_count=%d\0A\00", align 1
@.str.102 = private unnamed_addr constant [31 x i8] c"%s flush_chars start transmit\0A\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"write_room\00", align 1
@.str.104 = private unnamed_addr constant [18 x i8] c"%s write_room=%d\0A\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"chars_in_buffer\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"%s chars_in_buffer()=%d\0A\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@.str.108 = private unnamed_addr constant [21 x i8] c"%s ioctl() cmd=%08X\0A\00", align 1
@.str.109 = private unnamed_addr constant [24 x i8] c"%s wait_mgsl_event(%d)\0A\00", align 1
@.str.110 = private unnamed_addr constant [55 x i8] c"%s set_gpio state=%08x smask=%08x dir=%08x dmask=%08x\0A\00", align 1
@.str.111 = private unnamed_addr constant [33 x i8] c"%s get_gpio state=%08x dir=%08x\0A\00", align 1
@.str.112 = private unnamed_addr constant [38 x i8] c"%s wait_gpio() state=%08x smask=%08x\0A\00", align 1
@init_cond_wait.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !8130
@.str.113 = private unnamed_addr constant [6 x i8] c"&w->q\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"%s get_xsync=%x\0A\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"%s set_xsync=%x)\0A\00", align 1
@.str.116 = private unnamed_addr constant [17 x i8] c"%s get_xctrl=%x\0A\00", align 1
@.str.117 = private unnamed_addr constant [18 x i8] c"%s set_xctrl=%x)\0A\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c"%s get_params\0A\00", align 1
@.str.119 = private unnamed_addr constant [15 x i8] c"%s set_params\0A\00", align 1
@.str.120 = private unnamed_addr constant [18 x i8] c"%s get_txidle=%d\0A\00", align 1
@.str.121 = private unnamed_addr constant [19 x i8] c"%s set_txidle(%d)\0A\00", align 1
@.str.122 = private unnamed_addr constant [18 x i8] c"%s tx_enable(%d)\0A\00", align 1
@.str.123 = private unnamed_addr constant [20 x i8] c"%s rx_enable(%08x)\0A\00", align 1
@.str.124 = private unnamed_addr constant [13 x i8] c"%s tx_abort\0A\00", align 1
@.str.125 = private unnamed_addr constant [14 x i8] c"%s get_stats\0A\00", align 1
@.str.126 = private unnamed_addr constant [21 x i8] c"%s get_interface=%x\0A\00", align 1
@.str.127 = private unnamed_addr constant [22 x i8] c"%s set_interface=%x)\0A\00", align 1
@.str.128 = private unnamed_addr constant [16 x i8] c"%s set_termios\0A\00", align 1
@.str.129 = private unnamed_addr constant [9 x i8] c"throttle\00", align 1
@.str.130 = private unnamed_addr constant [13 x i8] c"%s throttle\0A\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"unthrottle\00", align 1
@.str.132 = private unnamed_addr constant [15 x i8] c"%s unthrottle\0A\00", align 1
@.str.133 = private unnamed_addr constant [8 x i8] c"tx_hold\00", align 1
@.str.134 = private unnamed_addr constant [12 x i8] c"%s tx_hold\0A\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"tx_release\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"%s tx_release\0A\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"hangup\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"%s hangup\0A\00", align 1
@.str.139 = private unnamed_addr constant [10 x i8] c"set_break\00", align 1
@.str.140 = private unnamed_addr constant [18 x i8] c"%s set_break(%d)\0A\00", align 1
@.str.141 = private unnamed_addr constant [13 x i8] c"flush_buffer\00", align 1
@.str.142 = private unnamed_addr constant [17 x i8] c"%s flush_buffer\0A\00", align 1
@.str.143 = private unnamed_addr constant [16 x i8] c"wait_until_sent\00", align 1
@.str.144 = private unnamed_addr constant [26 x i8] c"%s wait_until_sent entry\0A\00", align 1
@.str.145 = private unnamed_addr constant [25 x i8] c"%s wait_until_sent exit\0A\00", align 1
@.str.146 = private unnamed_addr constant [11 x i8] c"send_xchar\00", align 1
@.str.147 = private unnamed_addr constant [19 x i8] c"%s send_xchar(%d)\0A\00", align 1
@.str.148 = private unnamed_addr constant [24 x i8] c"%s tiocmget value=%08X\0A\00", align 1
@.str.149 = private unnamed_addr constant [20 x i8] c"%s tiocmset(%x,%x)\0A\00", align 1
@.str.150 = private unnamed_addr constant [20 x i8] c"synclink_gt driver\0A\00", align 1
@.str.151 = private unnamed_addr constant [36 x i8] c"%s: IO=%08X IRQ=%d MaxFrameSize=%u\0A\00", align 1
@.str.152 = private unnamed_addr constant [5 x i8] c"|RTS\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"|CTS\00", align 1
@.str.154 = private unnamed_addr constant [5 x i8] c"|DTR\00", align 1
@.str.155 = private unnamed_addr constant [5 x i8] c"|DSR\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"|CD\00", align 1
@.str.157 = private unnamed_addr constant [4 x i8] c"|RI\00", align 1
@.str.158 = private unnamed_addr constant [22 x i8] c"\09HDLC txok:%d rxok:%d\00", align 1
@.str.159 = private unnamed_addr constant [12 x i8] c" txunder:%d\00", align 1
@.str.160 = private unnamed_addr constant [12 x i8] c" txabort:%d\00", align 1
@.str.161 = private unnamed_addr constant [12 x i8] c" rxshort:%d\00", align 1
@.str.162 = private unnamed_addr constant [11 x i8] c" rxlong:%d\00", align 1
@.str.163 = private unnamed_addr constant [11 x i8] c" rxover:%d\00", align 1
@.str.164 = private unnamed_addr constant [10 x i8] c" rxcrc:%d\00", align 1
@.str.165 = private unnamed_addr constant [19 x i8] c"\09ASYNC tx:%d rx:%d\00", align 1
@.str.166 = private unnamed_addr constant [7 x i8] c" fe:%d\00", align 1
@.str.167 = private unnamed_addr constant [7 x i8] c" pe:%d\00", align 1
@.str.168 = private unnamed_addr constant [8 x i8] c" brk:%d\00", align 1
@.str.169 = private unnamed_addr constant [7 x i8] c" oe:%d\00", align 1
@.str.170 = private unnamed_addr constant [5 x i8] c" %s\0A\00", align 1
@.str.171 = private unnamed_addr constant [48 x i8] c"\09txactive=%d bh_req=%d bh_run=%d pending_bh=%x\0A\00", align 1
@llvm.used = appending global [14 x i8*] [i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_file319, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_license320, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ttymajor to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_ttymajortype321, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug_level to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_debug_leveltype322, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_maxframe to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_maxframetype323, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__UNIQUE_ID_ttymajor324, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__UNIQUE_ID_debug_level325, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__UNIQUE_ID_maxframe326, i32 0, i32 0), i8* bitcast (void ()* @slgt_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_slgt_init342 to i8*), i8* bitcast (void ()** @__exitcall_slgt_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @slgt_exit() #0 section ".exit.text" !dbg !8144 {
entry:
  call void @slgt_cleanup() #11, !dbg !8145
  ret void, !dbg !8146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @slgt_cleanup() #1 !dbg !8147 {
entry:
  %rc = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !8150, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %tmp, metadata !8152, metadata !DIExpression()), !dbg !8153
  %0 = load i8*, i8** @driver_name, align 8, !dbg !8154
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %0) #12, !dbg !8155
  %1 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8156
  %tobool = icmp ne %struct.tty_driver* %1, null, !dbg !8156
  br i1 %tobool, label %if.then, label %if.end8, !dbg !8158

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !8159
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !8162
  br label %for.cond, !dbg !8163

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8164
  %cmp = icmp ne %struct.slgt_info* %3, null, !dbg !8166
  br i1 %cmp, label %for.body, label %for.end, !dbg !8167

for.body:                                         ; preds = %for.cond
  %4 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8168
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8169
  %line = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 10, !dbg !8170
  %6 = load i32, i32* %line, align 8, !dbg !8170
  call void @tty_unregister_device(%struct.tty_driver* %4, i32 %6) #11, !dbg !8171
  br label %for.inc, !dbg !8171

for.inc:                                          ; preds = %for.body
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8172
  %next_device = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 2, !dbg !8173
  %8 = load %struct.slgt_info*, %struct.slgt_info** %next_device, align 8, !dbg !8173
  store %struct.slgt_info* %8, %struct.slgt_info** %info, align 8, !dbg !8174
  br label %for.cond, !dbg !8175, !llvm.loop !8176

for.end:                                          ; preds = %for.cond
  %9 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8178
  %call1 = call i32 @tty_unregister_driver(%struct.tty_driver* %9) #11, !dbg !8179
  store i32 %call1, i32* %rc, align 4, !dbg !8180
  %10 = load i32, i32* %rc, align 4, !dbg !8181
  %tobool2 = icmp ne i32 %10, 0, !dbg !8181
  br i1 %tobool2, label %if.then3, label %if.end7, !dbg !8183

if.then3:                                         ; preds = %for.end
  %11 = load i32, i32* @debug_level, align 4, !dbg !8184
  %cmp4 = icmp sge i32 %11, 2, !dbg !8184
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8186

if.then5:                                         ; preds = %if.then3
  %12 = load i32, i32* %rc, align 4, !dbg !8184
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 %12) #12, !dbg !8184
  br label %if.end, !dbg !8184

if.end:                                           ; preds = %if.then5, %if.then3
  br label %if.end7, !dbg !8184

if.end7:                                          ; preds = %if.end, %for.end
  %13 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8187
  call void @put_tty_driver(%struct.tty_driver* %13) #11, !dbg !8188
  br label %if.end8, !dbg !8189

if.end8:                                          ; preds = %if.end7, %entry
  %14 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !8190
  store %struct.slgt_info* %14, %struct.slgt_info** %info, align 8, !dbg !8191
  br label %while.cond, !dbg !8192

while.cond:                                       ; preds = %while.body, %if.end8
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8193
  %tobool9 = icmp ne %struct.slgt_info* %15, null, !dbg !8192
  br i1 %tobool9, label %while.body, label %while.end, !dbg !8192

while.body:                                       ; preds = %while.cond
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8194
  call void @reset_port(%struct.slgt_info* %16) #11, !dbg !8196
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8197
  %next_device10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 2, !dbg !8198
  %18 = load %struct.slgt_info*, %struct.slgt_info** %next_device10, align 8, !dbg !8198
  store %struct.slgt_info* %18, %struct.slgt_info** %info, align 8, !dbg !8199
  br label %while.cond, !dbg !8192, !llvm.loop !8200

while.end:                                        ; preds = %while.cond
  %19 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !8202
  store %struct.slgt_info* %19, %struct.slgt_info** %info, align 8, !dbg !8203
  br label %while.cond11, !dbg !8204

while.cond11:                                     ; preds = %if.end16, %while.end
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8205
  %tobool12 = icmp ne %struct.slgt_info* %20, null, !dbg !8204
  br i1 %tobool12, label %while.body13, label %while.end18, !dbg !8204

while.body13:                                     ; preds = %while.cond11
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8206
  call void @hdlcdev_exit(%struct.slgt_info* %21) #11, !dbg !8208
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8209
  call void @free_dma_bufs(%struct.slgt_info* %22) #11, !dbg !8210
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8211
  call void @free_tmp_rbuf(%struct.slgt_info* %23) #11, !dbg !8212
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8213
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 8, !dbg !8215
  %25 = load i32, i32* %port_num, align 8, !dbg !8215
  %cmp14 = icmp eq i32 %25, 0, !dbg !8216
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !8217

if.then15:                                        ; preds = %while.body13
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8218
  call void @release_resources(%struct.slgt_info* %26) #11, !dbg !8219
  br label %if.end16, !dbg !8219

if.end16:                                         ; preds = %if.then15, %while.body13
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8220
  store %struct.slgt_info* %27, %struct.slgt_info** %tmp, align 8, !dbg !8221
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !8222
  %next_device17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 2, !dbg !8223
  %29 = load %struct.slgt_info*, %struct.slgt_info** %next_device17, align 8, !dbg !8223
  store %struct.slgt_info* %29, %struct.slgt_info** %info, align 8, !dbg !8224
  %30 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !8225
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 1, !dbg !8226
  call void @tty_port_destroy(%struct.tty_port* %port) #11, !dbg !8227
  %31 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !8228
  %32 = bitcast %struct.slgt_info* %31 to i8*, !dbg !8228
  call void @kfree(i8* %32) #11, !dbg !8229
  br label %while.cond11, !dbg !8204, !llvm.loop !8230

while.end18:                                      ; preds = %while.cond11
  %33 = load i8, i8* @pci_registered, align 1, !dbg !8232
  %tobool19 = trunc i8 %33 to i1, !dbg !8232
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8234

if.then20:                                        ; preds = %while.end18
  call void @pci_unregister_driver(%struct.pci_driver* @pci_driver) #11, !dbg !8235
  br label %if.end21, !dbg !8235

if.end21:                                         ; preds = %if.then20, %while.end18
  ret void, !dbg !8236
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @slgt_init() #0 section ".init.text" !dbg !8237 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8240, metadata !DIExpression()), !dbg !8241
  %0 = load i8*, i8** @driver_name, align 8, !dbg !8242
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0), i8* %0) #12, !dbg !8243
  %call1 = call %struct.tty_driver* @alloc_tty_driver(i32 32) #11, !dbg !8244
  store %struct.tty_driver* %call1, %struct.tty_driver** @serial_driver, align 8, !dbg !8245
  %1 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8246
  %tobool = icmp ne %struct.tty_driver* %1, null, !dbg !8246
  br i1 %tobool, label %if.end, label %if.then, !dbg !8248

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** @driver_name, align 8, !dbg !8249
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.78, i64 0, i64 0), i8* %2) #12, !dbg !8251
  store i32 -12, i32* %retval, align 4, !dbg !8252
  br label %return, !dbg !8252

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** @slgt_driver_name, align 8, !dbg !8253
  %4 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8254
  %driver_name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %4, i32 0, i32 4, !dbg !8255
  store i8* %3, i8** %driver_name, align 8, !dbg !8256
  %5 = load i8*, i8** @tty_dev_prefix, align 8, !dbg !8257
  %6 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8258
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 5, !dbg !8259
  store i8* %5, i8** %name, align 8, !dbg !8260
  %7 = load i32, i32* @ttymajor, align 4, !dbg !8261
  %8 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8262
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %8, i32 0, i32 7, !dbg !8263
  store i32 %7, i32* %major, align 4, !dbg !8264
  %9 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8265
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %9, i32 0, i32 8, !dbg !8266
  store i32 64, i32* %minor_start, align 8, !dbg !8267
  %10 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8268
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 10, !dbg !8269
  store i16 3, i16* %type, align 8, !dbg !8270
  %11 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8271
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %11, i32 0, i32 11, !dbg !8272
  store i16 1, i16* %subtype, align 2, !dbg !8273
  %12 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8274
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %12, i32 0, i32 12, !dbg !8275
  %13 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !8276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !8276
  %14 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8277
  %init_termios3 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %14, i32 0, i32 12, !dbg !8278
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios3, i32 0, i32 2, !dbg !8279
  store i32 3261, i32* %c_cflag, align 4, !dbg !8280
  %15 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8281
  %init_termios4 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %15, i32 0, i32 12, !dbg !8282
  %c_ispeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios4, i32 0, i32 6, !dbg !8283
  store i32 9600, i32* %c_ispeed, align 4, !dbg !8284
  %16 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8285
  %init_termios5 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %16, i32 0, i32 12, !dbg !8286
  %c_ospeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios5, i32 0, i32 7, !dbg !8287
  store i32 9600, i32* %c_ospeed, align 4, !dbg !8288
  %17 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8289
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %17, i32 0, i32 13, !dbg !8290
  store i64 12, i64* %flags, align 8, !dbg !8291
  %18 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8292
  call void @tty_set_operations(%struct.tty_driver* %18, %struct.tty_operations* @ops) #11, !dbg !8293
  %19 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8294
  %call6 = call i32 @tty_register_driver(%struct.tty_driver* %19) #11, !dbg !8296
  store i32 %call6, i32* %rc, align 4, !dbg !8297
  %cmp = icmp slt i32 %call6, 0, !dbg !8298
  br i1 %cmp, label %if.then7, label %if.end12, !dbg !8299

if.then7:                                         ; preds = %if.end
  %20 = load i32, i32* @debug_level, align 4, !dbg !8300
  %cmp8 = icmp sge i32 %20, 2, !dbg !8300
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !8303

if.then9:                                         ; preds = %if.then7
  %21 = load i8*, i8** @driver_name, align 8, !dbg !8300
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.79, i64 0, i64 0), i8* %21) #12, !dbg !8300
  br label %if.end11, !dbg !8300

if.end11:                                         ; preds = %if.then9, %if.then7
  %22 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8304
  call void @put_tty_driver(%struct.tty_driver* %22) #11, !dbg !8305
  store %struct.tty_driver* null, %struct.tty_driver** @serial_driver, align 8, !dbg !8306
  br label %error, !dbg !8307

if.end12:                                         ; preds = %if.end
  %23 = load i8*, i8** @driver_name, align 8, !dbg !8308
  %24 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !8309
  %major13 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %24, i32 0, i32 7, !dbg !8310
  %25 = load i32, i32* %major13, align 4, !dbg !8310
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i8* %23, i32 %25) #12, !dbg !8311
  store i32 0, i32* @slgt_device_count, align 4, !dbg !8312
  %call15 = call i32 @__pci_register_driver(%struct.pci_driver* @pci_driver, %struct.module* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !8313
  store i32 %call15, i32* %rc, align 4, !dbg !8315
  %cmp16 = icmp slt i32 %call15, 0, !dbg !8316
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !8317

if.then17:                                        ; preds = %if.end12
  %26 = load i8*, i8** @driver_name, align 8, !dbg !8318
  %27 = load i32, i32* %rc, align 4, !dbg !8320
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.81, i64 0, i64 0), i8* %26, i32 %27) #12, !dbg !8321
  br label %error, !dbg !8322

if.end19:                                         ; preds = %if.end12
  store i8 1, i8* @pci_registered, align 1, !dbg !8323
  %28 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !8324
  %tobool20 = icmp ne %struct.slgt_info* %28, null, !dbg !8324
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !8326

if.then21:                                        ; preds = %if.end19
  %29 = load i8*, i8** @driver_name, align 8, !dbg !8327
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i64 0, i64 0), i8* %29) #12, !dbg !8328
  br label %if.end23, !dbg !8328

if.end23:                                         ; preds = %if.then21, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !8329
  br label %return, !dbg !8329

error:                                            ; preds = %if.then17, %if.end11
  call void @llvm.dbg.label(metadata !8330), !dbg !8331
  call void @slgt_cleanup() #11, !dbg !8332
  %30 = load i32, i32* %rc, align 4, !dbg !8333
  store i32 %30, i32* %retval, align 4, !dbg !8334
  br label %return, !dbg !8334

return:                                           ; preds = %error, %if.end23, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !8335
  ret i32 %31, !dbg !8335
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @tty_unregister_device(%struct.tty_driver*, i32) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #4

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_port(%struct.slgt_info* %info) #1 !dbg !8336 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8341
  %reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8343
  %1 = load i8*, i8** %reg_addr, align 8, !dbg !8343
  %tobool = icmp ne i8* %1, null, !dbg !8341
  br i1 %tobool, label %if.end, label %if.then, !dbg !8344

if.then:                                          ; preds = %entry
  br label %return, !dbg !8345

if.end:                                           ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8346
  call void @tx_stop(%struct.slgt_info* %2) #11, !dbg !8347
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8348
  call void @rx_stop(%struct.slgt_info* %3) #11, !dbg !8349
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8350
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 49, !dbg !8351
  %5 = load i8, i8* %signals, align 4, !dbg !8352
  %conv = zext i8 %5 to i32, !dbg !8352
  %and = and i32 %conv, -161, !dbg !8352
  %conv1 = trunc i32 %and to i8, !dbg !8352
  store i8 %conv1, i8* %signals, align 4, !dbg !8352
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8353
  call void @set_signals(%struct.slgt_info* %6) #11, !dbg !8354
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8355
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8355
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %8, i32 140) #11, !dbg !8355
  %conv2 = zext i16 %call to i32, !dbg !8355
  %and3 = and i32 %conv2, -16370, !dbg !8355
  %conv4 = trunc i32 %and3 to i16, !dbg !8355
  call void @wr_reg16(%struct.slgt_info* %7, i32 140, i16 zeroext %conv4) #11, !dbg !8355
  br label %return, !dbg !8356

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_exit(%struct.slgt_info* %info) #1 !dbg !8357 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8360
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 76, !dbg !8361
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !8361
  call void @unregister_hdlc_device(%struct.net_device* %1) #11, !dbg !8362
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8363
  %netdev1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 76, !dbg !8364
  %3 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !8364
  call void @free_netdev(%struct.net_device* %3) #11, !dbg !8365
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8366
  %netdev2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 76, !dbg !8367
  store %struct.net_device* null, %struct.net_device** %netdev2, align 8, !dbg !8368
  ret void, !dbg !8369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_dma_bufs(%struct.slgt_info* %info) #1 !dbg !8370 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8371, metadata !DIExpression()), !dbg !8372
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8373
  %bufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 60, !dbg !8375
  %1 = load i8*, i8** %bufs, align 8, !dbg !8375
  %tobool = icmp ne i8* %1, null, !dbg !8373
  br i1 %tobool, label %if.then, label %if.end, !dbg !8376

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8377
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8379
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 63, !dbg !8380
  %4 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !8380
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8381
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 62, !dbg !8382
  %6 = load i32, i32* %rbuf_count, align 8, !dbg !8382
  call void @free_bufs(%struct.slgt_info* %2, %struct.slgt_desc* %4, i32 %6) #11, !dbg !8383
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8384
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8385
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 69, !dbg !8386
  %9 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !8386
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8387
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 68, !dbg !8388
  %11 = load i32, i32* %tbuf_count, align 8, !dbg !8388
  call void @free_bufs(%struct.slgt_info* %7, %struct.slgt_desc* %9, i32 %11) #11, !dbg !8389
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8390
  call void @free_desc(%struct.slgt_info* %12) #11, !dbg !8391
  br label %if.end, !dbg !8392

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8393
  call void @free_tmp_rbuf(%struct.slgt_info* %13) #11, !dbg !8394
  ret void, !dbg !8395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_tmp_rbuf(%struct.slgt_info* %info) #1 !dbg !8396 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8399
  %tmp_rbuf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 72, !dbg !8400
  %1 = load i8*, i8** %tmp_rbuf, align 8, !dbg !8400
  call void @kfree(i8* %1) #11, !dbg !8401
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8402
  %tmp_rbuf1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 72, !dbg !8403
  store i8* null, i8** %tmp_rbuf1, align 8, !dbg !8404
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8405
  %flag_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 53, !dbg !8406
  %4 = load i8*, i8** %flag_buf, align 8, !dbg !8406
  call void @kfree(i8* %4) #11, !dbg !8407
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8408
  %flag_buf2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 53, !dbg !8409
  store i8* null, i8** %flag_buf2, align 8, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_resources(%struct.slgt_info* %info) #1 !dbg !8412 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8413, metadata !DIExpression()), !dbg !8414
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8415
  %irq_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 28, !dbg !8417
  %1 = load i8, i8* %irq_requested, align 4, !dbg !8417
  %tobool = trunc i8 %1 to i1, !dbg !8417
  br i1 %tobool, label %if.then, label %if.end, !dbg !8418

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8419
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 31, !dbg !8421
  %3 = load i32, i32* %irq_level, align 4, !dbg !8421
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8422
  %5 = bitcast %struct.slgt_info* %4 to i8*, !dbg !8422
  %call = call i8* @free_irq(i32 %3, i8* %5) #11, !dbg !8423
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8424
  %irq_requested1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 28, !dbg !8425
  store i8 0, i8* %irq_requested1, align 4, !dbg !8426
  br label %if.end, !dbg !8427

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8428
  %reg_addr_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 35, !dbg !8430
  %8 = load i8, i8* %reg_addr_requested, align 4, !dbg !8430
  %tobool2 = trunc i8 %8 to i1, !dbg !8430
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8431

if.then3:                                         ; preds = %if.end
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8432
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 34, !dbg !8432
  %10 = load i32, i32* %phys_reg_addr, align 8, !dbg !8432
  %conv = zext i32 %10 to i64, !dbg !8432
  call void @__release_region(%struct.resource* @iomem_resource, i64 %conv, i64 256) #11, !dbg !8432
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8434
  %reg_addr_requested4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 35, !dbg !8435
  store i8 0, i8* %reg_addr_requested4, align 4, !dbg !8436
  br label %if.end5, !dbg !8437

if.end5:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8438
  %reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 33, !dbg !8440
  %13 = load i8*, i8** %reg_addr, align 8, !dbg !8440
  %tobool6 = icmp ne i8* %13, null, !dbg !8438
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !8441

if.then7:                                         ; preds = %if.end5
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8442
  %reg_addr8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 33, !dbg !8444
  %15 = load i8*, i8** %reg_addr8, align 8, !dbg !8444
  call void @iounmap(i8* %15) #11, !dbg !8445
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8446
  %reg_addr9 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 33, !dbg !8447
  store i8* null, i8** %reg_addr9, align 8, !dbg !8448
  br label %if.end10, !dbg !8449

if.end10:                                         ; preds = %if.then7, %if.end5
  ret void, !dbg !8450
}

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #4

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #4

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_stop(%struct.slgt_info* %info) #1 !dbg !8451 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8452, metadata !DIExpression()), !dbg !8453
  call void @llvm.dbg.declare(metadata i16* %val, metadata !8454, metadata !DIExpression()), !dbg !8455
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8456
  %tx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 18, !dbg !8457
  %call = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !8458
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8459
  call void @tdma_reset(%struct.slgt_info* %1) #11, !dbg !8460
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8461
  %call1 = call zeroext i16 @rd_reg16(%struct.slgt_info* %2, i32 130) #11, !dbg !8462
  %conv = zext i16 %call1 to i32, !dbg !8462
  %and = and i32 %conv, -3, !dbg !8463
  %conv2 = trunc i32 %and to i16, !dbg !8462
  store i16 %conv2, i16* %val, align 2, !dbg !8464
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8465
  %4 = load i16, i16* %val, align 2, !dbg !8466
  %conv3 = zext i16 %4 to i32, !dbg !8466
  %or = or i32 %conv3, 4, !dbg !8467
  %conv4 = trunc i32 %or to i16, !dbg !8468
  call void @wr_reg16(%struct.slgt_info* %3, i32 130, i16 zeroext %conv4) #11, !dbg !8469
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8470
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8470
  %call5 = call zeroext i16 @rd_reg16(%struct.slgt_info* %6, i32 140) #11, !dbg !8470
  %conv6 = zext i16 %call5 to i32, !dbg !8470
  %and7 = and i32 %conv6, -14337, !dbg !8470
  %conv8 = trunc i32 %and7 to i16, !dbg !8470
  call void @wr_reg16(%struct.slgt_info* %5, i32 140, i16 zeroext %conv8) #11, !dbg !8470
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8471
  call void @wr_reg16(%struct.slgt_info* %7, i32 142, i16 zeroext 6144) #11, !dbg !8472
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8473
  call void @reset_tbufs(%struct.slgt_info* %8) #11, !dbg !8474
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8475
  %tx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 47, !dbg !8476
  store i8 0, i8* %tx_enabled, align 2, !dbg !8477
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8478
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 48, !dbg !8479
  store i8 0, i8* %tx_active, align 1, !dbg !8480
  ret void, !dbg !8481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_stop(%struct.slgt_info* %info) #1 !dbg !8482 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8483, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.declare(metadata i16* %val, metadata !8485, metadata !DIExpression()), !dbg !8486
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8487
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %0, i32 134) #11, !dbg !8488
  %conv = zext i16 %call to i32, !dbg !8488
  %and = and i32 %conv, -3, !dbg !8489
  %conv1 = trunc i32 %and to i16, !dbg !8488
  store i16 %conv1, i16* %val, align 2, !dbg !8490
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8491
  %2 = load i16, i16* %val, align 2, !dbg !8492
  %conv2 = zext i16 %2 to i32, !dbg !8492
  %or = or i32 %conv2, 4, !dbg !8493
  %conv3 = trunc i32 %or to i16, !dbg !8494
  call void @wr_reg16(%struct.slgt_info* %1, i32 134, i16 zeroext %conv3) #11, !dbg !8495
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8496
  %4 = load i16, i16* %val, align 2, !dbg !8497
  call void @wr_reg16(%struct.slgt_info* %3, i32 134, i16 zeroext %4) #11, !dbg !8498
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8499
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8499
  %call4 = call zeroext i16 @rd_reg16(%struct.slgt_info* %6, i32 140) #11, !dbg !8499
  %conv5 = zext i16 %call4 to i32, !dbg !8499
  %and6 = and i32 %conv5, -1793, !dbg !8499
  %conv7 = trunc i32 %and6 to i16, !dbg !8499
  call void @wr_reg16(%struct.slgt_info* %5, i32 140, i16 zeroext %conv7) #11, !dbg !8499
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8500
  call void @wr_reg16(%struct.slgt_info* %7, i32 142, i16 zeroext 768) #11, !dbg !8501
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8502
  call void @rdma_reset(%struct.slgt_info* %8) #11, !dbg !8503
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8504
  %rx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 45, !dbg !8505
  store i8 0, i8* %rx_enabled, align 8, !dbg !8506
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8507
  %rx_restart = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 46, !dbg !8508
  store i8 0, i8* %rx_restart, align 1, !dbg !8509
  ret void, !dbg !8510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_signals(%struct.slgt_info* %info) #1 !dbg !8511 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i8, align 1
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata i8* %val, metadata !8514, metadata !DIExpression()), !dbg !8515
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8516
  %call = call zeroext i8 @rd_reg8(%struct.slgt_info* %0, i32 136) #11, !dbg !8517
  store i8 %call, i8* %val, align 1, !dbg !8515
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8518
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !8520
  %2 = load i8, i8* %signals, align 4, !dbg !8520
  %conv = zext i8 %2 to i32, !dbg !8518
  %and = and i32 %conv, 128, !dbg !8521
  %tobool = icmp ne i32 %and, 0, !dbg !8521
  br i1 %tobool, label %if.then, label %if.else, !dbg !8522

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %val, align 1, !dbg !8523
  %conv1 = zext i8 %3 to i32, !dbg !8523
  %or = or i32 %conv1, 8, !dbg !8523
  %conv2 = trunc i32 %or to i8, !dbg !8523
  store i8 %conv2, i8* %val, align 1, !dbg !8523
  br label %if.end, !dbg !8524

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %val, align 1, !dbg !8525
  %conv3 = zext i8 %4 to i32, !dbg !8525
  %and4 = and i32 %conv3, -9, !dbg !8525
  %conv5 = trunc i32 %and4 to i8, !dbg !8525
  store i8 %conv5, i8* %val, align 1, !dbg !8525
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8526
  %signals6 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 49, !dbg !8528
  %6 = load i8, i8* %signals6, align 4, !dbg !8528
  %conv7 = zext i8 %6 to i32, !dbg !8526
  %and8 = and i32 %conv7, 32, !dbg !8529
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8529
  br i1 %tobool9, label %if.then10, label %if.else14, !dbg !8530

if.then10:                                        ; preds = %if.end
  %7 = load i8, i8* %val, align 1, !dbg !8531
  %conv11 = zext i8 %7 to i32, !dbg !8531
  %or12 = or i32 %conv11, 4, !dbg !8531
  %conv13 = trunc i32 %or12 to i8, !dbg !8531
  store i8 %conv13, i8* %val, align 1, !dbg !8531
  br label %if.end18, !dbg !8532

if.else14:                                        ; preds = %if.end
  %8 = load i8, i8* %val, align 1, !dbg !8533
  %conv15 = zext i8 %8 to i32, !dbg !8533
  %and16 = and i32 %conv15, -5, !dbg !8533
  %conv17 = trunc i32 %and16 to i8, !dbg !8533
  store i8 %conv17, i8* %val, align 1, !dbg !8533
  br label %if.end18

if.end18:                                         ; preds = %if.else14, %if.then10
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8534
  %10 = load i8, i8* %val, align 1, !dbg !8535
  call void @wr_reg8(%struct.slgt_info* %9, i32 136, i8 zeroext %10) #11, !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wr_reg16(%struct.slgt_info* %info, i32 %addr, i16 zeroext %value) #1 !dbg !8538 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %value.addr = alloca i16, align 2
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8541, metadata !DIExpression()), !dbg !8542
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8548
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8548
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8548
  %2 = ptrtoint i8* %1 to i64, !dbg !8548
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8548
  %conv = zext i32 %3 to i64, !dbg !8548
  %add = add i64 %2, %conv, !dbg !8548
  store i64 %add, i64* %reg_addr, align 8, !dbg !8548
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8549
  %cmp = icmp uge i32 %4, 128, !dbg !8549
  br i1 %cmp, label %if.then, label %if.else, !dbg !8548

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8549
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8549
  %6 = load i32, i32* %port_num, align 8, !dbg !8549
  %mul = mul i32 %6, 32, !dbg !8549
  %conv3 = sext i32 %mul to i64, !dbg !8549
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8549
  %add4 = add i64 %7, %conv3, !dbg !8549
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8549
  br label %if.end12, !dbg !8549

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8551
  %cmp5 = icmp uge i32 %8, 64, !dbg !8551
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8549

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8551
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8551
  %10 = load i32, i32* %port_num8, align 8, !dbg !8551
  %mul9 = mul i32 %10, 16, !dbg !8551
  %conv10 = sext i32 %mul9 to i64, !dbg !8551
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8551
  %add11 = add i64 %11, %conv10, !dbg !8551
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8551
  br label %if.end, !dbg !8551

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i16, i16* %value.addr, align 2, !dbg !8553
  %13 = load i64, i64* %reg_addr, align 8, !dbg !8554
  %14 = inttoptr i64 %13 to i8*, !dbg !8555
  call void @writew(i16 zeroext %12, i8* %14) #11, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @rd_reg16(%struct.slgt_info* %info, i32 %addr) #1 !dbg !8558 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8565, metadata !DIExpression()), !dbg !8566
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8566
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8566
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8566
  %2 = ptrtoint i8* %1 to i64, !dbg !8566
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8566
  %conv = zext i32 %3 to i64, !dbg !8566
  %add = add i64 %2, %conv, !dbg !8566
  store i64 %add, i64* %reg_addr, align 8, !dbg !8566
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8567
  %cmp = icmp uge i32 %4, 128, !dbg !8567
  br i1 %cmp, label %if.then, label %if.else, !dbg !8566

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8567
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8567
  %6 = load i32, i32* %port_num, align 8, !dbg !8567
  %mul = mul i32 %6, 32, !dbg !8567
  %conv3 = sext i32 %mul to i64, !dbg !8567
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8567
  %add4 = add i64 %7, %conv3, !dbg !8567
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8567
  br label %if.end12, !dbg !8567

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8569
  %cmp5 = icmp uge i32 %8, 64, !dbg !8569
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8567

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8569
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8569
  %10 = load i32, i32* %port_num8, align 8, !dbg !8569
  %mul9 = mul i32 %10, 16, !dbg !8569
  %conv10 = sext i32 %mul9 to i64, !dbg !8569
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8569
  %add11 = add i64 %11, %conv10, !dbg !8569
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8569
  br label %if.end, !dbg !8569

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i64, i64* %reg_addr, align 8, !dbg !8571
  %13 = inttoptr i64 %12 to i8*, !dbg !8572
  %call = call zeroext i16 @readw(i8* %13) #11, !dbg !8573
  ret i16 %call, !dbg !8574
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tdma_reset(%struct.slgt_info* %info) #1 !dbg !8575 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8578, metadata !DIExpression()), !dbg !8579
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8580
  call void @wr_reg32(%struct.slgt_info* %0, i32 148, i32 2) #11, !dbg !8581
  store i32 0, i32* %i, align 4, !dbg !8582
  br label %for.cond, !dbg !8584

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8585
  %cmp = icmp ult i32 %1, 1000, !dbg !8587
  br i1 %cmp, label %for.body, label %for.end, !dbg !8588

for.body:                                         ; preds = %for.cond
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8589
  %call = call i32 @rd_reg32(%struct.slgt_info* %2, i32 148) #11, !dbg !8591
  %and = and i32 %call, 1, !dbg !8592
  %tobool = icmp ne i32 %and, 0, !dbg !8592
  br i1 %tobool, label %if.end, label %if.then, !dbg !8593

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8594

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8595

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !8596
  %inc = add i32 %3, 1, !dbg !8596
  store i32 %inc, i32* %i, align 4, !dbg !8596
  br label %for.cond, !dbg !8597, !llvm.loop !8598

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_tbufs(%struct.slgt_info* %info) #1 !dbg !8601 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8602, metadata !DIExpression()), !dbg !8603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8604, metadata !DIExpression()), !dbg !8605
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8606
  %tbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 70, !dbg !8607
  store i32 0, i32* %tbuf_current, align 8, !dbg !8608
  store i32 0, i32* %i, align 4, !dbg !8609
  br label %for.cond, !dbg !8611

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8612
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8614
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 68, !dbg !8615
  %3 = load i32, i32* %tbuf_count, align 8, !dbg !8615
  %cmp = icmp ult i32 %1, %3, !dbg !8616
  br i1 %cmp, label %for.body, label %for.end, !dbg !8617

for.body:                                         ; preds = %for.cond
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8618
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 69, !dbg !8620
  %5 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !8620
  %6 = load i32, i32* %i, align 4, !dbg !8621
  %idxprom = zext i32 %6 to i64, !dbg !8618
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %5, i64 %idxprom, !dbg !8618
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !8622
  store i16 0, i16* %status, align 2, !dbg !8623
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8624
  %tbufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 69, !dbg !8625
  %8 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs1, align 8, !dbg !8625
  %9 = load i32, i32* %i, align 4, !dbg !8626
  %idxprom2 = zext i32 %9 to i64, !dbg !8624
  %arrayidx3 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %8, i64 %idxprom2, !dbg !8624
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx3, i32 0, i32 0, !dbg !8627
  store i16 0, i16* %count, align 8, !dbg !8628
  br label %for.inc, !dbg !8629

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !8630
  %inc = add i32 %10, 1, !dbg !8630
  store i32 %inc, i32* %i, align 4, !dbg !8630
  br label %for.cond, !dbg !8631, !llvm.loop !8632

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wr_reg32(%struct.slgt_info* %info, i32 %addr, i32 %value) #1 !dbg !8635 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8642, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8645
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8645
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8645
  %2 = ptrtoint i8* %1 to i64, !dbg !8645
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8645
  %conv = zext i32 %3 to i64, !dbg !8645
  %add = add i64 %2, %conv, !dbg !8645
  store i64 %add, i64* %reg_addr, align 8, !dbg !8645
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8646
  %cmp = icmp uge i32 %4, 128, !dbg !8646
  br i1 %cmp, label %if.then, label %if.else, !dbg !8645

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8646
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8646
  %6 = load i32, i32* %port_num, align 8, !dbg !8646
  %mul = mul i32 %6, 32, !dbg !8646
  %conv3 = sext i32 %mul to i64, !dbg !8646
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8646
  %add4 = add i64 %7, %conv3, !dbg !8646
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8646
  br label %if.end12, !dbg !8646

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8648
  %cmp5 = icmp uge i32 %8, 64, !dbg !8648
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8646

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8648
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8648
  %10 = load i32, i32* %port_num8, align 8, !dbg !8648
  %mul9 = mul i32 %10, 16, !dbg !8648
  %conv10 = sext i32 %mul9 to i64, !dbg !8648
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8648
  %add11 = add i64 %11, %conv10, !dbg !8648
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8648
  br label %if.end, !dbg !8648

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i32, i32* %value.addr, align 4, !dbg !8650
  %13 = load i64, i64* %reg_addr, align 8, !dbg !8651
  %14 = inttoptr i64 %13 to i8*, !dbg !8652
  call void @writel(i32 %12, i8* %14) #11, !dbg !8653
  ret void, !dbg !8654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rd_reg32(%struct.slgt_info* %info, i32 %addr) #1 !dbg !8655 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8658, metadata !DIExpression()), !dbg !8659
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8660, metadata !DIExpression()), !dbg !8661
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8663
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8663
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8663
  %2 = ptrtoint i8* %1 to i64, !dbg !8663
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8663
  %conv = zext i32 %3 to i64, !dbg !8663
  %add = add i64 %2, %conv, !dbg !8663
  store i64 %add, i64* %reg_addr, align 8, !dbg !8663
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8664
  %cmp = icmp uge i32 %4, 128, !dbg !8664
  br i1 %cmp, label %if.then, label %if.else, !dbg !8663

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8664
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8664
  %6 = load i32, i32* %port_num, align 8, !dbg !8664
  %mul = mul i32 %6, 32, !dbg !8664
  %conv3 = sext i32 %mul to i64, !dbg !8664
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8664
  %add4 = add i64 %7, %conv3, !dbg !8664
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8664
  br label %if.end12, !dbg !8664

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8666
  %cmp5 = icmp uge i32 %8, 64, !dbg !8666
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8664

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8666
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8666
  %10 = load i32, i32* %port_num8, align 8, !dbg !8666
  %mul9 = mul i32 %10, 16, !dbg !8666
  %conv10 = sext i32 %mul9 to i64, !dbg !8666
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8666
  %add11 = add i64 %11, %conv10, !dbg !8666
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8666
  br label %if.end, !dbg !8666

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i64, i64* %reg_addr, align 8, !dbg !8668
  %13 = inttoptr i64 %12 to i8*, !dbg !8669
  %call = call i32 @readl(i8* %13) #11, !dbg !8670
  ret i32 %call, !dbg !8671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #1 !dbg !8672 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8680, metadata !DIExpression()), !dbg !8679
  %0 = load i32, i32* %val.addr, align 4, !dbg !8679
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8679
  %2 = bitcast i8* %1 to i32*, !dbg !8679
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #10, !dbg !8679, !srcloc !8681
  ret void, !dbg !8679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #1 !dbg !8682 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8689, metadata !DIExpression()), !dbg !8688
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8688
  %1 = bitcast i8* %0 to i32*, !dbg !8688
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #10, !dbg !8688, !srcloc !8690
  store i32 %2, i32* %ret, align 4, !dbg !8688
  %3 = load i32, i32* %ret, align 4, !dbg !8688
  ret i32 %3, !dbg !8688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rdma_reset(%struct.slgt_info* %info) #1 !dbg !8691 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8692, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8694, metadata !DIExpression()), !dbg !8695
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8696
  call void @wr_reg32(%struct.slgt_info* %0, i32 144, i32 2) #11, !dbg !8697
  store i32 0, i32* %i, align 4, !dbg !8698
  br label %for.cond, !dbg !8700

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8701
  %cmp = icmp ult i32 %1, 1000, !dbg !8703
  br i1 %cmp, label %for.body, label %for.end, !dbg !8704

for.body:                                         ; preds = %for.cond
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8705
  %call = call i32 @rd_reg32(%struct.slgt_info* %2, i32 144) #11, !dbg !8707
  %and = and i32 %call, 1, !dbg !8708
  %tobool = icmp ne i32 %and, 0, !dbg !8708
  br i1 %tobool, label %if.end, label %if.then, !dbg !8709

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !8710

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8711

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !8712
  %inc = add i32 %3, 1, !dbg !8712
  store i32 %inc, i32* %i, align 4, !dbg !8712
  br label %for.cond, !dbg !8713, !llvm.loop !8714

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !8716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @rd_reg8(%struct.slgt_info* %info, i32 %addr) #1 !dbg !8717 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8725
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8725
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8725
  %2 = ptrtoint i8* %1 to i64, !dbg !8725
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8725
  %conv = zext i32 %3 to i64, !dbg !8725
  %add = add i64 %2, %conv, !dbg !8725
  store i64 %add, i64* %reg_addr, align 8, !dbg !8725
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8726
  %cmp = icmp uge i32 %4, 128, !dbg !8726
  br i1 %cmp, label %if.then, label %if.else, !dbg !8725

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8726
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8726
  %6 = load i32, i32* %port_num, align 8, !dbg !8726
  %mul = mul i32 %6, 32, !dbg !8726
  %conv3 = sext i32 %mul to i64, !dbg !8726
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8726
  %add4 = add i64 %7, %conv3, !dbg !8726
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8726
  br label %if.end12, !dbg !8726

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8728
  %cmp5 = icmp uge i32 %8, 64, !dbg !8728
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8726

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8728
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8728
  %10 = load i32, i32* %port_num8, align 8, !dbg !8728
  %mul9 = mul i32 %10, 16, !dbg !8728
  %conv10 = sext i32 %mul9 to i64, !dbg !8728
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8728
  %add11 = add i64 %11, %conv10, !dbg !8728
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8728
  br label %if.end, !dbg !8728

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i64, i64* %reg_addr, align 8, !dbg !8730
  %13 = inttoptr i64 %12 to i8*, !dbg !8731
  %call = call zeroext i8 @readb(i8* %13) #11, !dbg !8732
  ret i8 %call, !dbg !8733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wr_reg8(%struct.slgt_info* %info, i32 %addr, i8 zeroext %value) #1 !dbg !8734 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %addr.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  %reg_addr = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata i64* %reg_addr, metadata !8743, metadata !DIExpression()), !dbg !8744
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8744
  %reg_addr1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 33, !dbg !8744
  %1 = load i8*, i8** %reg_addr1, align 8, !dbg !8744
  %2 = ptrtoint i8* %1 to i64, !dbg !8744
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8744
  %conv = zext i32 %3 to i64, !dbg !8744
  %add = add i64 %2, %conv, !dbg !8744
  store i64 %add, i64* %reg_addr, align 8, !dbg !8744
  %4 = load i32, i32* %addr.addr, align 4, !dbg !8745
  %cmp = icmp uge i32 %4, 128, !dbg !8745
  br i1 %cmp, label %if.then, label %if.else, !dbg !8744

if.then:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8745
  %port_num = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 8, !dbg !8745
  %6 = load i32, i32* %port_num, align 8, !dbg !8745
  %mul = mul i32 %6, 32, !dbg !8745
  %conv3 = sext i32 %mul to i64, !dbg !8745
  %7 = load i64, i64* %reg_addr, align 8, !dbg !8745
  %add4 = add i64 %7, %conv3, !dbg !8745
  store i64 %add4, i64* %reg_addr, align 8, !dbg !8745
  br label %if.end12, !dbg !8745

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8747
  %cmp5 = icmp uge i32 %8, 64, !dbg !8747
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8745

if.then7:                                         ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8747
  %port_num8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 8, !dbg !8747
  %10 = load i32, i32* %port_num8, align 8, !dbg !8747
  %mul9 = mul i32 %10, 16, !dbg !8747
  %conv10 = sext i32 %mul9 to i64, !dbg !8747
  %11 = load i64, i64* %reg_addr, align 8, !dbg !8747
  %add11 = add i64 %11, %conv10, !dbg !8747
  store i64 %add11, i64* %reg_addr, align 8, !dbg !8747
  br label %if.end, !dbg !8747

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %12 = load i8, i8* %value.addr, align 1, !dbg !8749
  %13 = load i64, i64* %reg_addr, align 8, !dbg !8750
  %14 = inttoptr i64 %13 to i8*, !dbg !8751
  call void @writeb(i8 zeroext %12, i8* %14) #11, !dbg !8752
  ret void, !dbg !8753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #1 !dbg !8754 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !8759, metadata !DIExpression()), !dbg !8758
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8758
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #10, !dbg !8758, !srcloc !8760
  store i8 %1, i8* %ret, align 1, !dbg !8758
  %2 = load i8, i8* %ret, align 1, !dbg !8758
  ret i8 %2, !dbg !8758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #1 !dbg !8761 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8766, metadata !DIExpression()), !dbg !8765
  %0 = load i8, i8* %val.addr, align 1, !dbg !8765
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8765
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #10, !dbg !8765, !srcloc !8767
  ret void, !dbg !8765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #1 !dbg !8768 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !8771, metadata !DIExpression()), !dbg !8772
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8773, metadata !DIExpression()), !dbg !8772
  %0 = load i16, i16* %val.addr, align 2, !dbg !8772
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8772
  %2 = bitcast i8* %1 to i16*, !dbg !8772
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #10, !dbg !8772, !srcloc !8774
  ret void, !dbg !8772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #1 !dbg !8775 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8778, metadata !DIExpression()), !dbg !8779
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !8780, metadata !DIExpression()), !dbg !8779
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8779
  %1 = bitcast i8* %0 to i16*, !dbg !8779
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #10, !dbg !8779, !srcloc !8781
  store i16 %2, i16* %ret, align 2, !dbg !8779
  %3 = load i16, i16* %ret, align 2, !dbg !8779
  ret i16 %3, !dbg !8779
}

; Function Attrs: noredzone
declare dso_local void @unregister_hdlc_device(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_bufs(%struct.slgt_info* %info, %struct.slgt_desc* %bufs, i32 %count) #1 !dbg !8782 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %bufs.addr = alloca %struct.slgt_desc*, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8785, metadata !DIExpression()), !dbg !8786
  store %struct.slgt_desc* %bufs, %struct.slgt_desc** %bufs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_desc** %bufs.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8791, metadata !DIExpression()), !dbg !8792
  store i32 0, i32* %i, align 4, !dbg !8793
  br label %for.cond, !dbg !8795

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8796
  %1 = load i32, i32* %count.addr, align 4, !dbg !8798
  %cmp = icmp slt i32 %0, %1, !dbg !8799
  br i1 %cmp, label %for.body, label %for.end, !dbg !8800

for.body:                                         ; preds = %for.cond
  %2 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !8801
  %3 = load i32, i32* %i, align 4, !dbg !8804
  %idxprom = sext i32 %3 to i64, !dbg !8801
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %2, i64 %idxprom, !dbg !8801
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 4, !dbg !8805
  %4 = load i8*, i8** %buf, align 8, !dbg !8805
  %cmp1 = icmp eq i8* %4, null, !dbg !8806
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8807

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8808

if.end:                                           ; preds = %for.body
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8809
  %pdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 5, !dbg !8810
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8810
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !8811
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !8812
  %8 = load i32, i32* %i, align 4, !dbg !8813
  %idxprom2 = sext i32 %8 to i64, !dbg !8812
  %arrayidx3 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 %idxprom2, !dbg !8812
  %buf4 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx3, i32 0, i32 4, !dbg !8814
  %9 = load i8*, i8** %buf4, align 8, !dbg !8814
  %10 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !8815
  %11 = load i32, i32* %i, align 4, !dbg !8816
  %idxprom5 = sext i32 %11 to i64, !dbg !8815
  %arrayidx6 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %10, i64 %idxprom5, !dbg !8815
  %buf_dma_addr = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx6, i32 0, i32 6, !dbg !8817
  %12 = load i64, i64* %buf_dma_addr, align 8, !dbg !8817
  call void @dma_free_coherent(%struct.device* %dev, i64 256, i8* %9, i64 %12) #11, !dbg !8818
  %13 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !8819
  %14 = load i32, i32* %i, align 4, !dbg !8820
  %idxprom7 = sext i32 %14 to i64, !dbg !8819
  %arrayidx8 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %13, i64 %idxprom7, !dbg !8819
  %buf9 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx8, i32 0, i32 4, !dbg !8821
  store i8* null, i8** %buf9, align 8, !dbg !8822
  br label %for.inc, !dbg !8823

for.inc:                                          ; preds = %if.end, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !8824
  %inc = add i32 %15, 1, !dbg !8824
  store i32 %inc, i32* %i, align 4, !dbg !8824
  br label %for.cond, !dbg !8825, !llvm.loop !8826

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_desc(%struct.slgt_info* %info) #1 !dbg !8829 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8832
  %bufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 60, !dbg !8834
  %1 = load i8*, i8** %bufs, align 8, !dbg !8834
  %cmp = icmp ne i8* %1, null, !dbg !8835
  br i1 %cmp, label %if.then, label %if.end, !dbg !8836

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8837
  %pdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 5, !dbg !8839
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !8839
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !8840
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8841
  %bufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 60, !dbg !8842
  %5 = load i8*, i8** %bufs1, align 8, !dbg !8842
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8843
  %bufs_dma_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 61, !dbg !8844
  %7 = load i64, i64* %bufs_dma_addr, align 8, !dbg !8844
  call void @dma_free_coherent(%struct.device* %dev, i64 4096, i8* %5, i64 %7) #11, !dbg !8845
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8846
  %bufs2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 60, !dbg !8847
  store i8* null, i8** %bufs2, align 8, !dbg !8848
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8849
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 63, !dbg !8850
  store %struct.slgt_desc* null, %struct.slgt_desc** %rbufs, align 8, !dbg !8851
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !8852
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 69, !dbg !8853
  store %struct.slgt_desc* null, %struct.slgt_desc** %tbufs, align 8, !dbg !8854
  br label %if.end, !dbg !8855

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #1 !dbg !8857 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8861, metadata !DIExpression()), !dbg !8862
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !8865, metadata !DIExpression()), !dbg !8866
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !8867, metadata !DIExpression()), !dbg !8868
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8869
  %1 = load i64, i64* %size.addr, align 8, !dbg !8870
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !8871
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !8872
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !8873
  ret void, !dbg !8874
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #4

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #4

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #4

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_one(%struct.pci_dev* %dev, %struct.pci_device_id* %ent) #1 !dbg !8875 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8880
  %call = call i32 @pci_enable_device(%struct.pci_dev* %0) #11, !dbg !8882
  %tobool = icmp ne i32 %call, 0, !dbg !8882
  br i1 %tobool, label %if.then, label %if.end, !dbg !8883

if.then:                                          ; preds = %entry
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8884
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), %struct.pci_dev* %1) #12, !dbg !8886
  store i32 -5, i32* %retval, align 4, !dbg !8887
  br label %return, !dbg !8887

if.end:                                           ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8888
  call void @pci_set_master(%struct.pci_dev* %2) #11, !dbg !8889
  %3 = load i32, i32* @slgt_device_count, align 4, !dbg !8890
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !8891
  call void @device_init(i32 %3, %struct.pci_dev* %4) #11, !dbg !8892
  store i32 0, i32* %retval, align 4, !dbg !8893
  br label %return, !dbg !8893

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8894
  ret i32 %5, !dbg !8894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_one(%struct.pci_dev* %dev) #1 !dbg !8895 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  ret void, !dbg !8898
}

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #4

; Function Attrs: noredzone
declare dso_local void @pci_set_master(%struct.pci_dev*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_init(i32 %adapter_num, %struct.pci_dev* %pdev) #1 !dbg !8899 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !8908
  %adapter_num.addr = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %port_array = alloca [4 x %struct.slgt_info*], align 16
  %i = alloca i32, align 4
  %port_count = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %info = alloca %struct.slgt_info*, align 8
  store i32 %adapter_num, i32* %adapter_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adapter_num.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.declare(metadata [4 x %struct.slgt_info*]* %port_array, metadata !8918, metadata !DIExpression()), !dbg !8919
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8920, metadata !DIExpression()), !dbg !8921
  call void @llvm.dbg.declare(metadata i32* %port_count, metadata !8922, metadata !DIExpression()), !dbg !8923
  store i32 1, i32* %port_count, align 4, !dbg !8923
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8924
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 8, !dbg !8926
  %1 = load i16, i16* %device, align 2, !dbg !8926
  %conv = zext i16 %1 to i32, !dbg !8924
  %cmp = icmp eq i32 %conv, 160, !dbg !8927
  br i1 %cmp, label %if.then, label %if.else, !dbg !8928

if.then:                                          ; preds = %entry
  store i32 2, i32* %port_count, align 4, !dbg !8929
  br label %if.end7, !dbg !8930

if.else:                                          ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8931
  %device2 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 8, !dbg !8933
  %3 = load i16, i16* %device2, align 2, !dbg !8933
  %conv3 = zext i16 %3 to i32, !dbg !8931
  %cmp4 = icmp eq i32 %conv3, 128, !dbg !8934
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !8935

if.then6:                                         ; preds = %if.else
  store i32 4, i32* %port_count, align 4, !dbg !8936
  br label %if.end, !dbg !8937

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  store i32 0, i32* %i, align 4, !dbg !8938
  br label %for.cond, !dbg !8940

for.cond:                                         ; preds = %for.inc25, %if.end7
  %4 = load i32, i32* %i, align 4, !dbg !8941
  %5 = load i32, i32* %port_count, align 4, !dbg !8943
  %cmp8 = icmp slt i32 %4, %5, !dbg !8944
  br i1 %cmp8, label %for.body, label %for.end26, !dbg !8945

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %adapter_num.addr, align 4, !dbg !8946
  %7 = load i32, i32* %i, align 4, !dbg !8948
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8949
  %call = call %struct.slgt_info* @alloc_dev(i32 %6, i32 %7, %struct.pci_dev* %8) #11, !dbg !8950
  %9 = load i32, i32* %i, align 4, !dbg !8951
  %idxprom = sext i32 %9 to i64, !dbg !8952
  %arrayidx = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom, !dbg !8952
  store %struct.slgt_info* %call, %struct.slgt_info** %arrayidx, align 8, !dbg !8953
  %10 = load i32, i32* %i, align 4, !dbg !8954
  %idxprom10 = sext i32 %10 to i64, !dbg !8956
  %arrayidx11 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom10, !dbg !8956
  %11 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx11, align 8, !dbg !8956
  %cmp12 = icmp eq %struct.slgt_info* %11, null, !dbg !8957
  br i1 %cmp12, label %if.then14, label %if.end24, !dbg !8958

if.then14:                                        ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !8959
  %dec = add i32 %12, -1, !dbg !8959
  store i32 %dec, i32* %i, align 4, !dbg !8959
  br label %for.cond15, !dbg !8959

for.cond15:                                       ; preds = %for.inc, %if.then14
  %13 = load i32, i32* %i, align 4, !dbg !8962
  %cmp16 = icmp sge i32 %13, 0, !dbg !8964
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !8965

for.body18:                                       ; preds = %for.cond15
  %14 = load i32, i32* %i, align 4, !dbg !8966
  %idxprom19 = sext i32 %14 to i64, !dbg !8968
  %arrayidx20 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom19, !dbg !8968
  %15 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx20, align 8, !dbg !8968
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 1, !dbg !8969
  call void @tty_port_destroy(%struct.tty_port* %port) #11, !dbg !8970
  %16 = load i32, i32* %i, align 4, !dbg !8971
  %idxprom21 = sext i32 %16 to i64, !dbg !8972
  %arrayidx22 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom21, !dbg !8972
  %17 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx22, align 8, !dbg !8972
  %18 = bitcast %struct.slgt_info* %17 to i8*, !dbg !8972
  call void @kfree(i8* %18) #11, !dbg !8973
  br label %for.inc, !dbg !8974

for.inc:                                          ; preds = %for.body18
  %19 = load i32, i32* %i, align 4, !dbg !8975
  %dec23 = add i32 %19, -1, !dbg !8975
  store i32 %dec23, i32* %i, align 4, !dbg !8975
  br label %for.cond15, !dbg !8976, !llvm.loop !8977

for.end:                                          ; preds = %for.cond15
  br label %for.end124, !dbg !8979

if.end24:                                         ; preds = %for.body
  br label %for.inc25, !dbg !8980

for.inc25:                                        ; preds = %if.end24
  %20 = load i32, i32* %i, align 4, !dbg !8981
  %inc = add i32 %20, 1, !dbg !8981
  store i32 %inc, i32* %i, align 4, !dbg !8981
  br label %for.cond, !dbg !8982, !llvm.loop !8983

for.end26:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8985
  br label %for.cond27, !dbg !8986

for.cond27:                                       ; preds = %for.inc46, %for.end26
  %21 = load i32, i32* %i, align 4, !dbg !8987
  %22 = load i32, i32* %port_count, align 4, !dbg !8988
  %cmp28 = icmp slt i32 %21, %22, !dbg !8989
  br i1 %cmp28, label %for.body30, label %for.end48, !dbg !8990

for.body30:                                       ; preds = %for.cond27
  %23 = load i32, i32* %i, align 4, !dbg !8991
  %idxprom31 = sext i32 %23 to i64, !dbg !8992
  %arrayidx32 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom31, !dbg !8992
  %24 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx32, align 8, !dbg !8992
  %port_array33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 9, !dbg !8993
  %arraydecay = getelementptr inbounds [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array33, i64 0, i64 0, !dbg !8994
  %25 = bitcast %struct.slgt_info** %arraydecay to i8*, !dbg !8994
  %arraydecay34 = getelementptr inbounds [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !8994
  %26 = bitcast %struct.slgt_info** %arraydecay34 to i8*, !dbg !8994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 16 %26, i64 32, i1 false), !dbg !8994
  %27 = load i32, i32* %i, align 4, !dbg !8995
  %idxprom35 = sext i32 %27 to i64, !dbg !8996
  %arrayidx36 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom35, !dbg !8996
  %28 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx36, align 8, !dbg !8996
  call void @add_device(%struct.slgt_info* %28) #11, !dbg !8997
  %29 = load i32, i32* %port_count, align 4, !dbg !8998
  %30 = load i32, i32* %i, align 4, !dbg !8999
  %idxprom37 = sext i32 %30 to i64, !dbg !9000
  %arrayidx38 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom37, !dbg !9000
  %31 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx38, align 8, !dbg !9000
  %port_count39 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 6, !dbg !9001
  store i32 %29, i32* %port_count39, align 8, !dbg !9002
  br label %do.body, !dbg !9003

do.body:                                          ; preds = %for.body30
  %32 = load i32, i32* %i, align 4, !dbg !9004
  %idxprom40 = sext i32 %32 to i64, !dbg !9004
  %arrayidx41 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom40, !dbg !9004
  %33 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx41, align 8, !dbg !9004
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 22, !dbg !9004
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9005
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9006
  %rlock.i = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !9006
  %36 = load i32, i32* %i, align 4, !dbg !9004
  %idxprom43 = sext i32 %36 to i64, !dbg !9004
  %arrayidx44 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom43, !dbg !9004
  %37 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx44, align 8, !dbg !9004
  %lock45 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 22, !dbg !9004
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !9004
  %rlock = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !9004
  %39 = bitcast %struct.spinlock* %lock45 to i8*, !dbg !9004
  %40 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !9004
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 1 %40, i64 0, i1 false), !dbg !9004
  br label %do.end, !dbg !9004

do.end:                                           ; preds = %do.body
  br label %for.inc46, !dbg !9007

for.inc46:                                        ; preds = %do.end
  %41 = load i32, i32* %i, align 4, !dbg !9008
  %inc47 = add i32 %41, 1, !dbg !9008
  store i32 %inc47, i32* %i, align 4, !dbg !9008
  br label %for.cond27, !dbg !9009, !llvm.loop !9010

for.end48:                                        ; preds = %for.cond27
  %arrayidx49 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9012
  %42 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx49, align 16, !dbg !9012
  %call50 = call i32 @claim_resources(%struct.slgt_info* %42) #11, !dbg !9014
  %tobool = icmp ne i32 %call50, 0, !dbg !9014
  br i1 %tobool, label %if.end112, label %if.then51, !dbg !9015

if.then51:                                        ; preds = %for.end48
  %arrayidx52 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9016
  %43 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx52, align 16, !dbg !9016
  %call53 = call i32 @alloc_dma_bufs(%struct.slgt_info* %43) #11, !dbg !9018
  store i32 1, i32* %i, align 4, !dbg !9019
  br label %for.cond54, !dbg !9021

for.cond54:                                       ; preds = %for.inc69, %if.then51
  %44 = load i32, i32* %i, align 4, !dbg !9022
  %45 = load i32, i32* %port_count, align 4, !dbg !9024
  %cmp55 = icmp slt i32 %44, %45, !dbg !9025
  br i1 %cmp55, label %for.body57, label %for.end71, !dbg !9026

for.body57:                                       ; preds = %for.cond54
  %arrayidx58 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9027
  %46 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx58, align 16, !dbg !9027
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 31, !dbg !9029
  %47 = load i32, i32* %irq_level, align 4, !dbg !9029
  %48 = load i32, i32* %i, align 4, !dbg !9030
  %idxprom59 = sext i32 %48 to i64, !dbg !9031
  %arrayidx60 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom59, !dbg !9031
  %49 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx60, align 8, !dbg !9031
  %irq_level61 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 31, !dbg !9032
  store i32 %47, i32* %irq_level61, align 4, !dbg !9033
  %arrayidx62 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9034
  %50 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx62, align 16, !dbg !9034
  %reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %50, i32 0, i32 33, !dbg !9035
  %51 = load i8*, i8** %reg_addr, align 8, !dbg !9035
  %52 = load i32, i32* %i, align 4, !dbg !9036
  %idxprom63 = sext i32 %52 to i64, !dbg !9037
  %arrayidx64 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom63, !dbg !9037
  %53 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx64, align 8, !dbg !9037
  %reg_addr65 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 33, !dbg !9038
  store i8* %51, i8** %reg_addr65, align 8, !dbg !9039
  %54 = load i32, i32* %i, align 4, !dbg !9040
  %idxprom66 = sext i32 %54 to i64, !dbg !9041
  %arrayidx67 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom66, !dbg !9041
  %55 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx67, align 8, !dbg !9041
  %call68 = call i32 @alloc_dma_bufs(%struct.slgt_info* %55) #11, !dbg !9042
  br label %for.inc69, !dbg !9043

for.inc69:                                        ; preds = %for.body57
  %56 = load i32, i32* %i, align 4, !dbg !9044
  %inc70 = add i32 %56, 1, !dbg !9044
  store i32 %inc70, i32* %i, align 4, !dbg !9044
  br label %for.cond54, !dbg !9045, !llvm.loop !9046

for.end71:                                        ; preds = %for.cond54
  %arrayidx72 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9048
  %57 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx72, align 16, !dbg !9048
  %irq_level73 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %57, i32 0, i32 31, !dbg !9050
  %58 = load i32, i32* %irq_level73, align 4, !dbg !9050
  %arrayidx74 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9051
  %59 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx74, align 16, !dbg !9051
  %irq_flags = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %59, i32 0, i32 32, !dbg !9052
  %60 = load i64, i64* %irq_flags, align 8, !dbg !9052
  %arrayidx75 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9053
  %61 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx75, align 16, !dbg !9053
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %61, i32 0, i32 4, !dbg !9054
  %arraydecay76 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9053
  %arrayidx77 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9055
  %62 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx77, align 16, !dbg !9055
  %63 = bitcast %struct.slgt_info* %62 to i8*, !dbg !9055
  %call78 = call i32 @request_irq(i32 %58, i32 (i32, i8*)* @slgt_interrupt, i64 %60, i8* %arraydecay76, i8* %63) #11, !dbg !9056
  %cmp79 = icmp slt i32 %call78, 0, !dbg !9057
  br i1 %cmp79, label %if.then81, label %if.else92, !dbg !9058

if.then81:                                        ; preds = %for.end71
  %64 = load i32, i32* @debug_level, align 4, !dbg !9059
  %cmp82 = icmp sge i32 %64, 2, !dbg !9059
  br i1 %cmp82, label %if.then84, label %if.end91, !dbg !9062

if.then84:                                        ; preds = %if.then81
  %arrayidx85 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9059
  %65 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx85, align 16, !dbg !9059
  %device_name86 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %65, i32 0, i32 4, !dbg !9059
  %arraydecay87 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name86, i64 0, i64 0, !dbg !9059
  %arrayidx88 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9059
  %66 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx88, align 16, !dbg !9059
  %irq_level89 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 31, !dbg !9059
  %67 = load i32, i32* %irq_level89, align 4, !dbg !9059
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay87, i32 %67) #12, !dbg !9059
  br label %if.end91, !dbg !9059

if.end91:                                         ; preds = %if.then84, %if.then81
  br label %if.end111, !dbg !9063

if.else92:                                        ; preds = %for.end71
  %arrayidx93 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9064
  %68 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx93, align 16, !dbg !9064
  %irq_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %68, i32 0, i32 28, !dbg !9066
  store i8 1, i8* %irq_requested, align 4, !dbg !9067
  %arrayidx94 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9068
  %69 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx94, align 16, !dbg !9068
  %call95 = call i32 @adapter_test(%struct.slgt_info* %69) #11, !dbg !9069
  store i32 1, i32* %i, align 4, !dbg !9070
  br label %for.cond96, !dbg !9072

for.cond96:                                       ; preds = %for.inc108, %if.else92
  %70 = load i32, i32* %i, align 4, !dbg !9073
  %71 = load i32, i32* %port_count, align 4, !dbg !9075
  %cmp97 = icmp slt i32 %70, %71, !dbg !9076
  br i1 %cmp97, label %for.body99, label %for.end110, !dbg !9077

for.body99:                                       ; preds = %for.cond96
  %arrayidx100 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9078
  %72 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx100, align 16, !dbg !9078
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 50, !dbg !9080
  %73 = load i32, i32* %init_error, align 8, !dbg !9080
  %74 = load i32, i32* %i, align 4, !dbg !9081
  %idxprom101 = sext i32 %74 to i64, !dbg !9082
  %arrayidx102 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom101, !dbg !9082
  %75 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx102, align 8, !dbg !9082
  %init_error103 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %75, i32 0, i32 50, !dbg !9083
  store i32 %73, i32* %init_error103, align 8, !dbg !9084
  %arrayidx104 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !9085
  %76 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx104, align 16, !dbg !9085
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 20, !dbg !9086
  %77 = load i32, i32* %gpio_present, align 8, !dbg !9086
  %78 = load i32, i32* %i, align 4, !dbg !9087
  %idxprom105 = sext i32 %78 to i64, !dbg !9088
  %arrayidx106 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom105, !dbg !9088
  %79 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx106, align 8, !dbg !9088
  %gpio_present107 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %79, i32 0, i32 20, !dbg !9089
  store i32 %77, i32* %gpio_present107, align 8, !dbg !9090
  br label %for.inc108, !dbg !9091

for.inc108:                                       ; preds = %for.body99
  %80 = load i32, i32* %i, align 4, !dbg !9092
  %inc109 = add i32 %80, 1, !dbg !9092
  store i32 %inc109, i32* %i, align 4, !dbg !9092
  br label %for.cond96, !dbg !9093, !llvm.loop !9094

for.end110:                                       ; preds = %for.cond96
  br label %if.end111

if.end111:                                        ; preds = %for.end110, %if.end91
  br label %if.end112, !dbg !9096

if.end112:                                        ; preds = %if.end111, %for.end48
  store i32 0, i32* %i, align 4, !dbg !9097
  br label %for.cond113, !dbg !9099

for.cond113:                                      ; preds = %for.inc122, %if.end112
  %81 = load i32, i32* %i, align 4, !dbg !9100
  %82 = load i32, i32* %port_count, align 4, !dbg !9102
  %cmp114 = icmp slt i32 %81, %82, !dbg !9103
  br i1 %cmp114, label %for.body116, label %for.end124, !dbg !9104

for.body116:                                      ; preds = %for.cond113
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !9105, metadata !DIExpression()), !dbg !9107
  %83 = load i32, i32* %i, align 4, !dbg !9108
  %idxprom117 = sext i32 %83 to i64, !dbg !9109
  %arrayidx118 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom117, !dbg !9109
  %84 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx118, align 8, !dbg !9109
  store %struct.slgt_info* %84, %struct.slgt_info** %info, align 8, !dbg !9107
  %85 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9110
  %port119 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %85, i32 0, i32 1, !dbg !9111
  %86 = load %struct.tty_driver*, %struct.tty_driver** @serial_driver, align 8, !dbg !9112
  %87 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9113
  %line = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %87, i32 0, i32 10, !dbg !9114
  %88 = load i32, i32* %line, align 8, !dbg !9114
  %89 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9115
  %pdev120 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %89, i32 0, i32 5, !dbg !9116
  %90 = load %struct.pci_dev*, %struct.pci_dev** %pdev120, align 8, !dbg !9116
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %90, i32 0, i32 41, !dbg !9117
  %call121 = call %struct.device* @tty_port_register_device(%struct.tty_port* %port119, %struct.tty_driver* %86, i32 %88, %struct.device* %dev) #11, !dbg !9118
  br label %for.inc122, !dbg !9119

for.inc122:                                       ; preds = %for.body116
  %91 = load i32, i32* %i, align 4, !dbg !9120
  %inc123 = add i32 %91, 1, !dbg !9120
  store i32 %inc123, i32* %i, align 4, !dbg !9120
  br label %for.cond113, !dbg !9121, !llvm.loop !9122

for.end124:                                       ; preds = %for.end, %for.cond113
  ret void, !dbg !9124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.slgt_info* @alloc_dev(i32 %adapter_num, i32 %port_num, %struct.pci_dev* %pdev) #1 !dbg !8103 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !9125
  %adapter_num.addr = alloca i32, align 4
  %port_num.addr = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral17 = alloca %struct.spinlock, align 1
  store i32 %adapter_num, i32* %adapter_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adapter_num.addr, metadata !9130, metadata !DIExpression()), !dbg !9131
  store i32 %port_num, i32* %port_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_num.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !9136, metadata !DIExpression()), !dbg !9137
  %call = call i8* @kzalloc(i64 1000, i32 3264) #11, !dbg !9138
  %0 = bitcast i8* %call to %struct.slgt_info*, !dbg !9138
  store %struct.slgt_info* %0, %struct.slgt_info** %info, align 8, !dbg !9139
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9140
  %tobool = icmp ne %struct.slgt_info* %1, null, !dbg !9140
  br i1 %tobool, label %if.else, label %if.then, !dbg !9141

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @debug_level, align 4, !dbg !9142
  %cmp = icmp sge i32 %2, 2, !dbg !9142
  br i1 %cmp, label %if.then1, label %if.end, !dbg !9145

if.then1:                                         ; preds = %if.then
  %3 = load i8*, i8** @driver_name, align 8, !dbg !9142
  %4 = load i32, i32* %adapter_num.addr, align 4, !dbg !9142
  %5 = load i32, i32* %port_num.addr, align 4, !dbg !9142
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0), i8* %3, i32 %4, i32 %5) #12, !dbg !9142
  br label %if.end, !dbg !9142

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end22, !dbg !9146

if.else:                                          ; preds = %entry
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9147
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 1, !dbg !9148
  call void @tty_port_init(%struct.tty_port* %port) #11, !dbg !9149
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9150
  %port3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 1, !dbg !9151
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port3, i32 0, i32 3, !dbg !9152
  store %struct.tty_port_operations* @slgt_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !9153
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9154
  %magic = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 3, !dbg !9155
  store i32 21505, i32* %magic, align 8, !dbg !9156
  br label %do.body, !dbg !9157

do.body:                                          ; preds = %if.else
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9158
  %task = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 23, !dbg !9158
  call void @__init_work(%struct.work_struct* %task, i32 0) #11, !dbg !9158
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9158
  %task4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 23, !dbg !9158
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task4, i32 0, i32 0, !dbg !9158
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !9158
  store i64 68719476704, i64* %counter, align 8, !dbg !9158
  %11 = bitcast %struct.atomic64_t* %data to i8*, !dbg !9158
  %12 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !9158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 8, i1 false), !dbg !9158
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9158
  %task5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 23, !dbg !9158
  %entry6 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task5, i32 0, i32 1, !dbg !9158
  call void @INIT_LIST_HEAD(%struct.list_head* %entry6) #11, !dbg !9158
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9158
  %task7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 23, !dbg !9158
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %task7, i32 0, i32 2, !dbg !9158
  store void (%struct.work_struct*)* @bh_handler, void (%struct.work_struct*)** %func, align 8, !dbg !9158
  br label %do.end, !dbg !9158

do.end:                                           ; preds = %do.body
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9160
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 38, !dbg !9161
  store i32 4096, i32* %max_frame_size, align 4, !dbg !9162
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9163
  %base_clock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 42, !dbg !9164
  store i32 14745600, i32* %base_clock, align 4, !dbg !9165
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9166
  %rbuf_fill_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 39, !dbg !9167
  store i32 256, i32* %rbuf_fill_level, align 8, !dbg !9168
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9169
  %port8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 1, !dbg !9170
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 16, !dbg !9171
  store i32 125, i32* %close_delay, align 8, !dbg !9172
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9173
  %port9 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 1, !dbg !9174
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port9, i32 0, i32 17, !dbg !9175
  store i32 7500, i32* %closing_wait, align 4, !dbg !9176
  br label %do.body10, !dbg !9177

do.body10:                                        ; preds = %do.end
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9178
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 16, !dbg !9178
  call void @__init_waitqueue_head(%struct.wait_queue_head* %status_event_wait_q, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), %struct.lock_class_key* @alloc_dev.__key) #11, !dbg !9178
  br label %do.end11, !dbg !9178

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !9180

do.body12:                                        ; preds = %do.end11
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9181
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 17, !dbg !9181
  call void @__init_waitqueue_head(%struct.wait_queue_head* %event_wait_q, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @alloc_dev.__key.8) #11, !dbg !9181
  br label %do.end13, !dbg !9181

do.end13:                                         ; preds = %do.body12
  br label %do.body14, !dbg !9183

do.body14:                                        ; preds = %do.end13
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9184
  %netlock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 75, !dbg !9184
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9185
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9186
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !9186
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9184
  %netlock16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 75, !dbg !9184
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral17, i32 0, i32 0, !dbg !9184
  %rlock = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !9184
  %27 = bitcast %struct.spinlock* %netlock16 to i8*, !dbg !9184
  %28 = bitcast %struct.spinlock* %.compoundliteral17 to i8*, !dbg !9184
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 %28, i64 0, i1 false), !dbg !9184
  br label %do.end18, !dbg !9184

do.end18:                                         ; preds = %do.body14
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9187
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 36, !dbg !9188
  %30 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !9189
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 bitcast (%struct._MGSL_PARAMS* @default_params to i8*), i64 48, i1 false), !dbg !9189
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9190
  %idle_mode = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 37, !dbg !9191
  store i32 0, i32* %idle_mode, align 8, !dbg !9192
  %32 = load i32, i32* %adapter_num.addr, align 4, !dbg !9193
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9194
  %adapter_num19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 7, !dbg !9195
  store i32 %32, i32* %adapter_num19, align 4, !dbg !9196
  %34 = load i32, i32* %port_num.addr, align 4, !dbg !9197
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9198
  %port_num20 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 8, !dbg !9199
  store i32 %34, i32* %port_num20, align 8, !dbg !9200
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9201
  %tx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 18, !dbg !9201
  call void @init_timer_key(%struct.timer_list* %tx_timer, void (%struct.timer_list*)* @tx_timeout, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !9201
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9202
  %rx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 19, !dbg !9202
  call void @init_timer_key(%struct.timer_list* %rx_timer, void (%struct.timer_list*)* @rx_timeout, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !9202
  %38 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9203
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9204
  %pdev21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 5, !dbg !9205
  store %struct.pci_dev* %38, %struct.pci_dev** %pdev21, align 8, !dbg !9206
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9207
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %40, i32 0, i32 43, !dbg !9208
  %41 = load i32, i32* %irq, align 4, !dbg !9208
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9209
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 31, !dbg !9210
  store i32 %41, i32* %irq_level, align 4, !dbg !9211
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !9212
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 44, !dbg !9212
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0, !dbg !9212
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !9212
  %44 = load i64, i64* %start, align 8, !dbg !9212
  %conv = trunc i64 %44 to i32, !dbg !9212
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9213
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 34, !dbg !9214
  store i32 %conv, i32* %phys_reg_addr, align 8, !dbg !9215
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9216
  %bus_type = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 30, !dbg !9217
  store i32 5, i32* %bus_type, align 8, !dbg !9218
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9219
  %irq_flags = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %47, i32 0, i32 32, !dbg !9220
  store i64 128, i64* %irq_flags, align 8, !dbg !9221
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9222
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 50, !dbg !9223
  store i32 -1, i32* %init_error, align 8, !dbg !9224
  br label %if.end22

if.end22:                                         ; preds = %do.end18, %if.end
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9225
  ret %struct.slgt_info* %49, !dbg !9226
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_device(%struct.slgt_info* %info) #1 !dbg !9227 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %devstr = alloca i8*, align 8
  %current_dev = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !9228, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.declare(metadata i8** %devstr, metadata !9230, metadata !DIExpression()), !dbg !9231
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9232
  %next_device = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 2, !dbg !9233
  store %struct.slgt_info* null, %struct.slgt_info** %next_device, align 8, !dbg !9234
  %1 = load i32, i32* @slgt_device_count, align 4, !dbg !9235
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9236
  %line = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 10, !dbg !9237
  store i32 %1, i32* %line, align 8, !dbg !9238
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9239
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !9240
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9239
  %4 = load i8*, i8** @tty_dev_prefix, align 8, !dbg !9241
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9242
  %line1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 10, !dbg !9243
  %6 = load i32, i32* %line1, align 8, !dbg !9243
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8* %4, i32 %6) #11, !dbg !9244
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9245
  %line2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 10, !dbg !9247
  %8 = load i32, i32* %line2, align 8, !dbg !9247
  %cmp = icmp slt i32 %8, 32, !dbg !9248
  br i1 %cmp, label %if.then, label %if.end8, !dbg !9249

if.then:                                          ; preds = %entry
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9250
  %line3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 10, !dbg !9253
  %10 = load i32, i32* %line3, align 8, !dbg !9253
  %idxprom = sext i32 %10 to i64, !dbg !9254
  %arrayidx = getelementptr [32 x i32], [32 x i32]* @maxframe, i64 0, i64 %idxprom, !dbg !9254
  %11 = load i32, i32* %arrayidx, align 4, !dbg !9254
  %tobool = icmp ne i32 %11, 0, !dbg !9254
  br i1 %tobool, label %if.then4, label %if.end, !dbg !9255

if.then4:                                         ; preds = %if.then
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9256
  %line5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 10, !dbg !9257
  %13 = load i32, i32* %line5, align 8, !dbg !9257
  %idxprom6 = sext i32 %13 to i64, !dbg !9258
  %arrayidx7 = getelementptr [32 x i32], [32 x i32]* @maxframe, i64 0, i64 %idxprom6, !dbg !9258
  %14 = load i32, i32* %arrayidx7, align 4, !dbg !9258
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9259
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 38, !dbg !9260
  store i32 %14, i32* %max_frame_size, align 4, !dbg !9261
  br label %if.end, !dbg !9259

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !9262

if.end8:                                          ; preds = %if.end, %entry
  %16 = load i32, i32* @slgt_device_count, align 4, !dbg !9263
  %inc = add i32 %16, 1, !dbg !9263
  store i32 %inc, i32* @slgt_device_count, align 4, !dbg !9263
  %17 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !9264
  %tobool9 = icmp ne %struct.slgt_info* %17, null, !dbg !9264
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !9266

if.then10:                                        ; preds = %if.end8
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9267
  store %struct.slgt_info* %18, %struct.slgt_info** @slgt_device_list, align 8, !dbg !9268
  br label %if.end15, !dbg !9269

if.else:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %current_dev, metadata !9270, metadata !DIExpression()), !dbg !9272
  %19 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !9273
  store %struct.slgt_info* %19, %struct.slgt_info** %current_dev, align 8, !dbg !9272
  br label %while.cond, !dbg !9274

while.cond:                                       ; preds = %while.body, %if.else
  %20 = load %struct.slgt_info*, %struct.slgt_info** %current_dev, align 8, !dbg !9275
  %next_device11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 2, !dbg !9276
  %21 = load %struct.slgt_info*, %struct.slgt_info** %next_device11, align 8, !dbg !9276
  %tobool12 = icmp ne %struct.slgt_info* %21, null, !dbg !9274
  br i1 %tobool12, label %while.body, label %while.end, !dbg !9274

while.body:                                       ; preds = %while.cond
  %22 = load %struct.slgt_info*, %struct.slgt_info** %current_dev, align 8, !dbg !9277
  %next_device13 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 2, !dbg !9278
  %23 = load %struct.slgt_info*, %struct.slgt_info** %next_device13, align 8, !dbg !9278
  store %struct.slgt_info* %23, %struct.slgt_info** %current_dev, align 8, !dbg !9279
  br label %while.cond, !dbg !9274, !llvm.loop !9280

while.end:                                        ; preds = %while.cond
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9281
  %25 = load %struct.slgt_info*, %struct.slgt_info** %current_dev, align 8, !dbg !9282
  %next_device14 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 2, !dbg !9283
  store %struct.slgt_info* %24, %struct.slgt_info** %next_device14, align 8, !dbg !9284
  br label %if.end15

if.end15:                                         ; preds = %while.end, %if.then10
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9285
  %max_frame_size16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 38, !dbg !9287
  %27 = load i32, i32* %max_frame_size16, align 4, !dbg !9287
  %cmp17 = icmp ult i32 %27, 4096, !dbg !9288
  br i1 %cmp17, label %if.then18, label %if.else20, !dbg !9289

if.then18:                                        ; preds = %if.end15
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9290
  %max_frame_size19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 38, !dbg !9291
  store i32 4096, i32* %max_frame_size19, align 4, !dbg !9292
  br label %if.end26, !dbg !9290

if.else20:                                        ; preds = %if.end15
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9293
  %max_frame_size21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 38, !dbg !9295
  %30 = load i32, i32* %max_frame_size21, align 4, !dbg !9295
  %cmp22 = icmp ugt i32 %30, 65535, !dbg !9296
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !9297

if.then23:                                        ; preds = %if.else20
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9298
  %max_frame_size24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 38, !dbg !9299
  store i32 65535, i32* %max_frame_size24, align 4, !dbg !9300
  br label %if.end25, !dbg !9298

if.end25:                                         ; preds = %if.then23, %if.else20
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then18
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9301
  %pdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 5, !dbg !9302
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9302
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %33, i32 0, i32 8, !dbg !9303
  %34 = load i16, i16* %device, align 2, !dbg !9303
  %conv = zext i16 %34 to i32, !dbg !9301
  switch i32 %conv, label %sw.default [
    i32 112, label %sw.bb
    i32 160, label %sw.bb27
    i32 128, label %sw.bb28
    i32 144, label %sw.bb29
  ], !dbg !9304

sw.bb:                                            ; preds = %if.end26
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i8** %devstr, align 8, !dbg !9305
  br label %sw.epilog, !dbg !9307

sw.bb27:                                          ; preds = %if.end26
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i8** %devstr, align 8, !dbg !9308
  br label %sw.epilog, !dbg !9309

sw.bb28:                                          ; preds = %if.end26
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8** %devstr, align 8, !dbg !9310
  br label %sw.epilog, !dbg !9311

sw.bb29:                                          ; preds = %if.end26
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i8** %devstr, align 8, !dbg !9312
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9313
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 36, !dbg !9314
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !9315
  store i64 1, i64* %mode, align 8, !dbg !9316
  br label %sw.epilog, !dbg !9317

sw.default:                                       ; preds = %if.end26
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i64 0, i64 0), i8** %devstr, align 8, !dbg !9318
  br label %sw.epilog, !dbg !9319

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb
  %36 = load i8*, i8** %devstr, align 8, !dbg !9320
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9321
  %device_name30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 4, !dbg !9322
  %arraydecay31 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name30, i64 0, i64 0, !dbg !9321
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9323
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 34, !dbg !9324
  %39 = load i32, i32* %phys_reg_addr, align 8, !dbg !9324
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9325
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 31, !dbg !9326
  %41 = load i32, i32* %irq_level, align 4, !dbg !9326
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9327
  %max_frame_size32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 38, !dbg !9328
  %43 = load i32, i32* %max_frame_size32, align 4, !dbg !9328
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.36, i64 0, i64 0), i8* %36, i8* %arraydecay31, i32 %39, i32 %41, i32 %43) #12, !dbg !9329
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9330
  %call34 = call i32 @hdlcdev_init(%struct.slgt_info* %44) #11, !dbg !9331
  ret void, !dbg !9332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @claim_resources(%struct.slgt_info* %info) #1 !dbg !9333 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !9334, metadata !DIExpression()), !dbg !9335
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9336
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 34, !dbg !9336
  %1 = load i32, i32* %phys_reg_addr, align 8, !dbg !9336
  %conv = zext i32 %1 to i64, !dbg !9336
  %call = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %conv, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 0) #11, !dbg !9336
  %cmp = icmp eq %struct.resource* %call, null, !dbg !9338
  br i1 %cmp, label %if.then, label %if.else, !dbg !9339

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @debug_level, align 4, !dbg !9340
  %cmp2 = icmp sge i32 %2, 2, !dbg !9340
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !9343

if.then4:                                         ; preds = %if.then
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9340
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !9340
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9340
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9340
  %phys_reg_addr5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 34, !dbg !9340
  %5 = load i32, i32* %phys_reg_addr5, align 8, !dbg !9340
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay, i32 %5) #12, !dbg !9340
  br label %if.end, !dbg !9340

if.end:                                           ; preds = %if.then4, %if.then
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9344
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 50, !dbg !9345
  store i32 2, i32* %init_error, align 8, !dbg !9346
  br label %errout, !dbg !9347

if.else:                                          ; preds = %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9348
  %reg_addr_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 35, !dbg !9349
  store i8 1, i8* %reg_addr_requested, align 4, !dbg !9350
  br label %if.end7

if.end7:                                          ; preds = %if.else
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9351
  %phys_reg_addr8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 34, !dbg !9352
  %9 = load i32, i32* %phys_reg_addr8, align 8, !dbg !9352
  %conv9 = zext i32 %9 to i64, !dbg !9351
  %call10 = call i8* @ioremap(i64 %conv9, i64 256) #11, !dbg !9353
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9354
  %reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 33, !dbg !9355
  store i8* %call10, i8** %reg_addr, align 8, !dbg !9356
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9357
  %reg_addr11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 33, !dbg !9359
  %12 = load i8*, i8** %reg_addr11, align 8, !dbg !9359
  %tobool = icmp ne i8* %12, null, !dbg !9357
  br i1 %tobool, label %if.end22, label %if.then12, !dbg !9360

if.then12:                                        ; preds = %if.end7
  %13 = load i32, i32* @debug_level, align 4, !dbg !9361
  %cmp13 = icmp sge i32 %13, 2, !dbg !9361
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !9364

if.then15:                                        ; preds = %if.then12
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9361
  %device_name16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 4, !dbg !9361
  %arraydecay17 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name16, i64 0, i64 0, !dbg !9361
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9361
  %phys_reg_addr18 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 34, !dbg !9361
  %16 = load i32, i32* %phys_reg_addr18, align 8, !dbg !9361
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.56, i64 0, i64 0), i8* %arraydecay17, i32 %16) #12, !dbg !9361
  br label %if.end20, !dbg !9361

if.end20:                                         ; preds = %if.then15, %if.then12
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9365
  %init_error21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 50, !dbg !9366
  store i32 8, i32* %init_error21, align 8, !dbg !9367
  br label %errout, !dbg !9368

if.end22:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !9369
  br label %return, !dbg !9369

errout:                                           ; preds = %if.end20, %if.end
  call void @llvm.dbg.label(metadata !9370), !dbg !9371
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9372
  call void @release_resources(%struct.slgt_info* %18) #11, !dbg !9373
  store i32 -19, i32* %retval, align 4, !dbg !9374
  br label %return, !dbg !9374

return:                                           ; preds = %errout, %if.end22
  %19 = load i32, i32* %retval, align 4, !dbg !9375
  ret i32 %19, !dbg !9375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_dma_bufs(%struct.slgt_info* %info) #1 !dbg !9376 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9379
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 62, !dbg !9380
  store i32 32, i32* %rbuf_count, align 8, !dbg !9381
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9382
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 68, !dbg !9383
  store i32 32, i32* %tbuf_count, align 8, !dbg !9384
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9385
  %call = call i32 @alloc_desc(%struct.slgt_info* %2) #11, !dbg !9387
  %cmp = icmp slt i32 %call, 0, !dbg !9388
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9389

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9390
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9391
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 63, !dbg !9392
  %5 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !9392
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9393
  %rbuf_count1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 62, !dbg !9394
  %7 = load i32, i32* %rbuf_count1, align 8, !dbg !9394
  %call2 = call i32 @alloc_bufs(%struct.slgt_info* %3, %struct.slgt_desc* %5, i32 %7) #11, !dbg !9395
  %cmp3 = icmp slt i32 %call2, 0, !dbg !9396
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !9397

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9398
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9399
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 69, !dbg !9400
  %10 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !9400
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9401
  %tbuf_count5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 68, !dbg !9402
  %12 = load i32, i32* %tbuf_count5, align 8, !dbg !9402
  %call6 = call i32 @alloc_bufs(%struct.slgt_info* %8, %struct.slgt_desc* %10, i32 %12) #11, !dbg !9403
  %cmp7 = icmp slt i32 %call6, 0, !dbg !9404
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !9405

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9406
  %call9 = call i32 @alloc_tmp_rbuf(%struct.slgt_info* %13) #11, !dbg !9407
  %cmp10 = icmp slt i32 %call9, 0, !dbg !9408
  br i1 %cmp10, label %if.then, label %if.end14, !dbg !9409

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %14 = load i32, i32* @debug_level, align 4, !dbg !9410
  %cmp11 = icmp sge i32 %14, 2, !dbg !9410
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !9413

if.then12:                                        ; preds = %if.then
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9410
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 4, !dbg !9410
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9410
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i8* %arraydecay) #12, !dbg !9410
  br label %if.end, !dbg !9410

if.end:                                           ; preds = %if.then12, %if.then
  store i32 -12, i32* %retval, align 4, !dbg !9414
  br label %return, !dbg !9414

if.end14:                                         ; preds = %lor.lhs.false8
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9415
  call void @reset_rbufs(%struct.slgt_info* %16) #11, !dbg !9416
  store i32 0, i32* %retval, align 4, !dbg !9417
  br label %return, !dbg !9417

return:                                           ; preds = %if.end14, %if.end
  %17 = load i32, i32* %retval, align 4, !dbg !9418
  ret i32 %17, !dbg !9418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #1 !dbg !9419 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9427, metadata !DIExpression()), !dbg !9428
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !9431, metadata !DIExpression()), !dbg !9432
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9433, metadata !DIExpression()), !dbg !9434
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !9435, metadata !DIExpression()), !dbg !9436
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9437
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !9438
  %2 = load i64, i64* %flags.addr, align 8, !dbg !9439
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9440
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !9441
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !9442
  ret i32 %call, !dbg !9443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @slgt_interrupt(i32 %dummy, i8* %dev_id) #1 !dbg !9444 {
entry:
  %lock.addr.i120 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i120, metadata !9445, metadata !DIExpression()), !dbg !9449
  %lock.addr.i118 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i118, metadata !9454, metadata !DIExpression()), !dbg !9456
  %lock.addr.i116 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i116, metadata !9445, metadata !DIExpression()), !dbg !9458
  %lock.addr.i114 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i114, metadata !9454, metadata !DIExpression()), !dbg !9462
  %lock.addr.i112 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i112, metadata !9445, metadata !DIExpression()), !dbg !9464
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9454, metadata !DIExpression()), !dbg !9470
  %dummy.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %gsr = alloca i32, align 4
  %i = alloca i32, align 4
  %state = alloca i32, align 4
  %changed = alloca i32, align 4
  %port = alloca %struct.slgt_info*, align 8
  store i32 %dummy, i32* %dummy.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dummy.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !9476, metadata !DIExpression()), !dbg !9477
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !9478
  %1 = bitcast i8* %0 to %struct.slgt_info*, !dbg !9478
  store %struct.slgt_info* %1, %struct.slgt_info** %info, align 8, !dbg !9477
  call void @llvm.dbg.declare(metadata i32* %gsr, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9481, metadata !DIExpression()), !dbg !9482
  %2 = load i32, i32* @debug_level, align 4, !dbg !9483
  %cmp = icmp sge i32 %2, 5, !dbg !9483
  br i1 %cmp, label %if.then, label %if.end, !dbg !9485

if.then:                                          ; preds = %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9483
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 31, !dbg !9483
  %4 = load i32, i32* %irq_level, align 4, !dbg !9483
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i64 0, i64 0), i32 %4) #12, !dbg !9483
  br label %if.end, !dbg !9483

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !9486

while.cond:                                       ; preds = %for.end, %if.end
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9487
  %call1 = call i32 @rd_reg32(%struct.slgt_info* %5, i32 0) #11, !dbg !9488
  %and = and i32 %call1, -256, !dbg !9489
  store i32 %and, i32* %gsr, align 4, !dbg !9490
  %tobool = icmp ne i32 %and, 0, !dbg !9486
  br i1 %tobool, label %while.body, label %while.end, !dbg !9486

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* @debug_level, align 4, !dbg !9491
  %cmp2 = icmp sge i32 %6, 5, !dbg !9491
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !9493

if.then3:                                         ; preds = %while.body
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9491
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 4, !dbg !9491
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9491
  %8 = load i32, i32* %gsr, align 4, !dbg !9491
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8* %arraydecay, i32 %8) #12, !dbg !9491
  br label %if.end5, !dbg !9491

if.end5:                                          ; preds = %if.then3, %while.body
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9494
  %irq_occurred = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 29, !dbg !9495
  store i8 1, i8* %irq_occurred, align 1, !dbg !9496
  store i32 0, i32* %i, align 4, !dbg !9497
  br label %for.cond, !dbg !9498

for.cond:                                         ; preds = %for.inc, %if.end5
  %10 = load i32, i32* %i, align 4, !dbg !9499
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9500
  %port_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 6, !dbg !9501
  %12 = load i32, i32* %port_count, align 8, !dbg !9501
  %cmp6 = icmp ult i32 %10, %12, !dbg !9502
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9503

for.body:                                         ; preds = %for.cond
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9504
  %port_array = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 9, !dbg !9506
  %14 = load i32, i32* %i, align 4, !dbg !9507
  %idxprom = zext i32 %14 to i64, !dbg !9504
  %arrayidx = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom, !dbg !9504
  %15 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx, align 8, !dbg !9504
  %cmp7 = icmp eq %struct.slgt_info* %15, null, !dbg !9508
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9509

if.then8:                                         ; preds = %for.body
  br label %for.inc, !dbg !9510

if.end9:                                          ; preds = %for.body
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9511
  %port_array10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 9, !dbg !9512
  %17 = load i32, i32* %i, align 4, !dbg !9513
  %idxprom11 = zext i32 %17 to i64, !dbg !9511
  %arrayidx12 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array10, i64 0, i64 %idxprom11, !dbg !9511
  %18 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx12, align 8, !dbg !9511
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 22, !dbg !9514
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9515, !srcloc !9517
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9518
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !9518
  %rlock.i = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !9518
  %21 = load i32, i32* %gsr, align 4, !dbg !9520
  %22 = load i32, i32* %i, align 4, !dbg !9522
  %shl = shl i32 256, %22, !dbg !9523
  %and13 = and i32 %21, %shl, !dbg !9524
  %tobool14 = icmp ne i32 %and13, 0, !dbg !9524
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !9525

if.then15:                                        ; preds = %if.end9
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9526
  %port_array16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 9, !dbg !9527
  %24 = load i32, i32* %i, align 4, !dbg !9528
  %idxprom17 = zext i32 %24 to i64, !dbg !9526
  %arrayidx18 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array16, i64 0, i64 %idxprom17, !dbg !9526
  %25 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx18, align 8, !dbg !9526
  call void @isr_serial(%struct.slgt_info* %25) #11, !dbg !9529
  br label %if.end19, !dbg !9529

if.end19:                                         ; preds = %if.then15, %if.end9
  %26 = load i32, i32* %gsr, align 4, !dbg !9530
  %27 = load i32, i32* %i, align 4, !dbg !9532
  %mul = mul i32 %27, 2, !dbg !9533
  %shl20 = shl i32 65536, %mul, !dbg !9534
  %and21 = and i32 %26, %shl20, !dbg !9535
  %tobool22 = icmp ne i32 %and21, 0, !dbg !9535
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !9536

if.then23:                                        ; preds = %if.end19
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9537
  %port_array24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 9, !dbg !9538
  %29 = load i32, i32* %i, align 4, !dbg !9539
  %idxprom25 = zext i32 %29 to i64, !dbg !9537
  %arrayidx26 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array24, i64 0, i64 %idxprom25, !dbg !9537
  %30 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx26, align 8, !dbg !9537
  call void @isr_rdma(%struct.slgt_info* %30) #11, !dbg !9540
  br label %if.end27, !dbg !9540

if.end27:                                         ; preds = %if.then23, %if.end19
  %31 = load i32, i32* %gsr, align 4, !dbg !9541
  %32 = load i32, i32* %i, align 4, !dbg !9543
  %mul28 = mul i32 %32, 2, !dbg !9544
  %shl29 = shl i32 131072, %mul28, !dbg !9545
  %and30 = and i32 %31, %shl29, !dbg !9546
  %tobool31 = icmp ne i32 %and30, 0, !dbg !9546
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !9547

if.then32:                                        ; preds = %if.end27
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9548
  %port_array33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 9, !dbg !9549
  %34 = load i32, i32* %i, align 4, !dbg !9550
  %idxprom34 = zext i32 %34 to i64, !dbg !9548
  %arrayidx35 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array33, i64 0, i64 %idxprom34, !dbg !9548
  %35 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx35, align 8, !dbg !9548
  call void @isr_tdma(%struct.slgt_info* %35) #11, !dbg !9551
  br label %if.end36, !dbg !9551

if.end36:                                         ; preds = %if.then32, %if.end27
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9552
  %port_array37 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 9, !dbg !9553
  %37 = load i32, i32* %i, align 4, !dbg !9554
  %idxprom38 = zext i32 %37 to i64, !dbg !9552
  %arrayidx39 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array37, i64 0, i64 %idxprom38, !dbg !9552
  %38 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx39, align 8, !dbg !9552
  %lock40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 22, !dbg !9555
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i112, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9556, !srcloc !9558
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i112, align 8, !dbg !9559
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !9559
  %rlock.i113 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !9559
  br label %for.inc, !dbg !9561

for.inc:                                          ; preds = %if.end36, %if.then8
  %41 = load i32, i32* %i, align 4, !dbg !9562
  %inc = add i32 %41, 1, !dbg !9562
  store i32 %inc, i32* %i, align 4, !dbg !9562
  br label %for.cond, !dbg !9563, !llvm.loop !9564

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !9486, !llvm.loop !9566

while.end:                                        ; preds = %while.cond
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9568
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 20, !dbg !9569
  %43 = load i32, i32* %gpio_present, align 8, !dbg !9569
  %tobool41 = icmp ne i32 %43, 0, !dbg !9568
  br i1 %tobool41, label %if.then42, label %if.end73, !dbg !9570

if.then42:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i32* %state, metadata !9571, metadata !DIExpression()), !dbg !9572
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !9573, metadata !DIExpression()), !dbg !9574
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9575
  %lock43 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %44, i32 0, i32 22, !dbg !9576
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i114, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9577, !srcloc !9517
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i114, align 8, !dbg !9578
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !9578
  %rlock.i115 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !9578
  br label %while.cond44, !dbg !9579

while.cond44:                                     ; preds = %for.end70, %if.then42
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9580
  %call45 = call i32 @rd_reg32(%struct.slgt_info* %47, i32 20) #11, !dbg !9581
  store i32 %call45, i32* %changed, align 4, !dbg !9582
  %cmp46 = icmp ne i32 %call45, 0, !dbg !9583
  br i1 %cmp46, label %while.body47, label %while.end71, !dbg !9579

while.body47:                                     ; preds = %while.cond44
  %48 = load i32, i32* @debug_level, align 4, !dbg !9584
  %cmp48 = icmp sge i32 %48, 5, !dbg !9584
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !9587

if.then49:                                        ; preds = %while.body47
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9584
  %device_name50 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 4, !dbg !9584
  %arraydecay51 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name50, i64 0, i64 0, !dbg !9584
  %50 = load i32, i32* %changed, align 4, !dbg !9584
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), i8* %arraydecay51, i32 %50) #12, !dbg !9584
  br label %if.end53, !dbg !9584

if.end53:                                         ; preds = %if.then49, %while.body47
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9588
  %call54 = call i32 @rd_reg32(%struct.slgt_info* %51, i32 16) #11, !dbg !9589
  store i32 %call54, i32* %state, align 4, !dbg !9590
  %52 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9591
  %53 = load i32, i32* %changed, align 4, !dbg !9592
  call void @wr_reg32(%struct.slgt_info* %52, i32 20, i32 %53) #11, !dbg !9593
  store i32 0, i32* %i, align 4, !dbg !9594
  br label %for.cond55, !dbg !9596

for.cond55:                                       ; preds = %for.inc68, %if.end53
  %54 = load i32, i32* %i, align 4, !dbg !9597
  %55 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9599
  %port_count56 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %55, i32 0, i32 6, !dbg !9600
  %56 = load i32, i32* %port_count56, align 8, !dbg !9600
  %cmp57 = icmp ult i32 %54, %56, !dbg !9601
  br i1 %cmp57, label %for.body58, label %for.end70, !dbg !9602

for.body58:                                       ; preds = %for.cond55
  %57 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9603
  %port_array59 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %57, i32 0, i32 9, !dbg !9606
  %58 = load i32, i32* %i, align 4, !dbg !9607
  %idxprom60 = zext i32 %58 to i64, !dbg !9603
  %arrayidx61 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array59, i64 0, i64 %idxprom60, !dbg !9603
  %59 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx61, align 8, !dbg !9603
  %cmp62 = icmp ne %struct.slgt_info* %59, null, !dbg !9608
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !9609

if.then63:                                        ; preds = %for.body58
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9610
  %port_array64 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %60, i32 0, i32 9, !dbg !9611
  %61 = load i32, i32* %i, align 4, !dbg !9612
  %idxprom65 = zext i32 %61 to i64, !dbg !9610
  %arrayidx66 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array64, i64 0, i64 %idxprom65, !dbg !9610
  %62 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx66, align 8, !dbg !9610
  %63 = load i32, i32* %changed, align 4, !dbg !9613
  %64 = load i32, i32* %state, align 4, !dbg !9614
  call void @isr_gpio(%struct.slgt_info* %62, i32 %63, i32 %64) #11, !dbg !9615
  br label %if.end67, !dbg !9615

if.end67:                                         ; preds = %if.then63, %for.body58
  br label %for.inc68, !dbg !9616

for.inc68:                                        ; preds = %if.end67
  %65 = load i32, i32* %i, align 4, !dbg !9617
  %inc69 = add i32 %65, 1, !dbg !9617
  store i32 %inc69, i32* %i, align 4, !dbg !9617
  br label %for.cond55, !dbg !9618, !llvm.loop !9619

for.end70:                                        ; preds = %for.cond55
  br label %while.cond44, !dbg !9579, !llvm.loop !9621

while.end71:                                      ; preds = %while.cond44
  %66 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9623
  %lock72 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 22, !dbg !9624
  store %struct.spinlock* %lock72, %struct.spinlock** %lock.addr.i116, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9625, !srcloc !9558
  %67 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i116, align 8, !dbg !9626
  %68 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %67, i32 0, i32 0, !dbg !9626
  %rlock.i117 = bitcast %union.anon.1* %68 to %struct.raw_spinlock*, !dbg !9626
  br label %if.end73, !dbg !9627

if.end73:                                         ; preds = %while.end71, %while.end
  store i32 0, i32* %i, align 4, !dbg !9628
  br label %for.cond74, !dbg !9629

for.cond74:                                       ; preds = %for.inc104, %if.end73
  %69 = load i32, i32* %i, align 4, !dbg !9630
  %70 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9631
  %port_count75 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %70, i32 0, i32 6, !dbg !9632
  %71 = load i32, i32* %port_count75, align 8, !dbg !9632
  %cmp76 = icmp ult i32 %69, %71, !dbg !9633
  br i1 %cmp76, label %for.body77, label %for.end106, !dbg !9634

for.body77:                                       ; preds = %for.cond74
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %port, metadata !9635, metadata !DIExpression()), !dbg !9636
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9637
  %port_array78 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 9, !dbg !9638
  %73 = load i32, i32* %i, align 4, !dbg !9639
  %idxprom79 = zext i32 %73 to i64, !dbg !9637
  %arrayidx80 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array78, i64 0, i64 %idxprom79, !dbg !9637
  %74 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx80, align 8, !dbg !9637
  store %struct.slgt_info* %74, %struct.slgt_info** %port, align 8, !dbg !9636
  %75 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9640
  %cmp81 = icmp eq %struct.slgt_info* %75, null, !dbg !9642
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !9643

if.then82:                                        ; preds = %for.body77
  br label %for.inc104, !dbg !9644

if.end83:                                         ; preds = %for.body77
  %76 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9645
  %lock84 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 22, !dbg !9646
  store %struct.spinlock* %lock84, %struct.spinlock** %lock.addr.i118, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9647, !srcloc !9517
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i118, align 8, !dbg !9648
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !9648
  %rlock.i119 = bitcast %union.anon.1* %78 to %struct.raw_spinlock*, !dbg !9648
  %79 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9649
  %port85 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %79, i32 0, i32 1, !dbg !9651
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port85, i32 0, i32 7, !dbg !9652
  %80 = load i32, i32* %count, align 4, !dbg !9652
  %tobool86 = icmp ne i32 %80, 0, !dbg !9649
  br i1 %tobool86, label %land.lhs.true, label %lor.lhs.false, !dbg !9653

lor.lhs.false:                                    ; preds = %if.end83
  %81 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9654
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %81, i32 0, i32 74, !dbg !9655
  %82 = load i32, i32* %netcount, align 4, !dbg !9655
  %tobool87 = icmp ne i32 %82, 0, !dbg !9654
  br i1 %tobool87, label %land.lhs.true, label %if.end102, !dbg !9656

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end83
  %83 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9657
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %83, i32 0, i32 24, !dbg !9658
  %84 = load i32, i32* %pending_bh, align 8, !dbg !9658
  %tobool88 = icmp ne i32 %84, 0, !dbg !9657
  br i1 %tobool88, label %land.lhs.true89, label %if.end102, !dbg !9659

land.lhs.true89:                                  ; preds = %land.lhs.true
  %85 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9660
  %bh_running = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %85, i32 0, i32 26, !dbg !9661
  %86 = load i8, i8* %bh_running, align 1, !dbg !9661
  %tobool90 = trunc i8 %86 to i1, !dbg !9661
  br i1 %tobool90, label %if.end102, label %land.lhs.true91, !dbg !9662

land.lhs.true91:                                  ; preds = %land.lhs.true89
  %87 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9663
  %bh_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %87, i32 0, i32 25, !dbg !9664
  %88 = load i8, i8* %bh_requested, align 4, !dbg !9664
  %tobool92 = trunc i8 %88 to i1, !dbg !9664
  br i1 %tobool92, label %if.end102, label %if.then93, !dbg !9665

if.then93:                                        ; preds = %land.lhs.true91
  %89 = load i32, i32* @debug_level, align 4, !dbg !9666
  %cmp94 = icmp sge i32 %89, 5, !dbg !9666
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !9669

if.then95:                                        ; preds = %if.then93
  %90 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9666
  %device_name96 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %90, i32 0, i32 4, !dbg !9666
  %arraydecay97 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name96, i64 0, i64 0, !dbg !9666
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i64 0, i64 0), i8* %arraydecay97) #12, !dbg !9666
  br label %if.end99, !dbg !9666

if.end99:                                         ; preds = %if.then95, %if.then93
  %91 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9670
  %task = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %91, i32 0, i32 23, !dbg !9671
  %call100 = call zeroext i1 @schedule_work(%struct.work_struct* %task) #11, !dbg !9672
  %92 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9673
  %bh_requested101 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %92, i32 0, i32 25, !dbg !9674
  store i8 1, i8* %bh_requested101, align 4, !dbg !9675
  br label %if.end102, !dbg !9676

if.end102:                                        ; preds = %if.end99, %land.lhs.true91, %land.lhs.true89, %land.lhs.true, %lor.lhs.false
  %93 = load %struct.slgt_info*, %struct.slgt_info** %port, align 8, !dbg !9677
  %lock103 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %93, i32 0, i32 22, !dbg !9678
  store %struct.spinlock* %lock103, %struct.spinlock** %lock.addr.i120, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !9679, !srcloc !9558
  %94 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i120, align 8, !dbg !9680
  %95 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %94, i32 0, i32 0, !dbg !9680
  %rlock.i121 = bitcast %union.anon.1* %95 to %struct.raw_spinlock*, !dbg !9680
  br label %for.inc104, !dbg !9681

for.inc104:                                       ; preds = %if.end102, %if.then82
  %96 = load i32, i32* %i, align 4, !dbg !9682
  %inc105 = add i32 %96, 1, !dbg !9682
  store i32 %inc105, i32* %i, align 4, !dbg !9682
  br label %for.cond74, !dbg !9683, !llvm.loop !9684

for.end106:                                       ; preds = %for.cond74
  %97 = load i32, i32* @debug_level, align 4, !dbg !9686
  %cmp107 = icmp sge i32 %97, 5, !dbg !9686
  br i1 %cmp107, label %if.then108, label %if.end111, !dbg !9688

if.then108:                                       ; preds = %for.end106
  %98 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !9686
  %irq_level109 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %98, i32 0, i32 31, !dbg !9686
  %99 = load i32, i32* %irq_level109, align 4, !dbg !9686
  %call110 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0), i32 %99) #12, !dbg !9686
  br label %if.end111, !dbg !9686

if.end111:                                        ; preds = %if.then108, %for.end106
  ret i32 1, !dbg !9689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adapter_test(%struct.slgt_info* %info) #1 !dbg !9690 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !9691, metadata !DIExpression()), !dbg !9692
  %0 = load i32, i32* @debug_level, align 4, !dbg !9693
  %cmp = icmp sge i32 %0, 3, !dbg !9693
  br i1 %cmp, label %if.then, label %if.end, !dbg !9695

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9693
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !9693
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !9693
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.73, i64 0, i64 0), i8* %arraydecay) #12, !dbg !9693
  br label %if.end, !dbg !9693

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9696
  %call1 = call i32 @register_test(%struct.slgt_info* %2) #11, !dbg !9698
  %cmp2 = icmp slt i32 %call1, 0, !dbg !9699
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9700

if.then3:                                         ; preds = %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9701
  %device_name4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !9703
  %arraydecay5 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name4, i64 0, i64 0, !dbg !9701
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9704
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 34, !dbg !9705
  %5 = load i32, i32* %phys_reg_addr, align 8, !dbg !9705
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.74, i64 0, i64 0), i8* %arraydecay5, i32 %5) #12, !dbg !9706
  br label %if.end22, !dbg !9707

if.else:                                          ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9708
  %call7 = call i32 @irq_test(%struct.slgt_info* %6) #11, !dbg !9710
  %cmp8 = icmp slt i32 %call7, 0, !dbg !9711
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !9712

if.then9:                                         ; preds = %if.else
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9713
  %device_name10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 4, !dbg !9715
  %arraydecay11 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name10, i64 0, i64 0, !dbg !9713
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9716
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 31, !dbg !9717
  %9 = load i32, i32* %irq_level, align 4, !dbg !9717
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75, i64 0, i64 0), i8* %arraydecay11, i32 %9) #12, !dbg !9718
  br label %if.end21, !dbg !9719

if.else13:                                        ; preds = %if.else
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9720
  %call14 = call i32 @loopback_test(%struct.slgt_info* %10) #11, !dbg !9722
  %cmp15 = icmp slt i32 %call14, 0, !dbg !9723
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !9724

if.then16:                                        ; preds = %if.else13
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9725
  %device_name17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 4, !dbg !9727
  %arraydecay18 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name17, i64 0, i64 0, !dbg !9725
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.76, i64 0, i64 0), i8* %arraydecay18) #12, !dbg !9728
  br label %if.end20, !dbg !9729

if.end20:                                         ; preds = %if.then16, %if.else13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then9
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then3
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !9730
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 50, !dbg !9731
  %13 = load i32, i32* %init_error, align 8, !dbg !9731
  ret i32 %13, !dbg !9732
}

; Function Attrs: noredzone
declare dso_local %struct.device* @tty_port_register_device(%struct.tty_port*, %struct.tty_driver*, i32, %struct.device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !9733 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9736, metadata !DIExpression()), !dbg !9740
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9746, metadata !DIExpression()), !dbg !9747
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9748, metadata !DIExpression()), !dbg !9749
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9750, metadata !DIExpression()), !dbg !9751
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9752, metadata !DIExpression()), !dbg !9756
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9758, metadata !DIExpression()), !dbg !9762
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9764, metadata !DIExpression()), !dbg !9768
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9773, metadata !DIExpression()), !dbg !9774
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9775, metadata !DIExpression()), !dbg !9776
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9777, metadata !DIExpression()), !dbg !9778
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9779, metadata !DIExpression()), !dbg !9780
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9781, metadata !DIExpression()), !dbg !9782
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9783, metadata !DIExpression()), !dbg !9784
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9785, metadata !DIExpression()), !dbg !9786
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9787, metadata !DIExpression()), !dbg !9788
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9789, metadata !DIExpression()), !dbg !9790
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9791, metadata !DIExpression()), !dbg !9792
  %0 = load i64, i64* %size.addr, align 8, !dbg !9793
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9794
  %or = or i32 %1, 256, !dbg !9795
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9796
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !9797
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9798

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9799
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9800
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9801

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9802
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9803
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9804
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !9805
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9782
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9806
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9807
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9808
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9809
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9810
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9811
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !9812
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9812
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9812
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9812
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9812
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9813
  br label %kmalloc.exit, !dbg !9813

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9814
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9815
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9815
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9817

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9818
  br label %kmalloc_index.exit.i, !dbg !9818

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9819
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9821
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9822

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9823
  br label %kmalloc_index.exit.i, !dbg !9823

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9824
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9826
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9827

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9828
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9829
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9830

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9831
  br label %kmalloc_index.exit.i, !dbg !9831

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9832
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9834
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9835

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9836
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9837
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9838

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9839
  br label %kmalloc_index.exit.i, !dbg !9839

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9840
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9842
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9843

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9844
  br label %kmalloc_index.exit.i, !dbg !9844

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9845
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9847
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9848

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9849
  br label %kmalloc_index.exit.i, !dbg !9849

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9850
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9852
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9853

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9854
  br label %kmalloc_index.exit.i, !dbg !9854

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9855
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9857
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9858

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9859
  br label %kmalloc_index.exit.i, !dbg !9859

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9860
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9862
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9863

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9864
  br label %kmalloc_index.exit.i, !dbg !9864

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9865
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9867
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9868

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9869
  br label %kmalloc_index.exit.i, !dbg !9869

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9870
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9872
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9873

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9874
  br label %kmalloc_index.exit.i, !dbg !9874

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9875
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9877
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9878

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9879
  br label %kmalloc_index.exit.i, !dbg !9879

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9880
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9882
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9883

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9884
  br label %kmalloc_index.exit.i, !dbg !9884

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9885
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9887
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9888

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9889
  br label %kmalloc_index.exit.i, !dbg !9889

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9890
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9892
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9893

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9894
  br label %kmalloc_index.exit.i, !dbg !9894

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9895
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9897
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9898

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9899
  br label %kmalloc_index.exit.i, !dbg !9899

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9900
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9902
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9903

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9904
  br label %kmalloc_index.exit.i, !dbg !9904

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9905
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9907
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9908

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9909
  br label %kmalloc_index.exit.i, !dbg !9909

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9910
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9912
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9913

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9914
  br label %kmalloc_index.exit.i, !dbg !9914

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9915
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9917
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9918

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9919
  br label %kmalloc_index.exit.i, !dbg !9919

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9920
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9922
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9923

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9924
  br label %kmalloc_index.exit.i, !dbg !9924

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9925
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9927
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9928

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9929
  br label %kmalloc_index.exit.i, !dbg !9929

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9930
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9932
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9933

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9934
  br label %kmalloc_index.exit.i, !dbg !9934

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9935
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9937
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9938

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9939
  br label %kmalloc_index.exit.i, !dbg !9939

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9940
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9942
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9943

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9944
  br label %kmalloc_index.exit.i, !dbg !9944

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9945
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9947
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9948

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9949
  br label %kmalloc_index.exit.i, !dbg !9949

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9950
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9952
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9953

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9954
  br label %kmalloc_index.exit.i, !dbg !9954

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9955
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9957
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9958

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9959
  br label %kmalloc_index.exit.i, !dbg !9959

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9960, !srcloc !9963
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !9964, !srcloc !9967
  unreachable, !dbg !9968

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9969
  store i32 %45, i32* %index.i, align 4, !dbg !9970
  %46 = load i32, i32* %index.i, align 4, !dbg !9971
  %tobool.i = icmp ne i32 %46, 0, !dbg !9971
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9973

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9974
  br label %kmalloc.exit, !dbg !9974

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9975
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9976
  %and.i.i = and i32 %48, 17, !dbg !9976
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9976
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9976
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9976
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9976
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9978

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9979
  br label %kmalloc_type.exit.i, !dbg !9979

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9980
  %and2.i.i = and i32 %49, 1, !dbg !9981
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9980
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9980
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9980
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9982
  br label %kmalloc_type.exit.i, !dbg !9982

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9983
  %idxprom.i = zext i32 %51 to i64, !dbg !9984
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9984
  %52 = load i32, i32* %index.i, align 4, !dbg !9985
  %idxprom6.i = zext i32 %52 to i64, !dbg !9984
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9984
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9984
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9986
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9987
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9988
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9989
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !9990
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9990
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9990
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9990
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9990
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9751
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9991
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9992
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9993
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9994
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !9995
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9996
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9997
  store i8* %62, i8** %retval.i, align 8, !dbg !9998
  br label %kmalloc.exit, !dbg !9998

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9999
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10000
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !10001
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10001
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10001
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10001
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10001
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10002
  br label %kmalloc.exit, !dbg !10002

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10003
  ret i8* %65, !dbg !10004
}

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #1 !dbg !10005 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10008, metadata !DIExpression()), !dbg !10009
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !10010, metadata !DIExpression()), !dbg !10011
  ret void, !dbg !10012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !10013 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  br label %do.body, !dbg !10019

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10020

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10022

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10020

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10024
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10024
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10024
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !10024
  br label %do.end3, !dbg !10024

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10020

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10026
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10027
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10028
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10029
  ret void, !dbg !10030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bh_handler(%struct.work_struct* %work) #1 !dbg !10031 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  %action = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10032, metadata !DIExpression()), !dbg !10033
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !10034, metadata !DIExpression()), !dbg !10035
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10036, metadata !DIExpression()), !dbg !10038
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10038
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !10038
  store i8* %1, i8** %__mptr, align 8, !dbg !10038
  br label %do.body, !dbg !10038

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10039

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10038
  %add.ptr = getelementptr i8, i8* %2, i64 -648, !dbg !10038
  %3 = bitcast i8* %add.ptr to %struct.slgt_info*, !dbg !10038
  store %struct.slgt_info* %3, %struct.slgt_info** %tmp, align 8, !dbg !10039
  %4 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !10038
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !10035
  call void @llvm.dbg.declare(metadata i32* %action, metadata !10041, metadata !DIExpression()), !dbg !10042
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10043
  %bh_running = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 26, !dbg !10044
  store i8 1, i8* %bh_running, align 1, !dbg !10045
  br label %while.cond, !dbg !10046

while.cond:                                       ; preds = %sw.epilog29, %do.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10047
  %call = call i32 @bh_action(%struct.slgt_info* %6) #11, !dbg !10048
  store i32 %call, i32* %action, align 4, !dbg !10049
  %tobool = icmp ne i32 %call, 0, !dbg !10046
  br i1 %tobool, label %while.body, label %while.end30, !dbg !10046

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %action, align 4, !dbg !10050
  switch i32 %7, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb15
    i32 4, label %sw.bb16
  ], !dbg !10052

sw.bb:                                            ; preds = %while.body
  %8 = load i32, i32* @debug_level, align 4, !dbg !10053
  %cmp = icmp sge i32 %8, 4, !dbg !10053
  br i1 %cmp, label %if.then, label %if.end, !dbg !10056

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10053
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 4, !dbg !10053
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10053
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* %arraydecay) #12, !dbg !10053
  br label %if.end, !dbg !10053

if.end:                                           ; preds = %if.then, %sw.bb
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10057
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !10058
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !10059
  %11 = load i64, i64* %mode, align 8, !dbg !10059
  switch i64 %11, label %sw.epilog [
    i64 1, label %sw.bb2
    i64 2, label %sw.bb3
    i64 6, label %sw.bb7
    i64 3, label %sw.bb7
    i64 4, label %sw.bb7
    i64 8, label %sw.bb7
  ], !dbg !10060

sw.bb2:                                           ; preds = %if.end
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10061
  call void @rx_async(%struct.slgt_info* %12) #11, !dbg !10063
  br label %sw.epilog, !dbg !10064

sw.bb3:                                           ; preds = %if.end
  br label %while.cond4, !dbg !10065

while.cond4:                                      ; preds = %while.body6, %sw.bb3
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10066
  %call5 = call zeroext i1 @rx_get_frame(%struct.slgt_info* %13) #11, !dbg !10067
  br i1 %call5, label %while.body6, label %while.end, !dbg !10065

while.body6:                                      ; preds = %while.cond4
  br label %while.cond4, !dbg !10065, !llvm.loop !10068

while.end:                                        ; preds = %while.cond4
  br label %sw.epilog, !dbg !10070

sw.bb7:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  br label %while.cond8, !dbg !10071

while.cond8:                                      ; preds = %while.body10, %sw.bb7
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10072
  %call9 = call zeroext i1 @rx_get_buf(%struct.slgt_info* %14) #11, !dbg !10073
  br i1 %call9, label %while.body10, label %while.end11, !dbg !10071

while.body10:                                     ; preds = %while.cond8
  br label %while.cond8, !dbg !10071, !llvm.loop !10074

while.end11:                                      ; preds = %while.cond8
  br label %sw.epilog, !dbg !10076

sw.epilog:                                        ; preds = %if.end, %while.end11, %while.end, %sw.bb2
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10077
  %rx_restart = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 46, !dbg !10079
  %16 = load i8, i8* %rx_restart, align 1, !dbg !10079
  %tobool12 = trunc i8 %16 to i1, !dbg !10079
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !10080

if.then13:                                        ; preds = %sw.epilog
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10081
  call void @rx_start(%struct.slgt_info* %17) #11, !dbg !10082
  br label %if.end14, !dbg !10082

if.end14:                                         ; preds = %if.then13, %sw.epilog
  br label %sw.epilog29, !dbg !10083

sw.bb15:                                          ; preds = %while.body
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10084
  call void @bh_transmit(%struct.slgt_info* %18) #11, !dbg !10085
  br label %sw.epilog29, !dbg !10086

sw.bb16:                                          ; preds = %while.body
  %19 = load i32, i32* @debug_level, align 4, !dbg !10087
  %cmp17 = icmp sge i32 %19, 4, !dbg !10087
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !10089

if.then18:                                        ; preds = %sw.bb16
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10087
  %device_name19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 4, !dbg !10087
  %arraydecay20 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name19, i64 0, i64 0, !dbg !10087
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* %arraydecay20) #12, !dbg !10087
  br label %if.end22, !dbg !10087

if.end22:                                         ; preds = %if.then18, %sw.bb16
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10090
  %ri_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 59, !dbg !10091
  store i32 0, i32* %ri_chkcount, align 8, !dbg !10092
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10093
  %dsr_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 58, !dbg !10094
  store i32 0, i32* %dsr_chkcount, align 4, !dbg !10095
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10096
  %dcd_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 56, !dbg !10097
  store i32 0, i32* %dcd_chkcount, align 4, !dbg !10098
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10099
  %cts_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 57, !dbg !10100
  store i32 0, i32* %cts_chkcount, align 8, !dbg !10101
  br label %sw.epilog29, !dbg !10102

sw.default:                                       ; preds = %while.body
  %25 = load i32, i32* @debug_level, align 4, !dbg !10103
  %cmp23 = icmp sge i32 %25, 4, !dbg !10103
  br i1 %cmp23, label %if.then24, label %if.end28, !dbg !10105

if.then24:                                        ; preds = %sw.default
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10103
  %device_name25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 4, !dbg !10103
  %arraydecay26 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name25, i64 0, i64 0, !dbg !10103
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay26) #12, !dbg !10103
  br label %if.end28, !dbg !10103

if.end28:                                         ; preds = %if.then24, %sw.default
  br label %sw.epilog29, !dbg !10106

sw.epilog29:                                      ; preds = %if.end28, %if.end22, %sw.bb15, %if.end14
  br label %while.cond, !dbg !10046, !llvm.loop !10107

while.end30:                                      ; preds = %while.cond
  %27 = load i32, i32* @debug_level, align 4, !dbg !10109
  %cmp31 = icmp sge i32 %27, 4, !dbg !10109
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !10111

if.then32:                                        ; preds = %while.end30
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10109
  %device_name33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 4, !dbg !10109
  %arraydecay34 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name33, i64 0, i64 0, !dbg !10109
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay34) #12, !dbg !10109
  br label %if.end36, !dbg !10109

if.end36:                                         ; preds = %if.then32, %while.end30
  ret void, !dbg !10112
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #4

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_timeout(%struct.timer_list* %t) #1 !dbg !10113 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !10114, metadata !DIExpression()), !dbg !10118
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10121
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10122
  %t.addr = alloca %struct.timer_list*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp7 = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !10129, metadata !DIExpression()), !dbg !10130
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !10131, metadata !DIExpression()), !dbg !10132
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10133, metadata !DIExpression()), !dbg !10135
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !10135
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !10135
  store i8* %1, i8** %__mptr, align 8, !dbg !10135
  br label %do.body, !dbg !10135

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10136

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10135
  %add.ptr = getelementptr i8, i8* %2, i64 -552, !dbg !10135
  %3 = bitcast i8* %add.ptr to %struct.slgt_info*, !dbg !10135
  store %struct.slgt_info* %3, %struct.slgt_info** %tmp, align 8, !dbg !10136
  %4 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !10135
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !10132
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10138, metadata !DIExpression()), !dbg !10139
  %5 = load i32, i32* @debug_level, align 4, !dbg !10140
  %cmp = icmp sge i32 %5, 3, !dbg !10140
  br i1 %cmp, label %if.then, label %if.end, !dbg !10142

if.then:                                          ; preds = %do.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10140
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !10140
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10140
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay) #12, !dbg !10140
  br label %if.end, !dbg !10140

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10143
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 48, !dbg !10145
  %8 = load i8, i8* %tx_active, align 1, !dbg !10145
  %tobool = trunc i8 %8 to i1, !dbg !10145
  br i1 %tobool, label %land.lhs.true, label %if.end3, !dbg !10146

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10147
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 36, !dbg !10148
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !10149
  %10 = load i64, i64* %mode, align 8, !dbg !10149
  %cmp1 = icmp eq i64 %10, 2, !dbg !10150
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10151

if.then2:                                         ; preds = %land.lhs.true
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10152
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 11, !dbg !10154
  %txtimeout = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 14, !dbg !10155
  %12 = load i32, i32* %txtimeout, align 4, !dbg !10156
  %inc = add i32 %12, 1, !dbg !10156
  store i32 %inc, i32* %txtimeout, align 4, !dbg !10156
  br label %if.end3, !dbg !10157

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  br label %do.body4, !dbg !10158

do.body4:                                         ; preds = %if.end3
  br label %do.body5, !dbg !10159

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10160, metadata !DIExpression()), !dbg !10162
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10163, metadata !DIExpression()), !dbg !10162
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !10162
  %conv = zext i1 %cmp6 to i32, !dbg !10162
  store i32 1, i32* %tmp7, align 4, !dbg !10162
  %13 = load i32, i32* %tmp7, align 4, !dbg !10162
  br label %do.body8, !dbg !10164

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !10165

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !10166

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !10168, metadata !DIExpression()), !dbg !10171
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !10172, metadata !DIExpression()), !dbg !10171
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !10171
  %conv14 = zext i1 %cmp13 to i32, !dbg !10171
  store i32 1, i32* %tmp15, align 4, !dbg !10171
  %14 = load i32, i32* %tmp15, align 4, !dbg !10171
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !10173
  store i64 %call16, i64* %flags, align 8, !dbg !10173
  br label %do.end17, !dbg !10173

do.end17:                                         ; preds = %do.body10
  br label %do.end18, !dbg !10166

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !10165

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10174, !srcloc !10175
  br label %do.body20, !dbg !10174

do.body20:                                        ; preds = %do.body19
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10176
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 22, !dbg !10176
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10177
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10178
  %rlock.i = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !10178
  br label %do.end22, !dbg !10176

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !10174

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !10165

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !10164

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !10159

do.end26:                                         ; preds = %do.end25
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10179
  call void @tx_stop(%struct.slgt_info* %18) #11, !dbg !10180
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10181
  %lock27 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !10182
  %20 = load i64, i64* %flags, align 8, !dbg !10183
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10187
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10187
  store i32 1, i32* %tmp.i, align 4, !dbg !10187
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10187
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10194
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10194
  store i32 1, i32* %tmp8.i, align 4, !dbg !10194
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10194
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10196
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !10196
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10197, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !10200
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10200
  %rlock.i32 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !10200
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10202
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 74, !dbg !10204
  %27 = load i32, i32* %netcount, align 4, !dbg !10204
  %tobool28 = icmp ne i32 %27, 0, !dbg !10202
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !10205

if.then29:                                        ; preds = %do.end26
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10206
  call void @hdlcdev_tx_done(%struct.slgt_info* %28) #11, !dbg !10207
  br label %if.end30, !dbg !10207

if.else:                                          ; preds = %do.end26
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10208
  call void @bh_transmit(%struct.slgt_info* %29) #11, !dbg !10209
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then29
  ret void, !dbg !10210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_timeout(%struct.timer_list* %t) #1 !dbg !10211 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !10114, metadata !DIExpression()), !dbg !10212
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10214
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10215
  %t.addr = alloca %struct.timer_list*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !10222, metadata !DIExpression()), !dbg !10223
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !10224, metadata !DIExpression()), !dbg !10225
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10226, metadata !DIExpression()), !dbg !10228
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !10228
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !10228
  store i8* %1, i8** %__mptr, align 8, !dbg !10228
  br label %do.body, !dbg !10228

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10229

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10228
  %add.ptr = getelementptr i8, i8* %2, i64 -592, !dbg !10228
  %3 = bitcast i8* %add.ptr to %struct.slgt_info*, !dbg !10228
  store %struct.slgt_info* %3, %struct.slgt_info** %tmp, align 8, !dbg !10229
  %4 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !10228
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !10225
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10231, metadata !DIExpression()), !dbg !10232
  %5 = load i32, i32* @debug_level, align 4, !dbg !10233
  %cmp = icmp sge i32 %5, 3, !dbg !10233
  br i1 %cmp, label %if.then, label %if.end, !dbg !10235

if.then:                                          ; preds = %do.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10233
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !10233
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10233
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay) #12, !dbg !10233
  br label %if.end, !dbg !10233

if.end:                                           ; preds = %if.then, %do.end
  br label %do.body1, !dbg !10236

do.body1:                                         ; preds = %if.end
  br label %do.body2, !dbg !10237

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10238, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10241, metadata !DIExpression()), !dbg !10240
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !10240
  %conv = zext i1 %cmp3 to i32, !dbg !10240
  store i32 1, i32* %tmp4, align 4, !dbg !10240
  %7 = load i32, i32* %tmp4, align 4, !dbg !10240
  br label %do.body5, !dbg !10242

do.body5:                                         ; preds = %do.body2
  br label %do.body6, !dbg !10243

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10244

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10246, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10250, metadata !DIExpression()), !dbg !10249
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10249
  %conv11 = zext i1 %cmp10 to i32, !dbg !10249
  store i32 1, i32* %tmp12, align 4, !dbg !10249
  %8 = load i32, i32* %tmp12, align 4, !dbg !10249
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !10251
  store i64 %call13, i64* %flags, align 8, !dbg !10251
  br label %do.end14, !dbg !10251

do.end14:                                         ; preds = %do.body7
  br label %do.end15, !dbg !10244

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !10243

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10252, !srcloc !10253
  br label %do.body17, !dbg !10252

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10254
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 22, !dbg !10254
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10255
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10256
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !10256
  br label %do.end19, !dbg !10254

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !10252

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10243

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10242

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10237

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10257
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 24, !dbg !10258
  %13 = load i32, i32* %pending_bh, align 8, !dbg !10259
  %or = or i32 %13, 1, !dbg !10259
  store i32 %or, i32* %pending_bh, align 8, !dbg !10259
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10260
  %lock24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 22, !dbg !10261
  %15 = load i64, i64* %flags, align 8, !dbg !10262
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10263
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10263
  store i32 1, i32* %tmp.i, align 4, !dbg !10263
  %16 = load i32, i32* %tmp.i, align 4, !dbg !10263
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10264
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10264
  store i32 1, i32* %tmp8.i, align 4, !dbg !10264
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !10264
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !10265
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !10265
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10266, !srcloc !10199
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10267
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !10267
  %rlock.i26 = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !10267
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10268
  %task = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 23, !dbg !10269
  call void @bh_handler(%struct.work_struct* %task) #11, !dbg !10270
  ret void, !dbg !10271
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !10272 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10276, metadata !DIExpression()), !dbg !10281
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10283, metadata !DIExpression()), !dbg !10284
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10285, metadata !DIExpression()), !dbg !10286
  %0 = load i64, i64* %size.addr, align 8, !dbg !10287
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10289
  br i1 %1, label %if.then, label %if.end447, !dbg !10290

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10291
  %tobool = icmp ne i64 %2, 0, !dbg !10291
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10294

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10295
  br label %return, !dbg !10295

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10296
  %cmp = icmp ult i64 %3, 4096, !dbg !10298
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10299

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10300
  br label %return, !dbg !10300

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub = sub i64 %4, 1, !dbg !10301
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10301
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10301

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub4 = sub i64 %6, 1, !dbg !10301
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10301
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10301

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub6 = sub i64 %8, 1, !dbg !10301
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10301
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10301

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10301

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub9 = sub i64 %9, 1, !dbg !10301
  %and = and i64 %sub9, -9223372036854775808, !dbg !10301
  %tobool10 = icmp ne i64 %and, 0, !dbg !10301
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10301

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10301

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub13 = sub i64 %10, 1, !dbg !10301
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10301
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10301
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10301

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10301

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub18 = sub i64 %11, 1, !dbg !10301
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10301
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10301
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10301

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10301

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub23 = sub i64 %12, 1, !dbg !10301
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10301
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10301
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10301

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10301

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub28 = sub i64 %13, 1, !dbg !10301
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10301
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10301
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10301

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10301

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub33 = sub i64 %14, 1, !dbg !10301
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10301
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10301
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10301

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10301

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub38 = sub i64 %15, 1, !dbg !10301
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10301
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10301
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10301

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10301

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub43 = sub i64 %16, 1, !dbg !10301
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10301
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10301
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10301

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10301

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub48 = sub i64 %17, 1, !dbg !10301
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10301
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10301
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10301

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10301

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub53 = sub i64 %18, 1, !dbg !10301
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10301
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10301
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10301

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10301

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub58 = sub i64 %19, 1, !dbg !10301
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10301
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10301
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10301

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10301

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub63 = sub i64 %20, 1, !dbg !10301
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10301
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10301
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10301

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10301

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub68 = sub i64 %21, 1, !dbg !10301
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10301
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10301
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10301

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10301

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub73 = sub i64 %22, 1, !dbg !10301
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10301
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10301
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10301

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10301

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub78 = sub i64 %23, 1, !dbg !10301
  %and79 = and i64 %sub78, 562949953421312, !dbg !10301
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10301
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10301

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10301

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub83 = sub i64 %24, 1, !dbg !10301
  %and84 = and i64 %sub83, 281474976710656, !dbg !10301
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10301
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10301

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10301

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub88 = sub i64 %25, 1, !dbg !10301
  %and89 = and i64 %sub88, 140737488355328, !dbg !10301
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10301
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10301

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10301

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub93 = sub i64 %26, 1, !dbg !10301
  %and94 = and i64 %sub93, 70368744177664, !dbg !10301
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10301
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10301

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10301

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub98 = sub i64 %27, 1, !dbg !10301
  %and99 = and i64 %sub98, 35184372088832, !dbg !10301
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10301
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10301

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10301

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub103 = sub i64 %28, 1, !dbg !10301
  %and104 = and i64 %sub103, 17592186044416, !dbg !10301
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10301
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10301

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10301

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub108 = sub i64 %29, 1, !dbg !10301
  %and109 = and i64 %sub108, 8796093022208, !dbg !10301
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10301
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10301

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10301

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub113 = sub i64 %30, 1, !dbg !10301
  %and114 = and i64 %sub113, 4398046511104, !dbg !10301
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10301
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10301

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10301

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub118 = sub i64 %31, 1, !dbg !10301
  %and119 = and i64 %sub118, 2199023255552, !dbg !10301
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10301
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10301

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10301

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub123 = sub i64 %32, 1, !dbg !10301
  %and124 = and i64 %sub123, 1099511627776, !dbg !10301
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10301
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10301

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10301

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub128 = sub i64 %33, 1, !dbg !10301
  %and129 = and i64 %sub128, 549755813888, !dbg !10301
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10301
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10301

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10301

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub133 = sub i64 %34, 1, !dbg !10301
  %and134 = and i64 %sub133, 274877906944, !dbg !10301
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10301
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10301

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10301

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub138 = sub i64 %35, 1, !dbg !10301
  %and139 = and i64 %sub138, 137438953472, !dbg !10301
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10301
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10301

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10301

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub143 = sub i64 %36, 1, !dbg !10301
  %and144 = and i64 %sub143, 68719476736, !dbg !10301
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10301
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10301

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10301

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub148 = sub i64 %37, 1, !dbg !10301
  %and149 = and i64 %sub148, 34359738368, !dbg !10301
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10301
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10301

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10301

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub153 = sub i64 %38, 1, !dbg !10301
  %and154 = and i64 %sub153, 17179869184, !dbg !10301
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10301
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10301

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10301

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub158 = sub i64 %39, 1, !dbg !10301
  %and159 = and i64 %sub158, 8589934592, !dbg !10301
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10301
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10301

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10301

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub163 = sub i64 %40, 1, !dbg !10301
  %and164 = and i64 %sub163, 4294967296, !dbg !10301
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10301
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10301

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10301

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub168 = sub i64 %41, 1, !dbg !10301
  %and169 = and i64 %sub168, 2147483648, !dbg !10301
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10301
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10301

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10301

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub173 = sub i64 %42, 1, !dbg !10301
  %and174 = and i64 %sub173, 1073741824, !dbg !10301
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10301
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10301

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10301

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub178 = sub i64 %43, 1, !dbg !10301
  %and179 = and i64 %sub178, 536870912, !dbg !10301
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10301
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10301

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10301

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub183 = sub i64 %44, 1, !dbg !10301
  %and184 = and i64 %sub183, 268435456, !dbg !10301
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10301
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10301

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10301

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub188 = sub i64 %45, 1, !dbg !10301
  %and189 = and i64 %sub188, 134217728, !dbg !10301
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10301
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10301

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10301

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub193 = sub i64 %46, 1, !dbg !10301
  %and194 = and i64 %sub193, 67108864, !dbg !10301
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10301
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10301

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10301

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub198 = sub i64 %47, 1, !dbg !10301
  %and199 = and i64 %sub198, 33554432, !dbg !10301
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10301
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10301

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10301

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub203 = sub i64 %48, 1, !dbg !10301
  %and204 = and i64 %sub203, 16777216, !dbg !10301
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10301
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10301

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10301

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub208 = sub i64 %49, 1, !dbg !10301
  %and209 = and i64 %sub208, 8388608, !dbg !10301
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10301
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10301

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10301

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub213 = sub i64 %50, 1, !dbg !10301
  %and214 = and i64 %sub213, 4194304, !dbg !10301
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10301
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10301

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10301

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub218 = sub i64 %51, 1, !dbg !10301
  %and219 = and i64 %sub218, 2097152, !dbg !10301
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10301
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10301

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10301

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub223 = sub i64 %52, 1, !dbg !10301
  %and224 = and i64 %sub223, 1048576, !dbg !10301
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10301
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10301

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10301

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub228 = sub i64 %53, 1, !dbg !10301
  %and229 = and i64 %sub228, 524288, !dbg !10301
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10301
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10301

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10301

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub233 = sub i64 %54, 1, !dbg !10301
  %and234 = and i64 %sub233, 262144, !dbg !10301
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10301
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10301

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10301

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub238 = sub i64 %55, 1, !dbg !10301
  %and239 = and i64 %sub238, 131072, !dbg !10301
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10301
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10301

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10301

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub243 = sub i64 %56, 1, !dbg !10301
  %and244 = and i64 %sub243, 65536, !dbg !10301
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10301
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10301

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10301

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub248 = sub i64 %57, 1, !dbg !10301
  %and249 = and i64 %sub248, 32768, !dbg !10301
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10301
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10301

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10301

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub253 = sub i64 %58, 1, !dbg !10301
  %and254 = and i64 %sub253, 16384, !dbg !10301
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10301
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10301

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10301

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub258 = sub i64 %59, 1, !dbg !10301
  %and259 = and i64 %sub258, 8192, !dbg !10301
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10301
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10301

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10301

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub263 = sub i64 %60, 1, !dbg !10301
  %and264 = and i64 %sub263, 4096, !dbg !10301
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10301
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10301

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10301

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub268 = sub i64 %61, 1, !dbg !10301
  %and269 = and i64 %sub268, 2048, !dbg !10301
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10301
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10301

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10301

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub273 = sub i64 %62, 1, !dbg !10301
  %and274 = and i64 %sub273, 1024, !dbg !10301
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10301
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10301

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10301

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub278 = sub i64 %63, 1, !dbg !10301
  %and279 = and i64 %sub278, 512, !dbg !10301
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10301
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10301

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10301

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub283 = sub i64 %64, 1, !dbg !10301
  %and284 = and i64 %sub283, 256, !dbg !10301
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10301
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10301

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10301

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub288 = sub i64 %65, 1, !dbg !10301
  %and289 = and i64 %sub288, 128, !dbg !10301
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10301
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10301

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10301

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub293 = sub i64 %66, 1, !dbg !10301
  %and294 = and i64 %sub293, 64, !dbg !10301
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10301
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10301

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10301

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub298 = sub i64 %67, 1, !dbg !10301
  %and299 = and i64 %sub298, 32, !dbg !10301
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10301
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10301

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10301

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub303 = sub i64 %68, 1, !dbg !10301
  %and304 = and i64 %sub303, 16, !dbg !10301
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10301
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10301

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10301

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub308 = sub i64 %69, 1, !dbg !10301
  %and309 = and i64 %sub308, 8, !dbg !10301
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10301
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10301

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10301

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub313 = sub i64 %70, 1, !dbg !10301
  %and314 = and i64 %sub313, 4, !dbg !10301
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10301
  %71 = zext i1 %tobool315 to i64, !dbg !10301
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10301
  br label %cond.end, !dbg !10301

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10301
  br label %cond.end317, !dbg !10301

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10301
  br label %cond.end319, !dbg !10301

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10301
  br label %cond.end321, !dbg !10301

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10301
  br label %cond.end323, !dbg !10301

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10301
  br label %cond.end325, !dbg !10301

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10301
  br label %cond.end327, !dbg !10301

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10301
  br label %cond.end329, !dbg !10301

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10301
  br label %cond.end331, !dbg !10301

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10301
  br label %cond.end333, !dbg !10301

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10301
  br label %cond.end335, !dbg !10301

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10301
  br label %cond.end337, !dbg !10301

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10301
  br label %cond.end339, !dbg !10301

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10301
  br label %cond.end341, !dbg !10301

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10301
  br label %cond.end343, !dbg !10301

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10301
  br label %cond.end345, !dbg !10301

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10301
  br label %cond.end347, !dbg !10301

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10301
  br label %cond.end349, !dbg !10301

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10301
  br label %cond.end351, !dbg !10301

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10301
  br label %cond.end353, !dbg !10301

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10301
  br label %cond.end355, !dbg !10301

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10301
  br label %cond.end357, !dbg !10301

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10301
  br label %cond.end359, !dbg !10301

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10301
  br label %cond.end361, !dbg !10301

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10301
  br label %cond.end363, !dbg !10301

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10301
  br label %cond.end365, !dbg !10301

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10301
  br label %cond.end367, !dbg !10301

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10301
  br label %cond.end369, !dbg !10301

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10301
  br label %cond.end371, !dbg !10301

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10301
  br label %cond.end373, !dbg !10301

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10301
  br label %cond.end375, !dbg !10301

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10301
  br label %cond.end377, !dbg !10301

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10301
  br label %cond.end379, !dbg !10301

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10301
  br label %cond.end381, !dbg !10301

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10301
  br label %cond.end383, !dbg !10301

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10301
  br label %cond.end385, !dbg !10301

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10301
  br label %cond.end387, !dbg !10301

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10301
  br label %cond.end389, !dbg !10301

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10301
  br label %cond.end391, !dbg !10301

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10301
  br label %cond.end393, !dbg !10301

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10301
  br label %cond.end395, !dbg !10301

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10301
  br label %cond.end397, !dbg !10301

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10301
  br label %cond.end399, !dbg !10301

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10301
  br label %cond.end401, !dbg !10301

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10301
  br label %cond.end403, !dbg !10301

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10301
  br label %cond.end405, !dbg !10301

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10301
  br label %cond.end407, !dbg !10301

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10301
  br label %cond.end409, !dbg !10301

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10301
  br label %cond.end411, !dbg !10301

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10301
  br label %cond.end413, !dbg !10301

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10301
  br label %cond.end415, !dbg !10301

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10301
  br label %cond.end417, !dbg !10301

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10301
  br label %cond.end419, !dbg !10301

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10301
  br label %cond.end421, !dbg !10301

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10301
  br label %cond.end423, !dbg !10301

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10301
  br label %cond.end425, !dbg !10301

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10301
  br label %cond.end427, !dbg !10301

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10301
  br label %cond.end429, !dbg !10301

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10301
  br label %cond.end431, !dbg !10301

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10301
  br label %cond.end433, !dbg !10301

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10301
  br label %cond.end435, !dbg !10301

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10301
  br label %cond.end437, !dbg !10301

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10301
  br label %cond.end440, !dbg !10301

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10301

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10301
  br label %cond.end444, !dbg !10301

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10301
  %sub443 = sub i64 %72, 1, !dbg !10301
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !10301
  br label %cond.end444, !dbg !10301

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10301
  %sub446 = sub i32 %cond445, 12, !dbg !10302
  %add = add i32 %sub446, 1, !dbg !10303
  store i32 %add, i32* %retval, align 4, !dbg !10304
  br label %return, !dbg !10304

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10305
  %dec = add i64 %73, -1, !dbg !10305
  store i64 %dec, i64* %size.addr, align 8, !dbg !10305
  %74 = load i64, i64* %size.addr, align 8, !dbg !10306
  %shr = lshr i64 %74, 12, !dbg !10306
  store i64 %shr, i64* %size.addr, align 8, !dbg !10306
  %75 = load i64, i64* %size.addr, align 8, !dbg !10307
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10284
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10308
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10309
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #9, !dbg !10308, !srcloc !10310
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10308
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10311
  %add.i = add i32 %79, 1, !dbg !10312
  store i32 %add.i, i32* %retval, align 4, !dbg !10313
  br label %return, !dbg !10313

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10314
  ret i32 %80, !dbg !10314
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !10315 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10276, metadata !DIExpression()), !dbg !10319
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10283, metadata !DIExpression()), !dbg !10321
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  %0 = load i64, i64* %n.addr, align 8, !dbg !10324
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10321
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10325
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10326
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #9, !dbg !10325, !srcloc !10310
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10325
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10327
  %add.i = add i32 %4, 1, !dbg !10328
  %sub = sub i32 %add.i, 1, !dbg !10329
  ret i32 %sub, !dbg !10330
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !10331 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10343
  ret i8* %0, !dbg !10344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @carrier_raised(%struct.tty_port* %port) #1 !dbg !10345 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !10114, metadata !DIExpression()), !dbg !10346
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10348
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10349
  %port.addr = alloca %struct.tty_port*, align 8
  %flags = alloca i64, align 8
  %info = alloca %struct.slgt_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10356, metadata !DIExpression()), !dbg !10357
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10358, metadata !DIExpression()), !dbg !10359
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !10360, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10362, metadata !DIExpression()), !dbg !10364
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10364
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !10364
  store i8* %1, i8** %__mptr, align 8, !dbg !10364
  br label %do.body, !dbg !10364

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10365

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10364
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !10364
  %3 = bitcast i8* %add.ptr to %struct.slgt_info*, !dbg !10364
  store %struct.slgt_info* %3, %struct.slgt_info** %tmp, align 8, !dbg !10365
  %4 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !10364
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !10361
  br label %do.body1, !dbg !10367

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !10368

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10369, metadata !DIExpression()), !dbg !10371
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10372, metadata !DIExpression()), !dbg !10371
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10371
  %conv = zext i1 %cmp to i32, !dbg !10371
  store i32 1, i32* %tmp3, align 4, !dbg !10371
  %5 = load i32, i32* %tmp3, align 4, !dbg !10371
  br label %do.body4, !dbg !10373

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !10374

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10375

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !10377, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !10381, metadata !DIExpression()), !dbg !10380
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !10380
  %conv10 = zext i1 %cmp9 to i32, !dbg !10380
  store i32 1, i32* %tmp11, align 4, !dbg !10380
  %6 = load i32, i32* %tmp11, align 4, !dbg !10380
  %call = call i64 @arch_local_irq_save() #11, !dbg !10382
  store i64 %call, i64* %flags, align 8, !dbg !10382
  br label %do.end12, !dbg !10382

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !10375

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !10374

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10383, !srcloc !10384
  br label %do.body15, !dbg !10383

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10385
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 22, !dbg !10385
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10386
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !10387
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !10387
  br label %do.end17, !dbg !10385

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10383

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10374

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10373

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10368

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10388
  call void @get_signals(%struct.slgt_info* %10) #11, !dbg !10389
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10390
  %lock22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 22, !dbg !10391
  %12 = load i64, i64* %flags, align 8, !dbg !10392
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10393
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10393
  store i32 1, i32* %tmp.i, align 4, !dbg !10393
  %13 = load i32, i32* %tmp.i, align 4, !dbg !10393
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10394
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10394
  store i32 1, i32* %tmp8.i, align 4, !dbg !10394
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !10394
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !10395
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !10395
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10396, !srcloc !10199
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !10397
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10397
  %rlock.i25 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !10397
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10398
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 49, !dbg !10399
  %19 = load i8, i8* %signals, align 4, !dbg !10399
  %conv23 = zext i8 %19 to i32, !dbg !10398
  %and = and i32 %conv23, 1, !dbg !10400
  %tobool = icmp ne i32 %and, 0, !dbg !10401
  %20 = zext i1 %tobool to i64, !dbg !10401
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !10401
  ret i32 %cond, !dbg !10402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dtr_rts(%struct.tty_port* %port, i32 %on) #1 !dbg !10403 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !10114, metadata !DIExpression()), !dbg !10404
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10406
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10407
  %port.addr = alloca %struct.tty_port*, align 8
  %on.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %info = alloca %struct.slgt_info*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.slgt_info*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10414, metadata !DIExpression()), !dbg !10415
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10418, metadata !DIExpression()), !dbg !10419
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !10420, metadata !DIExpression()), !dbg !10421
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10422, metadata !DIExpression()), !dbg !10424
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10424
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !10424
  store i8* %1, i8** %__mptr, align 8, !dbg !10424
  br label %do.body, !dbg !10424

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10425

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10424
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !10424
  %3 = bitcast i8* %add.ptr to %struct.slgt_info*, !dbg !10424
  store %struct.slgt_info* %3, %struct.slgt_info** %tmp, align 8, !dbg !10425
  %4 = load %struct.slgt_info*, %struct.slgt_info** %tmp, align 8, !dbg !10424
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !10421
  br label %do.body1, !dbg !10427

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !10428

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10429, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10432, metadata !DIExpression()), !dbg !10431
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10431
  %conv = zext i1 %cmp to i32, !dbg !10431
  store i32 1, i32* %tmp3, align 4, !dbg !10431
  %5 = load i32, i32* %tmp3, align 4, !dbg !10431
  br label %do.body4, !dbg !10433

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !10434

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10435

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !10437, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !10441, metadata !DIExpression()), !dbg !10440
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !10440
  %conv10 = zext i1 %cmp9 to i32, !dbg !10440
  store i32 1, i32* %tmp11, align 4, !dbg !10440
  %6 = load i32, i32* %tmp11, align 4, !dbg !10440
  %call = call i64 @arch_local_irq_save() #11, !dbg !10442
  store i64 %call, i64* %flags, align 8, !dbg !10442
  br label %do.end12, !dbg !10442

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !10435

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !10434

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10443, !srcloc !10444
  br label %do.body15, !dbg !10443

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10445
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 22, !dbg !10445
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10446
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !10447
  %rlock.i = bitcast %union.anon.1* %9 to %struct.raw_spinlock*, !dbg !10447
  br label %do.end17, !dbg !10445

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !10443

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10434

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10433

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10428

do.end21:                                         ; preds = %do.end20
  %10 = load i32, i32* %on.addr, align 4, !dbg !10448
  %tobool = icmp ne i32 %10, 0, !dbg !10448
  br i1 %tobool, label %if.then, label %if.else, !dbg !10450

if.then:                                          ; preds = %do.end21
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10451
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !10452
  %12 = load i8, i8* %signals, align 4, !dbg !10453
  %conv22 = zext i8 %12 to i32, !dbg !10453
  %or = or i32 %conv22, 160, !dbg !10453
  %conv23 = trunc i32 %or to i8, !dbg !10453
  store i8 %conv23, i8* %signals, align 4, !dbg !10453
  br label %if.end, !dbg !10451

if.else:                                          ; preds = %do.end21
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10454
  %signals24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 49, !dbg !10455
  %14 = load i8, i8* %signals24, align 4, !dbg !10456
  %conv25 = zext i8 %14 to i32, !dbg !10456
  %and = and i32 %conv25, -161, !dbg !10456
  %conv26 = trunc i32 %and to i8, !dbg !10456
  store i8 %conv26, i8* %signals24, align 4, !dbg !10456
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10457
  call void @set_signals(%struct.slgt_info* %15) #11, !dbg !10458
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !10459
  %lock27 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 22, !dbg !10460
  %17 = load i64, i64* %flags, align 8, !dbg !10461
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10462
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10462
  store i32 1, i32* %tmp.i, align 4, !dbg !10462
  %18 = load i32, i32* %tmp.i, align 4, !dbg !10462
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10463
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10463
  store i32 1, i32* %tmp8.i, align 4, !dbg !10463
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !10463
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !10464
  call void @arch_local_irq_restore(i64 %20) #14, !dbg !10464
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10465, !srcloc !10199
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !10466
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !10466
  %rlock.i29 = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !10466
  ret void, !dbg !10467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !10468 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !10472, metadata !DIExpression()), !dbg !10473
  %call = call i64 @arch_local_save_flags() #11, !dbg !10474
  store i64 %call, i64* %f, align 8, !dbg !10475
  call void @arch_local_irq_disable() #11, !dbg !10476
  %0 = load i64, i64* %f, align 8, !dbg !10477
  ret i64 %0, !dbg !10478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_signals(%struct.slgt_info* %info) #1 !dbg !10479 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !10480, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.declare(metadata i16* %status, metadata !10482, metadata !DIExpression()), !dbg !10483
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10484
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %0, i32 142) #11, !dbg !10485
  store i16 %call, i16* %status, align 2, !dbg !10483
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10486
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !10487
  %2 = load i8, i8* %signals, align 4, !dbg !10488
  %conv = zext i8 %2 to i32, !dbg !10488
  %and = and i32 %conv, 160, !dbg !10488
  %conv1 = trunc i32 %and to i8, !dbg !10488
  store i8 %conv1, i8* %signals, align 4, !dbg !10488
  %3 = load i16, i16* %status, align 2, !dbg !10489
  %conv2 = zext i16 %3 to i32, !dbg !10489
  %and3 = and i32 %conv2, 8, !dbg !10491
  %tobool = icmp ne i32 %and3, 0, !dbg !10491
  br i1 %tobool, label %if.then, label %if.end, !dbg !10492

if.then:                                          ; preds = %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10493
  %signals4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 49, !dbg !10494
  %5 = load i8, i8* %signals4, align 4, !dbg !10495
  %conv5 = zext i8 %5 to i32, !dbg !10495
  %or = or i32 %conv5, 64, !dbg !10495
  %conv6 = trunc i32 %or to i8, !dbg !10495
  store i8 %conv6, i8* %signals4, align 4, !dbg !10495
  br label %if.end, !dbg !10493

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16, i16* %status, align 2, !dbg !10496
  %conv7 = zext i16 %6 to i32, !dbg !10496
  %and8 = and i32 %conv7, 4, !dbg !10498
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10498
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !10499

if.then10:                                        ; preds = %if.end
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10500
  %signals11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 49, !dbg !10501
  %8 = load i8, i8* %signals11, align 4, !dbg !10502
  %conv12 = zext i8 %8 to i32, !dbg !10502
  %or13 = or i32 %conv12, 16, !dbg !10502
  %conv14 = trunc i32 %or13 to i8, !dbg !10502
  store i8 %conv14, i8* %signals11, align 4, !dbg !10502
  br label %if.end15, !dbg !10500

if.end15:                                         ; preds = %if.then10, %if.end
  %9 = load i16, i16* %status, align 2, !dbg !10503
  %conv16 = zext i16 %9 to i32, !dbg !10503
  %and17 = and i32 %conv16, 2, !dbg !10505
  %tobool18 = icmp ne i32 %and17, 0, !dbg !10505
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !10506

if.then19:                                        ; preds = %if.end15
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10507
  %signals20 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 49, !dbg !10508
  %11 = load i8, i8* %signals20, align 4, !dbg !10509
  %conv21 = zext i8 %11 to i32, !dbg !10509
  %or22 = or i32 %conv21, 1, !dbg !10509
  %conv23 = trunc i32 %or22 to i8, !dbg !10509
  store i8 %conv23, i8* %signals20, align 4, !dbg !10509
  br label %if.end24, !dbg !10507

if.end24:                                         ; preds = %if.then19, %if.end15
  %12 = load i16, i16* %status, align 2, !dbg !10510
  %conv25 = zext i16 %12 to i32, !dbg !10510
  %and26 = and i32 %conv25, 1, !dbg !10512
  %tobool27 = icmp ne i32 %and26, 0, !dbg !10512
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !10513

if.then28:                                        ; preds = %if.end24
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10514
  %signals29 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 49, !dbg !10515
  %14 = load i8, i8* %signals29, align 4, !dbg !10516
  %conv30 = zext i8 %14 to i32, !dbg !10516
  %or31 = or i32 %conv30, 4, !dbg !10516
  %conv32 = trunc i32 %or31 to i8, !dbg !10516
  store i8 %conv32, i8* %signals29, align 4, !dbg !10516
  br label %if.end33, !dbg !10514

if.end33:                                         ; preds = %if.then28, %if.end24
  ret void, !dbg !10517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !10518 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10522, metadata !DIExpression()), !dbg !10521
  %0 = load i64, i64* %__edi, align 8, !dbg !10521
  store i64 %0, i64* %__edi, align 8, !dbg !10521
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10523, metadata !DIExpression()), !dbg !10521
  %1 = load i64, i64* %__esi, align 8, !dbg !10521
  store i64 %1, i64* %__esi, align 8, !dbg !10521
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10524, metadata !DIExpression()), !dbg !10521
  %2 = load i64, i64* %__edx, align 8, !dbg !10521
  store i64 %2, i64* %__edx, align 8, !dbg !10521
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10525, metadata !DIExpression()), !dbg !10521
  %3 = load i64, i64* %__ecx, align 8, !dbg !10521
  store i64 %3, i64* %__ecx, align 8, !dbg !10521
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10526, metadata !DIExpression()), !dbg !10521
  %4 = load i64, i64* %__eax, align 8, !dbg !10521
  store i64 %4, i64* %__eax, align 8, !dbg !10521
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10521
  %6 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !10527
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #10, !dbg !10527, !srcloc !10530
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10527
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10527
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10527
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult1), !dbg !10527
  %8 = load i64, i64* %__eax, align 8, !dbg !10527
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10531, metadata !DIExpression()), !dbg !10533
  store i64 -1, i64* %__mask, align 8, !dbg !10533
  %9 = load i64, i64* %__mask, align 8, !dbg !10533
  store i64 %9, i64* %tmp, align 8, !dbg !10533
  %10 = load i64, i64* %tmp, align 8, !dbg !10533
  %and = and i64 %8, %10, !dbg !10527
  store i64 %and, i64* %__ret, align 8, !dbg !10527
  %11 = load i64, i64* %__ret, align 8, !dbg !10521
  store i64 %11, i64* %tmp2, align 8, !dbg !10534
  %12 = load i64, i64* %tmp2, align 8, !dbg !10521
  ret i64 %12, !dbg !10535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !10536 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10537, metadata !DIExpression()), !dbg !10539
  %0 = load i64, i64* %__edi, align 8, !dbg !10539
  store i64 %0, i64* %__edi, align 8, !dbg !10539
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10540, metadata !DIExpression()), !dbg !10539
  %1 = load i64, i64* %__esi, align 8, !dbg !10539
  store i64 %1, i64* %__esi, align 8, !dbg !10539
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10541, metadata !DIExpression()), !dbg !10539
  %2 = load i64, i64* %__edx, align 8, !dbg !10539
  store i64 %2, i64* %__edx, align 8, !dbg !10539
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10542, metadata !DIExpression()), !dbg !10539
  %3 = load i64, i64* %__ecx, align 8, !dbg !10539
  store i64 %3, i64* %__ecx, align 8, !dbg !10539
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10543, metadata !DIExpression()), !dbg !10539
  %4 = load i64, i64* %__eax, align 8, !dbg !10539
  store i64 %4, i64* %__eax, align 8, !dbg !10539
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !10539
  %6 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !10539
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #10, !dbg !10539, !srcloc !10544
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10539
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10539
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10539
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult1), !dbg !10539
  ret void, !dbg !10545
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #9

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #10

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !10546 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10551, metadata !DIExpression()), !dbg !10553
  %0 = load i64, i64* %__edi, align 8, !dbg !10553
  store i64 %0, i64* %__edi, align 8, !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10554, metadata !DIExpression()), !dbg !10553
  %1 = load i64, i64* %__esi, align 8, !dbg !10553
  store i64 %1, i64* %__esi, align 8, !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10555, metadata !DIExpression()), !dbg !10553
  %2 = load i64, i64* %__edx, align 8, !dbg !10553
  store i64 %2, i64* %__edx, align 8, !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10556, metadata !DIExpression()), !dbg !10553
  %3 = load i64, i64* %__ecx, align 8, !dbg !10553
  store i64 %3, i64* %__ecx, align 8, !dbg !10553
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10557, metadata !DIExpression()), !dbg !10553
  %4 = load i64, i64* %__eax, align 8, !dbg !10553
  store i64 %4, i64* %__eax, align 8, !dbg !10553
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10553
  %6 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !10553
  %7 = load i64, i64* %f.addr, align 8, !dbg !10553
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #10, !dbg !10553, !srcloc !10558
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10553
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10553
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10553
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult1), !dbg !10553
  ret void, !dbg !10559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bh_action(%struct.slgt_info* %info) #1 !dbg !10560 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !10114, metadata !DIExpression()), !dbg !10561
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10563
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10564
  %info.addr = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !10571, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10573, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10575, metadata !DIExpression()), !dbg !10576
  br label %do.body, !dbg !10577

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10578

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10579, metadata !DIExpression()), !dbg !10581
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10582, metadata !DIExpression()), !dbg !10581
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10581
  %conv = zext i1 %cmp to i32, !dbg !10581
  store i32 1, i32* %tmp, align 4, !dbg !10581
  %0 = load i32, i32* %tmp, align 4, !dbg !10581
  br label %do.body2, !dbg !10583

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10584

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10585

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10587, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10591, metadata !DIExpression()), !dbg !10590
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10590
  %conv8 = zext i1 %cmp7 to i32, !dbg !10590
  store i32 1, i32* %tmp9, align 4, !dbg !10590
  %1 = load i32, i32* %tmp9, align 4, !dbg !10590
  %call = call i64 @arch_local_irq_save() #11, !dbg !10592
  store i64 %call, i64* %flags, align 8, !dbg !10592
  br label %do.end, !dbg !10592

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10585

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10584

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10593, !srcloc !10594
  br label %do.body12, !dbg !10593

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10595
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 22, !dbg !10595
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10596
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10597
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !10597
  br label %do.end14, !dbg !10595

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10593

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10584

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10583

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10578

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10598
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 24, !dbg !10600
  %6 = load i32, i32* %pending_bh, align 8, !dbg !10600
  %and = and i32 %6, 1, !dbg !10601
  %tobool = icmp ne i32 %and, 0, !dbg !10601
  br i1 %tobool, label %if.then, label %if.else, !dbg !10602

if.then:                                          ; preds = %do.end18
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10603
  %pending_bh19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 24, !dbg !10605
  %8 = load i32, i32* %pending_bh19, align 8, !dbg !10606
  %and20 = and i32 %8, -2, !dbg !10606
  store i32 %and20, i32* %pending_bh19, align 8, !dbg !10606
  store i32 1, i32* %rc, align 4, !dbg !10607
  br label %if.end36, !dbg !10608

if.else:                                          ; preds = %do.end18
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10609
  %pending_bh21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 24, !dbg !10611
  %10 = load i32, i32* %pending_bh21, align 8, !dbg !10611
  %and22 = and i32 %10, 2, !dbg !10612
  %tobool23 = icmp ne i32 %and22, 0, !dbg !10612
  br i1 %tobool23, label %if.then24, label %if.else27, !dbg !10613

if.then24:                                        ; preds = %if.else
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10614
  %pending_bh25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 24, !dbg !10616
  %12 = load i32, i32* %pending_bh25, align 8, !dbg !10617
  %and26 = and i32 %12, -3, !dbg !10617
  store i32 %and26, i32* %pending_bh25, align 8, !dbg !10617
  store i32 2, i32* %rc, align 4, !dbg !10618
  br label %if.end35, !dbg !10619

if.else27:                                        ; preds = %if.else
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10620
  %pending_bh28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 24, !dbg !10622
  %14 = load i32, i32* %pending_bh28, align 8, !dbg !10622
  %and29 = and i32 %14, 4, !dbg !10623
  %tobool30 = icmp ne i32 %and29, 0, !dbg !10623
  br i1 %tobool30, label %if.then31, label %if.else34, !dbg !10624

if.then31:                                        ; preds = %if.else27
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10625
  %pending_bh32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 24, !dbg !10627
  %16 = load i32, i32* %pending_bh32, align 8, !dbg !10628
  %and33 = and i32 %16, -5, !dbg !10628
  store i32 %and33, i32* %pending_bh32, align 8, !dbg !10628
  store i32 4, i32* %rc, align 4, !dbg !10629
  br label %if.end, !dbg !10630

if.else34:                                        ; preds = %if.else27
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10631
  %bh_running = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 26, !dbg !10633
  store i8 0, i8* %bh_running, align 1, !dbg !10634
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10635
  %bh_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 25, !dbg !10636
  store i8 0, i8* %bh_requested, align 4, !dbg !10637
  store i32 0, i32* %rc, align 4, !dbg !10638
  br label %if.end

if.end:                                           ; preds = %if.else34, %if.then31
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then24
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10639
  %lock37 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !10640
  %20 = load i64, i64* %flags, align 8, !dbg !10641
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10642
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10642
  store i32 1, i32* %tmp.i, align 4, !dbg !10642
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10642
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10643
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10643
  store i32 1, i32* %tmp8.i, align 4, !dbg !10643
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10643
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10644
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !10644
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10645, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !10646
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10646
  %rlock.i39 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !10646
  %26 = load i32, i32* %rc, align 4, !dbg !10647
  ret i32 %26, !dbg !10648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_async(%struct.slgt_info* %info) #1 !dbg !10649 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %icount = alloca %struct.mgsl_icount*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %p = alloca i8*, align 8
  %status = alloca i8, align 1
  %bufs = alloca %struct.slgt_desc*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %chars = alloca i32, align 4
  %stat = alloca i32, align 4
  %ch = alloca i8, align 1
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount** %icount, metadata !10652, metadata !DIExpression()), !dbg !10654
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10655
  %icount1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 11, !dbg !10656
  store %struct.mgsl_icount* %icount1, %struct.mgsl_icount** %icount, align 8, !dbg !10654
  call void @llvm.dbg.declare(metadata i32* %start, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i32* %end, metadata !10659, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10661, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10663, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.declare(metadata %struct.slgt_desc** %bufs, metadata !10665, metadata !DIExpression()), !dbg !10666
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10667
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 63, !dbg !10668
  %2 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !10668
  store %struct.slgt_desc* %2, %struct.slgt_desc** %bufs, align 8, !dbg !10666
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10669, metadata !DIExpression()), !dbg !10670
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10671, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.declare(metadata i32* %chars, metadata !10673, metadata !DIExpression()), !dbg !10674
  store i32 0, i32* %chars, align 4, !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !10677, metadata !DIExpression()), !dbg !10678
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10679
  %rbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 64, !dbg !10680
  %4 = load i32, i32* %rbuf_current, align 8, !dbg !10680
  store i32 %4, i32* %end, align 4, !dbg !10681
  store i32 %4, i32* %start, align 4, !dbg !10682
  br label %while.cond, !dbg !10683

while.cond:                                       ; preds = %if.end73, %entry
  %5 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs, align 8, !dbg !10684
  %6 = load i32, i32* %end, align 4, !dbg !10684
  %idxprom = zext i32 %6 to i64, !dbg !10684
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %5, i64 %idxprom, !dbg !10684
  %status2 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !10684
  %7 = load i16, i16* %status2, align 2, !dbg !10684
  %conv = zext i16 %7 to i32, !dbg !10684
  %and = and i32 %conv, 32768, !dbg !10684
  %tobool = icmp ne i32 %and, 0, !dbg !10683
  br i1 %tobool, label %while.body, label %while.end, !dbg !10683

while.body:                                       ; preds = %while.cond
  %8 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs, align 8, !dbg !10685
  %9 = load i32, i32* %end, align 4, !dbg !10685
  %idxprom3 = zext i32 %9 to i64, !dbg !10685
  %arrayidx4 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %8, i64 %idxprom3, !dbg !10685
  %count5 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx4, i32 0, i32 0, !dbg !10685
  %10 = load i16, i16* %count5, align 8, !dbg !10685
  %conv6 = zext i16 %10 to i32, !dbg !10685
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10687
  %rbuf_index = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 65, !dbg !10688
  %12 = load i32, i32* %rbuf_index, align 4, !dbg !10688
  %sub = sub i32 %conv6, %12, !dbg !10689
  store i32 %sub, i32* %count, align 4, !dbg !10690
  %13 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs, align 8, !dbg !10691
  %14 = load i32, i32* %end, align 4, !dbg !10692
  %idxprom7 = zext i32 %14 to i64, !dbg !10691
  %arrayidx8 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %13, i64 %idxprom7, !dbg !10691
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx8, i32 0, i32 4, !dbg !10693
  %15 = load i8*, i8** %buf, align 8, !dbg !10693
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10694
  %rbuf_index9 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 65, !dbg !10695
  %17 = load i32, i32* %rbuf_index9, align 4, !dbg !10695
  %idx.ext = zext i32 %17 to i64, !dbg !10696
  %add.ptr = getelementptr i8, i8* %15, i64 %idx.ext, !dbg !10696
  store i8* %add.ptr, i8** %p, align 8, !dbg !10697
  %18 = load i32, i32* @debug_level, align 4, !dbg !10698
  %cmp = icmp sge i32 %18, 5, !dbg !10698
  br i1 %cmp, label %if.then, label %if.end, !dbg !10700

if.then:                                          ; preds = %while.body
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10698
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 4, !dbg !10698
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !10698
  %20 = load i32, i32* %count, align 4, !dbg !10698
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay, i32 %20) #12, !dbg !10698
  br label %if.end, !dbg !10698

if.end:                                           ; preds = %if.then, %while.body
  %21 = load i32, i32* @debug_level, align 4, !dbg !10701
  %cmp11 = icmp sge i32 %21, 1, !dbg !10701
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !10703

if.then13:                                        ; preds = %if.end
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10701
  %23 = load i8*, i8** %p, align 8, !dbg !10701
  %24 = load i32, i32* %count, align 4, !dbg !10701
  call void @trace_block(%struct.slgt_info* %22, i8* %23, i32 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !10701
  br label %if.end14, !dbg !10701

if.end14:                                         ; preds = %if.then13, %if.end
  store i32 0, i32* %i, align 4, !dbg !10704
  br label %for.cond, !dbg !10706

for.cond:                                         ; preds = %for.inc, %if.end14
  %25 = load i32, i32* %i, align 4, !dbg !10707
  %26 = load i32, i32* %count, align 4, !dbg !10709
  %cmp15 = icmp slt i32 %25, %26, !dbg !10710
  br i1 %cmp15, label %for.body, label %for.end, !dbg !10711

for.body:                                         ; preds = %for.cond
  %27 = load i8*, i8** %p, align 8, !dbg !10712
  %28 = load i8, i8* %27, align 1, !dbg !10714
  store i8 %28, i8* %ch, align 1, !dbg !10715
  %29 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !10716
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %29, i32 0, i32 5, !dbg !10717
  %30 = load i32, i32* %rx, align 4, !dbg !10718
  %inc = add i32 %30, 1, !dbg !10718
  store i32 %inc, i32* %rx, align 4, !dbg !10718
  store i32 0, i32* %stat, align 4, !dbg !10719
  %31 = load i8*, i8** %p, align 8, !dbg !10720
  %add.ptr17 = getelementptr i8, i8* %31, i64 1, !dbg !10721
  %32 = load i8, i8* %add.ptr17, align 1, !dbg !10722
  %conv18 = zext i8 %32 to i32, !dbg !10722
  %and19 = and i32 %conv18, 3, !dbg !10723
  %conv20 = trunc i32 %and19 to i8, !dbg !10722
  store i8 %conv20, i8* %status, align 1, !dbg !10724
  %33 = load i8, i8* %status, align 1, !dbg !10725
  %tobool21 = icmp ne i8 %33, 0, !dbg !10725
  br i1 %tobool21, label %if.then22, label %if.end51, !dbg !10727

if.then22:                                        ; preds = %for.body
  %34 = load i8, i8* %status, align 1, !dbg !10728
  %conv23 = zext i8 %34 to i32, !dbg !10728
  %and24 = and i32 %conv23, 2, !dbg !10731
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10731
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !10732

if.then26:                                        ; preds = %if.then22
  %35 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !10733
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %35, i32 0, i32 7, !dbg !10734
  %36 = load i32, i32* %parity, align 4, !dbg !10735
  %inc27 = add i32 %36, 1, !dbg !10735
  store i32 %inc27, i32* %parity, align 4, !dbg !10735
  br label %if.end34, !dbg !10733

if.else:                                          ; preds = %if.then22
  %37 = load i8, i8* %status, align 1, !dbg !10736
  %conv28 = zext i8 %37 to i32, !dbg !10736
  %and29 = and i32 %conv28, 1, !dbg !10738
  %tobool30 = icmp ne i32 %and29, 0, !dbg !10738
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10739

if.then31:                                        ; preds = %if.else
  %38 = load %struct.mgsl_icount*, %struct.mgsl_icount** %icount, align 8, !dbg !10740
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %38, i32 0, i32 6, !dbg !10741
  %39 = load i32, i32* %frame, align 4, !dbg !10742
  %inc32 = add i32 %39, 1, !dbg !10742
  store i32 %inc32, i32* %frame, align 4, !dbg !10742
  br label %if.end33, !dbg !10740

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then26
  %40 = load i8, i8* %status, align 1, !dbg !10743
  %conv35 = zext i8 %40 to i32, !dbg !10743
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10745
  %ignore_status_mask = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %41, i32 0, i32 15, !dbg !10746
  %42 = load i32, i32* %ignore_status_mask, align 4, !dbg !10746
  %and36 = and i32 %conv35, %42, !dbg !10747
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10747
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !10748

if.then38:                                        ; preds = %if.end34
  br label %for.inc, !dbg !10749

if.end39:                                         ; preds = %if.end34
  %43 = load i8, i8* %status, align 1, !dbg !10750
  %conv40 = zext i8 %43 to i32, !dbg !10750
  %and41 = and i32 %conv40, 2, !dbg !10752
  %tobool42 = icmp ne i32 %and41, 0, !dbg !10752
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !10753

if.then43:                                        ; preds = %if.end39
  store i32 3, i32* %stat, align 4, !dbg !10754
  br label %if.end50, !dbg !10755

if.else44:                                        ; preds = %if.end39
  %44 = load i8, i8* %status, align 1, !dbg !10756
  %conv45 = zext i8 %44 to i32, !dbg !10756
  %and46 = and i32 %conv45, 1, !dbg !10758
  %tobool47 = icmp ne i32 %and46, 0, !dbg !10758
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !10759

if.then48:                                        ; preds = %if.else44
  store i32 2, i32* %stat, align 4, !dbg !10760
  br label %if.end49, !dbg !10761

if.end49:                                         ; preds = %if.then48, %if.else44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then43
  br label %if.end51, !dbg !10762

if.end51:                                         ; preds = %if.end50, %for.body
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10763
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 1, !dbg !10764
  %46 = load i8, i8* %ch, align 1, !dbg !10765
  %47 = load i32, i32* %stat, align 4, !dbg !10766
  %conv52 = trunc i32 %47 to i8, !dbg !10766
  %call53 = call i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %46, i8 signext %conv52) #11, !dbg !10767
  %48 = load i32, i32* %chars, align 4, !dbg !10768
  %inc54 = add i32 %48, 1, !dbg !10768
  store i32 %inc54, i32* %chars, align 4, !dbg !10768
  br label %for.inc, !dbg !10769

for.inc:                                          ; preds = %if.end51, %if.then38
  %49 = load i32, i32* %i, align 4, !dbg !10770
  %add = add i32 %49, 2, !dbg !10770
  store i32 %add, i32* %i, align 4, !dbg !10770
  %50 = load i8*, i8** %p, align 8, !dbg !10771
  %add.ptr55 = getelementptr i8, i8* %50, i64 2, !dbg !10771
  store i8* %add.ptr55, i8** %p, align 8, !dbg !10771
  br label %for.cond, !dbg !10772, !llvm.loop !10773

for.end:                                          ; preds = %for.cond
  %51 = load i32, i32* %i, align 4, !dbg !10775
  %52 = load i32, i32* %count, align 4, !dbg !10777
  %cmp56 = icmp slt i32 %51, %52, !dbg !10778
  br i1 %cmp56, label %if.then58, label %if.end63, !dbg !10779

if.then58:                                        ; preds = %for.end
  %53 = load i32, i32* %i, align 4, !dbg !10780
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10782
  %rbuf_index59 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %54, i32 0, i32 65, !dbg !10783
  %55 = load i32, i32* %rbuf_index59, align 4, !dbg !10784
  %add60 = add i32 %55, %53, !dbg !10784
  store i32 %add60, i32* %rbuf_index59, align 4, !dbg !10784
  %56 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10785
  %rx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %56, i32 0, i32 19, !dbg !10786
  %57 = load volatile i64, i64* @jiffies, align 8, !dbg !10787
  %add61 = add i64 %57, 1, !dbg !10788
  %call62 = call i32 @mod_timer(%struct.timer_list* %rx_timer, i64 %add61) #11, !dbg !10789
  br label %while.end, !dbg !10790

if.end63:                                         ; preds = %for.end
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10791
  %rbuf_index64 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %58, i32 0, i32 65, !dbg !10792
  store i32 0, i32* %rbuf_index64, align 4, !dbg !10793
  %59 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10794
  %60 = load i32, i32* %end, align 4, !dbg !10795
  %61 = load i32, i32* %end, align 4, !dbg !10796
  call void @free_rbufs(%struct.slgt_info* %59, i32 %60, i32 %61) #11, !dbg !10797
  %62 = load i32, i32* %end, align 4, !dbg !10798
  %inc65 = add i32 %62, 1, !dbg !10798
  store i32 %inc65, i32* %end, align 4, !dbg !10798
  %63 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10800
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %63, i32 0, i32 62, !dbg !10801
  %64 = load i32, i32* %rbuf_count, align 8, !dbg !10801
  %cmp66 = icmp eq i32 %inc65, %64, !dbg !10802
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !10803

if.then68:                                        ; preds = %if.end63
  store i32 0, i32* %end, align 4, !dbg !10804
  br label %if.end69, !dbg !10805

if.end69:                                         ; preds = %if.then68, %if.end63
  %65 = load i32, i32* %end, align 4, !dbg !10806
  %66 = load i32, i32* %start, align 4, !dbg !10808
  %cmp70 = icmp eq i32 %65, %66, !dbg !10809
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !10810

if.then72:                                        ; preds = %if.end69
  br label %while.end, !dbg !10811

if.end73:                                         ; preds = %if.end69
  br label %while.cond, !dbg !10683, !llvm.loop !10812

while.end:                                        ; preds = %if.then72, %if.then58, %while.cond
  %67 = load i32, i32* %chars, align 4, !dbg !10814
  %tobool74 = icmp ne i32 %67, 0, !dbg !10814
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !10816

if.then75:                                        ; preds = %while.end
  %68 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10817
  %port76 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %68, i32 0, i32 1, !dbg !10818
  call void @tty_flip_buffer_push(%struct.tty_port* %port76) #11, !dbg !10819
  br label %if.end77, !dbg !10819

if.end77:                                         ; preds = %if.then75, %while.end
  ret void, !dbg !10820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rx_get_frame(%struct.slgt_info* %info) #1 !dbg !10821 {
entry:
  %lock.addr.i201 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i201, metadata !10114, metadata !DIExpression()), !dbg !10824
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !10833
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !10834
  %retval = alloca i1, align 1
  %info.addr = alloca %struct.slgt_info*, align 8
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %status = alloca i16, align 2
  %framesize = alloca i32, align 4
  %flags = alloca i64, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %addr_field = alloca i8, align 1
  %crc_size = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy46 = alloca i64, align 8
  %__dummy247 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %__UNIQUE_ID___x343 = alloca i32, align 4
  %__UNIQUE_ID___y344 = alloca i32, align 4
  %tmp137 = alloca i32, align 4
  %copy_count = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %partial_count = alloca i32, align 4
  %__UNIQUE_ID___x345 = alloca i32, align 4
  %__UNIQUE_ID___y346 = alloca i32, align 4
  %tmp161 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.declare(metadata i32* %start, metadata !10843, metadata !DIExpression()), !dbg !10844
  call void @llvm.dbg.declare(metadata i32* %end, metadata !10845, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.declare(metadata i16* %status, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.declare(metadata i32* %framesize, metadata !10849, metadata !DIExpression()), !dbg !10850
  store i32 0, i32* %framesize, align 4, !dbg !10850
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10851, metadata !DIExpression()), !dbg !10852
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !10853, metadata !DIExpression()), !dbg !10854
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10855
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !10856
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !10857
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !10857
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !10854
  call void @llvm.dbg.declare(metadata i8* %addr_field, metadata !10858, metadata !DIExpression()), !dbg !10859
  store i8 -1, i8* %addr_field, align 1, !dbg !10859
  call void @llvm.dbg.declare(metadata i32* %crc_size, metadata !10860, metadata !DIExpression()), !dbg !10861
  store i32 0, i32* %crc_size, align 4, !dbg !10861
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10862
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 36, !dbg !10863
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 6, !dbg !10864
  %3 = load i16, i16* %crc_type, align 2, !dbg !10864
  %conv = zext i16 %3 to i32, !dbg !10862
  %and = and i32 %conv, 255, !dbg !10865
  switch i32 %and, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !10866

sw.bb:                                            ; preds = %entry
  store i32 2, i32* %crc_size, align 4, !dbg !10867
  br label %sw.epilog, !dbg !10869

sw.bb2:                                           ; preds = %entry
  store i32 4, i32* %crc_size, align 4, !dbg !10870
  br label %sw.epilog, !dbg !10871

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb
  br label %check_again, !dbg !10872

check_again:                                      ; preds = %if.then90, %sw.epilog
  call void @llvm.dbg.label(metadata !10873), !dbg !10874
  store i32 0, i32* %framesize, align 4, !dbg !10875
  store i8 -1, i8* %addr_field, align 1, !dbg !10876
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10877
  %rbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 64, !dbg !10878
  %5 = load i32, i32* %rbuf_current, align 8, !dbg !10878
  store i32 %5, i32* %end, align 4, !dbg !10879
  store i32 %5, i32* %start, align 4, !dbg !10880
  br label %for.cond, !dbg !10881

for.cond:                                         ; preds = %if.end62, %check_again
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10882
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 63, !dbg !10882
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !10882
  %8 = load i32, i32* %end, align 4, !dbg !10882
  %idxprom = zext i32 %8 to i64, !dbg !10882
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 %idxprom, !dbg !10882
  %status3 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !10882
  %9 = load i16, i16* %status3, align 2, !dbg !10882
  %conv4 = zext i16 %9 to i32, !dbg !10882
  %and5 = and i32 %conv4, 32768, !dbg !10882
  %tobool = icmp ne i32 %and5, 0, !dbg !10882
  br i1 %tobool, label %if.end, label %if.then, !dbg !10884

if.then:                                          ; preds = %for.cond
  br label %cleanup, !dbg !10885

if.end:                                           ; preds = %for.cond
  %10 = load i32, i32* %framesize, align 4, !dbg !10886
  %cmp = icmp eq i32 %10, 0, !dbg !10888
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !10889

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10890
  %params7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 36, !dbg !10891
  %addr_filter = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params7, i32 0, i32 5, !dbg !10892
  %12 = load i8, i8* %addr_filter, align 8, !dbg !10892
  %conv8 = zext i8 %12 to i32, !dbg !10890
  %cmp9 = icmp ne i32 %conv8, 255, !dbg !10893
  br i1 %cmp9, label %if.then11, label %if.end16, !dbg !10894

if.then11:                                        ; preds = %land.lhs.true
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10895
  %rbufs12 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 63, !dbg !10896
  %14 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs12, align 8, !dbg !10896
  %15 = load i32, i32* %end, align 4, !dbg !10897
  %idxprom13 = zext i32 %15 to i64, !dbg !10895
  %arrayidx14 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %14, i64 %idxprom13, !dbg !10895
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx14, i32 0, i32 4, !dbg !10898
  %16 = load i8*, i8** %buf, align 8, !dbg !10898
  %arrayidx15 = getelementptr i8, i8* %16, i64 0, !dbg !10895
  %17 = load i8, i8* %arrayidx15, align 1, !dbg !10895
  store i8 %17, i8* %addr_field, align 1, !dbg !10899
  br label %if.end16, !dbg !10900

if.end16:                                         ; preds = %if.then11, %land.lhs.true, %if.end
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10901
  %rbufs17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 63, !dbg !10901
  %19 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs17, align 8, !dbg !10901
  %20 = load i32, i32* %end, align 4, !dbg !10901
  %idxprom18 = zext i32 %20 to i64, !dbg !10901
  %arrayidx19 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %19, i64 %idxprom18, !dbg !10901
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx19, i32 0, i32 0, !dbg !10901
  %21 = load i16, i16* %count, align 8, !dbg !10901
  %conv20 = zext i16 %21 to i32, !dbg !10901
  %22 = load i32, i32* %framesize, align 4, !dbg !10902
  %add = add i32 %22, %conv20, !dbg !10902
  store i32 %add, i32* %framesize, align 4, !dbg !10902
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10903
  %rbufs21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 63, !dbg !10903
  %24 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs21, align 8, !dbg !10903
  %25 = load i32, i32* %end, align 4, !dbg !10903
  %idxprom22 = zext i32 %25 to i64, !dbg !10903
  %arrayidx23 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %24, i64 %idxprom22, !dbg !10903
  %status24 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx23, i32 0, i32 1, !dbg !10903
  %26 = load i16, i16* %status24, align 2, !dbg !10903
  %conv25 = zext i16 %26 to i32, !dbg !10903
  %and26 = and i32 %conv25, 4, !dbg !10903
  %tobool27 = icmp ne i32 %and26, 0, !dbg !10903
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !10905

if.then28:                                        ; preds = %if.end16
  br label %for.end, !dbg !10906

if.end29:                                         ; preds = %if.end16
  %27 = load i32, i32* %end, align 4, !dbg !10907
  %inc = add i32 %27, 1, !dbg !10907
  store i32 %inc, i32* %end, align 4, !dbg !10907
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10909
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 62, !dbg !10910
  %29 = load i32, i32* %rbuf_count, align 8, !dbg !10910
  %cmp30 = icmp eq i32 %inc, %29, !dbg !10911
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !10912

if.then32:                                        ; preds = %if.end29
  store i32 0, i32* %end, align 4, !dbg !10913
  br label %if.end33, !dbg !10914

if.end33:                                         ; preds = %if.then32, %if.end29
  %30 = load i32, i32* %end, align 4, !dbg !10915
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10916
  %rbuf_current34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 64, !dbg !10917
  %32 = load i32, i32* %rbuf_current34, align 8, !dbg !10917
  %cmp35 = icmp eq i32 %30, %32, !dbg !10918
  br i1 %cmp35, label %if.then37, label %if.end62, !dbg !10919

if.then37:                                        ; preds = %if.end33
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10920
  %rx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 45, !dbg !10921
  %34 = load i8, i8* %rx_enabled, align 8, !dbg !10921
  %tobool38 = trunc i8 %34 to i1, !dbg !10921
  br i1 %tobool38, label %if.then39, label %if.end61, !dbg !10922

if.then39:                                        ; preds = %if.then37
  br label %do.body, !dbg !10923

do.body:                                          ; preds = %if.then39
  br label %do.body40, !dbg !10924

do.body40:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10925, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10928, metadata !DIExpression()), !dbg !10927
  %cmp41 = icmp eq i64* %__dummy, %__dummy2, !dbg !10927
  %conv42 = zext i1 %cmp41 to i32, !dbg !10927
  store i32 1, i32* %tmp, align 4, !dbg !10927
  %35 = load i32, i32* %tmp, align 4, !dbg !10927
  br label %do.body43, !dbg !10929

do.body43:                                        ; preds = %do.body40
  br label %do.body44, !dbg !10930

do.body44:                                        ; preds = %do.body43
  br label %do.body45, !dbg !10931

do.body45:                                        ; preds = %do.body44
  call void @llvm.dbg.declare(metadata i64* %__dummy46, metadata !10933, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata i64* %__dummy247, metadata !10937, metadata !DIExpression()), !dbg !10936
  %cmp48 = icmp eq i64* %__dummy46, %__dummy247, !dbg !10936
  %conv49 = zext i1 %cmp48 to i32, !dbg !10936
  store i32 1, i32* %tmp50, align 4, !dbg !10936
  %36 = load i32, i32* %tmp50, align 4, !dbg !10936
  %call = call i64 @arch_local_irq_save() #11, !dbg !10938
  store i64 %call, i64* %flags, align 8, !dbg !10938
  br label %do.end, !dbg !10938

do.end:                                           ; preds = %do.body45
  br label %do.end51, !dbg !10931

do.end51:                                         ; preds = %do.end
  br label %do.body52, !dbg !10930

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10939, !srcloc !10940
  br label %do.body53, !dbg !10939

do.body53:                                        ; preds = %do.body52
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10941
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 22, !dbg !10941
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10942
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !10943
  %rlock.i = bitcast %union.anon.1* %39 to %struct.raw_spinlock*, !dbg !10943
  br label %do.end55, !dbg !10941

do.end55:                                         ; preds = %do.body53
  br label %do.end56, !dbg !10939

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !10930

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !10929

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !10924

do.end59:                                         ; preds = %do.end58
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10944
  call void @rx_start(%struct.slgt_info* %40) #11, !dbg !10945
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10946
  %lock60 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %41, i32 0, i32 22, !dbg !10947
  %42 = load i64, i64* %flags, align 8, !dbg !10948
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i201, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !10949
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !10949
  store i32 1, i32* %tmp.i, align 4, !dbg !10949
  %43 = load i32, i32* %tmp.i, align 4, !dbg !10949
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !10950
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !10950
  store i32 1, i32* %tmp8.i, align 4, !dbg !10950
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !10950
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !10951
  call void @arch_local_irq_restore(i64 %45) #14, !dbg !10951
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10952, !srcloc !10199
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i201, align 8, !dbg !10953
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !10953
  %rlock.i202 = bitcast %union.anon.1* %47 to %struct.raw_spinlock*, !dbg !10953
  br label %if.end61, !dbg !10954

if.end61:                                         ; preds = %do.end59, %if.then37
  br label %cleanup, !dbg !10955

if.end62:                                         ; preds = %if.end33
  br label %for.cond, !dbg !10956, !llvm.loop !10957

for.end:                                          ; preds = %if.then28
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10960
  %rbufs63 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 63, !dbg !10960
  %49 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs63, align 8, !dbg !10960
  %50 = load i32, i32* %end, align 4, !dbg !10960
  %idxprom64 = zext i32 %50 to i64, !dbg !10960
  %arrayidx65 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %49, i64 %idxprom64, !dbg !10960
  %status66 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx65, i32 0, i32 1, !dbg !10960
  %51 = load i16, i16* %status66, align 2, !dbg !10960
  store i16 %51, i16* %status, align 2, !dbg !10961
  %52 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10962
  %params67 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %52, i32 0, i32 36, !dbg !10964
  %crc_type68 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params67, i32 0, i32 6, !dbg !10965
  %53 = load i16, i16* %crc_type68, align 2, !dbg !10965
  %conv69 = zext i16 %53 to i32, !dbg !10962
  %and70 = and i32 %conv69, 255, !dbg !10966
  %cmp71 = icmp eq i32 %and70, 0, !dbg !10967
  br i1 %cmp71, label %if.then73, label %if.end77, !dbg !10968

if.then73:                                        ; preds = %for.end
  %54 = load i16, i16* %status, align 2, !dbg !10969
  %conv74 = zext i16 %54 to i32, !dbg !10969
  %and75 = and i32 %conv74, -3, !dbg !10969
  %conv76 = trunc i32 %and75 to i16, !dbg !10969
  store i16 %conv76, i16* %status, align 2, !dbg !10969
  br label %if.end77, !dbg !10970

if.end77:                                         ; preds = %if.then73, %for.end
  %55 = load i32, i32* %framesize, align 4, !dbg !10971
  %cmp78 = icmp eq i32 %55, 0, !dbg !10973
  br i1 %cmp78, label %if.then90, label %lor.lhs.false, !dbg !10974

lor.lhs.false:                                    ; preds = %if.end77
  %56 = load i8, i8* %addr_field, align 1, !dbg !10975
  %conv80 = zext i8 %56 to i32, !dbg !10975
  %cmp81 = icmp ne i32 %conv80, 255, !dbg !10976
  br i1 %cmp81, label %land.lhs.true83, label %if.end91, !dbg !10977

land.lhs.true83:                                  ; preds = %lor.lhs.false
  %57 = load i8, i8* %addr_field, align 1, !dbg !10978
  %conv84 = zext i8 %57 to i32, !dbg !10978
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10979
  %params85 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %58, i32 0, i32 36, !dbg !10980
  %addr_filter86 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params85, i32 0, i32 5, !dbg !10981
  %59 = load i8, i8* %addr_filter86, align 8, !dbg !10981
  %conv87 = zext i8 %59 to i32, !dbg !10979
  %cmp88 = icmp ne i32 %conv84, %conv87, !dbg !10982
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !10983

if.then90:                                        ; preds = %land.lhs.true83, %if.end77
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10984
  %61 = load i32, i32* %start, align 4, !dbg !10986
  %62 = load i32, i32* %end, align 4, !dbg !10987
  call void @free_rbufs(%struct.slgt_info* %60, i32 %61, i32 %62) #11, !dbg !10988
  br label %check_again, !dbg !10989

if.end91:                                         ; preds = %land.lhs.true83, %lor.lhs.false
  %63 = load i32, i32* %framesize, align 4, !dbg !10990
  %64 = load i32, i32* %crc_size, align 4, !dbg !10992
  %add92 = add i32 2, %64, !dbg !10993
  %cmp93 = icmp ult i32 %63, %add92, !dbg !10994
  br i1 %cmp93, label %if.then99, label %lor.lhs.false95, !dbg !10995

lor.lhs.false95:                                  ; preds = %if.end91
  %65 = load i16, i16* %status, align 2, !dbg !10996
  %conv96 = zext i16 %65 to i32, !dbg !10996
  %and97 = and i32 %conv96, 1, !dbg !10997
  %tobool98 = icmp ne i32 %and97, 0, !dbg !10997
  br i1 %tobool98, label %if.then99, label %if.else, !dbg !10998

if.then99:                                        ; preds = %lor.lhs.false95, %if.end91
  %66 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !10999
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 11, !dbg !11001
  %rxshort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 15, !dbg !11002
  %67 = load i32, i32* %rxshort, align 4, !dbg !11003
  %inc100 = add i32 %67, 1, !dbg !11003
  store i32 %inc100, i32* %rxshort, align 4, !dbg !11003
  store i32 0, i32* %framesize, align 4, !dbg !11004
  br label %if.end115, !dbg !11005

if.else:                                          ; preds = %lor.lhs.false95
  %68 = load i16, i16* %status, align 2, !dbg !11006
  %conv101 = zext i16 %68 to i32, !dbg !11006
  %and102 = and i32 %conv101, 2, !dbg !11008
  %tobool103 = icmp ne i32 %and102, 0, !dbg !11008
  br i1 %tobool103, label %if.then104, label %if.end114, !dbg !11009

if.then104:                                       ; preds = %if.else
  %69 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11010
  %icount105 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %69, i32 0, i32 11, !dbg !11012
  %rxcrc = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount105, i32 0, i32 19, !dbg !11013
  %70 = load i32, i32* %rxcrc, align 4, !dbg !11014
  %inc106 = add i32 %70, 1, !dbg !11014
  store i32 %inc106, i32* %rxcrc, align 4, !dbg !11014
  %71 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11015
  %params107 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %71, i32 0, i32 36, !dbg !11017
  %crc_type108 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params107, i32 0, i32 6, !dbg !11018
  %72 = load i16, i16* %crc_type108, align 2, !dbg !11018
  %conv109 = zext i16 %72 to i32, !dbg !11015
  %and110 = and i32 %conv109, 32768, !dbg !11019
  %tobool111 = icmp ne i32 %and110, 0, !dbg !11019
  br i1 %tobool111, label %if.end113, label %if.then112, !dbg !11020

if.then112:                                       ; preds = %if.then104
  store i32 0, i32* %framesize, align 4, !dbg !11021
  br label %if.end113, !dbg !11022

if.end113:                                        ; preds = %if.then112, %if.then104
  br label %if.end114, !dbg !11023

if.end114:                                        ; preds = %if.end113, %if.else
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then99
  %73 = load i32, i32* %framesize, align 4, !dbg !11024
  %cmp116 = icmp eq i32 %73, 0, !dbg !11026
  br i1 %cmp116, label %if.then118, label %if.end123, !dbg !11027

if.then118:                                       ; preds = %if.end115
  %74 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11028
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %74, i32 0, i32 76, !dbg !11030
  %75 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11030
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %75, i32 0, i32 24, !dbg !11031
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !11032
  %76 = load i64, i64* %rx_errors, align 8, !dbg !11033
  %inc119 = add i64 %76, 1, !dbg !11033
  store i64 %inc119, i64* %rx_errors, align 8, !dbg !11033
  %77 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11034
  %netdev120 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %77, i32 0, i32 76, !dbg !11035
  %78 = load %struct.net_device*, %struct.net_device** %netdev120, align 8, !dbg !11035
  %stats121 = getelementptr inbounds %struct.net_device, %struct.net_device* %78, i32 0, i32 24, !dbg !11036
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats121, i32 0, i32 13, !dbg !11037
  %79 = load i64, i64* %rx_frame_errors, align 8, !dbg !11038
  %inc122 = add i64 %79, 1, !dbg !11038
  store i64 %inc122, i64* %rx_frame_errors, align 8, !dbg !11038
  br label %if.end123, !dbg !11039

if.end123:                                        ; preds = %if.then118, %if.end115
  %80 = load i32, i32* @debug_level, align 4, !dbg !11040
  %cmp124 = icmp sge i32 %80, 4, !dbg !11040
  br i1 %cmp124, label %if.then126, label %if.end129, !dbg !11042

if.then126:                                       ; preds = %if.end123
  %81 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11040
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %81, i32 0, i32 4, !dbg !11040
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !11040
  %82 = load i16, i16* %status, align 2, !dbg !11040
  %conv127 = zext i16 %82 to i32, !dbg !11040
  %83 = load i32, i32* %framesize, align 4, !dbg !11040
  %call128 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay, i32 %conv127, i32 %83) #12, !dbg !11040
  br label %if.end129, !dbg !11040

if.end129:                                        ; preds = %if.then126, %if.end123
  %84 = load i32, i32* @debug_level, align 4, !dbg !11043
  %cmp130 = icmp sge i32 %84, 1, !dbg !11043
  br i1 %cmp130, label %if.then132, label %if.end140, !dbg !11045

if.then132:                                       ; preds = %if.end129
  %85 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11043
  %86 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11043
  %rbufs133 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %86, i32 0, i32 63, !dbg !11043
  %87 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs133, align 8, !dbg !11043
  %88 = load i32, i32* %start, align 4, !dbg !11043
  %idxprom134 = zext i32 %88 to i64, !dbg !11043
  %arrayidx135 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %87, i64 %idxprom134, !dbg !11043
  %buf136 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx135, i32 0, i32 4, !dbg !11043
  %89 = load i8*, i8** %buf136, align 8, !dbg !11043
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x343, metadata !11046, metadata !DIExpression()), !dbg !11048
  %90 = load i32, i32* %framesize, align 4, !dbg !11048
  store i32 %90, i32* %__UNIQUE_ID___x343, align 4, !dbg !11048
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y344, metadata !11049, metadata !DIExpression()), !dbg !11048
  %91 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11048
  %rbuf_fill_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %91, i32 0, i32 39, !dbg !11048
  %92 = load i32, i32* %rbuf_fill_level, align 8, !dbg !11048
  store i32 %92, i32* %__UNIQUE_ID___y344, align 4, !dbg !11048
  %93 = load i32, i32* %__UNIQUE_ID___x343, align 4, !dbg !11048
  %94 = load i32, i32* %__UNIQUE_ID___y344, align 4, !dbg !11048
  %cmp138 = icmp slt i32 %93, %94, !dbg !11048
  br i1 %cmp138, label %cond.true, label %cond.false, !dbg !11048

cond.true:                                        ; preds = %if.then132
  %95 = load i32, i32* %__UNIQUE_ID___x343, align 4, !dbg !11048
  br label %cond.end, !dbg !11048

cond.false:                                       ; preds = %if.then132
  %96 = load i32, i32* %__UNIQUE_ID___y344, align 4, !dbg !11048
  br label %cond.end, !dbg !11048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %95, %cond.true ], [ %96, %cond.false ], !dbg !11048
  store i32 %cond, i32* %tmp137, align 4, !dbg !11048
  %97 = load i32, i32* %tmp137, align 4, !dbg !11048
  call void @trace_block(%struct.slgt_info* %85, i8* %89, i32 %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !11043
  br label %if.end140, !dbg !11043

if.end140:                                        ; preds = %cond.end, %if.end129
  %98 = load i32, i32* %framesize, align 4, !dbg !11050
  %tobool141 = icmp ne i32 %98, 0, !dbg !11050
  br i1 %tobool141, label %if.then142, label %if.end200, !dbg !11052

if.then142:                                       ; preds = %if.end140
  %99 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11053
  %params143 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %99, i32 0, i32 36, !dbg !11056
  %crc_type144 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params143, i32 0, i32 6, !dbg !11057
  %100 = load i16, i16* %crc_type144, align 2, !dbg !11057
  %conv145 = zext i16 %100 to i32, !dbg !11053
  %and146 = and i32 %conv145, 32768, !dbg !11058
  %tobool147 = icmp ne i32 %and146, 0, !dbg !11058
  br i1 %tobool147, label %if.end149, label %if.then148, !dbg !11059

if.then148:                                       ; preds = %if.then142
  %101 = load i32, i32* %crc_size, align 4, !dbg !11060
  %102 = load i32, i32* %framesize, align 4, !dbg !11062
  %sub = sub i32 %102, %101, !dbg !11062
  store i32 %sub, i32* %framesize, align 4, !dbg !11062
  store i32 0, i32* %crc_size, align 4, !dbg !11063
  br label %if.end149, !dbg !11064

if.end149:                                        ; preds = %if.then148, %if.then142
  %103 = load i32, i32* %framesize, align 4, !dbg !11065
  %104 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11067
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %104, i32 0, i32 38, !dbg !11068
  %105 = load i32, i32* %max_frame_size, align 4, !dbg !11068
  %106 = load i32, i32* %crc_size, align 4, !dbg !11069
  %add150 = add i32 %105, %106, !dbg !11070
  %cmp151 = icmp ugt i32 %103, %add150, !dbg !11071
  br i1 %cmp151, label %if.then153, label %if.else156, !dbg !11072

if.then153:                                       ; preds = %if.end149
  %107 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11073
  %icount154 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %107, i32 0, i32 11, !dbg !11074
  %rxlong = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount154, i32 0, i32 16, !dbg !11075
  %108 = load i32, i32* %rxlong, align 4, !dbg !11076
  %inc155 = add i32 %108, 1, !dbg !11076
  store i32 %inc155, i32* %rxlong, align 4, !dbg !11076
  br label %if.end199, !dbg !11073

if.else156:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata i32* %copy_count, metadata !11077, metadata !DIExpression()), !dbg !11079
  %109 = load i32, i32* %framesize, align 4, !dbg !11080
  store i32 %109, i32* %copy_count, align 4, !dbg !11079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11081, metadata !DIExpression()), !dbg !11082
  %110 = load i32, i32* %start, align 4, !dbg !11083
  store i32 %110, i32* %i, align 4, !dbg !11082
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11084, metadata !DIExpression()), !dbg !11085
  %111 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11086
  %tmp_rbuf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %111, i32 0, i32 72, !dbg !11087
  %112 = load i8*, i8** %tmp_rbuf, align 8, !dbg !11087
  store i8* %112, i8** %p, align 8, !dbg !11085
  %113 = load i32, i32* %framesize, align 4, !dbg !11088
  %114 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11089
  %tmp_rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %114, i32 0, i32 73, !dbg !11090
  store i32 %113, i32* %tmp_rbuf_count, align 8, !dbg !11091
  %115 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11092
  %icount157 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %115, i32 0, i32 11, !dbg !11093
  %rxok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount157, i32 0, i32 20, !dbg !11094
  %116 = load i32, i32* %rxok, align 4, !dbg !11095
  %inc158 = add i32 %116, 1, !dbg !11095
  store i32 %inc158, i32* %rxok, align 4, !dbg !11095
  br label %while.cond, !dbg !11096

while.cond:                                       ; preds = %if.end179, %if.else156
  %117 = load i32, i32* %copy_count, align 4, !dbg !11097
  %tobool159 = icmp ne i32 %117, 0, !dbg !11096
  br i1 %tobool159, label %while.body, label %while.end, !dbg !11096

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %partial_count, metadata !11098, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x345, metadata !11101, metadata !DIExpression()), !dbg !11103
  %118 = load i32, i32* %copy_count, align 4, !dbg !11103
  store i32 %118, i32* %__UNIQUE_ID___x345, align 4, !dbg !11103
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y346, metadata !11104, metadata !DIExpression()), !dbg !11103
  %119 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11103
  %rbuf_fill_level160 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %119, i32 0, i32 39, !dbg !11103
  %120 = load i32, i32* %rbuf_fill_level160, align 8, !dbg !11103
  store i32 %120, i32* %__UNIQUE_ID___y346, align 4, !dbg !11103
  %121 = load i32, i32* %__UNIQUE_ID___x345, align 4, !dbg !11103
  %122 = load i32, i32* %__UNIQUE_ID___y346, align 4, !dbg !11103
  %cmp162 = icmp slt i32 %121, %122, !dbg !11103
  br i1 %cmp162, label %cond.true164, label %cond.false165, !dbg !11103

cond.true164:                                     ; preds = %while.body
  %123 = load i32, i32* %__UNIQUE_ID___x345, align 4, !dbg !11103
  br label %cond.end166, !dbg !11103

cond.false165:                                    ; preds = %while.body
  %124 = load i32, i32* %__UNIQUE_ID___y346, align 4, !dbg !11103
  br label %cond.end166, !dbg !11103

cond.end166:                                      ; preds = %cond.false165, %cond.true164
  %cond167 = phi i32 [ %123, %cond.true164 ], [ %124, %cond.false165 ], !dbg !11103
  store i32 %cond167, i32* %tmp161, align 4, !dbg !11103
  %125 = load i32, i32* %tmp161, align 4, !dbg !11103
  store i32 %125, i32* %partial_count, align 4, !dbg !11100
  %126 = load i8*, i8** %p, align 8, !dbg !11105
  %127 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11106
  %rbufs168 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %127, i32 0, i32 63, !dbg !11107
  %128 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs168, align 8, !dbg !11107
  %129 = load i32, i32* %i, align 4, !dbg !11108
  %idxprom169 = sext i32 %129 to i64, !dbg !11106
  %arrayidx170 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %128, i64 %idxprom169, !dbg !11106
  %buf171 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx170, i32 0, i32 4, !dbg !11109
  %130 = load i8*, i8** %buf171, align 8, !dbg !11109
  %131 = load i32, i32* %partial_count, align 4, !dbg !11110
  %conv172 = sext i32 %131 to i64, !dbg !11110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %126, i8* align 1 %130, i64 %conv172, i1 false), !dbg !11111
  %132 = load i32, i32* %partial_count, align 4, !dbg !11112
  %133 = load i8*, i8** %p, align 8, !dbg !11113
  %idx.ext = sext i32 %132 to i64, !dbg !11113
  %add.ptr = getelementptr i8, i8* %133, i64 %idx.ext, !dbg !11113
  store i8* %add.ptr, i8** %p, align 8, !dbg !11113
  %134 = load i32, i32* %partial_count, align 4, !dbg !11114
  %135 = load i32, i32* %copy_count, align 4, !dbg !11115
  %sub173 = sub i32 %135, %134, !dbg !11115
  store i32 %sub173, i32* %copy_count, align 4, !dbg !11115
  %136 = load i32, i32* %i, align 4, !dbg !11116
  %inc174 = add i32 %136, 1, !dbg !11116
  store i32 %inc174, i32* %i, align 4, !dbg !11116
  %137 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11118
  %rbuf_count175 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %137, i32 0, i32 62, !dbg !11119
  %138 = load i32, i32* %rbuf_count175, align 8, !dbg !11119
  %cmp176 = icmp eq i32 %inc174, %138, !dbg !11120
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !11121

if.then178:                                       ; preds = %cond.end166
  store i32 0, i32* %i, align 4, !dbg !11122
  br label %if.end179, !dbg !11123

if.end179:                                        ; preds = %if.then178, %cond.end166
  br label %while.cond, !dbg !11096, !llvm.loop !11124

while.end:                                        ; preds = %while.cond
  %139 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11126
  %params180 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %139, i32 0, i32 36, !dbg !11128
  %crc_type181 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params180, i32 0, i32 6, !dbg !11129
  %140 = load i16, i16* %crc_type181, align 2, !dbg !11129
  %conv182 = zext i16 %140 to i32, !dbg !11126
  %and183 = and i32 %conv182, 32768, !dbg !11130
  %tobool184 = icmp ne i32 %and183, 0, !dbg !11130
  br i1 %tobool184, label %if.then185, label %if.end192, !dbg !11131

if.then185:                                       ; preds = %while.end
  %141 = load i16, i16* %status, align 2, !dbg !11132
  %conv186 = zext i16 %141 to i32, !dbg !11132
  %and187 = and i32 %conv186, 2, !dbg !11134
  %tobool188 = icmp ne i32 %and187, 0, !dbg !11135
  %142 = zext i1 %tobool188 to i64, !dbg !11135
  %cond189 = select i1 %tobool188, i32 1, i32 0, !dbg !11135
  %conv190 = trunc i32 %cond189 to i8, !dbg !11135
  %143 = load i8*, i8** %p, align 8, !dbg !11136
  store i8 %conv190, i8* %143, align 1, !dbg !11137
  %144 = load i32, i32* %framesize, align 4, !dbg !11138
  %inc191 = add i32 %144, 1, !dbg !11138
  store i32 %inc191, i32* %framesize, align 4, !dbg !11138
  br label %if.end192, !dbg !11139

if.end192:                                        ; preds = %if.then185, %while.end
  %145 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11140
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %145, i32 0, i32 74, !dbg !11142
  %146 = load i32, i32* %netcount, align 4, !dbg !11142
  %tobool193 = icmp ne i32 %146, 0, !dbg !11140
  br i1 %tobool193, label %if.then194, label %if.else196, !dbg !11143

if.then194:                                       ; preds = %if.end192
  %147 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11144
  %148 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11145
  %tmp_rbuf195 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %148, i32 0, i32 72, !dbg !11146
  %149 = load i8*, i8** %tmp_rbuf195, align 8, !dbg !11146
  %150 = load i32, i32* %framesize, align 4, !dbg !11147
  call void @hdlcdev_rx(%struct.slgt_info* %147, i8* %149, i32 %150) #11, !dbg !11148
  br label %if.end198, !dbg !11148

if.else196:                                       ; preds = %if.end192
  %151 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11149
  %152 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11150
  %tmp_rbuf197 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %152, i32 0, i32 72, !dbg !11151
  %153 = load i8*, i8** %tmp_rbuf197, align 8, !dbg !11151
  %154 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11152
  %flag_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %154, i32 0, i32 53, !dbg !11153
  %155 = load i8*, i8** %flag_buf, align 8, !dbg !11153
  %156 = load i32, i32* %framesize, align 4, !dbg !11154
  call void @ldisc_receive_buf(%struct.tty_struct* %151, i8* %153, i8* %155, i32 %156) #11, !dbg !11155
  br label %if.end198

if.end198:                                        ; preds = %if.else196, %if.then194
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then153
  br label %if.end200, !dbg !11156

if.end200:                                        ; preds = %if.end199, %if.end140
  %157 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11157
  %158 = load i32, i32* %start, align 4, !dbg !11158
  %159 = load i32, i32* %end, align 4, !dbg !11159
  call void @free_rbufs(%struct.slgt_info* %157, i32 %158, i32 %159) #11, !dbg !11160
  store i1 true, i1* %retval, align 1, !dbg !11161
  br label %return, !dbg !11161

cleanup:                                          ; preds = %if.end61, %if.then
  call void @llvm.dbg.label(metadata !11162), !dbg !11163
  store i1 false, i1* %retval, align 1, !dbg !11164
  br label %return, !dbg !11164

return:                                           ; preds = %cleanup, %if.end200
  %160 = load i1, i1* %retval, align 1, !dbg !11165
  ret i1 %160, !dbg !11165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rx_get_buf(%struct.slgt_info* %info) #1 !dbg !11166 {
entry:
  %retval = alloca i1, align 1
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11167, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11169, metadata !DIExpression()), !dbg !11170
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11171
  %rbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 64, !dbg !11172
  %1 = load i32, i32* %rbuf_current, align 8, !dbg !11172
  store i32 %1, i32* %i, align 4, !dbg !11170
  call void @llvm.dbg.declare(metadata i32* %count, metadata !11173, metadata !DIExpression()), !dbg !11174
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11175
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 63, !dbg !11175
  %3 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !11175
  %4 = load i32, i32* %i, align 4, !dbg !11175
  %idxprom = zext i32 %4 to i64, !dbg !11175
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %3, i64 %idxprom, !dbg !11175
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !11175
  %5 = load i16, i16* %status, align 2, !dbg !11175
  %conv = zext i16 %5 to i32, !dbg !11175
  %and = and i32 %conv, 32768, !dbg !11175
  %tobool = icmp ne i32 %and, 0, !dbg !11175
  br i1 %tobool, label %if.end, label %if.then, !dbg !11177

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11178
  br label %return, !dbg !11178

if.end:                                           ; preds = %entry
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11179
  %rbufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 63, !dbg !11179
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs1, align 8, !dbg !11179
  %8 = load i32, i32* %i, align 4, !dbg !11179
  %idxprom2 = zext i32 %8 to i64, !dbg !11179
  %arrayidx3 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 %idxprom2, !dbg !11179
  %count4 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx3, i32 0, i32 0, !dbg !11179
  %9 = load i16, i16* %count4, align 8, !dbg !11179
  %conv5 = zext i16 %9 to i32, !dbg !11179
  store i32 %conv5, i32* %count, align 4, !dbg !11180
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11181
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !11182
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !11183
  %11 = load i64, i64* %mode, align 8, !dbg !11183
  switch i64 %11, label %sw.epilog [
    i64 3, label %sw.bb
    i64 4, label %sw.bb
    i64 8, label %sw.bb
  ], !dbg !11184

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11185
  %rbufs6 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 63, !dbg !11185
  %13 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs6, align 8, !dbg !11185
  %14 = load i32, i32* %i, align 4, !dbg !11185
  %idxprom7 = zext i32 %14 to i64, !dbg !11185
  %arrayidx8 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %13, i64 %idxprom7, !dbg !11185
  %status9 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx8, i32 0, i32 1, !dbg !11185
  %15 = load i16, i16* %status9, align 2, !dbg !11185
  %conv10 = zext i16 %15 to i32, !dbg !11185
  %and11 = and i32 %conv10, 56, !dbg !11185
  %shr = ashr i32 %and11, 3, !dbg !11185
  %tobool12 = icmp ne i32 %shr, 0, !dbg !11185
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11188

if.then13:                                        ; preds = %sw.bb
  %16 = load i32, i32* %count, align 4, !dbg !11189
  %dec = add i32 %16, -1, !dbg !11189
  store i32 %dec, i32* %count, align 4, !dbg !11189
  br label %if.end14, !dbg !11190

if.end14:                                         ; preds = %if.then13, %sw.bb
  br label %sw.epilog, !dbg !11191

sw.epilog:                                        ; preds = %if.end, %if.end14
  %17 = load i32, i32* @debug_level, align 4, !dbg !11192
  %cmp = icmp sge i32 %17, 1, !dbg !11192
  br i1 %cmp, label %if.then16, label %if.end20, !dbg !11194

if.then16:                                        ; preds = %sw.epilog
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11192
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11192
  %rbufs17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 63, !dbg !11192
  %20 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs17, align 8, !dbg !11192
  %21 = load i32, i32* %i, align 4, !dbg !11192
  %idxprom18 = zext i32 %21 to i64, !dbg !11192
  %arrayidx19 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %20, i64 %idxprom18, !dbg !11192
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx19, i32 0, i32 4, !dbg !11192
  %22 = load i8*, i8** %buf, align 8, !dbg !11192
  %23 = load i32, i32* %count, align 4, !dbg !11192
  call void @trace_block(%struct.slgt_info* %18, i8* %22, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !11192
  br label %if.end20, !dbg !11192

if.end20:                                         ; preds = %if.then16, %sw.epilog
  %24 = load i32, i32* @debug_level, align 4, !dbg !11195
  %cmp21 = icmp sge i32 %24, 3, !dbg !11195
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11197

if.then23:                                        ; preds = %if.end20
  %25 = load i32, i32* %count, align 4, !dbg !11195
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i32 %25) #12, !dbg !11195
  br label %if.end24, !dbg !11195

if.end24:                                         ; preds = %if.then23, %if.end20
  %26 = load i32, i32* %count, align 4, !dbg !11198
  %tobool25 = icmp ne i32 %26, 0, !dbg !11198
  br i1 %tobool25, label %if.then26, label %if.end31, !dbg !11200

if.then26:                                        ; preds = %if.end24
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11201
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 1, !dbg !11202
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !11203
  %28 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11203
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11204
  %rbufs27 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 63, !dbg !11205
  %30 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs27, align 8, !dbg !11205
  %31 = load i32, i32* %i, align 4, !dbg !11206
  %idxprom28 = zext i32 %31 to i64, !dbg !11204
  %arrayidx29 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %30, i64 %idxprom28, !dbg !11204
  %buf30 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx29, i32 0, i32 4, !dbg !11207
  %32 = load i8*, i8** %buf30, align 8, !dbg !11207
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11208
  %flag_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 53, !dbg !11209
  %34 = load i8*, i8** %flag_buf, align 8, !dbg !11209
  %35 = load i32, i32* %count, align 4, !dbg !11210
  call void @ldisc_receive_buf(%struct.tty_struct* %28, i8* %32, i8* %34, i32 %35) #11, !dbg !11211
  br label %if.end31, !dbg !11211

if.end31:                                         ; preds = %if.then26, %if.end24
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11212
  %37 = load i32, i32* %i, align 4, !dbg !11213
  %38 = load i32, i32* %i, align 4, !dbg !11214
  call void @free_rbufs(%struct.slgt_info* %36, i32 %37, i32 %38) #11, !dbg !11215
  store i1 true, i1* %retval, align 1, !dbg !11216
  br label %return, !dbg !11216

return:                                           ; preds = %if.end31, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !11217
  ret i1 %39, !dbg !11217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_start(%struct.slgt_info* %info) #1 !dbg !11218 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11219, metadata !DIExpression()), !dbg !11220
  call void @llvm.dbg.declare(metadata i16* %val, metadata !11221, metadata !DIExpression()), !dbg !11222
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11223
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11223
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %1, i32 140) #11, !dbg !11223
  %conv = zext i16 %call to i32, !dbg !11223
  %and = and i32 %conv, -1281, !dbg !11223
  %conv1 = trunc i32 %and to i16, !dbg !11223
  call void @wr_reg16(%struct.slgt_info* %0, i32 140, i16 zeroext %conv1) #11, !dbg !11223
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11224
  call void @wr_reg16(%struct.slgt_info* %2, i32 142, i16 zeroext 256) #11, !dbg !11225
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11226
  %call2 = call zeroext i16 @rd_reg16(%struct.slgt_info* %3, i32 134) #11, !dbg !11227
  %conv3 = zext i16 %call2 to i32, !dbg !11227
  %and4 = and i32 %conv3, -3, !dbg !11228
  %conv5 = trunc i32 %and4 to i16, !dbg !11227
  store i16 %conv5, i16* %val, align 2, !dbg !11229
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11230
  %5 = load i16, i16* %val, align 2, !dbg !11231
  %conv6 = zext i16 %5 to i32, !dbg !11231
  %or = or i32 %conv6, 4, !dbg !11232
  %conv7 = trunc i32 %or to i16, !dbg !11233
  call void @wr_reg16(%struct.slgt_info* %4, i32 134, i16 zeroext %conv7) #11, !dbg !11234
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11235
  %7 = load i16, i16* %val, align 2, !dbg !11236
  call void @wr_reg16(%struct.slgt_info* %6, i32 134, i16 zeroext %7) #11, !dbg !11237
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11238
  call void @rdma_reset(%struct.slgt_info* %8) #11, !dbg !11239
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11240
  call void @reset_rbufs(%struct.slgt_info* %9) #11, !dbg !11241
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11242
  %rx_pio = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 40, !dbg !11244
  %11 = load i32, i32* %rx_pio, align 4, !dbg !11244
  %tobool = icmp ne i32 %11, 0, !dbg !11242
  br i1 %tobool, label %if.then, label %if.else, !dbg !11245

if.then:                                          ; preds = %entry
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11246
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11248
  %call8 = call zeroext i16 @rd_reg16(%struct.slgt_info* %13, i32 140) #11, !dbg !11249
  %conv9 = zext i16 %call8 to i32, !dbg !11249
  %and10 = and i32 %conv9, -16385, !dbg !11250
  %conv11 = trunc i32 %and10 to i16, !dbg !11251
  call void @wr_reg16(%struct.slgt_info* %12, i32 140, i16 zeroext %conv11) #11, !dbg !11252
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11253
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11253
  %call12 = call zeroext i16 @rd_reg16(%struct.slgt_info* %15, i32 140) #11, !dbg !11253
  %conv13 = zext i16 %call12 to i32, !dbg !11253
  %or14 = or i32 %conv13, 1024, !dbg !11253
  %conv15 = trunc i32 %or14 to i16, !dbg !11253
  call void @wr_reg16(%struct.slgt_info* %14, i32 140, i16 zeroext %conv15) #11, !dbg !11253
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11254
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 36, !dbg !11256
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !11257
  %17 = load i64, i64* %mode, align 8, !dbg !11257
  %cmp = icmp eq i64 %17, 1, !dbg !11258
  br i1 %cmp, label %if.then17, label %if.end, !dbg !11259

if.then17:                                        ; preds = %if.then
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11260
  call void @wr_reg32(%struct.slgt_info* %18, i32 144, i32 64) #11, !dbg !11262
  br label %if.end, !dbg !11263

if.end:                                           ; preds = %if.then17, %if.then
  br label %if.end29, !dbg !11264

if.else:                                          ; preds = %entry
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11265
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11267
  %call18 = call zeroext i16 @rd_reg16(%struct.slgt_info* %20, i32 140) #11, !dbg !11268
  %conv19 = zext i16 %call18 to i32, !dbg !11268
  %or20 = or i32 %conv19, 16384, !dbg !11269
  %conv21 = trunc i32 %or20 to i16, !dbg !11270
  call void @wr_reg16(%struct.slgt_info* %19, i32 140, i16 zeroext %conv21) #11, !dbg !11271
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11272
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11273
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 63, !dbg !11274
  %23 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !11274
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %23, i64 0, !dbg !11273
  %pdesc = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 5, !dbg !11275
  %24 = load i32, i32* %pdesc, align 8, !dbg !11275
  call void @wr_reg32(%struct.slgt_info* %21, i32 152, i32 %24) #11, !dbg !11276
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11277
  %params22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 36, !dbg !11279
  %mode23 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params22, i32 0, i32 0, !dbg !11280
  %26 = load i64, i64* %mode23, align 8, !dbg !11280
  %cmp24 = icmp ne i64 %26, 1, !dbg !11281
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !11282

if.then26:                                        ; preds = %if.else
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11283
  call void @wr_reg32(%struct.slgt_info* %27, i32 144, i32 5) #11, !dbg !11285
  br label %if.end28, !dbg !11286

if.else27:                                        ; preds = %if.else
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11287
  call void @wr_reg32(%struct.slgt_info* %28, i32 144, i32 69) #11, !dbg !11289
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %if.then26
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11290
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11290
  %call30 = call zeroext i16 @rd_reg16(%struct.slgt_info* %30, i32 140) #11, !dbg !11290
  %conv31 = zext i16 %call30 to i32, !dbg !11290
  %or32 = or i32 %conv31, 256, !dbg !11290
  %conv33 = trunc i32 %or32 to i16, !dbg !11290
  call void @wr_reg16(%struct.slgt_info* %29, i32 140, i16 zeroext %conv33) #11, !dbg !11290
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11291
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11292
  %call34 = call zeroext i16 @rd_reg16(%struct.slgt_info* %32, i32 134) #11, !dbg !11293
  %conv35 = zext i16 %call34 to i32, !dbg !11293
  %or36 = or i32 %conv35, 2, !dbg !11294
  %conv37 = trunc i32 %or36 to i16, !dbg !11295
  call void @wr_reg16(%struct.slgt_info* %31, i32 134, i16 zeroext %conv37) #11, !dbg !11296
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11297
  %rx_restart = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 46, !dbg !11298
  store i8 0, i8* %rx_restart, align 1, !dbg !11299
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11300
  %rx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %34, i32 0, i32 45, !dbg !11301
  store i8 1, i8* %rx_enabled, align 8, !dbg !11302
  ret void, !dbg !11303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bh_transmit(%struct.slgt_info* %info) #1 !dbg !11304 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !11307, metadata !DIExpression()), !dbg !11308
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11309
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !11310
  %tty1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !11311
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty1, align 8, !dbg !11311
  store %struct.tty_struct* %1, %struct.tty_struct** %tty, align 8, !dbg !11308
  %2 = load i32, i32* @debug_level, align 4, !dbg !11312
  %cmp = icmp sge i32 %2, 4, !dbg !11312
  br i1 %cmp, label %if.then, label %if.end, !dbg !11314

if.then:                                          ; preds = %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11312
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !11312
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !11312
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11312
  br label %if.end, !dbg !11312

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11315
  %tobool = icmp ne %struct.tty_struct* %4, null, !dbg !11315
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11317

if.then2:                                         ; preds = %if.end
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11318
  call void @tty_wakeup(%struct.tty_struct* %5) #11, !dbg !11319
  br label %if.end3, !dbg !11319

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !11320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_block(%struct.slgt_info* %info, i8* %data, i32 %count, i8* %label) #1 !dbg !11321 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %label.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %linecount = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11324, metadata !DIExpression()), !dbg !11325
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11326, metadata !DIExpression()), !dbg !11327
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !11328, metadata !DIExpression()), !dbg !11329
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !11330, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11332, metadata !DIExpression()), !dbg !11333
  call void @llvm.dbg.declare(metadata i32* %linecount, metadata !11334, metadata !DIExpression()), !dbg !11335
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11336
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 4, !dbg !11337
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !11336
  %1 = load i8*, i8** %label.addr, align 8, !dbg !11338
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay, i8* %1) #12, !dbg !11339
  br label %while.cond, !dbg !11340

while.cond:                                       ; preds = %for.end32, %entry
  %2 = load i32, i32* %count.addr, align 4, !dbg !11341
  %tobool = icmp ne i32 %2, 0, !dbg !11340
  br i1 %tobool, label %while.body, label %while.end, !dbg !11340

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %count.addr, align 4, !dbg !11342
  %cmp = icmp sgt i32 %3, 16, !dbg !11344
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11345

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !11345

cond.false:                                       ; preds = %while.body
  %4 = load i32, i32* %count.addr, align 4, !dbg !11346
  br label %cond.end, !dbg !11345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 16, %cond.true ], [ %4, %cond.false ], !dbg !11345
  store i32 %cond, i32* %linecount, align 4, !dbg !11347
  store i32 0, i32* %i, align 4, !dbg !11348
  br label %for.cond, !dbg !11350

for.cond:                                         ; preds = %for.inc, %cond.end
  %5 = load i32, i32* %i, align 4, !dbg !11351
  %6 = load i32, i32* %linecount, align 4, !dbg !11353
  %cmp1 = icmp slt i32 %5, %6, !dbg !11354
  br i1 %cmp1, label %for.body, label %for.end, !dbg !11355

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %data.addr, align 8, !dbg !11356
  %8 = load i32, i32* %i, align 4, !dbg !11357
  %idxprom = sext i32 %8 to i64, !dbg !11356
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !11356
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11356
  %conv = zext i8 %9 to i32, !dbg !11358
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i32 %conv) #12, !dbg !11359
  br label %for.inc, !dbg !11359

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !11360
  %inc = add i32 %10, 1, !dbg !11360
  store i32 %inc, i32* %i, align 4, !dbg !11360
  br label %for.cond, !dbg !11361, !llvm.loop !11362

for.end:                                          ; preds = %for.cond
  br label %for.cond3, !dbg !11364

for.cond3:                                        ; preds = %for.inc8, %for.end
  %11 = load i32, i32* %i, align 4, !dbg !11365
  %cmp4 = icmp slt i32 %11, 17, !dbg !11368
  br i1 %cmp4, label %for.body6, label %for.end10, !dbg !11369

for.body6:                                        ; preds = %for.cond3
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !11370
  br label %for.inc8, !dbg !11370

for.inc8:                                         ; preds = %for.body6
  %12 = load i32, i32* %i, align 4, !dbg !11371
  %inc9 = add i32 %12, 1, !dbg !11371
  store i32 %inc9, i32* %i, align 4, !dbg !11371
  br label %for.cond3, !dbg !11372, !llvm.loop !11373

for.end10:                                        ; preds = %for.cond3
  store i32 0, i32* %i, align 4, !dbg !11375
  br label %for.cond11, !dbg !11377

for.cond11:                                       ; preds = %for.inc30, %for.end10
  %13 = load i32, i32* %i, align 4, !dbg !11378
  %14 = load i32, i32* %linecount, align 4, !dbg !11380
  %cmp12 = icmp slt i32 %13, %14, !dbg !11381
  br i1 %cmp12, label %for.body14, label %for.end32, !dbg !11382

for.body14:                                       ; preds = %for.cond11
  %15 = load i8*, i8** %data.addr, align 8, !dbg !11383
  %16 = load i32, i32* %i, align 4, !dbg !11386
  %idxprom15 = sext i32 %16 to i64, !dbg !11383
  %arrayidx16 = getelementptr i8, i8* %15, i64 %idxprom15, !dbg !11383
  %17 = load i8, i8* %arrayidx16, align 1, !dbg !11383
  %conv17 = sext i8 %17 to i32, !dbg !11383
  %cmp18 = icmp sge i32 %conv17, 32, !dbg !11387
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !11388

land.lhs.true:                                    ; preds = %for.body14
  %18 = load i8*, i8** %data.addr, align 8, !dbg !11389
  %19 = load i32, i32* %i, align 4, !dbg !11390
  %idxprom20 = sext i32 %19 to i64, !dbg !11389
  %arrayidx21 = getelementptr i8, i8* %18, i64 %idxprom20, !dbg !11389
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !11389
  %conv22 = sext i8 %20 to i32, !dbg !11389
  %cmp23 = icmp sle i32 %conv22, 126, !dbg !11391
  br i1 %cmp23, label %if.then, label %if.else, !dbg !11392

if.then:                                          ; preds = %land.lhs.true
  %21 = load i8*, i8** %data.addr, align 8, !dbg !11393
  %22 = load i32, i32* %i, align 4, !dbg !11394
  %idxprom25 = sext i32 %22 to i64, !dbg !11393
  %arrayidx26 = getelementptr i8, i8* %21, i64 %idxprom25, !dbg !11393
  %23 = load i8, i8* %arrayidx26, align 1, !dbg !11393
  %conv27 = sext i8 %23 to i32, !dbg !11393
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i32 %conv27) #12, !dbg !11395
  br label %if.end, !dbg !11395

if.else:                                          ; preds = %land.lhs.true, %for.body14
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !11396
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc30, !dbg !11397

for.inc30:                                        ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !11398
  %inc31 = add i32 %24, 1, !dbg !11398
  store i32 %inc31, i32* %i, align 4, !dbg !11398
  br label %for.cond11, !dbg !11399, !llvm.loop !11400

for.end32:                                        ; preds = %for.cond11
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !11402
  %25 = load i32, i32* %linecount, align 4, !dbg !11403
  %26 = load i8*, i8** %data.addr, align 8, !dbg !11404
  %idx.ext = sext i32 %25 to i64, !dbg !11404
  %add.ptr = getelementptr i8, i8* %26, i64 %idx.ext, !dbg !11404
  store i8* %add.ptr, i8** %data.addr, align 8, !dbg !11404
  %27 = load i32, i32* %linecount, align 4, !dbg !11405
  %28 = load i32, i32* %count.addr, align 4, !dbg !11406
  %sub = sub i32 %28, %27, !dbg !11406
  store i32 %sub, i32* %count.addr, align 4, !dbg !11406
  br label %while.cond, !dbg !11340, !llvm.loop !11407

while.end:                                        ; preds = %while.cond
  ret void, !dbg !11409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #1 !dbg !11410 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !11416, metadata !DIExpression()), !dbg !11417
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !11418, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !11420, metadata !DIExpression()), !dbg !11421
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11422
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !11423
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !11424
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !11424
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !11421
  call void @llvm.dbg.declare(metadata i32* %change, metadata !11425, metadata !DIExpression()), !dbg !11426
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11427
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !11428
  %3 = load i32, i32* %flags, align 8, !dbg !11428
  %and = and i32 %3, 1, !dbg !11429
  %tobool = icmp ne i32 %and, 0, !dbg !11429
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11430

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !11431
  %conv = sext i8 %4 to i32, !dbg !11431
  %cmp = icmp ne i32 %conv, 0, !dbg !11432
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !11433
  %land.ext = zext i1 %5 to i32, !dbg !11430
  store i32 %land.ext, i32* %change, align 4, !dbg !11434
  %6 = load i32, i32* %change, align 4, !dbg !11435
  %tobool2 = icmp ne i32 %6, 0, !dbg !11435
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !11437

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11438
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !11439
  %8 = load i32, i32* %used, align 8, !dbg !11439
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11440
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !11441
  %10 = load i32, i32* %size, align 4, !dbg !11441
  %cmp3 = icmp slt i32 %8, %10, !dbg !11442
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !11443

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11444
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !11447
  %12 = load i32, i32* %flags5, align 8, !dbg !11447
  %neg = xor i32 %12, -1, !dbg !11448
  %and6 = and i32 %neg, 1, !dbg !11449
  %tobool7 = icmp ne i32 %and6, 0, !dbg !11449
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !11450

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !11451
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11452
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11453
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !11454
  %16 = load i32, i32* %used9, align 8, !dbg !11454
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #11, !dbg !11455
  store i8 %13, i8* %call, align 1, !dbg !11456
  br label %if.end, !dbg !11457

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !11458
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11459
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !11460
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !11461
  %20 = load i32, i32* %used10, align 8, !dbg !11462
  %inc = add i32 %20, 1, !dbg !11462
  store i32 %inc, i32* %used10, align 8, !dbg !11462
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #11, !dbg !11463
  store i8 %17, i8* %call11, align 1, !dbg !11464
  store i32 1, i32* %retval, align 4, !dbg !11465
  br label %return, !dbg !11465

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11466
  %22 = load i8, i8* %ch.addr, align 1, !dbg !11467
  %23 = load i8, i8* %flag.addr, align 1, !dbg !11468
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #11, !dbg !11469
  store i32 %call13, i32* %retval, align 4, !dbg !11470
  br label %return, !dbg !11470

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !11471
  ret i32 %24, !dbg !11471
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_rbufs(%struct.slgt_info* %info, i32 %i, i32 %last) #1 !dbg !11472 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i.addr = alloca i32, align 4
  %last.addr = alloca i32, align 4
  %done = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11475, metadata !DIExpression()), !dbg !11476
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  store i32 %last, i32* %last.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last.addr, metadata !11479, metadata !DIExpression()), !dbg !11480
  call void @llvm.dbg.declare(metadata i32* %done, metadata !11481, metadata !DIExpression()), !dbg !11482
  store i32 0, i32* %done, align 4, !dbg !11482
  br label %while.cond, !dbg !11483

while.cond:                                       ; preds = %if.end8, %entry
  %0 = load i32, i32* %done, align 4, !dbg !11484
  %tobool = icmp ne i32 %0, 0, !dbg !11485
  %lnot = xor i1 %tobool, true, !dbg !11485
  br i1 %lnot, label %while.body, label %while.end, !dbg !11483

while.body:                                       ; preds = %while.cond
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11486
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 63, !dbg !11488
  %2 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !11488
  %3 = load i32, i32* %i.addr, align 4, !dbg !11489
  %idxprom = zext i32 %3 to i64, !dbg !11486
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %2, i64 %idxprom, !dbg !11486
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !11490
  store i16 0, i16* %status, align 2, !dbg !11491
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11492
  %rbuf_fill_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 39, !dbg !11492
  %5 = load i32, i32* %rbuf_fill_level, align 8, !dbg !11492
  %conv = trunc i32 %5 to i16, !dbg !11492
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11492
  %rbufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 63, !dbg !11492
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs1, align 8, !dbg !11492
  %8 = load i32, i32* %i.addr, align 4, !dbg !11492
  %idxprom2 = zext i32 %8 to i64, !dbg !11492
  %arrayidx3 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 %idxprom2, !dbg !11492
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx3, i32 0, i32 0, !dbg !11492
  store i16 %conv, i16* %count, align 8, !dbg !11492
  %9 = load i32, i32* %i.addr, align 4, !dbg !11493
  %10 = load i32, i32* %last.addr, align 4, !dbg !11495
  %cmp = icmp eq i32 %9, %10, !dbg !11496
  br i1 %cmp, label %if.then, label %if.end, !dbg !11497

if.then:                                          ; preds = %while.body
  store i32 1, i32* %done, align 4, !dbg !11498
  br label %if.end, !dbg !11499

if.end:                                           ; preds = %if.then, %while.body
  %11 = load i32, i32* %i.addr, align 4, !dbg !11500
  %inc = add i32 %11, 1, !dbg !11500
  store i32 %inc, i32* %i.addr, align 4, !dbg !11500
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11502
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 62, !dbg !11503
  %13 = load i32, i32* %rbuf_count, align 8, !dbg !11503
  %cmp5 = icmp eq i32 %inc, %13, !dbg !11504
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11505

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %i.addr, align 4, !dbg !11506
  br label %if.end8, !dbg !11507

if.end8:                                          ; preds = %if.then7, %if.end
  br label %while.cond, !dbg !11483, !llvm.loop !11508

while.end:                                        ; preds = %while.cond
  %14 = load i32, i32* %i.addr, align 4, !dbg !11510
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11511
  %rbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 64, !dbg !11512
  store i32 %14, i32* %rbuf_current, align 8, !dbg !11513
  ret void, !dbg !11514
}

; Function Attrs: noredzone
declare dso_local void @tty_flip_buffer_push(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #1 !dbg !11515 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !11522
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !11523
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #11, !dbg !11524
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !11525
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !11526
  %3 = load i32, i32* %size, align 4, !dbg !11526
  %idx.ext = sext i32 %3 to i64, !dbg !11527
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !11527
  ret i8* %add.ptr, !dbg !11528
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #1 !dbg !11529 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !11532, metadata !DIExpression()), !dbg !11533
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !11534, metadata !DIExpression()), !dbg !11535
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !11536
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !11537
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !11536
  %1 = bitcast i64* %arraydecay to i8*, !dbg !11538
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !11539
  %idx.ext = sext i32 %2 to i64, !dbg !11540
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11540
  ret i8* %add.ptr, !dbg !11541
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_rx(%struct.slgt_info* %info, i8* %buf, i32 %size) #1 !dbg !11542 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %dev = alloca %struct.net_device*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11545, metadata !DIExpression()), !dbg !11546
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11547, metadata !DIExpression()), !dbg !11548
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11549, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !11551, metadata !DIExpression()), !dbg !11552
  %0 = load i32, i32* %size.addr, align 4, !dbg !11553
  %call = call %struct.sk_buff* @dev_alloc_skb(i32 %0) #11, !dbg !11554
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !11552
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11555, metadata !DIExpression()), !dbg !11556
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11557
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 76, !dbg !11558
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11558
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !11556
  %3 = load i32, i32* @debug_level, align 4, !dbg !11559
  %cmp = icmp sge i32 %3, 3, !dbg !11559
  br i1 %cmp, label %if.then, label %if.end, !dbg !11561

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11559
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !11559
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !11559
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11559
  br label %if.end, !dbg !11559

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11562
  %cmp2 = icmp eq %struct.sk_buff* %5, null, !dbg !11564
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !11565

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* @debug_level, align 4, !dbg !11566
  %cmp4 = icmp sge i32 %6, 2, !dbg !11566
  br i1 %cmp4, label %if.then5, label %if.end9, !dbg !11569

if.then5:                                         ; preds = %if.then3
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11566
  %name6 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 0, !dbg !11566
  %arraydecay7 = getelementptr inbounds [16 x i8], [16 x i8]* %name6, i64 0, i64 0, !dbg !11566
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay7) #12, !dbg !11566
  br label %if.end9, !dbg !11566

if.end9:                                          ; preds = %if.then5, %if.then3
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11570
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 24, !dbg !11571
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !11572
  %9 = load i64, i64* %rx_dropped, align 8, !dbg !11573
  %inc = add i64 %9, 1, !dbg !11573
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !11573
  br label %return, !dbg !11574

if.end10:                                         ; preds = %if.end
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11575
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !11576
  %12 = load i32, i32* %size.addr, align 4, !dbg !11577
  %call11 = call i8* @skb_put_data(%struct.sk_buff* %10, i8* %11, i32 %12) #11, !dbg !11578
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11579
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11580
  %call12 = call zeroext i16 @hdlc_type_trans(%struct.sk_buff* %13, %struct.net_device* %14) #11, !dbg !11581
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11582
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %15, i32 0, i32 29, !dbg !11583
  store i16 %call12, i16* %protocol, align 8, !dbg !11584
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11585
  %stats13 = getelementptr inbounds %struct.net_device, %struct.net_device* %16, i32 0, i32 24, !dbg !11586
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats13, i32 0, i32 0, !dbg !11587
  %17 = load i64, i64* %rx_packets, align 8, !dbg !11588
  %inc14 = add i64 %17, 1, !dbg !11588
  store i64 %inc14, i64* %rx_packets, align 8, !dbg !11588
  %18 = load i32, i32* %size.addr, align 4, !dbg !11589
  %conv = sext i32 %18 to i64, !dbg !11589
  %19 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11590
  %stats15 = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 24, !dbg !11591
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats15, i32 0, i32 2, !dbg !11592
  %20 = load i64, i64* %rx_bytes, align 8, !dbg !11593
  %add = add i64 %20, %conv, !dbg !11593
  store i64 %add, i64* %rx_bytes, align 8, !dbg !11593
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11594
  %call16 = call i32 @netif_rx(%struct.sk_buff* %21) #11, !dbg !11595
  br label %return, !dbg !11596

return:                                           ; preds = %if.end10, %if.end9
  ret void, !dbg !11596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ldisc_receive_buf(%struct.tty_struct* %tty, i8* %data, i8* %flags, i32 %count) #1 !dbg !11597 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %data.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %ld = alloca %struct.tty_ldisc*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11602, metadata !DIExpression()), !dbg !11603
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11604, metadata !DIExpression()), !dbg !11605
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !11608, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.declare(metadata %struct.tty_ldisc** %ld, metadata !11610, metadata !DIExpression()), !dbg !11611
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11612
  %tobool = icmp ne %struct.tty_struct* %0, null, !dbg !11612
  br i1 %tobool, label %if.end, label %if.then, !dbg !11614

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !11615

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11616
  %call = call %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct* %1) #11, !dbg !11617
  store %struct.tty_ldisc* %call, %struct.tty_ldisc** %ld, align 8, !dbg !11618
  %2 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !11619
  %tobool1 = icmp ne %struct.tty_ldisc* %2, null, !dbg !11619
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !11621

if.then2:                                         ; preds = %if.end
  %3 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !11622
  %ops = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %3, i32 0, i32 0, !dbg !11625
  %4 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops, align 8, !dbg !11625
  %receive_buf = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %4, i32 0, i32 14, !dbg !11626
  %5 = load void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*, i8*, i8*, i32)** %receive_buf, align 8, !dbg !11626
  %tobool3 = icmp ne void (%struct.tty_struct*, i8*, i8*, i32)* %5, null, !dbg !11622
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !11627

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !11628
  %ops5 = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %6, i32 0, i32 0, !dbg !11629
  %7 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops5, align 8, !dbg !11629
  %receive_buf6 = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %7, i32 0, i32 14, !dbg !11630
  %8 = load void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*, i8*, i8*, i32)** %receive_buf6, align 8, !dbg !11630
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11631
  %10 = load i8*, i8** %data.addr, align 8, !dbg !11632
  %11 = load i8*, i8** %flags.addr, align 8, !dbg !11633
  %12 = load i32, i32* %count.addr, align 4, !dbg !11634
  call void %8(%struct.tty_struct* %9, i8* %10, i8* %11, i32 %12) #11, !dbg !11628
  br label %if.end7, !dbg !11628

if.end7:                                          ; preds = %if.then4, %if.then2
  %13 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !11635
  call void @tty_ldisc_deref(%struct.tty_ldisc* %13) #11, !dbg !11636
  br label %if.end8, !dbg !11637

if.end8:                                          ; preds = %if.then, %if.end7, %if.end
  ret void, !dbg !11638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @dev_alloc_skb(i32 %length) #1 !dbg !11639 {
entry:
  %length.addr = alloca i32, align 4
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  %0 = load i32, i32* %length.addr, align 4, !dbg !11644
  %call = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* null, i32 %0) #11, !dbg !11645
  ret %struct.sk_buff* %call, !dbg !11646
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #1 !dbg !11647 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11652, metadata !DIExpression()), !dbg !11653
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11654, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !11656, metadata !DIExpression()), !dbg !11657
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11658
  %1 = load i32, i32* %len.addr, align 4, !dbg !11659
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #11, !dbg !11660
  store i8* %call, i8** %tmp, align 8, !dbg !11657
  %2 = load i8*, i8** %tmp, align 8, !dbg !11661
  %3 = load i8*, i8** %data.addr, align 8, !dbg !11662
  %4 = load i32, i32* %len.addr, align 4, !dbg !11663
  %conv = zext i32 %4 to i64, !dbg !11663
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !11664
  %5 = load i8*, i8** %tmp, align 8, !dbg !11665
  ret i8* %5, !dbg !11666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @hdlc_type_trans(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !11667 {
entry:
  %retval = alloca i16, align 2
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %hdlc = alloca %struct.hdlc_device*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11671, metadata !DIExpression()), !dbg !11672
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11673, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.declare(metadata %struct.hdlc_device** %hdlc, metadata !11675, metadata !DIExpression()), !dbg !11714
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11715
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11716
  store %struct.hdlc_device* %call, %struct.hdlc_device** %hdlc, align 8, !dbg !11714
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11717
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11718
  %3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 0, !dbg !11719
  %4 = bitcast %union.anon.42* %3 to %struct.anon.43*, !dbg !11719
  %5 = getelementptr inbounds %struct.anon.43, %struct.anon.43* %4, i32 0, i32 2, !dbg !11719
  %dev1 = bitcast %union.anon.44* %5 to %struct.net_device**, !dbg !11719
  store %struct.net_device* %1, %struct.net_device** %dev1, align 8, !dbg !11720
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11721
  call void @skb_reset_mac_header(%struct.sk_buff* %6) #11, !dbg !11722
  %7 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11723
  %proto = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %7, i32 0, i32 2, !dbg !11725
  %8 = load %struct.hdlc_proto*, %struct.hdlc_proto** %proto, align 8, !dbg !11725
  %type_trans = getelementptr inbounds %struct.hdlc_proto, %struct.hdlc_proto* %8, i32 0, i32 6, !dbg !11726
  %9 = load i16 (%struct.sk_buff*, %struct.net_device*)*, i16 (%struct.sk_buff*, %struct.net_device*)** %type_trans, align 8, !dbg !11726
  %tobool = icmp ne i16 (%struct.sk_buff*, %struct.net_device*)* %9, null, !dbg !11723
  br i1 %tobool, label %if.then, label %if.else, !dbg !11727

if.then:                                          ; preds = %entry
  %10 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11728
  %proto2 = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %10, i32 0, i32 2, !dbg !11729
  %11 = load %struct.hdlc_proto*, %struct.hdlc_proto** %proto2, align 8, !dbg !11729
  %type_trans3 = getelementptr inbounds %struct.hdlc_proto, %struct.hdlc_proto* %11, i32 0, i32 6, !dbg !11730
  %12 = load i16 (%struct.sk_buff*, %struct.net_device*)*, i16 (%struct.sk_buff*, %struct.net_device*)** %type_trans3, align 8, !dbg !11730
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11731
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11732
  %call4 = call zeroext i16 %12(%struct.sk_buff* %13, %struct.net_device* %14) #11, !dbg !11728
  store i16 %call4, i16* %retval, align 2, !dbg !11733
  br label %return, !dbg !11733

if.else:                                          ; preds = %entry
  store i16 6400, i16* %retval, align 2, !dbg !11734
  br label %return, !dbg !11734

return:                                           ; preds = %if.else, %if.then
  %15 = load i16, i16* %retval, align 2, !dbg !11735
  ret i16 %15, !dbg !11735
}

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #1 !dbg !11736 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11739, metadata !DIExpression()), !dbg !11740
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !11741, metadata !DIExpression()), !dbg !11742
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11743
  %1 = load i32, i32* %length.addr, align 4, !dbg !11744
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #11, !dbg !11745
  ret %struct.sk_buff* %call, !dbg !11746
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #4

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %dev) #1 !dbg !11747 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11751, metadata !DIExpression()), !dbg !11752
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11753
  %call = call i8* @netdev_priv(%struct.net_device* %0) #11, !dbg !11754
  %1 = bitcast i8* %call to %struct.hdlc_device*, !dbg !11754
  ret %struct.hdlc_device* %1, !dbg !11755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_mac_header(%struct.sk_buff* %skb) #1 !dbg !11756 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11759
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !11760
  %1 = load i8*, i8** %data, align 8, !dbg !11760
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11761
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !11762
  %3 = load i8*, i8** %head, align 8, !dbg !11762
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !11763
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11763
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11763
  %conv = trunc i64 %sub.ptr.sub to i16, !dbg !11759
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11764
  %mac_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 32, !dbg !11765
  store i16 %conv, i16* %mac_header, align 2, !dbg !11766
  ret void, !dbg !11767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #1 !dbg !11768 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11773
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11774
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11775
  ret i8* %add.ptr, !dbg !11776
}

; Function Attrs: noredzone
declare dso_local %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_deref(%struct.tty_ldisc*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_rbufs(%struct.slgt_info* %info) #1 !dbg !11777 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11778, metadata !DIExpression()), !dbg !11779
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11780
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11781
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 62, !dbg !11782
  %2 = load i32, i32* %rbuf_count, align 8, !dbg !11782
  %sub = sub i32 %2, 1, !dbg !11783
  call void @free_rbufs(%struct.slgt_info* %0, i32 0, i32 %sub) #11, !dbg !11784
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11785
  %rbuf_fill_index = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 66, !dbg !11786
  store i32 0, i32* %rbuf_fill_index, align 8, !dbg !11787
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11788
  %rbuf_fill_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 67, !dbg !11789
  store i16 0, i16* %rbuf_fill_count, align 4, !dbg !11790
  ret void, !dbg !11791
}

; Function Attrs: noredzone
declare dso_local void @tty_wakeup(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_tx_done(%struct.slgt_info* %info) #1 !dbg !11792 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11793, metadata !DIExpression()), !dbg !11794
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11795
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 76, !dbg !11797
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11797
  %call = call zeroext i1 @netif_queue_stopped(%struct.net_device* %1) #11, !dbg !11798
  br i1 %call, label %if.then, label %if.end, !dbg !11799

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11800
  %netdev1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 76, !dbg !11801
  %3 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !11801
  call void @netif_wake_queue(%struct.net_device* %3) #11, !dbg !11802
  br label %if.end, !dbg !11802

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #1 !dbg !11804 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11807, metadata !DIExpression()), !dbg !11808
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11809
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !11810
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #11, !dbg !11811
  ret i1 %call1, !dbg !11812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #1 !dbg !11813 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11816
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !11817
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #11, !dbg !11818
  ret void, !dbg !11819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #1 !dbg !11820 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !11827
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !11828
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #11, !dbg !11829
  ret i1 %call, !dbg !11830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #1 !dbg !11831 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11838
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !11839
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !11839
  %2 = load i32, i32* %index.addr, align 4, !dbg !11840
  %idxprom = zext i32 %2 to i64, !dbg !11838
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !11838
  ret %struct.netdev_queue* %arrayidx, !dbg !11841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !11842 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !11849, metadata !DIExpression()), !dbg !11851
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !11853, metadata !DIExpression()), !dbg !11854
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !11855, metadata !DIExpression()), !dbg !11856
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11857, metadata !DIExpression()), !dbg !11859
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11861, metadata !DIExpression()), !dbg !11862
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11863, metadata !DIExpression()), !dbg !11868
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11870, metadata !DIExpression()), !dbg !11871
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11872, metadata !DIExpression()), !dbg !11873
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11874, metadata !DIExpression()), !dbg !11875
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11876
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11877
  %div = sdiv i64 %1, 64, !dbg !11877
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11878
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11876
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11879
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11880
  %conv.i = trunc i64 %4 to i32, !dbg !11880
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !11881
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11882
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11882
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !11882
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11883
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !11883
  br i1 %8, label %cond.true, label %cond.false, !dbg !11883

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !11883
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !11883
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !11884
  %and.i = and i64 %11, 63, !dbg !11885
  %shl.i = shl i64 1, %and.i, !dbg !11886
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !11887
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !11888
  %shr.i = ashr i64 %13, 6, !dbg !11889
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !11887
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !11887
  %and1.i = and i64 %shl.i, %14, !dbg !11890
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !11891
  %conv = zext i1 %cmp.i to i32, !dbg !11883
  br label %cond.end, !dbg !11883

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !11883
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !11883
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !11892
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !11893
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #10, !dbg !11894, !srcloc !11895
  store i8 %19, i8* %oldbit.i, align 1, !dbg !11894
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !11896
  %tobool.i = trunc i8 %20 to i1, !dbg !11896
  %conv2 = zext i1 %tobool.i to i32, !dbg !11883
  br label %cond.end, !dbg !11883

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !11883
  %tobool = icmp ne i32 %cond, 0, !dbg !11883
  ret i1 %tobool, !dbg !11897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !11898 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11902, metadata !DIExpression()), !dbg !11903
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  ret i1 true, !dbg !11906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !11907 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11911, metadata !DIExpression()), !dbg !11912
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11913, metadata !DIExpression()), !dbg !11914
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11915, metadata !DIExpression()), !dbg !11916
  ret void, !dbg !11917
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #4

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_init(%struct.slgt_info* %info) #1 !dbg !11918 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %rc = alloca i32, align 4
  %dev = alloca %struct.net_device*, align 8
  %hdlc = alloca %struct.hdlc_device*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !11921, metadata !DIExpression()), !dbg !11922
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11923, metadata !DIExpression()), !dbg !11924
  call void @llvm.dbg.declare(metadata %struct.hdlc_device** %hdlc, metadata !11925, metadata !DIExpression()), !dbg !11926
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11927
  %1 = bitcast %struct.slgt_info* %0 to i8*, !dbg !11927
  %call = call %struct.net_device* @alloc_hdlcdev(i8* %1) #11, !dbg !11928
  store %struct.net_device* %call, %struct.net_device** %dev, align 8, !dbg !11929
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11930
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !11930
  br i1 %tobool, label %if.end, label %if.then, !dbg !11932

if.then:                                          ; preds = %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11933
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !11935
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !11933
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay) #12, !dbg !11936
  store i32 -12, i32* %retval, align 4, !dbg !11937
  br label %return, !dbg !11937

if.end:                                           ; preds = %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11938
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 34, !dbg !11939
  %5 = load i32, i32* %phys_reg_addr, align 8, !dbg !11939
  %conv = zext i32 %5 to i64, !dbg !11938
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11940
  %mem_start = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 4, !dbg !11941
  store i64 %conv, i64* %mem_start, align 8, !dbg !11942
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11943
  %phys_reg_addr2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 34, !dbg !11944
  %8 = load i32, i32* %phys_reg_addr2, align 8, !dbg !11944
  %add = add i32 %8, 256, !dbg !11945
  %sub = sub i32 %add, 1, !dbg !11946
  %conv3 = zext i32 %sub to i64, !dbg !11943
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11947
  %mem_end = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 3, !dbg !11948
  store i64 %conv3, i64* %mem_end, align 8, !dbg !11949
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11950
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 31, !dbg !11951
  %11 = load i32, i32* %irq_level, align 4, !dbg !11951
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11952
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 6, !dbg !11953
  store i32 %11, i32* %irq, align 8, !dbg !11954
  %13 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11955
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 32, !dbg !11956
  store %struct.net_device_ops* @hdlcdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !11957
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11958
  %watchdog_timeo = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 94, !dbg !11959
  store i32 2500, i32* %watchdog_timeo, align 8, !dbg !11960
  %15 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11961
  %tx_queue_len = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 90, !dbg !11962
  store i32 50, i32* %tx_queue_len, align 8, !dbg !11963
  %16 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11964
  %call4 = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %16) #11, !dbg !11965
  store %struct.hdlc_device* %call4, %struct.hdlc_device** %hdlc, align 8, !dbg !11966
  %17 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11967
  %attach = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %17, i32 0, i32 0, !dbg !11968
  store i32 (%struct.net_device*, i16, i16)* @hdlcdev_attach, i32 (%struct.net_device*, i16, i16)** %attach, align 8, !dbg !11969
  %18 = load %struct.hdlc_device*, %struct.hdlc_device** %hdlc, align 8, !dbg !11970
  %xmit = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %18, i32 0, i32 1, !dbg !11971
  store i32 (%struct.sk_buff*, %struct.net_device*)* @hdlcdev_xmit, i32 (%struct.sk_buff*, %struct.net_device*)** %xmit, align 8, !dbg !11972
  %19 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11973
  %call5 = call i32 @register_netdev(%struct.net_device* %19) #11, !dbg !11973
  store i32 %call5, i32* %rc, align 4, !dbg !11974
  %20 = load i32, i32* %rc, align 4, !dbg !11975
  %tobool6 = icmp ne i32 %20, 0, !dbg !11975
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !11977

if.then7:                                         ; preds = %if.end
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !11978
  %21 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11980
  call void @free_netdev(%struct.net_device* %21) #11, !dbg !11981
  %22 = load i32, i32* %rc, align 4, !dbg !11982
  store i32 %22, i32* %retval, align 4, !dbg !11983
  br label %return, !dbg !11983

if.end9:                                          ; preds = %if.end
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11984
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !11985
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 76, !dbg !11986
  store %struct.net_device* %23, %struct.net_device** %netdev, align 8, !dbg !11987
  store i32 0, i32* %retval, align 4, !dbg !11988
  br label %return, !dbg !11988

return:                                           ; preds = %if.end9, %if.then7, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !11989
  ret i32 %25, !dbg !11989
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_hdlcdev(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_attach(%struct.net_device* %dev, i16 zeroext %encoding, i16 zeroext %parity) #1 !dbg !11990 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %encoding.addr = alloca i16, align 2
  %parity.addr = alloca i16, align 2
  %info = alloca %struct.slgt_info*, align 8
  %new_encoding = alloca i8, align 1
  %new_crctype = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11991, metadata !DIExpression()), !dbg !11992
  store i16 %encoding, i16* %encoding.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %encoding.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  store i16 %parity, i16* %parity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %parity.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !11997, metadata !DIExpression()), !dbg !11998
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11999
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !11999
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !11999
  %1 = load i8*, i8** %priv, align 8, !dbg !11999
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !11999
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !11998
  call void @llvm.dbg.declare(metadata i8* %new_encoding, metadata !12000, metadata !DIExpression()), !dbg !12001
  call void @llvm.dbg.declare(metadata i16* %new_crctype, metadata !12002, metadata !DIExpression()), !dbg !12003
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12004
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 1, !dbg !12006
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !12007
  %4 = load i32, i32* %count, align 4, !dbg !12007
  %tobool = icmp ne i32 %4, 0, !dbg !12004
  br i1 %tobool, label %if.then, label %if.end, !dbg !12008

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !12009
  br label %return, !dbg !12009

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !12010
  %cmp = icmp sge i32 %5, 3, !dbg !12010
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !12012

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12010
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !12010
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12010
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12010
  br label %if.end3, !dbg !12010

if.end3:                                          ; preds = %if.then1, %if.end
  %7 = load i16, i16* %encoding.addr, align 2, !dbg !12013
  %conv = zext i16 %7 to i32, !dbg !12013
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb4
    i32 3, label %sw.bb5
    i32 4, label %sw.bb6
    i32 5, label %sw.bb7
  ], !dbg !12014

sw.bb:                                            ; preds = %if.end3
  store i8 0, i8* %new_encoding, align 1, !dbg !12015
  br label %sw.epilog, !dbg !12017

sw.bb4:                                           ; preds = %if.end3
  store i8 3, i8* %new_encoding, align 1, !dbg !12018
  br label %sw.epilog, !dbg !12019

sw.bb5:                                           ; preds = %if.end3
  store i8 4, i8* %new_encoding, align 1, !dbg !12020
  br label %sw.epilog, !dbg !12021

sw.bb6:                                           ; preds = %if.end3
  store i8 5, i8* %new_encoding, align 1, !dbg !12022
  br label %sw.epilog, !dbg !12023

sw.bb7:                                           ; preds = %if.end3
  store i8 6, i8* %new_encoding, align 1, !dbg !12024
  br label %sw.epilog, !dbg !12025

sw.default:                                       ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !12026
  br label %return, !dbg !12026

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  %8 = load i16, i16* %parity.addr, align 2, !dbg !12027
  %conv8 = zext i16 %8 to i32, !dbg !12027
  switch i32 %conv8, label %sw.default12 [
    i32 1, label %sw.bb9
    i32 5, label %sw.bb10
    i32 7, label %sw.bb11
  ], !dbg !12028

sw.bb9:                                           ; preds = %sw.epilog
  store i16 0, i16* %new_crctype, align 2, !dbg !12029
  br label %sw.epilog13, !dbg !12031

sw.bb10:                                          ; preds = %sw.epilog
  store i16 1, i16* %new_crctype, align 2, !dbg !12032
  br label %sw.epilog13, !dbg !12033

sw.bb11:                                          ; preds = %sw.epilog
  store i16 2, i16* %new_crctype, align 2, !dbg !12034
  br label %sw.epilog13, !dbg !12035

sw.default12:                                     ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !12036
  br label %return, !dbg !12036

sw.epilog13:                                      ; preds = %sw.bb11, %sw.bb10, %sw.bb9
  %9 = load i8, i8* %new_encoding, align 1, !dbg !12037
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12038
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !12039
  %encoding14 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 3, !dbg !12040
  store i8 %9, i8* %encoding14, align 4, !dbg !12041
  %11 = load i16, i16* %new_crctype, align 2, !dbg !12042
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12043
  %params15 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 36, !dbg !12044
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 6, !dbg !12045
  store i16 %11, i16* %crc_type, align 2, !dbg !12046
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12047
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 74, !dbg !12049
  %14 = load i32, i32* %netcount, align 4, !dbg !12049
  %tobool16 = icmp ne i32 %14, 0, !dbg !12047
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !12050

if.then17:                                        ; preds = %sw.epilog13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12051
  call void @program_hw(%struct.slgt_info* %15) #11, !dbg !12052
  br label %if.end18, !dbg !12052

if.end18:                                         ; preds = %if.then17, %sw.epilog13
  store i32 0, i32* %retval, align 4, !dbg !12053
  br label %return, !dbg !12053

return:                                           ; preds = %if.end18, %sw.default12, %sw.default, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !12054
  ret i32 %16, !dbg !12054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #1 !dbg !12055 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !10114, metadata !DIExpression()), !dbg !12056
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !12058
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !12059
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12066, metadata !DIExpression()), !dbg !12067
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12068, metadata !DIExpression()), !dbg !12069
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !12070, metadata !DIExpression()), !dbg !12071
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12072
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !12072
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !12072
  %1 = load i8*, i8** %priv, align 8, !dbg !12072
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !12072
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !12071
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12073, metadata !DIExpression()), !dbg !12074
  %3 = load i32, i32* @debug_level, align 4, !dbg !12075
  %cmp = icmp sge i32 %3, 3, !dbg !12075
  br i1 %cmp, label %if.then, label %if.end, !dbg !12077

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12075
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !12075
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12075
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12075
  br label %if.end, !dbg !12075

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12078
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 5, !dbg !12080
  %6 = load i32, i32* %len, align 8, !dbg !12080
  %tobool = icmp ne i32 %6, 0, !dbg !12078
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !12081

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12082
  br label %return, !dbg !12082

if.end3:                                          ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12083
  call void @netif_stop_queue(%struct.net_device* %7) #11, !dbg !12084
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12085
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %8, i32 0, i32 24, !dbg !12086
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !12087
  %9 = load i64, i64* %tx_packets, align 8, !dbg !12088
  %inc = add i64 %9, 1, !dbg !12088
  store i64 %inc, i64* %tx_packets, align 8, !dbg !12088
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12089
  %len4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %10, i32 0, i32 5, !dbg !12090
  %11 = load i32, i32* %len4, align 8, !dbg !12090
  %conv = zext i32 %11 to i64, !dbg !12089
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12091
  %stats5 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 24, !dbg !12092
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats5, i32 0, i32 3, !dbg !12093
  %13 = load i64, i64* %tx_bytes, align 8, !dbg !12094
  %add = add i64 %13, %conv, !dbg !12094
  store i64 %add, i64* %tx_bytes, align 8, !dbg !12094
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12095
  call void @netif_trans_update(%struct.net_device* %14) #11, !dbg !12096
  br label %do.body, !dbg !12097

do.body:                                          ; preds = %if.end3
  br label %do.body6, !dbg !12098

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12099, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12102, metadata !DIExpression()), !dbg !12101
  %cmp7 = icmp eq i64* %__dummy, %__dummy2, !dbg !12101
  %conv8 = zext i1 %cmp7 to i32, !dbg !12101
  store i32 1, i32* %tmp, align 4, !dbg !12101
  %15 = load i32, i32* %tmp, align 4, !dbg !12101
  br label %do.body9, !dbg !12103

do.body9:                                         ; preds = %do.body6
  br label %do.body10, !dbg !12104

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !12105

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !12107, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !12111, metadata !DIExpression()), !dbg !12110
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !12110
  %conv15 = zext i1 %cmp14 to i32, !dbg !12110
  store i32 1, i32* %tmp16, align 4, !dbg !12110
  %16 = load i32, i32* %tmp16, align 4, !dbg !12110
  %call17 = call i64 @arch_local_irq_save() #11, !dbg !12112
  store i64 %call17, i64* %flags, align 8, !dbg !12112
  br label %do.end, !dbg !12112

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !12105

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !12104

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12113, !srcloc !12114
  br label %do.body20, !dbg !12113

do.body20:                                        ; preds = %do.body19
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12115
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 22, !dbg !12115
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12116
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !12117
  %rlock.i = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !12117
  br label %do.end22, !dbg !12115

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !12113

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !12104

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !12103

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !12098

do.end26:                                         ; preds = %do.end25
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12118
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12119
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %21, i32 0, i32 37, !dbg !12120
  %22 = load i8*, i8** %data, align 8, !dbg !12120
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12121
  %len27 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 5, !dbg !12122
  %24 = load i32, i32* %len27, align 8, !dbg !12122
  %call28 = call zeroext i1 @tx_load(%struct.slgt_info* %20, i8* %22, i32 %24) #11, !dbg !12123
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12124
  %lock29 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 22, !dbg !12125
  %26 = load i64, i64* %flags, align 8, !dbg !12126
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12127
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12127
  store i32 1, i32* %tmp.i, align 4, !dbg !12127
  %27 = load i32, i32* %tmp.i, align 4, !dbg !12127
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12128
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12128
  store i32 1, i32* %tmp8.i, align 4, !dbg !12128
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !12128
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !12129
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !12129
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12130, !srcloc !10199
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !12131
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !12131
  %rlock.i31 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !12131
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12132
  call void @consume_skb(%struct.sk_buff* %32) #11, !dbg !12132
  store i32 0, i32* %retval, align 4, !dbg !12133
  br label %return, !dbg !12133

return:                                           ; preds = %do.end26, %if.then2
  %33 = load i32, i32* %retval, align 4, !dbg !12134
  ret i32 %33, !dbg !12134
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_open(%struct.net_device* %dev) #1 !dbg !12135 {
entry:
  %lock.addr.i131 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i131, metadata !8902, metadata !DIExpression()), !dbg !12136
  %lock.addr.i126 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i126, metadata !10114, metadata !DIExpression()), !dbg !12143
  %flags.addr.i127 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i127, metadata !10120, metadata !DIExpression()), !dbg !12147
  %tmp.i128 = alloca i32, align 4
  %tmp8.i129 = alloca i32, align 4
  %lock.addr.i124 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i124, metadata !8902, metadata !DIExpression()), !dbg !12148
  %lock.addr.i119 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i119, metadata !10114, metadata !DIExpression()), !dbg !12155
  %flags.addr.i120 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i120, metadata !10120, metadata !DIExpression()), !dbg !12157
  %tmp.i121 = alloca i32, align 4
  %tmp8.i122 = alloca i32, align 4
  %lock.addr.i114 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i114, metadata !10114, metadata !DIExpression()), !dbg !12158
  %flags.addr.i115 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i115, metadata !10120, metadata !DIExpression()), !dbg !12162
  %tmp.i116 = alloca i32, align 4
  %tmp8.i117 = alloca i32, align 4
  %lock.addr.i112 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i112, metadata !10114, metadata !DIExpression()), !dbg !12163
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !12165
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !12166
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  %__dummy58 = alloca i64, align 8
  %__dummy259 = alloca i64, align 8
  %tmp62 = alloca i32, align 4
  %__dummy82 = alloca i64, align 8
  %__dummy283 = alloca i64, align 8
  %tmp86 = alloca i32, align 4
  %__dummy90 = alloca i64, align 8
  %__dummy291 = alloca i64, align 8
  %tmp94 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12173, metadata !DIExpression()), !dbg !12174
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !12175, metadata !DIExpression()), !dbg !12176
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12177
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !12177
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !12177
  %1 = load i8*, i8** %priv, align 8, !dbg !12177
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !12177
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !12176
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12178, metadata !DIExpression()), !dbg !12179
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12180, metadata !DIExpression()), !dbg !12181
  %call1 = call zeroext i1 @try_module_get(%struct.module* null) #11, !dbg !12182
  br i1 %call1, label %if.end, label %if.then, !dbg !12184

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !12185
  br label %return, !dbg !12185

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @debug_level, align 4, !dbg !12186
  %cmp = icmp sge i32 %3, 3, !dbg !12186
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !12188

if.then2:                                         ; preds = %if.end
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12186
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !12186
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12186
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12186
  br label %if.end4, !dbg !12186

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12189
  %call5 = call i32 @hdlc_open(%struct.net_device* %5) #11, !dbg !12190
  store i32 %call5, i32* %rc, align 4, !dbg !12191
  %6 = load i32, i32* %rc, align 4, !dbg !12192
  %tobool = icmp ne i32 %6, 0, !dbg !12192
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !12194

if.then6:                                         ; preds = %if.end4
  %7 = load i32, i32* %rc, align 4, !dbg !12195
  store i32 %7, i32* %retval, align 4, !dbg !12196
  br label %return, !dbg !12196

if.end7:                                          ; preds = %if.end4
  br label %do.body, !dbg !12197

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !12198

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12199, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12202, metadata !DIExpression()), !dbg !12201
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !12201
  %conv = zext i1 %cmp9 to i32, !dbg !12201
  store i32 1, i32* %tmp, align 4, !dbg !12201
  %8 = load i32, i32* %tmp, align 4, !dbg !12201
  br label %do.body10, !dbg !12203

do.body10:                                        ; preds = %do.body8
  br label %do.body11, !dbg !12204

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !12205

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !12207, metadata !DIExpression()), !dbg !12210
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !12211, metadata !DIExpression()), !dbg !12210
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !12210
  %conv16 = zext i1 %cmp15 to i32, !dbg !12210
  store i32 1, i32* %tmp17, align 4, !dbg !12210
  %9 = load i32, i32* %tmp17, align 4, !dbg !12210
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !12212
  store i64 %call18, i64* %flags, align 8, !dbg !12212
  br label %do.end, !dbg !12212

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !12205

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !12204

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12213, !srcloc !12214
  br label %do.body21, !dbg !12213

do.body21:                                        ; preds = %do.body20
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12215
  %netlock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 75, !dbg !12215
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12216
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !12217
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !12217
  br label %do.end23, !dbg !12215

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !12213

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !12204

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !12203

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !12198

do.end27:                                         ; preds = %do.end26
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12218
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 1, !dbg !12219
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !12220
  %14 = load i32, i32* %count, align 4, !dbg !12220
  %cmp28 = icmp ne i32 %14, 0, !dbg !12221
  br i1 %cmp28, label %if.then32, label %lor.lhs.false, !dbg !12222

lor.lhs.false:                                    ; preds = %do.end27
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12223
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 74, !dbg !12224
  %16 = load i32, i32* %netcount, align 4, !dbg !12224
  %cmp30 = icmp ne i32 %16, 0, !dbg !12225
  br i1 %cmp30, label %if.then32, label %if.end41, !dbg !12226

if.then32:                                        ; preds = %lor.lhs.false, %do.end27
  %17 = load i32, i32* @debug_level, align 4, !dbg !12227
  %cmp33 = icmp sge i32 %17, 3, !dbg !12227
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !12229

if.then35:                                        ; preds = %if.then32
  %18 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12227
  %name36 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 0, !dbg !12227
  %arraydecay37 = getelementptr inbounds [16 x i8], [16 x i8]* %name36, i64 0, i64 0, !dbg !12227
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay37) #12, !dbg !12227
  br label %if.end39, !dbg !12227

if.end39:                                         ; preds = %if.then35, %if.then32
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12230
  %netlock40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 75, !dbg !12231
  %20 = load i64, i64* %flags, align 8, !dbg !12232
  store %struct.spinlock* %netlock40, %struct.spinlock** %lock.addr.i114, align 8
  store i64 %20, i64* %flags.addr.i115, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12233
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12233
  store i32 1, i32* %tmp.i116, align 4, !dbg !12233
  %21 = load i32, i32* %tmp.i116, align 4, !dbg !12233
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12234
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12234
  store i32 1, i32* %tmp8.i117, align 4, !dbg !12234
  %22 = load i32, i32* %tmp8.i117, align 4, !dbg !12234
  %23 = load i64, i64* %flags.addr.i115, align 8, !dbg !12235
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !12235
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12236, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i114, align 8, !dbg !12237
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !12237
  %rlock.i118 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !12237
  store i32 -16, i32* %retval, align 4, !dbg !12238
  br label %return, !dbg !12238

if.end41:                                         ; preds = %lor.lhs.false
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12239
  %netcount42 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 74, !dbg !12240
  store i32 1, i32* %netcount42, align 4, !dbg !12241
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12242
  %netlock43 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 75, !dbg !12243
  %28 = load i64, i64* %flags, align 8, !dbg !12244
  store %struct.spinlock* %netlock43, %struct.spinlock** %lock.addr.i119, align 8
  store i64 %28, i64* %flags.addr.i120, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12245
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12245
  store i32 1, i32* %tmp.i121, align 4, !dbg !12245
  %29 = load i32, i32* %tmp.i121, align 4, !dbg !12245
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12246
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12246
  store i32 1, i32* %tmp8.i122, align 4, !dbg !12246
  %30 = load i32, i32* %tmp8.i122, align 4, !dbg !12246
  %31 = load i64, i64* %flags.addr.i120, align 8, !dbg !12247
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !12247
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12248, !srcloc !10199
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i119, align 8, !dbg !12249
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !12249
  %rlock.i123 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !12249
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12250
  %call44 = call i32 @startup(%struct.slgt_info* %34) #11, !dbg !12251
  store i32 %call44, i32* %rc, align 4, !dbg !12252
  %cmp45 = icmp ne i32 %call44, 0, !dbg !12253
  br i1 %cmp45, label %if.then47, label %if.end77, !dbg !12254

if.then47:                                        ; preds = %if.end41
  br label %do.body48, !dbg !12255

do.body48:                                        ; preds = %if.then47
  br label %do.body49, !dbg !12256

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !12257, metadata !DIExpression()), !dbg !12259
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !12260, metadata !DIExpression()), !dbg !12259
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !12259
  %conv53 = zext i1 %cmp52 to i32, !dbg !12259
  store i32 1, i32* %tmp54, align 4, !dbg !12259
  %35 = load i32, i32* %tmp54, align 4, !dbg !12259
  br label %do.body55, !dbg !12261

do.body55:                                        ; preds = %do.body49
  br label %do.body56, !dbg !12262

do.body56:                                        ; preds = %do.body55
  br label %do.body57, !dbg !12263

do.body57:                                        ; preds = %do.body56
  call void @llvm.dbg.declare(metadata i64* %__dummy58, metadata !12265, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.declare(metadata i64* %__dummy259, metadata !12269, metadata !DIExpression()), !dbg !12268
  %cmp60 = icmp eq i64* %__dummy58, %__dummy259, !dbg !12268
  %conv61 = zext i1 %cmp60 to i32, !dbg !12268
  store i32 1, i32* %tmp62, align 4, !dbg !12268
  %36 = load i32, i32* %tmp62, align 4, !dbg !12268
  %call63 = call i64 @arch_local_irq_save() #11, !dbg !12270
  store i64 %call63, i64* %flags, align 8, !dbg !12270
  br label %do.end64, !dbg !12270

do.end64:                                         ; preds = %do.body57
  br label %do.end65, !dbg !12263

do.end65:                                         ; preds = %do.end64
  br label %do.body66, !dbg !12262

do.body66:                                        ; preds = %do.end65
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12271, !srcloc !12272
  br label %do.body67, !dbg !12271

do.body67:                                        ; preds = %do.body66
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12273
  %netlock68 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 75, !dbg !12273
  store %struct.spinlock* %netlock68, %struct.spinlock** %lock.addr.i124, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i124, align 8, !dbg !12274
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !12275
  %rlock.i125 = bitcast %union.anon.1* %39 to %struct.raw_spinlock*, !dbg !12275
  br label %do.end70, !dbg !12273

do.end70:                                         ; preds = %do.body67
  br label %do.end71, !dbg !12271

do.end71:                                         ; preds = %do.end70
  br label %do.end72, !dbg !12262

do.end72:                                         ; preds = %do.end71
  br label %do.end73, !dbg !12261

do.end73:                                         ; preds = %do.end72
  br label %do.end74, !dbg !12256

do.end74:                                         ; preds = %do.end73
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12276
  %netcount75 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 74, !dbg !12277
  store i32 0, i32* %netcount75, align 4, !dbg !12278
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12279
  %netlock76 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %41, i32 0, i32 75, !dbg !12280
  %42 = load i64, i64* %flags, align 8, !dbg !12281
  store %struct.spinlock* %netlock76, %struct.spinlock** %lock.addr.i126, align 8
  store i64 %42, i64* %flags.addr.i127, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12282
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12282
  store i32 1, i32* %tmp.i128, align 4, !dbg !12282
  %43 = load i32, i32* %tmp.i128, align 4, !dbg !12282
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12283
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12283
  store i32 1, i32* %tmp8.i129, align 4, !dbg !12283
  %44 = load i32, i32* %tmp8.i129, align 4, !dbg !12283
  %45 = load i64, i64* %flags.addr.i127, align 8, !dbg !12284
  call void @arch_local_irq_restore(i64 %45) #14, !dbg !12284
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12285, !srcloc !10199
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i126, align 8, !dbg !12286
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !12286
  %rlock.i130 = bitcast %union.anon.1* %47 to %struct.raw_spinlock*, !dbg !12286
  %48 = load i32, i32* %rc, align 4, !dbg !12287
  store i32 %48, i32* %retval, align 4, !dbg !12288
  br label %return, !dbg !12288

if.end77:                                         ; preds = %if.end41
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12289
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 49, !dbg !12290
  %50 = load i8, i8* %signals, align 4, !dbg !12291
  %conv78 = zext i8 %50 to i32, !dbg !12291
  %or = or i32 %conv78, 160, !dbg !12291
  %conv79 = trunc i32 %or to i8, !dbg !12291
  store i8 %conv79, i8* %signals, align 4, !dbg !12291
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12292
  call void @program_hw(%struct.slgt_info* %51) #11, !dbg !12293
  %52 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12294
  call void @netif_trans_update(%struct.net_device* %52) #11, !dbg !12295
  %53 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12296
  call void @netif_start_queue(%struct.net_device* %53) #11, !dbg !12297
  br label %do.body80, !dbg !12298

do.body80:                                        ; preds = %if.end77
  br label %do.body81, !dbg !12299

do.body81:                                        ; preds = %do.body80
  call void @llvm.dbg.declare(metadata i64* %__dummy82, metadata !12300, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.declare(metadata i64* %__dummy283, metadata !12303, metadata !DIExpression()), !dbg !12302
  %cmp84 = icmp eq i64* %__dummy82, %__dummy283, !dbg !12302
  %conv85 = zext i1 %cmp84 to i32, !dbg !12302
  store i32 1, i32* %tmp86, align 4, !dbg !12302
  %54 = load i32, i32* %tmp86, align 4, !dbg !12302
  br label %do.body87, !dbg !12304

do.body87:                                        ; preds = %do.body81
  br label %do.body88, !dbg !12305

do.body88:                                        ; preds = %do.body87
  br label %do.body89, !dbg !12306

do.body89:                                        ; preds = %do.body88
  call void @llvm.dbg.declare(metadata i64* %__dummy90, metadata !12308, metadata !DIExpression()), !dbg !12311
  call void @llvm.dbg.declare(metadata i64* %__dummy291, metadata !12312, metadata !DIExpression()), !dbg !12311
  %cmp92 = icmp eq i64* %__dummy90, %__dummy291, !dbg !12311
  %conv93 = zext i1 %cmp92 to i32, !dbg !12311
  store i32 1, i32* %tmp94, align 4, !dbg !12311
  %55 = load i32, i32* %tmp94, align 4, !dbg !12311
  %call95 = call i64 @arch_local_irq_save() #11, !dbg !12313
  store i64 %call95, i64* %flags, align 8, !dbg !12313
  br label %do.end96, !dbg !12313

do.end96:                                         ; preds = %do.body89
  br label %do.end97, !dbg !12306

do.end97:                                         ; preds = %do.end96
  br label %do.body98, !dbg !12305

do.body98:                                        ; preds = %do.end97
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12314, !srcloc !12315
  br label %do.body99, !dbg !12314

do.body99:                                        ; preds = %do.body98
  %56 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12316
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %56, i32 0, i32 22, !dbg !12316
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i131, align 8
  %57 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i131, align 8, !dbg !12317
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0, !dbg !12318
  %rlock.i132 = bitcast %union.anon.1* %58 to %struct.raw_spinlock*, !dbg !12318
  br label %do.end101, !dbg !12316

do.end101:                                        ; preds = %do.body99
  br label %do.end102, !dbg !12314

do.end102:                                        ; preds = %do.end101
  br label %do.end103, !dbg !12305

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !12304

do.end104:                                        ; preds = %do.end103
  br label %do.end105, !dbg !12299

do.end105:                                        ; preds = %do.end104
  %59 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12319
  call void @get_signals(%struct.slgt_info* %59) #11, !dbg !12320
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12321
  %lock106 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %60, i32 0, i32 22, !dbg !12322
  %61 = load i64, i64* %flags, align 8, !dbg !12323
  store %struct.spinlock* %lock106, %struct.spinlock** %lock.addr.i112, align 8
  store i64 %61, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12324
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12324
  store i32 1, i32* %tmp.i, align 4, !dbg !12324
  %62 = load i32, i32* %tmp.i, align 4, !dbg !12324
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12325
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12325
  store i32 1, i32* %tmp8.i, align 4, !dbg !12325
  %63 = load i32, i32* %tmp8.i, align 4, !dbg !12325
  %64 = load i64, i64* %flags.addr.i, align 8, !dbg !12326
  call void @arch_local_irq_restore(i64 %64) #14, !dbg !12326
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12327, !srcloc !10199
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i112, align 8, !dbg !12328
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !12328
  %rlock.i113 = bitcast %union.anon.1* %66 to %struct.raw_spinlock*, !dbg !12328
  %67 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12329
  %signals107 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %67, i32 0, i32 49, !dbg !12331
  %68 = load i8, i8* %signals107, align 4, !dbg !12331
  %conv108 = zext i8 %68 to i32, !dbg !12329
  %and = and i32 %conv108, 1, !dbg !12332
  %tobool109 = icmp ne i32 %and, 0, !dbg !12332
  br i1 %tobool109, label %if.then110, label %if.else, !dbg !12333

if.then110:                                       ; preds = %do.end105
  %69 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12334
  call void @netif_carrier_on(%struct.net_device* %69) #11, !dbg !12335
  br label %if.end111, !dbg !12335

if.else:                                          ; preds = %do.end105
  %70 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12336
  call void @netif_carrier_off(%struct.net_device* %70) #11, !dbg !12337
  br label %if.end111

if.end111:                                        ; preds = %if.else, %if.then110
  store i32 0, i32* %retval, align 4, !dbg !12338
  br label %return, !dbg !12338

return:                                           ; preds = %if.end111, %do.end74, %if.end39, %if.then6, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !12339
  ret i32 %71, !dbg !12339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_close(%struct.net_device* %dev) #1 !dbg !12340 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !10114, metadata !DIExpression()), !dbg !12341
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !12343
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !12344
  %dev.addr = alloca %struct.net_device*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12351, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !12353, metadata !DIExpression()), !dbg !12354
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12355
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !12355
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !12355
  %1 = load i8*, i8** %priv, align 8, !dbg !12355
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !12355
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !12354
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12356, metadata !DIExpression()), !dbg !12357
  %3 = load i32, i32* @debug_level, align 4, !dbg !12358
  %cmp = icmp sge i32 %3, 3, !dbg !12358
  br i1 %cmp, label %if.then, label %if.end, !dbg !12360

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12358
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !12358
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12358
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12358
  br label %if.end, !dbg !12358

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12361
  call void @netif_stop_queue(%struct.net_device* %5) #11, !dbg !12362
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12363
  call void @shutdown(%struct.slgt_info* %6) #11, !dbg !12364
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12365
  call void @hdlc_close(%struct.net_device* %7) #11, !dbg !12366
  br label %do.body, !dbg !12367

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !12368

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12369, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12372, metadata !DIExpression()), !dbg !12371
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !12371
  %conv = zext i1 %cmp3 to i32, !dbg !12371
  store i32 1, i32* %tmp, align 4, !dbg !12371
  %8 = load i32, i32* %tmp, align 4, !dbg !12371
  br label %do.body4, !dbg !12373

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !12374

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !12375

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !12377, metadata !DIExpression()), !dbg !12380
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !12381, metadata !DIExpression()), !dbg !12380
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !12380
  %conv10 = zext i1 %cmp9 to i32, !dbg !12380
  store i32 1, i32* %tmp11, align 4, !dbg !12380
  %9 = load i32, i32* %tmp11, align 4, !dbg !12380
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !12382
  store i64 %call12, i64* %flags, align 8, !dbg !12382
  br label %do.end, !dbg !12382

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !12375

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !12374

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12383, !srcloc !12384
  br label %do.body15, !dbg !12383

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12385
  %netlock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 75, !dbg !12385
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12386
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !12387
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !12387
  br label %do.end17, !dbg !12385

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !12383

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !12374

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !12373

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12368

do.end21:                                         ; preds = %do.end20
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12388
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 74, !dbg !12389
  store i32 0, i32* %netcount, align 4, !dbg !12390
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12391
  %netlock22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 75, !dbg !12392
  %15 = load i64, i64* %flags, align 8, !dbg !12393
  store %struct.spinlock* %netlock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12394
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12394
  store i32 1, i32* %tmp.i, align 4, !dbg !12394
  %16 = load i32, i32* %tmp.i, align 4, !dbg !12394
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12395
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12395
  store i32 1, i32* %tmp8.i, align 4, !dbg !12395
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !12395
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !12396
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !12396
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12397, !srcloc !10199
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !12398
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !12398
  %rlock.i24 = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !12398
  call void @module_put(%struct.module* null) #11, !dbg !12399
  ret i32 0, !dbg !12400
}

; Function Attrs: noredzone
declare dso_local i32 @hdlc_start_xmit(%struct.sk_buff*, %struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdlcdev_ioctl(%struct.net_device* %dev, %struct.ifreq* %ifr, i32 %cmd) #1 !dbg !12401 {
entry:
  %retval.i.i102 = alloca i1, align 1
  %addr.addr.i.i103 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i103, metadata !12402, metadata !DIExpression()), !dbg !12407
  %bytes.addr.i.i104 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i104, metadata !12417, metadata !DIExpression()), !dbg !12418
  %is_source.addr.i.i105 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i105, metadata !12419, metadata !DIExpression()), !dbg !12420
  %sz.i.i106 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i106, metadata !12421, metadata !DIExpression()), !dbg !12422
  %__ret_warn_on.i.i107 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i107, metadata !12423, metadata !DIExpression()), !dbg !12426
  %tmp.i.i108 = alloca i64, align 8
  %to.addr.i109 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i109, metadata !12427, metadata !DIExpression()), !dbg !12428
  %from.addr.i110 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i110, metadata !12429, metadata !DIExpression()), !dbg !12430
  %n.addr.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i111, metadata !12431, metadata !DIExpression()), !dbg !12432
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !12433
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !12439
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !12440
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !12441
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !12442
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12443, metadata !DIExpression()), !dbg !12444
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12445, metadata !DIExpression()), !dbg !12446
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12447, metadata !DIExpression()), !dbg !12448
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ifr.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %size = alloca i64, align 8
  %new_line = alloca %struct.sync_serial_settings, align 4
  %line = alloca %struct.sync_serial_settings*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12449, metadata !DIExpression()), !dbg !12450
  store %struct.ifreq* %ifr, %struct.ifreq** %ifr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %ifr.addr, metadata !12451, metadata !DIExpression()), !dbg !12452
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !12453, metadata !DIExpression()), !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %size, metadata !12455, metadata !DIExpression()), !dbg !12457
  store i64 12, i64* %size, align 8, !dbg !12457
  call void @llvm.dbg.declare(metadata %struct.sync_serial_settings* %new_line, metadata !12458, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.declare(metadata %struct.sync_serial_settings** %line, metadata !12460, metadata !DIExpression()), !dbg !12461
  %0 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12462
  %ifr_ifru = getelementptr inbounds %struct.ifreq, %struct.ifreq* %0, i32 0, i32 1, !dbg !12463
  %ifru_settings = bitcast %union.anon.92* %ifr_ifru to %struct.if_settings*, !dbg !12463
  %ifs_ifsu = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings, i32 0, i32 2, !dbg !12464
  %sync = bitcast %union.anon.93* %ifs_ifsu to %struct.sync_serial_settings**, !dbg !12465
  %1 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %sync, align 8, !dbg !12465
  store %struct.sync_serial_settings* %1, %struct.sync_serial_settings** %line, align 8, !dbg !12461
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !12466, metadata !DIExpression()), !dbg !12467
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12468
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %2) #11, !dbg !12468
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !12468
  %3 = load i8*, i8** %priv, align 8, !dbg !12468
  %4 = bitcast i8* %3 to %struct.slgt_info*, !dbg !12468
  store %struct.slgt_info* %4, %struct.slgt_info** %info, align 8, !dbg !12467
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12469, metadata !DIExpression()), !dbg !12470
  %5 = load i32, i32* @debug_level, align 4, !dbg !12471
  %cmp = icmp sge i32 %5, 3, !dbg !12471
  br i1 %cmp, label %if.then, label %if.end, !dbg !12473

if.then:                                          ; preds = %entry
  %6 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12471
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 0, !dbg !12471
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12471
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12471
  br label %if.end, !dbg !12471

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12474
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 1, !dbg !12476
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !12477
  %8 = load i32, i32* %count, align 4, !dbg !12477
  %tobool = icmp ne i32 %8, 0, !dbg !12474
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !12478

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !12479
  br label %return, !dbg !12479

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !12480
  %cmp4 = icmp ne i32 %9, 35146, !dbg !12482
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !12483

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12484
  %11 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12485
  %12 = load i32, i32* %cmd.addr, align 4, !dbg !12486
  %call6 = call i32 @hdlc_ioctl(%struct.net_device* %10, %struct.ifreq* %11, i32 %12) #11, !dbg !12487
  store i32 %call6, i32* %retval, align 4, !dbg !12488
  br label %return, !dbg !12488

if.end7:                                          ; preds = %if.end3
  %13 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !12489
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 12, i1 false), !dbg !12489
  %14 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12490
  %ifr_ifru8 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %14, i32 0, i32 1, !dbg !12491
  %ifru_settings9 = bitcast %union.anon.92* %ifr_ifru8 to %struct.if_settings*, !dbg !12491
  %type = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings9, i32 0, i32 0, !dbg !12492
  %15 = load i32, i32* %type, align 8, !dbg !12492
  switch i32 %15, label %sw.default100 [
    i32 1, label %sw.bb
    i32 4101, label %sw.bb44
  ], !dbg !12493

sw.bb:                                            ; preds = %if.end7
  %16 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12494
  %ifr_ifru10 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %16, i32 0, i32 1, !dbg !12495
  %ifru_settings11 = bitcast %union.anon.92* %ifr_ifru10 to %struct.if_settings*, !dbg !12495
  %type12 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings11, i32 0, i32 0, !dbg !12496
  store i32 4101, i32* %type12, align 8, !dbg !12497
  %17 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12498
  %ifr_ifru13 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %17, i32 0, i32 1, !dbg !12500
  %ifru_settings14 = bitcast %union.anon.92* %ifr_ifru13 to %struct.if_settings*, !dbg !12500
  %size15 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings14, i32 0, i32 1, !dbg !12501
  %18 = load i32, i32* %size15, align 4, !dbg !12501
  %conv = zext i32 %18 to i64, !dbg !12498
  %cmp16 = icmp ult i64 %conv, 12, !dbg !12502
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !12503

if.then18:                                        ; preds = %sw.bb
  %19 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12504
  %ifr_ifru19 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %19, i32 0, i32 1, !dbg !12506
  %ifru_settings20 = bitcast %union.anon.92* %ifr_ifru19 to %struct.if_settings*, !dbg !12506
  %size21 = getelementptr inbounds %struct.if_settings, %struct.if_settings* %ifru_settings20, i32 0, i32 1, !dbg !12507
  store i32 12, i32* %size21, align 4, !dbg !12508
  store i32 -105, i32* %retval, align 4, !dbg !12509
  br label %return, !dbg !12509

if.end22:                                         ; preds = %sw.bb
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12510
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 36, !dbg !12511
  %flags23 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 2, !dbg !12512
  %21 = load i16, i16* %flags23, align 2, !dbg !12512
  %conv24 = zext i16 %21 to i32, !dbg !12510
  %and = and i32 %conv24, 36616, !dbg !12513
  store i32 %and, i32* %flags, align 4, !dbg !12514
  %22 = load i32, i32* %flags, align 4, !dbg !12515
  switch i32 %22, label %sw.default [
    i32 0, label %sw.bb25
    i32 2560, label %sw.bb26
    i32 2048, label %sw.bb28
    i32 8, label %sw.bb30
  ], !dbg !12516

sw.bb25:                                          ; preds = %if.end22
  %clock_type = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12517
  store i32 1, i32* %clock_type, align 4, !dbg !12519
  br label %sw.epilog, !dbg !12520

sw.bb26:                                          ; preds = %if.end22
  %clock_type27 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12521
  store i32 2, i32* %clock_type27, align 4, !dbg !12522
  br label %sw.epilog, !dbg !12523

sw.bb28:                                          ; preds = %if.end22
  %clock_type29 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12524
  store i32 3, i32* %clock_type29, align 4, !dbg !12525
  br label %sw.epilog, !dbg !12526

sw.bb30:                                          ; preds = %if.end22
  %clock_type31 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12527
  store i32 4, i32* %clock_type31, align 4, !dbg !12528
  br label %sw.epilog, !dbg !12529

sw.default:                                       ; preds = %if.end22
  %clock_type32 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12530
  store i32 0, i32* %clock_type32, align 4, !dbg !12531
  br label %sw.epilog, !dbg !12532

sw.epilog:                                        ; preds = %sw.default, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb25
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12533
  %params33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 36, !dbg !12534
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params33, i32 0, i32 4, !dbg !12535
  %24 = load i64, i64* %clock_speed, align 8, !dbg !12535
  %conv34 = trunc i64 %24 to i32, !dbg !12533
  %clock_rate = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 0, !dbg !12536
  store i32 %conv34, i32* %clock_rate, align 4, !dbg !12537
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12538
  %params35 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 36, !dbg !12539
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params35, i32 0, i32 1, !dbg !12540
  %26 = load i8, i8* %loopback, align 8, !dbg !12540
  %conv36 = zext i8 %26 to i32, !dbg !12538
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !12538
  %27 = zext i1 %tobool37 to i64, !dbg !12538
  %cond = select i1 %tobool37, i32 1, i32 0, !dbg !12538
  %conv38 = trunc i32 %cond to i16, !dbg !12538
  %loopback39 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !12541
  store i16 %conv38, i16* %loopback39, align 4, !dbg !12542
  %28 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %line, align 8, !dbg !12543
  %29 = bitcast %struct.sync_serial_settings* %28 to i8*, !dbg !12543
  %30 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !12544
  store i8* %29, i8** %to.addr.i, align 8
  store i8* %30, i8** %from.addr.i, align 8
  store i64 12, i64* %n.addr.i, align 8
  %31 = load i8*, i8** %from.addr.i, align 8, !dbg !12545
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !12545
  store i8* %31, i8** %addr.addr.i.i, align 8
  store i64 %32, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !12441
  %33 = load i32, i32* %sz.i.i, align 4, !dbg !12546
  %cmp.i.i = icmp sge i32 %33, 0, !dbg !12546
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !12546

land.rhs.i.i:                                     ; preds = %sw.epilog
  %34 = load i32, i32* %sz.i.i, align 4, !dbg !12546
  %conv.i.i = sext i32 %34 to i64, !dbg !12546
  %35 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12546
  %cmp1.i.i = icmp ult i64 %conv.i.i, %35, !dbg !12546
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.epilog
  %36 = phi i1 [ false, %sw.epilog ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !12548
  %lnot.i.i = xor i1 %36, true, !dbg !12546
  %lnot.ext.i.i = zext i1 %36 to i32, !dbg !12546
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12546
  br i1 %36, label %if.then.i.i, label %if.end10.i.i, !dbg !12549

if.then.i.i:                                      ; preds = %land.end.i.i
  %37 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12550
  %38 = call i1 @llvm.is.constant.i64(i64 %37) #10, !dbg !12553
  br i1 %38, label %if.else.i.i, label %if.then5.i.i, !dbg !12554

if.then5.i.i:                                     ; preds = %if.then.i.i
  %39 = load i32, i32* %sz.i.i, align 4, !dbg !12555
  %40 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12556
  call void @copy_overflow(i32 %39, i64 %40) #14, !dbg !12557
  br label %if.end9.i.i, !dbg !12557

if.else.i.i:                                      ; preds = %if.then.i.i
  %41 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12558
  %tobool6.i.i = trunc i8 %41 to i1, !dbg !12558
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !12560

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !12561
  br label %if.end.i.i, !dbg !12561

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !12562
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12563
  br label %check_copy_size.exit.i, !dbg !12563

if.end10.i.i:                                     ; preds = %land.end.i.i
  %42 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12442
  %cmp11.i.i = icmp ugt i64 %42, 2147483647, !dbg !12442
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !12442
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !12442
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !12442
  %43 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12564
  %tobool17.i.i = icmp ne i32 %43, 0, !dbg !12564
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !12564
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !12564
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !12564
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !12442

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !12566, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !12570, !srcloc !12572
  br label %if.end31.i.i, !dbg !12573

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %44 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !12442
  %tobool32.i.i = icmp ne i32 %44, 0, !dbg !12442
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !12442
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !12442
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !12442
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !12564
  %45 = load i64, i64* %tmp.i.i, align 8, !dbg !12442
  %tobool38.i.i = icmp ne i64 %45, 0, !dbg !12574
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !12575

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !12576
  br label %check_copy_size.exit.i, !dbg !12576

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %46 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !12577
  %47 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !12578
  %48 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !12579
  %tobool41.i.i = trunc i8 %48 to i1, !dbg !12579
  call void @check_object_size(i8* %46, i64 %47, i1 zeroext %tobool41.i.i) #14, !dbg !12580
  store i1 true, i1* %retval.i.i, align 1, !dbg !12581
  br label %check_copy_size.exit.i, !dbg !12581

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %49 = load i1, i1* %retval.i.i, align 1, !dbg !12582
  %lnot.i = xor i1 %49, true, !dbg !12545
  %lnot.ext.i = zext i1 %49 to i32, !dbg !12545
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !12545
  br i1 %49, label %if.then.i, label %copy_to_user.exit, !dbg !12583

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %50 = load i8*, i8** %to.addr.i, align 8, !dbg !12584
  %51 = load i8*, i8** %from.addr.i, align 8, !dbg !12585
  %52 = load i64, i64* %n.addr.i, align 8, !dbg !12586
  %call2.i = call i64 @_copy_to_user(i8* %50, i8* %51, i64 %52) #14, !dbg !12587
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !12588
  br label %copy_to_user.exit, !dbg !12589

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %53 = load i64, i64* %n.addr.i, align 8, !dbg !12590
  %tobool41 = icmp ne i64 %53, 0, !dbg !12591
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !12592

if.then42:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !12593
  br label %return, !dbg !12593

if.end43:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !12594
  br label %return, !dbg !12594

sw.bb44:                                          ; preds = %if.end7
  %call45 = call zeroext i1 @capable(i32 12) #11, !dbg !12595
  br i1 %call45, label %if.end47, label %if.then46, !dbg !12597

if.then46:                                        ; preds = %sw.bb44
  store i32 -1, i32* %retval, align 4, !dbg !12598
  br label %return, !dbg !12598

if.end47:                                         ; preds = %sw.bb44
  %54 = bitcast %struct.sync_serial_settings* %new_line to i8*, !dbg !12599
  %55 = load %struct.sync_serial_settings*, %struct.sync_serial_settings** %line, align 8, !dbg !12600
  %56 = bitcast %struct.sync_serial_settings* %55 to i8*, !dbg !12600
  store i8* %54, i8** %to.addr.i109, align 8
  store i8* %56, i8** %from.addr.i110, align 8
  store i64 12, i64* %n.addr.i111, align 8
  %57 = load i8*, i8** %to.addr.i109, align 8, !dbg !12601
  %58 = load i64, i64* %n.addr.i111, align 8, !dbg !12601
  store i8* %57, i8** %addr.addr.i.i103, align 8
  store i64 %58, i64* %bytes.addr.i.i104, align 8
  store i8 0, i8* %is_source.addr.i.i105, align 1
  store i32 -1, i32* %sz.i.i106, align 4, !dbg !12422
  %59 = load i32, i32* %sz.i.i106, align 4, !dbg !12602
  %cmp.i.i112 = icmp sge i32 %59, 0, !dbg !12602
  br i1 %cmp.i.i112, label %land.rhs.i.i115, label %land.end.i.i119, !dbg !12602

land.rhs.i.i115:                                  ; preds = %if.end47
  %60 = load i32, i32* %sz.i.i106, align 4, !dbg !12602
  %conv.i.i113 = sext i32 %60 to i64, !dbg !12602
  %61 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !12602
  %cmp1.i.i114 = icmp ult i64 %conv.i.i113, %61, !dbg !12602
  br label %land.end.i.i119

land.end.i.i119:                                  ; preds = %land.rhs.i.i115, %if.end47
  %62 = phi i1 [ false, %if.end47 ], [ %cmp1.i.i114, %land.rhs.i.i115 ], !dbg !12603
  %lnot.i.i116 = xor i1 %62, true, !dbg !12602
  %lnot.ext.i.i117 = zext i1 %62 to i32, !dbg !12602
  %conv4.i.i118 = sext i32 %lnot.ext.i.i117 to i64, !dbg !12602
  br i1 %62, label %if.then.i.i120, label %if.end10.i.i135, !dbg !12604

if.then.i.i120:                                   ; preds = %land.end.i.i119
  %63 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !12605
  %64 = call i1 @llvm.is.constant.i64(i64 %63) #10, !dbg !12606
  br i1 %64, label %if.else.i.i123, label %if.then5.i.i121, !dbg !12607

if.then5.i.i121:                                  ; preds = %if.then.i.i120
  %65 = load i32, i32* %sz.i.i106, align 4, !dbg !12608
  %66 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !12609
  call void @copy_overflow(i32 %65, i64 %66) #14, !dbg !12610
  br label %if.end9.i.i127, !dbg !12610

if.else.i.i123:                                   ; preds = %if.then.i.i120
  %67 = load i8, i8* %is_source.addr.i.i105, align 1, !dbg !12611
  %tobool6.i.i122 = trunc i8 %67 to i1, !dbg !12611
  br i1 %tobool6.i.i122, label %if.then7.i.i124, label %if.else8.i.i125, !dbg !12612

if.then7.i.i124:                                  ; preds = %if.else.i.i123
  call void @__bad_copy_from() #14, !dbg !12613
  br label %if.end.i.i126, !dbg !12613

if.else8.i.i125:                                  ; preds = %if.else.i.i123
  call void @__bad_copy_to() #14, !dbg !12614
  br label %if.end.i.i126

if.end.i.i126:                                    ; preds = %if.else8.i.i125, %if.then7.i.i124
  br label %if.end9.i.i127

if.end9.i.i127:                                   ; preds = %if.end.i.i126, %if.then5.i.i121
  store i1 false, i1* %retval.i.i102, align 1, !dbg !12615
  br label %check_copy_size.exit.i149, !dbg !12615

if.end10.i.i135:                                  ; preds = %land.end.i.i119
  %68 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !12426
  %cmp11.i.i128 = icmp ugt i64 %68, 2147483647, !dbg !12426
  %lnot13.i.i129 = xor i1 %cmp11.i.i128, true, !dbg !12426
  %lnot.ext16.i.i130 = zext i1 %cmp11.i.i128 to i32, !dbg !12426
  store i32 %lnot.ext16.i.i130, i32* %__ret_warn_on.i.i107, align 4, !dbg !12426
  %69 = load i32, i32* %__ret_warn_on.i.i107, align 4, !dbg !12616
  %tobool17.i.i131 = icmp ne i32 %69, 0, !dbg !12616
  %lnot18.i.i132 = xor i1 %tobool17.i.i131, true, !dbg !12616
  %lnot.ext21.i.i133 = zext i1 %tobool17.i.i131 to i32, !dbg !12616
  %conv22.i.i134 = sext i32 %lnot.ext21.i.i133 to i64, !dbg !12616
  br i1 %tobool17.i.i131, label %if.then24.i.i136, label %if.end31.i.i142, !dbg !12426

if.then24.i.i136:                                 ; preds = %if.end10.i.i135
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !12617, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !12618, !srcloc !12572
  br label %if.end31.i.i142, !dbg !12619

if.end31.i.i142:                                  ; preds = %if.then24.i.i136, %if.end10.i.i135
  %70 = load i32, i32* %__ret_warn_on.i.i107, align 4, !dbg !12426
  %tobool32.i.i137 = icmp ne i32 %70, 0, !dbg !12426
  %lnot33.i.i138 = xor i1 %tobool32.i.i137, true, !dbg !12426
  %lnot.ext36.i.i139 = zext i1 %tobool32.i.i137 to i32, !dbg !12426
  %conv37.i.i140 = sext i32 %lnot.ext36.i.i139 to i64, !dbg !12426
  store i64 %conv37.i.i140, i64* %tmp.i.i108, align 8, !dbg !12616
  %71 = load i64, i64* %tmp.i.i108, align 8, !dbg !12426
  %tobool38.i.i141 = icmp ne i64 %71, 0, !dbg !12620
  br i1 %tobool38.i.i141, label %if.then39.i.i143, label %if.end40.i.i145, !dbg !12621

if.then39.i.i143:                                 ; preds = %if.end31.i.i142
  store i1 false, i1* %retval.i.i102, align 1, !dbg !12622
  br label %check_copy_size.exit.i149, !dbg !12622

if.end40.i.i145:                                  ; preds = %if.end31.i.i142
  %72 = load i8*, i8** %addr.addr.i.i103, align 8, !dbg !12623
  %73 = load i64, i64* %bytes.addr.i.i104, align 8, !dbg !12624
  %74 = load i8, i8* %is_source.addr.i.i105, align 1, !dbg !12625
  %tobool41.i.i144 = trunc i8 %74 to i1, !dbg !12625
  call void @check_object_size(i8* %72, i64 %73, i1 zeroext %tobool41.i.i144) #14, !dbg !12626
  store i1 true, i1* %retval.i.i102, align 1, !dbg !12627
  br label %check_copy_size.exit.i149, !dbg !12627

check_copy_size.exit.i149:                        ; preds = %if.end40.i.i145, %if.then39.i.i143, %if.end9.i.i127
  %75 = load i1, i1* %retval.i.i102, align 1, !dbg !12628
  %lnot.i146 = xor i1 %75, true, !dbg !12601
  %lnot.ext.i147 = zext i1 %75 to i32, !dbg !12601
  %conv.i148 = sext i32 %lnot.ext.i147 to i64, !dbg !12601
  br i1 %75, label %if.then.i151, label %copy_from_user.exit, !dbg !12629

if.then.i151:                                     ; preds = %check_copy_size.exit.i149
  %76 = load i8*, i8** %to.addr.i109, align 8, !dbg !12630
  %77 = load i8*, i8** %from.addr.i110, align 8, !dbg !12631
  %78 = load i64, i64* %n.addr.i111, align 8, !dbg !12632
  %call2.i150 = call i64 @_copy_from_user(i8* %76, i8* %77, i64 %78) #14, !dbg !12633
  store i64 %call2.i150, i64* %n.addr.i111, align 8, !dbg !12634
  br label %copy_from_user.exit, !dbg !12635

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i149, %if.then.i151
  %79 = load i64, i64* %n.addr.i111, align 8, !dbg !12636
  %tobool49 = icmp ne i64 %79, 0, !dbg !12637
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !12638

if.then50:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !12639
  br label %return, !dbg !12639

if.end51:                                         ; preds = %copy_from_user.exit
  %clock_type52 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 1, !dbg !12640
  %80 = load i32, i32* %clock_type52, align 4, !dbg !12640
  switch i32 %80, label %sw.default62 [
    i32 1, label %sw.bb53
    i32 4, label %sw.bb54
    i32 2, label %sw.bb55
    i32 3, label %sw.bb56
    i32 0, label %sw.bb57
  ], !dbg !12641

sw.bb53:                                          ; preds = %if.end51
  store i32 0, i32* %flags, align 4, !dbg !12642
  br label %sw.epilog63, !dbg !12644

sw.bb54:                                          ; preds = %if.end51
  store i32 8, i32* %flags, align 4, !dbg !12645
  br label %sw.epilog63, !dbg !12646

sw.bb55:                                          ; preds = %if.end51
  store i32 2560, i32* %flags, align 4, !dbg !12647
  br label %sw.epilog63, !dbg !12648

sw.bb56:                                          ; preds = %if.end51
  store i32 2048, i32* %flags, align 4, !dbg !12649
  br label %sw.epilog63, !dbg !12650

sw.bb57:                                          ; preds = %if.end51
  %81 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12651
  %params58 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %81, i32 0, i32 36, !dbg !12652
  %flags59 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params58, i32 0, i32 2, !dbg !12653
  %82 = load i16, i16* %flags59, align 2, !dbg !12653
  %conv60 = zext i16 %82 to i32, !dbg !12651
  %and61 = and i32 %conv60, 36616, !dbg !12654
  store i32 %and61, i32* %flags, align 4, !dbg !12655
  br label %sw.epilog63, !dbg !12656

sw.default62:                                     ; preds = %if.end51
  store i32 -22, i32* %retval, align 4, !dbg !12657
  br label %return, !dbg !12657

sw.epilog63:                                      ; preds = %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53
  %loopback64 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !12658
  %83 = load i16, i16* %loopback64, align 4, !dbg !12658
  %conv65 = zext i16 %83 to i32, !dbg !12660
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !12661
  br i1 %cmp66, label %land.lhs.true, label %if.end73, !dbg !12662

land.lhs.true:                                    ; preds = %sw.epilog63
  %loopback68 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !12663
  %84 = load i16, i16* %loopback68, align 4, !dbg !12663
  %conv69 = zext i16 %84 to i32, !dbg !12664
  %cmp70 = icmp ne i32 %conv69, 1, !dbg !12665
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !12666

if.then72:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !12667
  br label %return, !dbg !12667

if.end73:                                         ; preds = %land.lhs.true, %sw.epilog63
  %85 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12668
  %params74 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %85, i32 0, i32 36, !dbg !12669
  %flags75 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params74, i32 0, i32 2, !dbg !12670
  %86 = load i16, i16* %flags75, align 2, !dbg !12671
  %conv76 = zext i16 %86 to i32, !dbg !12671
  %and77 = and i32 %conv76, -36617, !dbg !12671
  %conv78 = trunc i32 %and77 to i16, !dbg !12671
  store i16 %conv78, i16* %flags75, align 2, !dbg !12671
  %87 = load i32, i32* %flags, align 4, !dbg !12672
  %88 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12673
  %params79 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %88, i32 0, i32 36, !dbg !12674
  %flags80 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params79, i32 0, i32 2, !dbg !12675
  %89 = load i16, i16* %flags80, align 2, !dbg !12676
  %conv81 = zext i16 %89 to i32, !dbg !12676
  %or = or i32 %conv81, %87, !dbg !12676
  %conv82 = trunc i32 %or to i16, !dbg !12676
  store i16 %conv82, i16* %flags80, align 2, !dbg !12676
  %loopback83 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 2, !dbg !12677
  %90 = load i16, i16* %loopback83, align 4, !dbg !12677
  %conv84 = trunc i16 %90 to i8, !dbg !12678
  %91 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12679
  %params85 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %91, i32 0, i32 36, !dbg !12680
  %loopback86 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params85, i32 0, i32 1, !dbg !12681
  store i8 %conv84, i8* %loopback86, align 8, !dbg !12682
  %92 = load i32, i32* %flags, align 4, !dbg !12683
  %and87 = and i32 %92, 2560, !dbg !12685
  %tobool88 = icmp ne i32 %and87, 0, !dbg !12685
  br i1 %tobool88, label %if.then89, label %if.else, !dbg !12686

if.then89:                                        ; preds = %if.end73
  %clock_rate90 = getelementptr inbounds %struct.sync_serial_settings, %struct.sync_serial_settings* %new_line, i32 0, i32 0, !dbg !12687
  %93 = load i32, i32* %clock_rate90, align 4, !dbg !12687
  %conv91 = zext i32 %93 to i64, !dbg !12688
  %94 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12689
  %params92 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %94, i32 0, i32 36, !dbg !12690
  %clock_speed93 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params92, i32 0, i32 4, !dbg !12691
  store i64 %conv91, i64* %clock_speed93, align 8, !dbg !12692
  br label %if.end96, !dbg !12689

if.else:                                          ; preds = %if.end73
  %95 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12693
  %params94 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %95, i32 0, i32 36, !dbg !12694
  %clock_speed95 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params94, i32 0, i32 4, !dbg !12695
  store i64 0, i64* %clock_speed95, align 8, !dbg !12696
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.then89
  %96 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12697
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %96, i32 0, i32 74, !dbg !12699
  %97 = load i32, i32* %netcount, align 4, !dbg !12699
  %tobool97 = icmp ne i32 %97, 0, !dbg !12697
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !12700

if.then98:                                        ; preds = %if.end96
  %98 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12701
  call void @program_hw(%struct.slgt_info* %98) #11, !dbg !12702
  br label %if.end99, !dbg !12702

if.end99:                                         ; preds = %if.then98, %if.end96
  store i32 0, i32* %retval, align 4, !dbg !12703
  br label %return, !dbg !12703

sw.default100:                                    ; preds = %if.end7
  %99 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12704
  %100 = load %struct.ifreq*, %struct.ifreq** %ifr.addr, align 8, !dbg !12705
  %101 = load i32, i32* %cmd.addr, align 4, !dbg !12706
  %call101 = call i32 @hdlc_ioctl(%struct.net_device* %99, %struct.ifreq* %100, i32 %101) #11, !dbg !12707
  store i32 %call101, i32* %retval, align 4, !dbg !12708
  br label %return, !dbg !12708

return:                                           ; preds = %sw.default100, %if.end99, %if.then72, %sw.default62, %if.then50, %if.then46, %if.end43, %if.then42, %if.then18, %if.then5, %if.then2
  %102 = load i32, i32* %retval, align 4, !dbg !12709
  ret i32 %102, !dbg !12709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hdlcdev_tx_timeout(%struct.net_device* %dev, i32 %txqueue) #1 !dbg !12710 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !10114, metadata !DIExpression()), !dbg !12711
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !12713
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !12714
  %dev.addr = alloca %struct.net_device*, align 8
  %txqueue.addr = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12721, metadata !DIExpression()), !dbg !12722
  store i32 %txqueue, i32* %txqueue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %txqueue.addr, metadata !12723, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !12725, metadata !DIExpression()), !dbg !12726
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12727
  %call = call %struct.hdlc_device* @dev_to_hdlc(%struct.net_device* %0) #11, !dbg !12727
  %priv = getelementptr inbounds %struct.hdlc_device, %struct.hdlc_device* %call, i32 0, i32 7, !dbg !12727
  %1 = load i8*, i8** %priv, align 8, !dbg !12727
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !12727
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !12726
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12728, metadata !DIExpression()), !dbg !12729
  %3 = load i32, i32* @debug_level, align 4, !dbg !12730
  %cmp = icmp sge i32 %3, 3, !dbg !12730
  br i1 %cmp, label %if.then, label %if.end, !dbg !12732

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12730
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 0, !dbg !12730
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12730
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12730
  br label %if.end, !dbg !12730

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12733
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 24, !dbg !12734
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !12735
  %6 = load i64, i64* %tx_errors, align 8, !dbg !12736
  %inc = add i64 %6, 1, !dbg !12736
  store i64 %inc, i64* %tx_errors, align 8, !dbg !12736
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12737
  %stats2 = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 24, !dbg !12738
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats2, i32 0, i32 16, !dbg !12739
  %8 = load i64, i64* %tx_aborted_errors, align 8, !dbg !12740
  %inc3 = add i64 %8, 1, !dbg !12740
  store i64 %inc3, i64* %tx_aborted_errors, align 8, !dbg !12740
  br label %do.body, !dbg !12741

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !12742

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12743, metadata !DIExpression()), !dbg !12745
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12746, metadata !DIExpression()), !dbg !12745
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !12745
  %conv = zext i1 %cmp5 to i32, !dbg !12745
  store i32 1, i32* %tmp, align 4, !dbg !12745
  %9 = load i32, i32* %tmp, align 4, !dbg !12745
  br label %do.body6, !dbg !12747

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !12748

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !12749

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !12751, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !12755, metadata !DIExpression()), !dbg !12754
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !12754
  %conv12 = zext i1 %cmp11 to i32, !dbg !12754
  store i32 1, i32* %tmp13, align 4, !dbg !12754
  %10 = load i32, i32* %tmp13, align 4, !dbg !12754
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !12756
  store i64 %call14, i64* %flags, align 8, !dbg !12756
  br label %do.end, !dbg !12756

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !12749

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !12748

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12757, !srcloc !12758
  br label %do.body17, !dbg !12757

do.body17:                                        ; preds = %do.body16
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12759
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 22, !dbg !12759
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12760
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12761
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !12761
  br label %do.end19, !dbg !12759

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !12757

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !12748

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !12747

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !12742

do.end23:                                         ; preds = %do.end22
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12762
  call void @tx_stop(%struct.slgt_info* %14) #11, !dbg !12763
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !12764
  %lock24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 22, !dbg !12765
  %16 = load i64, i64* %flags, align 8, !dbg !12766
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !12767
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !12767
  store i32 1, i32* %tmp.i, align 4, !dbg !12767
  %17 = load i32, i32* %tmp.i, align 4, !dbg !12767
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !12768
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !12768
  store i32 1, i32* %tmp8.i, align 4, !dbg !12768
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !12768
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !12769
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !12769
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !12770, !srcloc !10199
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !12771
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !12771
  %rlock.i26 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !12771
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12772
  call void @netif_wake_queue(%struct.net_device* %22) #11, !dbg !12773
  ret void, !dbg !12774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #1 !dbg !12775 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !12779, metadata !DIExpression()), !dbg !12780
  ret i1 true, !dbg !12781
}

; Function Attrs: noredzone
declare dso_local i32 @hdlc_open(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @startup(%struct.slgt_info* %info) #1 !dbg !12782 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9736, metadata !DIExpression()), !dbg !12783
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9746, metadata !DIExpression()), !dbg !12788
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9748, metadata !DIExpression()), !dbg !12789
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9750, metadata !DIExpression()), !dbg !12790
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9752, metadata !DIExpression()), !dbg !12791
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9758, metadata !DIExpression()), !dbg !12793
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9764, metadata !DIExpression()), !dbg !12795
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9773, metadata !DIExpression()), !dbg !12798
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9775, metadata !DIExpression()), !dbg !12799
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9777, metadata !DIExpression()), !dbg !12800
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9779, metadata !DIExpression()), !dbg !12801
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9781, metadata !DIExpression()), !dbg !12802
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9783, metadata !DIExpression()), !dbg !12803
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9785, metadata !DIExpression()), !dbg !12804
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9787, metadata !DIExpression()), !dbg !12805
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  %0 = load i32, i32* @debug_level, align 4, !dbg !12808
  %cmp = icmp sge i32 %0, 3, !dbg !12808
  br i1 %cmp, label %if.then, label %if.end, !dbg !12810

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12808
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !12808
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !12808
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay) #12, !dbg !12808
  br label %if.end, !dbg !12808

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12811
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 1, !dbg !12813
  %call1 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !12814
  br i1 %call1, label %if.then2, label %if.end3, !dbg !12815

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12816
  br label %return, !dbg !12816

if.end3:                                          ; preds = %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12817
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 51, !dbg !12818
  %4 = load i8*, i8** %tx_buf, align 8, !dbg !12818
  %tobool = icmp ne i8* %4, null, !dbg !12817
  br i1 %tobool, label %if.end18, label %if.then4, !dbg !12819

if.then4:                                         ; preds = %if.end3
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12820
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 38, !dbg !12821
  %6 = load i32, i32* %max_frame_size, align 4, !dbg !12821
  %conv = zext i32 %6 to i64, !dbg !12820
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !12822
  %8 = call i1 @llvm.is.constant.i64(i64 %7) #10, !dbg !12823
  br i1 %8, label %if.then.i, label %if.end9.i, !dbg !12824

if.then.i:                                        ; preds = %if.then4
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !12825
  %cmp.i = icmp ugt i64 %9, 8192, !dbg !12826
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12827

if.then1.i:                                       ; preds = %if.then.i
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !12828
  %11 = load i32, i32* %flags.addr.i, align 4, !dbg !12829
  store i64 %10, i64* %size.addr.i.i, align 8
  store i32 %11, i32* %flags.addr.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !12830
  %call.i.i = call i32 @get_order(i64 %12) #13, !dbg !12831
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12802
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !12832
  %14 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12833
  %15 = load i32, i32* %order.i.i, align 4, !dbg !12834
  store i64 %13, i64* %size.addr.i.i.i, align 8
  store i32 %14, i32* %flags.addr.i.i.i, align 4
  store i32 %15, i32* %order.addr.i.i.i, align 4
  %16 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12835
  %17 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12836
  %18 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12837
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %16, i32 %17, i32 %18) #14, !dbg !12838
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12838
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12838
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12838
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !12838
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12839
  br label %kmalloc.exit, !dbg !12839

if.end.i:                                         ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !12840
  store i64 %19, i64* %size.addr.i11.i, align 8
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12841
  %tobool.i.i = icmp ne i64 %20, 0, !dbg !12841
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12842

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12843
  br label %kmalloc_index.exit.i, !dbg !12843

if.end.i.i:                                       ; preds = %if.end.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12844
  %cmp.i.i = icmp ule i64 %21, 8, !dbg !12845
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12846

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12847
  br label %kmalloc_index.exit.i, !dbg !12847

if.end2.i.i:                                      ; preds = %if.end.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12848
  %cmp3.i.i = icmp ugt i64 %22, 64, !dbg !12849
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12850

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12851
  %cmp4.i.i = icmp ule i64 %23, 96, !dbg !12852
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12853

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12854
  br label %kmalloc_index.exit.i, !dbg !12854

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12855
  %cmp7.i.i = icmp ugt i64 %24, 128, !dbg !12856
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12857

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12858
  %cmp9.i.i = icmp ule i64 %25, 192, !dbg !12859
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12860

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12861
  br label %kmalloc_index.exit.i, !dbg !12861

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12862
  %cmp12.i.i = icmp ule i64 %26, 8, !dbg !12863
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12864

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12865
  br label %kmalloc_index.exit.i, !dbg !12865

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12866
  %cmp15.i.i = icmp ule i64 %27, 16, !dbg !12867
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12868

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12869
  br label %kmalloc_index.exit.i, !dbg !12869

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12870
  %cmp18.i.i = icmp ule i64 %28, 32, !dbg !12871
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12872

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12873
  br label %kmalloc_index.exit.i, !dbg !12873

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12874
  %cmp21.i.i = icmp ule i64 %29, 64, !dbg !12875
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12876

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12877
  br label %kmalloc_index.exit.i, !dbg !12877

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12878
  %cmp24.i.i = icmp ule i64 %30, 128, !dbg !12879
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12880

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12881
  br label %kmalloc_index.exit.i, !dbg !12881

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12882
  %cmp27.i.i = icmp ule i64 %31, 256, !dbg !12883
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12884

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12885
  br label %kmalloc_index.exit.i, !dbg !12885

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12886
  %cmp30.i.i = icmp ule i64 %32, 512, !dbg !12887
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12888

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12889
  br label %kmalloc_index.exit.i, !dbg !12889

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12890
  %cmp33.i.i = icmp ule i64 %33, 1024, !dbg !12891
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12892

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12893
  br label %kmalloc_index.exit.i, !dbg !12893

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12894
  %cmp36.i.i = icmp ule i64 %34, 2048, !dbg !12895
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12896

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12897
  br label %kmalloc_index.exit.i, !dbg !12897

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12898
  %cmp39.i.i = icmp ule i64 %35, 4096, !dbg !12899
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12900

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12901
  br label %kmalloc_index.exit.i, !dbg !12901

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12902
  %cmp42.i.i = icmp ule i64 %36, 8192, !dbg !12903
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12904

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12905
  br label %kmalloc_index.exit.i, !dbg !12905

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12906
  %cmp45.i.i = icmp ule i64 %37, 16384, !dbg !12907
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12908

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12909
  br label %kmalloc_index.exit.i, !dbg !12909

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12910
  %cmp48.i.i = icmp ule i64 %38, 32768, !dbg !12911
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12912

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12913
  br label %kmalloc_index.exit.i, !dbg !12913

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12914
  %cmp51.i.i = icmp ule i64 %39, 65536, !dbg !12915
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12916

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12917
  br label %kmalloc_index.exit.i, !dbg !12917

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12918
  %cmp54.i.i = icmp ule i64 %40, 131072, !dbg !12919
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12920

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12921
  br label %kmalloc_index.exit.i, !dbg !12921

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12922
  %cmp57.i.i = icmp ule i64 %41, 262144, !dbg !12923
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12924

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12925
  br label %kmalloc_index.exit.i, !dbg !12925

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12926
  %cmp60.i.i = icmp ule i64 %42, 524288, !dbg !12927
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12928

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12929
  br label %kmalloc_index.exit.i, !dbg !12929

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12930
  %cmp63.i.i = icmp ule i64 %43, 1048576, !dbg !12931
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12932

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12933
  br label %kmalloc_index.exit.i, !dbg !12933

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12934
  %cmp66.i.i = icmp ule i64 %44, 2097152, !dbg !12935
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12936

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12937
  br label %kmalloc_index.exit.i, !dbg !12937

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12938
  %cmp69.i.i = icmp ule i64 %45, 4194304, !dbg !12939
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12940

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12941
  br label %kmalloc_index.exit.i, !dbg !12941

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12942
  %cmp72.i.i = icmp ule i64 %46, 8388608, !dbg !12943
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12944

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12945
  br label %kmalloc_index.exit.i, !dbg !12945

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12946
  %cmp75.i.i = icmp ule i64 %47, 16777216, !dbg !12947
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12948

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12949
  br label %kmalloc_index.exit.i, !dbg !12949

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12950
  %cmp78.i.i = icmp ule i64 %48, 33554432, !dbg !12951
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12952

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12953
  br label %kmalloc_index.exit.i, !dbg !12953

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12954
  %cmp81.i.i = icmp ule i64 %49, 67108864, !dbg !12955
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12956

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12957
  br label %kmalloc_index.exit.i, !dbg !12957

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !12958, !srcloc !9963
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !12959, !srcloc !9967
  unreachable, !dbg !12960

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %50 = load i32, i32* %retval.i.i, align 4, !dbg !12961
  store i32 %50, i32* %index.i, align 4, !dbg !12962
  %51 = load i32, i32* %index.i, align 4, !dbg !12963
  %tobool.i = icmp ne i32 %51, 0, !dbg !12963
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12964

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12965
  br label %kmalloc.exit, !dbg !12965

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !12966
  store i32 %52, i32* %flags.addr.i13.i, align 4
  %53 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12967
  %and.i.i = and i32 %53, 17, !dbg !12967
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12967
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12967
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12967
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12967
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12968

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12969
  br label %kmalloc_type.exit.i, !dbg !12969

if.end.i16.i:                                     ; preds = %if.end4.i
  %54 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12970
  %and2.i.i = and i32 %54, 1, !dbg !12971
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12970
  %55 = zext i1 %tobool3.i.i to i64, !dbg !12970
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12970
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12972
  br label %kmalloc_type.exit.i, !dbg !12972

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %56 = load i32, i32* %retval.i12.i, align 4, !dbg !12973
  %idxprom.i = zext i32 %56 to i64, !dbg !12974
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12974
  %57 = load i32, i32* %index.i, align 4, !dbg !12975
  %idxprom6.i = zext i32 %57 to i64, !dbg !12974
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12974
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12974
  %59 = load i32, i32* %flags.addr.i, align 4, !dbg !12976
  %60 = load i64, i64* %size.addr.i, align 8, !dbg !12977
  store %struct.kmem_cache* %58, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %59, i32* %flags.addr.i17.i, align 4
  store i64 %60, i64* %size.addr.i18.i, align 8
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12978
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12979
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %61, i32 %62) #14, !dbg !12980
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12980
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12980
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12980
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !12980
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12790
  %63 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12981
  %64 = load i8*, i8** %ret.i.i, align 8, !dbg !12982
  %65 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12983
  %66 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12984
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %63, i8* %64, i64 %65, i32 %66) #14, !dbg !12985
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12986
  %67 = load i8*, i8** %ret.i.i, align 8, !dbg !12987
  store i8* %67, i8** %retval.i, align 8, !dbg !12988
  br label %kmalloc.exit, !dbg !12988

if.end9.i:                                        ; preds = %if.then4
  %68 = load i64, i64* %size.addr.i, align 8, !dbg !12989
  %69 = load i32, i32* %flags.addr.i, align 4, !dbg !12990
  %call10.i = call noalias i8* @__kmalloc(i64 %68, i32 %69) #14, !dbg !12991
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12991
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12991
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12991
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !12991
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12992
  br label %kmalloc.exit, !dbg !12992

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %70 = load i8*, i8** %retval.i, align 8, !dbg !12993
  %71 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12994
  %tx_buf6 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %71, i32 0, i32 51, !dbg !12995
  store i8* %70, i8** %tx_buf6, align 8, !dbg !12996
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !12997
  %tx_buf7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 51, !dbg !12999
  %73 = load i8*, i8** %tx_buf7, align 8, !dbg !12999
  %tobool8 = icmp ne i8* %73, null, !dbg !12997
  br i1 %tobool8, label %if.end17, label %if.then9, !dbg !13000

if.then9:                                         ; preds = %kmalloc.exit
  %74 = load i32, i32* @debug_level, align 4, !dbg !13001
  %cmp10 = icmp sge i32 %74, 2, !dbg !13001
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !13004

if.then12:                                        ; preds = %if.then9
  %75 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13001
  %device_name13 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %75, i32 0, i32 4, !dbg !13001
  %arraydecay14 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name13, i64 0, i64 0, !dbg !13001
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay14) #12, !dbg !13001
  br label %if.end16, !dbg !13001

if.end16:                                         ; preds = %if.then12, %if.then9
  store i32 -12, i32* %retval, align 4, !dbg !13005
  br label %return, !dbg !13005

if.end17:                                         ; preds = %kmalloc.exit
  br label %if.end18, !dbg !13006

if.end18:                                         ; preds = %if.end17, %if.end3
  %76 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13007
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 24, !dbg !13008
  store i32 0, i32* %pending_bh, align 8, !dbg !13009
  %77 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13010
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %77, i32 0, i32 11, !dbg !13011
  %78 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !13012
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 92, i1 false), !dbg !13012
  %79 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13013
  call void @change_params(%struct.slgt_info* %79) #11, !dbg !13014
  %80 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13015
  %port19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %80, i32 0, i32 1, !dbg !13017
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port19, i32 0, i32 1, !dbg !13018
  %81 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13018
  %tobool20 = icmp ne %struct.tty_struct* %81, null, !dbg !13015
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !13019

if.then21:                                        ; preds = %if.end18
  %82 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13020
  %port22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %82, i32 0, i32 1, !dbg !13021
  %tty23 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port22, i32 0, i32 1, !dbg !13022
  %83 = load %struct.tty_struct*, %struct.tty_struct** %tty23, align 8, !dbg !13022
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %83, i32 0, i32 21, !dbg !13023
  call void @clear_bit(i64 1, i64* %flags) #11, !dbg !13024
  br label %if.end24, !dbg !13024

if.end24:                                         ; preds = %if.then21, %if.end18
  %84 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13025
  %port25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %84, i32 0, i32 1, !dbg !13026
  call void @tty_port_set_initialized(%struct.tty_port* %port25, i1 zeroext true) #11, !dbg !13027
  store i32 0, i32* %retval, align 4, !dbg !13028
  br label %return, !dbg !13028

return:                                           ; preds = %if.end24, %if.end16, %if.then2
  %85 = load i32, i32* %retval, align 4, !dbg !13029
  ret i32 %85, !dbg !13029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @program_hw(%struct.slgt_info* %info) #1 !dbg !13030 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !10114, metadata !DIExpression()), !dbg !13031
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !13033
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !13034
  %info.addr = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13043, metadata !DIExpression()), !dbg !13044
  br label %do.body, !dbg !13045

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13046

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13047, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13050, metadata !DIExpression()), !dbg !13049
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13049
  %conv = zext i1 %cmp to i32, !dbg !13049
  store i32 1, i32* %tmp, align 4, !dbg !13049
  %0 = load i32, i32* %tmp, align 4, !dbg !13049
  br label %do.body2, !dbg !13051

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13052

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13053

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13055, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13059, metadata !DIExpression()), !dbg !13058
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13058
  %conv8 = zext i1 %cmp7 to i32, !dbg !13058
  store i32 1, i32* %tmp9, align 4, !dbg !13058
  %1 = load i32, i32* %tmp9, align 4, !dbg !13058
  %call = call i64 @arch_local_irq_save() #11, !dbg !13060
  store i64 %call, i64* %flags, align 8, !dbg !13060
  br label %do.end, !dbg !13060

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13053

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13052

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13061, !srcloc !13062
  br label %do.body12, !dbg !13061

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13063
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 22, !dbg !13063
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13064
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13065
  %rlock.i = bitcast %union.anon.1* %4 to %struct.raw_spinlock*, !dbg !13065
  br label %do.end14, !dbg !13063

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13061

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13052

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13051

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13046

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13066
  call void @rx_stop(%struct.slgt_info* %5) #11, !dbg !13067
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13068
  call void @tx_stop(%struct.slgt_info* %6) #11, !dbg !13069
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13070
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 36, !dbg !13072
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !13073
  %8 = load i64, i64* %mode, align 8, !dbg !13073
  %cmp19 = icmp ne i64 %8, 1, !dbg !13074
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !13075

lor.lhs.false:                                    ; preds = %do.end18
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13076
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 74, !dbg !13077
  %10 = load i32, i32* %netcount, align 4, !dbg !13077
  %tobool = icmp ne i32 %10, 0, !dbg !13076
  br i1 %tobool, label %if.then, label %if.else, !dbg !13078

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13079
  call void @sync_mode(%struct.slgt_info* %11) #11, !dbg !13080
  br label %if.end, !dbg !13080

if.else:                                          ; preds = %lor.lhs.false
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13081
  call void @async_mode(%struct.slgt_info* %12) #11, !dbg !13082
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13083
  call void @set_signals(%struct.slgt_info* %13) #11, !dbg !13084
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13085
  %dcd_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 56, !dbg !13086
  store i32 0, i32* %dcd_chkcount, align 4, !dbg !13087
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13088
  %cts_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 57, !dbg !13089
  store i32 0, i32* %cts_chkcount, align 8, !dbg !13090
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13091
  %ri_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 59, !dbg !13092
  store i32 0, i32* %ri_chkcount, align 8, !dbg !13093
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13094
  %dsr_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 58, !dbg !13095
  store i32 0, i32* %dsr_chkcount, align 4, !dbg !13096
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13097
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13097
  %call21 = call zeroext i16 @rd_reg16(%struct.slgt_info* %19, i32 140) #11, !dbg !13097
  %conv22 = zext i16 %call21 to i32, !dbg !13097
  %or = or i32 %conv22, 240, !dbg !13097
  %conv23 = trunc i32 %or to i16, !dbg !13097
  call void @wr_reg16(%struct.slgt_info* %18, i32 140, i16 zeroext %conv23) #11, !dbg !13097
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13098
  call void @get_signals(%struct.slgt_info* %20) #11, !dbg !13099
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13100
  %netcount24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 74, !dbg !13102
  %22 = load i32, i32* %netcount24, align 4, !dbg !13102
  %tobool25 = icmp ne i32 %22, 0, !dbg !13100
  br i1 %tobool25, label %if.then31, label %lor.lhs.false26, !dbg !13103

lor.lhs.false26:                                  ; preds = %if.end
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13104
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 1, !dbg !13105
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !13106
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13106
  %tobool27 = icmp ne %struct.tty_struct* %24, null, !dbg !13104
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !13107

land.lhs.true:                                    ; preds = %lor.lhs.false26
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13108
  %port28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 1, !dbg !13109
  %tty29 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port28, i32 0, i32 1, !dbg !13110
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty29, align 8, !dbg !13110
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %26, i32 0, i32 15, !dbg !13111
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !13112
  %27 = load i32, i32* %c_cflag, align 8, !dbg !13112
  %and = and i32 %27, 128, !dbg !13113
  %tobool30 = icmp ne i32 %and, 0, !dbg !13113
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !13114

if.then31:                                        ; preds = %land.lhs.true, %if.end
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13115
  call void @rx_start(%struct.slgt_info* %28) #11, !dbg !13116
  br label %if.end32, !dbg !13116

if.end32:                                         ; preds = %if.then31, %land.lhs.true, %lor.lhs.false26
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13117
  %lock33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 22, !dbg !13118
  %30 = load i64, i64* %flags, align 8, !dbg !13119
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !13120
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !13120
  store i32 1, i32* %tmp.i, align 4, !dbg !13120
  %31 = load i32, i32* %tmp.i, align 4, !dbg !13120
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !13121
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !13121
  store i32 1, i32* %tmp8.i, align 4, !dbg !13121
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !13121
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !13122
  call void @arch_local_irq_restore(i64 %33) #14, !dbg !13122
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !13123, !srcloc !10199
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !13124
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !13124
  %rlock.i35 = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !13124
  ret void, !dbg !13125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_trans_update(%struct.net_device* %dev) #1 !dbg !13126 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13127, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !13129, metadata !DIExpression()), !dbg !13130
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13131
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13132
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !13130
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !13133
  %trans_start = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 9, !dbg !13135
  %2 = load i64, i64* %trans_start, align 8, !dbg !13135
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !13136
  %cmp = icmp ne i64 %2, %3, !dbg !13137
  br i1 %cmp, label %if.then, label %if.end, !dbg !13138

if.then:                                          ; preds = %entry
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !13139
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !13140
  %trans_start1 = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %5, i32 0, i32 9, !dbg !13141
  store i64 %4, i64* %trans_start1, align 8, !dbg !13142
  br label %if.end, !dbg !13140

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13143
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #1 !dbg !13144 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !13145, metadata !DIExpression()), !dbg !13149
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13153
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !13154
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !13155
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !13156
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #4

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #1 !dbg !13159 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13162, metadata !DIExpression()), !dbg !13163
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13164
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !13165
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #11, !dbg !13166
  ret i1 %call, !dbg !13167
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @change_params(%struct.slgt_info* %info) #1 !dbg !13168 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %cflag = alloca i32, align 4
  %bits_per_char = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %cflag, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata i32* %bits_per_char, metadata !13173, metadata !DIExpression()), !dbg !13174
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13175
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !13177
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !13178
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !13178
  %tobool = icmp ne %struct.tty_struct* %1, null, !dbg !13175
  br i1 %tobool, label %if.end, label %if.then, !dbg !13179

if.then:                                          ; preds = %entry
  br label %return, !dbg !13180

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @debug_level, align 4, !dbg !13181
  %cmp = icmp sge i32 %2, 3, !dbg !13181
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !13183

if.then1:                                         ; preds = %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13181
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 4, !dbg !13181
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !13181
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i8* %arraydecay) #12, !dbg !13181
  br label %if.end2, !dbg !13181

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13184
  %port3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 1, !dbg !13185
  %tty4 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port3, i32 0, i32 1, !dbg !13186
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty4, align 8, !dbg !13186
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 15, !dbg !13187
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !13188
  %6 = load i32, i32* %c_cflag, align 8, !dbg !13188
  store i32 %6, i32* %cflag, align 4, !dbg !13189
  %7 = load i32, i32* %cflag, align 4, !dbg !13190
  %and = and i32 %7, 4111, !dbg !13192
  %tobool5 = icmp ne i32 %and, 0, !dbg !13192
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !13193

if.then6:                                         ; preds = %if.end2
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13194
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 49, !dbg !13195
  %9 = load i8, i8* %signals, align 4, !dbg !13196
  %conv = zext i8 %9 to i32, !dbg !13196
  %or = or i32 %conv, 160, !dbg !13196
  %conv7 = trunc i32 %or to i8, !dbg !13196
  store i8 %conv7, i8* %signals, align 4, !dbg !13196
  br label %if.end12, !dbg !13194

if.else:                                          ; preds = %if.end2
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13197
  %signals8 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 49, !dbg !13198
  %11 = load i8, i8* %signals8, align 4, !dbg !13199
  %conv9 = zext i8 %11 to i32, !dbg !13199
  %and10 = and i32 %conv9, -161, !dbg !13199
  %conv11 = trunc i32 %and10 to i8, !dbg !13199
  store i8 %conv11, i8* %signals8, align 4, !dbg !13199
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then6
  %12 = load i32, i32* %cflag, align 4, !dbg !13200
  %and13 = and i32 %12, 48, !dbg !13201
  switch i32 %and13, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb14
    i32 32, label %sw.bb17
    i32 48, label %sw.bb20
  ], !dbg !13202

sw.bb:                                            ; preds = %if.end12
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13203
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 36, !dbg !13205
  %data_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 10, !dbg !13206
  store i8 5, i8* %data_bits, align 8, !dbg !13207
  br label %sw.epilog, !dbg !13208

sw.bb14:                                          ; preds = %if.end12
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13209
  %params15 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 36, !dbg !13210
  %data_bits16 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params15, i32 0, i32 10, !dbg !13211
  store i8 6, i8* %data_bits16, align 8, !dbg !13212
  br label %sw.epilog, !dbg !13213

sw.bb17:                                          ; preds = %if.end12
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13214
  %params18 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 36, !dbg !13215
  %data_bits19 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params18, i32 0, i32 10, !dbg !13216
  store i8 7, i8* %data_bits19, align 8, !dbg !13217
  br label %sw.epilog, !dbg !13218

sw.bb20:                                          ; preds = %if.end12
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13219
  %params21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 36, !dbg !13220
  %data_bits22 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params21, i32 0, i32 10, !dbg !13221
  store i8 8, i8* %data_bits22, align 8, !dbg !13222
  br label %sw.epilog, !dbg !13223

sw.default:                                       ; preds = %if.end12
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13224
  %params23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 36, !dbg !13225
  %data_bits24 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params23, i32 0, i32 10, !dbg !13226
  store i8 7, i8* %data_bits24, align 8, !dbg !13227
  br label %sw.epilog, !dbg !13228

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb
  %18 = load i32, i32* %cflag, align 4, !dbg !13229
  %and25 = and i32 %18, 64, !dbg !13230
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13231
  %19 = zext i1 %tobool26 to i64, !dbg !13231
  %cond = select i1 %tobool26, i32 2, i32 1, !dbg !13231
  %conv27 = trunc i32 %cond to i8, !dbg !13231
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13232
  %params28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 36, !dbg !13233
  %stop_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params28, i32 0, i32 11, !dbg !13234
  store i8 %conv27, i8* %stop_bits, align 1, !dbg !13235
  %21 = load i32, i32* %cflag, align 4, !dbg !13236
  %and29 = and i32 %21, 256, !dbg !13238
  %tobool30 = icmp ne i32 %and29, 0, !dbg !13238
  br i1 %tobool30, label %if.then31, label %if.else37, !dbg !13239

if.then31:                                        ; preds = %sw.epilog
  %22 = load i32, i32* %cflag, align 4, !dbg !13240
  %and32 = and i32 %22, 512, !dbg !13241
  %tobool33 = icmp ne i32 %and32, 0, !dbg !13242
  %23 = zext i1 %tobool33 to i64, !dbg !13242
  %cond34 = select i1 %tobool33, i32 2, i32 1, !dbg !13242
  %conv35 = trunc i32 %cond34 to i8, !dbg !13242
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13243
  %params36 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 36, !dbg !13244
  %parity = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params36, i32 0, i32 12, !dbg !13245
  store i8 %conv35, i8* %parity, align 2, !dbg !13246
  br label %if.end40, !dbg !13243

if.else37:                                        ; preds = %sw.epilog
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13247
  %params38 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 36, !dbg !13248
  %parity39 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params38, i32 0, i32 12, !dbg !13249
  store i8 0, i8* %parity39, align 2, !dbg !13250
  br label %if.end40

if.end40:                                         ; preds = %if.else37, %if.then31
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13251
  %params41 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 36, !dbg !13252
  %data_bits42 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params41, i32 0, i32 10, !dbg !13253
  %27 = load i8, i8* %data_bits42, align 8, !dbg !13253
  %conv43 = zext i8 %27 to i32, !dbg !13251
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13254
  %params44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 36, !dbg !13255
  %stop_bits45 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params44, i32 0, i32 11, !dbg !13256
  %29 = load i8, i8* %stop_bits45, align 1, !dbg !13256
  %conv46 = zext i8 %29 to i32, !dbg !13254
  %add = add i32 %conv43, %conv46, !dbg !13257
  %add47 = add i32 %add, 1, !dbg !13258
  store i32 %add47, i32* %bits_per_char, align 4, !dbg !13259
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13260
  %port48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 1, !dbg !13261
  %tty49 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port48, i32 0, i32 1, !dbg !13262
  %31 = load %struct.tty_struct*, %struct.tty_struct** %tty49, align 8, !dbg !13262
  %call50 = call i32 @tty_get_baud_rate(%struct.tty_struct* %31) #11, !dbg !13263
  %conv51 = zext i32 %call50 to i64, !dbg !13263
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13264
  %params52 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 36, !dbg !13265
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params52, i32 0, i32 9, !dbg !13266
  store i64 %conv51, i64* %data_rate, align 8, !dbg !13267
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13268
  %params53 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 36, !dbg !13270
  %data_rate54 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params53, i32 0, i32 9, !dbg !13271
  %34 = load i64, i64* %data_rate54, align 8, !dbg !13271
  %tobool55 = icmp ne i64 %34, 0, !dbg !13268
  br i1 %tobool55, label %if.then56, label %if.end61, !dbg !13272

if.then56:                                        ; preds = %if.end40
  %35 = load i32, i32* %bits_per_char, align 4, !dbg !13273
  %mul = mul i32 8000, %35, !dbg !13275
  %conv57 = sext i32 %mul to i64, !dbg !13276
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13277
  %params58 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 36, !dbg !13278
  %data_rate59 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params58, i32 0, i32 9, !dbg !13279
  %37 = load i64, i64* %data_rate59, align 8, !dbg !13279
  %div = udiv i64 %conv57, %37, !dbg !13280
  %conv60 = trunc i64 %div to i32, !dbg !13276
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13281
  %timeout = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 12, !dbg !13282
  store i32 %conv60, i32* %timeout, align 8, !dbg !13283
  br label %if.end61, !dbg !13284

if.end61:                                         ; preds = %if.then56, %if.end40
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13285
  %timeout62 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 12, !dbg !13286
  %40 = load i32, i32* %timeout62, align 8, !dbg !13287
  %add63 = add i32 %40, 5, !dbg !13287
  store i32 %add63, i32* %timeout62, align 8, !dbg !13287
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13288
  %port64 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %41, i32 0, i32 1, !dbg !13289
  %42 = load i32, i32* %cflag, align 4, !dbg !13290
  %and65 = and i32 %42, -2147483648, !dbg !13291
  %tobool66 = icmp ne i32 %and65, 0, !dbg !13290
  call void @tty_port_set_cts_flow(%struct.tty_port* %port64, i1 zeroext %tobool66) #11, !dbg !13292
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13293
  %port67 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 1, !dbg !13294
  %44 = load i32, i32* %cflag, align 4, !dbg !13295
  %neg = xor i32 %44, -1, !dbg !13296
  %and68 = and i32 %neg, 2048, !dbg !13297
  %tobool69 = icmp ne i32 %and68, 0, !dbg !13296
  call void @tty_port_set_check_carrier(%struct.tty_port* %port67, i1 zeroext %tobool69) #11, !dbg !13298
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13299
  %read_status_mask = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 14, !dbg !13300
  store i32 256, i32* %read_status_mask, align 8, !dbg !13301
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13302
  %port70 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 1, !dbg !13302
  %tty71 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port70, i32 0, i32 1, !dbg !13302
  %47 = load %struct.tty_struct*, %struct.tty_struct** %tty71, align 8, !dbg !13302
  %termios72 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %47, i32 0, i32 15, !dbg !13302
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios72, i32 0, i32 0, !dbg !13302
  %48 = load i32, i32* %c_iflag, align 8, !dbg !13302
  %and73 = and i32 %48, 16, !dbg !13302
  %tobool74 = icmp ne i32 %and73, 0, !dbg !13302
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !13304

if.then75:                                        ; preds = %if.end61
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13305
  %read_status_mask76 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 14, !dbg !13306
  %50 = load i32, i32* %read_status_mask76, align 8, !dbg !13307
  %or77 = or i32 %50, 3, !dbg !13307
  store i32 %or77, i32* %read_status_mask76, align 8, !dbg !13307
  br label %if.end78, !dbg !13305

if.end78:                                         ; preds = %if.then75, %if.end61
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13308
  %port79 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %51, i32 0, i32 1, !dbg !13308
  %tty80 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port79, i32 0, i32 1, !dbg !13308
  %52 = load %struct.tty_struct*, %struct.tty_struct** %tty80, align 8, !dbg !13308
  %termios81 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %52, i32 0, i32 15, !dbg !13308
  %c_iflag82 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios81, i32 0, i32 0, !dbg !13308
  %53 = load i32, i32* %c_iflag82, align 8, !dbg !13308
  %and83 = and i32 %53, 2, !dbg !13308
  %tobool84 = icmp ne i32 %and83, 0, !dbg !13308
  br i1 %tobool84, label %if.then91, label %lor.lhs.false, !dbg !13310

lor.lhs.false:                                    ; preds = %if.end78
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13311
  %port85 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %54, i32 0, i32 1, !dbg !13311
  %tty86 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port85, i32 0, i32 1, !dbg !13311
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty86, align 8, !dbg !13311
  %termios87 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 15, !dbg !13311
  %c_iflag88 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios87, i32 0, i32 0, !dbg !13311
  %56 = load i32, i32* %c_iflag88, align 8, !dbg !13311
  %and89 = and i32 %56, 8, !dbg !13311
  %tobool90 = icmp ne i32 %and89, 0, !dbg !13311
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !13312

if.then91:                                        ; preds = %lor.lhs.false, %if.end78
  %57 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13313
  %read_status_mask92 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %57, i32 0, i32 14, !dbg !13314
  %58 = load i32, i32* %read_status_mask92, align 8, !dbg !13315
  %or93 = or i32 %58, 16384, !dbg !13315
  store i32 %or93, i32* %read_status_mask92, align 8, !dbg !13315
  br label %if.end94, !dbg !13313

if.end94:                                         ; preds = %if.then91, %lor.lhs.false
  %59 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13316
  %port95 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %59, i32 0, i32 1, !dbg !13316
  %tty96 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port95, i32 0, i32 1, !dbg !13316
  %60 = load %struct.tty_struct*, %struct.tty_struct** %tty96, align 8, !dbg !13316
  %termios97 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %60, i32 0, i32 15, !dbg !13316
  %c_iflag98 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios97, i32 0, i32 0, !dbg !13316
  %61 = load i32, i32* %c_iflag98, align 8, !dbg !13316
  %and99 = and i32 %61, 4, !dbg !13316
  %tobool100 = icmp ne i32 %and99, 0, !dbg !13316
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !13318

if.then101:                                       ; preds = %if.end94
  %62 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13319
  %ignore_status_mask = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %62, i32 0, i32 15, !dbg !13320
  %63 = load i32, i32* %ignore_status_mask, align 4, !dbg !13321
  %or102 = or i32 %63, 3, !dbg !13321
  store i32 %or102, i32* %ignore_status_mask, align 4, !dbg !13321
  br label %if.end103, !dbg !13319

if.end103:                                        ; preds = %if.then101, %if.end94
  %64 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13322
  %port104 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %64, i32 0, i32 1, !dbg !13322
  %tty105 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port104, i32 0, i32 1, !dbg !13322
  %65 = load %struct.tty_struct*, %struct.tty_struct** %tty105, align 8, !dbg !13322
  %termios106 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %65, i32 0, i32 15, !dbg !13322
  %c_iflag107 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios106, i32 0, i32 0, !dbg !13322
  %66 = load i32, i32* %c_iflag107, align 8, !dbg !13322
  %and108 = and i32 %66, 1, !dbg !13322
  %tobool109 = icmp ne i32 %and108, 0, !dbg !13322
  br i1 %tobool109, label %if.then110, label %if.end123, !dbg !13324

if.then110:                                       ; preds = %if.end103
  %67 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13325
  %ignore_status_mask111 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %67, i32 0, i32 15, !dbg !13327
  %68 = load i32, i32* %ignore_status_mask111, align 4, !dbg !13328
  %or112 = or i32 %68, 16384, !dbg !13328
  store i32 %or112, i32* %ignore_status_mask111, align 4, !dbg !13328
  %69 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13329
  %port113 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %69, i32 0, i32 1, !dbg !13329
  %tty114 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port113, i32 0, i32 1, !dbg !13329
  %70 = load %struct.tty_struct*, %struct.tty_struct** %tty114, align 8, !dbg !13329
  %termios115 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %70, i32 0, i32 15, !dbg !13329
  %c_iflag116 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios115, i32 0, i32 0, !dbg !13329
  %71 = load i32, i32* %c_iflag116, align 8, !dbg !13329
  %and117 = and i32 %71, 4, !dbg !13329
  %tobool118 = icmp ne i32 %and117, 0, !dbg !13329
  br i1 %tobool118, label %if.then119, label %if.end122, !dbg !13331

if.then119:                                       ; preds = %if.then110
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13332
  %ignore_status_mask120 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 15, !dbg !13333
  %73 = load i32, i32* %ignore_status_mask120, align 4, !dbg !13334
  %or121 = or i32 %73, 16, !dbg !13334
  store i32 %or121, i32* %ignore_status_mask120, align 4, !dbg !13334
  br label %if.end122, !dbg !13332

if.end122:                                        ; preds = %if.then119, %if.then110
  br label %if.end123, !dbg !13335

if.end123:                                        ; preds = %if.end122, %if.end103
  %74 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13336
  call void @program_hw(%struct.slgt_info* %74) #11, !dbg !13337
  br label %return, !dbg !13338

return:                                           ; preds = %if.end123, %if.then
  ret void, !dbg !13338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #1 !dbg !13339 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13344, metadata !DIExpression()), !dbg !13346
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13348, metadata !DIExpression()), !dbg !13349
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13350, metadata !DIExpression()), !dbg !13352
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13354, metadata !DIExpression()), !dbg !13355
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13356, metadata !DIExpression()), !dbg !13357
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13358, metadata !DIExpression()), !dbg !13359
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13360
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13361
  %div = sdiv i64 %1, 64, !dbg !13361
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13362
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13360
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13363
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13364
  %conv.i = trunc i64 %4 to i32, !dbg !13364
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13365
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13366
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13366
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13366
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13367
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13368
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13369
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !13371
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13372

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13373
  %12 = bitcast i64* %11 to i8*, !dbg !13373
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13373
  %shr.i = ashr i64 %13, 3, !dbg !13373
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13373
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13375
  %and.i = and i64 %14, 7, !dbg !13375
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13375
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13375
  %neg.i = xor i32 %shl.i, -1, !dbg !13376
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !13377, !srcloc !13378
  br label %arch_clear_bit.exit, !dbg !13379

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13380
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13382
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !13383, !srcloc !13384
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !13386 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13389, metadata !DIExpression()), !dbg !13390
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13391, metadata !DIExpression()), !dbg !13392
  %0 = load i8, i8* %val.addr, align 1, !dbg !13393
  %tobool = trunc i8 %0 to i1, !dbg !13393
  br i1 %tobool, label %if.then, label %if.else, !dbg !13395

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13396
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !13397
  call void @set_bit(i64 0, i64* %iflags) #11, !dbg !13398
  br label %if.end, !dbg !13398

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13399
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !13400
  call void @clear_bit(i64 0, i64* %iflags1) #11, !dbg !13401
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13402
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_get_baud_rate(%struct.tty_struct* %tty) #1 !dbg !13403 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !13408
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !13409
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %termios) #11, !dbg !13410
  ret i32 %call, !dbg !13411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_cts_flow(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !13412 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13413, metadata !DIExpression()), !dbg !13414
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13415, metadata !DIExpression()), !dbg !13416
  %0 = load i8, i8* %val.addr, align 1, !dbg !13417
  %tobool = trunc i8 %0 to i1, !dbg !13417
  br i1 %tobool, label %if.then, label %if.else, !dbg !13419

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13420
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !13421
  call void @set_bit(i64 3, i64* %iflags) #11, !dbg !13422
  br label %if.end, !dbg !13422

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13423
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !13424
  call void @clear_bit(i64 3, i64* %iflags1) #11, !dbg !13425
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_check_carrier(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !13427 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  %0 = load i8, i8* %val.addr, align 1, !dbg !13432
  %tobool = trunc i8 %0 to i1, !dbg !13432
  br i1 %tobool, label %if.then, label %if.else, !dbg !13434

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13435
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !13436
  call void @set_bit(i64 4, i64* %iflags) #11, !dbg !13437
  br label %if.end, !dbg !13437

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !13438
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !13439
  call void @clear_bit(i64 4, i64* %iflags1) #11, !dbg !13440
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13441
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !13442 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13443, metadata !DIExpression()), !dbg !13445
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13447, metadata !DIExpression()), !dbg !13448
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13350, metadata !DIExpression()), !dbg !13449
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13354, metadata !DIExpression()), !dbg !13451
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13454, metadata !DIExpression()), !dbg !13455
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13456
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13457
  %div = sdiv i64 %1, 64, !dbg !13457
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13458
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13456
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13459
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13460
  %conv.i = trunc i64 %4 to i32, !dbg !13460
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13461
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13462
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13462
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13462
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13463
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13464
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13465
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !13467
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13468

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13469
  %12 = bitcast i64* %11 to i8*, !dbg !13469
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13469
  %shr.i = ashr i64 %13, 3, !dbg !13469
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13469
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13471
  %and.i = and i64 %14, 7, !dbg !13471
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13471
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13471
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #10, !dbg !13472, !srcloc !13473
  br label %arch_set_bit.exit, !dbg !13474

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13475
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13477
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !13478, !srcloc !13479
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !13481 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  ret i1 true, !dbg !13486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sync_mode(%struct.slgt_info* %info) #1 !dbg !13487 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata i16* %val, metadata !13490, metadata !DIExpression()), !dbg !13491
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13492
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13492
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %1, i32 140) #11, !dbg !13492
  %conv = zext i16 %call to i32, !dbg !13492
  %and = and i32 %conv, -16370, !dbg !13492
  %conv1 = trunc i32 %and to i16, !dbg !13492
  call void @wr_reg16(%struct.slgt_info* %0, i32 140, i16 zeroext %conv1) #11, !dbg !13492
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13493
  call void @tx_stop(%struct.slgt_info* %2) #11, !dbg !13494
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13495
  call void @rx_stop(%struct.slgt_info* %3) #11, !dbg !13496
  store i16 4, i16* %val, align 2, !dbg !13497
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13498
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 36, !dbg !13499
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !13500
  %5 = load i64, i64* %mode, align 8, !dbg !13500
  switch i64 %5, label %sw.epilog [
    i64 8, label %sw.bb
    i64 3, label %sw.bb4
    i64 4, label %sw.bb8
    i64 6, label %sw.bb12
  ], !dbg !13501

sw.bb:                                            ; preds = %entry
  %6 = load i16, i16* %val, align 2, !dbg !13502
  %conv2 = zext i16 %6 to i32, !dbg !13502
  %or = or i32 %conv2, 40960, !dbg !13502
  %conv3 = trunc i32 %or to i16, !dbg !13502
  store i16 %conv3, i16* %val, align 2, !dbg !13502
  br label %sw.epilog, !dbg !13504

sw.bb4:                                           ; preds = %entry
  %7 = load i16, i16* %val, align 2, !dbg !13505
  %conv5 = zext i16 %7 to i32, !dbg !13505
  %or6 = or i32 %conv5, 24576, !dbg !13505
  %conv7 = trunc i32 %or6 to i16, !dbg !13505
  store i16 %conv7, i16* %val, align 2, !dbg !13505
  br label %sw.epilog, !dbg !13506

sw.bb8:                                           ; preds = %entry
  %8 = load i16, i16* %val, align 2, !dbg !13507
  %conv9 = zext i16 %8 to i32, !dbg !13507
  %or10 = or i32 %conv9, 32768, !dbg !13507
  %conv11 = trunc i32 %or10 to i16, !dbg !13507
  store i16 %conv11, i16* %val, align 2, !dbg !13507
  br label %sw.epilog, !dbg !13508

sw.bb12:                                          ; preds = %entry
  %9 = load i16, i16* %val, align 2, !dbg !13509
  %conv13 = zext i16 %9 to i32, !dbg !13509
  %or14 = or i32 %conv13, 8192, !dbg !13509
  %conv15 = trunc i32 %or14 to i16, !dbg !13509
  store i16 %conv15, i16* %val, align 2, !dbg !13509
  br label %sw.epilog, !dbg !13510

sw.epilog:                                        ; preds = %entry, %sw.bb12, %sw.bb8, %sw.bb4, %sw.bb
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13511
  %if_mode = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 41, !dbg !13513
  %11 = load i32, i32* %if_mode, align 8, !dbg !13513
  %and16 = and i32 %11, 16, !dbg !13514
  %tobool = icmp ne i32 %and16, 0, !dbg !13514
  br i1 %tobool, label %if.then, label %if.end, !dbg !13515

if.then:                                          ; preds = %sw.epilog
  %12 = load i16, i16* %val, align 2, !dbg !13516
  %conv17 = zext i16 %12 to i32, !dbg !13516
  %or18 = or i32 %conv17, 128, !dbg !13516
  %conv19 = trunc i32 %or18 to i16, !dbg !13516
  store i16 %conv19, i16* %val, align 2, !dbg !13516
  br label %if.end, !dbg !13517

if.end:                                           ; preds = %if.then, %sw.epilog
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13518
  %params20 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 36, !dbg !13519
  %encoding = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params20, i32 0, i32 3, !dbg !13520
  %14 = load i8, i8* %encoding, align 4, !dbg !13520
  %conv21 = zext i8 %14 to i32, !dbg !13518
  switch i32 %conv21, label %sw.epilog50 [
    i32 1, label %sw.bb22
    i32 2, label %sw.bb26
    i32 3, label %sw.bb30
    i32 4, label %sw.bb34
    i32 5, label %sw.bb38
    i32 6, label %sw.bb42
    i32 7, label %sw.bb46
  ], !dbg !13521

sw.bb22:                                          ; preds = %if.end
  %15 = load i16, i16* %val, align 2, !dbg !13522
  %conv23 = zext i16 %15 to i32, !dbg !13522
  %or24 = or i32 %conv23, 1024, !dbg !13522
  %conv25 = trunc i32 %or24 to i16, !dbg !13522
  store i16 %conv25, i16* %val, align 2, !dbg !13522
  br label %sw.epilog50, !dbg !13524

sw.bb26:                                          ; preds = %if.end
  %16 = load i16, i16* %val, align 2, !dbg !13525
  %conv27 = zext i16 %16 to i32, !dbg !13525
  %or28 = or i32 %conv27, 2048, !dbg !13525
  %conv29 = trunc i32 %or28 to i16, !dbg !13525
  store i16 %conv29, i16* %val, align 2, !dbg !13525
  br label %sw.epilog50, !dbg !13526

sw.bb30:                                          ; preds = %if.end
  %17 = load i16, i16* %val, align 2, !dbg !13527
  %conv31 = zext i16 %17 to i32, !dbg !13527
  %or32 = or i32 %conv31, 3072, !dbg !13527
  %conv33 = trunc i32 %or32 to i16, !dbg !13527
  store i16 %conv33, i16* %val, align 2, !dbg !13527
  br label %sw.epilog50, !dbg !13528

sw.bb34:                                          ; preds = %if.end
  %18 = load i16, i16* %val, align 2, !dbg !13529
  %conv35 = zext i16 %18 to i32, !dbg !13529
  %or36 = or i32 %conv35, 4096, !dbg !13529
  %conv37 = trunc i32 %or36 to i16, !dbg !13529
  store i16 %conv37, i16* %val, align 2, !dbg !13529
  br label %sw.epilog50, !dbg !13530

sw.bb38:                                          ; preds = %if.end
  %19 = load i16, i16* %val, align 2, !dbg !13531
  %conv39 = zext i16 %19 to i32, !dbg !13531
  %or40 = or i32 %conv39, 5120, !dbg !13531
  %conv41 = trunc i32 %or40 to i16, !dbg !13531
  store i16 %conv41, i16* %val, align 2, !dbg !13531
  br label %sw.epilog50, !dbg !13532

sw.bb42:                                          ; preds = %if.end
  %20 = load i16, i16* %val, align 2, !dbg !13533
  %conv43 = zext i16 %20 to i32, !dbg !13533
  %or44 = or i32 %conv43, 6144, !dbg !13533
  %conv45 = trunc i32 %or44 to i16, !dbg !13533
  store i16 %conv45, i16* %val, align 2, !dbg !13533
  br label %sw.epilog50, !dbg !13534

sw.bb46:                                          ; preds = %if.end
  %21 = load i16, i16* %val, align 2, !dbg !13535
  %conv47 = zext i16 %21 to i32, !dbg !13535
  %or48 = or i32 %conv47, 7168, !dbg !13535
  %conv49 = trunc i32 %or48 to i16, !dbg !13535
  store i16 %conv49, i16* %val, align 2, !dbg !13535
  br label %sw.epilog50, !dbg !13536

sw.epilog50:                                      ; preds = %if.end, %sw.bb46, %sw.bb42, %sw.bb38, %sw.bb34, %sw.bb30, %sw.bb26, %sw.bb22
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13537
  %params51 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 36, !dbg !13538
  %crc_type = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params51, i32 0, i32 6, !dbg !13539
  %23 = load i16, i16* %crc_type, align 2, !dbg !13539
  %conv52 = zext i16 %23 to i32, !dbg !13537
  %and53 = and i32 %conv52, 255, !dbg !13540
  switch i32 %and53, label %sw.epilog62 [
    i32 1, label %sw.bb54
    i32 2, label %sw.bb58
  ], !dbg !13541

sw.bb54:                                          ; preds = %sw.epilog50
  %24 = load i16, i16* %val, align 2, !dbg !13542
  %conv55 = zext i16 %24 to i32, !dbg !13542
  %or56 = or i32 %conv55, 512, !dbg !13542
  %conv57 = trunc i32 %or56 to i16, !dbg !13542
  store i16 %conv57, i16* %val, align 2, !dbg !13542
  br label %sw.epilog62, !dbg !13544

sw.bb58:                                          ; preds = %sw.epilog50
  %25 = load i16, i16* %val, align 2, !dbg !13545
  %conv59 = zext i16 %25 to i32, !dbg !13545
  %or60 = or i32 %conv59, 768, !dbg !13545
  %conv61 = trunc i32 %or60 to i16, !dbg !13545
  store i16 %conv61, i16* %val, align 2, !dbg !13545
  br label %sw.epilog62, !dbg !13546

sw.epilog62:                                      ; preds = %sw.epilog50, %sw.bb58, %sw.bb54
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13547
  %params63 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 36, !dbg !13549
  %preamble = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params63, i32 0, i32 8, !dbg !13550
  %27 = load i8, i8* %preamble, align 1, !dbg !13550
  %conv64 = zext i8 %27 to i32, !dbg !13547
  %cmp = icmp ne i32 %conv64, 0, !dbg !13551
  br i1 %cmp, label %if.then66, label %if.end70, !dbg !13552

if.then66:                                        ; preds = %sw.epilog62
  %28 = load i16, i16* %val, align 2, !dbg !13553
  %conv67 = zext i16 %28 to i32, !dbg !13553
  %or68 = or i32 %conv67, 64, !dbg !13553
  %conv69 = trunc i32 %or68 to i16, !dbg !13553
  store i16 %conv69, i16* %val, align 2, !dbg !13553
  br label %if.end70, !dbg !13554

if.end70:                                         ; preds = %if.then66, %sw.epilog62
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13555
  %params71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 36, !dbg !13556
  %preamble_length = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params71, i32 0, i32 7, !dbg !13557
  %30 = load i8, i8* %preamble_length, align 4, !dbg !13557
  %conv72 = zext i8 %30 to i32, !dbg !13555
  switch i32 %conv72, label %sw.epilog85 [
    i32 1, label %sw.bb73
    i32 2, label %sw.bb77
    i32 3, label %sw.bb81
  ], !dbg !13558

sw.bb73:                                          ; preds = %if.end70
  %31 = load i16, i16* %val, align 2, !dbg !13559
  %conv74 = zext i16 %31 to i32, !dbg !13559
  %or75 = or i32 %conv74, 32, !dbg !13559
  %conv76 = trunc i32 %or75 to i16, !dbg !13559
  store i16 %conv76, i16* %val, align 2, !dbg !13559
  br label %sw.epilog85, !dbg !13561

sw.bb77:                                          ; preds = %if.end70
  %32 = load i16, i16* %val, align 2, !dbg !13562
  %conv78 = zext i16 %32 to i32, !dbg !13562
  %or79 = or i32 %conv78, 16, !dbg !13562
  %conv80 = trunc i32 %or79 to i16, !dbg !13562
  store i16 %conv80, i16* %val, align 2, !dbg !13562
  br label %sw.epilog85, !dbg !13563

sw.bb81:                                          ; preds = %if.end70
  %33 = load i16, i16* %val, align 2, !dbg !13564
  %conv82 = zext i16 %33 to i32, !dbg !13564
  %or83 = or i32 %conv82, 48, !dbg !13564
  %conv84 = trunc i32 %or83 to i16, !dbg !13564
  store i16 %conv84, i16* %val, align 2, !dbg !13564
  br label %sw.epilog85, !dbg !13565

sw.epilog85:                                      ; preds = %if.end70, %sw.bb81, %sw.bb77, %sw.bb73
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13566
  %params86 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %34, i32 0, i32 36, !dbg !13568
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params86, i32 0, i32 2, !dbg !13569
  %35 = load i16, i16* %flags, align 2, !dbg !13569
  %conv87 = zext i16 %35 to i32, !dbg !13566
  %and88 = and i32 %conv87, 32, !dbg !13570
  %tobool89 = icmp ne i32 %and88, 0, !dbg !13570
  br i1 %tobool89, label %if.then90, label %if.end94, !dbg !13571

if.then90:                                        ; preds = %sw.epilog85
  %36 = load i16, i16* %val, align 2, !dbg !13572
  %conv91 = zext i16 %36 to i32, !dbg !13572
  %or92 = or i32 %conv91, 1, !dbg !13572
  %conv93 = trunc i32 %or92 to i16, !dbg !13572
  store i16 %conv93, i16* %val, align 2, !dbg !13572
  br label %if.end94, !dbg !13573

if.end94:                                         ; preds = %if.then90, %sw.epilog85
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13574
  %38 = load i16, i16* %val, align 2, !dbg !13575
  call void @wr_reg16(%struct.slgt_info* %37, i32 130, i16 zeroext %38) #11, !dbg !13576
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13577
  %params95 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 36, !dbg !13578
  %preamble96 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params95, i32 0, i32 8, !dbg !13579
  %40 = load i8, i8* %preamble96, align 1, !dbg !13579
  %conv97 = zext i8 %40 to i32, !dbg !13577
  switch i32 %conv97, label %sw.default [
    i32 2, label %sw.bb98
    i32 5, label %sw.bb99
    i32 1, label %sw.bb100
    i32 3, label %sw.bb101
    i32 4, label %sw.bb102
  ], !dbg !13580

sw.bb98:                                          ; preds = %if.end94
  store i16 126, i16* %val, align 2, !dbg !13581
  br label %sw.epilog103, !dbg !13583

sw.bb99:                                          ; preds = %if.end94
  store i16 255, i16* %val, align 2, !dbg !13584
  br label %sw.epilog103, !dbg !13585

sw.bb100:                                         ; preds = %if.end94
  store i16 0, i16* %val, align 2, !dbg !13586
  br label %sw.epilog103, !dbg !13587

sw.bb101:                                         ; preds = %if.end94
  store i16 85, i16* %val, align 2, !dbg !13588
  br label %sw.epilog103, !dbg !13589

sw.bb102:                                         ; preds = %if.end94
  store i16 170, i16* %val, align 2, !dbg !13590
  br label %sw.epilog103, !dbg !13591

sw.default:                                       ; preds = %if.end94
  store i16 126, i16* %val, align 2, !dbg !13592
  br label %sw.epilog103, !dbg !13593

sw.epilog103:                                     ; preds = %sw.default, %sw.bb102, %sw.bb101, %sw.bb100, %sw.bb99, %sw.bb98
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13594
  %42 = load i16, i16* %val, align 2, !dbg !13595
  %conv104 = trunc i16 %42 to i8, !dbg !13596
  call void @wr_reg8(%struct.slgt_info* %41, i32 133, i8 zeroext %conv104) #11, !dbg !13597
  store i16 0, i16* %val, align 2, !dbg !13598
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13599
  %params105 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 36, !dbg !13600
  %mode106 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params105, i32 0, i32 0, !dbg !13601
  %44 = load i64, i64* %mode106, align 8, !dbg !13601
  switch i64 %44, label %sw.epilog123 [
    i64 8, label %sw.bb107
    i64 3, label %sw.bb111
    i64 4, label %sw.bb115
    i64 6, label %sw.bb119
  ], !dbg !13602

sw.bb107:                                         ; preds = %sw.epilog103
  %45 = load i16, i16* %val, align 2, !dbg !13603
  %conv108 = zext i16 %45 to i32, !dbg !13603
  %or109 = or i32 %conv108, 40960, !dbg !13603
  %conv110 = trunc i32 %or109 to i16, !dbg !13603
  store i16 %conv110, i16* %val, align 2, !dbg !13603
  br label %sw.epilog123, !dbg !13605

sw.bb111:                                         ; preds = %sw.epilog103
  %46 = load i16, i16* %val, align 2, !dbg !13606
  %conv112 = zext i16 %46 to i32, !dbg !13606
  %or113 = or i32 %conv112, 24576, !dbg !13606
  %conv114 = trunc i32 %or113 to i16, !dbg !13606
  store i16 %conv114, i16* %val, align 2, !dbg !13606
  br label %sw.epilog123, !dbg !13607

sw.bb115:                                         ; preds = %sw.epilog103
  %47 = load i16, i16* %val, align 2, !dbg !13608
  %conv116 = zext i16 %47 to i32, !dbg !13608
  %or117 = or i32 %conv116, 32768, !dbg !13608
  %conv118 = trunc i32 %or117 to i16, !dbg !13608
  store i16 %conv118, i16* %val, align 2, !dbg !13608
  br label %sw.epilog123, !dbg !13609

sw.bb119:                                         ; preds = %sw.epilog103
  %48 = load i16, i16* %val, align 2, !dbg !13610
  %conv120 = zext i16 %48 to i32, !dbg !13610
  %or121 = or i32 %conv120, 8192, !dbg !13610
  %conv122 = trunc i32 %or121 to i16, !dbg !13610
  store i16 %conv122, i16* %val, align 2, !dbg !13610
  br label %sw.epilog123, !dbg !13611

sw.epilog123:                                     ; preds = %sw.epilog103, %sw.bb119, %sw.bb115, %sw.bb111, %sw.bb107
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13612
  %params124 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 36, !dbg !13613
  %encoding125 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params124, i32 0, i32 3, !dbg !13614
  %50 = load i8, i8* %encoding125, align 4, !dbg !13614
  %conv126 = zext i8 %50 to i32, !dbg !13612
  switch i32 %conv126, label %sw.epilog155 [
    i32 1, label %sw.bb127
    i32 2, label %sw.bb131
    i32 3, label %sw.bb135
    i32 4, label %sw.bb139
    i32 5, label %sw.bb143
    i32 6, label %sw.bb147
    i32 7, label %sw.bb151
  ], !dbg !13615

sw.bb127:                                         ; preds = %sw.epilog123
  %51 = load i16, i16* %val, align 2, !dbg !13616
  %conv128 = zext i16 %51 to i32, !dbg !13616
  %or129 = or i32 %conv128, 1024, !dbg !13616
  %conv130 = trunc i32 %or129 to i16, !dbg !13616
  store i16 %conv130, i16* %val, align 2, !dbg !13616
  br label %sw.epilog155, !dbg !13618

sw.bb131:                                         ; preds = %sw.epilog123
  %52 = load i16, i16* %val, align 2, !dbg !13619
  %conv132 = zext i16 %52 to i32, !dbg !13619
  %or133 = or i32 %conv132, 2048, !dbg !13619
  %conv134 = trunc i32 %or133 to i16, !dbg !13619
  store i16 %conv134, i16* %val, align 2, !dbg !13619
  br label %sw.epilog155, !dbg !13620

sw.bb135:                                         ; preds = %sw.epilog123
  %53 = load i16, i16* %val, align 2, !dbg !13621
  %conv136 = zext i16 %53 to i32, !dbg !13621
  %or137 = or i32 %conv136, 3072, !dbg !13621
  %conv138 = trunc i32 %or137 to i16, !dbg !13621
  store i16 %conv138, i16* %val, align 2, !dbg !13621
  br label %sw.epilog155, !dbg !13622

sw.bb139:                                         ; preds = %sw.epilog123
  %54 = load i16, i16* %val, align 2, !dbg !13623
  %conv140 = zext i16 %54 to i32, !dbg !13623
  %or141 = or i32 %conv140, 4096, !dbg !13623
  %conv142 = trunc i32 %or141 to i16, !dbg !13623
  store i16 %conv142, i16* %val, align 2, !dbg !13623
  br label %sw.epilog155, !dbg !13624

sw.bb143:                                         ; preds = %sw.epilog123
  %55 = load i16, i16* %val, align 2, !dbg !13625
  %conv144 = zext i16 %55 to i32, !dbg !13625
  %or145 = or i32 %conv144, 5120, !dbg !13625
  %conv146 = trunc i32 %or145 to i16, !dbg !13625
  store i16 %conv146, i16* %val, align 2, !dbg !13625
  br label %sw.epilog155, !dbg !13626

sw.bb147:                                         ; preds = %sw.epilog123
  %56 = load i16, i16* %val, align 2, !dbg !13627
  %conv148 = zext i16 %56 to i32, !dbg !13627
  %or149 = or i32 %conv148, 6144, !dbg !13627
  %conv150 = trunc i32 %or149 to i16, !dbg !13627
  store i16 %conv150, i16* %val, align 2, !dbg !13627
  br label %sw.epilog155, !dbg !13628

sw.bb151:                                         ; preds = %sw.epilog123
  %57 = load i16, i16* %val, align 2, !dbg !13629
  %conv152 = zext i16 %57 to i32, !dbg !13629
  %or153 = or i32 %conv152, 7168, !dbg !13629
  %conv154 = trunc i32 %or153 to i16, !dbg !13629
  store i16 %conv154, i16* %val, align 2, !dbg !13629
  br label %sw.epilog155, !dbg !13630

sw.epilog155:                                     ; preds = %sw.epilog123, %sw.bb151, %sw.bb147, %sw.bb143, %sw.bb139, %sw.bb135, %sw.bb131, %sw.bb127
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13631
  %params156 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %58, i32 0, i32 36, !dbg !13632
  %crc_type157 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params156, i32 0, i32 6, !dbg !13633
  %59 = load i16, i16* %crc_type157, align 2, !dbg !13633
  %conv158 = zext i16 %59 to i32, !dbg !13631
  %and159 = and i32 %conv158, 255, !dbg !13634
  switch i32 %and159, label %sw.epilog168 [
    i32 1, label %sw.bb160
    i32 2, label %sw.bb164
  ], !dbg !13635

sw.bb160:                                         ; preds = %sw.epilog155
  %60 = load i16, i16* %val, align 2, !dbg !13636
  %conv161 = zext i16 %60 to i32, !dbg !13636
  %or162 = or i32 %conv161, 512, !dbg !13636
  %conv163 = trunc i32 %or162 to i16, !dbg !13636
  store i16 %conv163, i16* %val, align 2, !dbg !13636
  br label %sw.epilog168, !dbg !13638

sw.bb164:                                         ; preds = %sw.epilog155
  %61 = load i16, i16* %val, align 2, !dbg !13639
  %conv165 = zext i16 %61 to i32, !dbg !13639
  %or166 = or i32 %conv165, 768, !dbg !13639
  %conv167 = trunc i32 %or166 to i16, !dbg !13639
  store i16 %conv167, i16* %val, align 2, !dbg !13639
  br label %sw.epilog168, !dbg !13640

sw.epilog168:                                     ; preds = %sw.epilog155, %sw.bb164, %sw.bb160
  %62 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13641
  %params169 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %62, i32 0, i32 36, !dbg !13643
  %flags170 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params169, i32 0, i32 2, !dbg !13644
  %63 = load i16, i16* %flags170, align 2, !dbg !13644
  %conv171 = zext i16 %63 to i32, !dbg !13641
  %and172 = and i32 %conv171, 64, !dbg !13645
  %tobool173 = icmp ne i32 %and172, 0, !dbg !13645
  br i1 %tobool173, label %if.then174, label %if.end178, !dbg !13646

if.then174:                                       ; preds = %sw.epilog168
  %64 = load i16, i16* %val, align 2, !dbg !13647
  %conv175 = zext i16 %64 to i32, !dbg !13647
  %or176 = or i32 %conv175, 1, !dbg !13647
  %conv177 = trunc i32 %or176 to i16, !dbg !13647
  store i16 %conv177, i16* %val, align 2, !dbg !13647
  br label %if.end178, !dbg !13648

if.end178:                                        ; preds = %if.then174, %sw.epilog168
  %65 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13649
  %66 = load i16, i16* %val, align 2, !dbg !13650
  call void @wr_reg16(%struct.slgt_info* %65, i32 134, i16 zeroext %66) #11, !dbg !13651
  store i16 0, i16* %val, align 2, !dbg !13652
  %67 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13653
  %params179 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %67, i32 0, i32 36, !dbg !13655
  %flags180 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params179, i32 0, i32 2, !dbg !13656
  %68 = load i16, i16* %flags180, align 2, !dbg !13656
  %conv181 = zext i16 %68 to i32, !dbg !13653
  %and182 = and i32 %conv181, 2048, !dbg !13657
  %tobool183 = icmp ne i32 %and182, 0, !dbg !13657
  br i1 %tobool183, label %if.then184, label %if.else198, !dbg !13658

if.then184:                                       ; preds = %if.end178
  %69 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13659
  %params185 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %69, i32 0, i32 36, !dbg !13662
  %flags186 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params185, i32 0, i32 2, !dbg !13663
  %70 = load i16, i16* %flags186, align 2, !dbg !13663
  %conv187 = zext i16 %70 to i32, !dbg !13659
  %and188 = and i32 %conv187, 256, !dbg !13664
  %tobool189 = icmp ne i32 %and188, 0, !dbg !13664
  br i1 %tobool189, label %if.then190, label %if.else, !dbg !13665

if.then190:                                       ; preds = %if.then184
  %71 = load i16, i16* %val, align 2, !dbg !13666
  %conv191 = zext i16 %71 to i32, !dbg !13666
  %or192 = or i32 %conv191, 96, !dbg !13666
  %conv193 = trunc i32 %or192 to i16, !dbg !13666
  store i16 %conv193, i16* %val, align 2, !dbg !13666
  br label %if.end197, !dbg !13667

if.else:                                          ; preds = %if.then184
  %72 = load i16, i16* %val, align 2, !dbg !13668
  %conv194 = zext i16 %72 to i32, !dbg !13668
  %or195 = or i32 %conv194, 64, !dbg !13668
  %conv196 = trunc i32 %or195 to i16, !dbg !13668
  store i16 %conv196, i16* %val, align 2, !dbg !13668
  br label %if.end197

if.end197:                                        ; preds = %if.else, %if.then190
  br label %if.end220, !dbg !13669

if.else198:                                       ; preds = %if.end178
  %73 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13670
  %params199 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %73, i32 0, i32 36, !dbg !13672
  %flags200 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params199, i32 0, i32 2, !dbg !13673
  %74 = load i16, i16* %flags200, align 2, !dbg !13673
  %conv201 = zext i16 %74 to i32, !dbg !13670
  %and202 = and i32 %conv201, 1024, !dbg !13674
  %tobool203 = icmp ne i32 %and202, 0, !dbg !13674
  br i1 %tobool203, label %if.then204, label %if.else208, !dbg !13675

if.then204:                                       ; preds = %if.else198
  %75 = load i16, i16* %val, align 2, !dbg !13676
  %conv205 = zext i16 %75 to i32, !dbg !13676
  %or206 = or i32 %conv205, 128, !dbg !13676
  %conv207 = trunc i32 %or206 to i16, !dbg !13676
  store i16 %conv207, i16* %val, align 2, !dbg !13676
  br label %if.end219, !dbg !13677

if.else208:                                       ; preds = %if.else198
  %76 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13678
  %params209 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 36, !dbg !13680
  %flags210 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params209, i32 0, i32 2, !dbg !13681
  %77 = load i16, i16* %flags210, align 2, !dbg !13681
  %conv211 = zext i16 %77 to i32, !dbg !13678
  %and212 = and i32 %conv211, 8, !dbg !13682
  %tobool213 = icmp ne i32 %and212, 0, !dbg !13682
  br i1 %tobool213, label %if.then214, label %if.end218, !dbg !13683

if.then214:                                       ; preds = %if.else208
  %78 = load i16, i16* %val, align 2, !dbg !13684
  %conv215 = zext i16 %78 to i32, !dbg !13684
  %or216 = or i32 %conv215, 32, !dbg !13684
  %conv217 = trunc i32 %or216 to i16, !dbg !13684
  store i16 %conv217, i16* %val, align 2, !dbg !13684
  br label %if.end218, !dbg !13685

if.end218:                                        ; preds = %if.then214, %if.else208
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then204
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end197
  %79 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13686
  %params221 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %79, i32 0, i32 36, !dbg !13688
  %flags222 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params221, i32 0, i32 2, !dbg !13689
  %80 = load i16, i16* %flags222, align 2, !dbg !13689
  %conv223 = zext i16 %80 to i32, !dbg !13686
  %and224 = and i32 %conv223, 512, !dbg !13690
  %tobool225 = icmp ne i32 %and224, 0, !dbg !13690
  br i1 %tobool225, label %if.then226, label %if.else230, !dbg !13691

if.then226:                                       ; preds = %if.end220
  %81 = load i16, i16* %val, align 2, !dbg !13692
  %conv227 = zext i16 %81 to i32, !dbg !13692
  %or228 = or i32 %conv227, 8, !dbg !13692
  %conv229 = trunc i32 %or228 to i16, !dbg !13692
  store i16 %conv229, i16* %val, align 2, !dbg !13692
  br label %if.end252, !dbg !13693

if.else230:                                       ; preds = %if.end220
  %82 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13694
  %params231 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %82, i32 0, i32 36, !dbg !13696
  %flags232 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params231, i32 0, i32 2, !dbg !13697
  %83 = load i16, i16* %flags232, align 2, !dbg !13697
  %conv233 = zext i16 %83 to i32, !dbg !13694
  %and234 = and i32 %conv233, 256, !dbg !13698
  %tobool235 = icmp ne i32 %and234, 0, !dbg !13698
  br i1 %tobool235, label %if.then236, label %if.else240, !dbg !13699

if.then236:                                       ; preds = %if.else230
  %84 = load i16, i16* %val, align 2, !dbg !13700
  %conv237 = zext i16 %84 to i32, !dbg !13700
  %or238 = or i32 %conv237, 16, !dbg !13700
  %conv239 = trunc i32 %or238 to i16, !dbg !13700
  store i16 %conv239, i16* %val, align 2, !dbg !13700
  br label %if.end251, !dbg !13701

if.else240:                                       ; preds = %if.else230
  %85 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13702
  %params241 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %85, i32 0, i32 36, !dbg !13704
  %flags242 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params241, i32 0, i32 2, !dbg !13705
  %86 = load i16, i16* %flags242, align 2, !dbg !13705
  %conv243 = zext i16 %86 to i32, !dbg !13702
  %and244 = and i32 %conv243, 32768, !dbg !13706
  %tobool245 = icmp ne i32 %and244, 0, !dbg !13706
  br i1 %tobool245, label %if.then246, label %if.end250, !dbg !13707

if.then246:                                       ; preds = %if.else240
  %87 = load i16, i16* %val, align 2, !dbg !13708
  %conv247 = zext i16 %87 to i32, !dbg !13708
  %or248 = or i32 %conv247, 4, !dbg !13708
  %conv249 = trunc i32 %or248 to i16, !dbg !13708
  store i16 %conv249, i16* %val, align 2, !dbg !13708
  br label %if.end250, !dbg !13709

if.end250:                                        ; preds = %if.then246, %if.else240
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.then236
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then226
  %88 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13710
  %params253 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %88, i32 0, i32 36, !dbg !13712
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params253, i32 0, i32 4, !dbg !13713
  %89 = load i64, i64* %clock_speed, align 8, !dbg !13713
  %tobool254 = icmp ne i64 %89, 0, !dbg !13710
  br i1 %tobool254, label %if.then255, label %if.end259, !dbg !13714

if.then255:                                       ; preds = %if.end252
  %90 = load i16, i16* %val, align 2, !dbg !13715
  %conv256 = zext i16 %90 to i32, !dbg !13715
  %or257 = or i32 %conv256, 3, !dbg !13715
  %conv258 = trunc i32 %or257 to i16, !dbg !13715
  store i16 %conv258, i16* %val, align 2, !dbg !13715
  br label %if.end259, !dbg !13716

if.end259:                                        ; preds = %if.then255, %if.end252
  %91 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13717
  %92 = load i16, i16* %val, align 2, !dbg !13718
  %conv260 = trunc i16 %92 to i8, !dbg !13719
  call void @wr_reg8(%struct.slgt_info* %91, i32 137, i8 zeroext %conv260) #11, !dbg !13720
  %93 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13721
  %params261 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %93, i32 0, i32 36, !dbg !13723
  %flags262 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params261, i32 0, i32 2, !dbg !13724
  %94 = load i16, i16* %flags262, align 2, !dbg !13724
  %conv263 = zext i16 %94 to i32, !dbg !13721
  %and264 = and i32 %conv263, 1280, !dbg !13725
  %tobool265 = icmp ne i32 %and264, 0, !dbg !13725
  br i1 %tobool265, label %if.then266, label %if.else282, !dbg !13726

if.then266:                                       ; preds = %if.end259
  %95 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13727
  %params267 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %95, i32 0, i32 36, !dbg !13729
  %encoding268 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params267, i32 0, i32 3, !dbg !13730
  %96 = load i8, i8* %encoding268, align 4, !dbg !13730
  %conv269 = zext i8 %96 to i32, !dbg !13727
  switch i32 %conv269, label %sw.default272 [
    i32 4, label %sw.bb270
    i32 5, label %sw.bb270
    i32 6, label %sw.bb271
    i32 7, label %sw.bb271
  ], !dbg !13731

sw.bb270:                                         ; preds = %if.then266, %if.then266
  store i16 128, i16* %val, align 2, !dbg !13732
  br label %sw.epilog273, !dbg !13734

sw.bb271:                                         ; preds = %if.then266, %if.then266
  store i16 192, i16* %val, align 2, !dbg !13735
  br label %sw.epilog273, !dbg !13736

sw.default272:                                    ; preds = %if.then266
  store i16 64, i16* %val, align 2, !dbg !13737
  br label %sw.epilog273, !dbg !13738

sw.epilog273:                                     ; preds = %sw.default272, %sw.bb271, %sw.bb270
  %97 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13739
  %98 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13740
  %call274 = call zeroext i16 @rd_reg16(%struct.slgt_info* %98, i32 134) #11, !dbg !13741
  %conv275 = zext i16 %call274 to i32, !dbg !13741
  %99 = load i16, i16* %val, align 2, !dbg !13742
  %conv276 = zext i16 %99 to i32, !dbg !13742
  %or277 = or i32 %conv275, %conv276, !dbg !13743
  %conv278 = trunc i32 %or277 to i16, !dbg !13744
  call void @wr_reg16(%struct.slgt_info* %97, i32 134, i16 zeroext %conv278) #11, !dbg !13745
  %100 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13746
  %101 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13747
  %params279 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %101, i32 0, i32 36, !dbg !13748
  %clock_speed280 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params279, i32 0, i32 4, !dbg !13749
  %102 = load i64, i64* %clock_speed280, align 8, !dbg !13749
  %mul = mul i64 %102, 16, !dbg !13750
  %conv281 = trunc i64 %mul to i32, !dbg !13747
  call void @set_rate(%struct.slgt_info* %100, i32 %conv281) #11, !dbg !13751
  br label %if.end286, !dbg !13752

if.else282:                                       ; preds = %if.end259
  %103 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13753
  %104 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13754
  %params283 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %104, i32 0, i32 36, !dbg !13755
  %clock_speed284 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params283, i32 0, i32 4, !dbg !13756
  %105 = load i64, i64* %clock_speed284, align 8, !dbg !13756
  %conv285 = trunc i64 %105 to i32, !dbg !13754
  call void @set_rate(%struct.slgt_info* %103, i32 %conv285) #11, !dbg !13757
  br label %if.end286

if.end286:                                        ; preds = %if.else282, %sw.epilog273
  %106 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13758
  call void @tx_set_idle(%struct.slgt_info* %106) #11, !dbg !13759
  %107 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13760
  call void @msc_set_vcr(%struct.slgt_info* %107) #11, !dbg !13761
  %108 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13762
  call void @wr_reg16(%struct.slgt_info* %108, i32 140, i16 zeroext -16383) #11, !dbg !13763
  %109 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13764
  %params287 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %109, i32 0, i32 36, !dbg !13766
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params287, i32 0, i32 1, !dbg !13767
  %110 = load i8, i8* %loopback, align 8, !dbg !13767
  %tobool288 = icmp ne i8 %110, 0, !dbg !13764
  br i1 %tobool288, label %if.then289, label %if.end290, !dbg !13768

if.then289:                                       ; preds = %if.end286
  %111 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13769
  call void @enable_loopback(%struct.slgt_info* %111) #11, !dbg !13770
  br label %if.end290, !dbg !13770

if.end290:                                        ; preds = %if.then289, %if.end286
  ret void, !dbg !13771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @async_mode(%struct.slgt_info* %info) #1 !dbg !13772 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13773, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.declare(metadata i16* %val, metadata !13775, metadata !DIExpression()), !dbg !13776
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13777
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13777
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %1, i32 140) #11, !dbg !13777
  %conv = zext i16 %call to i32, !dbg !13777
  %and = and i32 %conv, -16370, !dbg !13777
  %conv1 = trunc i32 %and to i16, !dbg !13777
  call void @wr_reg16(%struct.slgt_info* %0, i32 140, i16 zeroext %conv1) #11, !dbg !13777
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13778
  call void @tx_stop(%struct.slgt_info* %2) #11, !dbg !13779
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13780
  call void @rx_stop(%struct.slgt_info* %3) #11, !dbg !13781
  store i16 16384, i16* %val, align 2, !dbg !13782
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13783
  %if_mode = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 41, !dbg !13785
  %5 = load i32, i32* %if_mode, align 8, !dbg !13785
  %and2 = and i32 %5, 16, !dbg !13786
  %tobool = icmp ne i32 %and2, 0, !dbg !13786
  br i1 %tobool, label %if.then, label %if.end, !dbg !13787

if.then:                                          ; preds = %entry
  %6 = load i16, i16* %val, align 2, !dbg !13788
  %conv3 = zext i16 %6 to i32, !dbg !13788
  %or = or i32 %conv3, 128, !dbg !13788
  %conv4 = trunc i32 %or to i16, !dbg !13788
  store i16 %conv4, i16* %val, align 2, !dbg !13788
  br label %if.end, !dbg !13789

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13790
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 36, !dbg !13792
  %parity = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 12, !dbg !13793
  %8 = load i8, i8* %parity, align 2, !dbg !13793
  %conv5 = zext i8 %8 to i32, !dbg !13790
  %cmp = icmp ne i32 %conv5, 0, !dbg !13794
  br i1 %cmp, label %if.then7, label %if.end21, !dbg !13795

if.then7:                                         ; preds = %if.end
  %9 = load i16, i16* %val, align 2, !dbg !13796
  %conv8 = zext i16 %9 to i32, !dbg !13796
  %or9 = or i32 %conv8, 512, !dbg !13796
  %conv10 = trunc i32 %or9 to i16, !dbg !13796
  store i16 %conv10, i16* %val, align 2, !dbg !13796
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13798
  %params11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !13800
  %parity12 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params11, i32 0, i32 12, !dbg !13801
  %11 = load i8, i8* %parity12, align 2, !dbg !13801
  %conv13 = zext i8 %11 to i32, !dbg !13798
  %cmp14 = icmp eq i32 %conv13, 2, !dbg !13802
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !13803

if.then16:                                        ; preds = %if.then7
  %12 = load i16, i16* %val, align 2, !dbg !13804
  %conv17 = zext i16 %12 to i32, !dbg !13804
  %or18 = or i32 %conv17, 256, !dbg !13804
  %conv19 = trunc i32 %or18 to i16, !dbg !13804
  store i16 %conv19, i16* %val, align 2, !dbg !13804
  br label %if.end20, !dbg !13805

if.end20:                                         ; preds = %if.then16, %if.then7
  br label %if.end21, !dbg !13806

if.end21:                                         ; preds = %if.end20, %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13807
  %params22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 36, !dbg !13808
  %data_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params22, i32 0, i32 10, !dbg !13809
  %14 = load i8, i8* %data_bits, align 8, !dbg !13809
  %conv23 = zext i8 %14 to i32, !dbg !13807
  switch i32 %conv23, label %sw.epilog [
    i32 6, label %sw.bb
    i32 7, label %sw.bb27
    i32 8, label %sw.bb31
  ], !dbg !13810

sw.bb:                                            ; preds = %if.end21
  %15 = load i16, i16* %val, align 2, !dbg !13811
  %conv24 = zext i16 %15 to i32, !dbg !13811
  %or25 = or i32 %conv24, 16, !dbg !13811
  %conv26 = trunc i32 %or25 to i16, !dbg !13811
  store i16 %conv26, i16* %val, align 2, !dbg !13811
  br label %sw.epilog, !dbg !13813

sw.bb27:                                          ; preds = %if.end21
  %16 = load i16, i16* %val, align 2, !dbg !13814
  %conv28 = zext i16 %16 to i32, !dbg !13814
  %or29 = or i32 %conv28, 32, !dbg !13814
  %conv30 = trunc i32 %or29 to i16, !dbg !13814
  store i16 %conv30, i16* %val, align 2, !dbg !13814
  br label %sw.epilog, !dbg !13815

sw.bb31:                                          ; preds = %if.end21
  %17 = load i16, i16* %val, align 2, !dbg !13816
  %conv32 = zext i16 %17 to i32, !dbg !13816
  %or33 = or i32 %conv32, 48, !dbg !13816
  %conv34 = trunc i32 %or33 to i16, !dbg !13816
  store i16 %conv34, i16* %val, align 2, !dbg !13816
  br label %sw.epilog, !dbg !13817

sw.epilog:                                        ; preds = %if.end21, %sw.bb31, %sw.bb27, %sw.bb
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13818
  %params35 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 36, !dbg !13820
  %stop_bits = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params35, i32 0, i32 11, !dbg !13821
  %19 = load i8, i8* %stop_bits, align 1, !dbg !13821
  %conv36 = zext i8 %19 to i32, !dbg !13818
  %cmp37 = icmp ne i32 %conv36, 1, !dbg !13822
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !13823

if.then39:                                        ; preds = %sw.epilog
  %20 = load i16, i16* %val, align 2, !dbg !13824
  %conv40 = zext i16 %20 to i32, !dbg !13824
  %or41 = or i32 %conv40, 8, !dbg !13824
  %conv42 = trunc i32 %or41 to i16, !dbg !13824
  store i16 %conv42, i16* %val, align 2, !dbg !13824
  br label %if.end43, !dbg !13825

if.end43:                                         ; preds = %if.then39, %sw.epilog
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13826
  %params44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 36, !dbg !13828
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params44, i32 0, i32 2, !dbg !13829
  %22 = load i16, i16* %flags, align 2, !dbg !13829
  %conv45 = zext i16 %22 to i32, !dbg !13826
  %and46 = and i32 %conv45, 32, !dbg !13830
  %tobool47 = icmp ne i32 %and46, 0, !dbg !13830
  br i1 %tobool47, label %if.then48, label %if.end52, !dbg !13831

if.then48:                                        ; preds = %if.end43
  %23 = load i16, i16* %val, align 2, !dbg !13832
  %conv49 = zext i16 %23 to i32, !dbg !13832
  %or50 = or i32 %conv49, 1, !dbg !13832
  %conv51 = trunc i32 %or50 to i16, !dbg !13832
  store i16 %conv51, i16* %val, align 2, !dbg !13832
  br label %if.end52, !dbg !13833

if.end52:                                         ; preds = %if.then48, %if.end43
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13834
  %25 = load i16, i16* %val, align 2, !dbg !13835
  call void @wr_reg16(%struct.slgt_info* %24, i32 130, i16 zeroext %25) #11, !dbg !13836
  store i16 16384, i16* %val, align 2, !dbg !13837
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13838
  %params53 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 36, !dbg !13840
  %parity54 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params53, i32 0, i32 12, !dbg !13841
  %27 = load i8, i8* %parity54, align 2, !dbg !13841
  %conv55 = zext i8 %27 to i32, !dbg !13838
  %cmp56 = icmp ne i32 %conv55, 0, !dbg !13842
  br i1 %cmp56, label %if.then58, label %if.end72, !dbg !13843

if.then58:                                        ; preds = %if.end52
  %28 = load i16, i16* %val, align 2, !dbg !13844
  %conv59 = zext i16 %28 to i32, !dbg !13844
  %or60 = or i32 %conv59, 512, !dbg !13844
  %conv61 = trunc i32 %or60 to i16, !dbg !13844
  store i16 %conv61, i16* %val, align 2, !dbg !13844
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13846
  %params62 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 36, !dbg !13848
  %parity63 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params62, i32 0, i32 12, !dbg !13849
  %30 = load i8, i8* %parity63, align 2, !dbg !13849
  %conv64 = zext i8 %30 to i32, !dbg !13846
  %cmp65 = icmp eq i32 %conv64, 2, !dbg !13850
  br i1 %cmp65, label %if.then67, label %if.end71, !dbg !13851

if.then67:                                        ; preds = %if.then58
  %31 = load i16, i16* %val, align 2, !dbg !13852
  %conv68 = zext i16 %31 to i32, !dbg !13852
  %or69 = or i32 %conv68, 256, !dbg !13852
  %conv70 = trunc i32 %or69 to i16, !dbg !13852
  store i16 %conv70, i16* %val, align 2, !dbg !13852
  br label %if.end71, !dbg !13853

if.end71:                                         ; preds = %if.then67, %if.then58
  br label %if.end72, !dbg !13854

if.end72:                                         ; preds = %if.end71, %if.end52
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13855
  %params73 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 36, !dbg !13856
  %data_bits74 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params73, i32 0, i32 10, !dbg !13857
  %33 = load i8, i8* %data_bits74, align 8, !dbg !13857
  %conv75 = zext i8 %33 to i32, !dbg !13855
  switch i32 %conv75, label %sw.epilog88 [
    i32 6, label %sw.bb76
    i32 7, label %sw.bb80
    i32 8, label %sw.bb84
  ], !dbg !13858

sw.bb76:                                          ; preds = %if.end72
  %34 = load i16, i16* %val, align 2, !dbg !13859
  %conv77 = zext i16 %34 to i32, !dbg !13859
  %or78 = or i32 %conv77, 16, !dbg !13859
  %conv79 = trunc i32 %or78 to i16, !dbg !13859
  store i16 %conv79, i16* %val, align 2, !dbg !13859
  br label %sw.epilog88, !dbg !13861

sw.bb80:                                          ; preds = %if.end72
  %35 = load i16, i16* %val, align 2, !dbg !13862
  %conv81 = zext i16 %35 to i32, !dbg !13862
  %or82 = or i32 %conv81, 32, !dbg !13862
  %conv83 = trunc i32 %or82 to i16, !dbg !13862
  store i16 %conv83, i16* %val, align 2, !dbg !13862
  br label %sw.epilog88, !dbg !13863

sw.bb84:                                          ; preds = %if.end72
  %36 = load i16, i16* %val, align 2, !dbg !13864
  %conv85 = zext i16 %36 to i32, !dbg !13864
  %or86 = or i32 %conv85, 48, !dbg !13864
  %conv87 = trunc i32 %or86 to i16, !dbg !13864
  store i16 %conv87, i16* %val, align 2, !dbg !13864
  br label %sw.epilog88, !dbg !13865

sw.epilog88:                                      ; preds = %if.end72, %sw.bb84, %sw.bb80, %sw.bb76
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13866
  %params89 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 36, !dbg !13868
  %flags90 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params89, i32 0, i32 2, !dbg !13869
  %38 = load i16, i16* %flags90, align 2, !dbg !13869
  %conv91 = zext i16 %38 to i32, !dbg !13866
  %and92 = and i32 %conv91, 64, !dbg !13870
  %tobool93 = icmp ne i32 %and92, 0, !dbg !13870
  br i1 %tobool93, label %if.then94, label %if.end98, !dbg !13871

if.then94:                                        ; preds = %sw.epilog88
  %39 = load i16, i16* %val, align 2, !dbg !13872
  %conv95 = zext i16 %39 to i32, !dbg !13872
  %or96 = or i32 %conv95, 1, !dbg !13872
  %conv97 = trunc i32 %or96 to i16, !dbg !13872
  store i16 %conv97, i16* %val, align 2, !dbg !13872
  br label %if.end98, !dbg !13873

if.end98:                                         ; preds = %if.then94, %sw.epilog88
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13874
  %41 = load i16, i16* %val, align 2, !dbg !13875
  call void @wr_reg16(%struct.slgt_info* %40, i32 134, i16 zeroext %41) #11, !dbg !13876
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13877
  call void @wr_reg8(%struct.slgt_info* %42, i32 137, i8 zeroext 105) #11, !dbg !13878
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13879
  call void @msc_set_vcr(%struct.slgt_info* %43) #11, !dbg !13880
  store i16 -16383, i16* %val, align 2, !dbg !13881
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13882
  %call99 = call i32 @rd_reg32(%struct.slgt_info* %44, i32 4) #11, !dbg !13884
  %and100 = and i32 %call99, 256, !dbg !13885
  %tobool101 = icmp ne i32 %and100, 0, !dbg !13885
  br i1 %tobool101, label %land.lhs.true, label %if.else, !dbg !13886

land.lhs.true:                                    ; preds = %if.end98
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13887
  %params102 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 36, !dbg !13888
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params102, i32 0, i32 9, !dbg !13889
  %46 = load i64, i64* %data_rate, align 8, !dbg !13889
  %tobool103 = icmp ne i64 %46, 0, !dbg !13887
  br i1 %tobool103, label %land.lhs.true104, label %if.else, !dbg !13890

land.lhs.true104:                                 ; preds = %land.lhs.true
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13891
  %base_clock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %47, i32 0, i32 42, !dbg !13892
  %48 = load i32, i32* %base_clock, align 4, !dbg !13892
  %conv105 = zext i32 %48 to i64, !dbg !13891
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13893
  %params106 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 36, !dbg !13894
  %data_rate107 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params106, i32 0, i32 9, !dbg !13895
  %50 = load i64, i64* %data_rate107, align 8, !dbg !13895
  %mul = mul i64 %50, 16, !dbg !13896
  %cmp108 = icmp ult i64 %conv105, %mul, !dbg !13897
  br i1 %cmp108, label %if.then116, label %lor.lhs.false, !dbg !13898

lor.lhs.false:                                    ; preds = %land.lhs.true104
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13899
  %base_clock110 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %51, i32 0, i32 42, !dbg !13900
  %52 = load i32, i32* %base_clock110, align 4, !dbg !13900
  %conv111 = zext i32 %52 to i64, !dbg !13899
  %53 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13901
  %params112 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 36, !dbg !13902
  %data_rate113 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params112, i32 0, i32 9, !dbg !13903
  %54 = load i64, i64* %data_rate113, align 8, !dbg !13903
  %mul114 = mul i64 %54, 16, !dbg !13904
  %rem = urem i64 %conv111, %mul114, !dbg !13905
  %tobool115 = icmp ne i64 %rem, 0, !dbg !13905
  br i1 %tobool115, label %if.then116, label %if.else, !dbg !13906

if.then116:                                       ; preds = %lor.lhs.false, %land.lhs.true104
  %55 = load i16, i16* %val, align 2, !dbg !13907
  %conv117 = zext i16 %55 to i32, !dbg !13907
  %or118 = or i32 %conv117, 8, !dbg !13907
  %conv119 = trunc i32 %or118 to i16, !dbg !13907
  store i16 %conv119, i16* %val, align 2, !dbg !13907
  %56 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13909
  %57 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13910
  %params120 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %57, i32 0, i32 36, !dbg !13911
  %data_rate121 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params120, i32 0, i32 9, !dbg !13912
  %58 = load i64, i64* %data_rate121, align 8, !dbg !13912
  %mul122 = mul i64 %58, 8, !dbg !13913
  %conv123 = trunc i64 %mul122 to i32, !dbg !13910
  call void @set_rate(%struct.slgt_info* %56, i32 %conv123) #11, !dbg !13914
  br label %if.end128, !dbg !13915

if.else:                                          ; preds = %lor.lhs.false, %land.lhs.true, %if.end98
  %59 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13916
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13918
  %params124 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %60, i32 0, i32 36, !dbg !13919
  %data_rate125 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params124, i32 0, i32 9, !dbg !13920
  %61 = load i64, i64* %data_rate125, align 8, !dbg !13920
  %mul126 = mul i64 %61, 16, !dbg !13921
  %conv127 = trunc i64 %mul126 to i32, !dbg !13918
  call void @set_rate(%struct.slgt_info* %59, i32 %conv127) #11, !dbg !13922
  br label %if.end128

if.end128:                                        ; preds = %if.else, %if.then116
  %62 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13923
  %63 = load i16, i16* %val, align 2, !dbg !13924
  call void @wr_reg16(%struct.slgt_info* %62, i32 140, i16 zeroext %63) #11, !dbg !13925
  %64 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13926
  %65 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13926
  %call129 = call zeroext i16 @rd_reg16(%struct.slgt_info* %65, i32 140) #11, !dbg !13926
  %conv130 = zext i16 %call129 to i32, !dbg !13926
  %or131 = or i32 %conv130, 768, !dbg !13926
  %conv132 = trunc i32 %or131 to i16, !dbg !13926
  call void @wr_reg16(%struct.slgt_info* %64, i32 140, i16 zeroext %conv132) #11, !dbg !13926
  %66 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13927
  %params133 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 36, !dbg !13929
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params133, i32 0, i32 1, !dbg !13930
  %67 = load i8, i8* %loopback, align 8, !dbg !13930
  %tobool134 = icmp ne i8 %67, 0, !dbg !13927
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !13931

if.then135:                                       ; preds = %if.end128
  %68 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13932
  call void @enable_loopback(%struct.slgt_info* %68) #11, !dbg !13933
  br label %if.end136, !dbg !13933

if.end136:                                        ; preds = %if.then135, %if.end128
  ret void, !dbg !13934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_rate(%struct.slgt_info* %info, i32 %rate) #1 !dbg !13935 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %rate.addr = alloca i32, align 4
  %div = alloca i32, align 4
  %osc = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13938, metadata !DIExpression()), !dbg !13939
  store i32 %rate, i32* %rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rate.addr, metadata !13940, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.declare(metadata i32* %div, metadata !13942, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.declare(metadata i32* %osc, metadata !13944, metadata !DIExpression()), !dbg !13945
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13946
  %base_clock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 42, !dbg !13947
  %1 = load i32, i32* %base_clock, align 4, !dbg !13947
  store i32 %1, i32* %osc, align 4, !dbg !13945
  %2 = load i32, i32* %rate.addr, align 4, !dbg !13948
  %tobool = icmp ne i32 %2, 0, !dbg !13948
  br i1 %tobool, label %if.then, label %if.end5, !dbg !13950

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %osc, align 4, !dbg !13951
  %4 = load i32, i32* %rate.addr, align 4, !dbg !13953
  %div1 = udiv i32 %3, %4, !dbg !13954
  store i32 %div1, i32* %div, align 4, !dbg !13955
  %5 = load i32, i32* %osc, align 4, !dbg !13956
  %6 = load i32, i32* %rate.addr, align 4, !dbg !13958
  %rem = urem i32 %5, %6, !dbg !13959
  %tobool2 = icmp ne i32 %rem, 0, !dbg !13959
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !13960

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %div, align 4, !dbg !13961
  %tobool3 = icmp ne i32 %7, 0, !dbg !13961
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !13962

if.then4:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %div, align 4, !dbg !13963
  %dec = add i32 %8, -1, !dbg !13963
  store i32 %dec, i32* %div, align 4, !dbg !13963
  br label %if.end, !dbg !13964

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13965
  %10 = load i32, i32* %div, align 4, !dbg !13966
  %conv = trunc i32 %10 to i16, !dbg !13967
  call void @wr_reg16(%struct.slgt_info* %9, i32 138, i16 zeroext %conv) #11, !dbg !13968
  br label %if.end5, !dbg !13969

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !13970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_set_idle(%struct.slgt_info* %info) #1 !dbg !13971 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i8, align 1
  %tcr = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !13972, metadata !DIExpression()), !dbg !13973
  call void @llvm.dbg.declare(metadata i8* %val, metadata !13974, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.declare(metadata i16* %tcr, metadata !13976, metadata !DIExpression()), !dbg !13977
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13978
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %0, i32 130) #11, !dbg !13979
  store i16 %call, i16* %tcr, align 2, !dbg !13980
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13981
  %idle_mode = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 37, !dbg !13983
  %2 = load i32, i32* %idle_mode, align 8, !dbg !13983
  %and = and i32 %2, 536870912, !dbg !13984
  %tobool = icmp ne i32 %and, 0, !dbg !13984
  br i1 %tobool, label %if.then, label %if.else, !dbg !13985

if.then:                                          ; preds = %entry
  %3 = load i16, i16* %tcr, align 2, !dbg !13986
  %conv = zext i16 %3 to i32, !dbg !13986
  %and1 = and i32 %conv, -97, !dbg !13988
  %or = or i32 %and1, 16, !dbg !13989
  %conv2 = trunc i32 %or to i16, !dbg !13990
  store i16 %conv2, i16* %tcr, align 2, !dbg !13991
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13992
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !13993
  %idle_mode3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 37, !dbg !13994
  %6 = load i32, i32* %idle_mode3, align 8, !dbg !13994
  %shr = lshr i32 %6, 8, !dbg !13995
  %and4 = and i32 %shr, 255, !dbg !13996
  %conv5 = trunc i32 %and4 to i8, !dbg !13997
  call void @wr_reg8(%struct.slgt_info* %4, i32 133, i8 zeroext %conv5) #11, !dbg !13998
  br label %if.end13, !dbg !13999

if.else:                                          ; preds = %entry
  %7 = load i16, i16* %tcr, align 2, !dbg !14000
  %conv6 = zext i16 %7 to i32, !dbg !14000
  %and7 = and i32 %conv6, 64, !dbg !14002
  %tobool8 = icmp ne i32 %and7, 0, !dbg !14002
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !14003

if.then9:                                         ; preds = %if.else
  %8 = load i16, i16* %tcr, align 2, !dbg !14004
  %conv10 = zext i16 %8 to i32, !dbg !14004
  %and11 = and i32 %conv10, -49, !dbg !14004
  %conv12 = trunc i32 %and11 to i16, !dbg !14004
  store i16 %conv12, i16* %tcr, align 2, !dbg !14004
  br label %if.end, !dbg !14006

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14007
  %10 = load i16, i16* %tcr, align 2, !dbg !14008
  call void @wr_reg16(%struct.slgt_info* %9, i32 130, i16 zeroext %10) #11, !dbg !14009
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14010
  %idle_mode14 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 37, !dbg !14012
  %12 = load i32, i32* %idle_mode14, align 8, !dbg !14012
  %and15 = and i32 %12, 805306368, !dbg !14013
  %tobool16 = icmp ne i32 %and15, 0, !dbg !14013
  br i1 %tobool16, label %if.then17, label %if.else21, !dbg !14014

if.then17:                                        ; preds = %if.end13
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14015
  %idle_mode18 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 37, !dbg !14017
  %14 = load i32, i32* %idle_mode18, align 8, !dbg !14017
  %and19 = and i32 %14, 255, !dbg !14018
  %conv20 = trunc i32 %and19 to i8, !dbg !14019
  store i8 %conv20, i8* %val, align 1, !dbg !14020
  br label %if.end25, !dbg !14021

if.else21:                                        ; preds = %if.end13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14022
  %idle_mode22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 37, !dbg !14024
  %16 = load i32, i32* %idle_mode22, align 8, !dbg !14024
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 4, label %sw.bb23
    i32 2, label %sw.bb24
    i32 5, label %sw.bb24
  ], !dbg !14025

sw.bb:                                            ; preds = %if.else21
  store i8 126, i8* %val, align 1, !dbg !14026
  br label %sw.epilog, !dbg !14028

sw.bb23:                                          ; preds = %if.else21, %if.else21
  store i8 -86, i8* %val, align 1, !dbg !14029
  br label %sw.epilog, !dbg !14030

sw.bb24:                                          ; preds = %if.else21, %if.else21
  store i8 0, i8* %val, align 1, !dbg !14031
  br label %sw.epilog, !dbg !14032

sw.default:                                       ; preds = %if.else21
  store i8 -1, i8* %val, align 1, !dbg !14033
  br label %sw.epilog, !dbg !14034

sw.epilog:                                        ; preds = %sw.default, %sw.bb24, %sw.bb23, %sw.bb
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then17
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14035
  %18 = load i8, i8* %val, align 1, !dbg !14036
  call void @wr_reg8(%struct.slgt_info* %17, i32 132, i8 zeroext %18) #11, !dbg !14037
  ret void, !dbg !14038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @msc_set_vcr(%struct.slgt_info* %info) #1 !dbg !14039 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %val = alloca i8, align 1
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14040, metadata !DIExpression()), !dbg !14041
  call void @llvm.dbg.declare(metadata i8* %val, metadata !14042, metadata !DIExpression()), !dbg !14043
  store i8 0, i8* %val, align 1, !dbg !14043
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14044
  %if_mode = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 41, !dbg !14045
  %1 = load i32, i32* %if_mode, align 8, !dbg !14045
  %and = and i32 %1, 15, !dbg !14046
  switch i32 %and, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb6
  ], !dbg !14047

sw.bb:                                            ; preds = %entry
  %2 = load i8, i8* %val, align 1, !dbg !14048
  %conv = zext i8 %2 to i32, !dbg !14048
  %or = or i32 %conv, 32, !dbg !14048
  %conv1 = trunc i32 %or to i8, !dbg !14048
  store i8 %conv1, i8* %val, align 1, !dbg !14048
  br label %sw.epilog, !dbg !14050

sw.bb2:                                           ; preds = %entry
  %3 = load i8, i8* %val, align 1, !dbg !14051
  %conv3 = zext i8 %3 to i32, !dbg !14051
  %or4 = or i32 %conv3, 224, !dbg !14051
  %conv5 = trunc i32 %or4 to i8, !dbg !14051
  store i8 %conv5, i8* %val, align 1, !dbg !14051
  br label %sw.epilog, !dbg !14052

sw.bb6:                                           ; preds = %entry
  %4 = load i8, i8* %val, align 1, !dbg !14053
  %conv7 = zext i8 %4 to i32, !dbg !14053
  %or8 = or i32 %conv7, 64, !dbg !14053
  %conv9 = trunc i32 %or8 to i8, !dbg !14053
  store i8 %conv9, i8* %val, align 1, !dbg !14053
  br label %sw.epilog, !dbg !14054

sw.epilog:                                        ; preds = %entry, %sw.bb6, %sw.bb2, %sw.bb
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14055
  %if_mode10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 41, !dbg !14057
  %6 = load i32, i32* %if_mode10, align 8, !dbg !14057
  %and11 = and i32 %6, 128, !dbg !14058
  %tobool = icmp ne i32 %and11, 0, !dbg !14058
  br i1 %tobool, label %if.then, label %if.end, !dbg !14059

if.then:                                          ; preds = %sw.epilog
  %7 = load i8, i8* %val, align 1, !dbg !14060
  %conv12 = zext i8 %7 to i32, !dbg !14060
  %or13 = or i32 %conv12, 16, !dbg !14060
  %conv14 = trunc i32 %or13 to i8, !dbg !14060
  store i8 %conv14, i8* %val, align 1, !dbg !14060
  br label %if.end, !dbg !14061

if.end:                                           ; preds = %if.then, %sw.epilog
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14062
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 49, !dbg !14064
  %9 = load i8, i8* %signals, align 4, !dbg !14064
  %conv15 = zext i8 %9 to i32, !dbg !14062
  %and16 = and i32 %conv15, 128, !dbg !14065
  %tobool17 = icmp ne i32 %and16, 0, !dbg !14065
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !14066

if.then18:                                        ; preds = %if.end
  %10 = load i8, i8* %val, align 1, !dbg !14067
  %conv19 = zext i8 %10 to i32, !dbg !14067
  %or20 = or i32 %conv19, 8, !dbg !14067
  %conv21 = trunc i32 %or20 to i8, !dbg !14067
  store i8 %conv21, i8* %val, align 1, !dbg !14067
  br label %if.end22, !dbg !14068

if.end22:                                         ; preds = %if.then18, %if.end
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14069
  %signals23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !14071
  %12 = load i8, i8* %signals23, align 4, !dbg !14071
  %conv24 = zext i8 %12 to i32, !dbg !14069
  %and25 = and i32 %conv24, 32, !dbg !14072
  %tobool26 = icmp ne i32 %and25, 0, !dbg !14072
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !14073

if.then27:                                        ; preds = %if.end22
  %13 = load i8, i8* %val, align 1, !dbg !14074
  %conv28 = zext i8 %13 to i32, !dbg !14074
  %or29 = or i32 %conv28, 4, !dbg !14074
  %conv30 = trunc i32 %or29 to i8, !dbg !14074
  store i8 %conv30, i8* %val, align 1, !dbg !14074
  br label %if.end31, !dbg !14075

if.end31:                                         ; preds = %if.then27, %if.end22
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14076
  %if_mode32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 41, !dbg !14078
  %15 = load i32, i32* %if_mode32, align 8, !dbg !14078
  %and33 = and i32 %15, 32, !dbg !14079
  %tobool34 = icmp ne i32 %and33, 0, !dbg !14079
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !14080

if.then35:                                        ; preds = %if.end31
  %16 = load i8, i8* %val, align 1, !dbg !14081
  %conv36 = zext i8 %16 to i32, !dbg !14081
  %or37 = or i32 %conv36, 2, !dbg !14081
  %conv38 = trunc i32 %or37 to i8, !dbg !14081
  store i8 %conv38, i8* %val, align 1, !dbg !14081
  br label %if.end39, !dbg !14082

if.end39:                                         ; preds = %if.then35, %if.end31
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14083
  %if_mode40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 41, !dbg !14085
  %18 = load i32, i32* %if_mode40, align 8, !dbg !14085
  %and41 = and i32 %18, 64, !dbg !14086
  %tobool42 = icmp ne i32 %and41, 0, !dbg !14086
  br i1 %tobool42, label %if.then43, label %if.end47, !dbg !14087

if.then43:                                        ; preds = %if.end39
  %19 = load i8, i8* %val, align 1, !dbg !14088
  %conv44 = zext i8 %19 to i32, !dbg !14088
  %or45 = or i32 %conv44, 1, !dbg !14088
  %conv46 = trunc i32 %or45 to i8, !dbg !14088
  store i8 %conv46, i8* %val, align 1, !dbg !14088
  br label %if.end47, !dbg !14089

if.end47:                                         ; preds = %if.then43, %if.end39
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14090
  %21 = load i8, i8* %val, align 1, !dbg !14091
  call void @wr_reg8(%struct.slgt_info* %20, i32 136, i8 zeroext %21) #11, !dbg !14092
  ret void, !dbg !14093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_loopback(%struct.slgt_info* %info) #1 !dbg !14094 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14095, metadata !DIExpression()), !dbg !14096
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14097
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14098
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %1, i32 140) #11, !dbg !14099
  %conv = zext i16 %call to i32, !dbg !14099
  %or = or i32 %conv, 4, !dbg !14100
  %conv1 = trunc i32 %or to i16, !dbg !14101
  call void @wr_reg16(%struct.slgt_info* %0, i32 140, i16 zeroext %conv1) #11, !dbg !14102
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14103
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 36, !dbg !14105
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !14106
  %3 = load i64, i64* %mode, align 8, !dbg !14106
  %cmp = icmp ne i64 %3, 1, !dbg !14107
  br i1 %cmp, label %if.then, label %if.end8, !dbg !14108

if.then:                                          ; preds = %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14109
  call void @wr_reg8(%struct.slgt_info* %4, i32 137, i8 zeroext 73) #11, !dbg !14111
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14112
  %params3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 36, !dbg !14114
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params3, i32 0, i32 4, !dbg !14115
  %6 = load i64, i64* %clock_speed, align 8, !dbg !14115
  %tobool = icmp ne i64 %6, 0, !dbg !14112
  br i1 %tobool, label %if.then4, label %if.else, !dbg !14116

if.then4:                                         ; preds = %if.then
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14117
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14118
  %params5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 36, !dbg !14119
  %clock_speed6 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params5, i32 0, i32 4, !dbg !14120
  %9 = load i64, i64* %clock_speed6, align 8, !dbg !14120
  %conv7 = trunc i64 %9 to i32, !dbg !14118
  call void @set_rate(%struct.slgt_info* %7, i32 %conv7) #11, !dbg !14121
  br label %if.end, !dbg !14121

if.else:                                          ; preds = %if.then
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14122
  call void @set_rate(%struct.slgt_info* %10, i32 3686400) #11, !dbg !14123
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !14124

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !14125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #1 !dbg !14126 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !14127, metadata !DIExpression()), !dbg !14129
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14133
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #11, !dbg !14134
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !14135
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !14136
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !14137
  ret void, !dbg !14138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @shutdown(%struct.slgt_info* %info) #1 !dbg !14139 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !10114, metadata !DIExpression()), !dbg !14140
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !14142
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !14143
  %info.addr = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14150, metadata !DIExpression()), !dbg !14151
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14152, metadata !DIExpression()), !dbg !14153
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14154
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !14156
  %call = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !14157
  br i1 %call, label %if.end, label %if.then, !dbg !14158

if.then:                                          ; preds = %entry
  br label %return, !dbg !14159

if.end:                                           ; preds = %entry
  %1 = load i32, i32* @debug_level, align 4, !dbg !14160
  %cmp = icmp sge i32 %1, 3, !dbg !14160
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !14162

if.then1:                                         ; preds = %if.end
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14160
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 4, !dbg !14160
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !14160
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay) #12, !dbg !14160
  br label %if.end3, !dbg !14160

if.end3:                                          ; preds = %if.then1, %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14163
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 16, !dbg !14163
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !14163
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14164
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 17, !dbg !14164
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !14164
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14165
  %tx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 18, !dbg !14165
  %call4 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !14165
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14166
  %rx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 19, !dbg !14166
  %call5 = call i32 @del_timer(%struct.timer_list* %rx_timer) #11, !dbg !14166
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14167
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 51, !dbg !14168
  %8 = load i8*, i8** %tx_buf, align 8, !dbg !14168
  call void @kfree(i8* %8) #11, !dbg !14169
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14170
  %tx_buf6 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 51, !dbg !14171
  store i8* null, i8** %tx_buf6, align 8, !dbg !14172
  br label %do.body, !dbg !14173

do.body:                                          ; preds = %if.end3
  br label %do.body7, !dbg !14174

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14175, metadata !DIExpression()), !dbg !14177
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14178, metadata !DIExpression()), !dbg !14177
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !14177
  %conv = zext i1 %cmp8 to i32, !dbg !14177
  store i32 1, i32* %tmp, align 4, !dbg !14177
  %10 = load i32, i32* %tmp, align 4, !dbg !14177
  br label %do.body9, !dbg !14179

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !14180

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !14181

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !14183, metadata !DIExpression()), !dbg !14186
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !14187, metadata !DIExpression()), !dbg !14186
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !14186
  %conv15 = zext i1 %cmp14 to i32, !dbg !14186
  store i32 1, i32* %tmp16, align 4, !dbg !14186
  %11 = load i32, i32* %tmp16, align 4, !dbg !14186
  %call17 = call i64 @arch_local_irq_save() #11, !dbg !14188
  store i64 %call17, i64* %flags, align 8, !dbg !14188
  br label %do.end, !dbg !14188

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !14181

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !14180

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14189, !srcloc !14190
  br label %do.body20, !dbg !14189

do.body20:                                        ; preds = %do.body19
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14191
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 22, !dbg !14191
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14192
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !14193
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !14193
  br label %do.end22, !dbg !14191

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !14189

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !14180

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !14179

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !14174

do.end26:                                         ; preds = %do.end25
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14194
  call void @tx_stop(%struct.slgt_info* %15) #11, !dbg !14195
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14196
  call void @rx_stop(%struct.slgt_info* %16) #11, !dbg !14197
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14198
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14198
  %call27 = call zeroext i16 @rd_reg16(%struct.slgt_info* %18, i32 140) #11, !dbg !14198
  %conv28 = zext i16 %call27 to i32, !dbg !14198
  %and = and i32 %conv28, -16370, !dbg !14198
  %conv29 = trunc i32 %and to i16, !dbg !14198
  call void @wr_reg16(%struct.slgt_info* %17, i32 140, i16 zeroext %conv29) #11, !dbg !14198
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14199
  %port30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 1, !dbg !14201
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 1, !dbg !14202
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !14202
  %tobool = icmp ne %struct.tty_struct* %20, null, !dbg !14199
  br i1 %tobool, label %lor.lhs.false, label %if.then35, !dbg !14203

lor.lhs.false:                                    ; preds = %do.end26
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14204
  %port31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 1, !dbg !14205
  %tty32 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port31, i32 0, i32 1, !dbg !14206
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty32, align 8, !dbg !14206
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %22, i32 0, i32 15, !dbg !14207
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !14208
  %23 = load i32, i32* %c_cflag, align 8, !dbg !14208
  %and33 = and i32 %23, 1024, !dbg !14209
  %tobool34 = icmp ne i32 %and33, 0, !dbg !14209
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !14210

if.then35:                                        ; preds = %lor.lhs.false, %do.end26
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14211
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 49, !dbg !14213
  %25 = load i8, i8* %signals, align 4, !dbg !14214
  %conv36 = zext i8 %25 to i32, !dbg !14214
  %and37 = and i32 %conv36, -161, !dbg !14214
  %conv38 = trunc i32 %and37 to i8, !dbg !14214
  store i8 %conv38, i8* %signals, align 4, !dbg !14214
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14215
  call void @set_signals(%struct.slgt_info* %26) #11, !dbg !14216
  br label %if.end39, !dbg !14217

if.end39:                                         ; preds = %if.then35, %lor.lhs.false
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14218
  %gpio_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 21, !dbg !14219
  call void @flush_cond_wait(%struct.cond_wait** %gpio_wait_q) #11, !dbg !14220
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14221
  %lock40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 22, !dbg !14222
  %29 = load i64, i64* %flags, align 8, !dbg !14223
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !14224
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !14224
  store i32 1, i32* %tmp.i, align 4, !dbg !14224
  %30 = load i32, i32* %tmp.i, align 4, !dbg !14224
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !14225
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !14225
  store i32 1, i32* %tmp8.i, align 4, !dbg !14225
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !14225
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !14226
  call void @arch_local_irq_restore(i64 %32) #14, !dbg !14226
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !14227, !srcloc !10199
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !14228
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !14228
  %rlock.i51 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !14228
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14229
  %port41 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 1, !dbg !14231
  %tty42 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port41, i32 0, i32 1, !dbg !14232
  %36 = load %struct.tty_struct*, %struct.tty_struct** %tty42, align 8, !dbg !14232
  %tobool43 = icmp ne %struct.tty_struct* %36, null, !dbg !14229
  br i1 %tobool43, label %if.then44, label %if.end48, !dbg !14233

if.then44:                                        ; preds = %if.end39
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14234
  %port45 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 1, !dbg !14235
  %tty46 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port45, i32 0, i32 1, !dbg !14236
  %38 = load %struct.tty_struct*, %struct.tty_struct** %tty46, align 8, !dbg !14236
  %flags47 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %38, i32 0, i32 21, !dbg !14237
  call void @set_bit(i64 1, i64* %flags47) #11, !dbg !14238
  br label %if.end48, !dbg !14238

if.end48:                                         ; preds = %if.then44, %if.end39
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14239
  %port49 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 1, !dbg !14240
  call void @tty_port_set_initialized(%struct.tty_port* %port49, i1 zeroext false) #11, !dbg !14241
  br label %return, !dbg !14242

return:                                           ; preds = %if.end48, %if.then
  ret void, !dbg !14242
}

; Function Attrs: noredzone
declare dso_local void @hdlc_close(%struct.net_device*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #1 !dbg !14243 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  ret void, !dbg !14248
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_cond_wait(%struct.cond_wait** %head) #1 !dbg !14249 {
entry:
  %head.addr = alloca %struct.cond_wait**, align 8
  store %struct.cond_wait** %head, %struct.cond_wait*** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait*** %head.addr, metadata !14253, metadata !DIExpression()), !dbg !14254
  br label %while.cond, !dbg !14255

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !14256
  %1 = load %struct.cond_wait*, %struct.cond_wait** %0, align 8, !dbg !14257
  %cmp = icmp ne %struct.cond_wait* %1, null, !dbg !14258
  br i1 %cmp, label %while.body, label %while.end, !dbg !14255

while.body:                                       ; preds = %while.cond
  %2 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !14259
  %3 = load %struct.cond_wait*, %struct.cond_wait** %2, align 8, !dbg !14259
  %q = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %3, i32 0, i32 1, !dbg !14259
  call void @__wake_up(%struct.wait_queue_head* %q, i32 1, i32 1, i8* null) #11, !dbg !14259
  %4 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !14261
  %5 = load %struct.cond_wait*, %struct.cond_wait** %4, align 8, !dbg !14262
  %next = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %5, i32 0, i32 0, !dbg !14263
  %6 = load %struct.cond_wait*, %struct.cond_wait** %next, align 8, !dbg !14263
  %7 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !14264
  store %struct.cond_wait* %6, %struct.cond_wait** %7, align 8, !dbg !14265
  br label %while.cond, !dbg !14255, !llvm.loop !14266

while.end:                                        ; preds = %while.cond
  ret void, !dbg !14268
}

; Function Attrs: noredzone
declare dso_local i32 @hdlc_ioctl(%struct.net_device*, %struct.ifreq*, i32) #4

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #4

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #1 !dbg !14269 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14272, metadata !DIExpression()), !dbg !14273
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14274, metadata !DIExpression()), !dbg !14275
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !14276, metadata !DIExpression()), !dbg !14278
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !14278
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !14279
  %tobool = icmp ne i32 %0, 0, !dbg !14279
  %lnot = xor i1 %tobool, true, !dbg !14279
  %lnot1 = xor i1 %lnot, true, !dbg !14279
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14279
  %conv = sext i32 %lnot.ext to i64, !dbg !14279
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14279
  br i1 %tobool2, label %if.then, label %if.end, !dbg !14278

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !14279

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !14281

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !14283

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !14281
  %2 = load i64, i64* %count.addr, align 8, !dbg !14281
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.50, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !14281
  br label %do.body4, !dbg !14281

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !14285

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !14287

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !14285

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 134, i32 2313, i64 12) #10, !dbg !14289, !srcloc !14291
  br label %do.end8, !dbg !14289

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #10, !dbg !14292, !srcloc !14294
  br label %do.body9, !dbg !14285

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !14295

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !14285

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !14281

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !14297

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !14281

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !14281

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !14278
  %tobool15 = icmp ne i32 %3, 0, !dbg !14278
  %lnot16 = xor i1 %tobool15, true, !dbg !14278
  %lnot18 = xor i1 %lnot16, true, !dbg !14278
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !14278
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !14278
  store i64 %conv20, i64* %tmp, align 8, !dbg !14279
  %4 = load i64, i64* %tmp, align 8, !dbg !14278
  ret void, !dbg !14299
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #4

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 !dbg !14300 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14303, metadata !DIExpression()), !dbg !14304
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14305, metadata !DIExpression()), !dbg !14306
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !14307, metadata !DIExpression()), !dbg !14308
  ret void, !dbg !14309
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tx_load(%struct.slgt_info* %info, i8* %buf, i32 %size) #1 !dbg !14310 {
entry:
  %retval = alloca i1, align 1
  %info.addr = alloca %struct.slgt_info*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %count = alloca i16, align 2
  %i = alloca i32, align 4
  %d = alloca %struct.slgt_desc*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14313, metadata !DIExpression()), !dbg !14314
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14315, metadata !DIExpression()), !dbg !14316
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14317, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.declare(metadata i16* %count, metadata !14319, metadata !DIExpression()), !dbg !14320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14321, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.declare(metadata %struct.slgt_desc** %d, metadata !14323, metadata !DIExpression()), !dbg !14324
  %0 = load i32, i32* %size.addr, align 4, !dbg !14325
  %add = add i32 %0, 256, !dbg !14325
  %sub = sub i32 %add, 1, !dbg !14325
  %div = udiv i32 %sub, 256, !dbg !14325
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14327
  %call = call i32 @free_tbuf_count(%struct.slgt_info* %1) #11, !dbg !14328
  %cmp = icmp ugt i32 %div, %call, !dbg !14329
  br i1 %cmp, label %if.then, label %if.end, !dbg !14330

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14331
  br label %return, !dbg !14331

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @debug_level, align 4, !dbg !14332
  %cmp1 = icmp sge i32 %2, 1, !dbg !14332
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !14334

if.then2:                                         ; preds = %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14332
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !14332
  %5 = load i32, i32* %size.addr, align 4, !dbg !14332
  call void @trace_block(%struct.slgt_info* %3, i8* %4, i32 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !14332
  br label %if.end3, !dbg !14332

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14335
  %tbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 70, !dbg !14336
  %7 = load i32, i32* %tbuf_current, align 8, !dbg !14336
  store i32 %7, i32* %i, align 4, !dbg !14337
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14338
  %tbuf_start = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 71, !dbg !14339
  store i32 %7, i32* %tbuf_start, align 4, !dbg !14340
  br label %while.cond, !dbg !14341

while.cond:                                       ; preds = %if.end35, %if.end3
  %9 = load i32, i32* %size.addr, align 4, !dbg !14342
  %tobool = icmp ne i32 %9, 0, !dbg !14341
  br i1 %tobool, label %while.body, label %while.end, !dbg !14341

while.body:                                       ; preds = %while.cond
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14343
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 69, !dbg !14345
  %11 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !14345
  %12 = load i32, i32* %i, align 4, !dbg !14346
  %idxprom = zext i32 %12 to i64, !dbg !14343
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %11, i64 %idxprom, !dbg !14343
  store %struct.slgt_desc* %arrayidx, %struct.slgt_desc** %d, align 8, !dbg !14347
  %13 = load i32, i32* %size.addr, align 4, !dbg !14348
  %cmp4 = icmp ugt i32 %13, 256, !dbg !14349
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !14350

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !14350

cond.false:                                       ; preds = %while.body
  %14 = load i32, i32* %size.addr, align 4, !dbg !14351
  br label %cond.end, !dbg !14350

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 256, %cond.true ], [ %14, %cond.false ], !dbg !14350
  %conv = trunc i32 %cond to i16, !dbg !14352
  store i16 %conv, i16* %count, align 2, !dbg !14353
  %15 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14354
  %buf5 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %15, i32 0, i32 4, !dbg !14355
  %16 = load i8*, i8** %buf5, align 8, !dbg !14355
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !14356
  %18 = load i16, i16* %count, align 2, !dbg !14357
  %conv6 = zext i16 %18 to i64, !dbg !14357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 %conv6, i1 false), !dbg !14358
  %19 = load i16, i16* %count, align 2, !dbg !14359
  %conv7 = zext i16 %19 to i32, !dbg !14359
  %20 = load i32, i32* %size.addr, align 4, !dbg !14360
  %sub8 = sub i32 %20, %conv7, !dbg !14360
  store i32 %sub8, i32* %size.addr, align 4, !dbg !14360
  %21 = load i16, i16* %count, align 2, !dbg !14361
  %conv9 = zext i16 %21 to i32, !dbg !14361
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !14362
  %idx.ext = sext i32 %conv9 to i64, !dbg !14362
  %add.ptr = getelementptr i8, i8* %22, i64 %idx.ext, !dbg !14362
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !14362
  %23 = load i32, i32* %size.addr, align 4, !dbg !14363
  %tobool10 = icmp ne i32 %23, 0, !dbg !14363
  br i1 %tobool10, label %lor.lhs.false, label %land.lhs.true, !dbg !14365

land.lhs.true:                                    ; preds = %cond.end
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14366
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 36, !dbg !14367
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !14368
  %25 = load i64, i64* %mode, align 8, !dbg !14368
  %cmp11 = icmp eq i64 %25, 2, !dbg !14369
  br i1 %cmp11, label %if.then17, label %lor.lhs.false, !dbg !14370

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.end
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14371
  %params13 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 36, !dbg !14372
  %mode14 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params13, i32 0, i32 0, !dbg !14373
  %27 = load i64, i64* %mode14, align 8, !dbg !14373
  %cmp15 = icmp eq i64 %27, 6, !dbg !14374
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !14375

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %28 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14376
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %28, i32 0, i32 1, !dbg !14376
  %29 = load i16, i16* %status, align 2, !dbg !14376
  %conv18 = zext i16 %29 to i32, !dbg !14376
  %or = or i32 %conv18, 1, !dbg !14376
  %conv19 = trunc i32 %or to i16, !dbg !14376
  %30 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14376
  %status20 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %30, i32 0, i32 1, !dbg !14376
  store i16 %conv19, i16* %status20, align 2, !dbg !14376
  br label %if.end25, !dbg !14376

if.else:                                          ; preds = %lor.lhs.false
  %31 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14377
  %status21 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %31, i32 0, i32 1, !dbg !14377
  %32 = load i16, i16* %status21, align 2, !dbg !14377
  %conv22 = zext i16 %32 to i32, !dbg !14377
  %and = and i32 %conv22, -2, !dbg !14377
  %conv23 = trunc i32 %and to i16, !dbg !14377
  %33 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14377
  %status24 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %33, i32 0, i32 1, !dbg !14377
  store i16 %conv23, i16* %status24, align 2, !dbg !14377
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %34 = load i32, i32* %i, align 4, !dbg !14378
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14380
  %tbuf_start26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 71, !dbg !14381
  %36 = load i32, i32* %tbuf_start26, align 4, !dbg !14381
  %cmp27 = icmp ne i32 %34, %36, !dbg !14382
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !14383

if.then29:                                        ; preds = %if.end25
  %37 = load i16, i16* %count, align 2, !dbg !14384
  %38 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14384
  %count30 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %38, i32 0, i32 0, !dbg !14384
  store i16 %37, i16* %count30, align 8, !dbg !14384
  br label %if.end31, !dbg !14384

if.end31:                                         ; preds = %if.then29, %if.end25
  %39 = load i16, i16* %count, align 2, !dbg !14385
  %40 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14386
  %buf_count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %40, i32 0, i32 7, !dbg !14387
  store i16 %39, i16* %buf_count, align 8, !dbg !14388
  %41 = load i32, i32* %i, align 4, !dbg !14389
  %inc = add i32 %41, 1, !dbg !14389
  store i32 %inc, i32* %i, align 4, !dbg !14389
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14391
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 68, !dbg !14392
  %43 = load i32, i32* %tbuf_count, align 8, !dbg !14392
  %cmp32 = icmp eq i32 %inc, %43, !dbg !14393
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !14394

if.then34:                                        ; preds = %if.end31
  store i32 0, i32* %i, align 4, !dbg !14395
  br label %if.end35, !dbg !14396

if.end35:                                         ; preds = %if.then34, %if.end31
  br label %while.cond, !dbg !14341, !llvm.loop !14397

while.end:                                        ; preds = %while.cond
  %44 = load i32, i32* %i, align 4, !dbg !14399
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14400
  %tbuf_current36 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 70, !dbg !14401
  store i32 %44, i32* %tbuf_current36, align 8, !dbg !14402
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14403
  %tbufs37 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 69, !dbg !14404
  %47 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs37, align 8, !dbg !14404
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14405
  %tbuf_start38 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 71, !dbg !14406
  %49 = load i32, i32* %tbuf_start38, align 4, !dbg !14406
  %idxprom39 = zext i32 %49 to i64, !dbg !14403
  %arrayidx40 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %47, i64 %idxprom39, !dbg !14403
  store %struct.slgt_desc* %arrayidx40, %struct.slgt_desc** %d, align 8, !dbg !14407
  %50 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14408
  %buf_count41 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %50, i32 0, i32 7, !dbg !14408
  %51 = load i16, i16* %buf_count41, align 8, !dbg !14408
  %52 = load %struct.slgt_desc*, %struct.slgt_desc** %d, align 8, !dbg !14408
  %count42 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %52, i32 0, i32 0, !dbg !14408
  store i16 %51, i16* %count42, align 8, !dbg !14408
  %53 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14409
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 48, !dbg !14411
  %54 = load i8, i8* %tx_active, align 1, !dbg !14411
  %tobool43 = trunc i8 %54 to i1, !dbg !14411
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !14412

if.then44:                                        ; preds = %while.end
  %55 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14413
  call void @tx_start(%struct.slgt_info* %55) #11, !dbg !14414
  br label %if.end45, !dbg !14414

if.end45:                                         ; preds = %if.then44, %while.end
  %56 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14415
  call void @update_tx_timer(%struct.slgt_info* %56) #11, !dbg !14416
  store i1 true, i1* %retval, align 1, !dbg !14417
  br label %return, !dbg !14417

return:                                           ; preds = %if.end45, %if.then
  %57 = load i1, i1* %retval, align 1, !dbg !14418
  ret i1 %57, !dbg !14418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #1 !dbg !14419 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14420, metadata !DIExpression()), !dbg !14421
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14422
  call void @kfree_skb(%struct.sk_buff* %0) #11, !dbg !14423
  ret void, !dbg !14424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @free_tbuf_count(%struct.slgt_info* %info) #1 !dbg !14425 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14428, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14430, metadata !DIExpression()), !dbg !14431
  store i32 0, i32* %count, align 4, !dbg !14431
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14432, metadata !DIExpression()), !dbg !14433
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14434
  %tbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 70, !dbg !14435
  %1 = load i32, i32* %tbuf_current, align 8, !dbg !14435
  store i32 %1, i32* %i, align 4, !dbg !14433
  br label %do.body, !dbg !14436

do.body:                                          ; preds = %do.cond, %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14437
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 69, !dbg !14437
  %3 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !14437
  %4 = load i32, i32* %i, align 4, !dbg !14437
  %idxprom = zext i32 %4 to i64, !dbg !14437
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %3, i64 %idxprom, !dbg !14437
  %count1 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 0, !dbg !14437
  %5 = load i16, i16* %count1, align 8, !dbg !14437
  %tobool = icmp ne i16 %5, 0, !dbg !14437
  br i1 %tobool, label %if.then, label %if.end, !dbg !14440

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !14441

if.end:                                           ; preds = %do.body
  %6 = load i32, i32* %count, align 4, !dbg !14442
  %inc = add i32 %6, 1, !dbg !14442
  store i32 %inc, i32* %count, align 4, !dbg !14442
  %7 = load i32, i32* %i, align 4, !dbg !14443
  %inc2 = add i32 %7, 1, !dbg !14443
  store i32 %inc2, i32* %i, align 4, !dbg !14443
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14445
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 68, !dbg !14446
  %9 = load i32, i32* %tbuf_count, align 8, !dbg !14446
  %cmp = icmp eq i32 %inc2, %9, !dbg !14447
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !14448

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !14449
  br label %if.end4, !dbg !14450

if.end4:                                          ; preds = %if.then3, %if.end
  br label %do.cond, !dbg !14451

do.cond:                                          ; preds = %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !14452
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14453
  %tbuf_current5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 70, !dbg !14454
  %12 = load i32, i32* %tbuf_current5, align 8, !dbg !14454
  %cmp6 = icmp ne i32 %10, %12, !dbg !14455
  br i1 %cmp6, label %do.body, label %do.end, !dbg !14451, !llvm.loop !14456

do.end:                                           ; preds = %do.cond, %if.then
  %13 = load i32, i32* %count, align 4, !dbg !14458
  %tobool7 = icmp ne i32 %13, 0, !dbg !14458
  br i1 %tobool7, label %land.lhs.true, label %if.end10, !dbg !14460

land.lhs.true:                                    ; preds = %do.end
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14461
  %call = call i32 @rd_reg32(%struct.slgt_info* %14, i32 148) #11, !dbg !14462
  %and = and i32 %call, 1, !dbg !14463
  %tobool8 = icmp ne i32 %and, 0, !dbg !14463
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14464

if.then9:                                         ; preds = %land.lhs.true
  %15 = load i32, i32* %count, align 4, !dbg !14465
  %dec = add i32 %15, -1, !dbg !14465
  store i32 %dec, i32* %count, align 4, !dbg !14465
  br label %if.end10, !dbg !14465

if.end10:                                         ; preds = %if.then9, %land.lhs.true, %do.end
  %16 = load i32, i32* %count, align 4, !dbg !14466
  ret i32 %16, !dbg !14467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_start(%struct.slgt_info* %info) #1 !dbg !14468 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14469, metadata !DIExpression()), !dbg !14470
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14471
  %tx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 47, !dbg !14473
  %1 = load i8, i8* %tx_enabled, align 2, !dbg !14473
  %tobool = trunc i8 %1 to i1, !dbg !14473
  br i1 %tobool, label %if.end, label %if.then, !dbg !14474

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14475
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14477
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %3, i32 130) #11, !dbg !14478
  %conv = zext i16 %call to i32, !dbg !14478
  %or = or i32 %conv, 2, !dbg !14479
  %and = and i32 %or, -5, !dbg !14480
  %conv1 = trunc i32 %and to i16, !dbg !14481
  call void @wr_reg16(%struct.slgt_info* %2, i32 130, i16 zeroext %conv1) #11, !dbg !14482
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14483
  %tx_enabled2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 47, !dbg !14484
  store i8 1, i8* %tx_enabled2, align 2, !dbg !14485
  br label %if.end, !dbg !14486

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14487
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 69, !dbg !14487
  %6 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !14487
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14487
  %tbuf_start = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 71, !dbg !14487
  %8 = load i32, i32* %tbuf_start, align 4, !dbg !14487
  %idxprom = zext i32 %8 to i64, !dbg !14487
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %6, i64 %idxprom, !dbg !14487
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 0, !dbg !14487
  %9 = load i16, i16* %count, align 8, !dbg !14487
  %tobool3 = icmp ne i16 %9, 0, !dbg !14487
  br i1 %tobool3, label %if.then4, label %if.end44, !dbg !14489

if.then4:                                         ; preds = %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14490
  %drop_rts_on_tx_done = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 54, !dbg !14492
  store i8 0, i8* %drop_rts_on_tx_done, align 8, !dbg !14493
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14494
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 36, !dbg !14496
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !14497
  %12 = load i64, i64* %mode, align 8, !dbg !14497
  %cmp = icmp ne i64 %12, 1, !dbg !14498
  br i1 %cmp, label %if.then6, label %if.else, !dbg !14499

if.then6:                                         ; preds = %if.then4
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14500
  %params7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 36, !dbg !14503
  %flags = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params7, i32 0, i32 2, !dbg !14504
  %14 = load i16, i16* %flags, align 2, !dbg !14504
  %conv8 = zext i16 %14 to i32, !dbg !14500
  %and9 = and i32 %conv8, 128, !dbg !14505
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14505
  br i1 %tobool10, label %if.then11, label %if.end22, !dbg !14506

if.then11:                                        ; preds = %if.then6
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14507
  call void @get_signals(%struct.slgt_info* %15) #11, !dbg !14509
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14510
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 49, !dbg !14512
  %17 = load i8, i8* %signals, align 4, !dbg !14512
  %conv12 = zext i8 %17 to i32, !dbg !14510
  %and13 = and i32 %conv12, 32, !dbg !14513
  %tobool14 = icmp ne i32 %and13, 0, !dbg !14513
  br i1 %tobool14, label %if.end21, label %if.then15, !dbg !14514

if.then15:                                        ; preds = %if.then11
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14515
  %signals16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 49, !dbg !14517
  %19 = load i8, i8* %signals16, align 4, !dbg !14518
  %conv17 = zext i8 %19 to i32, !dbg !14518
  %or18 = or i32 %conv17, 32, !dbg !14518
  %conv19 = trunc i32 %or18 to i8, !dbg !14518
  store i8 %conv19, i8* %signals16, align 4, !dbg !14518
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14519
  call void @set_signals(%struct.slgt_info* %20) #11, !dbg !14520
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14521
  %drop_rts_on_tx_done20 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 54, !dbg !14522
  store i8 1, i8* %drop_rts_on_tx_done20, align 8, !dbg !14523
  br label %if.end21, !dbg !14524

if.end21:                                         ; preds = %if.then15, %if.then11
  br label %if.end22, !dbg !14525

if.end22:                                         ; preds = %if.end21, %if.then6
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14526
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14526
  %call23 = call zeroext i16 @rd_reg16(%struct.slgt_info* %23, i32 140) #11, !dbg !14526
  %conv24 = zext i16 %call23 to i32, !dbg !14526
  %and25 = and i32 %conv24, -8193, !dbg !14526
  %conv26 = trunc i32 %and25 to i16, !dbg !14526
  call void @wr_reg16(%struct.slgt_info* %22, i32 140, i16 zeroext %conv26) #11, !dbg !14526
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14527
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14527
  %call27 = call zeroext i16 @rd_reg16(%struct.slgt_info* %25, i32 140) #11, !dbg !14527
  %conv28 = zext i16 %call27 to i32, !dbg !14527
  %or29 = or i32 %conv28, 6144, !dbg !14527
  %conv30 = trunc i32 %or29 to i16, !dbg !14527
  call void @wr_reg16(%struct.slgt_info* %24, i32 140, i16 zeroext %conv30) #11, !dbg !14527
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14528
  call void @wr_reg16(%struct.slgt_info* %26, i32 142, i16 zeroext 6144) #11, !dbg !14529
  br label %if.end39, !dbg !14530

if.else:                                          ; preds = %if.then4
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14531
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14531
  %call31 = call zeroext i16 @rd_reg16(%struct.slgt_info* %28, i32 140) #11, !dbg !14531
  %conv32 = zext i16 %call31 to i32, !dbg !14531
  %and33 = and i32 %conv32, -8193, !dbg !14531
  %conv34 = trunc i32 %and33 to i16, !dbg !14531
  call void @wr_reg16(%struct.slgt_info* %27, i32 140, i16 zeroext %conv34) #11, !dbg !14531
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14533
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14533
  %call35 = call zeroext i16 @rd_reg16(%struct.slgt_info* %30, i32 140) #11, !dbg !14533
  %conv36 = zext i16 %call35 to i32, !dbg !14533
  %or37 = or i32 %conv36, 4096, !dbg !14533
  %conv38 = trunc i32 %or37 to i16, !dbg !14533
  call void @wr_reg16(%struct.slgt_info* %29, i32 140, i16 zeroext %conv38) #11, !dbg !14533
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14534
  call void @wr_reg16(%struct.slgt_info* %31, i32 142, i16 zeroext 4096) #11, !dbg !14535
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.end22
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14536
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14537
  %tbufs40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 69, !dbg !14538
  %34 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs40, align 8, !dbg !14538
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14539
  %tbuf_start41 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 71, !dbg !14540
  %36 = load i32, i32* %tbuf_start41, align 4, !dbg !14540
  %idxprom42 = zext i32 %36 to i64, !dbg !14537
  %arrayidx43 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %34, i64 %idxprom42, !dbg !14537
  %pdesc = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx43, i32 0, i32 5, !dbg !14541
  %37 = load i32, i32* %pdesc, align 8, !dbg !14541
  call void @wr_reg32(%struct.slgt_info* %32, i32 156, i32 %37) #11, !dbg !14542
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14543
  call void @wr_reg32(%struct.slgt_info* %38, i32 148, i32 5) #11, !dbg !14544
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14545
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 48, !dbg !14546
  store i8 1, i8* %tx_active, align 1, !dbg !14547
  br label %if.end44, !dbg !14548

if.end44:                                         ; preds = %if.end39, %if.end
  ret void, !dbg !14549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @update_tx_timer(%struct.slgt_info* %info) #1 !dbg !14550 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !14551, metadata !DIExpression()), !dbg !14556
  %info.addr = alloca %struct.slgt_info*, align 8
  %timeout = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14560, metadata !DIExpression()), !dbg !14561
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14562
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 36, !dbg !14563
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !14564
  %1 = load i64, i64* %mode, align 8, !dbg !14564
  %cmp = icmp eq i64 %1, 2, !dbg !14565
  br i1 %cmp, label %if.then, label %if.end, !dbg !14566

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !14567, metadata !DIExpression()), !dbg !14568
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14569
  %call = call i32 @tbuf_bytes(%struct.slgt_info* %2) #11, !dbg !14570
  %mul = mul i32 %call, 7, !dbg !14571
  %add = add i32 %mul, 1000, !dbg !14572
  store i32 %add, i32* %timeout, align 4, !dbg !14568
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14573
  %tx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 18, !dbg !14574
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !14575
  %5 = load i32, i32* %timeout, align 4, !dbg !14576
  store i32 %5, i32* %m.addr.i, align 4
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !14577
  %7 = call i1 @llvm.is.constant.i32(i32 %6) #10, !dbg !14579
  br i1 %7, label %if.then.i, label %if.else.i, !dbg !14580

if.then.i:                                        ; preds = %if.then
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !14581
  %cmp.i = icmp slt i32 %8, 0, !dbg !14584
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14585

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14586
  br label %msecs_to_jiffies.exit, !dbg !14586

if.end.i:                                         ; preds = %if.then.i
  %9 = load i32, i32* %m.addr.i, align 4, !dbg !14587
  %call.i = call i64 @_msecs_to_jiffies(i32 %9) #14, !dbg !14588
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14589
  br label %msecs_to_jiffies.exit, !dbg !14589

if.else.i:                                        ; preds = %if.then
  %10 = load i32, i32* %m.addr.i, align 4, !dbg !14590
  %call2.i = call i64 @__msecs_to_jiffies(i32 %10) #14, !dbg !14592
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14593
  br label %msecs_to_jiffies.exit, !dbg !14593

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %11 = load i64, i64* %retval.i, align 8, !dbg !14594
  %add2 = add i64 %4, %11, !dbg !14595
  %call3 = call i32 @mod_timer(%struct.timer_list* %tx_timer, i64 %add2) #11, !dbg !14596
  br label %if.end, !dbg !14597

if.end:                                           ; preds = %msecs_to_jiffies.exit, %entry
  ret void, !dbg !14598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tbuf_bytes(%struct.slgt_info* %info) #1 !dbg !14599 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %total_count = alloca i32, align 4
  %i = alloca i32, align 4
  %reg_value = alloca i32, align 4
  %count = alloca i32, align 4
  %active_buf_count = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14600, metadata !DIExpression()), !dbg !14601
  call void @llvm.dbg.declare(metadata i32* %total_count, metadata !14602, metadata !DIExpression()), !dbg !14603
  store i32 0, i32* %total_count, align 4, !dbg !14603
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14604, metadata !DIExpression()), !dbg !14605
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14606
  %tbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 70, !dbg !14607
  %1 = load i32, i32* %tbuf_current, align 8, !dbg !14607
  store i32 %1, i32* %i, align 4, !dbg !14605
  call void @llvm.dbg.declare(metadata i32* %reg_value, metadata !14608, metadata !DIExpression()), !dbg !14609
  call void @llvm.dbg.declare(metadata i32* %count, metadata !14610, metadata !DIExpression()), !dbg !14611
  call void @llvm.dbg.declare(metadata i32* %active_buf_count, metadata !14612, metadata !DIExpression()), !dbg !14613
  store i32 0, i32* %active_buf_count, align 4, !dbg !14613
  br label %do.body, !dbg !14614

do.body:                                          ; preds = %do.cond, %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14615
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 69, !dbg !14615
  %3 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !14615
  %4 = load i32, i32* %i, align 4, !dbg !14615
  %idxprom = zext i32 %4 to i64, !dbg !14615
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %3, i64 %idxprom, !dbg !14615
  %count1 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 0, !dbg !14615
  %5 = load i16, i16* %count1, align 8, !dbg !14615
  %conv = zext i16 %5 to i32, !dbg !14615
  store i32 %conv, i32* %count, align 4, !dbg !14617
  %6 = load i32, i32* %count, align 4, !dbg !14618
  %tobool = icmp ne i32 %6, 0, !dbg !14618
  br i1 %tobool, label %if.then, label %if.else, !dbg !14620

if.then:                                          ; preds = %do.body
  %7 = load i32, i32* %count, align 4, !dbg !14621
  %8 = load i32, i32* %total_count, align 4, !dbg !14622
  %add = add i32 %8, %7, !dbg !14622
  store i32 %add, i32* %total_count, align 4, !dbg !14622
  br label %if.end8, !dbg !14623

if.else:                                          ; preds = %do.body
  %9 = load i32, i32* %total_count, align 4, !dbg !14624
  %tobool2 = icmp ne i32 %9, 0, !dbg !14624
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !14626

if.then3:                                         ; preds = %if.else
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14627
  %tbufs4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 69, !dbg !14628
  %11 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs4, align 8, !dbg !14628
  %12 = load i32, i32* %i, align 4, !dbg !14629
  %idxprom5 = zext i32 %12 to i64, !dbg !14627
  %arrayidx6 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %11, i64 %idxprom5, !dbg !14627
  %buf_count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx6, i32 0, i32 7, !dbg !14630
  %13 = load i16, i16* %buf_count, align 8, !dbg !14630
  %conv7 = zext i16 %13 to i32, !dbg !14627
  store i32 %conv7, i32* %active_buf_count, align 4, !dbg !14631
  br label %if.end, !dbg !14632

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !14633
  %inc = add i32 %14, 1, !dbg !14633
  store i32 %inc, i32* %i, align 4, !dbg !14633
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14635
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 68, !dbg !14636
  %16 = load i32, i32* %tbuf_count, align 8, !dbg !14636
  %cmp = icmp eq i32 %inc, %16, !dbg !14637
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !14638

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %i, align 4, !dbg !14639
  br label %if.end11, !dbg !14640

if.end11:                                         ; preds = %if.then10, %if.end8
  br label %do.cond, !dbg !14641

do.cond:                                          ; preds = %if.end11
  %17 = load i32, i32* %i, align 4, !dbg !14642
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14643
  %tbuf_current12 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 70, !dbg !14644
  %19 = load i32, i32* %tbuf_current12, align 8, !dbg !14644
  %cmp13 = icmp ne i32 %17, %19, !dbg !14645
  br i1 %cmp13, label %do.body, label %do.end, !dbg !14641, !llvm.loop !14646

do.end:                                           ; preds = %do.cond
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14648
  %call = call i32 @rd_reg32(%struct.slgt_info* %20, i32 148) #11, !dbg !14649
  store i32 %call, i32* %reg_value, align 4, !dbg !14650
  %21 = load i32, i32* %reg_value, align 4, !dbg !14651
  %and = and i32 %21, 1, !dbg !14653
  %tobool15 = icmp ne i32 %and, 0, !dbg !14653
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !14654

if.then16:                                        ; preds = %do.end
  %22 = load i32, i32* %active_buf_count, align 4, !dbg !14655
  %23 = load i32, i32* %total_count, align 4, !dbg !14656
  %add17 = add i32 %23, %22, !dbg !14656
  store i32 %add17, i32* %total_count, align 4, !dbg !14656
  br label %if.end18, !dbg !14657

if.end18:                                         ; preds = %if.then16, %do.end
  %24 = load i32, i32* %reg_value, align 4, !dbg !14658
  %shr = lshr i32 %24, 8, !dbg !14659
  %and19 = and i32 %shr, 255, !dbg !14660
  %25 = load i32, i32* %total_count, align 4, !dbg !14661
  %add20 = add i32 %25, %and19, !dbg !14661
  store i32 %add20, i32* %total_count, align 4, !dbg !14661
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14662
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 48, !dbg !14664
  %27 = load i8, i8* %tx_active, align 1, !dbg !14664
  %tobool21 = trunc i8 %27 to i1, !dbg !14664
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !14665

if.then22:                                        ; preds = %if.end18
  %28 = load i32, i32* %total_count, align 4, !dbg !14666
  %inc23 = add i32 %28, 1, !dbg !14666
  store i32 %inc23, i32* %total_count, align 4, !dbg !14666
  br label %if.end24, !dbg !14667

if.end24:                                         ; preds = %if.then22, %if.end18
  %29 = load i32, i32* %total_count, align 4, !dbg !14668
  ret i32 %29, !dbg !14669
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !14670 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !14671, metadata !DIExpression()), !dbg !14672
  %0 = load i32, i32* %m.addr, align 4, !dbg !14673
  %conv = zext i32 %0 to i64, !dbg !14673
  %add = add i64 %conv, 4, !dbg !14674
  %sub = sub i64 %add, 1, !dbg !14675
  %div = sdiv i64 %sub, 4, !dbg !14676
  ret i64 %div, !dbg !14677
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #4

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #4

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #4

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_desc(%struct.slgt_info* %info) #1 !dbg !14678 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  %pbufs = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14679, metadata !DIExpression()), !dbg !14680
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14681, metadata !DIExpression()), !dbg !14682
  call void @llvm.dbg.declare(metadata i32* %pbufs, metadata !14683, metadata !DIExpression()), !dbg !14684
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14685
  %pdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 5, !dbg !14686
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14686
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 41, !dbg !14687
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14688
  %bufs_dma_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 61, !dbg !14689
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 4096, i64* %bufs_dma_addr, i32 3264) #11, !dbg !14690
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14691
  %bufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 60, !dbg !14692
  store i8* %call, i8** %bufs, align 8, !dbg !14693
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14694
  %bufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 60, !dbg !14696
  %5 = load i8*, i8** %bufs1, align 8, !dbg !14696
  %cmp = icmp eq i8* %5, null, !dbg !14697
  br i1 %cmp, label %if.then, label %if.end, !dbg !14698

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14699
  br label %return, !dbg !14699

if.end:                                           ; preds = %entry
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14700
  %bufs2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 60, !dbg !14701
  %7 = load i8*, i8** %bufs2, align 8, !dbg !14701
  %8 = bitcast i8* %7 to %struct.slgt_desc*, !dbg !14702
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14703
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 63, !dbg !14704
  store %struct.slgt_desc* %8, %struct.slgt_desc** %rbufs, align 8, !dbg !14705
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14706
  %bufs3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 60, !dbg !14707
  %11 = load i8*, i8** %bufs3, align 8, !dbg !14707
  %12 = bitcast i8* %11 to %struct.slgt_desc*, !dbg !14708
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14709
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 62, !dbg !14710
  %14 = load i32, i32* %rbuf_count, align 8, !dbg !14710
  %idx.ext = zext i32 %14 to i64, !dbg !14711
  %add.ptr = getelementptr %struct.slgt_desc, %struct.slgt_desc* %12, i64 %idx.ext, !dbg !14711
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14712
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 69, !dbg !14713
  store %struct.slgt_desc* %add.ptr, %struct.slgt_desc** %tbufs, align 8, !dbg !14714
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14715
  %bufs_dma_addr4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 61, !dbg !14716
  %17 = load i64, i64* %bufs_dma_addr4, align 8, !dbg !14716
  %conv = trunc i64 %17 to i32, !dbg !14717
  store i32 %conv, i32* %pbufs, align 4, !dbg !14718
  store i32 0, i32* %i, align 4, !dbg !14719
  br label %for.cond, !dbg !14721

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !14722
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14724
  %rbuf_count5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 62, !dbg !14725
  %20 = load i32, i32* %rbuf_count5, align 8, !dbg !14725
  %cmp6 = icmp ult i32 %18, %20, !dbg !14726
  br i1 %cmp6, label %for.body, label %for.end, !dbg !14727

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %pbufs, align 4, !dbg !14728
  %conv8 = zext i32 %21 to i64, !dbg !14728
  %22 = load i32, i32* %i, align 4, !dbg !14730
  %conv9 = zext i32 %22 to i64, !dbg !14730
  %mul = mul i64 %conv9, 48, !dbg !14731
  %add = add i64 %conv8, %mul, !dbg !14732
  %conv10 = trunc i64 %add to i32, !dbg !14728
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14733
  %rbufs11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 63, !dbg !14734
  %24 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs11, align 8, !dbg !14734
  %25 = load i32, i32* %i, align 4, !dbg !14735
  %idxprom = zext i32 %25 to i64, !dbg !14733
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %24, i64 %idxprom, !dbg !14733
  %pdesc = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 5, !dbg !14736
  store i32 %conv10, i32* %pdesc, align 8, !dbg !14737
  %26 = load i32, i32* %i, align 4, !dbg !14738
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14740
  %rbuf_count12 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 62, !dbg !14741
  %28 = load i32, i32* %rbuf_count12, align 8, !dbg !14741
  %sub = sub i32 %28, 1, !dbg !14742
  %cmp13 = icmp eq i32 %26, %sub, !dbg !14743
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !14744

if.then15:                                        ; preds = %for.body
  %29 = load i32, i32* %pbufs, align 4, !dbg !14745
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14746
  %rbufs16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 63, !dbg !14747
  %31 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs16, align 8, !dbg !14747
  %32 = load i32, i32* %i, align 4, !dbg !14748
  %idxprom17 = zext i32 %32 to i64, !dbg !14746
  %arrayidx18 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %31, i64 %idxprom17, !dbg !14746
  %next = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx18, i32 0, i32 3, !dbg !14749
  store i32 %29, i32* %next, align 8, !dbg !14750
  br label %if.end29, !dbg !14746

if.else:                                          ; preds = %for.body
  %33 = load i32, i32* %pbufs, align 4, !dbg !14751
  %conv19 = zext i32 %33 to i64, !dbg !14751
  %34 = load i32, i32* %i, align 4, !dbg !14751
  %add20 = add i32 %34, 1, !dbg !14751
  %conv21 = zext i32 %add20 to i64, !dbg !14751
  %mul22 = mul i64 %conv21, 48, !dbg !14751
  %add23 = add i64 %conv19, %mul22, !dbg !14751
  %conv24 = trunc i64 %add23 to i32, !dbg !14751
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14752
  %rbufs25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 63, !dbg !14753
  %36 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs25, align 8, !dbg !14753
  %37 = load i32, i32* %i, align 4, !dbg !14754
  %idxprom26 = zext i32 %37 to i64, !dbg !14752
  %arrayidx27 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %36, i64 %idxprom26, !dbg !14752
  %next28 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx27, i32 0, i32 3, !dbg !14755
  store i32 %conv24, i32* %next28, align 8, !dbg !14756
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then15
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14757
  %rbufs30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 63, !dbg !14757
  %39 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs30, align 8, !dbg !14757
  %40 = load i32, i32* %i, align 4, !dbg !14757
  %idxprom31 = zext i32 %40 to i64, !dbg !14757
  %arrayidx32 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %39, i64 %idxprom31, !dbg !14757
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx32, i32 0, i32 0, !dbg !14757
  store i16 256, i16* %count, align 8, !dbg !14757
  br label %for.inc, !dbg !14758

for.inc:                                          ; preds = %if.end29
  %41 = load i32, i32* %i, align 4, !dbg !14759
  %inc = add i32 %41, 1, !dbg !14759
  store i32 %inc, i32* %i, align 4, !dbg !14759
  br label %for.cond, !dbg !14760, !llvm.loop !14761

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14763
  br label %for.cond33, !dbg !14765

for.cond33:                                       ; preds = %for.inc77, %for.end
  %42 = load i32, i32* %i, align 4, !dbg !14766
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14768
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 68, !dbg !14769
  %44 = load i32, i32* %tbuf_count, align 8, !dbg !14769
  %cmp34 = icmp ult i32 %42, %44, !dbg !14770
  br i1 %cmp34, label %for.body36, label %for.end79, !dbg !14771

for.body36:                                       ; preds = %for.cond33
  %45 = load i32, i32* %pbufs, align 4, !dbg !14772
  %conv37 = zext i32 %45 to i64, !dbg !14772
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14774
  %rbuf_count38 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 62, !dbg !14775
  %47 = load i32, i32* %rbuf_count38, align 8, !dbg !14775
  %48 = load i32, i32* %i, align 4, !dbg !14776
  %add39 = add i32 %47, %48, !dbg !14777
  %conv40 = zext i32 %add39 to i64, !dbg !14778
  %mul41 = mul i64 %conv40, 48, !dbg !14779
  %add42 = add i64 %conv37, %mul41, !dbg !14780
  %conv43 = trunc i64 %add42 to i32, !dbg !14772
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14781
  %tbufs44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 69, !dbg !14782
  %50 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs44, align 8, !dbg !14782
  %51 = load i32, i32* %i, align 4, !dbg !14783
  %idxprom45 = zext i32 %51 to i64, !dbg !14781
  %arrayidx46 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %50, i64 %idxprom45, !dbg !14781
  %pdesc47 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx46, i32 0, i32 5, !dbg !14784
  store i32 %conv43, i32* %pdesc47, align 8, !dbg !14785
  %52 = load i32, i32* %i, align 4, !dbg !14786
  %53 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14788
  %tbuf_count48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 68, !dbg !14789
  %54 = load i32, i32* %tbuf_count48, align 8, !dbg !14789
  %sub49 = sub i32 %54, 1, !dbg !14790
  %cmp50 = icmp eq i32 %52, %sub49, !dbg !14791
  br i1 %cmp50, label %if.then52, label %if.else63, !dbg !14792

if.then52:                                        ; preds = %for.body36
  %55 = load i32, i32* %pbufs, align 4, !dbg !14793
  %conv53 = zext i32 %55 to i64, !dbg !14793
  %56 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14793
  %rbuf_count54 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %56, i32 0, i32 62, !dbg !14793
  %57 = load i32, i32* %rbuf_count54, align 8, !dbg !14793
  %conv55 = zext i32 %57 to i64, !dbg !14793
  %mul56 = mul i64 %conv55, 48, !dbg !14793
  %add57 = add i64 %conv53, %mul56, !dbg !14793
  %conv58 = trunc i64 %add57 to i32, !dbg !14793
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14794
  %tbufs59 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %58, i32 0, i32 69, !dbg !14795
  %59 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs59, align 8, !dbg !14795
  %60 = load i32, i32* %i, align 4, !dbg !14796
  %idxprom60 = zext i32 %60 to i64, !dbg !14794
  %arrayidx61 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %59, i64 %idxprom60, !dbg !14794
  %next62 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx61, i32 0, i32 3, !dbg !14797
  store i32 %conv58, i32* %next62, align 8, !dbg !14798
  br label %if.end76, !dbg !14794

if.else63:                                        ; preds = %for.body36
  %61 = load i32, i32* %pbufs, align 4, !dbg !14799
  %conv64 = zext i32 %61 to i64, !dbg !14799
  %62 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14799
  %rbuf_count65 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %62, i32 0, i32 62, !dbg !14799
  %63 = load i32, i32* %rbuf_count65, align 8, !dbg !14799
  %64 = load i32, i32* %i, align 4, !dbg !14799
  %add66 = add i32 %63, %64, !dbg !14799
  %add67 = add i32 %add66, 1, !dbg !14799
  %conv68 = zext i32 %add67 to i64, !dbg !14799
  %mul69 = mul i64 %conv68, 48, !dbg !14799
  %add70 = add i64 %conv64, %mul69, !dbg !14799
  %conv71 = trunc i64 %add70 to i32, !dbg !14799
  %65 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14800
  %tbufs72 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %65, i32 0, i32 69, !dbg !14801
  %66 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs72, align 8, !dbg !14801
  %67 = load i32, i32* %i, align 4, !dbg !14802
  %idxprom73 = zext i32 %67 to i64, !dbg !14800
  %arrayidx74 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %66, i64 %idxprom73, !dbg !14800
  %next75 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx74, i32 0, i32 3, !dbg !14803
  store i32 %conv71, i32* %next75, align 8, !dbg !14804
  br label %if.end76

if.end76:                                         ; preds = %if.else63, %if.then52
  br label %for.inc77, !dbg !14805

for.inc77:                                        ; preds = %if.end76
  %68 = load i32, i32* %i, align 4, !dbg !14806
  %inc78 = add i32 %68, 1, !dbg !14806
  store i32 %inc78, i32* %i, align 4, !dbg !14806
  br label %for.cond33, !dbg !14807, !llvm.loop !14808

for.end79:                                        ; preds = %for.cond33
  store i32 0, i32* %retval, align 4, !dbg !14810
  br label %return, !dbg !14810

return:                                           ; preds = %for.end79, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !14811
  ret i32 %69, !dbg !14811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_bufs(%struct.slgt_info* %info, %struct.slgt_desc* %bufs, i32 %count) #1 !dbg !14812 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %bufs.addr = alloca %struct.slgt_desc*, align 8
  %count.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14815, metadata !DIExpression()), !dbg !14816
  store %struct.slgt_desc* %bufs, %struct.slgt_desc** %bufs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_desc** %bufs.addr, metadata !14817, metadata !DIExpression()), !dbg !14818
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !14819, metadata !DIExpression()), !dbg !14820
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14821, metadata !DIExpression()), !dbg !14822
  store i32 0, i32* %i, align 4, !dbg !14823
  br label %for.cond, !dbg !14825

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14826
  %1 = load i32, i32* %count.addr, align 4, !dbg !14828
  %cmp = icmp slt i32 %0, %1, !dbg !14829
  br i1 %cmp, label %for.body, label %for.end, !dbg !14830

for.body:                                         ; preds = %for.cond
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14831
  %pdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 5, !dbg !14833
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !14833
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !14834
  %4 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !14835
  %5 = load i32, i32* %i, align 4, !dbg !14836
  %idxprom = sext i32 %5 to i64, !dbg !14835
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %4, i64 %idxprom, !dbg !14835
  %buf_dma_addr = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 6, !dbg !14837
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 256, i64* %buf_dma_addr, i32 3264) #11, !dbg !14838
  %6 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !14839
  %7 = load i32, i32* %i, align 4, !dbg !14840
  %idxprom1 = sext i32 %7 to i64, !dbg !14839
  %arrayidx2 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %6, i64 %idxprom1, !dbg !14839
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx2, i32 0, i32 4, !dbg !14841
  store i8* %call, i8** %buf, align 8, !dbg !14842
  %8 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !14843
  %9 = load i32, i32* %i, align 4, !dbg !14845
  %idxprom3 = sext i32 %9 to i64, !dbg !14843
  %arrayidx4 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %8, i64 %idxprom3, !dbg !14843
  %buf5 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx4, i32 0, i32 4, !dbg !14846
  %10 = load i8*, i8** %buf5, align 8, !dbg !14846
  %tobool = icmp ne i8* %10, null, !dbg !14843
  br i1 %tobool, label %if.end, label %if.then, !dbg !14847

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !14848
  br label %return, !dbg !14848

if.end:                                           ; preds = %for.body
  %11 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !14849
  %12 = load i32, i32* %i, align 4, !dbg !14849
  %idxprom6 = sext i32 %12 to i64, !dbg !14849
  %arrayidx7 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %11, i64 %idxprom6, !dbg !14849
  %buf_dma_addr8 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx7, i32 0, i32 6, !dbg !14849
  %13 = load i64, i64* %buf_dma_addr8, align 8, !dbg !14849
  %conv = trunc i64 %13 to i32, !dbg !14849
  %14 = load %struct.slgt_desc*, %struct.slgt_desc** %bufs.addr, align 8, !dbg !14850
  %15 = load i32, i32* %i, align 4, !dbg !14851
  %idxprom9 = sext i32 %15 to i64, !dbg !14850
  %arrayidx10 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %14, i64 %idxprom9, !dbg !14850
  %pbuf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx10, i32 0, i32 2, !dbg !14852
  store i32 %conv, i32* %pbuf, align 4, !dbg !14853
  br label %for.inc, !dbg !14854

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !14855
  %inc = add i32 %16, 1, !dbg !14855
  store i32 %inc, i32* %i, align 4, !dbg !14855
  br label %for.cond, !dbg !14856, !llvm.loop !14857

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !14859
  br label %return, !dbg !14859

return:                                           ; preds = %for.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !14860
  ret i32 %17, !dbg !14860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @alloc_tmp_rbuf(%struct.slgt_info* %info) #1 !dbg !14861 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9736, metadata !DIExpression()), !dbg !14862
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9746, metadata !DIExpression()), !dbg !14865
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9748, metadata !DIExpression()), !dbg !14866
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9750, metadata !DIExpression()), !dbg !14867
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9752, metadata !DIExpression()), !dbg !14868
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9758, metadata !DIExpression()), !dbg !14870
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9764, metadata !DIExpression()), !dbg !14872
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9773, metadata !DIExpression()), !dbg !14875
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9775, metadata !DIExpression()), !dbg !14876
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9777, metadata !DIExpression()), !dbg !14877
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9779, metadata !DIExpression()), !dbg !14878
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9781, metadata !DIExpression()), !dbg !14879
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9783, metadata !DIExpression()), !dbg !14880
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9785, metadata !DIExpression()), !dbg !14881
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9787, metadata !DIExpression()), !dbg !14882
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !14883, metadata !DIExpression()), !dbg !14884
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !14885
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 38, !dbg !14886
  %1 = load i32, i32* %max_frame_size, align 4, !dbg !14886
  %add = add i32 %1, 5, !dbg !14887
  %conv = zext i32 %add to i64, !dbg !14885
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !14888
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !14889
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !14890

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14891
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !14892
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14893

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !14894
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !14895
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14896
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !14897
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14879
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !14898
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14899
  %10 = load i32, i32* %order.i.i, align 4, !dbg !14900
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14901
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14902
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14903
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !14904
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14904
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14904
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14904
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !14904
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14905
  br label %kmalloc.exit, !dbg !14905

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !14906
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14907
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !14907
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14908

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14909
  br label %kmalloc_index.exit.i, !dbg !14909

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14910
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !14911
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14912

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14913
  br label %kmalloc_index.exit.i, !dbg !14913

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14914
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !14915
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14916

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14917
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !14918
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14919

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14920
  br label %kmalloc_index.exit.i, !dbg !14920

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14921
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !14922
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14923

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14924
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !14925
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14926

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14927
  br label %kmalloc_index.exit.i, !dbg !14927

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14928
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !14929
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14930

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14931
  br label %kmalloc_index.exit.i, !dbg !14931

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14932
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !14933
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14934

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14935
  br label %kmalloc_index.exit.i, !dbg !14935

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14936
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !14937
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14938

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14939
  br label %kmalloc_index.exit.i, !dbg !14939

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14940
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !14941
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14942

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14943
  br label %kmalloc_index.exit.i, !dbg !14943

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14944
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !14945
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14946

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14947
  br label %kmalloc_index.exit.i, !dbg !14947

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14948
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !14949
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14950

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14951
  br label %kmalloc_index.exit.i, !dbg !14951

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14952
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !14953
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14954

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14955
  br label %kmalloc_index.exit.i, !dbg !14955

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14956
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !14957
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14958

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14959
  br label %kmalloc_index.exit.i, !dbg !14959

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14960
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !14961
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14962

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14963
  br label %kmalloc_index.exit.i, !dbg !14963

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14964
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !14965
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14966

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14967
  br label %kmalloc_index.exit.i, !dbg !14967

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14968
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !14969
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14970

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14971
  br label %kmalloc_index.exit.i, !dbg !14971

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14972
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !14973
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14974

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14975
  br label %kmalloc_index.exit.i, !dbg !14975

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14976
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !14977
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14978

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14979
  br label %kmalloc_index.exit.i, !dbg !14979

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14980
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !14981
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14982

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14983
  br label %kmalloc_index.exit.i, !dbg !14983

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14984
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !14985
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14986

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14987
  br label %kmalloc_index.exit.i, !dbg !14987

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14988
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !14989
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14990

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14991
  br label %kmalloc_index.exit.i, !dbg !14991

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14992
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !14993
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14994

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14995
  br label %kmalloc_index.exit.i, !dbg !14995

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14996
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !14997
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14998

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14999
  br label %kmalloc_index.exit.i, !dbg !14999

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15000
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !15001
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15002

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15003
  br label %kmalloc_index.exit.i, !dbg !15003

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15004
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !15005
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15006

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15007
  br label %kmalloc_index.exit.i, !dbg !15007

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15008
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !15009
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15010

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15011
  br label %kmalloc_index.exit.i, !dbg !15011

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15012
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !15013
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15014

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15015
  br label %kmalloc_index.exit.i, !dbg !15015

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15016
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !15017
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15018

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15019
  br label %kmalloc_index.exit.i, !dbg !15019

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15020
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !15021
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15022

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15023
  br label %kmalloc_index.exit.i, !dbg !15023

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15024, !srcloc !9963
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 165) #10, !dbg !15025, !srcloc !9967
  unreachable, !dbg !15026

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !15027
  store i32 %45, i32* %index.i, align 4, !dbg !15028
  %46 = load i32, i32* %index.i, align 4, !dbg !15029
  %tobool.i = icmp ne i32 %46, 0, !dbg !15029
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15030

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15031
  br label %kmalloc.exit, !dbg !15031

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !15032
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15033
  %and.i.i = and i32 %48, 17, !dbg !15033
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15033
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15033
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15033
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15033
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15034

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15035
  br label %kmalloc_type.exit.i, !dbg !15035

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15036
  %and2.i.i = and i32 %49, 1, !dbg !15037
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15036
  %50 = zext i1 %tobool3.i.i to i64, !dbg !15036
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15036
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15038
  br label %kmalloc_type.exit.i, !dbg !15038

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !15039
  %idxprom.i = zext i32 %51 to i64, !dbg !15040
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15040
  %52 = load i32, i32* %index.i, align 4, !dbg !15041
  %idxprom6.i = zext i32 %52 to i64, !dbg !15040
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15040
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15040
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !15042
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !15043
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15044
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15045
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !15046
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15046
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15046
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15046
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15046
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14867
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15047
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !15048
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15049
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15050
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !15051
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15052
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !15053
  store i8* %62, i8** %retval.i, align 8, !dbg !15054
  br label %kmalloc.exit, !dbg !15054

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !15055
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !15056
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !15057
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15057
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15057
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15057
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15057
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15058
  br label %kmalloc.exit, !dbg !15058

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !15059
  %66 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15060
  %tmp_rbuf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 72, !dbg !15061
  store i8* %65, i8** %tmp_rbuf, align 8, !dbg !15062
  %67 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15063
  %tmp_rbuf1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %67, i32 0, i32 72, !dbg !15065
  %68 = load i8*, i8** %tmp_rbuf1, align 8, !dbg !15065
  %cmp = icmp eq i8* %68, null, !dbg !15066
  br i1 %cmp, label %if.then, label %if.end, !dbg !15067

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !15068
  br label %return, !dbg !15068

if.end:                                           ; preds = %kmalloc.exit
  %69 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15069
  %max_frame_size3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %69, i32 0, i32 38, !dbg !15070
  %70 = load i32, i32* %max_frame_size3, align 4, !dbg !15070
  %add4 = add i32 %70, 5, !dbg !15071
  %conv5 = zext i32 %add4 to i64, !dbg !15069
  %call6 = call i8* @kzalloc(i64 %conv5, i32 3264) #11, !dbg !15072
  %71 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15073
  %flag_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %71, i32 0, i32 53, !dbg !15074
  store i8* %call6, i8** %flag_buf, align 8, !dbg !15075
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15076
  %flag_buf7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 53, !dbg !15078
  %73 = load i8*, i8** %flag_buf7, align 8, !dbg !15078
  %tobool = icmp ne i8* %73, null, !dbg !15076
  br i1 %tobool, label %if.end11, label %if.then8, !dbg !15079

if.then8:                                         ; preds = %if.end
  %74 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15080
  %tmp_rbuf9 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %74, i32 0, i32 72, !dbg !15082
  %75 = load i8*, i8** %tmp_rbuf9, align 8, !dbg !15082
  call void @kfree(i8* %75) #11, !dbg !15083
  %76 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15084
  %tmp_rbuf10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 72, !dbg !15085
  store i8* null, i8** %tmp_rbuf10, align 8, !dbg !15086
  store i32 -12, i32* %retval, align 4, !dbg !15087
  br label %return, !dbg !15087

if.end11:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15088
  br label %return, !dbg !15088

return:                                           ; preds = %if.end11, %if.then8, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !15089
  ret i32 %77, !dbg !15089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #1 !dbg !15090 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15094, metadata !DIExpression()), !dbg !15095
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15096, metadata !DIExpression()), !dbg !15097
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15102
  %1 = load i64, i64* %size.addr, align 8, !dbg !15103
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !15104
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !15105
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !15106
  %and = and i32 %4, 8192, !dbg !15107
  %tobool = icmp ne i32 %and, 0, !dbg !15108
  %5 = zext i1 %tobool to i64, !dbg !15108
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !15108
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !15109
  ret i8* %call, !dbg !15110
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #4

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_serial(%struct.slgt_info* %info) #1 !dbg !15111 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15112, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.declare(metadata i16* %status, metadata !15114, metadata !DIExpression()), !dbg !15115
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15116
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %0, i32 142) #11, !dbg !15117
  store i16 %call, i16* %status, align 2, !dbg !15115
  %1 = load i32, i32* @debug_level, align 4, !dbg !15118
  %cmp = icmp sge i32 %1, 5, !dbg !15118
  br i1 %cmp, label %if.then, label %if.end, !dbg !15120

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15118
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 4, !dbg !15118
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15118
  %3 = load i16, i16* %status, align 2, !dbg !15118
  %conv = zext i16 %3 to i32, !dbg !15118
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.63, i64 0, i64 0), i8* %arraydecay, i32 %conv) #12, !dbg !15118
  br label %if.end, !dbg !15118

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15121
  %5 = load i16, i16* %status, align 2, !dbg !15122
  call void @wr_reg16(%struct.slgt_info* %4, i32 142, i16 zeroext %5) #11, !dbg !15123
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15124
  %irq_occurred = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 29, !dbg !15125
  store i8 1, i8* %irq_occurred, align 1, !dbg !15126
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15127
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 36, !dbg !15129
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !15130
  %8 = load i64, i64* %mode, align 8, !dbg !15130
  %cmp2 = icmp eq i64 %8, 1, !dbg !15131
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !15132

if.then4:                                         ; preds = %if.end
  %9 = load i16, i16* %status, align 2, !dbg !15133
  %conv5 = zext i16 %9 to i32, !dbg !15133
  %and = and i32 %conv5, 4096, !dbg !15136
  %tobool = icmp ne i32 %and, 0, !dbg !15136
  br i1 %tobool, label %if.then6, label %if.end10, !dbg !15137

if.then6:                                         ; preds = %if.then4
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15138
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 48, !dbg !15141
  %11 = load i8, i8* %tx_active, align 1, !dbg !15141
  %tobool7 = trunc i8 %11 to i1, !dbg !15141
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !15142

if.then8:                                         ; preds = %if.then6
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15143
  %13 = load i16, i16* %status, align 2, !dbg !15144
  call void @isr_txeom(%struct.slgt_info* %12, i16 zeroext %13) #11, !dbg !15145
  br label %if.end9, !dbg !15145

if.end9:                                          ; preds = %if.then8, %if.then6
  br label %if.end10, !dbg !15146

if.end10:                                         ; preds = %if.end9, %if.then4
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15147
  %rx_pio = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 40, !dbg !15149
  %15 = load i32, i32* %rx_pio, align 4, !dbg !15149
  %tobool11 = icmp ne i32 %15, 0, !dbg !15147
  br i1 %tobool11, label %land.lhs.true, label %if.end16, !dbg !15150

land.lhs.true:                                    ; preds = %if.end10
  %16 = load i16, i16* %status, align 2, !dbg !15151
  %conv12 = zext i16 %16 to i32, !dbg !15151
  %and13 = and i32 %conv12, 1024, !dbg !15152
  %tobool14 = icmp ne i32 %and13, 0, !dbg !15152
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !15153

if.then15:                                        ; preds = %land.lhs.true
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15154
  call void @isr_rxdata(%struct.slgt_info* %17) #11, !dbg !15155
  br label %if.end16, !dbg !15155

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.end10
  %18 = load i16, i16* %status, align 2, !dbg !15156
  %conv17 = zext i16 %18 to i32, !dbg !15156
  %and18 = and i32 %conv17, 512, !dbg !15158
  %tobool19 = icmp ne i32 %and18, 0, !dbg !15158
  br i1 %tobool19, label %land.lhs.true20, label %if.end46, !dbg !15159

land.lhs.true20:                                  ; preds = %if.end16
  %19 = load i16, i16* %status, align 2, !dbg !15160
  %conv21 = zext i16 %19 to i32, !dbg !15160
  %and22 = and i32 %conv21, 16384, !dbg !15161
  %tobool23 = icmp ne i32 %and22, 0, !dbg !15161
  br i1 %tobool23, label %if.then24, label %if.end46, !dbg !15162

if.then24:                                        ; preds = %land.lhs.true20
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15163
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 11, !dbg !15165
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 9, !dbg !15166
  %21 = load i32, i32* %brk, align 4, !dbg !15167
  %inc = add i32 %21, 1, !dbg !15167
  store i32 %inc, i32* %brk, align 4, !dbg !15167
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15168
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 1, !dbg !15170
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !15171
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !15171
  %tobool25 = icmp ne %struct.tty_struct* %23, null, !dbg !15168
  br i1 %tobool25, label %if.then26, label %if.end45, !dbg !15172

if.then26:                                        ; preds = %if.then24
  %24 = load i16, i16* %status, align 2, !dbg !15173
  %conv27 = zext i16 %24 to i32, !dbg !15173
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15176
  %ignore_status_mask = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 15, !dbg !15177
  %26 = load i32, i32* %ignore_status_mask, align 4, !dbg !15177
  %and28 = and i32 %conv27, %26, !dbg !15178
  %tobool29 = icmp ne i32 %and28, 0, !dbg !15178
  br i1 %tobool29, label %if.end44, label %if.then30, !dbg !15179

if.then30:                                        ; preds = %if.then26
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15180
  %read_status_mask = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 14, !dbg !15183
  %28 = load i32, i32* %read_status_mask, align 8, !dbg !15183
  %and31 = and i32 %28, 16384, !dbg !15184
  %tobool32 = icmp ne i32 %and31, 0, !dbg !15184
  br i1 %tobool32, label %if.then33, label %if.end43, !dbg !15185

if.then33:                                        ; preds = %if.then30
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15186
  %port34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 1, !dbg !15188
  %call35 = call i32 @tty_insert_flip_char(%struct.tty_port* %port34, i8 zeroext 0, i8 signext 1) #11, !dbg !15189
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15190
  %port36 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 1, !dbg !15192
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port36, i32 0, i32 10, !dbg !15193
  %31 = load i64, i64* %flags, align 8, !dbg !15193
  %and37 = and i64 %31, 4, !dbg !15194
  %tobool38 = icmp ne i64 %and37, 0, !dbg !15194
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !15195

if.then39:                                        ; preds = %if.then33
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15196
  %port40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 1, !dbg !15197
  %tty41 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port40, i32 0, i32 1, !dbg !15198
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty41, align 8, !dbg !15198
  call void @do_SAK(%struct.tty_struct* %33) #11, !dbg !15199
  br label %if.end42, !dbg !15199

if.end42:                                         ; preds = %if.then39, %if.then33
  br label %if.end43, !dbg !15200

if.end43:                                         ; preds = %if.end42, %if.then30
  br label %if.end44, !dbg !15201

if.end44:                                         ; preds = %if.end43, %if.then26
  br label %if.end45, !dbg !15202

if.end45:                                         ; preds = %if.end44, %if.then24
  br label %if.end46, !dbg !15203

if.end46:                                         ; preds = %if.end45, %land.lhs.true20, %if.end16
  br label %if.end80, !dbg !15204

if.else:                                          ; preds = %if.end
  %34 = load i16, i16* %status, align 2, !dbg !15205
  %conv47 = zext i16 %34 to i32, !dbg !15205
  %and48 = and i32 %conv47, 6144, !dbg !15208
  %tobool49 = icmp ne i32 %and48, 0, !dbg !15208
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !15209

if.then50:                                        ; preds = %if.else
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15210
  %36 = load i16, i16* %status, align 2, !dbg !15211
  call void @isr_txeom(%struct.slgt_info* %35, i16 zeroext %36) #11, !dbg !15212
  br label %if.end51, !dbg !15212

if.end51:                                         ; preds = %if.then50, %if.else
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15213
  %rx_pio52 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 40, !dbg !15215
  %38 = load i32, i32* %rx_pio52, align 4, !dbg !15215
  %tobool53 = icmp ne i32 %38, 0, !dbg !15213
  br i1 %tobool53, label %land.lhs.true54, label %if.end59, !dbg !15216

land.lhs.true54:                                  ; preds = %if.end51
  %39 = load i16, i16* %status, align 2, !dbg !15217
  %conv55 = zext i16 %39 to i32, !dbg !15217
  %and56 = and i32 %conv55, 1024, !dbg !15218
  %tobool57 = icmp ne i32 %and56, 0, !dbg !15218
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !15219

if.then58:                                        ; preds = %land.lhs.true54
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15220
  call void @isr_rxdata(%struct.slgt_info* %40) #11, !dbg !15221
  br label %if.end59, !dbg !15221

if.end59:                                         ; preds = %if.then58, %land.lhs.true54, %if.end51
  %41 = load i16, i16* %status, align 2, !dbg !15222
  %conv60 = zext i16 %41 to i32, !dbg !15222
  %and61 = and i32 %conv60, 512, !dbg !15224
  %tobool62 = icmp ne i32 %and61, 0, !dbg !15224
  br i1 %tobool62, label %if.then63, label %if.end74, !dbg !15225

if.then63:                                        ; preds = %if.end59
  %42 = load i16, i16* %status, align 2, !dbg !15226
  %conv64 = zext i16 %42 to i32, !dbg !15226
  %and65 = and i32 %conv64, 16384, !dbg !15229
  %tobool66 = icmp ne i32 %and65, 0, !dbg !15229
  br i1 %tobool66, label %if.then67, label %if.else70, !dbg !15230

if.then67:                                        ; preds = %if.then63
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15231
  %icount68 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 11, !dbg !15232
  %rxidle = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount68, i32 0, i32 22, !dbg !15233
  %44 = load i32, i32* %rxidle, align 4, !dbg !15234
  %inc69 = add i32 %44, 1, !dbg !15234
  store i32 %inc69, i32* %rxidle, align 4, !dbg !15234
  br label %if.end73, !dbg !15231

if.else70:                                        ; preds = %if.then63
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15235
  %icount71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 11, !dbg !15236
  %exithunt = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount71, i32 0, i32 21, !dbg !15237
  %46 = load i32, i32* %exithunt, align 4, !dbg !15238
  %inc72 = add i32 %46, 1, !dbg !15238
  store i32 %inc72, i32* %exithunt, align 4, !dbg !15238
  br label %if.end73

if.end73:                                         ; preds = %if.else70, %if.then67
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15239
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %47, i32 0, i32 17, !dbg !15239
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15239
  br label %if.end74, !dbg !15240

if.end74:                                         ; preds = %if.end73, %if.end59
  %48 = load i16, i16* %status, align 2, !dbg !15241
  %conv75 = zext i16 %48 to i32, !dbg !15241
  %and76 = and i32 %conv75, 256, !dbg !15243
  %tobool77 = icmp ne i32 %and76, 0, !dbg !15243
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !15244

if.then78:                                        ; preds = %if.end74
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15245
  call void @rx_start(%struct.slgt_info* %49) #11, !dbg !15246
  br label %if.end79, !dbg !15246

if.end79:                                         ; preds = %if.then78, %if.end74
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end46
  %50 = load i16, i16* %status, align 2, !dbg !15247
  %conv81 = zext i16 %50 to i32, !dbg !15247
  %and82 = and i32 %conv81, 128, !dbg !15249
  %tobool83 = icmp ne i32 %and82, 0, !dbg !15249
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !15250

if.then84:                                        ; preds = %if.end80
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15251
  %52 = load i16, i16* %status, align 2, !dbg !15252
  call void @dsr_change(%struct.slgt_info* %51, i16 zeroext %52) #11, !dbg !15253
  br label %if.end85, !dbg !15253

if.end85:                                         ; preds = %if.then84, %if.end80
  %53 = load i16, i16* %status, align 2, !dbg !15254
  %conv86 = zext i16 %53 to i32, !dbg !15254
  %and87 = and i32 %conv86, 64, !dbg !15256
  %tobool88 = icmp ne i32 %and87, 0, !dbg !15256
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !15257

if.then89:                                        ; preds = %if.end85
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15258
  %55 = load i16, i16* %status, align 2, !dbg !15259
  call void @cts_change(%struct.slgt_info* %54, i16 zeroext %55) #11, !dbg !15260
  br label %if.end90, !dbg !15260

if.end90:                                         ; preds = %if.then89, %if.end85
  %56 = load i16, i16* %status, align 2, !dbg !15261
  %conv91 = zext i16 %56 to i32, !dbg !15261
  %and92 = and i32 %conv91, 32, !dbg !15263
  %tobool93 = icmp ne i32 %and92, 0, !dbg !15263
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !15264

if.then94:                                        ; preds = %if.end90
  %57 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15265
  %58 = load i16, i16* %status, align 2, !dbg !15266
  call void @dcd_change(%struct.slgt_info* %57, i16 zeroext %58) #11, !dbg !15267
  br label %if.end95, !dbg !15267

if.end95:                                         ; preds = %if.then94, %if.end90
  %59 = load i16, i16* %status, align 2, !dbg !15268
  %conv96 = zext i16 %59 to i32, !dbg !15268
  %and97 = and i32 %conv96, 16, !dbg !15270
  %tobool98 = icmp ne i32 %and97, 0, !dbg !15270
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !15271

if.then99:                                        ; preds = %if.end95
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15272
  %61 = load i16, i16* %status, align 2, !dbg !15273
  call void @ri_change(%struct.slgt_info* %60, i16 zeroext %61) #11, !dbg !15274
  br label %if.end100, !dbg !15274

if.end100:                                        ; preds = %if.then99, %if.end95
  ret void, !dbg !15275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_rdma(%struct.slgt_info* %info) #1 !dbg !15276 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15277, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15279, metadata !DIExpression()), !dbg !15280
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15281
  %call = call i32 @rd_reg32(%struct.slgt_info* %0, i32 144) #11, !dbg !15282
  store i32 %call, i32* %status, align 4, !dbg !15280
  %1 = load i32, i32* @debug_level, align 4, !dbg !15283
  %cmp = icmp sge i32 %1, 5, !dbg !15283
  br i1 %cmp, label %if.then, label %if.end, !dbg !15285

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15283
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 4, !dbg !15283
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15283
  %3 = load i32, i32* %status, align 4, !dbg !15283
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !15283
  br label %if.end, !dbg !15283

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15286
  %5 = load i32, i32* %status, align 4, !dbg !15287
  call void @wr_reg32(%struct.slgt_info* %4, i32 144, i32 %5) #11, !dbg !15288
  %6 = load i32, i32* %status, align 4, !dbg !15289
  %and = and i32 %6, 48, !dbg !15291
  %tobool = icmp ne i32 %and, 0, !dbg !15291
  br i1 %tobool, label %if.then2, label %if.end9, !dbg !15292

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* @debug_level, align 4, !dbg !15293
  %cmp3 = icmp sge i32 %7, 5, !dbg !15293
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !15296

if.then4:                                         ; preds = %if.then2
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15293
  %device_name5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 4, !dbg !15293
  %arraydecay6 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name5, i64 0, i64 0, !dbg !15293
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.71, i64 0, i64 0), i8* %arraydecay6) #12, !dbg !15293
  br label %if.end8, !dbg !15293

if.end8:                                          ; preds = %if.then4, %if.then2
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15297
  %rx_restart = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 46, !dbg !15298
  store i8 1, i8* %rx_restart, align 1, !dbg !15299
  br label %if.end9, !dbg !15300

if.end9:                                          ; preds = %if.end8, %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15301
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 24, !dbg !15302
  %11 = load i32, i32* %pending_bh, align 8, !dbg !15303
  %or = or i32 %11, 1, !dbg !15303
  store i32 %or, i32* %pending_bh, align 8, !dbg !15303
  ret void, !dbg !15304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_tdma(%struct.slgt_info* %info) #1 !dbg !15305 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15306, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15308, metadata !DIExpression()), !dbg !15309
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15310
  %call = call i32 @rd_reg32(%struct.slgt_info* %0, i32 148) #11, !dbg !15311
  store i32 %call, i32* %status, align 4, !dbg !15309
  %1 = load i32, i32* @debug_level, align 4, !dbg !15312
  %cmp = icmp sge i32 %1, 5, !dbg !15312
  br i1 %cmp, label %if.then, label %if.end, !dbg !15314

if.then:                                          ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15312
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 4, !dbg !15312
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15312
  %3 = load i32, i32* %status, align 4, !dbg !15312
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !15312
  br label %if.end, !dbg !15312

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15315
  %5 = load i32, i32* %status, align 4, !dbg !15316
  call void @wr_reg32(%struct.slgt_info* %4, i32 148, i32 %5) #11, !dbg !15317
  %6 = load i32, i32* %status, align 4, !dbg !15318
  %and = and i32 %6, 56, !dbg !15320
  %tobool = icmp ne i32 %and, 0, !dbg !15320
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !15321

if.then2:                                         ; preds = %if.end
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15322
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 24, !dbg !15324
  %8 = load i32, i32* %pending_bh, align 8, !dbg !15325
  %or = or i32 %8, 2, !dbg !15325
  store i32 %or, i32* %pending_bh, align 8, !dbg !15325
  br label %if.end3, !dbg !15326

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !15327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_gpio(%struct.slgt_info* %info, i32 %changed, i32 %state) #1 !dbg !15328 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %changed.addr = alloca i32, align 4
  %state.addr = alloca i32, align 4
  %w = alloca %struct.cond_wait*, align 8
  %prev = alloca %struct.cond_wait*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15329, metadata !DIExpression()), !dbg !15330
  store i32 %changed, i32* %changed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %changed.addr, metadata !15331, metadata !DIExpression()), !dbg !15332
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !15333, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %w, metadata !15335, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %prev, metadata !15337, metadata !DIExpression()), !dbg !15338
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15339
  %gpio_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 21, !dbg !15341
  %1 = load %struct.cond_wait*, %struct.cond_wait** %gpio_wait_q, align 8, !dbg !15341
  store %struct.cond_wait* %1, %struct.cond_wait** %w, align 8, !dbg !15342
  store %struct.cond_wait* null, %struct.cond_wait** %prev, align 8, !dbg !15343
  br label %for.cond, !dbg !15344

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15345
  %cmp = icmp ne %struct.cond_wait* %2, null, !dbg !15347
  br i1 %cmp, label %for.body, label %for.end, !dbg !15348

for.body:                                         ; preds = %for.cond
  %3 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15349
  %data = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %3, i32 0, i32 3, !dbg !15352
  %4 = load i32, i32* %data, align 8, !dbg !15352
  %5 = load i32, i32* %changed.addr, align 4, !dbg !15353
  %and = and i32 %4, %5, !dbg !15354
  %tobool = icmp ne i32 %and, 0, !dbg !15354
  br i1 %tobool, label %if.then, label %if.else7, !dbg !15355

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %state.addr, align 4, !dbg !15356
  %7 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15358
  %data1 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %7, i32 0, i32 3, !dbg !15359
  store i32 %6, i32* %data1, align 8, !dbg !15360
  %8 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15361
  %q = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %8, i32 0, i32 1, !dbg !15361
  call void @__wake_up(%struct.wait_queue_head* %q, i32 1, i32 1, i8* null) #11, !dbg !15361
  %9 = load %struct.cond_wait*, %struct.cond_wait** %prev, align 8, !dbg !15362
  %cmp2 = icmp ne %struct.cond_wait* %9, null, !dbg !15364
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !15365

if.then3:                                         ; preds = %if.then
  %10 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15366
  %next = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %10, i32 0, i32 0, !dbg !15367
  %11 = load %struct.cond_wait*, %struct.cond_wait** %next, align 8, !dbg !15367
  %12 = load %struct.cond_wait*, %struct.cond_wait** %prev, align 8, !dbg !15368
  %next4 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %12, i32 0, i32 0, !dbg !15369
  store %struct.cond_wait* %11, %struct.cond_wait** %next4, align 8, !dbg !15370
  br label %if.end, !dbg !15368

if.else:                                          ; preds = %if.then
  %13 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15371
  %next5 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %13, i32 0, i32 0, !dbg !15372
  %14 = load %struct.cond_wait*, %struct.cond_wait** %next5, align 8, !dbg !15372
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15373
  %gpio_wait_q6 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 21, !dbg !15374
  store %struct.cond_wait* %14, %struct.cond_wait** %gpio_wait_q6, align 8, !dbg !15375
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end8, !dbg !15376

if.else7:                                         ; preds = %for.body
  %16 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15377
  store %struct.cond_wait* %16, %struct.cond_wait** %prev, align 8, !dbg !15378
  br label %if.end8

if.end8:                                          ; preds = %if.else7, %if.end
  br label %for.inc, !dbg !15379

for.inc:                                          ; preds = %if.end8
  %17 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !15380
  %next9 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %17, i32 0, i32 0, !dbg !15381
  %18 = load %struct.cond_wait*, %struct.cond_wait** %next9, align 8, !dbg !15381
  store %struct.cond_wait* %18, %struct.cond_wait** %w, align 8, !dbg !15382
  br label %for.cond, !dbg !15383, !llvm.loop !15384

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #1 !dbg !15387 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15390, metadata !DIExpression()), !dbg !15391
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !15392
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !15393
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !15394
  ret i1 %call, !dbg !15395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_txeom(%struct.slgt_info* %info, i16 zeroext %status) #1 !dbg !15396 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status.addr = alloca i16, align 2
  %val = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15399, metadata !DIExpression()), !dbg !15400
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !15401, metadata !DIExpression()), !dbg !15402
  %0 = load i32, i32* @debug_level, align 4, !dbg !15403
  %cmp = icmp sge i32 %0, 5, !dbg !15403
  br i1 %cmp, label %if.then, label %if.end, !dbg !15405

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15403
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !15403
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15403
  %2 = load i16, i16* %status.addr, align 2, !dbg !15403
  %conv = zext i16 %2 to i32, !dbg !15403
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay, i32 %conv) #12, !dbg !15403
  br label %if.end, !dbg !15403

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15406
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15406
  %call1 = call zeroext i16 @rd_reg16(%struct.slgt_info* %4, i32 140) #11, !dbg !15406
  %conv2 = zext i16 %call1 to i32, !dbg !15406
  %and = and i32 %conv2, -14337, !dbg !15406
  %conv3 = trunc i32 %and to i16, !dbg !15406
  call void @wr_reg16(%struct.slgt_info* %3, i32 140, i16 zeroext %conv3) #11, !dbg !15406
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15407
  call void @tdma_reset(%struct.slgt_info* %5) #11, !dbg !15408
  %6 = load i16, i16* %status.addr, align 2, !dbg !15409
  %conv4 = zext i16 %6 to i32, !dbg !15409
  %and5 = and i32 %conv4, 2048, !dbg !15411
  %tobool = icmp ne i32 %and5, 0, !dbg !15411
  br i1 %tobool, label %if.then6, label %if.end10, !dbg !15412

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %val, metadata !15413, metadata !DIExpression()), !dbg !15415
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15416
  %call7 = call zeroext i16 @rd_reg16(%struct.slgt_info* %7, i32 130) #11, !dbg !15417
  store i16 %call7, i16* %val, align 2, !dbg !15415
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15418
  %9 = load i16, i16* %val, align 2, !dbg !15419
  %conv8 = zext i16 %9 to i32, !dbg !15419
  %or = or i32 %conv8, 4, !dbg !15420
  %conv9 = trunc i32 %or to i16, !dbg !15421
  call void @wr_reg16(%struct.slgt_info* %8, i32 130, i16 zeroext %conv9) #11, !dbg !15422
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15423
  %11 = load i16, i16* %val, align 2, !dbg !15424
  call void @wr_reg16(%struct.slgt_info* %10, i32 130, i16 zeroext %11) #11, !dbg !15425
  br label %if.end10, !dbg !15426

if.end10:                                         ; preds = %if.then6, %if.end
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15427
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 48, !dbg !15429
  %13 = load i8, i8* %tx_active, align 1, !dbg !15429
  %tobool11 = trunc i8 %13 to i1, !dbg !15429
  br i1 %tobool11, label %if.then12, label %if.end62, !dbg !15430

if.then12:                                        ; preds = %if.end10
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15431
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 36, !dbg !15434
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !15435
  %15 = load i64, i64* %mode, align 8, !dbg !15435
  %cmp13 = icmp ne i64 %15, 1, !dbg !15436
  br i1 %cmp13, label %if.then15, label %if.end28, !dbg !15437

if.then15:                                        ; preds = %if.then12
  %16 = load i16, i16* %status.addr, align 2, !dbg !15438
  %conv16 = zext i16 %16 to i32, !dbg !15438
  %and17 = and i32 %conv16, 2048, !dbg !15441
  %tobool18 = icmp ne i32 %and17, 0, !dbg !15441
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !15442

if.then19:                                        ; preds = %if.then15
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15443
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 11, !dbg !15444
  %txunder = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 12, !dbg !15445
  %18 = load i32, i32* %txunder, align 4, !dbg !15446
  %inc = add i32 %18, 1, !dbg !15446
  store i32 %inc, i32* %txunder, align 4, !dbg !15446
  br label %if.end27, !dbg !15443

if.else:                                          ; preds = %if.then15
  %19 = load i16, i16* %status.addr, align 2, !dbg !15447
  %conv20 = zext i16 %19 to i32, !dbg !15447
  %and21 = and i32 %conv20, 4096, !dbg !15449
  %tobool22 = icmp ne i32 %and21, 0, !dbg !15449
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !15450

if.then23:                                        ; preds = %if.else
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15451
  %icount24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 11, !dbg !15452
  %txok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount24, i32 0, i32 11, !dbg !15453
  %21 = load i32, i32* %txok, align 4, !dbg !15454
  %inc25 = add i32 %21, 1, !dbg !15454
  store i32 %inc25, i32* %txok, align 4, !dbg !15454
  br label %if.end26, !dbg !15451

if.end26:                                         ; preds = %if.then23, %if.else
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then19
  br label %if.end28, !dbg !15455

if.end28:                                         ; preds = %if.end27, %if.then12
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15456
  %call29 = call zeroext i1 @unsent_tbufs(%struct.slgt_info* %22) #11, !dbg !15458
  br i1 %call29, label %if.then30, label %if.end31, !dbg !15459

if.then30:                                        ; preds = %if.end28
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15460
  call void @tx_start(%struct.slgt_info* %23) #11, !dbg !15462
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15463
  call void @update_tx_timer(%struct.slgt_info* %24) #11, !dbg !15464
  br label %if.end62, !dbg !15465

if.end31:                                         ; preds = %if.end28
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15466
  %tx_active32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 48, !dbg !15467
  store i8 0, i8* %tx_active32, align 1, !dbg !15468
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15469
  %tx_timer = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 18, !dbg !15470
  %call33 = call i32 @del_timer(%struct.timer_list* %tx_timer) #11, !dbg !15471
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15472
  %params34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 36, !dbg !15474
  %mode35 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params34, i32 0, i32 0, !dbg !15475
  %28 = load i64, i64* %mode35, align 8, !dbg !15475
  %cmp36 = icmp ne i64 %28, 1, !dbg !15476
  br i1 %cmp36, label %land.lhs.true, label %if.end45, !dbg !15477

land.lhs.true:                                    ; preds = %if.end31
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15478
  %drop_rts_on_tx_done = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 54, !dbg !15479
  %30 = load i8, i8* %drop_rts_on_tx_done, align 8, !dbg !15479
  %tobool38 = trunc i8 %30 to i1, !dbg !15479
  br i1 %tobool38, label %if.then40, label %if.end45, !dbg !15480

if.then40:                                        ; preds = %land.lhs.true
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15481
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 49, !dbg !15483
  %32 = load i8, i8* %signals, align 4, !dbg !15484
  %conv41 = zext i8 %32 to i32, !dbg !15484
  %and42 = and i32 %conv41, -33, !dbg !15484
  %conv43 = trunc i32 %and42 to i8, !dbg !15484
  store i8 %conv43, i8* %signals, align 4, !dbg !15484
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15485
  %drop_rts_on_tx_done44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 54, !dbg !15486
  store i8 0, i8* %drop_rts_on_tx_done44, align 8, !dbg !15487
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15488
  call void @set_signals(%struct.slgt_info* %34) #11, !dbg !15489
  br label %if.end45, !dbg !15490

if.end45:                                         ; preds = %if.then40, %land.lhs.true, %if.end31
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15491
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 74, !dbg !15493
  %36 = load i32, i32* %netcount, align 4, !dbg !15493
  %tobool46 = icmp ne i32 %36, 0, !dbg !15491
  br i1 %tobool46, label %if.then47, label %if.else48, !dbg !15494

if.then47:                                        ; preds = %if.end45
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15495
  call void @hdlcdev_tx_done(%struct.slgt_info* %37) #11, !dbg !15496
  br label %if.end61, !dbg !15496

if.else48:                                        ; preds = %if.end45
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15497
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 1, !dbg !15500
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !15501
  %39 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !15501
  %tobool49 = icmp ne %struct.tty_struct* %39, null, !dbg !15497
  br i1 %tobool49, label %land.lhs.true50, label %if.end59, !dbg !15502

land.lhs.true50:                                  ; preds = %if.else48
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15503
  %port51 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 1, !dbg !15504
  %tty52 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port51, i32 0, i32 1, !dbg !15505
  %41 = load %struct.tty_struct*, %struct.tty_struct** %tty52, align 8, !dbg !15505
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %41, i32 0, i32 24, !dbg !15506
  %bf.load = load i8, i8* %stopped, align 4, !dbg !15506
  %bf.clear = and i8 %bf.load, 1, !dbg !15506
  %bf.cast = zext i8 %bf.clear to i64, !dbg !15506
  %conv53 = trunc i64 %bf.cast to i32, !dbg !15503
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !15503
  br i1 %tobool54, label %if.then58, label %lor.lhs.false, !dbg !15507

lor.lhs.false:                                    ; preds = %land.lhs.true50
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15508
  %port55 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 1, !dbg !15509
  %tty56 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port55, i32 0, i32 1, !dbg !15510
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty56, align 8, !dbg !15510
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %43, i32 0, i32 26, !dbg !15511
  %44 = load i32, i32* %hw_stopped, align 8, !dbg !15511
  %tobool57 = icmp ne i32 %44, 0, !dbg !15508
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !15512

if.then58:                                        ; preds = %lor.lhs.false, %land.lhs.true50
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15513
  call void @tx_stop(%struct.slgt_info* %45) #11, !dbg !15515
  br label %if.end62, !dbg !15516

if.end59:                                         ; preds = %lor.lhs.false, %if.else48
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15517
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 24, !dbg !15518
  %47 = load i32, i32* %pending_bh, align 8, !dbg !15519
  %or60 = or i32 %47, 2, !dbg !15519
  store i32 %or60, i32* %pending_bh, align 8, !dbg !15519
  br label %if.end61

if.end61:                                         ; preds = %if.end59, %if.then47
  br label %if.end62, !dbg !15520

if.end62:                                         ; preds = %if.then30, %if.then58, %if.end61, %if.end10
  ret void, !dbg !15521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @isr_rxdata(%struct.slgt_info* %info) #1 !dbg !15522 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %reg = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15523, metadata !DIExpression()), !dbg !15524
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15525, metadata !DIExpression()), !dbg !15526
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15527
  %rbuf_fill_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 67, !dbg !15528
  %1 = load i16, i16* %rbuf_fill_count, align 4, !dbg !15528
  %conv = zext i16 %1 to i32, !dbg !15527
  store i32 %conv, i32* %count, align 4, !dbg !15526
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15529, metadata !DIExpression()), !dbg !15530
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15531
  %rbuf_fill_index = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 66, !dbg !15532
  %3 = load i32, i32* %rbuf_fill_index, align 8, !dbg !15532
  store i32 %3, i32* %i, align 4, !dbg !15530
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !15533, metadata !DIExpression()), !dbg !15534
  br label %while.cond, !dbg !15535

while.cond:                                       ; preds = %if.end55, %if.then9, %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15536
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %4, i32 142) #11, !dbg !15537
  %conv1 = zext i16 %call to i32, !dbg !15537
  %and = and i32 %conv1, 1024, !dbg !15538
  %tobool = icmp ne i32 %and, 0, !dbg !15535
  br i1 %tobool, label %while.body, label %while.end, !dbg !15535

while.body:                                       ; preds = %while.cond
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15539
  %call2 = call zeroext i16 @rd_reg16(%struct.slgt_info* %5, i32 128) #11, !dbg !15541
  store i16 %call2, i16* %reg, align 2, !dbg !15542
  %6 = load i32, i32* @debug_level, align 4, !dbg !15543
  %cmp = icmp sge i32 %6, 5, !dbg !15543
  br i1 %cmp, label %if.then, label %if.end, !dbg !15545

if.then:                                          ; preds = %while.body
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15543
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 4, !dbg !15543
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15543
  %8 = load i16, i16* %reg, align 2, !dbg !15543
  %conv4 = zext i16 %8 to i32, !dbg !15543
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0), i8* %arraydecay, i32 %conv4) #12, !dbg !15543
  br label %if.end, !dbg !15543

if.end:                                           ; preds = %if.then, %while.body
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15546
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 63, !dbg !15546
  %10 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !15546
  %11 = load i32, i32* %i, align 4, !dbg !15546
  %idxprom = zext i32 %11 to i64, !dbg !15546
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %10, i64 %idxprom, !dbg !15546
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !15546
  %12 = load i16, i16* %status, align 2, !dbg !15546
  %conv6 = zext i16 %12 to i32, !dbg !15546
  %and7 = and i32 %conv6, 32768, !dbg !15546
  %tobool8 = icmp ne i32 %and7, 0, !dbg !15546
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15548

if.then9:                                         ; preds = %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15549
  call void @rx_stop(%struct.slgt_info* %13) #11, !dbg !15551
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15552
  %rx_restart = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 46, !dbg !15553
  store i8 1, i8* %rx_restart, align 1, !dbg !15554
  br label %while.cond, !dbg !15555, !llvm.loop !15556

if.end10:                                         ; preds = %if.end
  %15 = load i16, i16* %reg, align 2, !dbg !15558
  %conv11 = trunc i16 %15 to i8, !dbg !15559
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15560
  %rbufs12 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 63, !dbg !15561
  %17 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs12, align 8, !dbg !15561
  %18 = load i32, i32* %i, align 4, !dbg !15562
  %idxprom13 = zext i32 %18 to i64, !dbg !15560
  %arrayidx14 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %17, i64 %idxprom13, !dbg !15560
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx14, i32 0, i32 4, !dbg !15563
  %19 = load i8*, i8** %buf, align 8, !dbg !15563
  %20 = load i32, i32* %count, align 4, !dbg !15564
  %inc = add i32 %20, 1, !dbg !15564
  store i32 %inc, i32* %count, align 4, !dbg !15564
  %idxprom15 = zext i32 %20 to i64, !dbg !15560
  %arrayidx16 = getelementptr i8, i8* %19, i64 %idxprom15, !dbg !15560
  store i8 %conv11, i8* %arrayidx16, align 1, !dbg !15565
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15566
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 36, !dbg !15568
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !15569
  %22 = load i64, i64* %mode, align 8, !dbg !15569
  %cmp17 = icmp eq i64 %22, 1, !dbg !15570
  br i1 %cmp17, label %if.then19, label %if.end29, !dbg !15571

if.then19:                                        ; preds = %if.end10
  %23 = load i16, i16* %reg, align 2, !dbg !15572
  %conv20 = zext i16 %23 to i32, !dbg !15572
  %shr = ashr i32 %conv20, 8, !dbg !15573
  %conv21 = trunc i32 %shr to i8, !dbg !15574
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15575
  %rbufs22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 63, !dbg !15576
  %25 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs22, align 8, !dbg !15576
  %26 = load i32, i32* %i, align 4, !dbg !15577
  %idxprom23 = zext i32 %26 to i64, !dbg !15575
  %arrayidx24 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %25, i64 %idxprom23, !dbg !15575
  %buf25 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx24, i32 0, i32 4, !dbg !15578
  %27 = load i8*, i8** %buf25, align 8, !dbg !15578
  %28 = load i32, i32* %count, align 4, !dbg !15579
  %inc26 = add i32 %28, 1, !dbg !15579
  store i32 %inc26, i32* %count, align 4, !dbg !15579
  %idxprom27 = zext i32 %28 to i64, !dbg !15575
  %arrayidx28 = getelementptr i8, i8* %27, i64 %idxprom27, !dbg !15575
  store i8 %conv21, i8* %arrayidx28, align 1, !dbg !15580
  br label %if.end29, !dbg !15575

if.end29:                                         ; preds = %if.then19, %if.end10
  %29 = load i32, i32* %count, align 4, !dbg !15581
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15583
  %rbuf_fill_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 39, !dbg !15584
  %31 = load i32, i32* %rbuf_fill_level, align 8, !dbg !15584
  %cmp30 = icmp eq i32 %29, %31, !dbg !15585
  br i1 %cmp30, label %if.then35, label %lor.lhs.false, !dbg !15586

lor.lhs.false:                                    ; preds = %if.end29
  %32 = load i16, i16* %reg, align 2, !dbg !15587
  %conv32 = zext i16 %32 to i32, !dbg !15587
  %and33 = and i32 %conv32, 1024, !dbg !15588
  %tobool34 = icmp ne i32 %and33, 0, !dbg !15588
  br i1 %tobool34, label %if.then35, label %if.end55, !dbg !15589

if.then35:                                        ; preds = %lor.lhs.false, %if.end29
  %33 = load i32, i32* %count, align 4, !dbg !15590
  %conv36 = trunc i32 %33 to i16, !dbg !15590
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15590
  %rbufs37 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %34, i32 0, i32 63, !dbg !15590
  %35 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs37, align 8, !dbg !15590
  %36 = load i32, i32* %i, align 4, !dbg !15590
  %idxprom38 = zext i32 %36 to i64, !dbg !15590
  %arrayidx39 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %35, i64 %idxprom38, !dbg !15590
  %count40 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx39, i32 0, i32 0, !dbg !15590
  store i16 %conv36, i16* %count40, align 8, !dbg !15590
  %37 = load i16, i16* %reg, align 2, !dbg !15592
  %conv41 = zext i16 %37 to i32, !dbg !15592
  %shr42 = ashr i32 %conv41, 8, !dbg !15592
  %or = or i32 32768, %shr42, !dbg !15592
  %conv43 = trunc i32 %or to i16, !dbg !15592
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15592
  %rbufs44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 63, !dbg !15592
  %39 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs44, align 8, !dbg !15592
  %40 = load i32, i32* %i, align 4, !dbg !15592
  %idxprom45 = zext i32 %40 to i64, !dbg !15592
  %arrayidx46 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %39, i64 %idxprom45, !dbg !15592
  %status47 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx46, i32 0, i32 1, !dbg !15592
  store i16 %conv43, i16* %status47, align 2, !dbg !15592
  store i32 0, i32* %count, align 4, !dbg !15593
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15594
  %rbuf_fill_count48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %41, i32 0, i32 67, !dbg !15595
  store i16 0, i16* %rbuf_fill_count48, align 4, !dbg !15596
  %42 = load i32, i32* %i, align 4, !dbg !15597
  %inc49 = add i32 %42, 1, !dbg !15597
  store i32 %inc49, i32* %i, align 4, !dbg !15597
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15599
  %rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 62, !dbg !15600
  %44 = load i32, i32* %rbuf_count, align 8, !dbg !15600
  %cmp50 = icmp eq i32 %inc49, %44, !dbg !15601
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !15602

if.then52:                                        ; preds = %if.then35
  store i32 0, i32* %i, align 4, !dbg !15603
  br label %if.end53, !dbg !15604

if.end53:                                         ; preds = %if.then52, %if.then35
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15605
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 24, !dbg !15606
  %46 = load i32, i32* %pending_bh, align 8, !dbg !15607
  %or54 = or i32 %46, 1, !dbg !15607
  store i32 %or54, i32* %pending_bh, align 8, !dbg !15607
  br label %if.end55, !dbg !15608

if.end55:                                         ; preds = %if.end53, %lor.lhs.false
  br label %while.cond, !dbg !15535, !llvm.loop !15556

while.end:                                        ; preds = %while.cond
  %47 = load i32, i32* %i, align 4, !dbg !15609
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15610
  %rbuf_fill_index56 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 66, !dbg !15611
  store i32 %47, i32* %rbuf_fill_index56, align 8, !dbg !15612
  %49 = load i32, i32* %count, align 4, !dbg !15613
  %conv57 = trunc i32 %49 to i16, !dbg !15613
  %50 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15614
  %rbuf_fill_count58 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %50, i32 0, i32 67, !dbg !15615
  store i16 %conv57, i16* %rbuf_fill_count58, align 4, !dbg !15616
  ret void, !dbg !15617
}

; Function Attrs: noredzone
declare dso_local void @do_SAK(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dsr_change(%struct.slgt_info* %info, i16 zeroext %status) #1 !dbg !15618 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status.addr = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !15621, metadata !DIExpression()), !dbg !15622
  %0 = load i16, i16* %status.addr, align 2, !dbg !15623
  %conv = zext i16 %0 to i32, !dbg !15623
  %and = and i32 %conv, 8, !dbg !15625
  %tobool = icmp ne i32 %and, 0, !dbg !15625
  br i1 %tobool, label %if.then, label %if.else, !dbg !15626

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15627
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !15629
  %2 = load i8, i8* %signals, align 4, !dbg !15630
  %conv1 = zext i8 %2 to i32, !dbg !15630
  %or = or i32 %conv1, 64, !dbg !15630
  %conv2 = trunc i32 %or to i8, !dbg !15630
  store i8 %conv2, i8* %signals, align 4, !dbg !15630
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15631
  %input_signal_events = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 55, !dbg !15632
  %dsr_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events, i32 0, i32 2, !dbg !15633
  %4 = load i32, i32* %dsr_up, align 4, !dbg !15634
  %inc = add i32 %4, 1, !dbg !15634
  store i32 %inc, i32* %dsr_up, align 4, !dbg !15634
  br label %if.end, !dbg !15635

if.else:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15636
  %signals3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 49, !dbg !15638
  %6 = load i8, i8* %signals3, align 4, !dbg !15639
  %conv4 = zext i8 %6 to i32, !dbg !15639
  %and5 = and i32 %conv4, -65, !dbg !15639
  %conv6 = trunc i32 %and5 to i8, !dbg !15639
  store i8 %conv6, i8* %signals3, align 4, !dbg !15639
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15640
  %input_signal_events7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 55, !dbg !15641
  %dsr_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events7, i32 0, i32 3, !dbg !15642
  %8 = load i32, i32* %dsr_down, align 4, !dbg !15643
  %inc8 = add i32 %8, 1, !dbg !15643
  store i32 %inc8, i32* %dsr_down, align 4, !dbg !15643
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* @debug_level, align 4, !dbg !15644
  %cmp = icmp sge i32 %9, 5, !dbg !15644
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !15646

if.then10:                                        ; preds = %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15644
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 4, !dbg !15644
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15644
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15644
  %signals11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !15644
  %12 = load i8, i8* %signals11, align 4, !dbg !15644
  %conv12 = zext i8 %12 to i32, !dbg !15644
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0), i8* %arraydecay, i32 %conv12) #12, !dbg !15644
  br label %if.end13, !dbg !15644

if.end13:                                         ; preds = %if.then10, %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15647
  %dsr_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 58, !dbg !15649
  %14 = load i32, i32* %dsr_chkcount, align 4, !dbg !15650
  %inc14 = add i32 %14, 1, !dbg !15650
  store i32 %inc14, i32* %dsr_chkcount, align 4, !dbg !15650
  %cmp15 = icmp eq i32 %14, 100, !dbg !15651
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !15652

if.then17:                                        ; preds = %if.end13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15653
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15653
  %call18 = call zeroext i16 @rd_reg16(%struct.slgt_info* %16, i32 140) #11, !dbg !15653
  %conv19 = zext i16 %call18 to i32, !dbg !15653
  %and20 = and i32 %conv19, -129, !dbg !15653
  %conv21 = trunc i32 %and20 to i16, !dbg !15653
  call void @wr_reg16(%struct.slgt_info* %15, i32 140, i16 zeroext %conv21) #11, !dbg !15653
  br label %return, !dbg !15655

if.end22:                                         ; preds = %if.end13
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15656
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 11, !dbg !15657
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 1, !dbg !15658
  %18 = load i32, i32* %dsr, align 4, !dbg !15659
  %inc23 = add i32 %18, 1, !dbg !15659
  store i32 %inc23, i32* %dsr, align 4, !dbg !15659
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15660
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 16, !dbg !15660
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15660
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15661
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 17, !dbg !15661
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15661
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15662
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 24, !dbg !15663
  %22 = load i32, i32* %pending_bh, align 8, !dbg !15664
  %or24 = or i32 %22, 4, !dbg !15664
  store i32 %or24, i32* %pending_bh, align 8, !dbg !15664
  br label %return, !dbg !15665

return:                                           ; preds = %if.end22, %if.then17
  ret void, !dbg !15665
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cts_change(%struct.slgt_info* %info, i16 zeroext %status) #1 !dbg !15666 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status.addr = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15667, metadata !DIExpression()), !dbg !15668
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !15669, metadata !DIExpression()), !dbg !15670
  %0 = load i16, i16* %status.addr, align 2, !dbg !15671
  %conv = zext i16 %0 to i32, !dbg !15671
  %and = and i32 %conv, 4, !dbg !15673
  %tobool = icmp ne i32 %and, 0, !dbg !15673
  br i1 %tobool, label %if.then, label %if.else, !dbg !15674

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15675
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !15677
  %2 = load i8, i8* %signals, align 4, !dbg !15678
  %conv1 = zext i8 %2 to i32, !dbg !15678
  %or = or i32 %conv1, 16, !dbg !15678
  %conv2 = trunc i32 %or to i8, !dbg !15678
  store i8 %conv2, i8* %signals, align 4, !dbg !15678
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15679
  %input_signal_events = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 55, !dbg !15680
  %cts_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events, i32 0, i32 6, !dbg !15681
  %4 = load i32, i32* %cts_up, align 4, !dbg !15682
  %inc = add i32 %4, 1, !dbg !15682
  store i32 %inc, i32* %cts_up, align 4, !dbg !15682
  br label %if.end, !dbg !15683

if.else:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15684
  %signals3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 49, !dbg !15686
  %6 = load i8, i8* %signals3, align 4, !dbg !15687
  %conv4 = zext i8 %6 to i32, !dbg !15687
  %and5 = and i32 %conv4, -17, !dbg !15687
  %conv6 = trunc i32 %and5 to i8, !dbg !15687
  store i8 %conv6, i8* %signals3, align 4, !dbg !15687
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15688
  %input_signal_events7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 55, !dbg !15689
  %cts_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events7, i32 0, i32 7, !dbg !15690
  %8 = load i32, i32* %cts_down, align 4, !dbg !15691
  %inc8 = add i32 %8, 1, !dbg !15691
  store i32 %inc8, i32* %cts_down, align 4, !dbg !15691
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* @debug_level, align 4, !dbg !15692
  %cmp = icmp sge i32 %9, 5, !dbg !15692
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !15694

if.then10:                                        ; preds = %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15692
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 4, !dbg !15692
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15692
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15692
  %signals11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !15692
  %12 = load i8, i8* %signals11, align 4, !dbg !15692
  %conv12 = zext i8 %12 to i32, !dbg !15692
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8* %arraydecay, i32 %conv12) #12, !dbg !15692
  br label %if.end13, !dbg !15692

if.end13:                                         ; preds = %if.then10, %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15695
  %cts_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 57, !dbg !15697
  %14 = load i32, i32* %cts_chkcount, align 8, !dbg !15698
  %inc14 = add i32 %14, 1, !dbg !15698
  store i32 %inc14, i32* %cts_chkcount, align 8, !dbg !15698
  %cmp15 = icmp eq i32 %14, 100, !dbg !15699
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !15700

if.then17:                                        ; preds = %if.end13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15701
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15701
  %call18 = call zeroext i16 @rd_reg16(%struct.slgt_info* %16, i32 140) #11, !dbg !15701
  %conv19 = zext i16 %call18 to i32, !dbg !15701
  %and20 = and i32 %conv19, -65, !dbg !15701
  %conv21 = trunc i32 %and20 to i16, !dbg !15701
  call void @wr_reg16(%struct.slgt_info* %15, i32 140, i16 zeroext %conv21) #11, !dbg !15701
  br label %if.end57, !dbg !15703

if.end22:                                         ; preds = %if.end13
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15704
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 11, !dbg !15705
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 0, !dbg !15706
  %18 = load i32, i32* %cts, align 4, !dbg !15707
  %inc23 = add i32 %18, 1, !dbg !15707
  store i32 %inc23, i32* %cts, align 4, !dbg !15707
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15708
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 16, !dbg !15708
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15708
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15709
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 17, !dbg !15709
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15709
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15710
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 24, !dbg !15711
  %22 = load i32, i32* %pending_bh, align 8, !dbg !15712
  %or24 = or i32 %22, 4, !dbg !15712
  store i32 %or24, i32* %pending_bh, align 8, !dbg !15712
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15713
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 1, !dbg !15715
  %call25 = call zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port) #11, !dbg !15716
  br i1 %call25, label %if.then26, label %if.end57, !dbg !15717

if.then26:                                        ; preds = %if.end22
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15718
  %port27 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 1, !dbg !15721
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port27, i32 0, i32 1, !dbg !15722
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !15722
  %tobool28 = icmp ne %struct.tty_struct* %25, null, !dbg !15718
  br i1 %tobool28, label %if.then29, label %if.end56, !dbg !15723

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15724
  %port30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 1, !dbg !15727
  %tty31 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 1, !dbg !15728
  %27 = load %struct.tty_struct*, %struct.tty_struct** %tty31, align 8, !dbg !15728
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %27, i32 0, i32 26, !dbg !15729
  %28 = load i32, i32* %hw_stopped, align 8, !dbg !15729
  %tobool32 = icmp ne i32 %28, 0, !dbg !15724
  br i1 %tobool32, label %if.then33, label %if.else45, !dbg !15730

if.then33:                                        ; preds = %if.then29
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15731
  %signals34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 49, !dbg !15734
  %30 = load i8, i8* %signals34, align 4, !dbg !15734
  %conv35 = zext i8 %30 to i32, !dbg !15731
  %and36 = and i32 %conv35, 16, !dbg !15735
  %tobool37 = icmp ne i32 %and36, 0, !dbg !15735
  br i1 %tobool37, label %if.then38, label %if.end44, !dbg !15736

if.then38:                                        ; preds = %if.then33
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15737
  %port39 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 1, !dbg !15739
  %tty40 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port39, i32 0, i32 1, !dbg !15740
  %32 = load %struct.tty_struct*, %struct.tty_struct** %tty40, align 8, !dbg !15740
  %hw_stopped41 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %32, i32 0, i32 26, !dbg !15741
  store i32 0, i32* %hw_stopped41, align 8, !dbg !15742
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15743
  %pending_bh42 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 24, !dbg !15744
  %34 = load i32, i32* %pending_bh42, align 8, !dbg !15745
  %or43 = or i32 %34, 2, !dbg !15745
  store i32 %or43, i32* %pending_bh42, align 8, !dbg !15745
  br label %if.end57, !dbg !15746

if.end44:                                         ; preds = %if.then33
  br label %if.end55, !dbg !15747

if.else45:                                        ; preds = %if.then29
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15748
  %signals46 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 49, !dbg !15751
  %36 = load i8, i8* %signals46, align 4, !dbg !15751
  %conv47 = zext i8 %36 to i32, !dbg !15748
  %and48 = and i32 %conv47, 16, !dbg !15752
  %tobool49 = icmp ne i32 %and48, 0, !dbg !15752
  br i1 %tobool49, label %if.end54, label %if.then50, !dbg !15753

if.then50:                                        ; preds = %if.else45
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15754
  %port51 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 1, !dbg !15755
  %tty52 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port51, i32 0, i32 1, !dbg !15756
  %38 = load %struct.tty_struct*, %struct.tty_struct** %tty52, align 8, !dbg !15756
  %hw_stopped53 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %38, i32 0, i32 26, !dbg !15757
  store i32 1, i32* %hw_stopped53, align 8, !dbg !15758
  br label %if.end54, !dbg !15754

if.end54:                                         ; preds = %if.then50, %if.else45
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end44
  br label %if.end56, !dbg !15759

if.end56:                                         ; preds = %if.end55, %if.then26
  br label %if.end57, !dbg !15760

if.end57:                                         ; preds = %if.then17, %if.then38, %if.end56, %if.end22
  ret void, !dbg !15761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dcd_change(%struct.slgt_info* %info, i16 zeroext %status) #1 !dbg !15762 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status.addr = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15763, metadata !DIExpression()), !dbg !15764
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !15765, metadata !DIExpression()), !dbg !15766
  %0 = load i16, i16* %status.addr, align 2, !dbg !15767
  %conv = zext i16 %0 to i32, !dbg !15767
  %and = and i32 %conv, 2, !dbg !15769
  %tobool = icmp ne i32 %and, 0, !dbg !15769
  br i1 %tobool, label %if.then, label %if.else, !dbg !15770

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15771
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !15773
  %2 = load i8, i8* %signals, align 4, !dbg !15774
  %conv1 = zext i8 %2 to i32, !dbg !15774
  %or = or i32 %conv1, 1, !dbg !15774
  %conv2 = trunc i32 %or to i8, !dbg !15774
  store i8 %conv2, i8* %signals, align 4, !dbg !15774
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15775
  %input_signal_events = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 55, !dbg !15776
  %dcd_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events, i32 0, i32 4, !dbg !15777
  %4 = load i32, i32* %dcd_up, align 4, !dbg !15778
  %inc = add i32 %4, 1, !dbg !15778
  store i32 %inc, i32* %dcd_up, align 4, !dbg !15778
  br label %if.end, !dbg !15779

if.else:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15780
  %signals3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 49, !dbg !15782
  %6 = load i8, i8* %signals3, align 4, !dbg !15783
  %conv4 = zext i8 %6 to i32, !dbg !15783
  %and5 = and i32 %conv4, -2, !dbg !15783
  %conv6 = trunc i32 %and5 to i8, !dbg !15783
  store i8 %conv6, i8* %signals3, align 4, !dbg !15783
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15784
  %input_signal_events7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 55, !dbg !15785
  %dcd_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events7, i32 0, i32 5, !dbg !15786
  %8 = load i32, i32* %dcd_down, align 4, !dbg !15787
  %inc8 = add i32 %8, 1, !dbg !15787
  store i32 %inc8, i32* %dcd_down, align 4, !dbg !15787
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* @debug_level, align 4, !dbg !15788
  %cmp = icmp sge i32 %9, 5, !dbg !15788
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !15790

if.then10:                                        ; preds = %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15788
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 4, !dbg !15788
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15788
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15788
  %signals11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !15788
  %12 = load i8, i8* %signals11, align 4, !dbg !15788
  %conv12 = zext i8 %12 to i32, !dbg !15788
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay, i32 %conv12) #12, !dbg !15788
  br label %if.end13, !dbg !15788

if.end13:                                         ; preds = %if.then10, %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15791
  %dcd_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 56, !dbg !15793
  %14 = load i32, i32* %dcd_chkcount, align 4, !dbg !15794
  %inc14 = add i32 %14, 1, !dbg !15794
  store i32 %inc14, i32* %dcd_chkcount, align 4, !dbg !15794
  %cmp15 = icmp eq i32 %14, 100, !dbg !15795
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !15796

if.then17:                                        ; preds = %if.end13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15797
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15797
  %call18 = call zeroext i16 @rd_reg16(%struct.slgt_info* %16, i32 140) #11, !dbg !15797
  %conv19 = zext i16 %call18 to i32, !dbg !15797
  %and20 = and i32 %conv19, -33, !dbg !15797
  %conv21 = trunc i32 %and20 to i16, !dbg !15797
  call void @wr_reg16(%struct.slgt_info* %15, i32 140, i16 zeroext %conv21) #11, !dbg !15797
  br label %if.end52, !dbg !15799

if.end22:                                         ; preds = %if.end13
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15800
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 11, !dbg !15801
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 3, !dbg !15802
  %18 = load i32, i32* %dcd, align 4, !dbg !15803
  %inc23 = add i32 %18, 1, !dbg !15803
  store i32 %inc23, i32* %dcd, align 4, !dbg !15803
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15804
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 74, !dbg !15806
  %20 = load i32, i32* %netcount, align 4, !dbg !15806
  %tobool24 = icmp ne i32 %20, 0, !dbg !15804
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !15807

if.then25:                                        ; preds = %if.end22
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15808
  %signals26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 49, !dbg !15811
  %22 = load i8, i8* %signals26, align 4, !dbg !15811
  %conv27 = zext i8 %22 to i32, !dbg !15808
  %and28 = and i32 %conv27, 1, !dbg !15812
  %tobool29 = icmp ne i32 %and28, 0, !dbg !15812
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !15813

if.then30:                                        ; preds = %if.then25
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15814
  %netdev = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 76, !dbg !15815
  %24 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15815
  call void @netif_carrier_on(%struct.net_device* %24) #11, !dbg !15816
  br label %if.end33, !dbg !15816

if.else31:                                        ; preds = %if.then25
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15817
  %netdev32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 76, !dbg !15818
  %26 = load %struct.net_device*, %struct.net_device** %netdev32, align 8, !dbg !15818
  call void @netif_carrier_off(%struct.net_device* %26) #11, !dbg !15819
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then30
  br label %if.end34, !dbg !15820

if.end34:                                         ; preds = %if.end33, %if.end22
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15821
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 16, !dbg !15821
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15821
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15822
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 17, !dbg !15822
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15822
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15823
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 24, !dbg !15824
  %30 = load i32, i32* %pending_bh, align 8, !dbg !15825
  %or35 = or i32 %30, 4, !dbg !15825
  store i32 %or35, i32* %pending_bh, align 8, !dbg !15825
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15826
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 1, !dbg !15828
  %call36 = call zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #11, !dbg !15829
  br i1 %call36, label %if.then37, label %if.end52, !dbg !15830

if.then37:                                        ; preds = %if.end34
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15831
  %signals38 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 49, !dbg !15834
  %33 = load i8, i8* %signals38, align 4, !dbg !15834
  %conv39 = zext i8 %33 to i32, !dbg !15831
  %and40 = and i32 %conv39, 1, !dbg !15835
  %tobool41 = icmp ne i32 %and40, 0, !dbg !15835
  br i1 %tobool41, label %if.then42, label %if.else44, !dbg !15836

if.then42:                                        ; preds = %if.then37
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15837
  %port43 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %34, i32 0, i32 1, !dbg !15837
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port43, i32 0, i32 8, !dbg !15837
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !15837
  br label %if.end51, !dbg !15837

if.else44:                                        ; preds = %if.then37
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15838
  %port45 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 1, !dbg !15841
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port45, i32 0, i32 1, !dbg !15842
  %36 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !15842
  %tobool46 = icmp ne %struct.tty_struct* %36, null, !dbg !15838
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !15843

if.then47:                                        ; preds = %if.else44
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15844
  %port48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 1, !dbg !15845
  %tty49 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port48, i32 0, i32 1, !dbg !15846
  %38 = load %struct.tty_struct*, %struct.tty_struct** %tty49, align 8, !dbg !15846
  call void @tty_hangup(%struct.tty_struct* %38) #11, !dbg !15847
  br label %if.end50, !dbg !15847

if.end50:                                         ; preds = %if.then47, %if.else44
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then42
  br label %if.end52, !dbg !15848

if.end52:                                         ; preds = %if.then17, %if.end51, %if.end34
  ret void, !dbg !15849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ri_change(%struct.slgt_info* %info, i16 zeroext %status) #1 !dbg !15850 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %status.addr = alloca i16, align 2
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15851, metadata !DIExpression()), !dbg !15852
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !15853, metadata !DIExpression()), !dbg !15854
  %0 = load i16, i16* %status.addr, align 2, !dbg !15855
  %conv = zext i16 %0 to i32, !dbg !15855
  %and = and i32 %conv, 1, !dbg !15857
  %tobool = icmp ne i32 %and, 0, !dbg !15857
  br i1 %tobool, label %if.then, label %if.else, !dbg !15858

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15859
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 49, !dbg !15861
  %2 = load i8, i8* %signals, align 4, !dbg !15862
  %conv1 = zext i8 %2 to i32, !dbg !15862
  %or = or i32 %conv1, 4, !dbg !15862
  %conv2 = trunc i32 %or to i8, !dbg !15862
  store i8 %conv2, i8* %signals, align 4, !dbg !15862
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15863
  %input_signal_events = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 55, !dbg !15864
  %ri_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events, i32 0, i32 0, !dbg !15865
  %4 = load i32, i32* %ri_up, align 4, !dbg !15866
  %inc = add i32 %4, 1, !dbg !15866
  store i32 %inc, i32* %ri_up, align 4, !dbg !15866
  br label %if.end, !dbg !15867

if.else:                                          ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15868
  %signals3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 49, !dbg !15870
  %6 = load i8, i8* %signals3, align 4, !dbg !15871
  %conv4 = zext i8 %6 to i32, !dbg !15871
  %and5 = and i32 %conv4, -5, !dbg !15871
  %conv6 = trunc i32 %and5 to i8, !dbg !15871
  store i8 %conv6, i8* %signals3, align 4, !dbg !15871
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15872
  %input_signal_events7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 55, !dbg !15873
  %ri_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %input_signal_events7, i32 0, i32 1, !dbg !15874
  %8 = load i32, i32* %ri_down, align 4, !dbg !15875
  %inc8 = add i32 %8, 1, !dbg !15875
  store i32 %inc8, i32* %ri_down, align 4, !dbg !15875
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* @debug_level, align 4, !dbg !15876
  %cmp = icmp sge i32 %9, 5, !dbg !15876
  br i1 %cmp, label %if.then10, label %if.end13, !dbg !15878

if.then10:                                        ; preds = %if.end
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15876
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 4, !dbg !15876
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !15876
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15876
  %signals11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !15876
  %12 = load i8, i8* %signals11, align 4, !dbg !15876
  %conv12 = zext i8 %12 to i32, !dbg !15876
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* %arraydecay, i32 %conv12) #12, !dbg !15876
  br label %if.end13, !dbg !15876

if.end13:                                         ; preds = %if.then10, %if.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15879
  %ri_chkcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 59, !dbg !15881
  %14 = load i32, i32* %ri_chkcount, align 8, !dbg !15882
  %inc14 = add i32 %14, 1, !dbg !15882
  store i32 %inc14, i32* %ri_chkcount, align 8, !dbg !15882
  %cmp15 = icmp eq i32 %14, 100, !dbg !15883
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !15884

if.then17:                                        ; preds = %if.end13
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15885
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15885
  %call18 = call zeroext i16 @rd_reg16(%struct.slgt_info* %16, i32 140) #11, !dbg !15885
  %conv19 = zext i16 %call18 to i32, !dbg !15885
  %and20 = and i32 %conv19, -17, !dbg !15885
  %conv21 = trunc i32 %and20 to i16, !dbg !15885
  call void @wr_reg16(%struct.slgt_info* %15, i32 140, i16 zeroext %conv21) #11, !dbg !15885
  br label %return, !dbg !15887

if.end22:                                         ; preds = %if.end13
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15888
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 11, !dbg !15889
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 2, !dbg !15890
  %18 = load i32, i32* %rng, align 4, !dbg !15891
  %inc23 = add i32 %18, 1, !dbg !15891
  store i32 %inc23, i32* %rng, align 4, !dbg !15891
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15892
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 16, !dbg !15892
  call void @__wake_up(%struct.wait_queue_head* %status_event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15892
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15893
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 17, !dbg !15893
  call void @__wake_up(%struct.wait_queue_head* %event_wait_q, i32 1, i32 1, i8* null) #11, !dbg !15893
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15894
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 24, !dbg !15895
  %22 = load i32, i32* %pending_bh, align 8, !dbg !15896
  %or24 = or i32 %22, 4, !dbg !15896
  store i32 %or24, i32* %pending_bh, align 8, !dbg !15896
  br label %return, !dbg !15897

return:                                           ; preds = %if.end22, %if.then17
  ret void, !dbg !15897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @unsent_tbufs(%struct.slgt_info* %info) #1 !dbg !15898 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  %rc = alloca i8, align 1
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15899, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15901, metadata !DIExpression()), !dbg !15902
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15903
  %tbuf_current = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 70, !dbg !15904
  %1 = load i32, i32* %tbuf_current, align 8, !dbg !15904
  store i32 %1, i32* %i, align 4, !dbg !15902
  call void @llvm.dbg.declare(metadata i8* %rc, metadata !15905, metadata !DIExpression()), !dbg !15906
  store i8 0, i8* %rc, align 1, !dbg !15906
  br label %do.body, !dbg !15907

do.body:                                          ; preds = %do.cond, %entry
  %2 = load i32, i32* %i, align 4, !dbg !15908
  %tobool = icmp ne i32 %2, 0, !dbg !15908
  br i1 %tobool, label %if.then, label %if.else, !dbg !15911

if.then:                                          ; preds = %do.body
  %3 = load i32, i32* %i, align 4, !dbg !15912
  %dec = add i32 %3, -1, !dbg !15912
  store i32 %dec, i32* %i, align 4, !dbg !15912
  br label %if.end, !dbg !15913

if.else:                                          ; preds = %do.body
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15914
  %tbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 68, !dbg !15915
  %5 = load i32, i32* %tbuf_count, align 8, !dbg !15915
  %sub = sub i32 %5, 1, !dbg !15916
  store i32 %sub, i32* %i, align 4, !dbg !15917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15918
  %tbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 69, !dbg !15918
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %tbufs, align 8, !dbg !15918
  %8 = load i32, i32* %i, align 4, !dbg !15918
  %idxprom = zext i32 %8 to i64, !dbg !15918
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 %idxprom, !dbg !15918
  %count = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 0, !dbg !15918
  %9 = load i16, i16* %count, align 8, !dbg !15918
  %tobool1 = icmp ne i16 %9, 0, !dbg !15918
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !15920

if.then2:                                         ; preds = %if.end
  br label %do.end, !dbg !15921

if.end3:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !15922
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15923
  %tbuf_start = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 71, !dbg !15924
  store i32 %10, i32* %tbuf_start, align 4, !dbg !15925
  store i8 1, i8* %rc, align 1, !dbg !15926
  br label %do.cond, !dbg !15927

do.cond:                                          ; preds = %if.end3
  %12 = load i32, i32* %i, align 4, !dbg !15928
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15929
  %tbuf_current4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 70, !dbg !15930
  %14 = load i32, i32* %tbuf_current4, align 8, !dbg !15930
  %cmp = icmp ne i32 %12, %14, !dbg !15931
  br i1 %cmp, label %do.body, label %do.end, !dbg !15927, !llvm.loop !15932

do.end:                                           ; preds = %do.cond, %if.then2
  %15 = load i8, i8* %rc, align 1, !dbg !15934
  %tobool5 = trunc i8 %15 to i1, !dbg !15934
  ret i1 %tobool5, !dbg !15935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port) #1 !dbg !15936 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !15937, metadata !DIExpression()), !dbg !15938
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !15939
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !15940
  %call = call zeroext i1 @test_bit(i64 3, i64* %iflags) #11, !dbg !15941
  ret i1 %call, !dbg !15942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #1 !dbg !15943 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !15944, metadata !DIExpression()), !dbg !15945
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !15946
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !15947
  %call = call zeroext i1 @test_bit(i64 4, i64* %iflags) #11, !dbg !15948
  ret i1 %call, !dbg !15949
}

; Function Attrs: noredzone
declare dso_local void @tty_hangup(%struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #1 !dbg !15950 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !15953, metadata !DIExpression()), !dbg !15954
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !15955, metadata !DIExpression()), !dbg !15956
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !15957
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !15958
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !15959
  ret i1 %call, !dbg !15960
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @register_test(%struct.slgt_info* %info) #1 !dbg !8118 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15963, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15965, metadata !DIExpression()), !dbg !15966
  store i32 0, i32* %rc, align 4, !dbg !15966
  store i32 0, i32* %i, align 4, !dbg !15967
  br label %for.cond, !dbg !15969

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15970
  %1 = load i32, i32* @register_test.count, align 4, !dbg !15972
  %cmp = icmp ult i32 %0, %1, !dbg !15973
  br i1 %cmp, label %for.body, label %for.end, !dbg !15974

for.body:                                         ; preds = %for.cond
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15975
  %3 = load i32, i32* %i, align 4, !dbg !15977
  %idxprom = zext i32 %3 to i64, !dbg !15978
  %arrayidx = getelementptr [6 x i16], [6 x i16]* @register_test.patterns, i64 0, i64 %idxprom, !dbg !15978
  %4 = load i16, i16* %arrayidx, align 2, !dbg !15978
  call void @wr_reg16(%struct.slgt_info* %2, i32 132, i16 zeroext %4) #11, !dbg !15979
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15980
  %6 = load i32, i32* %i, align 4, !dbg !15981
  %add = add i32 %6, 1, !dbg !15982
  %7 = load i32, i32* @register_test.count, align 4, !dbg !15983
  %rem = urem i32 %add, %7, !dbg !15984
  %idxprom1 = zext i32 %rem to i64, !dbg !15985
  %arrayidx2 = getelementptr [6 x i16], [6 x i16]* @register_test.patterns, i64 0, i64 %idxprom1, !dbg !15985
  %8 = load i16, i16* %arrayidx2, align 2, !dbg !15985
  call void @wr_reg16(%struct.slgt_info* %5, i32 138, i16 zeroext %8) #11, !dbg !15986
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15987
  %call = call zeroext i16 @rd_reg16(%struct.slgt_info* %9, i32 132) #11, !dbg !15989
  %conv = zext i16 %call to i32, !dbg !15989
  %10 = load i32, i32* %i, align 4, !dbg !15990
  %idxprom3 = zext i32 %10 to i64, !dbg !15991
  %arrayidx4 = getelementptr [6 x i16], [6 x i16]* @register_test.patterns, i64 0, i64 %idxprom3, !dbg !15991
  %11 = load i16, i16* %arrayidx4, align 2, !dbg !15991
  %conv5 = zext i16 %11 to i32, !dbg !15991
  %cmp6 = icmp ne i32 %conv, %conv5, !dbg !15992
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !15993

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !15994
  %call8 = call zeroext i16 @rd_reg16(%struct.slgt_info* %12, i32 138) #11, !dbg !15995
  %conv9 = zext i16 %call8 to i32, !dbg !15995
  %13 = load i32, i32* %i, align 4, !dbg !15996
  %add10 = add i32 %13, 1, !dbg !15997
  %14 = load i32, i32* @register_test.count, align 4, !dbg !15998
  %rem11 = urem i32 %add10, %14, !dbg !15999
  %idxprom12 = zext i32 %rem11 to i64, !dbg !16000
  %arrayidx13 = getelementptr [6 x i16], [6 x i16]* @register_test.patterns, i64 0, i64 %idxprom12, !dbg !16000
  %15 = load i16, i16* %arrayidx13, align 2, !dbg !16000
  %conv14 = zext i16 %15 to i32, !dbg !16000
  %cmp15 = icmp ne i32 %conv9, %conv14, !dbg !16001
  br i1 %cmp15, label %if.then, label %if.end, !dbg !16002

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 -19, i32* %rc, align 4, !dbg !16003
  br label %for.end, !dbg !16005

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !16006

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !16007
  %inc = add i32 %16, 1, !dbg !16007
  store i32 %inc, i32* %i, align 4, !dbg !16007
  br label %for.cond, !dbg !16008, !llvm.loop !16009

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16011
  %call17 = call i32 @rd_reg32(%struct.slgt_info* %17, i32 4) #11, !dbg !16012
  %and = and i32 %call17, 32, !dbg !16013
  %tobool = icmp ne i32 %and, 0, !dbg !16014
  %18 = zext i1 %tobool to i64, !dbg !16014
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !16014
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16015
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 20, !dbg !16016
  store i32 %cond, i32* %gpio_present, align 8, !dbg !16017
  %20 = load i32, i32* %rc, align 4, !dbg !16018
  %tobool18 = icmp ne i32 %20, 0, !dbg !16018
  %21 = zext i1 %tobool18 to i64, !dbg !16018
  %cond19 = select i1 %tobool18, i32 0, i32 1, !dbg !16018
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16019
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 50, !dbg !16020
  store i32 %cond19, i32* %init_error, align 8, !dbg !16021
  %23 = load i32, i32* %rc, align 4, !dbg !16022
  ret i32 %23, !dbg !16023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_test(%struct.slgt_info* %info) #1 !dbg !16024 {
entry:
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !8902, metadata !DIExpression()), !dbg !16025
  %lock.addr.i78 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i78, metadata !10114, metadata !DIExpression()), !dbg !16032
  %flags.addr.i79 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i79, metadata !10120, metadata !DIExpression()), !dbg !16034
  %tmp.i80 = alloca i32, align 4
  %tmp8.i81 = alloca i32, align 4
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !10114, metadata !DIExpression()), !dbg !16035
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16037
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16038
  %info.addr = alloca %struct.slgt_info*, align 8
  %timeout = alloca i64, align 8
  %flags = alloca i64, align 8
  %oldtty = alloca %struct.tty_struct*, align 8
  %speed = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__dummy37 = alloca i64, align 8
  %__dummy238 = alloca i64, align 8
  %tmp41 = alloca i32, align 4
  %__dummy45 = alloca i64, align 8
  %__dummy246 = alloca i64, align 8
  %tmp49 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !16045, metadata !DIExpression()), !dbg !16046
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !16047, metadata !DIExpression()), !dbg !16048
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16049, metadata !DIExpression()), !dbg !16050
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %oldtty, metadata !16051, metadata !DIExpression()), !dbg !16052
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16053
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !16054
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !16055
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !16055
  store %struct.tty_struct* %1, %struct.tty_struct** %oldtty, align 8, !dbg !16052
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !16056, metadata !DIExpression()), !dbg !16057
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16058
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 36, !dbg !16059
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 9, !dbg !16060
  %3 = load i64, i64* %data_rate, align 8, !dbg !16060
  %conv = trunc i64 %3 to i32, !dbg !16058
  store i32 %conv, i32* %speed, align 4, !dbg !16057
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16061
  %params1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 36, !dbg !16062
  %data_rate2 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params1, i32 0, i32 9, !dbg !16063
  store i64 921600, i64* %data_rate2, align 8, !dbg !16064
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16065
  %port3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 1, !dbg !16066
  %tty4 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port3, i32 0, i32 1, !dbg !16067
  store %struct.tty_struct* null, %struct.tty_struct** %tty4, align 8, !dbg !16068
  br label %do.body, !dbg !16069

do.body:                                          ; preds = %entry
  br label %do.body5, !dbg !16070

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16071, metadata !DIExpression()), !dbg !16073
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16074, metadata !DIExpression()), !dbg !16073
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16073
  %conv6 = zext i1 %cmp to i32, !dbg !16073
  store i32 1, i32* %tmp, align 4, !dbg !16073
  %6 = load i32, i32* %tmp, align 4, !dbg !16073
  br label %do.body7, !dbg !16075

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !16076

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !16077

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !16079, metadata !DIExpression()), !dbg !16082
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !16083, metadata !DIExpression()), !dbg !16082
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !16082
  %conv13 = zext i1 %cmp12 to i32, !dbg !16082
  store i32 1, i32* %tmp14, align 4, !dbg !16082
  %7 = load i32, i32* %tmp14, align 4, !dbg !16082
  %call = call i64 @arch_local_irq_save() #11, !dbg !16084
  store i64 %call, i64* %flags, align 8, !dbg !16084
  br label %do.end, !dbg !16084

do.end:                                           ; preds = %do.body9
  br label %do.end15, !dbg !16077

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !16076

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16085, !srcloc !16086
  br label %do.body17, !dbg !16085

do.body17:                                        ; preds = %do.body16
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16087
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 22, !dbg !16087
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16088
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !16089
  %rlock.i = bitcast %union.anon.1* %10 to %struct.raw_spinlock*, !dbg !16089
  br label %do.end19, !dbg !16087

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !16085

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !16076

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !16075

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !16070

do.end23:                                         ; preds = %do.end22
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16090
  call void @async_mode(%struct.slgt_info* %11) #11, !dbg !16091
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16092
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16092
  %call24 = call zeroext i16 @rd_reg16(%struct.slgt_info* %13, i32 140) #11, !dbg !16092
  %conv25 = zext i16 %call24 to i32, !dbg !16092
  %or = or i32 %conv25, 4096, !dbg !16092
  %conv26 = trunc i32 %or to i16, !dbg !16092
  call void @wr_reg16(%struct.slgt_info* %12, i32 140, i16 zeroext %conv26) #11, !dbg !16092
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16093
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16094
  %call27 = call zeroext i16 @rd_reg16(%struct.slgt_info* %15, i32 130) #11, !dbg !16095
  %conv28 = zext i16 %call27 to i32, !dbg !16095
  %or29 = or i32 %conv28, 2, !dbg !16096
  %conv30 = trunc i32 %or29 to i16, !dbg !16097
  call void @wr_reg16(%struct.slgt_info* %14, i32 130, i16 zeroext %conv30) #11, !dbg !16098
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16099
  call void @wr_reg16(%struct.slgt_info* %16, i32 128, i16 zeroext 0) #11, !dbg !16100
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16101
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 50, !dbg !16102
  store i32 3, i32* %init_error, align 8, !dbg !16103
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16104
  %irq_occurred = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 29, !dbg !16105
  store i8 0, i8* %irq_occurred, align 1, !dbg !16106
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16107
  %lock31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !16108
  %20 = load i64, i64* %flags, align 8, !dbg !16109
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i78, align 8
  store i64 %20, i64* %flags.addr.i79, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16110
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16110
  store i32 1, i32* %tmp.i80, align 4, !dbg !16110
  %21 = load i32, i32* %tmp.i80, align 4, !dbg !16110
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16111
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16111
  store i32 1, i32* %tmp8.i81, align 4, !dbg !16111
  %22 = load i32, i32* %tmp8.i81, align 4, !dbg !16111
  %23 = load i64, i64* %flags.addr.i79, align 8, !dbg !16112
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !16112
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16113, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i78, align 8, !dbg !16114
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !16114
  %rlock.i82 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !16114
  store i64 100, i64* %timeout, align 8, !dbg !16115
  br label %while.cond, !dbg !16116

while.cond:                                       ; preds = %while.body, %do.end23
  %26 = load i64, i64* %timeout, align 8, !dbg !16117
  %dec = add i64 %26, -1, !dbg !16117
  store i64 %dec, i64* %timeout, align 8, !dbg !16117
  %tobool = icmp ne i64 %26, 0, !dbg !16117
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16118

land.rhs:                                         ; preds = %while.cond
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16119
  %irq_occurred32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 29, !dbg !16120
  %28 = load i8, i8* %irq_occurred32, align 1, !dbg !16120
  %tobool33 = trunc i8 %28 to i1, !dbg !16120
  %lnot = xor i1 %tobool33, true, !dbg !16121
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %29 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !16122
  br i1 %29, label %while.body, label %while.end, !dbg !16116

while.body:                                       ; preds = %land.end
  %call34 = call i64 @msleep_interruptible(i32 10) #11, !dbg !16123
  br label %while.cond, !dbg !16116, !llvm.loop !16124

while.end:                                        ; preds = %land.end
  br label %do.body35, !dbg !16126

do.body35:                                        ; preds = %while.end
  br label %do.body36, !dbg !16127

do.body36:                                        ; preds = %do.body35
  call void @llvm.dbg.declare(metadata i64* %__dummy37, metadata !16128, metadata !DIExpression()), !dbg !16130
  call void @llvm.dbg.declare(metadata i64* %__dummy238, metadata !16131, metadata !DIExpression()), !dbg !16130
  %cmp39 = icmp eq i64* %__dummy37, %__dummy238, !dbg !16130
  %conv40 = zext i1 %cmp39 to i32, !dbg !16130
  store i32 1, i32* %tmp41, align 4, !dbg !16130
  %30 = load i32, i32* %tmp41, align 4, !dbg !16130
  br label %do.body42, !dbg !16132

do.body42:                                        ; preds = %do.body36
  br label %do.body43, !dbg !16133

do.body43:                                        ; preds = %do.body42
  br label %do.body44, !dbg !16134

do.body44:                                        ; preds = %do.body43
  call void @llvm.dbg.declare(metadata i64* %__dummy45, metadata !16136, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.declare(metadata i64* %__dummy246, metadata !16140, metadata !DIExpression()), !dbg !16139
  %cmp47 = icmp eq i64* %__dummy45, %__dummy246, !dbg !16139
  %conv48 = zext i1 %cmp47 to i32, !dbg !16139
  store i32 1, i32* %tmp49, align 4, !dbg !16139
  %31 = load i32, i32* %tmp49, align 4, !dbg !16139
  %call50 = call i64 @arch_local_irq_save() #11, !dbg !16141
  store i64 %call50, i64* %flags, align 8, !dbg !16141
  br label %do.end51, !dbg !16141

do.end51:                                         ; preds = %do.body44
  br label %do.end52, !dbg !16134

do.end52:                                         ; preds = %do.end51
  br label %do.body53, !dbg !16133

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16142, !srcloc !16143
  br label %do.body54, !dbg !16142

do.body54:                                        ; preds = %do.body53
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16144
  %lock55 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 22, !dbg !16144
  store %struct.spinlock* %lock55, %struct.spinlock** %lock.addr.i83, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !16145
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !16146
  %rlock.i84 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !16146
  br label %do.end57, !dbg !16144

do.end57:                                         ; preds = %do.body54
  br label %do.end58, !dbg !16142

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !16133

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !16132

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !16127

do.end61:                                         ; preds = %do.end60
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16147
  call void @reset_port(%struct.slgt_info* %35) #11, !dbg !16148
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16149
  %lock62 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 22, !dbg !16150
  %37 = load i64, i64* %flags, align 8, !dbg !16151
  store %struct.spinlock* %lock62, %struct.spinlock** %lock.addr.i76, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16152
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16152
  store i32 1, i32* %tmp.i, align 4, !dbg !16152
  %38 = load i32, i32* %tmp.i, align 4, !dbg !16152
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16153
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16153
  store i32 1, i32* %tmp8.i, align 4, !dbg !16153
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !16153
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !16154
  call void @arch_local_irq_restore(i64 %40) #14, !dbg !16154
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16155, !srcloc !10199
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !16156
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !16156
  %rlock.i77 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !16156
  %43 = load i32, i32* %speed, align 4, !dbg !16157
  %conv63 = zext i32 %43 to i64, !dbg !16157
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16158
  %params64 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %44, i32 0, i32 36, !dbg !16159
  %data_rate65 = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params64, i32 0, i32 9, !dbg !16160
  store i64 %conv63, i64* %data_rate65, align 8, !dbg !16161
  %45 = load %struct.tty_struct*, %struct.tty_struct** %oldtty, align 8, !dbg !16162
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16163
  %port66 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %46, i32 0, i32 1, !dbg !16164
  %tty67 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port66, i32 0, i32 1, !dbg !16165
  store %struct.tty_struct* %45, %struct.tty_struct** %tty67, align 8, !dbg !16166
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16167
  %irq_occurred68 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %47, i32 0, i32 29, !dbg !16168
  %48 = load i8, i8* %irq_occurred68, align 1, !dbg !16168
  %tobool69 = trunc i8 %48 to i1, !dbg !16168
  %49 = zext i1 %tobool69 to i64, !dbg !16167
  %cond = select i1 %tobool69, i32 0, i32 3, !dbg !16167
  %50 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16169
  %init_error71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %50, i32 0, i32 50, !dbg !16170
  store i32 %cond, i32* %init_error71, align 8, !dbg !16171
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16172
  %irq_occurred72 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %51, i32 0, i32 29, !dbg !16173
  %52 = load i8, i8* %irq_occurred72, align 1, !dbg !16173
  %tobool73 = trunc i8 %52 to i1, !dbg !16173
  %53 = zext i1 %tobool73 to i64, !dbg !16172
  %cond75 = select i1 %tobool73, i32 0, i32 -19, !dbg !16172
  ret i32 %cond75, !dbg !16174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @loopback_test(%struct.slgt_info* %info) #1 !dbg !16175 {
entry:
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !8902, metadata !DIExpression()), !dbg !16176
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !10114, metadata !DIExpression()), !dbg !16183
  %flags.addr.i86 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i86, metadata !10120, metadata !DIExpression()), !dbg !16185
  %tmp.i87 = alloca i32, align 4
  %tmp8.i88 = alloca i32, align 4
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !10114, metadata !DIExpression()), !dbg !16186
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16188
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16189
  %info.addr = alloca %struct.slgt_info*, align 8
  %timeout = alloca i64, align 8
  %count = alloca i16, align 2
  %buf = alloca [20 x i8], align 16
  %rc = alloca i32, align 4
  %flags = alloca i64, align 8
  %oldtty = alloca %struct.tty_struct*, align 8
  %params = alloca %struct._MGSL_PARAMS, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  %__dummy53 = alloca i64, align 8
  %__dummy254 = alloca i64, align 8
  %tmp57 = alloca i32, align 4
  %__dummy61 = alloca i64, align 8
  %__dummy262 = alloca i64, align 8
  %tmp65 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !16196, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !16198, metadata !DIExpression()), !dbg !16199
  call void @llvm.dbg.declare(metadata i16* %count, metadata !16200, metadata !DIExpression()), !dbg !16201
  store i16 20, i16* %count, align 2, !dbg !16201
  call void @llvm.dbg.declare(metadata [20 x i8]* %buf, metadata !16202, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16205, metadata !DIExpression()), !dbg !16206
  store i32 -19, i32* %rc, align 4, !dbg !16206
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16207, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %oldtty, metadata !16209, metadata !DIExpression()), !dbg !16210
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16211
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 1, !dbg !16212
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !16213
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !16213
  store %struct.tty_struct* %1, %struct.tty_struct** %oldtty, align 8, !dbg !16210
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS* %params, metadata !16214, metadata !DIExpression()), !dbg !16215
  %2 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !16216
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16217
  %params1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 36, !dbg !16218
  %4 = bitcast %struct._MGSL_PARAMS* %params1 to i8*, !dbg !16216
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %4, i64 48, i1 false), !dbg !16216
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16219
  %params2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 36, !dbg !16220
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params2, i32 0, i32 0, !dbg !16221
  store i64 1, i64* %mode, align 8, !dbg !16222
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16223
  %params3 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 36, !dbg !16224
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params3, i32 0, i32 9, !dbg !16225
  store i64 921600, i64* %data_rate, align 8, !dbg !16226
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16227
  %params4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 36, !dbg !16228
  %loopback = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params4, i32 0, i32 1, !dbg !16229
  store i8 1, i8* %loopback, align 8, !dbg !16230
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16231
  %port5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 1, !dbg !16232
  %tty6 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 1, !dbg !16233
  store %struct.tty_struct* null, %struct.tty_struct** %tty6, align 8, !dbg !16234
  store i16 0, i16* %count, align 2, !dbg !16235
  br label %for.cond, !dbg !16237

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i16, i16* %count, align 2, !dbg !16238
  %conv = zext i16 %9 to i32, !dbg !16238
  %cmp = icmp slt i32 %conv, 20, !dbg !16240
  br i1 %cmp, label %for.body, label %for.end, !dbg !16241

for.body:                                         ; preds = %for.cond
  %10 = load i16, i16* %count, align 2, !dbg !16242
  %conv8 = trunc i16 %10 to i8, !dbg !16243
  %11 = load i16, i16* %count, align 2, !dbg !16244
  %idxprom = zext i16 %11 to i64, !dbg !16245
  %arrayidx = getelementptr [20 x i8], [20 x i8]* %buf, i64 0, i64 %idxprom, !dbg !16245
  store i8 %conv8, i8* %arrayidx, align 1, !dbg !16246
  br label %for.inc, !dbg !16245

for.inc:                                          ; preds = %for.body
  %12 = load i16, i16* %count, align 2, !dbg !16247
  %inc = add i16 %12, 1, !dbg !16247
  store i16 %inc, i16* %count, align 2, !dbg !16247
  br label %for.cond, !dbg !16248, !llvm.loop !16249

for.end:                                          ; preds = %for.cond
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16251
  %tmp_rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 73, !dbg !16252
  store i32 0, i32* %tmp_rbuf_count, align 8, !dbg !16253
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16254
  %tmp_rbuf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 72, !dbg !16255
  %15 = load i8*, i8** %tmp_rbuf, align 8, !dbg !16255
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 20, i1 false), !dbg !16256
  br label %do.body, !dbg !16257

do.body:                                          ; preds = %for.end
  br label %do.body9, !dbg !16258

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16259, metadata !DIExpression()), !dbg !16261
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16262, metadata !DIExpression()), !dbg !16261
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !16261
  %conv11 = zext i1 %cmp10 to i32, !dbg !16261
  store i32 1, i32* %tmp, align 4, !dbg !16261
  %16 = load i32, i32* %tmp, align 4, !dbg !16261
  br label %do.body12, !dbg !16263

do.body12:                                        ; preds = %do.body9
  br label %do.body13, !dbg !16264

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !16265

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !16267, metadata !DIExpression()), !dbg !16270
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !16271, metadata !DIExpression()), !dbg !16270
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !16270
  %conv18 = zext i1 %cmp17 to i32, !dbg !16270
  store i32 1, i32* %tmp19, align 4, !dbg !16270
  %17 = load i32, i32* %tmp19, align 4, !dbg !16270
  %call = call i64 @arch_local_irq_save() #11, !dbg !16272
  store i64 %call, i64* %flags, align 8, !dbg !16272
  br label %do.end, !dbg !16272

do.end:                                           ; preds = %do.body14
  br label %do.end20, !dbg !16265

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !16264

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16273, !srcloc !16274
  br label %do.body22, !dbg !16273

do.body22:                                        ; preds = %do.body21
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16275
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 22, !dbg !16275
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16276
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !16277
  %rlock.i = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !16277
  br label %do.end24, !dbg !16275

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !16273

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !16264

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !16263

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !16258

do.end28:                                         ; preds = %do.end27
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16278
  call void @async_mode(%struct.slgt_info* %21) #11, !dbg !16279
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16280
  call void @rx_start(%struct.slgt_info* %22) #11, !dbg !16281
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16282
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0, !dbg !16283
  %24 = load i16, i16* %count, align 2, !dbg !16284
  %conv29 = zext i16 %24 to i32, !dbg !16284
  %call30 = call zeroext i1 @tx_load(%struct.slgt_info* %23, i8* %arraydecay, i32 %conv29) #11, !dbg !16285
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16286
  %lock31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 22, !dbg !16287
  %26 = load i64, i64* %flags, align 8, !dbg !16288
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i85, align 8
  store i64 %26, i64* %flags.addr.i86, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16289
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16289
  store i32 1, i32* %tmp.i87, align 4, !dbg !16289
  %27 = load i32, i32* %tmp.i87, align 4, !dbg !16289
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16290
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16290
  store i32 1, i32* %tmp8.i88, align 4, !dbg !16290
  %28 = load i32, i32* %tmp8.i88, align 4, !dbg !16290
  %29 = load i64, i64* %flags.addr.i86, align 8, !dbg !16291
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !16291
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16292, !srcloc !10199
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !16293
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !16293
  %rlock.i89 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !16293
  store i64 100, i64* %timeout, align 8, !dbg !16294
  br label %for.cond32, !dbg !16296

for.cond32:                                       ; preds = %for.inc37, %do.end28
  %32 = load i64, i64* %timeout, align 8, !dbg !16297
  %tobool = icmp ne i64 %32, 0, !dbg !16299
  br i1 %tobool, label %for.body33, label %for.end38, !dbg !16299

for.body33:                                       ; preds = %for.cond32
  %call34 = call i64 @msleep_interruptible(i32 10) #11, !dbg !16300
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16302
  %call35 = call i32 @loopback_test_rx(%struct.slgt_info* %33) #11, !dbg !16304
  %tobool36 = icmp ne i32 %call35, 0, !dbg !16304
  br i1 %tobool36, label %if.then, label %if.end, !dbg !16305

if.then:                                          ; preds = %for.body33
  store i32 0, i32* %rc, align 4, !dbg !16306
  br label %for.end38, !dbg !16308

if.end:                                           ; preds = %for.body33
  br label %for.inc37, !dbg !16309

for.inc37:                                        ; preds = %if.end
  %34 = load i64, i64* %timeout, align 8, !dbg !16310
  %dec = add i64 %34, -1, !dbg !16310
  store i64 %dec, i64* %timeout, align 8, !dbg !16310
  br label %for.cond32, !dbg !16311, !llvm.loop !16312

for.end38:                                        ; preds = %if.then, %for.cond32
  %35 = load i32, i32* %rc, align 4, !dbg !16314
  %tobool39 = icmp ne i32 %35, 0, !dbg !16314
  br i1 %tobool39, label %if.end50, label %land.lhs.true, !dbg !16316

land.lhs.true:                                    ; preds = %for.end38
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16317
  %tmp_rbuf_count40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 73, !dbg !16318
  %37 = load i32, i32* %tmp_rbuf_count40, align 8, !dbg !16318
  %38 = load i16, i16* %count, align 2, !dbg !16319
  %conv41 = zext i16 %38 to i32, !dbg !16319
  %cmp42 = icmp ne i32 %37, %conv41, !dbg !16320
  br i1 %cmp42, label %if.then49, label %lor.lhs.false, !dbg !16321

lor.lhs.false:                                    ; preds = %land.lhs.true
  %arraydecay44 = getelementptr inbounds [20 x i8], [20 x i8]* %buf, i64 0, i64 0, !dbg !16322
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16323
  %tmp_rbuf45 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 72, !dbg !16324
  %40 = load i8*, i8** %tmp_rbuf45, align 8, !dbg !16324
  %41 = load i16, i16* %count, align 2, !dbg !16325
  %conv46 = zext i16 %41 to i64, !dbg !16325
  %call47 = call i32 @memcmp(i8* %arraydecay44, i8* %40, i64 %conv46) #11, !dbg !16326
  %tobool48 = icmp ne i32 %call47, 0, !dbg !16326
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !16327

if.then49:                                        ; preds = %lor.lhs.false, %land.lhs.true
  store i32 -19, i32* %rc, align 4, !dbg !16328
  br label %if.end50, !dbg !16330

if.end50:                                         ; preds = %if.then49, %lor.lhs.false, %for.end38
  br label %do.body51, !dbg !16331

do.body51:                                        ; preds = %if.end50
  br label %do.body52, !dbg !16332

do.body52:                                        ; preds = %do.body51
  call void @llvm.dbg.declare(metadata i64* %__dummy53, metadata !16333, metadata !DIExpression()), !dbg !16335
  call void @llvm.dbg.declare(metadata i64* %__dummy254, metadata !16336, metadata !DIExpression()), !dbg !16335
  %cmp55 = icmp eq i64* %__dummy53, %__dummy254, !dbg !16335
  %conv56 = zext i1 %cmp55 to i32, !dbg !16335
  store i32 1, i32* %tmp57, align 4, !dbg !16335
  %42 = load i32, i32* %tmp57, align 4, !dbg !16335
  br label %do.body58, !dbg !16337

do.body58:                                        ; preds = %do.body52
  br label %do.body59, !dbg !16338

do.body59:                                        ; preds = %do.body58
  br label %do.body60, !dbg !16339

do.body60:                                        ; preds = %do.body59
  call void @llvm.dbg.declare(metadata i64* %__dummy61, metadata !16341, metadata !DIExpression()), !dbg !16344
  call void @llvm.dbg.declare(metadata i64* %__dummy262, metadata !16345, metadata !DIExpression()), !dbg !16344
  %cmp63 = icmp eq i64* %__dummy61, %__dummy262, !dbg !16344
  %conv64 = zext i1 %cmp63 to i32, !dbg !16344
  store i32 1, i32* %tmp65, align 4, !dbg !16344
  %43 = load i32, i32* %tmp65, align 4, !dbg !16344
  %call66 = call i64 @arch_local_irq_save() #11, !dbg !16346
  store i64 %call66, i64* %flags, align 8, !dbg !16346
  br label %do.end67, !dbg !16346

do.end67:                                         ; preds = %do.body60
  br label %do.end68, !dbg !16339

do.end68:                                         ; preds = %do.end67
  br label %do.body69, !dbg !16338

do.body69:                                        ; preds = %do.end68
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16347, !srcloc !16348
  br label %do.body70, !dbg !16347

do.body70:                                        ; preds = %do.body69
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16349
  %lock71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %44, i32 0, i32 22, !dbg !16349
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i90, align 8
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !16350
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !16351
  %rlock.i91 = bitcast %union.anon.1* %46 to %struct.raw_spinlock*, !dbg !16351
  br label %do.end73, !dbg !16349

do.end73:                                         ; preds = %do.body70
  br label %do.end74, !dbg !16347

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !16338

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !16337

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !16332

do.end77:                                         ; preds = %do.end76
  %47 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16352
  call void @reset_adapter(%struct.slgt_info* %47) #11, !dbg !16353
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16354
  %lock78 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 22, !dbg !16355
  %49 = load i64, i64* %flags, align 8, !dbg !16356
  store %struct.spinlock* %lock78, %struct.spinlock** %lock.addr.i83, align 8
  store i64 %49, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16357
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16357
  store i32 1, i32* %tmp.i, align 4, !dbg !16357
  %50 = load i32, i32* %tmp.i, align 4, !dbg !16357
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16358
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16358
  store i32 1, i32* %tmp8.i, align 4, !dbg !16358
  %51 = load i32, i32* %tmp8.i, align 4, !dbg !16358
  %52 = load i64, i64* %flags.addr.i, align 8, !dbg !16359
  call void @arch_local_irq_restore(i64 %52) #14, !dbg !16359
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16360, !srcloc !10199
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !16361
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !16361
  %rlock.i84 = bitcast %union.anon.1* %54 to %struct.raw_spinlock*, !dbg !16361
  %55 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16362
  %params79 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %55, i32 0, i32 36, !dbg !16363
  %56 = bitcast %struct._MGSL_PARAMS* %params79 to i8*, !dbg !16364
  %57 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !16364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 48, i1 false), !dbg !16364
  %58 = load %struct.tty_struct*, %struct.tty_struct** %oldtty, align 8, !dbg !16365
  %59 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16366
  %port80 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %59, i32 0, i32 1, !dbg !16367
  %tty81 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port80, i32 0, i32 1, !dbg !16368
  store %struct.tty_struct* %58, %struct.tty_struct** %tty81, align 8, !dbg !16369
  %60 = load i32, i32* %rc, align 4, !dbg !16370
  %tobool82 = icmp ne i32 %60, 0, !dbg !16370
  %61 = zext i1 %tobool82 to i64, !dbg !16370
  %cond = select i1 %tobool82, i32 5, i32 0, !dbg !16370
  %62 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16371
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %62, i32 0, i32 50, !dbg !16372
  store i32 %cond, i32* %init_error, align 8, !dbg !16373
  %63 = load i32, i32* %rc, align 4, !dbg !16374
  ret i32 %63, !dbg !16375
}

; Function Attrs: noredzone
declare dso_local i64 @msleep_interruptible(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @loopback_test_rx(%struct.slgt_info* %info) #1 !dbg !16376 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %src = alloca i8*, align 8
  %dest = alloca i8*, align 8
  %count = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !16377, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.declare(metadata i8** %src, metadata !16379, metadata !DIExpression()), !dbg !16380
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !16381, metadata !DIExpression()), !dbg !16382
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16383, metadata !DIExpression()), !dbg !16384
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16385
  %rbufs = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 63, !dbg !16385
  %1 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs, align 8, !dbg !16385
  %arrayidx = getelementptr %struct.slgt_desc, %struct.slgt_desc* %1, i64 0, !dbg !16385
  %status = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx, i32 0, i32 1, !dbg !16385
  %2 = load i16, i16* %status, align 2, !dbg !16385
  %conv = zext i16 %2 to i32, !dbg !16385
  %and = and i32 %conv, 32768, !dbg !16385
  %tobool = icmp ne i32 %and, 0, !dbg !16385
  br i1 %tobool, label %if.then, label %if.end18, !dbg !16387

if.then:                                          ; preds = %entry
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16388
  %rbufs1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 63, !dbg !16388
  %4 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs1, align 8, !dbg !16388
  %arrayidx2 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %4, i64 0, !dbg !16388
  %count3 = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx2, i32 0, i32 0, !dbg !16388
  %5 = load i16, i16* %count3, align 8, !dbg !16388
  %conv4 = zext i16 %5 to i32, !dbg !16388
  store i32 %conv4, i32* %count, align 4, !dbg !16390
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16391
  %rbufs5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 63, !dbg !16392
  %7 = load %struct.slgt_desc*, %struct.slgt_desc** %rbufs5, align 8, !dbg !16392
  %arrayidx6 = getelementptr %struct.slgt_desc, %struct.slgt_desc* %7, i64 0, !dbg !16391
  %buf = getelementptr inbounds %struct.slgt_desc, %struct.slgt_desc* %arrayidx6, i32 0, i32 4, !dbg !16393
  %8 = load i8*, i8** %buf, align 8, !dbg !16393
  store i8* %8, i8** %src, align 8, !dbg !16394
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16395
  %tmp_rbuf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 72, !dbg !16396
  %10 = load i8*, i8** %tmp_rbuf, align 8, !dbg !16396
  store i8* %10, i8** %dest, align 8, !dbg !16397
  br label %for.cond, !dbg !16398

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %count, align 4, !dbg !16399
  %tobool7 = icmp ne i32 %11, 0, !dbg !16402
  br i1 %tobool7, label %for.body, label %for.end, !dbg !16402

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %src, align 8, !dbg !16403
  %add.ptr = getelementptr i8, i8* %12, i64 1, !dbg !16406
  %13 = load i8, i8* %add.ptr, align 1, !dbg !16407
  %conv8 = zext i8 %13 to i32, !dbg !16407
  %and9 = and i32 %conv8, 768, !dbg !16408
  %tobool10 = icmp ne i32 %and9, 0, !dbg !16408
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !16409

if.then11:                                        ; preds = %for.body
  %14 = load i8*, i8** %src, align 8, !dbg !16410
  %15 = load i8, i8* %14, align 1, !dbg !16412
  %16 = load i8*, i8** %dest, align 8, !dbg !16413
  store i8 %15, i8* %16, align 1, !dbg !16414
  %17 = load i8*, i8** %dest, align 8, !dbg !16415
  %incdec.ptr = getelementptr i8, i8* %17, i32 1, !dbg !16415
  store i8* %incdec.ptr, i8** %dest, align 8, !dbg !16415
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16416
  %tmp_rbuf_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 73, !dbg !16417
  %19 = load i32, i32* %tmp_rbuf_count, align 8, !dbg !16418
  %inc = add i32 %19, 1, !dbg !16418
  store i32 %inc, i32* %tmp_rbuf_count, align 8, !dbg !16418
  br label %if.end, !dbg !16419

if.end:                                           ; preds = %if.then11, %for.body
  br label %for.inc, !dbg !16420

for.inc:                                          ; preds = %if.end
  %20 = load i32, i32* %count, align 4, !dbg !16421
  %sub = sub i32 %20, 2, !dbg !16421
  store i32 %sub, i32* %count, align 4, !dbg !16421
  %21 = load i8*, i8** %src, align 8, !dbg !16422
  %add.ptr12 = getelementptr i8, i8* %21, i64 2, !dbg !16422
  store i8* %add.ptr12, i8** %src, align 8, !dbg !16422
  br label %for.cond, !dbg !16423, !llvm.loop !16424

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* @debug_level, align 4, !dbg !16426
  %cmp = icmp sge i32 %22, 1, !dbg !16426
  br i1 %cmp, label %if.then14, label %if.end17, !dbg !16428

if.then14:                                        ; preds = %for.end
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16426
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16426
  %tmp_rbuf15 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 72, !dbg !16426
  %25 = load i8*, i8** %tmp_rbuf15, align 8, !dbg !16426
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16426
  %tmp_rbuf_count16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 73, !dbg !16426
  %27 = load i32, i32* %tmp_rbuf_count16, align 8, !dbg !16426
  call void @trace_block(%struct.slgt_info* %23, i8* %25, i32 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0)) #11, !dbg !16426
  br label %if.end17, !dbg !16426

if.end17:                                         ; preds = %if.then14, %for.end
  store i32 1, i32* %retval, align 4, !dbg !16429
  br label %return, !dbg !16429

if.end18:                                         ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16430
  br label %return, !dbg !16430

return:                                           ; preds = %if.end18, %if.end17
  %28 = load i32, i32* %retval, align 4, !dbg !16431
  ret i32 %28, !dbg !16431
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reset_adapter(%struct.slgt_info* %info) #1 !dbg !16432 {
entry:
  %info.addr = alloca %struct.slgt_info*, align 8
  %i = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !16433, metadata !DIExpression()), !dbg !16434
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16435, metadata !DIExpression()), !dbg !16436
  store i32 0, i32* %i, align 4, !dbg !16437
  br label %for.cond, !dbg !16439

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16440
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16442
  %port_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 6, !dbg !16443
  %2 = load i32, i32* %port_count, align 8, !dbg !16443
  %cmp = icmp slt i32 %0, %2, !dbg !16444
  br i1 %cmp, label %for.body, label %for.end, !dbg !16445

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16446
  %port_array = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 9, !dbg !16449
  %4 = load i32, i32* %i, align 4, !dbg !16450
  %idxprom = sext i32 %4 to i64, !dbg !16446
  %arrayidx = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 %idxprom, !dbg !16446
  %5 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx, align 8, !dbg !16446
  %tobool = icmp ne %struct.slgt_info* %5, null, !dbg !16446
  br i1 %tobool, label %if.then, label %if.end, !dbg !16451

if.then:                                          ; preds = %for.body
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !16452
  %port_array1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 9, !dbg !16453
  %7 = load i32, i32* %i, align 4, !dbg !16454
  %idxprom2 = sext i32 %7 to i64, !dbg !16452
  %arrayidx3 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array1, i64 0, i64 %idxprom2, !dbg !16452
  %8 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx3, align 8, !dbg !16452
  call void @reset_port(%struct.slgt_info* %8) #11, !dbg !16455
  br label %if.end, !dbg !16455

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !16456

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !16457
  %inc = add i32 %9, 1, !dbg !16457
  store i32 %inc, i32* %i, align 4, !dbg !16457
  br label %for.cond, !dbg !16458, !llvm.loop !16459

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #1 !dbg !16462 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !16465, metadata !DIExpression()), !dbg !16466
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !16467, metadata !DIExpression()), !dbg !16468
  %0 = load i32, i32* %lines.addr, align 4, !dbg !16469
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #11, !dbg !16469
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !16468
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !16470
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !16470
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !16472
  br i1 %call1, label %if.then, label %if.end, !dbg !16473

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !16474
  br label %return, !dbg !16474

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !16475
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !16476
  br label %return, !dbg !16476

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !16477
  ret %struct.tty_driver* %4, !dbg !16477
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #4

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #4

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 !dbg !16478 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !16482, metadata !DIExpression()), !dbg !16483
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !16484
  %1 = ptrtoint i8* %0 to i64, !dbg !16484
  %2 = inttoptr i64 %1 to i8*, !dbg !16484
  %3 = ptrtoint i8* %2 to i64, !dbg !16484
  %cmp = icmp uge i64 %3, -4095, !dbg !16484
  %lnot = xor i1 %cmp, true, !dbg !16484
  %lnot1 = xor i1 %lnot, true, !dbg !16484
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16484
  %conv = sext i32 %lnot.ext to i64, !dbg !16484
  %tobool = icmp ne i64 %conv, 0, !dbg !16484
  ret i1 %tobool, !dbg !16485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @open(%struct.tty_struct* %tty, %struct.file* %filp) #1 !dbg !16486 {
entry:
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !10114, metadata !DIExpression()), !dbg !16487
  %flags.addr.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i116, metadata !10120, metadata !DIExpression()), !dbg !16489
  %tmp.i117 = alloca i32, align 4
  %tmp8.i118 = alloca i32, align 4
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !10114, metadata !DIExpression()), !dbg !16490
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16494
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16495
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %retval1 = alloca i32, align 4
  %line = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy39 = alloca i64, align 8
  %__dummy240 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !16502, metadata !DIExpression()), !dbg !16503
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !16504, metadata !DIExpression()), !dbg !16505
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !16506, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !16508, metadata !DIExpression()), !dbg !16509
  call void @llvm.dbg.declare(metadata i32* %line, metadata !16510, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16512, metadata !DIExpression()), !dbg !16513
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16514
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !16515
  %1 = load i32, i32* %index, align 8, !dbg !16515
  store i32 %1, i32* %line, align 4, !dbg !16516
  %2 = load i32, i32* %line, align 4, !dbg !16517
  %3 = load i32, i32* @slgt_device_count, align 4, !dbg !16519
  %cmp = icmp sge i32 %2, %3, !dbg !16520
  br i1 %cmp, label %if.then, label %if.end4, !dbg !16521

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @debug_level, align 4, !dbg !16522
  %cmp2 = icmp sge i32 %4, 2, !dbg !16522
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !16525

if.then3:                                         ; preds = %if.then
  %5 = load i8*, i8** @driver_name, align 8, !dbg !16522
  %6 = load i32, i32* %line, align 4, !dbg !16522
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i64 0, i64 0), i8* %5, i32 %6) #12, !dbg !16522
  br label %if.end, !dbg !16522

if.end:                                           ; preds = %if.then3, %if.then
  store i32 -19, i32* %retval, align 4, !dbg !16526
  br label %return, !dbg !16526

if.end4:                                          ; preds = %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !16527
  store %struct.slgt_info* %7, %struct.slgt_info** %info, align 8, !dbg !16528
  br label %while.cond, !dbg !16529

while.cond:                                       ; preds = %while.body, %if.end4
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16530
  %tobool = icmp ne %struct.slgt_info* %8, null, !dbg !16530
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !16531

land.rhs:                                         ; preds = %while.cond
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16532
  %line5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 10, !dbg !16533
  %10 = load i32, i32* %line5, align 8, !dbg !16533
  %11 = load i32, i32* %line, align 4, !dbg !16534
  %cmp6 = icmp ne i32 %10, %11, !dbg !16535
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ], !dbg !16536
  br i1 %12, label %while.body, label %while.end, !dbg !16529

while.body:                                       ; preds = %land.end
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16537
  %next_device = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 2, !dbg !16538
  %14 = load %struct.slgt_info*, %struct.slgt_info** %next_device, align 8, !dbg !16538
  store %struct.slgt_info* %14, %struct.slgt_info** %info, align 8, !dbg !16539
  br label %while.cond, !dbg !16529, !llvm.loop !16540

while.end:                                        ; preds = %land.end
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16541
  %16 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16543
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %16, i32 0, i32 18, !dbg !16544
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16543
  %call7 = call i32 @sanity_check(%struct.slgt_info* %15, i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i64 0, i64 0)) #11, !dbg !16545
  %tobool8 = icmp ne i32 %call7, 0, !dbg !16545
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !16546

if.then9:                                         ; preds = %while.end
  store i32 -19, i32* %retval, align 4, !dbg !16547
  br label %return, !dbg !16547

if.end10:                                         ; preds = %while.end
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16548
  %init_error = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 50, !dbg !16550
  %18 = load i32, i32* %init_error, align 8, !dbg !16550
  %tobool11 = icmp ne i32 %18, 0, !dbg !16548
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !16551

if.then12:                                        ; preds = %if.end10
  %19 = load i32, i32* @debug_level, align 4, !dbg !16552
  %cmp13 = icmp sge i32 %19, 2, !dbg !16552
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !16555

if.then14:                                        ; preds = %if.then12
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16552
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 4, !dbg !16552
  %arraydecay15 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !16552
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16552
  %init_error16 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 50, !dbg !16552
  %22 = load i32, i32* %init_error16, align 8, !dbg !16552
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i64 0, i64 0), i8* %arraydecay15, i32 %22) #12, !dbg !16552
  br label %if.end18, !dbg !16552

if.end18:                                         ; preds = %if.then14, %if.then12
  store i32 -19, i32* %retval, align 4, !dbg !16556
  br label %return, !dbg !16556

if.end19:                                         ; preds = %if.end10
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16557
  %24 = bitcast %struct.slgt_info* %23 to i8*, !dbg !16557
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16558
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 37, !dbg !16559
  store i8* %24, i8** %driver_data, align 8, !dbg !16560
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16561
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16562
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 1, !dbg !16563
  %tty20 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 1, !dbg !16564
  store %struct.tty_struct* %26, %struct.tty_struct** %tty20, align 8, !dbg !16565
  %28 = load i32, i32* @debug_level, align 4, !dbg !16566
  %cmp21 = icmp sge i32 %28, 3, !dbg !16566
  br i1 %cmp21, label %if.then22, label %if.end27, !dbg !16568

if.then22:                                        ; preds = %if.end19
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16566
  %device_name23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 4, !dbg !16566
  %arraydecay24 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name23, i64 0, i64 0, !dbg !16566
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16566
  %port25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 1, !dbg !16566
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port25, i32 0, i32 7, !dbg !16566
  %31 = load i32, i32* %count, align 4, !dbg !16566
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i64 0, i64 0), i8* %arraydecay24, i32 %31) #12, !dbg !16566
  br label %if.end27, !dbg !16566

if.end27:                                         ; preds = %if.then22, %if.end19
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16569
  %port28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %32, i32 0, i32 1, !dbg !16570
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port28, i32 0, i32 13, !dbg !16571
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !16572
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16573
  %port29 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 1, !dbg !16574
  %flags30 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 10, !dbg !16575
  %34 = load i64, i64* %flags30, align 8, !dbg !16575
  %and = and i64 %34, 8192, !dbg !16576
  %tobool31 = icmp ne i64 %and, 0, !dbg !16577
  %35 = zext i1 %tobool31 to i64, !dbg !16577
  %cond = select i1 %tobool31, i32 1, i32 0, !dbg !16577
  %conv = trunc i32 %cond to i8, !dbg !16577
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16578
  %port32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 1, !dbg !16579
  %low_latency = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port32, i32 0, i32 12, !dbg !16580
  %bf.load = load i8, i8* %low_latency, align 8, !dbg !16581
  %bf.value = and i8 %conv, 1, !dbg !16581
  %bf.shl = shl i8 %bf.value, 1, !dbg !16581
  %bf.clear = and i8 %bf.load, -3, !dbg !16581
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !16581
  store i8 %bf.set, i8* %low_latency, align 8, !dbg !16581
  br label %do.body, !dbg !16582

do.body:                                          ; preds = %if.end27
  br label %do.body33, !dbg !16583

do.body33:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16584, metadata !DIExpression()), !dbg !16586
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16587, metadata !DIExpression()), !dbg !16586
  %cmp34 = icmp eq i64* %__dummy, %__dummy2, !dbg !16586
  %conv35 = zext i1 %cmp34 to i32, !dbg !16586
  store i32 1, i32* %tmp, align 4, !dbg !16586
  %37 = load i32, i32* %tmp, align 4, !dbg !16586
  br label %do.body36, !dbg !16588

do.body36:                                        ; preds = %do.body33
  br label %do.body37, !dbg !16589

do.body37:                                        ; preds = %do.body36
  br label %do.body38, !dbg !16590

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i64* %__dummy39, metadata !16592, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.declare(metadata i64* %__dummy240, metadata !16596, metadata !DIExpression()), !dbg !16595
  %cmp41 = icmp eq i64* %__dummy39, %__dummy240, !dbg !16595
  %conv42 = zext i1 %cmp41 to i32, !dbg !16595
  store i32 1, i32* %tmp43, align 4, !dbg !16595
  %38 = load i32, i32* %tmp43, align 4, !dbg !16595
  %call44 = call i64 @arch_local_irq_save() #11, !dbg !16597
  store i64 %call44, i64* %flags, align 8, !dbg !16597
  br label %do.end, !dbg !16597

do.end:                                           ; preds = %do.body38
  br label %do.end45, !dbg !16590

do.end45:                                         ; preds = %do.end
  br label %do.body46, !dbg !16589

do.body46:                                        ; preds = %do.end45
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16598, !srcloc !16599
  br label %do.body47, !dbg !16598

do.body47:                                        ; preds = %do.body46
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16600
  %netlock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 75, !dbg !16600
  store %struct.spinlock* %netlock, %struct.spinlock** %lock.addr.i, align 8
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16601
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !16602
  %rlock.i = bitcast %union.anon.1* %41 to %struct.raw_spinlock*, !dbg !16602
  br label %do.end49, !dbg !16600

do.end49:                                         ; preds = %do.body47
  br label %do.end50, !dbg !16598

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !16589

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !16588

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !16583

do.end53:                                         ; preds = %do.end52
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16603
  %netcount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 74, !dbg !16604
  %43 = load i32, i32* %netcount, align 4, !dbg !16604
  %tobool54 = icmp ne i32 %43, 0, !dbg !16603
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !16605

if.then55:                                        ; preds = %do.end53
  store i32 -16, i32* %retval1, align 4, !dbg !16606
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16607
  %netlock56 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %44, i32 0, i32 75, !dbg !16608
  %45 = load i64, i64* %flags, align 8, !dbg !16609
  store %struct.spinlock* %netlock56, %struct.spinlock** %lock.addr.i113, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16610
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16610
  store i32 1, i32* %tmp.i, align 4, !dbg !16610
  %46 = load i32, i32* %tmp.i, align 4, !dbg !16610
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16611
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16611
  store i32 1, i32* %tmp8.i, align 4, !dbg !16611
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !16611
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !16612
  call void @arch_local_irq_restore(i64 %48) #14, !dbg !16612
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16613, !srcloc !10199
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !16614
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !16614
  %rlock.i114 = bitcast %union.anon.1* %50 to %struct.raw_spinlock*, !dbg !16614
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16615
  %port57 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %51, i32 0, i32 1, !dbg !16616
  %mutex58 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port57, i32 0, i32 13, !dbg !16617
  call void @mutex_unlock(%struct.mutex* %mutex58) #11, !dbg !16618
  br label %cleanup, !dbg !16619

if.end59:                                         ; preds = %do.end53
  %52 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16620
  %port60 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %52, i32 0, i32 1, !dbg !16621
  %count61 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port60, i32 0, i32 7, !dbg !16622
  %53 = load i32, i32* %count61, align 4, !dbg !16623
  %inc = add i32 %53, 1, !dbg !16623
  store i32 %inc, i32* %count61, align 4, !dbg !16623
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16624
  %netlock62 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %54, i32 0, i32 75, !dbg !16625
  %55 = load i64, i64* %flags, align 8, !dbg !16626
  store %struct.spinlock* %netlock62, %struct.spinlock** %lock.addr.i115, align 8
  store i64 %55, i64* %flags.addr.i116, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16627
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16627
  store i32 1, i32* %tmp.i117, align 4, !dbg !16627
  %56 = load i32, i32* %tmp.i117, align 4, !dbg !16627
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16628
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16628
  store i32 1, i32* %tmp8.i118, align 4, !dbg !16628
  %57 = load i32, i32* %tmp8.i118, align 4, !dbg !16628
  %58 = load i64, i64* %flags.addr.i116, align 8, !dbg !16629
  call void @arch_local_irq_restore(i64 %58) #14, !dbg !16629
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16630, !srcloc !10199
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !16631
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !16631
  %rlock.i119 = bitcast %union.anon.1* %60 to %struct.raw_spinlock*, !dbg !16631
  %61 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16632
  %port63 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %61, i32 0, i32 1, !dbg !16634
  %count64 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port63, i32 0, i32 7, !dbg !16635
  %62 = load i32, i32* %count64, align 4, !dbg !16635
  %cmp65 = icmp eq i32 %62, 1, !dbg !16636
  br i1 %cmp65, label %if.then67, label %if.end75, !dbg !16637

if.then67:                                        ; preds = %if.end59
  %63 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16638
  %call68 = call i32 @startup(%struct.slgt_info* %63) #11, !dbg !16640
  store i32 %call68, i32* %retval1, align 4, !dbg !16641
  %64 = load i32, i32* %retval1, align 4, !dbg !16642
  %cmp69 = icmp slt i32 %64, 0, !dbg !16644
  br i1 %cmp69, label %if.then71, label %if.end74, !dbg !16645

if.then71:                                        ; preds = %if.then67
  %65 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16646
  %port72 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %65, i32 0, i32 1, !dbg !16648
  %mutex73 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port72, i32 0, i32 13, !dbg !16649
  call void @mutex_unlock(%struct.mutex* %mutex73) #11, !dbg !16650
  br label %cleanup, !dbg !16651

if.end74:                                         ; preds = %if.then67
  br label %if.end75, !dbg !16652

if.end75:                                         ; preds = %if.end74, %if.end59
  %66 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16653
  %port76 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %66, i32 0, i32 1, !dbg !16654
  %mutex77 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port76, i32 0, i32 13, !dbg !16655
  call void @mutex_unlock(%struct.mutex* %mutex77) #11, !dbg !16656
  %67 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16657
  %68 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !16658
  %69 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16659
  %call78 = call i32 @block_til_ready(%struct.tty_struct* %67, %struct.file* %68, %struct.slgt_info* %69) #11, !dbg !16660
  store i32 %call78, i32* %retval1, align 4, !dbg !16661
  %70 = load i32, i32* %retval1, align 4, !dbg !16662
  %tobool79 = icmp ne i32 %70, 0, !dbg !16662
  br i1 %tobool79, label %if.then80, label %if.end88, !dbg !16664

if.then80:                                        ; preds = %if.end75
  %71 = load i32, i32* @debug_level, align 4, !dbg !16665
  %cmp81 = icmp sge i32 %71, 3, !dbg !16665
  br i1 %cmp81, label %if.then83, label %if.end87, !dbg !16668

if.then83:                                        ; preds = %if.then80
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16665
  %device_name84 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 4, !dbg !16665
  %arraydecay85 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name84, i64 0, i64 0, !dbg !16665
  %73 = load i32, i32* %retval1, align 4, !dbg !16665
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.87, i64 0, i64 0), i8* %arraydecay85, i32 %73) #12, !dbg !16665
  br label %if.end87, !dbg !16665

if.end87:                                         ; preds = %if.then83, %if.then80
  br label %cleanup, !dbg !16669

if.end88:                                         ; preds = %if.end75
  store i32 0, i32* %retval1, align 4, !dbg !16670
  br label %cleanup, !dbg !16671

cleanup:                                          ; preds = %if.end88, %if.end87, %if.then71, %if.then55
  call void @llvm.dbg.label(metadata !16672), !dbg !16673
  %74 = load i32, i32* %retval1, align 4, !dbg !16674
  %tobool89 = icmp ne i32 %74, 0, !dbg !16674
  br i1 %tobool89, label %if.then90, label %if.end105, !dbg !16676

if.then90:                                        ; preds = %cleanup
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16677
  %count91 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %75, i32 0, i32 22, !dbg !16680
  %76 = load i32, i32* %count91, align 8, !dbg !16680
  %cmp92 = icmp eq i32 %76, 1, !dbg !16681
  br i1 %cmp92, label %if.then94, label %if.end97, !dbg !16682

if.then94:                                        ; preds = %if.then90
  %77 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16683
  %port95 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %77, i32 0, i32 1, !dbg !16684
  %tty96 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port95, i32 0, i32 1, !dbg !16685
  store %struct.tty_struct* null, %struct.tty_struct** %tty96, align 8, !dbg !16686
  br label %if.end97, !dbg !16683

if.end97:                                         ; preds = %if.then94, %if.then90
  %78 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16687
  %port98 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %78, i32 0, i32 1, !dbg !16689
  %count99 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port98, i32 0, i32 7, !dbg !16690
  %79 = load i32, i32* %count99, align 4, !dbg !16690
  %tobool100 = icmp ne i32 %79, 0, !dbg !16687
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !16691

if.then101:                                       ; preds = %if.end97
  %80 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16692
  %port102 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %80, i32 0, i32 1, !dbg !16693
  %count103 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port102, i32 0, i32 7, !dbg !16694
  %81 = load i32, i32* %count103, align 4, !dbg !16695
  %dec = add i32 %81, -1, !dbg !16695
  store i32 %dec, i32* %count103, align 4, !dbg !16695
  br label %if.end104, !dbg !16692

if.end104:                                        ; preds = %if.then101, %if.end97
  br label %if.end105, !dbg !16696

if.end105:                                        ; preds = %if.end104, %cleanup
  %82 = load i32, i32* @debug_level, align 4, !dbg !16697
  %cmp106 = icmp sge i32 %82, 3, !dbg !16697
  br i1 %cmp106, label %if.then108, label %if.end112, !dbg !16699

if.then108:                                       ; preds = %if.end105
  %83 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16697
  %device_name109 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %83, i32 0, i32 4, !dbg !16697
  %arraydecay110 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name109, i64 0, i64 0, !dbg !16697
  %84 = load i32, i32* %retval1, align 4, !dbg !16697
  %call111 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i64 0, i64 0), i8* %arraydecay110, i32 %84) #12, !dbg !16697
  br label %if.end112, !dbg !16697

if.end112:                                        ; preds = %if.then108, %if.end105
  %85 = load i32, i32* %retval1, align 4, !dbg !16700
  store i32 %85, i32* %retval, align 4, !dbg !16701
  br label %return, !dbg !16701

return:                                           ; preds = %if.end112, %if.end18, %if.then9, %if.end
  %86 = load i32, i32* %retval, align 4, !dbg !16702
  ret i32 %86, !dbg !16702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @close(%struct.tty_struct* %tty, %struct.file* %filp) #1 !dbg !16703 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.slgt_info*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !16704, metadata !DIExpression()), !dbg !16705
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !16706, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !16708, metadata !DIExpression()), !dbg !16709
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16710
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !16711
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16711
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !16710
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !16709
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16712
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16714
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !16715
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16714
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0)) #11, !dbg !16716
  %tobool = icmp ne i32 %call, 0, !dbg !16716
  br i1 %tobool, label %if.then, label %if.end, !dbg !16717

if.then:                                          ; preds = %entry
  br label %if.end26, !dbg !16718

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !16719
  %cmp = icmp sge i32 %5, 3, !dbg !16719
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !16721

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16719
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !16719
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !16719
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16719
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 1, !dbg !16719
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 7, !dbg !16719
  %8 = load i32, i32* %count, align 4, !dbg !16719
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i64 0, i64 0), i8* %arraydecay2, i32 %8) #12, !dbg !16719
  br label %if.end4, !dbg !16719

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16722
  %port5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 1, !dbg !16724
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16725
  %11 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !16726
  %call6 = call i32 @tty_port_close_start(%struct.tty_port* %port5, %struct.tty_struct* %10, %struct.file* %11) #11, !dbg !16727
  %cmp7 = icmp eq i32 %call6, 0, !dbg !16728
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16729

if.then8:                                         ; preds = %if.end4
  br label %cleanup, !dbg !16730

if.end9:                                          ; preds = %if.end4
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16731
  %port10 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 1, !dbg !16732
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port10, i32 0, i32 13, !dbg !16733
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !16734
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16735
  %port11 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 1, !dbg !16737
  %call12 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port11) #11, !dbg !16738
  br i1 %call12, label %if.then13, label %if.end14, !dbg !16739

if.then13:                                        ; preds = %if.end9
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16740
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16741
  %timeout = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 12, !dbg !16742
  %16 = load i32, i32* %timeout, align 8, !dbg !16742
  call void @wait_until_sent(%struct.tty_struct* %14, i32 %16) #11, !dbg !16743
  br label %if.end14, !dbg !16743

if.end14:                                         ; preds = %if.then13, %if.end9
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16744
  call void @flush_buffer(%struct.tty_struct* %17) #11, !dbg !16745
  %18 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16746
  call void @tty_ldisc_flush(%struct.tty_struct* %18) #11, !dbg !16747
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16748
  call void @shutdown(%struct.slgt_info* %19) #11, !dbg !16749
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16750
  %port15 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 1, !dbg !16751
  %mutex16 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port15, i32 0, i32 13, !dbg !16752
  call void @mutex_unlock(%struct.mutex* %mutex16) #11, !dbg !16753
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16754
  %port17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 1, !dbg !16755
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16756
  call void @tty_port_close_end(%struct.tty_port* %port17, %struct.tty_struct* %22) #11, !dbg !16757
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16758
  %port18 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 1, !dbg !16759
  %tty19 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port18, i32 0, i32 1, !dbg !16760
  store %struct.tty_struct* null, %struct.tty_struct** %tty19, align 8, !dbg !16761
  br label %cleanup, !dbg !16758

cleanup:                                          ; preds = %if.end14, %if.then8
  call void @llvm.dbg.label(metadata !16762), !dbg !16763
  %24 = load i32, i32* @debug_level, align 4, !dbg !16764
  %cmp20 = icmp sge i32 %24, 3, !dbg !16764
  br i1 %cmp20, label %if.then21, label %if.end26, !dbg !16766

if.then21:                                        ; preds = %cleanup
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16764
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 3, !dbg !16764
  %26 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !16764
  %name22 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %26, i32 0, i32 5, !dbg !16764
  %27 = load i8*, i8** %name22, align 8, !dbg !16764
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16764
  %port23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 1, !dbg !16764
  %count24 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port23, i32 0, i32 7, !dbg !16764
  %29 = load i32, i32* %count24, align 4, !dbg !16764
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.94, i64 0, i64 0), i8* %27, i32 %29) #12, !dbg !16764
  br label %if.end26, !dbg !16764

if.end26:                                         ; preds = %if.then, %if.then21, %cleanup
  ret void, !dbg !16767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #1 !dbg !16768 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !10114, metadata !DIExpression()), !dbg !16769
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16771
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16772
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !16779, metadata !DIExpression()), !dbg !16780
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16781, metadata !DIExpression()), !dbg !16782
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !16783, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16785, metadata !DIExpression()), !dbg !16786
  store i32 0, i32* %ret, align 4, !dbg !16786
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !16787, metadata !DIExpression()), !dbg !16788
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16789
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !16790
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16790
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !16789
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !16788
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16791, metadata !DIExpression()), !dbg !16792
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16793
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16795
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !16796
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16795
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i64 0, i64 0)) #11, !dbg !16797
  %tobool = icmp ne i32 %call, 0, !dbg !16797
  br i1 %tobool, label %if.then, label %if.end, !dbg !16798

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !16799
  br label %return, !dbg !16799

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !16800
  %cmp = icmp sge i32 %5, 3, !dbg !16800
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !16802

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16800
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !16800
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !16800
  %7 = load i32, i32* %count.addr, align 4, !dbg !16800
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i64 0, i64 0), i8* %arraydecay2, i32 %7) #12, !dbg !16800
  br label %if.end4, !dbg !16800

if.end4:                                          ; preds = %if.then1, %if.end
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16803
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 51, !dbg !16805
  %9 = load i8*, i8** %tx_buf, align 8, !dbg !16805
  %tobool5 = icmp ne i8* %9, null, !dbg !16803
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !16806

lor.lhs.false:                                    ; preds = %if.end4
  %10 = load i32, i32* %count.addr, align 4, !dbg !16807
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16808
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 38, !dbg !16809
  %12 = load i32, i32* %max_frame_size, align 4, !dbg !16809
  %cmp6 = icmp ugt i32 %10, %12, !dbg !16810
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16811

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  store i32 -5, i32* %retval, align 4, !dbg !16812
  br label %return, !dbg !16812

if.end8:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %count.addr, align 4, !dbg !16813
  %tobool9 = icmp ne i32 %13, 0, !dbg !16813
  br i1 %tobool9, label %lor.lhs.false10, label %if.then14, !dbg !16815

lor.lhs.false10:                                  ; preds = %if.end8
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16816
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %14, i32 0, i32 24, !dbg !16817
  %bf.load = load i8, i8* %stopped, align 4, !dbg !16817
  %bf.clear = and i8 %bf.load, 1, !dbg !16817
  %bf.cast = zext i8 %bf.clear to i64, !dbg !16817
  %conv = trunc i64 %bf.cast to i32, !dbg !16816
  %tobool11 = icmp ne i32 %conv, 0, !dbg !16816
  br i1 %tobool11, label %if.then14, label %lor.lhs.false12, !dbg !16818

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16819
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 26, !dbg !16820
  %16 = load i32, i32* %hw_stopped, align 8, !dbg !16820
  %tobool13 = icmp ne i32 %16, 0, !dbg !16819
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !16821

if.then14:                                        ; preds = %lor.lhs.false12, %lor.lhs.false10, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !16822
  br label %return, !dbg !16822

if.end15:                                         ; preds = %lor.lhs.false12
  br label %do.body, !dbg !16823

do.body:                                          ; preds = %if.end15
  br label %do.body16, !dbg !16824

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16825, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16828, metadata !DIExpression()), !dbg !16827
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !16827
  %conv18 = zext i1 %cmp17 to i32, !dbg !16827
  store i32 1, i32* %tmp, align 4, !dbg !16827
  %17 = load i32, i32* %tmp, align 4, !dbg !16827
  br label %do.body19, !dbg !16829

do.body19:                                        ; preds = %do.body16
  br label %do.body20, !dbg !16830

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !16831

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !16833, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !16837, metadata !DIExpression()), !dbg !16836
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !16836
  %conv25 = zext i1 %cmp24 to i32, !dbg !16836
  store i32 1, i32* %tmp26, align 4, !dbg !16836
  %18 = load i32, i32* %tmp26, align 4, !dbg !16836
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !16838
  store i64 %call27, i64* %flags, align 8, !dbg !16838
  br label %do.end, !dbg !16838

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !16831

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !16830

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16839, !srcloc !16840
  br label %do.body30, !dbg !16839

do.body30:                                        ; preds = %do.body29
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16841
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !16841
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16842
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !16843
  %rlock.i = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !16843
  br label %do.end32, !dbg !16841

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !16839

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !16830

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !16829

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !16824

do.end36:                                         ; preds = %do.end35
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16844
  %tx_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 52, !dbg !16846
  %23 = load i32, i32* %tx_count, align 8, !dbg !16846
  %tobool37 = icmp ne i32 %23, 0, !dbg !16844
  br i1 %tobool37, label %if.then38, label %if.end45, !dbg !16847

if.then38:                                        ; preds = %do.end36
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16848
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16851
  %tx_buf39 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 51, !dbg !16852
  %26 = load i8*, i8** %tx_buf39, align 8, !dbg !16852
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16853
  %tx_count40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 52, !dbg !16854
  %28 = load i32, i32* %tx_count40, align 8, !dbg !16854
  %call41 = call zeroext i1 @tx_load(%struct.slgt_info* %24, i8* %26, i32 %28) #11, !dbg !16855
  br i1 %call41, label %if.end43, label %if.then42, !dbg !16856

if.then42:                                        ; preds = %if.then38
  br label %cleanup, !dbg !16857

if.end43:                                         ; preds = %if.then38
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16858
  %tx_count44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 52, !dbg !16859
  store i32 0, i32* %tx_count44, align 8, !dbg !16860
  br label %if.end45, !dbg !16861

if.end45:                                         ; preds = %if.end43, %do.end36
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16862
  %31 = load i8*, i8** %buf.addr, align 8, !dbg !16864
  %32 = load i32, i32* %count.addr, align 4, !dbg !16865
  %call46 = call zeroext i1 @tx_load(%struct.slgt_info* %30, i8* %31, i32 %32) #11, !dbg !16866
  br i1 %call46, label %if.then47, label %if.end48, !dbg !16867

if.then47:                                        ; preds = %if.end45
  %33 = load i32, i32* %count.addr, align 4, !dbg !16868
  store i32 %33, i32* %ret, align 4, !dbg !16869
  br label %if.end48, !dbg !16870

if.end48:                                         ; preds = %if.then47, %if.end45
  br label %cleanup, !dbg !16871

cleanup:                                          ; preds = %if.end48, %if.then42
  call void @llvm.dbg.label(metadata !16872), !dbg !16873
  %34 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16874
  %lock49 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %34, i32 0, i32 22, !dbg !16875
  %35 = load i64, i64* %flags, align 8, !dbg !16876
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16877
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16877
  store i32 1, i32* %tmp.i, align 4, !dbg !16877
  %36 = load i32, i32* %tmp.i, align 4, !dbg !16877
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16878
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16878
  store i32 1, i32* %tmp8.i, align 4, !dbg !16878
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !16878
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !16879
  call void @arch_local_irq_restore(i64 %38) #14, !dbg !16879
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16880, !srcloc !10199
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !16881
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !16881
  %rlock.i58 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !16881
  %41 = load i32, i32* @debug_level, align 4, !dbg !16882
  %cmp50 = icmp sge i32 %41, 3, !dbg !16882
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !16884

if.then52:                                        ; preds = %cleanup
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16882
  %device_name53 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %42, i32 0, i32 4, !dbg !16882
  %arraydecay54 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name53, i64 0, i64 0, !dbg !16882
  %43 = load i32, i32* %ret, align 4, !dbg !16882
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i64 0, i64 0), i8* %arraydecay54, i32 %43) #12, !dbg !16882
  br label %if.end56, !dbg !16882

if.end56:                                         ; preds = %if.then52, %cleanup
  %44 = load i32, i32* %ret, align 4, !dbg !16885
  store i32 %44, i32* %retval, align 4, !dbg !16886
  br label %return, !dbg !16886

return:                                           ; preds = %if.end56, %if.then14, %if.then7, %if.then
  %45 = load i32, i32* %retval, align 4, !dbg !16887
  ret i32 %45, !dbg !16887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @put_char(%struct.tty_struct* %tty, i8 zeroext %ch) #1 !dbg !16888 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !10114, metadata !DIExpression()), !dbg !16889
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16891
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16892
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !16899, metadata !DIExpression()), !dbg !16900
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !16903, metadata !DIExpression()), !dbg !16904
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16905
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !16906
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16906
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !16905
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !16904
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16907, metadata !DIExpression()), !dbg !16908
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16909, metadata !DIExpression()), !dbg !16910
  store i32 0, i32* %ret, align 4, !dbg !16910
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16911
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16913
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !16914
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16913
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0)) #11, !dbg !16915
  %tobool = icmp ne i32 %call, 0, !dbg !16915
  br i1 %tobool, label %if.then, label %if.end, !dbg !16916

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16917
  br label %return, !dbg !16917

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !16918
  %cmp = icmp sge i32 %5, 3, !dbg !16918
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !16920

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16918
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !16918
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !16918
  %7 = load i8, i8* %ch.addr, align 1, !dbg !16918
  %conv = zext i8 %7 to i32, !dbg !16918
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i64 0, i64 0), i8* %arraydecay2, i32 %conv) #12, !dbg !16918
  br label %if.end4, !dbg !16918

if.end4:                                          ; preds = %if.then1, %if.end
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16921
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 51, !dbg !16923
  %9 = load i8*, i8** %tx_buf, align 8, !dbg !16923
  %tobool5 = icmp ne i8* %9, null, !dbg !16921
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !16924

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !16925
  br label %return, !dbg !16925

if.end7:                                          ; preds = %if.end4
  br label %do.body, !dbg !16926

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !16927

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16928, metadata !DIExpression()), !dbg !16930
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16931, metadata !DIExpression()), !dbg !16930
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !16930
  %conv10 = zext i1 %cmp9 to i32, !dbg !16930
  store i32 1, i32* %tmp, align 4, !dbg !16930
  %10 = load i32, i32* %tmp, align 4, !dbg !16930
  br label %do.body11, !dbg !16932

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !16933

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !16934

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !16936, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !16940, metadata !DIExpression()), !dbg !16939
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !16939
  %conv17 = zext i1 %cmp16 to i32, !dbg !16939
  store i32 1, i32* %tmp18, align 4, !dbg !16939
  %11 = load i32, i32* %tmp18, align 4, !dbg !16939
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !16941
  store i64 %call19, i64* %flags, align 8, !dbg !16941
  br label %do.end, !dbg !16941

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !16934

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !16933

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16942, !srcloc !16943
  br label %do.body22, !dbg !16942

do.body22:                                        ; preds = %do.body21
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16944
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 22, !dbg !16944
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16945
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !16946
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !16946
  br label %do.end24, !dbg !16944

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !16942

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !16933

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !16932

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !16927

do.end28:                                         ; preds = %do.end27
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16947
  %tx_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 52, !dbg !16949
  %16 = load i32, i32* %tx_count, align 8, !dbg !16949
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16950
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 38, !dbg !16951
  %18 = load i32, i32* %max_frame_size, align 4, !dbg !16951
  %cmp29 = icmp ult i32 %16, %18, !dbg !16952
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !16953

if.then31:                                        ; preds = %do.end28
  %19 = load i8, i8* %ch.addr, align 1, !dbg !16954
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16956
  %tx_buf32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 51, !dbg !16957
  %21 = load i8*, i8** %tx_buf32, align 8, !dbg !16957
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16958
  %tx_count33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 52, !dbg !16959
  %23 = load i32, i32* %tx_count33, align 8, !dbg !16960
  %inc = add i32 %23, 1, !dbg !16960
  store i32 %inc, i32* %tx_count33, align 8, !dbg !16960
  %idxprom = sext i32 %23 to i64, !dbg !16956
  %arrayidx = getelementptr i8, i8* %21, i64 %idxprom, !dbg !16956
  store i8 %19, i8* %arrayidx, align 1, !dbg !16961
  store i32 1, i32* %ret, align 4, !dbg !16962
  br label %if.end34, !dbg !16963

if.end34:                                         ; preds = %if.then31, %do.end28
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16964
  %lock35 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 22, !dbg !16965
  %25 = load i64, i64* %flags, align 8, !dbg !16966
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !16967
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !16967
  store i32 1, i32* %tmp.i, align 4, !dbg !16967
  %26 = load i32, i32* %tmp.i, align 4, !dbg !16967
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !16968
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !16968
  store i32 1, i32* %tmp8.i, align 4, !dbg !16968
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !16968
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !16969
  call void @arch_local_irq_restore(i64 %28) #14, !dbg !16969
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !16970, !srcloc !10199
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !16971
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !16971
  %rlock.i37 = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !16971
  %31 = load i32, i32* %ret, align 4, !dbg !16972
  store i32 %31, i32* %retval, align 4, !dbg !16973
  br label %return, !dbg !16973

return:                                           ; preds = %if.end34, %if.then6, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !16974
  ret i32 %32, !dbg !16974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_chars(%struct.tty_struct* %tty) #1 !dbg !16975 {
entry:
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !10114, metadata !DIExpression()), !dbg !16976
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !16978
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !16979
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !16986, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !16988, metadata !DIExpression()), !dbg !16989
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16990
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !16991
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16991
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !16990
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !16989
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16992, metadata !DIExpression()), !dbg !16993
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !16994
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !16996
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !16997
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !16996
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.100, i64 0, i64 0)) #11, !dbg !16998
  %tobool = icmp ne i32 %call, 0, !dbg !16998
  br i1 %tobool, label %if.then, label %if.end, !dbg !16999

if.then:                                          ; preds = %entry
  br label %return, !dbg !17000

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17001
  %cmp = icmp sge i32 %5, 3, !dbg !17001
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17003

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17001
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17001
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17001
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17001
  %tx_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 52, !dbg !17001
  %8 = load i32, i32* %tx_count, align 8, !dbg !17001
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i64 0, i64 0), i8* %arraydecay2, i32 %8) #12, !dbg !17001
  br label %if.end4, !dbg !17001

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17004
  %tx_count5 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 52, !dbg !17006
  %10 = load i32, i32* %tx_count5, align 8, !dbg !17006
  %cmp6 = icmp sle i32 %10, 0, !dbg !17007
  br i1 %cmp6, label %if.then12, label %lor.lhs.false, !dbg !17008

lor.lhs.false:                                    ; preds = %if.end4
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17009
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 24, !dbg !17010
  %bf.load = load i8, i8* %stopped, align 4, !dbg !17010
  %bf.clear = and i8 %bf.load, 1, !dbg !17010
  %bf.cast = zext i8 %bf.clear to i64, !dbg !17010
  %conv = trunc i64 %bf.cast to i32, !dbg !17009
  %tobool7 = icmp ne i32 %conv, 0, !dbg !17009
  br i1 %tobool7, label %if.then12, label %lor.lhs.false8, !dbg !17011

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17012
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 26, !dbg !17013
  %13 = load i32, i32* %hw_stopped, align 8, !dbg !17013
  %tobool9 = icmp ne i32 %13, 0, !dbg !17012
  br i1 %tobool9, label %if.then12, label %lor.lhs.false10, !dbg !17014

lor.lhs.false10:                                  ; preds = %lor.lhs.false8
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17015
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 51, !dbg !17016
  %15 = load i8*, i8** %tx_buf, align 8, !dbg !17016
  %tobool11 = icmp ne i8* %15, null, !dbg !17015
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !17017

if.then12:                                        ; preds = %lor.lhs.false10, %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %return, !dbg !17018

if.end13:                                         ; preds = %lor.lhs.false10
  %16 = load i32, i32* @debug_level, align 4, !dbg !17019
  %cmp14 = icmp sge i32 %16, 3, !dbg !17019
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !17021

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17019
  %device_name17 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 4, !dbg !17019
  %arraydecay18 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name17, i64 0, i64 0, !dbg !17019
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.102, i64 0, i64 0), i8* %arraydecay18) #12, !dbg !17019
  br label %if.end20, !dbg !17019

if.end20:                                         ; preds = %if.then16, %if.end13
  br label %do.body, !dbg !17022

do.body:                                          ; preds = %if.end20
  br label %do.body21, !dbg !17023

do.body21:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17024, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17027, metadata !DIExpression()), !dbg !17026
  %cmp22 = icmp eq i64* %__dummy, %__dummy2, !dbg !17026
  %conv23 = zext i1 %cmp22 to i32, !dbg !17026
  store i32 1, i32* %tmp, align 4, !dbg !17026
  %18 = load i32, i32* %tmp, align 4, !dbg !17026
  br label %do.body24, !dbg !17028

do.body24:                                        ; preds = %do.body21
  br label %do.body25, !dbg !17029

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !17030

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !17032, metadata !DIExpression()), !dbg !17035
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !17036, metadata !DIExpression()), !dbg !17035
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !17035
  %conv30 = zext i1 %cmp29 to i32, !dbg !17035
  store i32 1, i32* %tmp31, align 4, !dbg !17035
  %19 = load i32, i32* %tmp31, align 4, !dbg !17035
  %call32 = call i64 @arch_local_irq_save() #11, !dbg !17037
  store i64 %call32, i64* %flags, align 8, !dbg !17037
  br label %do.end, !dbg !17037

do.end:                                           ; preds = %do.body26
  br label %do.end33, !dbg !17030

do.end33:                                         ; preds = %do.end
  br label %do.body34, !dbg !17029

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17038, !srcloc !17039
  br label %do.body35, !dbg !17038

do.body35:                                        ; preds = %do.body34
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17040
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 22, !dbg !17040
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17041
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !17042
  %rlock.i = bitcast %union.anon.1* %22 to %struct.raw_spinlock*, !dbg !17042
  br label %do.end37, !dbg !17040

do.end37:                                         ; preds = %do.body35
  br label %do.end38, !dbg !17038

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !17029

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !17028

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !17023

do.end41:                                         ; preds = %do.end40
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17043
  %tx_count42 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 52, !dbg !17045
  %24 = load i32, i32* %tx_count42, align 8, !dbg !17045
  %tobool43 = icmp ne i32 %24, 0, !dbg !17043
  br i1 %tobool43, label %land.lhs.true, label %if.end50, !dbg !17046

land.lhs.true:                                    ; preds = %do.end41
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17047
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17048
  %tx_buf44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 51, !dbg !17049
  %27 = load i8*, i8** %tx_buf44, align 8, !dbg !17049
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17050
  %tx_count45 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 52, !dbg !17051
  %29 = load i32, i32* %tx_count45, align 8, !dbg !17051
  %call46 = call zeroext i1 @tx_load(%struct.slgt_info* %25, i8* %27, i32 %29) #11, !dbg !17052
  br i1 %call46, label %if.then48, label %if.end50, !dbg !17053

if.then48:                                        ; preds = %land.lhs.true
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17054
  %tx_count49 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 52, !dbg !17055
  store i32 0, i32* %tx_count49, align 8, !dbg !17056
  br label %if.end50, !dbg !17054

if.end50:                                         ; preds = %if.then48, %land.lhs.true, %do.end41
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17057
  %lock51 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 22, !dbg !17058
  %32 = load i64, i64* %flags, align 8, !dbg !17059
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i52, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17060
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17060
  store i32 1, i32* %tmp.i, align 4, !dbg !17060
  %33 = load i32, i32* %tmp.i, align 4, !dbg !17060
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17061
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17061
  store i32 1, i32* %tmp8.i, align 4, !dbg !17061
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !17061
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !17062
  call void @arch_local_irq_restore(i64 %35) #14, !dbg !17062
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17063, !srcloc !10199
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !17064
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !17064
  %rlock.i53 = bitcast %union.anon.1* %37 to %struct.raw_spinlock*, !dbg !17064
  br label %return, !dbg !17065

return:                                           ; preds = %if.end50, %if.then12, %if.then
  ret void, !dbg !17065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_room(%struct.tty_struct* %tty) #1 !dbg !17066 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17067, metadata !DIExpression()), !dbg !17068
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17069, metadata !DIExpression()), !dbg !17070
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17071
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17072
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17072
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17071
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17070
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17073, metadata !DIExpression()), !dbg !17074
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17075
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17077
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17078
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17077
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i64 0, i64 0)) #11, !dbg !17079
  %tobool = icmp ne i32 %call, 0, !dbg !17079
  br i1 %tobool, label %if.then, label %if.end, !dbg !17080

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17081
  br label %return, !dbg !17081

if.end:                                           ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17082
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 48, !dbg !17083
  %6 = load i8, i8* %tx_active, align 1, !dbg !17083
  %tobool1 = trunc i8 %6 to i1, !dbg !17083
  %7 = zext i1 %tobool1 to i64, !dbg !17084
  %cond = select i1 %tobool1, i32 0, i32 65535, !dbg !17084
  store i32 %cond, i32* %ret, align 4, !dbg !17085
  %8 = load i32, i32* @debug_level, align 4, !dbg !17086
  %cmp = icmp sge i32 %8, 3, !dbg !17086
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !17088

if.then2:                                         ; preds = %if.end
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17086
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 4, !dbg !17086
  %arraydecay3 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17086
  %10 = load i32, i32* %ret, align 4, !dbg !17086
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.104, i64 0, i64 0), i8* %arraydecay3, i32 %10) #12, !dbg !17086
  br label %if.end5, !dbg !17086

if.end5:                                          ; preds = %if.then2, %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !17089
  store i32 %11, i32* %retval, align 4, !dbg !17090
  br label %return, !dbg !17090

return:                                           ; preds = %if.end5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !17091
  ret i32 %12, !dbg !17091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @chars_in_buffer(%struct.tty_struct* %tty) #1 !dbg !17092 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %count = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17093, metadata !DIExpression()), !dbg !17094
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17095, metadata !DIExpression()), !dbg !17096
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17097
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17098
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17098
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17097
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17096
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17099, metadata !DIExpression()), !dbg !17100
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17101
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17103
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17104
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17103
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i64 0, i64 0)) #11, !dbg !17105
  %tobool = icmp ne i32 %call, 0, !dbg !17105
  br i1 %tobool, label %if.then, label %if.end, !dbg !17106

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17107
  br label %return, !dbg !17107

if.end:                                           ; preds = %entry
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17108
  %call1 = call i32 @tbuf_bytes(%struct.slgt_info* %5) #11, !dbg !17109
  store i32 %call1, i32* %count, align 4, !dbg !17110
  %6 = load i32, i32* @debug_level, align 4, !dbg !17111
  %cmp = icmp sge i32 %6, 3, !dbg !17111
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !17113

if.then2:                                         ; preds = %if.end
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17111
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 4, !dbg !17111
  %arraydecay3 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17111
  %8 = load i32, i32* %count, align 4, !dbg !17111
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0), i8* %arraydecay3, i32 %8) #12, !dbg !17111
  br label %if.end5, !dbg !17111

if.end5:                                          ; preds = %if.then2, %if.end
  %9 = load i32, i32* %count, align 4, !dbg !17114
  store i32 %9, i32* %retval, align 4, !dbg !17115
  br label %return, !dbg !17115

return:                                           ; preds = %if.end5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !17116
  ret i32 %10, !dbg !17116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #1 !dbg !17117 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %info = alloca %struct.slgt_info*, align 8
  %argp = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17118, metadata !DIExpression()), !dbg !17119
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !17120, metadata !DIExpression()), !dbg !17121
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !17122, metadata !DIExpression()), !dbg !17123
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17124, metadata !DIExpression()), !dbg !17125
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17126
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17127
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17127
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17126
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17125
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !17128, metadata !DIExpression()), !dbg !17129
  %3 = load i64, i64* %arg.addr, align 8, !dbg !17130
  %4 = inttoptr i64 %3 to i8*, !dbg !17131
  store i8* %4, i8** %argp, align 8, !dbg !17129
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17132, metadata !DIExpression()), !dbg !17133
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17134
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17136
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 18, !dbg !17137
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17136
  %call = call i32 @sanity_check(%struct.slgt_info* %5, i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0)) #11, !dbg !17138
  %tobool = icmp ne i32 %call, 0, !dbg !17138
  br i1 %tobool, label %if.then, label %if.end, !dbg !17139

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !17140
  br label %return, !dbg !17140

if.end:                                           ; preds = %entry
  %7 = load i32, i32* @debug_level, align 4, !dbg !17141
  %cmp = icmp sge i32 %7, 3, !dbg !17141
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17143

if.then1:                                         ; preds = %if.end
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17141
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 4, !dbg !17141
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17141
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !17141
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.108, i64 0, i64 0), i8* %arraydecay2, i32 %9) #12, !dbg !17141
  br label %if.end4, !dbg !17141

if.end4:                                          ; preds = %if.then1, %if.end
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !17144
  %cmp5 = icmp ne i32 %10, 21596, !dbg !17146
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !17147

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17148
  %call7 = call zeroext i1 @tty_io_error(%struct.tty_struct* %11) #11, !dbg !17151
  br i1 %call7, label %if.then8, label %if.end9, !dbg !17152

if.then8:                                         ; preds = %if.then6
  store i32 -5, i32* %retval, align 4, !dbg !17153
  br label %return, !dbg !17153

if.end9:                                          ; preds = %if.then6
  br label %if.end10, !dbg !17154

if.end10:                                         ; preds = %if.end9, %if.end4
  %12 = load i32, i32* %cmd.addr, align 4, !dbg !17155
  switch i32 %12, label %sw.epilog [
    i32 -1073451768, label %sw.bb
    i32 21596, label %sw.bb12
    i32 1074818320, label %sw.bb14
    i32 -2146407151, label %sw.bb16
    i32 -1072665326, label %sw.bb18
    i32 27924, label %sw.bb20
    i32 27923, label %sw.bb22
    i32 27926, label %sw.bb25
    i32 27925, label %sw.bb27
  ], !dbg !17156

sw.bb:                                            ; preds = %if.end10
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17157
  %14 = load i8*, i8** %argp, align 8, !dbg !17159
  %15 = bitcast i8* %14 to i32*, !dbg !17159
  %call11 = call i32 @wait_mgsl_event(%struct.slgt_info* %13, i32* %15) #11, !dbg !17160
  store i32 %call11, i32* %retval, align 4, !dbg !17161
  br label %return, !dbg !17161

sw.bb12:                                          ; preds = %if.end10
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17162
  %17 = load i64, i64* %arg.addr, align 8, !dbg !17163
  %conv = trunc i64 %17 to i32, !dbg !17164
  %call13 = call i32 @modem_input_wait(%struct.slgt_info* %16, i32 %conv) #11, !dbg !17165
  store i32 %call13, i32* %retval, align 4, !dbg !17166
  br label %return, !dbg !17166

sw.bb14:                                          ; preds = %if.end10
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17167
  %19 = load i8*, i8** %argp, align 8, !dbg !17168
  %20 = bitcast i8* %19 to %struct.gpio_desc*, !dbg !17168
  %call15 = call i32 @set_gpio(%struct.slgt_info* %18, %struct.gpio_desc* %20) #11, !dbg !17169
  store i32 %call15, i32* %retval, align 4, !dbg !17170
  br label %return, !dbg !17170

sw.bb16:                                          ; preds = %if.end10
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17171
  %22 = load i8*, i8** %argp, align 8, !dbg !17172
  %23 = bitcast i8* %22 to %struct.gpio_desc*, !dbg !17172
  %call17 = call i32 @get_gpio(%struct.slgt_info* %21, %struct.gpio_desc* %23) #11, !dbg !17173
  store i32 %call17, i32* %retval, align 4, !dbg !17174
  br label %return, !dbg !17174

sw.bb18:                                          ; preds = %if.end10
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17175
  %25 = load i8*, i8** %argp, align 8, !dbg !17176
  %26 = bitcast i8* %25 to %struct.gpio_desc*, !dbg !17176
  %call19 = call i32 @wait_gpio(%struct.slgt_info* %24, %struct.gpio_desc* %26) #11, !dbg !17177
  store i32 %call19, i32* %retval, align 4, !dbg !17178
  br label %return, !dbg !17178

sw.bb20:                                          ; preds = %if.end10
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17179
  %28 = load i8*, i8** %argp, align 8, !dbg !17180
  %29 = bitcast i8* %28 to i32*, !dbg !17180
  %call21 = call i32 @get_xsync(%struct.slgt_info* %27, i32* %29) #11, !dbg !17181
  store i32 %call21, i32* %retval, align 4, !dbg !17182
  br label %return, !dbg !17182

sw.bb22:                                          ; preds = %if.end10
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17183
  %31 = load i64, i64* %arg.addr, align 8, !dbg !17184
  %conv23 = trunc i64 %31 to i32, !dbg !17185
  %call24 = call i32 @set_xsync(%struct.slgt_info* %30, i32 %conv23) #11, !dbg !17186
  store i32 %call24, i32* %retval, align 4, !dbg !17187
  br label %return, !dbg !17187

sw.bb25:                                          ; preds = %if.end10
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17188
  %33 = load i8*, i8** %argp, align 8, !dbg !17189
  %34 = bitcast i8* %33 to i32*, !dbg !17189
  %call26 = call i32 @get_xctrl(%struct.slgt_info* %32, i32* %34) #11, !dbg !17190
  store i32 %call26, i32* %retval, align 4, !dbg !17191
  br label %return, !dbg !17191

sw.bb27:                                          ; preds = %if.end10
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17192
  %36 = load i64, i64* %arg.addr, align 8, !dbg !17193
  %conv28 = trunc i64 %36 to i32, !dbg !17194
  %call29 = call i32 @set_xctrl(%struct.slgt_info* %35, i32 %conv28) #11, !dbg !17195
  store i32 %call29, i32* %retval, align 4, !dbg !17196
  br label %return, !dbg !17196

sw.epilog:                                        ; preds = %if.end10
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17197
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 1, !dbg !17198
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !17199
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !17200
  %38 = load i32, i32* %cmd.addr, align 4, !dbg !17201
  switch i32 %38, label %sw.default [
    i32 -2144310015, label %sw.bb30
    i32 1076915456, label %sw.bb32
    i32 27907, label %sw.bb34
    i32 27906, label %sw.bb36
    i32 27908, label %sw.bb39
    i32 27909, label %sw.bb42
    i32 27910, label %sw.bb45
    i32 27911, label %sw.bb47
    i32 27915, label %sw.bb49
    i32 27914, label %sw.bb51
  ], !dbg !17202

sw.bb30:                                          ; preds = %sw.epilog
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17203
  %40 = load i8*, i8** %argp, align 8, !dbg !17205
  %41 = bitcast i8* %40 to %struct._MGSL_PARAMS*, !dbg !17205
  %call31 = call i32 @get_params(%struct.slgt_info* %39, %struct._MGSL_PARAMS* %41) #11, !dbg !17206
  store i32 %call31, i32* %ret, align 4, !dbg !17207
  br label %sw.epilog54, !dbg !17208

sw.bb32:                                          ; preds = %sw.epilog
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17209
  %43 = load i8*, i8** %argp, align 8, !dbg !17210
  %44 = bitcast i8* %43 to %struct._MGSL_PARAMS*, !dbg !17210
  %call33 = call i32 @set_params(%struct.slgt_info* %42, %struct._MGSL_PARAMS* %44) #11, !dbg !17211
  store i32 %call33, i32* %ret, align 4, !dbg !17212
  br label %sw.epilog54, !dbg !17213

sw.bb34:                                          ; preds = %sw.epilog
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17214
  %46 = load i8*, i8** %argp, align 8, !dbg !17215
  %47 = bitcast i8* %46 to i32*, !dbg !17215
  %call35 = call i32 @get_txidle(%struct.slgt_info* %45, i32* %47) #11, !dbg !17216
  store i32 %call35, i32* %ret, align 4, !dbg !17217
  br label %sw.epilog54, !dbg !17218

sw.bb36:                                          ; preds = %sw.epilog
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17219
  %49 = load i64, i64* %arg.addr, align 8, !dbg !17220
  %conv37 = trunc i64 %49 to i32, !dbg !17221
  %call38 = call i32 @set_txidle(%struct.slgt_info* %48, i32 %conv37) #11, !dbg !17222
  store i32 %call38, i32* %ret, align 4, !dbg !17223
  br label %sw.epilog54, !dbg !17224

sw.bb39:                                          ; preds = %sw.epilog
  %50 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17225
  %51 = load i64, i64* %arg.addr, align 8, !dbg !17226
  %conv40 = trunc i64 %51 to i32, !dbg !17227
  %call41 = call i32 @tx_enable(%struct.slgt_info* %50, i32 %conv40) #11, !dbg !17228
  store i32 %call41, i32* %ret, align 4, !dbg !17229
  br label %sw.epilog54, !dbg !17230

sw.bb42:                                          ; preds = %sw.epilog
  %52 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17231
  %53 = load i64, i64* %arg.addr, align 8, !dbg !17232
  %conv43 = trunc i64 %53 to i32, !dbg !17233
  %call44 = call i32 @rx_enable(%struct.slgt_info* %52, i32 %conv43) #11, !dbg !17234
  store i32 %call44, i32* %ret, align 4, !dbg !17235
  br label %sw.epilog54, !dbg !17236

sw.bb45:                                          ; preds = %sw.epilog
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17237
  %call46 = call i32 @tx_abort(%struct.slgt_info* %54) #11, !dbg !17238
  store i32 %call46, i32* %ret, align 4, !dbg !17239
  br label %sw.epilog54, !dbg !17240

sw.bb47:                                          ; preds = %sw.epilog
  %55 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17241
  %56 = load i8*, i8** %argp, align 8, !dbg !17242
  %57 = bitcast i8* %56 to %struct.mgsl_icount*, !dbg !17242
  %call48 = call i32 @get_stats(%struct.slgt_info* %55, %struct.mgsl_icount* %57) #11, !dbg !17243
  store i32 %call48, i32* %ret, align 4, !dbg !17244
  br label %sw.epilog54, !dbg !17245

sw.bb49:                                          ; preds = %sw.epilog
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17246
  %59 = load i8*, i8** %argp, align 8, !dbg !17247
  %60 = bitcast i8* %59 to i32*, !dbg !17247
  %call50 = call i32 @get_interface(%struct.slgt_info* %58, i32* %60) #11, !dbg !17248
  store i32 %call50, i32* %ret, align 4, !dbg !17249
  br label %sw.epilog54, !dbg !17250

sw.bb51:                                          ; preds = %sw.epilog
  %61 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17251
  %62 = load i64, i64* %arg.addr, align 8, !dbg !17252
  %conv52 = trunc i64 %62 to i32, !dbg !17253
  %call53 = call i32 @set_interface(%struct.slgt_info* %61, i32 %conv52) #11, !dbg !17254
  store i32 %call53, i32* %ret, align 4, !dbg !17255
  br label %sw.epilog54, !dbg !17256

sw.default:                                       ; preds = %sw.epilog
  store i32 -515, i32* %ret, align 4, !dbg !17257
  br label %sw.epilog54, !dbg !17258

sw.epilog54:                                      ; preds = %sw.default, %sw.bb51, %sw.bb49, %sw.bb47, %sw.bb45, %sw.bb42, %sw.bb39, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30
  %63 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17259
  %port55 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %63, i32 0, i32 1, !dbg !17260
  %mutex56 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port55, i32 0, i32 13, !dbg !17261
  call void @mutex_unlock(%struct.mutex* %mutex56) #11, !dbg !17262
  %64 = load i32, i32* %ret, align 4, !dbg !17263
  store i32 %64, i32* %retval, align 4, !dbg !17264
  br label %return, !dbg !17264

return:                                           ; preds = %sw.epilog54, %sw.bb27, %sw.bb25, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb, %if.then8, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !17265
  ret i32 %65, !dbg !17265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #1 !dbg !17266 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !10114, metadata !DIExpression()), !dbg !17267
  %flags.addr.i97 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i97, metadata !10120, metadata !DIExpression()), !dbg !17271
  %tmp.i98 = alloca i32, align 4
  %tmp8.i99 = alloca i32, align 4
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !8902, metadata !DIExpression()), !dbg !17272
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !10114, metadata !DIExpression()), !dbg !17279
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17283
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17284
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__dummy55 = alloca i64, align 8
  %__dummy256 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17291, metadata !DIExpression()), !dbg !17292
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !17293, metadata !DIExpression()), !dbg !17294
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17295, metadata !DIExpression()), !dbg !17296
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17297
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17298
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17298
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17297
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17296
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17299, metadata !DIExpression()), !dbg !17300
  %3 = load i32, i32* @debug_level, align 4, !dbg !17301
  %cmp = icmp sge i32 %3, 3, !dbg !17301
  br i1 %cmp, label %if.then, label %if.end, !dbg !17303

if.then:                                          ; preds = %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17301
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 3, !dbg !17301
  %5 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !17301
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 5, !dbg !17301
  %6 = load i8*, i8** %name, align 8, !dbg !17301
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.128, i64 0, i64 0), i8* %6) #12, !dbg !17301
  br label %if.end, !dbg !17301

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17304
  call void @change_params(%struct.slgt_info* %7) #11, !dbg !17305
  %8 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !17306
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %8, i32 0, i32 2, !dbg !17307
  %9 = load i32, i32* %c_cflag, align 4, !dbg !17307
  %and = and i32 %9, 4111, !dbg !17308
  %tobool = icmp ne i32 %and, 0, !dbg !17308
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !17309

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17310
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 15, !dbg !17310
  %c_cflag1 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !17310
  %11 = load i32, i32* %c_cflag1, align 8, !dbg !17310
  %and2 = and i32 %11, 4111, !dbg !17310
  %tobool3 = icmp ne i32 %and2, 0, !dbg !17310
  br i1 %tobool3, label %if.end29, label %if.then4, !dbg !17311

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17312
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 49, !dbg !17313
  %13 = load i8, i8* %signals, align 4, !dbg !17314
  %conv = zext i8 %13 to i32, !dbg !17314
  %and5 = and i32 %conv, -161, !dbg !17314
  %conv6 = trunc i32 %and5 to i8, !dbg !17314
  store i8 %conv6, i8* %signals, align 4, !dbg !17314
  br label %do.body, !dbg !17315

do.body:                                          ; preds = %if.then4
  br label %do.body7, !dbg !17316

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17317, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17320, metadata !DIExpression()), !dbg !17319
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !17319
  %conv9 = zext i1 %cmp8 to i32, !dbg !17319
  store i32 1, i32* %tmp, align 4, !dbg !17319
  %14 = load i32, i32* %tmp, align 4, !dbg !17319
  br label %do.body10, !dbg !17321

do.body10:                                        ; preds = %do.body7
  br label %do.body11, !dbg !17322

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !17323

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !17325, metadata !DIExpression()), !dbg !17328
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !17329, metadata !DIExpression()), !dbg !17328
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !17328
  %conv16 = zext i1 %cmp15 to i32, !dbg !17328
  store i32 1, i32* %tmp17, align 4, !dbg !17328
  %15 = load i32, i32* %tmp17, align 4, !dbg !17328
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !17330
  store i64 %call18, i64* %flags, align 8, !dbg !17330
  br label %do.end, !dbg !17330

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !17323

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !17322

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17331, !srcloc !17332
  br label %do.body21, !dbg !17331

do.body21:                                        ; preds = %do.body20
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17333
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 22, !dbg !17333
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17334
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !17335
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !17335
  br label %do.end23, !dbg !17333

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !17331

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !17322

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !17321

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !17316

do.end27:                                         ; preds = %do.end26
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17336
  call void @set_signals(%struct.slgt_info* %19) #11, !dbg !17337
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17338
  %lock28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 22, !dbg !17339
  %21 = load i64, i64* %flags, align 8, !dbg !17340
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17341
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17341
  store i32 1, i32* %tmp.i, align 4, !dbg !17341
  %22 = load i32, i32* %tmp.i, align 4, !dbg !17341
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17342
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17342
  store i32 1, i32* %tmp8.i, align 4, !dbg !17342
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !17342
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !17343
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !17343
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17344, !srcloc !10199
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !17345
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !17345
  %rlock.i93 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !17345
  br label %if.end29, !dbg !17346

if.end29:                                         ; preds = %do.end27, %land.lhs.true, %if.end
  %27 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !17347
  %c_cflag30 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %27, i32 0, i32 2, !dbg !17348
  %28 = load i32, i32* %c_cflag30, align 4, !dbg !17348
  %and31 = and i32 %28, 4111, !dbg !17349
  %tobool32 = icmp ne i32 %and31, 0, !dbg !17349
  br i1 %tobool32, label %if.end81, label %land.lhs.true33, !dbg !17350

land.lhs.true33:                                  ; preds = %if.end29
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17351
  %termios34 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %29, i32 0, i32 15, !dbg !17351
  %c_cflag35 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios34, i32 0, i32 2, !dbg !17351
  %30 = load i32, i32* %c_cflag35, align 8, !dbg !17351
  %and36 = and i32 %30, 4111, !dbg !17351
  %tobool37 = icmp ne i32 %and36, 0, !dbg !17351
  br i1 %tobool37, label %if.then38, label %if.end81, !dbg !17352

if.then38:                                        ; preds = %land.lhs.true33
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17353
  %signals39 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 49, !dbg !17354
  %32 = load i8, i8* %signals39, align 4, !dbg !17355
  %conv40 = zext i8 %32 to i32, !dbg !17355
  %or = or i32 %conv40, 128, !dbg !17355
  %conv41 = trunc i32 %or to i8, !dbg !17355
  store i8 %conv41, i8* %signals39, align 4, !dbg !17355
  %33 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17356
  %termios42 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %33, i32 0, i32 15, !dbg !17356
  %c_cflag43 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios42, i32 0, i32 2, !dbg !17356
  %34 = load i32, i32* %c_cflag43, align 8, !dbg !17356
  %and44 = and i32 %34, -2147483648, !dbg !17356
  %tobool45 = icmp ne i32 %and44, 0, !dbg !17356
  br i1 %tobool45, label %lor.lhs.false, label %if.then47, !dbg !17358

lor.lhs.false:                                    ; preds = %if.then38
  %35 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17359
  %call46 = call zeroext i1 @tty_throttled(%struct.tty_struct* %35) #11, !dbg !17360
  br i1 %call46, label %if.end52, label %if.then47, !dbg !17361

if.then47:                                        ; preds = %lor.lhs.false, %if.then38
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17362
  %signals48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 49, !dbg !17363
  %37 = load i8, i8* %signals48, align 4, !dbg !17364
  %conv49 = zext i8 %37 to i32, !dbg !17364
  %or50 = or i32 %conv49, 32, !dbg !17364
  %conv51 = trunc i32 %or50 to i8, !dbg !17364
  store i8 %conv51, i8* %signals48, align 4, !dbg !17364
  br label %if.end52, !dbg !17362

if.end52:                                         ; preds = %if.then47, %lor.lhs.false
  br label %do.body53, !dbg !17365

do.body53:                                        ; preds = %if.end52
  br label %do.body54, !dbg !17366

do.body54:                                        ; preds = %do.body53
  call void @llvm.dbg.declare(metadata i64* %__dummy55, metadata !17367, metadata !DIExpression()), !dbg !17369
  call void @llvm.dbg.declare(metadata i64* %__dummy256, metadata !17370, metadata !DIExpression()), !dbg !17369
  %cmp57 = icmp eq i64* %__dummy55, %__dummy256, !dbg !17369
  %conv58 = zext i1 %cmp57 to i32, !dbg !17369
  store i32 1, i32* %tmp59, align 4, !dbg !17369
  %38 = load i32, i32* %tmp59, align 4, !dbg !17369
  br label %do.body60, !dbg !17371

do.body60:                                        ; preds = %do.body54
  br label %do.body61, !dbg !17372

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !17373

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !17375, metadata !DIExpression()), !dbg !17378
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !17379, metadata !DIExpression()), !dbg !17378
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !17378
  %conv66 = zext i1 %cmp65 to i32, !dbg !17378
  store i32 1, i32* %tmp67, align 4, !dbg !17378
  %39 = load i32, i32* %tmp67, align 4, !dbg !17378
  %call68 = call i64 @arch_local_irq_save() #11, !dbg !17380
  store i64 %call68, i64* %flags, align 8, !dbg !17380
  br label %do.end69, !dbg !17380

do.end69:                                         ; preds = %do.body62
  br label %do.end70, !dbg !17373

do.end70:                                         ; preds = %do.end69
  br label %do.body71, !dbg !17372

do.body71:                                        ; preds = %do.end70
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17381, !srcloc !17382
  br label %do.body72, !dbg !17381

do.body72:                                        ; preds = %do.body71
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17383
  %lock73 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 22, !dbg !17383
  store %struct.spinlock* %lock73, %struct.spinlock** %lock.addr.i94, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !17384
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !17385
  %rlock.i95 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !17385
  br label %do.end75, !dbg !17383

do.end75:                                         ; preds = %do.body72
  br label %do.end76, !dbg !17381

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !17372

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !17371

do.end78:                                         ; preds = %do.end77
  br label %do.end79, !dbg !17366

do.end79:                                         ; preds = %do.end78
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17386
  call void @set_signals(%struct.slgt_info* %43) #11, !dbg !17387
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17388
  %lock80 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %44, i32 0, i32 22, !dbg !17389
  %45 = load i64, i64* %flags, align 8, !dbg !17390
  store %struct.spinlock* %lock80, %struct.spinlock** %lock.addr.i96, align 8
  store i64 %45, i64* %flags.addr.i97, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17391
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17391
  store i32 1, i32* %tmp.i98, align 4, !dbg !17391
  %46 = load i32, i32* %tmp.i98, align 4, !dbg !17391
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17392
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17392
  store i32 1, i32* %tmp8.i99, align 4, !dbg !17392
  %47 = load i32, i32* %tmp8.i99, align 4, !dbg !17392
  %48 = load i64, i64* %flags.addr.i97, align 8, !dbg !17393
  call void @arch_local_irq_restore(i64 %48) #14, !dbg !17393
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17394, !srcloc !10199
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !17395
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !17395
  %rlock.i100 = bitcast %union.anon.1* %50 to %struct.raw_spinlock*, !dbg !17395
  br label %if.end81, !dbg !17396

if.end81:                                         ; preds = %do.end79, %land.lhs.true33, %if.end29
  %51 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !17397
  %c_cflag82 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %51, i32 0, i32 2, !dbg !17399
  %52 = load i32, i32* %c_cflag82, align 4, !dbg !17399
  %and83 = and i32 %52, -2147483648, !dbg !17400
  %tobool84 = icmp ne i32 %and83, 0, !dbg !17400
  br i1 %tobool84, label %land.lhs.true85, label %if.end91, !dbg !17401

land.lhs.true85:                                  ; preds = %if.end81
  %53 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17402
  %termios86 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %53, i32 0, i32 15, !dbg !17402
  %c_cflag87 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios86, i32 0, i32 2, !dbg !17402
  %54 = load i32, i32* %c_cflag87, align 8, !dbg !17402
  %and88 = and i32 %54, -2147483648, !dbg !17402
  %tobool89 = icmp ne i32 %and88, 0, !dbg !17402
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !17403

if.then90:                                        ; preds = %land.lhs.true85
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17404
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 26, !dbg !17406
  store i32 0, i32* %hw_stopped, align 8, !dbg !17407
  %56 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17408
  call void @tx_release(%struct.tty_struct* %56) #11, !dbg !17409
  br label %if.end91, !dbg !17410

if.end91:                                         ; preds = %if.then90, %land.lhs.true85, %if.end81
  ret void, !dbg !17411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @throttle(%struct.tty_struct* %tty) #1 !dbg !17412 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !10114, metadata !DIExpression()), !dbg !17413
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17417
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17418
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17425, metadata !DIExpression()), !dbg !17426
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17427, metadata !DIExpression()), !dbg !17428
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17429
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17430
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17430
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17429
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17428
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17431, metadata !DIExpression()), !dbg !17432
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17433
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17435
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17436
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17435
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.129, i64 0, i64 0)) #11, !dbg !17437
  %tobool = icmp ne i32 %call, 0, !dbg !17437
  br i1 %tobool, label %if.then, label %if.end, !dbg !17438

if.then:                                          ; preds = %entry
  br label %if.end37, !dbg !17439

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17440
  %cmp = icmp sge i32 %5, 3, !dbg !17440
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17442

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17440
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17440
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17440
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.130, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17440
  br label %if.end4, !dbg !17440

if.end4:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17443
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !17443
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !17443
  %8 = load i32, i32* %c_iflag, align 8, !dbg !17443
  %and = and i32 %8, 4096, !dbg !17443
  %tobool5 = icmp ne i32 %and, 0, !dbg !17443
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !17445

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17446
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17447
  %termios7 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 15, !dbg !17447
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios7, i32 0, i32 5, !dbg !17447
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !17447
  %11 = load i8, i8* %arrayidx, align 1, !dbg !17447
  call void @send_xchar(%struct.tty_struct* %9, i8 signext %11) #11, !dbg !17448
  br label %if.end8, !dbg !17448

if.end8:                                          ; preds = %if.then6, %if.end4
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17449
  %termios9 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 15, !dbg !17449
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios9, i32 0, i32 2, !dbg !17449
  %13 = load i32, i32* %c_cflag, align 8, !dbg !17449
  %and10 = and i32 %13, -2147483648, !dbg !17449
  %tobool11 = icmp ne i32 %and10, 0, !dbg !17449
  br i1 %tobool11, label %if.then12, label %if.end37, !dbg !17450

if.then12:                                        ; preds = %if.end8
  br label %do.body, !dbg !17451

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !17452

do.body13:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17453, metadata !DIExpression()), !dbg !17455
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17456, metadata !DIExpression()), !dbg !17455
  %cmp14 = icmp eq i64* %__dummy, %__dummy2, !dbg !17455
  %conv = zext i1 %cmp14 to i32, !dbg !17455
  store i32 1, i32* %tmp, align 4, !dbg !17455
  %14 = load i32, i32* %tmp, align 4, !dbg !17455
  br label %do.body15, !dbg !17457

do.body15:                                        ; preds = %do.body13
  br label %do.body16, !dbg !17458

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !17459

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !17461, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !17465, metadata !DIExpression()), !dbg !17464
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !17464
  %conv21 = zext i1 %cmp20 to i32, !dbg !17464
  store i32 1, i32* %tmp22, align 4, !dbg !17464
  %15 = load i32, i32* %tmp22, align 4, !dbg !17464
  %call23 = call i64 @arch_local_irq_save() #11, !dbg !17466
  store i64 %call23, i64* %flags, align 8, !dbg !17466
  br label %do.end, !dbg !17466

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !17459

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !17458

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17467, !srcloc !17468
  br label %do.body26, !dbg !17467

do.body26:                                        ; preds = %do.body25
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17469
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 22, !dbg !17469
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17470
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !17471
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !17471
  br label %do.end28, !dbg !17469

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !17467

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !17458

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !17457

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !17452

do.end32:                                         ; preds = %do.end31
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17472
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 49, !dbg !17473
  %20 = load i8, i8* %signals, align 4, !dbg !17474
  %conv33 = zext i8 %20 to i32, !dbg !17474
  %and34 = and i32 %conv33, -33, !dbg !17474
  %conv35 = trunc i32 %and34 to i8, !dbg !17474
  store i8 %conv35, i8* %signals, align 4, !dbg !17474
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17475
  call void @set_signals(%struct.slgt_info* %21) #11, !dbg !17476
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17477
  %lock36 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 22, !dbg !17478
  %23 = load i64, i64* %flags, align 8, !dbg !17479
  store %struct.spinlock* %lock36, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17480
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17480
  store i32 1, i32* %tmp.i, align 4, !dbg !17480
  %24 = load i32, i32* %tmp.i, align 4, !dbg !17480
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17481
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17481
  store i32 1, i32* %tmp8.i, align 4, !dbg !17481
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !17481
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !17482
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !17482
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17483, !srcloc !10199
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !17484
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !17484
  %rlock.i39 = bitcast %union.anon.1* %28 to %struct.raw_spinlock*, !dbg !17484
  br label %if.end37, !dbg !17485

if.end37:                                         ; preds = %if.then, %do.end32, %if.end8
  ret void, !dbg !17486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unthrottle(%struct.tty_struct* %tty) #1 !dbg !17487 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !10114, metadata !DIExpression()), !dbg !17488
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17492
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17493
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy22 = alloca i64, align 8
  %__dummy223 = alloca i64, align 8
  %tmp26 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17500, metadata !DIExpression()), !dbg !17501
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17502, metadata !DIExpression()), !dbg !17503
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17504
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17505
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17505
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17504
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17503
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17506, metadata !DIExpression()), !dbg !17507
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17508
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17510
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17511
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17510
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i64 0, i64 0)) #11, !dbg !17512
  %tobool = icmp ne i32 %call, 0, !dbg !17512
  br i1 %tobool, label %if.then, label %if.end, !dbg !17513

if.then:                                          ; preds = %entry
  br label %if.end40, !dbg !17514

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17515
  %cmp = icmp sge i32 %5, 3, !dbg !17515
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17517

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17515
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17515
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17515
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.132, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17515
  br label %if.end4, !dbg !17515

if.end4:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17518
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 15, !dbg !17518
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !17518
  %8 = load i32, i32* %c_iflag, align 8, !dbg !17518
  %and = and i32 %8, 4096, !dbg !17518
  %tobool5 = icmp ne i32 %and, 0, !dbg !17518
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !17520

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17521
  %x_char = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 13, !dbg !17524
  %10 = load i32, i32* %x_char, align 4, !dbg !17524
  %tobool7 = icmp ne i32 %10, 0, !dbg !17521
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !17525

if.then8:                                         ; preds = %if.then6
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17526
  %x_char9 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 13, !dbg !17527
  store i32 0, i32* %x_char9, align 4, !dbg !17528
  br label %if.end11, !dbg !17526

if.else:                                          ; preds = %if.then6
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17529
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17530
  %termios10 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %13, i32 0, i32 15, !dbg !17530
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios10, i32 0, i32 5, !dbg !17530
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !17530
  %14 = load i8, i8* %arrayidx, align 1, !dbg !17530
  call void @send_xchar(%struct.tty_struct* %12, i8 signext %14) #11, !dbg !17531
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  br label %if.end12, !dbg !17532

if.end12:                                         ; preds = %if.end11, %if.end4
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17533
  %termios13 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !17533
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios13, i32 0, i32 2, !dbg !17533
  %16 = load i32, i32* %c_cflag, align 8, !dbg !17533
  %and14 = and i32 %16, -2147483648, !dbg !17533
  %tobool15 = icmp ne i32 %and14, 0, !dbg !17533
  br i1 %tobool15, label %if.then16, label %if.end40, !dbg !17534

if.then16:                                        ; preds = %if.end12
  br label %do.body, !dbg !17535

do.body:                                          ; preds = %if.then16
  br label %do.body17, !dbg !17536

do.body17:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17537, metadata !DIExpression()), !dbg !17539
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17540, metadata !DIExpression()), !dbg !17539
  %cmp18 = icmp eq i64* %__dummy, %__dummy2, !dbg !17539
  %conv = zext i1 %cmp18 to i32, !dbg !17539
  store i32 1, i32* %tmp, align 4, !dbg !17539
  %17 = load i32, i32* %tmp, align 4, !dbg !17539
  br label %do.body19, !dbg !17541

do.body19:                                        ; preds = %do.body17
  br label %do.body20, !dbg !17542

do.body20:                                        ; preds = %do.body19
  br label %do.body21, !dbg !17543

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy22, metadata !17545, metadata !DIExpression()), !dbg !17548
  call void @llvm.dbg.declare(metadata i64* %__dummy223, metadata !17549, metadata !DIExpression()), !dbg !17548
  %cmp24 = icmp eq i64* %__dummy22, %__dummy223, !dbg !17548
  %conv25 = zext i1 %cmp24 to i32, !dbg !17548
  store i32 1, i32* %tmp26, align 4, !dbg !17548
  %18 = load i32, i32* %tmp26, align 4, !dbg !17548
  %call27 = call i64 @arch_local_irq_save() #11, !dbg !17550
  store i64 %call27, i64* %flags, align 8, !dbg !17550
  br label %do.end, !dbg !17550

do.end:                                           ; preds = %do.body21
  br label %do.end28, !dbg !17543

do.end28:                                         ; preds = %do.end
  br label %do.body29, !dbg !17542

do.body29:                                        ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17551, !srcloc !17552
  br label %do.body30, !dbg !17551

do.body30:                                        ; preds = %do.body29
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17553
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !17553
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17554
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !17555
  %rlock.i = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !17555
  br label %do.end32, !dbg !17553

do.end32:                                         ; preds = %do.body30
  br label %do.end33, !dbg !17551

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !17542

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !17541

do.end35:                                         ; preds = %do.end34
  br label %do.end36, !dbg !17536

do.end36:                                         ; preds = %do.end35
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17556
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 49, !dbg !17557
  %23 = load i8, i8* %signals, align 4, !dbg !17558
  %conv37 = zext i8 %23 to i32, !dbg !17558
  %or = or i32 %conv37, 32, !dbg !17558
  %conv38 = trunc i32 %or to i8, !dbg !17558
  store i8 %conv38, i8* %signals, align 4, !dbg !17558
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17559
  call void @set_signals(%struct.slgt_info* %24) #11, !dbg !17560
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17561
  %lock39 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 22, !dbg !17562
  %26 = load i64, i64* %flags, align 8, !dbg !17563
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17564
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17564
  store i32 1, i32* %tmp.i, align 4, !dbg !17564
  %27 = load i32, i32* %tmp.i, align 4, !dbg !17564
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17565
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17565
  store i32 1, i32* %tmp8.i, align 4, !dbg !17565
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !17565
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !17566
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !17566
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17567, !srcloc !10199
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !17568
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !17568
  %rlock.i42 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !17568
  br label %if.end40, !dbg !17569

if.end40:                                         ; preds = %if.then, %do.end36, %if.end12
  ret void, !dbg !17570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_hold(%struct.tty_struct* %tty) #1 !dbg !17571 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !10114, metadata !DIExpression()), !dbg !17572
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17574
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17575
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17582, metadata !DIExpression()), !dbg !17583
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17584, metadata !DIExpression()), !dbg !17585
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17586
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17587
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17587
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17586
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17585
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17588, metadata !DIExpression()), !dbg !17589
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17590
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17592
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17593
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17592
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i64 0, i64 0)) #11, !dbg !17594
  %tobool = icmp ne i32 %call, 0, !dbg !17594
  br i1 %tobool, label %if.then, label %if.end, !dbg !17595

if.then:                                          ; preds = %entry
  br label %return, !dbg !17596

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17597
  %cmp = icmp sge i32 %5, 3, !dbg !17597
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17599

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17597
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17597
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17597
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.134, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17597
  br label %if.end4, !dbg !17597

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !17600

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !17601

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17602, metadata !DIExpression()), !dbg !17604
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17605, metadata !DIExpression()), !dbg !17604
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !17604
  %conv = zext i1 %cmp6 to i32, !dbg !17604
  store i32 1, i32* %tmp, align 4, !dbg !17604
  %7 = load i32, i32* %tmp, align 4, !dbg !17604
  br label %do.body7, !dbg !17606

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !17607

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !17608

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !17610, metadata !DIExpression()), !dbg !17613
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !17614, metadata !DIExpression()), !dbg !17613
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !17613
  %conv13 = zext i1 %cmp12 to i32, !dbg !17613
  store i32 1, i32* %tmp14, align 4, !dbg !17613
  %8 = load i32, i32* %tmp14, align 4, !dbg !17613
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !17615
  store i64 %call15, i64* %flags, align 8, !dbg !17615
  br label %do.end, !dbg !17615

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !17608

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !17607

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17616, !srcloc !17617
  br label %do.body18, !dbg !17616

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17618
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 22, !dbg !17618
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17619
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !17620
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !17620
  br label %do.end20, !dbg !17618

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !17616

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !17607

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !17606

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !17601

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17621
  %tx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 47, !dbg !17623
  %13 = load i8, i8* %tx_enabled, align 2, !dbg !17623
  %tobool25 = trunc i8 %13 to i1, !dbg !17623
  br i1 %tobool25, label %land.lhs.true, label %if.end30, !dbg !17624

land.lhs.true:                                    ; preds = %do.end24
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17625
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 36, !dbg !17626
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !17627
  %15 = load i64, i64* %mode, align 8, !dbg !17627
  %cmp27 = icmp eq i64 %15, 1, !dbg !17628
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !17629

if.then29:                                        ; preds = %land.lhs.true
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17630
  call void @tx_stop(%struct.slgt_info* %16) #11, !dbg !17631
  br label %if.end30, !dbg !17631

if.end30:                                         ; preds = %if.then29, %land.lhs.true, %do.end24
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17632
  %lock31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 22, !dbg !17633
  %18 = load i64, i64* %flags, align 8, !dbg !17634
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17635
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17635
  store i32 1, i32* %tmp.i, align 4, !dbg !17635
  %19 = load i32, i32* %tmp.i, align 4, !dbg !17635
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17636
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17636
  store i32 1, i32* %tmp8.i, align 4, !dbg !17636
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !17636
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !17637
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !17637
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17638, !srcloc !10199
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !17639
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !17639
  %rlock.i33 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !17639
  br label %return, !dbg !17640

return:                                           ; preds = %if.end30, %if.then
  ret void, !dbg !17640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tx_release(%struct.tty_struct* %tty) #1 !dbg !17641 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !10114, metadata !DIExpression()), !dbg !17642
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17644
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17645
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17652, metadata !DIExpression()), !dbg !17653
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17654, metadata !DIExpression()), !dbg !17655
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17656
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17657
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17657
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17656
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17655
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17658, metadata !DIExpression()), !dbg !17659
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17660
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17662
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17663
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17662
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i64 0, i64 0)) #11, !dbg !17664
  %tobool = icmp ne i32 %call, 0, !dbg !17664
  br i1 %tobool, label %if.then, label %if.end, !dbg !17665

if.then:                                          ; preds = %entry
  br label %return, !dbg !17666

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17667
  %cmp = icmp sge i32 %5, 3, !dbg !17667
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17669

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17667
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17667
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17667
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17667
  br label %if.end4, !dbg !17667

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !17670

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !17671

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17672, metadata !DIExpression()), !dbg !17674
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17675, metadata !DIExpression()), !dbg !17674
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !17674
  %conv = zext i1 %cmp6 to i32, !dbg !17674
  store i32 1, i32* %tmp, align 4, !dbg !17674
  %7 = load i32, i32* %tmp, align 4, !dbg !17674
  br label %do.body7, !dbg !17676

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !17677

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !17678

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !17680, metadata !DIExpression()), !dbg !17683
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !17684, metadata !DIExpression()), !dbg !17683
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !17683
  %conv13 = zext i1 %cmp12 to i32, !dbg !17683
  store i32 1, i32* %tmp14, align 4, !dbg !17683
  %8 = load i32, i32* %tmp14, align 4, !dbg !17683
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !17685
  store i64 %call15, i64* %flags, align 8, !dbg !17685
  br label %do.end, !dbg !17685

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !17678

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !17677

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17686, !srcloc !17687
  br label %do.body18, !dbg !17686

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17688
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 22, !dbg !17688
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17689
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !17690
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !17690
  br label %do.end20, !dbg !17688

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !17686

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !17677

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !17676

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !17671

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17691
  %tx_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 52, !dbg !17693
  %13 = load i32, i32* %tx_count, align 8, !dbg !17693
  %tobool25 = icmp ne i32 %13, 0, !dbg !17691
  br i1 %tobool25, label %land.lhs.true, label %if.end31, !dbg !17694

land.lhs.true:                                    ; preds = %do.end24
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17695
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17696
  %tx_buf = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 51, !dbg !17697
  %16 = load i8*, i8** %tx_buf, align 8, !dbg !17697
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17698
  %tx_count26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 52, !dbg !17699
  %18 = load i32, i32* %tx_count26, align 8, !dbg !17699
  %call27 = call zeroext i1 @tx_load(%struct.slgt_info* %14, i8* %16, i32 %18) #11, !dbg !17700
  br i1 %call27, label %if.then29, label %if.end31, !dbg !17701

if.then29:                                        ; preds = %land.lhs.true
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17702
  %tx_count30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 52, !dbg !17703
  store i32 0, i32* %tx_count30, align 8, !dbg !17704
  br label %if.end31, !dbg !17702

if.end31:                                         ; preds = %if.then29, %land.lhs.true, %do.end24
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17705
  %lock32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 22, !dbg !17706
  %21 = load i64, i64* %flags, align 8, !dbg !17707
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17708
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17708
  store i32 1, i32* %tmp.i, align 4, !dbg !17708
  %22 = load i32, i32* %tmp.i, align 4, !dbg !17708
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17709
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17709
  store i32 1, i32* %tmp8.i, align 4, !dbg !17709
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !17709
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !17710
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !17710
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17711, !srcloc !10199
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !17712
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !17712
  %rlock.i34 = bitcast %union.anon.1* %26 to %struct.raw_spinlock*, !dbg !17712
  br label %return, !dbg !17713

return:                                           ; preds = %if.end31, %if.then
  ret void, !dbg !17713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hangup(%struct.tty_struct* %tty) #1 !dbg !17714 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !10114, metadata !DIExpression()), !dbg !17715
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17717
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17718
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17725, metadata !DIExpression()), !dbg !17726
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17727, metadata !DIExpression()), !dbg !17728
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17729
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17730
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17730
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17729
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17728
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17731, metadata !DIExpression()), !dbg !17732
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17733
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17735
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17736
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17735
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.137, i64 0, i64 0)) #11, !dbg !17737
  %tobool = icmp ne i32 %call, 0, !dbg !17737
  br i1 %tobool, label %if.then, label %if.end, !dbg !17738

if.then:                                          ; preds = %entry
  br label %return, !dbg !17739

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17740
  %cmp = icmp sge i32 %5, 3, !dbg !17740
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17742

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17740
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17740
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17740
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17740
  br label %if.end4, !dbg !17740

if.end4:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17743
  call void @flush_buffer(%struct.tty_struct* %7) #11, !dbg !17744
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17745
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 1, !dbg !17746
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !17747
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !17748
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17749
  call void @shutdown(%struct.slgt_info* %9) #11, !dbg !17750
  br label %do.body, !dbg !17751

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !17752

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17753, metadata !DIExpression()), !dbg !17755
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17756, metadata !DIExpression()), !dbg !17755
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !17755
  %conv = zext i1 %cmp6 to i32, !dbg !17755
  store i32 1, i32* %tmp, align 4, !dbg !17755
  %10 = load i32, i32* %tmp, align 4, !dbg !17755
  br label %do.body7, !dbg !17757

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !17758

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !17759

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !17761, metadata !DIExpression()), !dbg !17764
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !17765, metadata !DIExpression()), !dbg !17764
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !17764
  %conv13 = zext i1 %cmp12 to i32, !dbg !17764
  store i32 1, i32* %tmp14, align 4, !dbg !17764
  %11 = load i32, i32* %tmp14, align 4, !dbg !17764
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !17766
  store i64 %call15, i64* %flags, align 8, !dbg !17766
  br label %do.end, !dbg !17766

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !17759

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !17758

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17767, !srcloc !17768
  br label %do.body18, !dbg !17767

do.body18:                                        ; preds = %do.body17
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17769
  %port19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 1, !dbg !17769
  %lock = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port19, i32 0, i32 5, !dbg !17769
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17770
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !17771
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !17771
  br label %do.end21, !dbg !17769

do.end21:                                         ; preds = %do.body18
  br label %do.end22, !dbg !17767

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !17758

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !17757

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !17752

do.end25:                                         ; preds = %do.end24
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17772
  %port26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 1, !dbg !17773
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port26, i32 0, i32 7, !dbg !17774
  store i32 0, i32* %count, align 4, !dbg !17775
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17776
  %port27 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 1, !dbg !17777
  %tty28 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port27, i32 0, i32 1, !dbg !17778
  store %struct.tty_struct* null, %struct.tty_struct** %tty28, align 8, !dbg !17779
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17780
  %port29 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 1, !dbg !17781
  %lock30 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 5, !dbg !17782
  %18 = load i64, i64* %flags, align 8, !dbg !17783
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i35, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17784
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17784
  store i32 1, i32* %tmp.i, align 4, !dbg !17784
  %19 = load i32, i32* %tmp.i, align 4, !dbg !17784
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17785
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17785
  store i32 1, i32* %tmp8.i, align 4, !dbg !17785
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !17785
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !17786
  call void @arch_local_irq_restore(i64 %21) #14, !dbg !17786
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17787, !srcloc !10199
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !17788
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !17788
  %rlock.i36 = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !17788
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17789
  %port31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 1, !dbg !17790
  call void @tty_port_set_active(%struct.tty_port* %port31, i1 zeroext false) #11, !dbg !17791
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17792
  %port32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 1, !dbg !17793
  %mutex33 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port32, i32 0, i32 13, !dbg !17794
  call void @mutex_unlock(%struct.mutex* %mutex33) #11, !dbg !17795
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17796
  %port34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 1, !dbg !17796
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port34, i32 0, i32 8, !dbg !17796
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !17796
  br label %return, !dbg !17797

return:                                           ; preds = %do.end25, %if.then
  ret void, !dbg !17797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_break(%struct.tty_struct* %tty, i32 %break_state) #1 !dbg !17798 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !10114, metadata !DIExpression()), !dbg !17799
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17801
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17802
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %break_state.addr = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %value = alloca i16, align 2
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17809, metadata !DIExpression()), !dbg !17810
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !17811, metadata !DIExpression()), !dbg !17812
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17813, metadata !DIExpression()), !dbg !17814
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17815
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17816
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17816
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17815
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17814
  call void @llvm.dbg.declare(metadata i16* %value, metadata !17817, metadata !DIExpression()), !dbg !17818
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17819, metadata !DIExpression()), !dbg !17820
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17821
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17823
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17824
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17823
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.139, i64 0, i64 0)) #11, !dbg !17825
  %tobool = icmp ne i32 %call, 0, !dbg !17825
  br i1 %tobool, label %if.then, label %if.end, !dbg !17826

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17827
  br label %return, !dbg !17827

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17828
  %cmp = icmp sge i32 %5, 3, !dbg !17828
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17830

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17828
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17828
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17828
  %7 = load i32, i32* %break_state.addr, align 4, !dbg !17828
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i64 0, i64 0), i8* %arraydecay2, i32 %7) #12, !dbg !17828
  br label %if.end4, !dbg !17828

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !17831

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !17832

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17833, metadata !DIExpression()), !dbg !17835
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17836, metadata !DIExpression()), !dbg !17835
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !17835
  %conv = zext i1 %cmp6 to i32, !dbg !17835
  store i32 1, i32* %tmp, align 4, !dbg !17835
  %8 = load i32, i32* %tmp, align 4, !dbg !17835
  br label %do.body7, !dbg !17837

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !17838

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !17839

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !17841, metadata !DIExpression()), !dbg !17844
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !17845, metadata !DIExpression()), !dbg !17844
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !17844
  %conv13 = zext i1 %cmp12 to i32, !dbg !17844
  store i32 1, i32* %tmp14, align 4, !dbg !17844
  %9 = load i32, i32* %tmp14, align 4, !dbg !17844
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !17846
  store i64 %call15, i64* %flags, align 8, !dbg !17846
  br label %do.end, !dbg !17846

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !17839

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !17838

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17847, !srcloc !17848
  br label %do.body18, !dbg !17847

do.body18:                                        ; preds = %do.body17
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17849
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 22, !dbg !17849
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17850
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !17851
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !17851
  br label %do.end20, !dbg !17849

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !17847

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !17838

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !17837

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !17832

do.end24:                                         ; preds = %do.end23
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17852
  %call25 = call zeroext i16 @rd_reg16(%struct.slgt_info* %13, i32 130) #11, !dbg !17853
  store i16 %call25, i16* %value, align 2, !dbg !17854
  %14 = load i32, i32* %break_state.addr, align 4, !dbg !17855
  %cmp26 = icmp eq i32 %14, -1, !dbg !17857
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !17858

if.then28:                                        ; preds = %do.end24
  %15 = load i16, i16* %value, align 2, !dbg !17859
  %conv29 = zext i16 %15 to i32, !dbg !17859
  %or = or i32 %conv29, 64, !dbg !17859
  %conv30 = trunc i32 %or to i16, !dbg !17859
  store i16 %conv30, i16* %value, align 2, !dbg !17859
  br label %if.end33, !dbg !17860

if.else:                                          ; preds = %do.end24
  %16 = load i16, i16* %value, align 2, !dbg !17861
  %conv31 = zext i16 %16 to i32, !dbg !17861
  %and = and i32 %conv31, -65, !dbg !17861
  %conv32 = trunc i32 %and to i16, !dbg !17861
  store i16 %conv32, i16* %value, align 2, !dbg !17861
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then28
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17862
  %18 = load i16, i16* %value, align 2, !dbg !17863
  call void @wr_reg16(%struct.slgt_info* %17, i32 130, i16 zeroext %18) #11, !dbg !17864
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17865
  %lock34 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !17866
  %20 = load i64, i64* %flags, align 8, !dbg !17867
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i35, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17868
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17868
  store i32 1, i32* %tmp.i, align 4, !dbg !17868
  %21 = load i32, i32* %tmp.i, align 4, !dbg !17868
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17869
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17869
  store i32 1, i32* %tmp8.i, align 4, !dbg !17869
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !17869
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !17870
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !17870
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17871, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !17872
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !17872
  %rlock.i36 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !17872
  store i32 0, i32* %retval, align 4, !dbg !17873
  br label %return, !dbg !17873

return:                                           ; preds = %if.end33, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !17874
  ret i32 %26, !dbg !17874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @flush_buffer(%struct.tty_struct* %tty) #1 !dbg !17875 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !10114, metadata !DIExpression()), !dbg !17876
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !17878
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !17879
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17886, metadata !DIExpression()), !dbg !17887
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17888, metadata !DIExpression()), !dbg !17889
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17890
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17891
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17891
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17890
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17889
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17892, metadata !DIExpression()), !dbg !17893
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17894
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17896
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !17897
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17896
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i64 0, i64 0)) #11, !dbg !17898
  %tobool = icmp ne i32 %call, 0, !dbg !17898
  br i1 %tobool, label %if.then, label %if.end, !dbg !17899

if.then:                                          ; preds = %entry
  br label %return, !dbg !17900

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !17901
  %cmp = icmp sge i32 %5, 3, !dbg !17901
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !17903

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17901
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !17901
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17901
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.142, i64 0, i64 0), i8* %arraydecay2) #12, !dbg !17901
  br label %if.end4, !dbg !17901

if.end4:                                          ; preds = %if.then1, %if.end
  br label %do.body, !dbg !17904

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !17905

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17906, metadata !DIExpression()), !dbg !17908
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17909, metadata !DIExpression()), !dbg !17908
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !17908
  %conv = zext i1 %cmp6 to i32, !dbg !17908
  store i32 1, i32* %tmp, align 4, !dbg !17908
  %7 = load i32, i32* %tmp, align 4, !dbg !17908
  br label %do.body7, !dbg !17910

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !17911

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !17912

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !17914, metadata !DIExpression()), !dbg !17917
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !17918, metadata !DIExpression()), !dbg !17917
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !17917
  %conv13 = zext i1 %cmp12 to i32, !dbg !17917
  store i32 1, i32* %tmp14, align 4, !dbg !17917
  %8 = load i32, i32* %tmp14, align 4, !dbg !17917
  %call15 = call i64 @arch_local_irq_save() #11, !dbg !17919
  store i64 %call15, i64* %flags, align 8, !dbg !17919
  br label %do.end, !dbg !17919

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !17912

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !17911

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17920, !srcloc !17921
  br label %do.body18, !dbg !17920

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17922
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 22, !dbg !17922
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17923
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !17924
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !17924
  br label %do.end20, !dbg !17922

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !17920

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !17911

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !17910

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !17905

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17925
  %tx_count = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 52, !dbg !17926
  store i32 0, i32* %tx_count, align 8, !dbg !17927
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17928
  %lock25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 22, !dbg !17929
  %14 = load i64, i64* %flags, align 8, !dbg !17930
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !17931
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !17931
  store i32 1, i32* %tmp.i, align 4, !dbg !17931
  %15 = load i32, i32* %tmp.i, align 4, !dbg !17931
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !17932
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !17932
  store i32 1, i32* %tmp8.i, align 4, !dbg !17932
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !17932
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !17933
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !17933
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !17934, !srcloc !10199
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !17935
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !17935
  %rlock.i27 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !17935
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17936
  call void @tty_wakeup(%struct.tty_struct* %20) #11, !dbg !17937
  br label %return, !dbg !17938

return:                                           ; preds = %do.end24, %if.then
  ret void, !dbg !17938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wait_until_sent(%struct.tty_struct* %tty, i32 %timeout) #1 !dbg !17939 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !17946
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !17952
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !17955
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %timeout.addr = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %orig_jiffies = alloca i64, align 8
  %char_time = alloca i64, align 8
  %__UNIQUE_ID___x327 = alloca i64, align 8
  %__UNIQUE_ID___y328 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !17956, metadata !DIExpression()), !dbg !17957
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !17958, metadata !DIExpression()), !dbg !17959
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !17960, metadata !DIExpression()), !dbg !17961
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17962
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !17963
  %1 = load i8*, i8** %driver_data, align 8, !dbg !17963
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !17962
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !17961
  call void @llvm.dbg.declare(metadata i64* %orig_jiffies, metadata !17964, metadata !DIExpression()), !dbg !17965
  call void @llvm.dbg.declare(metadata i64* %char_time, metadata !17966, metadata !DIExpression()), !dbg !17967
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17968
  %tobool = icmp ne %struct.slgt_info* %3, null, !dbg !17968
  br i1 %tobool, label %if.end, label %if.then, !dbg !17970

if.then:                                          ; preds = %entry
  br label %if.end44, !dbg !17971

if.end:                                           ; preds = %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17972
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !17974
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 18, !dbg !17975
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !17974
  %call = call i32 @sanity_check(%struct.slgt_info* %4, i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.143, i64 0, i64 0)) #11, !dbg !17976
  %tobool1 = icmp ne i32 %call, 0, !dbg !17976
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !17977

if.then2:                                         ; preds = %if.end
  br label %if.end44, !dbg !17978

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* @debug_level, align 4, !dbg !17979
  %cmp = icmp sge i32 %6, 3, !dbg !17979
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !17981

if.then4:                                         ; preds = %if.end3
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17979
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 4, !dbg !17979
  %arraydecay5 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !17979
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.144, i64 0, i64 0), i8* %arraydecay5) #12, !dbg !17979
  br label %if.end7, !dbg !17979

if.end7:                                          ; preds = %if.then4, %if.end3
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17982
  %port = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 1, !dbg !17984
  %call8 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #11, !dbg !17985
  br i1 %call8, label %if.end10, label %if.then9, !dbg !17986

if.then9:                                         ; preds = %if.end7
  br label %exit, !dbg !17987

if.end10:                                         ; preds = %if.end7
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !17988
  store i64 %9, i64* %orig_jiffies, align 8, !dbg !17989
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17990
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !17992
  %data_rate = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 9, !dbg !17993
  %11 = load i64, i64* %data_rate, align 8, !dbg !17993
  %tobool11 = icmp ne i64 %11, 0, !dbg !17990
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !17994

if.then12:                                        ; preds = %if.end10
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !17995
  %timeout13 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 12, !dbg !17997
  %13 = load i32, i32* %timeout13, align 8, !dbg !17997
  %div = sdiv i32 %13, 160, !dbg !17998
  %conv = sext i32 %div to i64, !dbg !17995
  store i64 %conv, i64* %char_time, align 8, !dbg !17999
  %14 = load i64, i64* %char_time, align 8, !dbg !18000
  %tobool14 = icmp ne i64 %14, 0, !dbg !18000
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !18002

if.then15:                                        ; preds = %if.then12
  %15 = load i64, i64* %char_time, align 8, !dbg !18003
  %inc = add i64 %15, 1, !dbg !18003
  store i64 %inc, i64* %char_time, align 8, !dbg !18003
  br label %if.end16, !dbg !18004

if.end16:                                         ; preds = %if.then15, %if.then12
  br label %if.end17, !dbg !18005

if.else:                                          ; preds = %if.end10
  store i64 1, i64* %char_time, align 8, !dbg !18006
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end16
  %16 = load i32, i32* %timeout.addr, align 4, !dbg !18007
  %tobool18 = icmp ne i32 %16, 0, !dbg !18007
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !18009

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x327, metadata !18010, metadata !DIExpression()), !dbg !18012
  %17 = load i64, i64* %char_time, align 8, !dbg !18012
  store i64 %17, i64* %__UNIQUE_ID___x327, align 8, !dbg !18012
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y328, metadata !18013, metadata !DIExpression()), !dbg !18012
  %18 = load i32, i32* %timeout.addr, align 4, !dbg !18012
  %conv20 = sext i32 %18 to i64, !dbg !18012
  store i64 %conv20, i64* %__UNIQUE_ID___y328, align 8, !dbg !18012
  %19 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !18012
  %20 = load i64, i64* %__UNIQUE_ID___y328, align 8, !dbg !18012
  %cmp21 = icmp ult i64 %19, %20, !dbg !18012
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !18012

cond.true:                                        ; preds = %if.then19
  %21 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !18012
  br label %cond.end, !dbg !18012

cond.false:                                       ; preds = %if.then19
  %22 = load i64, i64* %__UNIQUE_ID___y328, align 8, !dbg !18012
  br label %cond.end, !dbg !18012

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %21, %cond.true ], [ %22, %cond.false ], !dbg !18012
  store i64 %cond, i64* %tmp, align 8, !dbg !18012
  %23 = load i64, i64* %tmp, align 8, !dbg !18012
  store i64 %23, i64* %char_time, align 8, !dbg !18014
  br label %if.end23, !dbg !18015

if.end23:                                         ; preds = %cond.end, %if.end17
  br label %while.cond, !dbg !18016

while.cond:                                       ; preds = %if.end37, %if.end23
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18017
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 48, !dbg !18018
  %25 = load i8, i8* %tx_active, align 1, !dbg !18018
  %tobool24 = trunc i8 %25 to i1, !dbg !18018
  br i1 %tobool24, label %while.body, label %while.end, !dbg !18016

while.body:                                       ; preds = %while.cond
  %26 = load i64, i64* %char_time, align 8, !dbg !18019
  %call25 = call i32 @jiffies_to_msecs(i64 %26) #11, !dbg !18020
  %call26 = call i64 @msleep_interruptible(i32 %call25) #11, !dbg !18021
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !17952
  %27 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !17952
  %28 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !17955, !srcloc !18022
  store i64 %28, i64* %pfo_val__.i, align 8, !dbg !17955
  %29 = load i64, i64* %pfo_val__.i, align 8, !dbg !17955
  %30 = inttoptr i64 %29 to %struct.task_struct*, !dbg !17955
  store %struct.task_struct* %30, %struct.task_struct** %tmp.i, align 8, !dbg !17955
  %31 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !17955
  store %struct.task_struct* %31, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !17946
  %32 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !17946
  store %struct.task_struct* %32, %struct.task_struct** %tmp1.i, align 8, !dbg !17946
  %33 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !17946
  %call28 = call i32 @signal_pending(%struct.task_struct* %33) #11, !dbg !18023
  %tobool29 = icmp ne i32 %call28, 0, !dbg !18023
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !18024

if.then30:                                        ; preds = %while.body
  br label %while.end, !dbg !18025

if.end31:                                         ; preds = %while.body
  %34 = load i32, i32* %timeout.addr, align 4, !dbg !18026
  %tobool32 = icmp ne i32 %34, 0, !dbg !18026
  br i1 %tobool32, label %land.lhs.true, label %if.end37, !dbg !18028

land.lhs.true:                                    ; preds = %if.end31
  %35 = load i64, i64* %orig_jiffies, align 8, !dbg !18029
  %36 = load i32, i32* %timeout.addr, align 4, !dbg !18029
  %conv33 = sext i32 %36 to i64, !dbg !18029
  %add = add i64 %35, %conv33, !dbg !18029
  %37 = load volatile i64, i64* @jiffies, align 8, !dbg !18029
  %sub = sub i64 %add, %37, !dbg !18029
  %cmp34 = icmp slt i64 %sub, 0, !dbg !18029
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !18030

if.then36:                                        ; preds = %land.lhs.true
  br label %while.end, !dbg !18031

if.end37:                                         ; preds = %land.lhs.true, %if.end31
  br label %while.cond, !dbg !18016, !llvm.loop !18032

while.end:                                        ; preds = %if.then36, %if.then30, %while.cond
  br label %exit, !dbg !18016

exit:                                             ; preds = %while.end, %if.then9
  call void @llvm.dbg.label(metadata !18034), !dbg !18035
  %38 = load i32, i32* @debug_level, align 4, !dbg !18036
  %cmp38 = icmp sge i32 %38, 3, !dbg !18036
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !18038

if.then40:                                        ; preds = %exit
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18036
  %device_name41 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 4, !dbg !18036
  %arraydecay42 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name41, i64 0, i64 0, !dbg !18036
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.145, i64 0, i64 0), i8* %arraydecay42) #12, !dbg !18036
  br label %if.end44, !dbg !18036

if.end44:                                         ; preds = %if.then, %if.then2, %if.then40, %exit
  ret void, !dbg !18039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @send_xchar(%struct.tty_struct* %tty, i8 signext %ch) #1 !dbg !18040 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !10114, metadata !DIExpression()), !dbg !18041
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18045
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18046
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18053, metadata !DIExpression()), !dbg !18054
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !18055, metadata !DIExpression()), !dbg !18056
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !18057, metadata !DIExpression()), !dbg !18058
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18059
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18060
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18060
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !18059
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !18058
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18061, metadata !DIExpression()), !dbg !18062
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18063
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18065
  %name = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 18, !dbg !18066
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !18065
  %call = call i32 @sanity_check(%struct.slgt_info* %3, i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.146, i64 0, i64 0)) #11, !dbg !18067
  %tobool = icmp ne i32 %call, 0, !dbg !18067
  br i1 %tobool, label %if.then, label %if.end, !dbg !18068

if.then:                                          ; preds = %entry
  br label %if.end33, !dbg !18069

if.end:                                           ; preds = %entry
  %5 = load i32, i32* @debug_level, align 4, !dbg !18070
  %cmp = icmp sge i32 %5, 3, !dbg !18070
  br i1 %cmp, label %if.then1, label %if.end4, !dbg !18072

if.then1:                                         ; preds = %if.end
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18070
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 4, !dbg !18070
  %arraydecay2 = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18070
  %7 = load i8, i8* %ch.addr, align 1, !dbg !18070
  %conv = sext i8 %7 to i32, !dbg !18070
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i64 0, i64 0), i8* %arraydecay2, i32 %conv) #12, !dbg !18070
  br label %if.end4, !dbg !18070

if.end4:                                          ; preds = %if.then1, %if.end
  %8 = load i8, i8* %ch.addr, align 1, !dbg !18073
  %conv5 = sext i8 %8 to i32, !dbg !18073
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18074
  %x_char = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 13, !dbg !18075
  store i32 %conv5, i32* %x_char, align 4, !dbg !18076
  %10 = load i8, i8* %ch.addr, align 1, !dbg !18077
  %tobool6 = icmp ne i8 %10, 0, !dbg !18077
  br i1 %tobool6, label %if.then7, label %if.end33, !dbg !18078

if.then7:                                         ; preds = %if.end4
  br label %do.body, !dbg !18079

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !18080

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18081, metadata !DIExpression()), !dbg !18083
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18084, metadata !DIExpression()), !dbg !18083
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !18083
  %conv10 = zext i1 %cmp9 to i32, !dbg !18083
  store i32 1, i32* %tmp, align 4, !dbg !18083
  %11 = load i32, i32* %tmp, align 4, !dbg !18083
  br label %do.body11, !dbg !18085

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !18086

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !18087

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !18089, metadata !DIExpression()), !dbg !18092
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !18093, metadata !DIExpression()), !dbg !18092
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !18092
  %conv17 = zext i1 %cmp16 to i32, !dbg !18092
  store i32 1, i32* %tmp18, align 4, !dbg !18092
  %12 = load i32, i32* %tmp18, align 4, !dbg !18092
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !18094
  store i64 %call19, i64* %flags, align 8, !dbg !18094
  br label %do.end, !dbg !18094

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !18087

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !18086

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18095, !srcloc !18096
  br label %do.body22, !dbg !18095

do.body22:                                        ; preds = %do.body21
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18097
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 22, !dbg !18097
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18098
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !18099
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !18099
  br label %do.end24, !dbg !18097

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !18095

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !18086

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !18085

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !18080

do.end28:                                         ; preds = %do.end27
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18100
  %tx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 47, !dbg !18102
  %17 = load i8, i8* %tx_enabled, align 2, !dbg !18102
  %tobool29 = trunc i8 %17 to i1, !dbg !18102
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !18103

if.then30:                                        ; preds = %do.end28
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18104
  call void @tx_start(%struct.slgt_info* %18) #11, !dbg !18105
  br label %if.end31, !dbg !18105

if.end31:                                         ; preds = %if.then30, %do.end28
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18106
  %lock32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 22, !dbg !18107
  %20 = load i64, i64* %flags, align 8, !dbg !18108
  store %struct.spinlock* %lock32, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18109
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18109
  store i32 1, i32* %tmp.i, align 4, !dbg !18109
  %21 = load i32, i32* %tmp.i, align 4, !dbg !18109
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18110
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18110
  store i32 1, i32* %tmp8.i, align 4, !dbg !18110
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !18110
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !18111
  call void @arch_local_irq_restore(i64 %23) #14, !dbg !18111
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18112, !srcloc !10199
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !18113
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !18113
  %rlock.i35 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !18113
  br label %if.end33, !dbg !18114

if.end33:                                         ; preds = %if.then, %if.end31, %if.end4
  ret void, !dbg !18115
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tiocmget(%struct.tty_struct* %tty) #1 !dbg !18116 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !10114, metadata !DIExpression()), !dbg !18117
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18119
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18120
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18127, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !18129, metadata !DIExpression()), !dbg !18130
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18131
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18132
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18132
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !18131
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !18130
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18133, metadata !DIExpression()), !dbg !18134
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18135, metadata !DIExpression()), !dbg !18136
  br label %do.body, !dbg !18137

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !18138

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18139, metadata !DIExpression()), !dbg !18141
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18142, metadata !DIExpression()), !dbg !18141
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18141
  %conv = zext i1 %cmp to i32, !dbg !18141
  store i32 1, i32* %tmp, align 4, !dbg !18141
  %3 = load i32, i32* %tmp, align 4, !dbg !18141
  br label %do.body2, !dbg !18143

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !18144

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18145

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !18147, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !18151, metadata !DIExpression()), !dbg !18150
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !18150
  %conv8 = zext i1 %cmp7 to i32, !dbg !18150
  store i32 1, i32* %tmp9, align 4, !dbg !18150
  %4 = load i32, i32* %tmp9, align 4, !dbg !18150
  %call = call i64 @arch_local_irq_save() #11, !dbg !18152
  store i64 %call, i64* %flags, align 8, !dbg !18152
  br label %do.end, !dbg !18152

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !18145

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !18144

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18153, !srcloc !18154
  br label %do.body12, !dbg !18153

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18155
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !18155
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18156
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !18157
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !18157
  br label %do.end14, !dbg !18155

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !18153

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !18144

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !18143

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18138

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18158
  call void @get_signals(%struct.slgt_info* %8) #11, !dbg !18159
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18160
  %lock19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 22, !dbg !18161
  %10 = load i64, i64* %flags, align 8, !dbg !18162
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i53, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18163
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18163
  store i32 1, i32* %tmp.i, align 4, !dbg !18163
  %11 = load i32, i32* %tmp.i, align 4, !dbg !18163
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18164
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18164
  store i32 1, i32* %tmp8.i, align 4, !dbg !18164
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !18164
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !18165
  call void @arch_local_irq_restore(i64 %13) #14, !dbg !18165
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18166, !srcloc !10199
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !18167
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !18167
  %rlock.i54 = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !18167
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18168
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 49, !dbg !18169
  %17 = load i8, i8* %signals, align 4, !dbg !18169
  %conv20 = zext i8 %17 to i32, !dbg !18168
  %and = and i32 %conv20, 32, !dbg !18170
  %tobool = icmp ne i32 %and, 0, !dbg !18171
  %18 = zext i1 %tobool to i64, !dbg !18171
  %cond = select i1 %tobool, i32 4, i32 0, !dbg !18171
  %19 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18172
  %signals21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %19, i32 0, i32 49, !dbg !18173
  %20 = load i8, i8* %signals21, align 4, !dbg !18173
  %conv22 = zext i8 %20 to i32, !dbg !18172
  %and23 = and i32 %conv22, 128, !dbg !18174
  %tobool24 = icmp ne i32 %and23, 0, !dbg !18175
  %21 = zext i1 %tobool24 to i64, !dbg !18175
  %cond25 = select i1 %tobool24, i32 2, i32 0, !dbg !18175
  %add = add i32 %cond, %cond25, !dbg !18176
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18177
  %signals26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 49, !dbg !18178
  %23 = load i8, i8* %signals26, align 4, !dbg !18178
  %conv27 = zext i8 %23 to i32, !dbg !18177
  %and28 = and i32 %conv27, 1, !dbg !18179
  %tobool29 = icmp ne i32 %and28, 0, !dbg !18180
  %24 = zext i1 %tobool29 to i64, !dbg !18180
  %cond30 = select i1 %tobool29, i32 64, i32 0, !dbg !18180
  %add31 = add i32 %add, %cond30, !dbg !18181
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18182
  %signals32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 49, !dbg !18183
  %26 = load i8, i8* %signals32, align 4, !dbg !18183
  %conv33 = zext i8 %26 to i32, !dbg !18182
  %and34 = and i32 %conv33, 4, !dbg !18184
  %tobool35 = icmp ne i32 %and34, 0, !dbg !18185
  %27 = zext i1 %tobool35 to i64, !dbg !18185
  %cond36 = select i1 %tobool35, i32 128, i32 0, !dbg !18185
  %add37 = add i32 %add31, %cond36, !dbg !18186
  %28 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18187
  %signals38 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %28, i32 0, i32 49, !dbg !18188
  %29 = load i8, i8* %signals38, align 4, !dbg !18188
  %conv39 = zext i8 %29 to i32, !dbg !18187
  %and40 = and i32 %conv39, 64, !dbg !18189
  %tobool41 = icmp ne i32 %and40, 0, !dbg !18190
  %30 = zext i1 %tobool41 to i64, !dbg !18190
  %cond42 = select i1 %tobool41, i32 256, i32 0, !dbg !18190
  %add43 = add i32 %add37, %cond42, !dbg !18191
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18192
  %signals44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 49, !dbg !18193
  %32 = load i8, i8* %signals44, align 4, !dbg !18193
  %conv45 = zext i8 %32 to i32, !dbg !18192
  %and46 = and i32 %conv45, 16, !dbg !18194
  %tobool47 = icmp ne i32 %and46, 0, !dbg !18195
  %33 = zext i1 %tobool47 to i64, !dbg !18195
  %cond48 = select i1 %tobool47, i32 32, i32 0, !dbg !18195
  %add49 = add i32 %add43, %cond48, !dbg !18196
  store i32 %add49, i32* %result, align 4, !dbg !18197
  %34 = load i32, i32* @debug_level, align 4, !dbg !18198
  %cmp50 = icmp sge i32 %34, 3, !dbg !18198
  br i1 %cmp50, label %if.then, label %if.end, !dbg !18200

if.then:                                          ; preds = %do.end18
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18198
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 4, !dbg !18198
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18198
  %36 = load i32, i32* %result, align 4, !dbg !18198
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.148, i64 0, i64 0), i8* %arraydecay, i32 %36) #12, !dbg !18198
  br label %if.end, !dbg !18198

if.end:                                           ; preds = %if.then, %do.end18
  %37 = load i32, i32* %result, align 4, !dbg !18201
  ret i32 %37, !dbg !18202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #1 !dbg !18203 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !10114, metadata !DIExpression()), !dbg !18204
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18206
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18207
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %info = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18214, metadata !DIExpression()), !dbg !18215
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !18216, metadata !DIExpression()), !dbg !18217
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !18218, metadata !DIExpression()), !dbg !18219
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !18220, metadata !DIExpression()), !dbg !18221
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18222
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18223
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18223
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !18222
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !18221
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18224, metadata !DIExpression()), !dbg !18225
  %3 = load i32, i32* @debug_level, align 4, !dbg !18226
  %cmp = icmp sge i32 %3, 3, !dbg !18226
  br i1 %cmp, label %if.then, label %if.end, !dbg !18228

if.then:                                          ; preds = %entry
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18226
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 4, !dbg !18226
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18226
  %5 = load i32, i32* %set.addr, align 4, !dbg !18226
  %6 = load i32, i32* %clear.addr, align 4, !dbg !18226
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.149, i64 0, i64 0), i8* %arraydecay, i32 %5, i32 %6) #12, !dbg !18226
  br label %if.end, !dbg !18226

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %set.addr, align 4, !dbg !18229
  %and = and i32 %7, 4, !dbg !18231
  %tobool = icmp ne i32 %and, 0, !dbg !18231
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !18232

if.then1:                                         ; preds = %if.end
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18233
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 49, !dbg !18234
  %9 = load i8, i8* %signals, align 4, !dbg !18235
  %conv = zext i8 %9 to i32, !dbg !18235
  %or = or i32 %conv, 32, !dbg !18235
  %conv2 = trunc i32 %or to i8, !dbg !18235
  store i8 %conv2, i8* %signals, align 4, !dbg !18235
  br label %if.end3, !dbg !18233

if.end3:                                          ; preds = %if.then1, %if.end
  %10 = load i32, i32* %set.addr, align 4, !dbg !18236
  %and4 = and i32 %10, 2, !dbg !18238
  %tobool5 = icmp ne i32 %and4, 0, !dbg !18238
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !18239

if.then6:                                         ; preds = %if.end3
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18240
  %signals7 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 49, !dbg !18241
  %12 = load i8, i8* %signals7, align 4, !dbg !18242
  %conv8 = zext i8 %12 to i32, !dbg !18242
  %or9 = or i32 %conv8, 128, !dbg !18242
  %conv10 = trunc i32 %or9 to i8, !dbg !18242
  store i8 %conv10, i8* %signals7, align 4, !dbg !18242
  br label %if.end11, !dbg !18240

if.end11:                                         ; preds = %if.then6, %if.end3
  %13 = load i32, i32* %clear.addr, align 4, !dbg !18243
  %and12 = and i32 %13, 4, !dbg !18245
  %tobool13 = icmp ne i32 %and12, 0, !dbg !18245
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !18246

if.then14:                                        ; preds = %if.end11
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18247
  %signals15 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 49, !dbg !18248
  %15 = load i8, i8* %signals15, align 4, !dbg !18249
  %conv16 = zext i8 %15 to i32, !dbg !18249
  %and17 = and i32 %conv16, -33, !dbg !18249
  %conv18 = trunc i32 %and17 to i8, !dbg !18249
  store i8 %conv18, i8* %signals15, align 4, !dbg !18249
  br label %if.end19, !dbg !18247

if.end19:                                         ; preds = %if.then14, %if.end11
  %16 = load i32, i32* %clear.addr, align 4, !dbg !18250
  %and20 = and i32 %16, 2, !dbg !18252
  %tobool21 = icmp ne i32 %and20, 0, !dbg !18252
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !18253

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18254
  %signals23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %17, i32 0, i32 49, !dbg !18255
  %18 = load i8, i8* %signals23, align 4, !dbg !18256
  %conv24 = zext i8 %18 to i32, !dbg !18256
  %and25 = and i32 %conv24, -129, !dbg !18256
  %conv26 = trunc i32 %and25 to i8, !dbg !18256
  store i8 %conv26, i8* %signals23, align 4, !dbg !18256
  br label %if.end27, !dbg !18254

if.end27:                                         ; preds = %if.then22, %if.end19
  br label %do.body, !dbg !18257

do.body:                                          ; preds = %if.end27
  br label %do.body28, !dbg !18258

do.body28:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18259, metadata !DIExpression()), !dbg !18261
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18262, metadata !DIExpression()), !dbg !18261
  %cmp29 = icmp eq i64* %__dummy, %__dummy2, !dbg !18261
  %conv30 = zext i1 %cmp29 to i32, !dbg !18261
  store i32 1, i32* %tmp, align 4, !dbg !18261
  %19 = load i32, i32* %tmp, align 4, !dbg !18261
  br label %do.body31, !dbg !18263

do.body31:                                        ; preds = %do.body28
  br label %do.body32, !dbg !18264

do.body32:                                        ; preds = %do.body31
  br label %do.body33, !dbg !18265

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !18267, metadata !DIExpression()), !dbg !18270
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !18271, metadata !DIExpression()), !dbg !18270
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !18270
  %conv37 = zext i1 %cmp36 to i32, !dbg !18270
  store i32 1, i32* %tmp38, align 4, !dbg !18270
  %20 = load i32, i32* %tmp38, align 4, !dbg !18270
  %call39 = call i64 @arch_local_irq_save() #11, !dbg !18272
  store i64 %call39, i64* %flags, align 8, !dbg !18272
  br label %do.end, !dbg !18272

do.end:                                           ; preds = %do.body33
  br label %do.end40, !dbg !18265

do.end40:                                         ; preds = %do.end
  br label %do.body41, !dbg !18264

do.body41:                                        ; preds = %do.end40
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18273, !srcloc !18274
  br label %do.body42, !dbg !18273

do.body42:                                        ; preds = %do.body41
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18275
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 22, !dbg !18275
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18276
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !18277
  %rlock.i = bitcast %union.anon.1* %23 to %struct.raw_spinlock*, !dbg !18277
  br label %do.end44, !dbg !18275

do.end44:                                         ; preds = %do.body42
  br label %do.end45, !dbg !18273

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !18264

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !18263

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !18258

do.end48:                                         ; preds = %do.end47
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18278
  call void @set_signals(%struct.slgt_info* %24) #11, !dbg !18279
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18280
  %lock49 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 22, !dbg !18281
  %26 = load i64, i64* %flags, align 8, !dbg !18282
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18283
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18283
  store i32 1, i32* %tmp.i, align 4, !dbg !18283
  %27 = load i32, i32* %tmp.i, align 4, !dbg !18283
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18284
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18284
  store i32 1, i32* %tmp8.i, align 4, !dbg !18284
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !18284
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !18285
  call void @arch_local_irq_restore(i64 %29) #14, !dbg !18285
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18286, !srcloc !10199
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !18287
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !18287
  %rlock.i51 = bitcast %union.anon.1* %31 to %struct.raw_spinlock*, !dbg !18287
  ret i32 0, !dbg !18288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_icount(%struct.tty_struct* %tty, %struct.serial_icounter_struct* %icount) #1 !dbg !18289 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !10114, metadata !DIExpression()), !dbg !18290
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18292
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18293
  %tty.addr = alloca %struct.tty_struct*, align 8
  %icount.addr = alloca %struct.serial_icounter_struct*, align 8
  %info = alloca %struct.slgt_info*, align 8
  %cnow = alloca %struct.mgsl_icount, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18300, metadata !DIExpression()), !dbg !18301
  store %struct.serial_icounter_struct* %icount, %struct.serial_icounter_struct** %icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_icounter_struct** %icount.addr, metadata !18302, metadata !DIExpression()), !dbg !18303
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !18304, metadata !DIExpression()), !dbg !18305
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18306
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !18307
  %1 = load i8*, i8** %driver_data, align 8, !dbg !18307
  %2 = bitcast i8* %1 to %struct.slgt_info*, !dbg !18306
  store %struct.slgt_info* %2, %struct.slgt_info** %info, align 8, !dbg !18305
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !18308, metadata !DIExpression()), !dbg !18309
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18310, metadata !DIExpression()), !dbg !18311
  br label %do.body, !dbg !18312

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !18313

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18314, metadata !DIExpression()), !dbg !18316
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18317, metadata !DIExpression()), !dbg !18316
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18316
  %conv = zext i1 %cmp to i32, !dbg !18316
  store i32 1, i32* %tmp, align 4, !dbg !18316
  %3 = load i32, i32* %tmp, align 4, !dbg !18316
  br label %do.body2, !dbg !18318

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !18319

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !18320

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !18322, metadata !DIExpression()), !dbg !18325
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !18326, metadata !DIExpression()), !dbg !18325
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !18325
  %conv8 = zext i1 %cmp7 to i32, !dbg !18325
  store i32 1, i32* %tmp9, align 4, !dbg !18325
  %4 = load i32, i32* %tmp9, align 4, !dbg !18325
  %call = call i64 @arch_local_irq_save() #11, !dbg !18327
  store i64 %call, i64* %flags, align 8, !dbg !18327
  br label %do.end, !dbg !18327

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !18320

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !18319

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18328, !srcloc !18329
  br label %do.body12, !dbg !18328

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18330
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !18330
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18331
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !18332
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !18332
  br label %do.end14, !dbg !18330

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !18328

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !18319

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !18318

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !18313

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18333
  %icount19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 11, !dbg !18334
  %9 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !18334
  %10 = bitcast %struct.mgsl_icount* %icount19 to i8*, !dbg !18334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 92, i1 false), !dbg !18334
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18335
  %lock20 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %11, i32 0, i32 22, !dbg !18336
  %12 = load i64, i64* %flags, align 8, !dbg !18337
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18338
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18338
  store i32 1, i32* %tmp.i, align 4, !dbg !18338
  %13 = load i32, i32* %tmp.i, align 4, !dbg !18338
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18339
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18339
  store i32 1, i32* %tmp8.i, align 4, !dbg !18339
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !18339
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !18340
  call void @arch_local_irq_restore(i64 %15) #14, !dbg !18340
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18341, !srcloc !10199
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !18342
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !18342
  %rlock.i33 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !18342
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !18343
  %18 = load i32, i32* %cts, align 4, !dbg !18343
  %19 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18344
  %cts21 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %19, i32 0, i32 0, !dbg !18345
  store i32 %18, i32* %cts21, align 4, !dbg !18346
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !18347
  %20 = load i32, i32* %dsr, align 4, !dbg !18347
  %21 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18348
  %dsr22 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %21, i32 0, i32 1, !dbg !18349
  store i32 %20, i32* %dsr22, align 4, !dbg !18350
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !18351
  %22 = load i32, i32* %rng, align 4, !dbg !18351
  %23 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18352
  %rng23 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %23, i32 0, i32 2, !dbg !18353
  store i32 %22, i32* %rng23, align 4, !dbg !18354
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !18355
  %24 = load i32, i32* %dcd, align 4, !dbg !18355
  %25 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18356
  %dcd24 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %25, i32 0, i32 3, !dbg !18357
  store i32 %24, i32* %dcd24, align 4, !dbg !18358
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 5, !dbg !18359
  %26 = load i32, i32* %rx, align 4, !dbg !18359
  %27 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18360
  %rx25 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %27, i32 0, i32 4, !dbg !18361
  store i32 %26, i32* %rx25, align 4, !dbg !18362
  %tx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 4, !dbg !18363
  %28 = load i32, i32* %tx, align 4, !dbg !18363
  %29 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18364
  %tx26 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %29, i32 0, i32 5, !dbg !18365
  store i32 %28, i32* %tx26, align 4, !dbg !18366
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 6, !dbg !18367
  %30 = load i32, i32* %frame, align 4, !dbg !18367
  %31 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18368
  %frame27 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %31, i32 0, i32 6, !dbg !18369
  store i32 %30, i32* %frame27, align 4, !dbg !18370
  %overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 8, !dbg !18371
  %32 = load i32, i32* %overrun, align 4, !dbg !18371
  %33 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18372
  %overrun28 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %33, i32 0, i32 7, !dbg !18373
  store i32 %32, i32* %overrun28, align 4, !dbg !18374
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 7, !dbg !18375
  %34 = load i32, i32* %parity, align 4, !dbg !18375
  %35 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18376
  %parity29 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %35, i32 0, i32 8, !dbg !18377
  store i32 %34, i32* %parity29, align 4, !dbg !18378
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 9, !dbg !18379
  %36 = load i32, i32* %brk, align 4, !dbg !18379
  %37 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18380
  %brk30 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %37, i32 0, i32 9, !dbg !18381
  store i32 %36, i32* %brk30, align 4, !dbg !18382
  %buf_overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 10, !dbg !18383
  %38 = load i32, i32* %buf_overrun, align 4, !dbg !18383
  %39 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !18384
  %buf_overrun31 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %39, i32 0, i32 10, !dbg !18385
  store i32 %38, i32* %buf_overrun31, align 4, !dbg !18386
  ret i32 0, !dbg !18387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @synclink_gt_proc_show(%struct.seq_file* %m, i8* %v) #1 !dbg !18388 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %info = alloca %struct.slgt_info*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !18389, metadata !DIExpression()), !dbg !18390
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !18391, metadata !DIExpression()), !dbg !18392
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info, metadata !18393, metadata !DIExpression()), !dbg !18394
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !18395
  call void @seq_puts(%struct.seq_file* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.150, i64 0, i64 0)) #11, !dbg !18396
  %1 = load %struct.slgt_info*, %struct.slgt_info** @slgt_device_list, align 8, !dbg !18397
  store %struct.slgt_info* %1, %struct.slgt_info** %info, align 8, !dbg !18398
  br label %while.cond, !dbg !18399

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18400
  %tobool = icmp ne %struct.slgt_info* %2, null, !dbg !18399
  br i1 %tobool, label %while.body, label %while.end, !dbg !18399

while.body:                                       ; preds = %while.cond
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !18401
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18403
  call void @line_info(%struct.seq_file* %3, %struct.slgt_info* %4) #11, !dbg !18404
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info, align 8, !dbg !18405
  %next_device = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 2, !dbg !18406
  %6 = load %struct.slgt_info*, %struct.slgt_info** %next_device, align 8, !dbg !18406
  store %struct.slgt_info* %6, %struct.slgt_info** %info, align 8, !dbg !18407
  br label %while.cond, !dbg !18399, !llvm.loop !18408

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !18410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sanity_check(%struct.slgt_info* %info, i8* %devname, i8* %name) #1 !dbg !18411 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %devname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !18414, metadata !DIExpression()), !dbg !18415
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !18416, metadata !DIExpression()), !dbg !18417
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18418, metadata !DIExpression()), !dbg !18419
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18420
  %tobool = icmp ne %struct.slgt_info* %0, null, !dbg !18420
  br i1 %tobool, label %if.end, label %if.then, !dbg !18422

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !18423
  br label %return, !dbg !18423

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !18424
  br label %return, !dbg !18424

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !18425
  ret i32 %1, !dbg !18425
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #4

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @block_til_ready(%struct.tty_struct* %tty, %struct.file* %filp, %struct.slgt_info* %info) #1 !dbg !18426 {
entry:
  %pscr_ret__.i121 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i121, metadata !17940, metadata !DIExpression()), !dbg !18429
  %__vpp_verify.i122 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i122, metadata !17950, metadata !DIExpression()), !dbg !18434
  %pfo_val__.i123 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i123, metadata !17953, metadata !DIExpression()), !dbg !18435
  %tmp.i124 = alloca %struct.task_struct*, align 8
  %tmp1.i125 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i116 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i116, metadata !17940, metadata !DIExpression()), !dbg !18436
  %__vpp_verify.i117 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i117, metadata !17950, metadata !DIExpression()), !dbg !18440
  %pfo_val__.i118 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i118, metadata !17953, metadata !DIExpression()), !dbg !18441
  %tmp.i119 = alloca %struct.task_struct*, align 8
  %tmp1.i120 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i111 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i111, metadata !17940, metadata !DIExpression()), !dbg !18442
  %__vpp_verify.i112 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i112, metadata !17950, metadata !DIExpression()), !dbg !18447
  %pfo_val__.i113 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i113, metadata !17953, metadata !DIExpression()), !dbg !18448
  %tmp.i114 = alloca %struct.task_struct*, align 8
  %tmp1.i115 = alloca %struct.task_struct*, align 8
  %lock.addr.i108 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i108, metadata !10114, metadata !DIExpression()), !dbg !18449
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18451
  %tmp.i109 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18452
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !18459
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !18461
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !18462
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info.addr = alloca %struct.slgt_info*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %retval2 = alloca i32, align 4
  %do_clocal = alloca i8, align 1
  %flags3 = alloca i64, align 8
  %cd = alloca i32, align 4
  %port = alloca %struct.tty_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18463, metadata !DIExpression()), !dbg !18464
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !18465, metadata !DIExpression()), !dbg !18466
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !18467, metadata !DIExpression()), !dbg !18468
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !18469, metadata !DIExpression()), !dbg !18470
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !18470
  store i32 0, i32* %flags, align 8, !dbg !18470
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !18470
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !18461
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !18461
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18462, !srcloc !18022
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !18462
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !18462
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !18462
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !18462
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !18462
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !18459
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !18459
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !18459
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !18459
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !18470
  store i8* %7, i8** %private, align 8, !dbg !18470
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !18470
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !18470
  %entry1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !18470
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0, !dbg !18470
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !18470
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1, !dbg !18470
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !18470
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !18471, metadata !DIExpression()), !dbg !18472
  call void @llvm.dbg.declare(metadata i8* %do_clocal, metadata !18473, metadata !DIExpression()), !dbg !18474
  store i8 0, i8* %do_clocal, align 1, !dbg !18474
  call void @llvm.dbg.declare(metadata i64* %flags3, metadata !18475, metadata !DIExpression()), !dbg !18476
  call void @llvm.dbg.declare(metadata i32* %cd, metadata !18477, metadata !DIExpression()), !dbg !18478
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !18479, metadata !DIExpression()), !dbg !18480
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18481
  %port4 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 1, !dbg !18482
  store %struct.tty_port* %port4, %struct.tty_port** %port, align 8, !dbg !18480
  %9 = load i32, i32* @debug_level, align 4, !dbg !18483
  %cmp = icmp sge i32 %9, 3, !dbg !18483
  br i1 %cmp, label %if.then, label %if.end, !dbg !18485

if.then:                                          ; preds = %entry
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18483
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 3, !dbg !18483
  %11 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !18483
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %11, i32 0, i32 5, !dbg !18483
  %12 = load i8*, i8** %name, align 8, !dbg !18483
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.89, i64 0, i64 0), i8* %12) #12, !dbg !18483
  br label %if.end, !dbg !18483

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !18486
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %13, i32 0, i32 7, !dbg !18488
  %14 = load i32, i32* %f_flags, align 8, !dbg !18488
  %and = and i32 %14, 2048, !dbg !18489
  %tobool = icmp ne i32 %and, 0, !dbg !18489
  br i1 %tobool, label %if.then7, label %lor.lhs.false, !dbg !18490

lor.lhs.false:                                    ; preds = %if.end
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18491
  %call6 = call zeroext i1 @tty_io_error(%struct.tty_struct* %15) #11, !dbg !18492
  br i1 %call6, label %if.then7, label %if.end8, !dbg !18493

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  %16 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18494
  call void @tty_port_set_active(%struct.tty_port* %16, i1 zeroext true) #11, !dbg !18496
  store i32 0, i32* %retval, align 4, !dbg !18497
  br label %return, !dbg !18497

if.end8:                                          ; preds = %lor.lhs.false
  %17 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18498
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %17, i32 0, i32 15, !dbg !18498
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !18498
  %18 = load i32, i32* %c_cflag, align 8, !dbg !18498
  %and9 = and i32 %18, 2048, !dbg !18498
  %tobool10 = icmp ne i32 %and9, 0, !dbg !18498
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !18500

if.then11:                                        ; preds = %if.end8
  store i8 1, i8* %do_clocal, align 1, !dbg !18501
  br label %if.end12, !dbg !18502

if.end12:                                         ; preds = %if.then11, %if.end8
  store i32 0, i32* %retval2, align 4, !dbg !18503
  %19 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18504
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %19, i32 0, i32 8, !dbg !18505
  call void @add_wait_queue(%struct.wait_queue_head* %open_wait, %struct.wait_queue_entry* %wait) #11, !dbg !18506
  br label %do.body, !dbg !18507

do.body:                                          ; preds = %if.end12
  br label %do.body13, !dbg !18508

do.body13:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18509, metadata !DIExpression()), !dbg !18511
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18512, metadata !DIExpression()), !dbg !18511
  %cmp14 = icmp eq i64* %__dummy, %__dummy2, !dbg !18511
  %conv = zext i1 %cmp14 to i32, !dbg !18511
  store i32 1, i32* %tmp, align 4, !dbg !18511
  %20 = load i32, i32* %tmp, align 4, !dbg !18511
  br label %do.body15, !dbg !18513

do.body15:                                        ; preds = %do.body13
  br label %do.body16, !dbg !18514

do.body16:                                        ; preds = %do.body15
  br label %do.body17, !dbg !18515

do.body17:                                        ; preds = %do.body16
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !18517, metadata !DIExpression()), !dbg !18520
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !18521, metadata !DIExpression()), !dbg !18520
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !18520
  %conv21 = zext i1 %cmp20 to i32, !dbg !18520
  store i32 1, i32* %tmp22, align 4, !dbg !18520
  %21 = load i32, i32* %tmp22, align 4, !dbg !18520
  %call23 = call i64 @arch_local_irq_save() #11, !dbg !18522
  store i64 %call23, i64* %flags3, align 8, !dbg !18522
  br label %do.end, !dbg !18522

do.end:                                           ; preds = %do.body17
  br label %do.end24, !dbg !18515

do.end24:                                         ; preds = %do.end
  br label %do.body25, !dbg !18514

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18523, !srcloc !18524
  br label %do.body26, !dbg !18523

do.body26:                                        ; preds = %do.body25
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18525
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 22, !dbg !18525
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18526
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !18527
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !18527
  br label %do.end28, !dbg !18525

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !18523

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !18514

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !18513

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !18508

do.end32:                                         ; preds = %do.end31
  %25 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18528
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %25, i32 0, i32 7, !dbg !18529
  %26 = load i32, i32* %count, align 4, !dbg !18530
  %dec = add i32 %26, -1, !dbg !18530
  store i32 %dec, i32* %count, align 4, !dbg !18530
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18531
  %lock33 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 22, !dbg !18532
  %28 = load i64, i64* %flags3, align 8, !dbg !18533
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i108, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18534
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18534
  store i32 1, i32* %tmp.i109, align 4, !dbg !18534
  %29 = load i32, i32* %tmp.i109, align 4, !dbg !18534
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18535
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18535
  store i32 1, i32* %tmp8.i, align 4, !dbg !18535
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !18535
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !18536
  call void @arch_local_irq_restore(i64 %31) #14, !dbg !18536
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18537, !srcloc !10199
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i108, align 8, !dbg !18538
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !18538
  %rlock.i110 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !18538
  %34 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18539
  %blocked_open = getelementptr inbounds %struct.tty_port, %struct.tty_port* %34, i32 0, i32 6, !dbg !18540
  %35 = load i32, i32* %blocked_open, align 8, !dbg !18541
  %inc = add i32 %35, 1, !dbg !18541
  store i32 %inc, i32* %blocked_open, align 8, !dbg !18541
  br label %while.body, !dbg !18542

while.body:                                       ; preds = %do.end32, %if.end78
  %36 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18543
  %termios34 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %36, i32 0, i32 15, !dbg !18543
  %c_cflag35 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios34, i32 0, i32 2, !dbg !18543
  %37 = load i32, i32* %c_cflag35, align 8, !dbg !18543
  %and36 = and i32 %37, 4111, !dbg !18543
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18543
  br i1 %tobool37, label %land.lhs.true, label %if.end41, !dbg !18545

land.lhs.true:                                    ; preds = %while.body
  %38 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18546
  %call38 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %38) #11, !dbg !18547
  br i1 %call38, label %if.then40, label %if.end41, !dbg !18548

if.then40:                                        ; preds = %land.lhs.true
  %39 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18549
  call void @tty_port_raise_dtr_rts(%struct.tty_port* %39) #11, !dbg !18550
  br label %if.end41, !dbg !18550

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %while.body
  br label %do.body42, !dbg !18551

do.body42:                                        ; preds = %if.end41
  br label %do.body43, !dbg !18552

do.body43:                                        ; preds = %do.body42
  br label %do.body44, !dbg !18553

do.body44:                                        ; preds = %do.body43
  br label %do.end45, !dbg !18554

do.end45:                                         ; preds = %do.body44
  br label %do.body46, !dbg !18553

do.body46:                                        ; preds = %do.end45
  store i8* null, i8** %__vpp_verify.i112, align 8, !dbg !18447
  %40 = load i8*, i8** %__vpp_verify.i112, align 8, !dbg !18447
  %41 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18448, !srcloc !18022
  store i64 %41, i64* %pfo_val__.i113, align 8, !dbg !18448
  %42 = load i64, i64* %pfo_val__.i113, align 8, !dbg !18448
  %43 = inttoptr i64 %42 to %struct.task_struct*, !dbg !18448
  store %struct.task_struct* %43, %struct.task_struct** %tmp.i114, align 8, !dbg !18448
  %44 = load %struct.task_struct*, %struct.task_struct** %tmp.i114, align 8, !dbg !18448
  store %struct.task_struct* %44, %struct.task_struct** %pscr_ret__.i111, align 8, !dbg !18442
  %45 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i111, align 8, !dbg !18442
  store %struct.task_struct* %45, %struct.task_struct** %tmp1.i115, align 8, !dbg !18442
  %46 = load %struct.task_struct*, %struct.task_struct** %tmp1.i115, align 8, !dbg !18442
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %46, i32 0, i32 1, !dbg !18556
  store volatile i64 1, i64* %state, align 16, !dbg !18556
  br label %do.end48, !dbg !18556

do.end48:                                         ; preds = %do.body46
  br label %do.end49, !dbg !18553

do.end49:                                         ; preds = %do.end48
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18552, !srcloc !18557
  br label %do.end50, !dbg !18552

do.end50:                                         ; preds = %do.end49
  %47 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !18558
  %call51 = call i32 @tty_hung_up_p(%struct.file* %47) #11, !dbg !18560
  %tobool52 = icmp ne i32 %call51, 0, !dbg !18560
  br i1 %tobool52, label %if.then55, label %lor.lhs.false53, !dbg !18561

lor.lhs.false53:                                  ; preds = %do.end50
  %48 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18562
  %call54 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %48) #11, !dbg !18563
  br i1 %call54, label %if.end59, label %if.then55, !dbg !18564

if.then55:                                        ; preds = %lor.lhs.false53, %do.end50
  %49 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18565
  %flags56 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %49, i32 0, i32 10, !dbg !18567
  %50 = load i64, i64* %flags56, align 8, !dbg !18567
  %and57 = and i64 %50, 1, !dbg !18568
  %tobool58 = icmp ne i64 %and57, 0, !dbg !18569
  %51 = zext i1 %tobool58 to i64, !dbg !18569
  %cond = select i1 %tobool58, i32 -11, i32 -512, !dbg !18569
  store i32 %cond, i32* %retval2, align 4, !dbg !18570
  br label %while.end, !dbg !18571

if.end59:                                         ; preds = %lor.lhs.false53
  %52 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18572
  %call60 = call i32 @tty_port_carrier_raised(%struct.tty_port* %52) #11, !dbg !18573
  store i32 %call60, i32* %cd, align 4, !dbg !18574
  %53 = load i8, i8* %do_clocal, align 1, !dbg !18575
  %tobool61 = trunc i8 %53 to i1, !dbg !18575
  br i1 %tobool61, label %if.then65, label %lor.lhs.false63, !dbg !18577

lor.lhs.false63:                                  ; preds = %if.end59
  %54 = load i32, i32* %cd, align 4, !dbg !18578
  %tobool64 = icmp ne i32 %54, 0, !dbg !18578
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !18579

if.then65:                                        ; preds = %lor.lhs.false63, %if.end59
  br label %while.end, !dbg !18580

if.end66:                                         ; preds = %lor.lhs.false63
  store i8* null, i8** %__vpp_verify.i117, align 8, !dbg !18440
  %55 = load i8*, i8** %__vpp_verify.i117, align 8, !dbg !18440
  %56 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18441, !srcloc !18022
  store i64 %56, i64* %pfo_val__.i118, align 8, !dbg !18441
  %57 = load i64, i64* %pfo_val__.i118, align 8, !dbg !18441
  %58 = inttoptr i64 %57 to %struct.task_struct*, !dbg !18441
  store %struct.task_struct* %58, %struct.task_struct** %tmp.i119, align 8, !dbg !18441
  %59 = load %struct.task_struct*, %struct.task_struct** %tmp.i119, align 8, !dbg !18441
  store %struct.task_struct* %59, %struct.task_struct** %pscr_ret__.i116, align 8, !dbg !18436
  %60 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i116, align 8, !dbg !18436
  store %struct.task_struct* %60, %struct.task_struct** %tmp1.i120, align 8, !dbg !18436
  %61 = load %struct.task_struct*, %struct.task_struct** %tmp1.i120, align 8, !dbg !18436
  %call68 = call i32 @signal_pending(%struct.task_struct* %61) #11, !dbg !18581
  %tobool69 = icmp ne i32 %call68, 0, !dbg !18581
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !18582

if.then70:                                        ; preds = %if.end66
  store i32 -512, i32* %retval2, align 4, !dbg !18583
  br label %while.end, !dbg !18585

if.end71:                                         ; preds = %if.end66
  %62 = load i32, i32* @debug_level, align 4, !dbg !18586
  %cmp72 = icmp sge i32 %62, 3, !dbg !18586
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !18588

if.then74:                                        ; preds = %if.end71
  %63 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18586
  %driver75 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %63, i32 0, i32 3, !dbg !18586
  %64 = load %struct.tty_driver*, %struct.tty_driver** %driver75, align 8, !dbg !18586
  %name76 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %64, i32 0, i32 5, !dbg !18586
  %65 = load i8*, i8** %name76, align 8, !dbg !18586
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.90, i64 0, i64 0), i8* %65) #12, !dbg !18586
  br label %if.end78, !dbg !18586

if.end78:                                         ; preds = %if.then74, %if.end71
  %66 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18589
  call void @tty_unlock(%struct.tty_struct* %66) #11, !dbg !18590
  call void @schedule() #11, !dbg !18591
  %67 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18592
  call void @tty_lock(%struct.tty_struct* %67) #11, !dbg !18593
  br label %while.body, !dbg !18542, !llvm.loop !18594

while.end:                                        ; preds = %if.then70, %if.then65, %if.then55
  br label %do.body79, !dbg !18596

do.body79:                                        ; preds = %while.end
  br label %do.body80, !dbg !18597

do.body80:                                        ; preds = %do.body79
  br label %do.body81, !dbg !18598

do.body81:                                        ; preds = %do.body80
  br label %do.end82, !dbg !18599

do.end82:                                         ; preds = %do.body81
  br label %do.body83, !dbg !18598

do.body83:                                        ; preds = %do.end82
  store i8* null, i8** %__vpp_verify.i122, align 8, !dbg !18434
  %68 = load i8*, i8** %__vpp_verify.i122, align 8, !dbg !18434
  %69 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18435, !srcloc !18022
  store i64 %69, i64* %pfo_val__.i123, align 8, !dbg !18435
  %70 = load i64, i64* %pfo_val__.i123, align 8, !dbg !18435
  %71 = inttoptr i64 %70 to %struct.task_struct*, !dbg !18435
  store %struct.task_struct* %71, %struct.task_struct** %tmp.i124, align 8, !dbg !18435
  %72 = load %struct.task_struct*, %struct.task_struct** %tmp.i124, align 8, !dbg !18435
  store %struct.task_struct* %72, %struct.task_struct** %pscr_ret__.i121, align 8, !dbg !18429
  %73 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i121, align 8, !dbg !18429
  store %struct.task_struct* %73, %struct.task_struct** %tmp1.i125, align 8, !dbg !18429
  %74 = load %struct.task_struct*, %struct.task_struct** %tmp1.i125, align 8, !dbg !18429
  %state85 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %74, i32 0, i32 1, !dbg !18601
  store volatile i64 0, i64* %state85, align 16, !dbg !18601
  br label %do.end86, !dbg !18601

do.end86:                                         ; preds = %do.body83
  br label %do.end87, !dbg !18598

do.end87:                                         ; preds = %do.end86
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18597, !srcloc !18602
  br label %do.end88, !dbg !18597

do.end88:                                         ; preds = %do.end87
  %75 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18603
  %open_wait89 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %75, i32 0, i32 8, !dbg !18604
  call void @remove_wait_queue(%struct.wait_queue_head* %open_wait89, %struct.wait_queue_entry* %wait) #11, !dbg !18605
  %76 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !18606
  %call90 = call i32 @tty_hung_up_p(%struct.file* %76) #11, !dbg !18608
  %tobool91 = icmp ne i32 %call90, 0, !dbg !18608
  br i1 %tobool91, label %if.end95, label %if.then92, !dbg !18609

if.then92:                                        ; preds = %do.end88
  %77 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18610
  %count93 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %77, i32 0, i32 7, !dbg !18611
  %78 = load i32, i32* %count93, align 4, !dbg !18612
  %inc94 = add i32 %78, 1, !dbg !18612
  store i32 %inc94, i32* %count93, align 4, !dbg !18612
  br label %if.end95, !dbg !18610

if.end95:                                         ; preds = %if.then92, %do.end88
  %79 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18613
  %blocked_open96 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %79, i32 0, i32 6, !dbg !18614
  %80 = load i32, i32* %blocked_open96, align 8, !dbg !18615
  %dec97 = add i32 %80, -1, !dbg !18615
  store i32 %dec97, i32* %blocked_open96, align 8, !dbg !18615
  %81 = load i32, i32* %retval2, align 4, !dbg !18616
  %tobool98 = icmp ne i32 %81, 0, !dbg !18616
  br i1 %tobool98, label %if.end100, label %if.then99, !dbg !18618

if.then99:                                        ; preds = %if.end95
  %82 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !18619
  call void @tty_port_set_active(%struct.tty_port* %82, i1 zeroext true) #11, !dbg !18620
  br label %if.end100, !dbg !18620

if.end100:                                        ; preds = %if.then99, %if.end95
  %83 = load i32, i32* @debug_level, align 4, !dbg !18621
  %cmp101 = icmp sge i32 %83, 3, !dbg !18621
  br i1 %cmp101, label %if.then103, label %if.end107, !dbg !18623

if.then103:                                       ; preds = %if.end100
  %84 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18621
  %driver104 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %84, i32 0, i32 3, !dbg !18621
  %85 = load %struct.tty_driver*, %struct.tty_driver** %driver104, align 8, !dbg !18621
  %name105 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %85, i32 0, i32 5, !dbg !18621
  %86 = load i8*, i8** %name105, align 8, !dbg !18621
  %87 = load i32, i32* %retval2, align 4, !dbg !18621
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.91, i64 0, i64 0), i8* %86, i32 %87) #12, !dbg !18621
  br label %if.end107, !dbg !18621

if.end107:                                        ; preds = %if.then103, %if.end100
  %88 = load i32, i32* %retval2, align 4, !dbg !18624
  store i32 %88, i32* %retval, align 4, !dbg !18625
  br label %return, !dbg !18625

return:                                           ; preds = %if.end107, %if.then7
  %89 = load i32, i32* %retval, align 4, !dbg !18626
  ret i32 %89, !dbg !18626
}

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_io_error(%struct.tty_struct* %tty) #1 !dbg !18627 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !18630, metadata !DIExpression()), !dbg !18631
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !18632
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !18633
  %call = call zeroext i1 @test_bit(i64 1, i64* %flags) #11, !dbg !18634
  ret i1 %call, !dbg !18635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_active(%struct.tty_port* %port, i1 zeroext %val) #1 !dbg !18636 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !18637, metadata !DIExpression()), !dbg !18638
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !18639, metadata !DIExpression()), !dbg !18640
  %0 = load i8, i8* %val.addr, align 1, !dbg !18641
  %tobool = trunc i8 %0 to i1, !dbg !18641
  br i1 %tobool, label %if.then, label %if.else, !dbg !18643

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !18644
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !18645
  call void @set_bit(i64 2, i64* %iflags) #11, !dbg !18646
  br label %if.end, !dbg !18646

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !18647
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !18648
  call void @clear_bit(i64 2, i64* %iflags1) #11, !dbg !18649
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !18650
}

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: noredzone
declare dso_local void @tty_port_raise_dtr_rts(%struct.tty_port*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_hung_up_p(%struct.file*) #4

; Function Attrs: noredzone
declare dso_local i32 @tty_port_carrier_raised(%struct.tty_port*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #1 !dbg !18651 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !18654, metadata !DIExpression()), !dbg !18655
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !18656
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #11, !dbg !18656
  %tobool = icmp ne i32 %call, 0, !dbg !18656
  %lnot = xor i1 %tobool, true, !dbg !18656
  %lnot1 = xor i1 %lnot, true, !dbg !18656
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18656
  %conv = sext i32 %lnot.ext to i64, !dbg !18656
  %conv2 = trunc i64 %conv to i32, !dbg !18656
  ret i32 %conv2, !dbg !18657
}

; Function Attrs: noredzone
declare dso_local void @tty_unlock(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @schedule() #4

; Function Attrs: noredzone
declare dso_local void @tty_lock(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #1 !dbg !18658 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !18661, metadata !DIExpression()), !dbg !18662
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !18663, metadata !DIExpression()), !dbg !18664
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !18665
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #11, !dbg !18666
  %1 = load i32, i32* %flag.addr, align 4, !dbg !18667
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #11, !dbg !18668
  ret i32 %call1, !dbg !18669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #1 !dbg !18670 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !18674, metadata !DIExpression()), !dbg !18675
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !18676, metadata !DIExpression()), !dbg !18677
  %0 = load i32, i32* %flag.addr, align 4, !dbg !18678
  %conv = sext i32 %0 to i64, !dbg !18678
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !18679
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !18680
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #11, !dbg !18681
  %conv1 = zext i1 %call to i32, !dbg !18681
  ret i32 %conv1, !dbg !18682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #1 !dbg !18683 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !18686, metadata !DIExpression()), !dbg !18687
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !18688
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !18689
  ret %struct.thread_info* %thread_info, !dbg !18690
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_close_start(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #4

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_flush(%struct.tty_struct*) #4

; Function Attrs: noredzone
declare dso_local void @tty_port_close_end(%struct.tty_port*, %struct.tty_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @wait_mgsl_event(%struct.slgt_info* %info, i32* %mask_ptr) #1 !dbg !18691 {
entry:
  %lock.addr.i319 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i319, metadata !10114, metadata !DIExpression()), !dbg !18694
  %flags.addr.i320 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i320, metadata !10120, metadata !DIExpression()), !dbg !18698
  %tmp.i321 = alloca i32, align 4
  %tmp8.i322 = alloca i32, align 4
  %lock.addr.i317 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i317, metadata !8902, metadata !DIExpression()), !dbg !18699
  %pscr_ret__.i312 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i312, metadata !17940, metadata !DIExpression()), !dbg !18706
  %__vpp_verify.i313 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i313, metadata !17950, metadata !DIExpression()), !dbg !18711
  %pfo_val__.i314 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i314, metadata !17953, metadata !DIExpression()), !dbg !18712
  %tmp.i315 = alloca %struct.task_struct*, align 8
  %tmp1.i316 = alloca %struct.task_struct*, align 8
  %lock.addr.i307 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i307, metadata !10114, metadata !DIExpression()), !dbg !18713
  %flags.addr.i308 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i308, metadata !10120, metadata !DIExpression()), !dbg !18718
  %tmp.i309 = alloca i32, align 4
  %tmp8.i310 = alloca i32, align 4
  %pscr_ret__.i302 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i302, metadata !17940, metadata !DIExpression()), !dbg !18719
  %__vpp_verify.i303 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i303, metadata !17950, metadata !DIExpression()), !dbg !18724
  %pfo_val__.i304 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i304, metadata !17953, metadata !DIExpression()), !dbg !18725
  %tmp.i305 = alloca %struct.task_struct*, align 8
  %tmp1.i306 = alloca %struct.task_struct*, align 8
  %lock.addr.i300 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i300, metadata !8902, metadata !DIExpression()), !dbg !18726
  %pscr_ret__.i295 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i295, metadata !17940, metadata !DIExpression()), !dbg !18733
  %__vpp_verify.i296 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i296, metadata !17950, metadata !DIExpression()), !dbg !18736
  %pfo_val__.i297 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i297, metadata !17953, metadata !DIExpression()), !dbg !18737
  %tmp.i298 = alloca %struct.task_struct*, align 8
  %tmp1.i299 = alloca %struct.task_struct*, align 8
  %lock.addr.i290 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i290, metadata !10114, metadata !DIExpression()), !dbg !18738
  %flags.addr.i291 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i291, metadata !10120, metadata !DIExpression()), !dbg !18740
  %tmp.i292 = alloca i32, align 4
  %tmp8.i293 = alloca i32, align 4
  %pscr_ret__.i285 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i285, metadata !17940, metadata !DIExpression()), !dbg !18741
  %__vpp_verify.i286 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i286, metadata !17950, metadata !DIExpression()), !dbg !18746
  %pfo_val__.i287 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i287, metadata !17953, metadata !DIExpression()), !dbg !18747
  %tmp.i288 = alloca %struct.task_struct*, align 8
  %tmp1.i289 = alloca %struct.task_struct*, align 8
  %lock.addr.i282 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i282, metadata !10114, metadata !DIExpression()), !dbg !18748
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !18752
  %tmp.i283 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !18753
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !18760
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !18762
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !18763
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %mask_ptr.addr = alloca i32*, align 8
  %flags = alloca i64, align 8
  %s = alloca i32, align 4
  %rc = alloca i32, align 4
  %cprev = alloca %struct.mgsl_icount, align 4
  %cnow = alloca %struct.mgsl_icount, align 4
  %events = alloca i32, align 4
  %mask = alloca i32, align 4
  %oldsigs = alloca %struct._input_signal_events, align 4
  %newsigs = alloca %struct._input_signal_events, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp5 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__dummy17 = alloca i64, align 8
  %__dummy218 = alloca i64, align 8
  %tmp21 = alloca i32, align 4
  %val = alloca i16, align 2
  %__dummy79 = alloca i64, align 8
  %__dummy280 = alloca i64, align 8
  %tmp83 = alloca i32, align 4
  %__dummy87 = alloca i64, align 8
  %__dummy288 = alloca i64, align 8
  %tmp91 = alloca i32, align 4
  %__dummy236 = alloca i64, align 8
  %__dummy2237 = alloca i64, align 8
  %tmp240 = alloca i32, align 4
  %__dummy244 = alloca i64, align 8
  %__dummy2245 = alloca i64, align 8
  %tmp248 = alloca i32, align 4
  %tmp275 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp278 = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !18764, metadata !DIExpression()), !dbg !18765
  store i32* %mask_ptr, i32** %mask_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mask_ptr.addr, metadata !18766, metadata !DIExpression()), !dbg !18767
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18768, metadata !DIExpression()), !dbg !18769
  call void @llvm.dbg.declare(metadata i32* %s, metadata !18770, metadata !DIExpression()), !dbg !18771
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !18772, metadata !DIExpression()), !dbg !18773
  store i32 0, i32* %rc, align 4, !dbg !18773
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cprev, metadata !18774, metadata !DIExpression()), !dbg !18775
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !18776, metadata !DIExpression()), !dbg !18777
  call void @llvm.dbg.declare(metadata i32* %events, metadata !18778, metadata !DIExpression()), !dbg !18779
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !18780, metadata !DIExpression()), !dbg !18781
  call void @llvm.dbg.declare(metadata %struct._input_signal_events* %oldsigs, metadata !18782, metadata !DIExpression()), !dbg !18783
  call void @llvm.dbg.declare(metadata %struct._input_signal_events* %newsigs, metadata !18784, metadata !DIExpression()), !dbg !18785
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !18786, metadata !DIExpression()), !dbg !18787
  %flags1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !18787
  store i32 0, i32* %flags1, align 8, !dbg !18787
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !18787
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !18762
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !18762
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18763, !srcloc !18022
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !18763
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !18763
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !18763
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !18763
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !18763
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !18760
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !18760
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !18760
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !18760
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !18787
  store i8* %7, i8** %private, align 8, !dbg !18787
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !18787
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !18787
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !18787
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !18787
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !18787
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !18787
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !18787
  call void @might_fault() #11, !dbg !18788
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !18791, metadata !DIExpression()), !dbg !18793
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !18794, metadata !DIExpression()), !dbg !18793
  %8 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !18793
  %9 = load i32*, i32** %mask_ptr.addr, align 8, !dbg !18793
  %10 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %9, i64 4, i64 %8) #10, !dbg !18793, !srcloc !18795
  %asmresult = extractvalue { i32*, i32, i64 } %10, 0, !dbg !18793
  %asmresult3 = extractvalue { i32*, i32, i64 } %10, 1, !dbg !18793
  %asmresult4 = extractvalue { i32*, i32, i64 } %10, 2, !dbg !18793
  %11 = ptrtoint i32* %asmresult to i64, !dbg !18793
  %12 = trunc i64 %11 to i32, !dbg !18793
  store i32 %12, i32* %__ret_gu, align 4, !dbg !18793
  store i32 %asmresult3, i32* %__val_gu, align 4, !dbg !18793
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult4), !dbg !18793
  %13 = load i32, i32* %__val_gu, align 4, !dbg !18793
  store i32 %13, i32* %mask, align 4, !dbg !18793
  %14 = load i32, i32* %__ret_gu, align 4, !dbg !18793
  %conv = sext i32 %14 to i64, !dbg !18793
  store i64 %conv, i64* %tmp5, align 8, !dbg !18793
  %15 = load i64, i64* %tmp5, align 8, !dbg !18793
  store i64 %15, i64* %tmp, align 8, !dbg !18788
  %16 = load i64, i64* %tmp, align 8, !dbg !18788
  %tobool = icmp ne i64 %16, 0, !dbg !18796
  br i1 %tobool, label %if.then, label %if.end, !dbg !18797

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !18798
  br label %return, !dbg !18798

if.end:                                           ; preds = %entry
  %17 = load i32, i32* @debug_level, align 4, !dbg !18799
  %cmp = icmp sge i32 %17, 3, !dbg !18799
  br i1 %cmp, label %if.then7, label %if.end9, !dbg !18801

if.then7:                                         ; preds = %if.end
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18799
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 4, !dbg !18799
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !18799
  %19 = load i32, i32* %mask, align 4, !dbg !18799
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.109, i64 0, i64 0), i8* %arraydecay, i32 %19) #12, !dbg !18799
  br label %if.end9, !dbg !18799

if.end9:                                          ; preds = %if.then7, %if.end
  br label %do.body, !dbg !18802

do.body:                                          ; preds = %if.end9
  br label %do.body10, !dbg !18803

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18804, metadata !DIExpression()), !dbg !18806
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18807, metadata !DIExpression()), !dbg !18806
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !18806
  %conv12 = zext i1 %cmp11 to i32, !dbg !18806
  store i32 1, i32* %tmp13, align 4, !dbg !18806
  %20 = load i32, i32* %tmp13, align 4, !dbg !18806
  br label %do.body14, !dbg !18808

do.body14:                                        ; preds = %do.body10
  br label %do.body15, !dbg !18809

do.body15:                                        ; preds = %do.body14
  br label %do.body16, !dbg !18810

do.body16:                                        ; preds = %do.body15
  call void @llvm.dbg.declare(metadata i64* %__dummy17, metadata !18812, metadata !DIExpression()), !dbg !18815
  call void @llvm.dbg.declare(metadata i64* %__dummy218, metadata !18816, metadata !DIExpression()), !dbg !18815
  %cmp19 = icmp eq i64* %__dummy17, %__dummy218, !dbg !18815
  %conv20 = zext i1 %cmp19 to i32, !dbg !18815
  store i32 1, i32* %tmp21, align 4, !dbg !18815
  %21 = load i32, i32* %tmp21, align 4, !dbg !18815
  %call22 = call i64 @arch_local_irq_save() #11, !dbg !18817
  store i64 %call22, i64* %flags, align 8, !dbg !18817
  br label %do.end, !dbg !18817

do.end:                                           ; preds = %do.body16
  br label %do.end23, !dbg !18810

do.end23:                                         ; preds = %do.end
  br label %do.body24, !dbg !18809

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18818, !srcloc !18819
  br label %do.body25, !dbg !18818

do.body25:                                        ; preds = %do.body24
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18820
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 22, !dbg !18820
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18821
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !18822
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !18822
  br label %do.end27, !dbg !18820

do.end27:                                         ; preds = %do.body25
  br label %do.end28, !dbg !18818

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !18809

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !18808

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !18803

do.end31:                                         ; preds = %do.end30
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18823
  call void @get_signals(%struct.slgt_info* %25) #11, !dbg !18824
  %26 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18825
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %26, i32 0, i32 49, !dbg !18826
  %27 = load i8, i8* %signals, align 4, !dbg !18826
  %conv32 = zext i8 %27 to i32, !dbg !18825
  store i32 %conv32, i32* %s, align 4, !dbg !18827
  %28 = load i32, i32* %mask, align 4, !dbg !18828
  %29 = load i32, i32* %s, align 4, !dbg !18829
  %and = and i32 %29, 64, !dbg !18830
  %tobool33 = icmp ne i32 %and, 0, !dbg !18831
  %30 = zext i1 %tobool33 to i64, !dbg !18831
  %cond = select i1 %tobool33, i32 1, i32 2, !dbg !18831
  %31 = load i32, i32* %s, align 4, !dbg !18832
  %and34 = and i32 %31, 1, !dbg !18833
  %tobool35 = icmp ne i32 %and34, 0, !dbg !18834
  %32 = zext i1 %tobool35 to i64, !dbg !18834
  %cond36 = select i1 %tobool35, i32 16, i32 32, !dbg !18834
  %add = add i32 %cond, %cond36, !dbg !18835
  %33 = load i32, i32* %s, align 4, !dbg !18836
  %and37 = and i32 %33, 16, !dbg !18837
  %tobool38 = icmp ne i32 %and37, 0, !dbg !18838
  %34 = zext i1 %tobool38 to i64, !dbg !18838
  %cond39 = select i1 %tobool38, i32 4, i32 8, !dbg !18838
  %add40 = add i32 %add, %cond39, !dbg !18839
  %35 = load i32, i32* %s, align 4, !dbg !18840
  %and41 = and i32 %35, 4, !dbg !18841
  %tobool42 = icmp ne i32 %and41, 0, !dbg !18842
  %36 = zext i1 %tobool42 to i64, !dbg !18842
  %cond43 = select i1 %tobool42, i32 64, i32 128, !dbg !18842
  %add44 = add i32 %add40, %cond43, !dbg !18843
  %and45 = and i32 %28, %add44, !dbg !18844
  store i32 %and45, i32* %events, align 4, !dbg !18845
  %37 = load i32, i32* %events, align 4, !dbg !18846
  %tobool46 = icmp ne i32 %37, 0, !dbg !18846
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !18847

if.then47:                                        ; preds = %do.end31
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18848
  %lock48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 22, !dbg !18849
  %39 = load i64, i64* %flags, align 8, !dbg !18850
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i282, align 8
  store i64 %39, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18851
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18851
  store i32 1, i32* %tmp.i283, align 4, !dbg !18851
  %40 = load i32, i32* %tmp.i283, align 4, !dbg !18851
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18852
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18852
  store i32 1, i32* %tmp8.i, align 4, !dbg !18852
  %41 = load i32, i32* %tmp8.i, align 4, !dbg !18852
  %42 = load i64, i64* %flags.addr.i, align 8, !dbg !18853
  call void @arch_local_irq_restore(i64 %42) #14, !dbg !18853
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18854, !srcloc !10199
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i282, align 8, !dbg !18855
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !18855
  %rlock.i284 = bitcast %union.anon.1* %44 to %struct.raw_spinlock*, !dbg !18855
  br label %exit, !dbg !18856

if.end49:                                         ; preds = %do.end31
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18857
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 11, !dbg !18858
  %46 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !18858
  %47 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !18858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 92, i1 false), !dbg !18858
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18859
  %input_signal_events = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 55, !dbg !18860
  %49 = bitcast %struct._input_signal_events* %oldsigs to i8*, !dbg !18860
  %50 = bitcast %struct._input_signal_events* %input_signal_events to i8*, !dbg !18860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* align 4 %50, i64 32, i1 false), !dbg !18860
  %51 = load i32, i32* %mask, align 4, !dbg !18861
  %and50 = and i32 %51, 768, !dbg !18863
  %tobool51 = icmp ne i32 %and50, 0, !dbg !18863
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !18864

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata i16* %val, metadata !18865, metadata !DIExpression()), !dbg !18867
  %52 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18868
  %call53 = call zeroext i16 @rd_reg16(%struct.slgt_info* %52, i32 140) #11, !dbg !18869
  store i16 %call53, i16* %val, align 2, !dbg !18867
  %53 = load i16, i16* %val, align 2, !dbg !18870
  %conv54 = zext i16 %53 to i32, !dbg !18870
  %and55 = and i32 %conv54, 512, !dbg !18872
  %tobool56 = icmp ne i32 %and55, 0, !dbg !18872
  br i1 %tobool56, label %if.end60, label %if.then57, !dbg !18873

if.then57:                                        ; preds = %if.then52
  %54 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18874
  %55 = load i16, i16* %val, align 2, !dbg !18875
  %conv58 = zext i16 %55 to i32, !dbg !18875
  %or = or i32 %conv58, 512, !dbg !18876
  %conv59 = trunc i32 %or to i16, !dbg !18877
  call void @wr_reg16(%struct.slgt_info* %54, i32 140, i16 zeroext %conv59) #11, !dbg !18878
  br label %if.end60, !dbg !18878

if.end60:                                         ; preds = %if.then57, %if.then52
  br label %if.end61, !dbg !18879

if.end61:                                         ; preds = %if.end60, %if.end49
  br label %do.body62, !dbg !18880

do.body62:                                        ; preds = %if.end61
  br label %do.body63, !dbg !18881

do.body63:                                        ; preds = %do.body62
  br label %do.body64, !dbg !18882

do.body64:                                        ; preds = %do.body63
  br label %do.end65, !dbg !18883

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !18882

do.body66:                                        ; preds = %do.end65
  store i8* null, i8** %__vpp_verify.i286, align 8, !dbg !18746
  %56 = load i8*, i8** %__vpp_verify.i286, align 8, !dbg !18746
  %57 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18747, !srcloc !18022
  store i64 %57, i64* %pfo_val__.i287, align 8, !dbg !18747
  %58 = load i64, i64* %pfo_val__.i287, align 8, !dbg !18747
  %59 = inttoptr i64 %58 to %struct.task_struct*, !dbg !18747
  store %struct.task_struct* %59, %struct.task_struct** %tmp.i288, align 8, !dbg !18747
  %60 = load %struct.task_struct*, %struct.task_struct** %tmp.i288, align 8, !dbg !18747
  store %struct.task_struct* %60, %struct.task_struct** %pscr_ret__.i285, align 8, !dbg !18741
  %61 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i285, align 8, !dbg !18741
  store %struct.task_struct* %61, %struct.task_struct** %tmp1.i289, align 8, !dbg !18741
  %62 = load %struct.task_struct*, %struct.task_struct** %tmp1.i289, align 8, !dbg !18741
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %62, i32 0, i32 1, !dbg !18885
  store volatile i64 1, i64* %state, align 16, !dbg !18885
  br label %do.end68, !dbg !18885

do.end68:                                         ; preds = %do.body66
  br label %do.end69, !dbg !18882

do.end69:                                         ; preds = %do.end68
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18881, !srcloc !18886
  br label %do.end70, !dbg !18881

do.end70:                                         ; preds = %do.end69
  %63 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18887
  %event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %63, i32 0, i32 17, !dbg !18888
  call void @add_wait_queue(%struct.wait_queue_head* %event_wait_q, %struct.wait_queue_entry* %wait) #11, !dbg !18889
  %64 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18890
  %lock71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %64, i32 0, i32 22, !dbg !18891
  %65 = load i64, i64* %flags, align 8, !dbg !18892
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i290, align 8
  store i64 %65, i64* %flags.addr.i291, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18893
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18893
  store i32 1, i32* %tmp.i292, align 4, !dbg !18893
  %66 = load i32, i32* %tmp.i292, align 4, !dbg !18893
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18894
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18894
  store i32 1, i32* %tmp8.i293, align 4, !dbg !18894
  %67 = load i32, i32* %tmp8.i293, align 4, !dbg !18894
  %68 = load i64, i64* %flags.addr.i291, align 8, !dbg !18895
  call void @arch_local_irq_restore(i64 %68) #14, !dbg !18895
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18896, !srcloc !10199
  %69 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i290, align 8, !dbg !18897
  %70 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %69, i32 0, i32 0, !dbg !18897
  %rlock.i294 = bitcast %union.anon.1* %70 to %struct.raw_spinlock*, !dbg !18897
  br label %for.cond, !dbg !18898

for.cond:                                         ; preds = %if.end219, %do.end70
  call void @schedule() #11, !dbg !18899
  store i8* null, i8** %__vpp_verify.i296, align 8, !dbg !18736
  %71 = load i8*, i8** %__vpp_verify.i296, align 8, !dbg !18736
  %72 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18737, !srcloc !18022
  store i64 %72, i64* %pfo_val__.i297, align 8, !dbg !18737
  %73 = load i64, i64* %pfo_val__.i297, align 8, !dbg !18737
  %74 = inttoptr i64 %73 to %struct.task_struct*, !dbg !18737
  store %struct.task_struct* %74, %struct.task_struct** %tmp.i298, align 8, !dbg !18737
  %75 = load %struct.task_struct*, %struct.task_struct** %tmp.i298, align 8, !dbg !18737
  store %struct.task_struct* %75, %struct.task_struct** %pscr_ret__.i295, align 8, !dbg !18733
  %76 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i295, align 8, !dbg !18733
  store %struct.task_struct* %76, %struct.task_struct** %tmp1.i299, align 8, !dbg !18733
  %77 = load %struct.task_struct*, %struct.task_struct** %tmp1.i299, align 8, !dbg !18733
  %call73 = call i32 @signal_pending(%struct.task_struct* %77) #11, !dbg !18900
  %tobool74 = icmp ne i32 %call73, 0, !dbg !18900
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !18901

if.then75:                                        ; preds = %for.cond
  store i32 -512, i32* %rc, align 4, !dbg !18902
  br label %for.end, !dbg !18904

if.end76:                                         ; preds = %for.cond
  br label %do.body77, !dbg !18905

do.body77:                                        ; preds = %if.end76
  br label %do.body78, !dbg !18906

do.body78:                                        ; preds = %do.body77
  call void @llvm.dbg.declare(metadata i64* %__dummy79, metadata !18907, metadata !DIExpression()), !dbg !18909
  call void @llvm.dbg.declare(metadata i64* %__dummy280, metadata !18910, metadata !DIExpression()), !dbg !18909
  %cmp81 = icmp eq i64* %__dummy79, %__dummy280, !dbg !18909
  %conv82 = zext i1 %cmp81 to i32, !dbg !18909
  store i32 1, i32* %tmp83, align 4, !dbg !18909
  %78 = load i32, i32* %tmp83, align 4, !dbg !18909
  br label %do.body84, !dbg !18911

do.body84:                                        ; preds = %do.body78
  br label %do.body85, !dbg !18912

do.body85:                                        ; preds = %do.body84
  br label %do.body86, !dbg !18913

do.body86:                                        ; preds = %do.body85
  call void @llvm.dbg.declare(metadata i64* %__dummy87, metadata !18915, metadata !DIExpression()), !dbg !18918
  call void @llvm.dbg.declare(metadata i64* %__dummy288, metadata !18919, metadata !DIExpression()), !dbg !18918
  %cmp89 = icmp eq i64* %__dummy87, %__dummy288, !dbg !18918
  %conv90 = zext i1 %cmp89 to i32, !dbg !18918
  store i32 1, i32* %tmp91, align 4, !dbg !18918
  %79 = load i32, i32* %tmp91, align 4, !dbg !18918
  %call92 = call i64 @arch_local_irq_save() #11, !dbg !18920
  store i64 %call92, i64* %flags, align 8, !dbg !18920
  br label %do.end93, !dbg !18920

do.end93:                                         ; preds = %do.body86
  br label %do.end94, !dbg !18913

do.end94:                                         ; preds = %do.end93
  br label %do.body95, !dbg !18912

do.body95:                                        ; preds = %do.end94
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18921, !srcloc !18922
  br label %do.body96, !dbg !18921

do.body96:                                        ; preds = %do.body95
  %80 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18923
  %lock97 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %80, i32 0, i32 22, !dbg !18923
  store %struct.spinlock* %lock97, %struct.spinlock** %lock.addr.i300, align 8
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i300, align 8, !dbg !18924
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !18925
  %rlock.i301 = bitcast %union.anon.1* %82 to %struct.raw_spinlock*, !dbg !18925
  br label %do.end99, !dbg !18923

do.end99:                                         ; preds = %do.body96
  br label %do.end100, !dbg !18921

do.end100:                                        ; preds = %do.end99
  br label %do.end101, !dbg !18912

do.end101:                                        ; preds = %do.end100
  br label %do.end102, !dbg !18911

do.end102:                                        ; preds = %do.end101
  br label %do.end103, !dbg !18906

do.end103:                                        ; preds = %do.end102
  %83 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18926
  %icount104 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %83, i32 0, i32 11, !dbg !18927
  %84 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !18927
  %85 = bitcast %struct.mgsl_icount* %icount104 to i8*, !dbg !18927
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 92, i1 false), !dbg !18927
  %86 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18928
  %input_signal_events105 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %86, i32 0, i32 55, !dbg !18929
  %87 = bitcast %struct._input_signal_events* %newsigs to i8*, !dbg !18929
  %88 = bitcast %struct._input_signal_events* %input_signal_events105 to i8*, !dbg !18929
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %88, i64 32, i1 false), !dbg !18929
  br label %do.body106, !dbg !18930

do.body106:                                       ; preds = %do.end103
  br label %do.body107, !dbg !18931

do.body107:                                       ; preds = %do.body106
  br label %do.body108, !dbg !18932

do.body108:                                       ; preds = %do.body107
  br label %do.end109, !dbg !18933

do.end109:                                        ; preds = %do.body108
  br label %do.body110, !dbg !18932

do.body110:                                       ; preds = %do.end109
  store i8* null, i8** %__vpp_verify.i303, align 8, !dbg !18724
  %89 = load i8*, i8** %__vpp_verify.i303, align 8, !dbg !18724
  %90 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18725, !srcloc !18022
  store i64 %90, i64* %pfo_val__.i304, align 8, !dbg !18725
  %91 = load i64, i64* %pfo_val__.i304, align 8, !dbg !18725
  %92 = inttoptr i64 %91 to %struct.task_struct*, !dbg !18725
  store %struct.task_struct* %92, %struct.task_struct** %tmp.i305, align 8, !dbg !18725
  %93 = load %struct.task_struct*, %struct.task_struct** %tmp.i305, align 8, !dbg !18725
  store %struct.task_struct* %93, %struct.task_struct** %pscr_ret__.i302, align 8, !dbg !18719
  %94 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i302, align 8, !dbg !18719
  store %struct.task_struct* %94, %struct.task_struct** %tmp1.i306, align 8, !dbg !18719
  %95 = load %struct.task_struct*, %struct.task_struct** %tmp1.i306, align 8, !dbg !18719
  %state112 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %95, i32 0, i32 1, !dbg !18935
  store volatile i64 1, i64* %state112, align 16, !dbg !18935
  br label %do.end113, !dbg !18935

do.end113:                                        ; preds = %do.body110
  br label %do.end114, !dbg !18932

do.end114:                                        ; preds = %do.end113
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18931, !srcloc !18936
  br label %do.end115, !dbg !18931

do.end115:                                        ; preds = %do.end114
  %96 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !18937
  %lock116 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %96, i32 0, i32 22, !dbg !18938
  %97 = load i64, i64* %flags, align 8, !dbg !18939
  store %struct.spinlock* %lock116, %struct.spinlock** %lock.addr.i307, align 8
  store i64 %97, i64* %flags.addr.i308, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !18940
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !18940
  store i32 1, i32* %tmp.i309, align 4, !dbg !18940
  %98 = load i32, i32* %tmp.i309, align 4, !dbg !18940
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !18941
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !18941
  store i32 1, i32* %tmp8.i310, align 4, !dbg !18941
  %99 = load i32, i32* %tmp8.i310, align 4, !dbg !18941
  %100 = load i64, i64* %flags.addr.i308, align 8, !dbg !18942
  call void @arch_local_irq_restore(i64 %100) #14, !dbg !18942
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !18943, !srcloc !10199
  %101 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i307, align 8, !dbg !18944
  %102 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %101, i32 0, i32 0, !dbg !18944
  %rlock.i311 = bitcast %union.anon.1* %102 to %struct.raw_spinlock*, !dbg !18944
  %dsr_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 2, !dbg !18945
  %103 = load i32, i32* %dsr_up, align 4, !dbg !18945
  %dsr_up117 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 2, !dbg !18947
  %104 = load i32, i32* %dsr_up117, align 4, !dbg !18947
  %cmp118 = icmp eq i32 %103, %104, !dbg !18948
  br i1 %cmp118, label %land.lhs.true, label %if.end156, !dbg !18949

land.lhs.true:                                    ; preds = %do.end115
  %dsr_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 3, !dbg !18950
  %105 = load i32, i32* %dsr_down, align 4, !dbg !18950
  %dsr_down120 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 3, !dbg !18951
  %106 = load i32, i32* %dsr_down120, align 4, !dbg !18951
  %cmp121 = icmp eq i32 %105, %106, !dbg !18952
  br i1 %cmp121, label %land.lhs.true123, label %if.end156, !dbg !18953

land.lhs.true123:                                 ; preds = %land.lhs.true
  %dcd_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 4, !dbg !18954
  %107 = load i32, i32* %dcd_up, align 4, !dbg !18954
  %dcd_up124 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 4, !dbg !18955
  %108 = load i32, i32* %dcd_up124, align 4, !dbg !18955
  %cmp125 = icmp eq i32 %107, %108, !dbg !18956
  br i1 %cmp125, label %land.lhs.true127, label %if.end156, !dbg !18957

land.lhs.true127:                                 ; preds = %land.lhs.true123
  %dcd_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 5, !dbg !18958
  %109 = load i32, i32* %dcd_down, align 4, !dbg !18958
  %dcd_down128 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 5, !dbg !18959
  %110 = load i32, i32* %dcd_down128, align 4, !dbg !18959
  %cmp129 = icmp eq i32 %109, %110, !dbg !18960
  br i1 %cmp129, label %land.lhs.true131, label %if.end156, !dbg !18961

land.lhs.true131:                                 ; preds = %land.lhs.true127
  %cts_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 6, !dbg !18962
  %111 = load i32, i32* %cts_up, align 4, !dbg !18962
  %cts_up132 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 6, !dbg !18963
  %112 = load i32, i32* %cts_up132, align 4, !dbg !18963
  %cmp133 = icmp eq i32 %111, %112, !dbg !18964
  br i1 %cmp133, label %land.lhs.true135, label %if.end156, !dbg !18965

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %cts_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 7, !dbg !18966
  %113 = load i32, i32* %cts_down, align 4, !dbg !18966
  %cts_down136 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 7, !dbg !18967
  %114 = load i32, i32* %cts_down136, align 4, !dbg !18967
  %cmp137 = icmp eq i32 %113, %114, !dbg !18968
  br i1 %cmp137, label %land.lhs.true139, label %if.end156, !dbg !18969

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %ri_up = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 0, !dbg !18970
  %115 = load i32, i32* %ri_up, align 4, !dbg !18970
  %ri_up140 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 0, !dbg !18971
  %116 = load i32, i32* %ri_up140, align 4, !dbg !18971
  %cmp141 = icmp eq i32 %115, %116, !dbg !18972
  br i1 %cmp141, label %land.lhs.true143, label %if.end156, !dbg !18973

land.lhs.true143:                                 ; preds = %land.lhs.true139
  %ri_down = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 1, !dbg !18974
  %117 = load i32, i32* %ri_down, align 4, !dbg !18974
  %ri_down144 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 1, !dbg !18975
  %118 = load i32, i32* %ri_down144, align 4, !dbg !18975
  %cmp145 = icmp eq i32 %117, %118, !dbg !18976
  br i1 %cmp145, label %land.lhs.true147, label %if.end156, !dbg !18977

land.lhs.true147:                                 ; preds = %land.lhs.true143
  %exithunt = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 21, !dbg !18978
  %119 = load i32, i32* %exithunt, align 4, !dbg !18978
  %exithunt148 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 21, !dbg !18979
  %120 = load i32, i32* %exithunt148, align 4, !dbg !18979
  %cmp149 = icmp eq i32 %119, %120, !dbg !18980
  br i1 %cmp149, label %land.lhs.true151, label %if.end156, !dbg !18981

land.lhs.true151:                                 ; preds = %land.lhs.true147
  %rxidle = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 22, !dbg !18982
  %121 = load i32, i32* %rxidle, align 4, !dbg !18982
  %rxidle152 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 22, !dbg !18983
  %122 = load i32, i32* %rxidle152, align 4, !dbg !18983
  %cmp153 = icmp eq i32 %121, %122, !dbg !18984
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !18985

if.then155:                                       ; preds = %land.lhs.true151
  store i32 -5, i32* %rc, align 4, !dbg !18986
  br label %for.end, !dbg !18988

if.end156:                                        ; preds = %land.lhs.true151, %land.lhs.true147, %land.lhs.true143, %land.lhs.true139, %land.lhs.true135, %land.lhs.true131, %land.lhs.true127, %land.lhs.true123, %land.lhs.true, %do.end115
  %123 = load i32, i32* %mask, align 4, !dbg !18989
  %dsr_up157 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 2, !dbg !18990
  %124 = load i32, i32* %dsr_up157, align 4, !dbg !18990
  %dsr_up158 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 2, !dbg !18991
  %125 = load i32, i32* %dsr_up158, align 4, !dbg !18991
  %cmp159 = icmp ne i32 %124, %125, !dbg !18992
  %126 = zext i1 %cmp159 to i64, !dbg !18993
  %cond161 = select i1 %cmp159, i32 1, i32 0, !dbg !18993
  %dsr_down162 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 3, !dbg !18994
  %127 = load i32, i32* %dsr_down162, align 4, !dbg !18994
  %dsr_down163 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 3, !dbg !18995
  %128 = load i32, i32* %dsr_down163, align 4, !dbg !18995
  %cmp164 = icmp ne i32 %127, %128, !dbg !18996
  %129 = zext i1 %cmp164 to i64, !dbg !18997
  %cond166 = select i1 %cmp164, i32 2, i32 0, !dbg !18997
  %add167 = add i32 %cond161, %cond166, !dbg !18998
  %dcd_up168 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 4, !dbg !18999
  %130 = load i32, i32* %dcd_up168, align 4, !dbg !18999
  %dcd_up169 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 4, !dbg !19000
  %131 = load i32, i32* %dcd_up169, align 4, !dbg !19000
  %cmp170 = icmp ne i32 %130, %131, !dbg !19001
  %132 = zext i1 %cmp170 to i64, !dbg !19002
  %cond172 = select i1 %cmp170, i32 16, i32 0, !dbg !19002
  %add173 = add i32 %add167, %cond172, !dbg !19003
  %dcd_down174 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 5, !dbg !19004
  %133 = load i32, i32* %dcd_down174, align 4, !dbg !19004
  %dcd_down175 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 5, !dbg !19005
  %134 = load i32, i32* %dcd_down175, align 4, !dbg !19005
  %cmp176 = icmp ne i32 %133, %134, !dbg !19006
  %135 = zext i1 %cmp176 to i64, !dbg !19007
  %cond178 = select i1 %cmp176, i32 32, i32 0, !dbg !19007
  %add179 = add i32 %add173, %cond178, !dbg !19008
  %cts_up180 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 6, !dbg !19009
  %136 = load i32, i32* %cts_up180, align 4, !dbg !19009
  %cts_up181 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 6, !dbg !19010
  %137 = load i32, i32* %cts_up181, align 4, !dbg !19010
  %cmp182 = icmp ne i32 %136, %137, !dbg !19011
  %138 = zext i1 %cmp182 to i64, !dbg !19012
  %cond184 = select i1 %cmp182, i32 4, i32 0, !dbg !19012
  %add185 = add i32 %add179, %cond184, !dbg !19013
  %cts_down186 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 7, !dbg !19014
  %139 = load i32, i32* %cts_down186, align 4, !dbg !19014
  %cts_down187 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 7, !dbg !19015
  %140 = load i32, i32* %cts_down187, align 4, !dbg !19015
  %cmp188 = icmp ne i32 %139, %140, !dbg !19016
  %141 = zext i1 %cmp188 to i64, !dbg !19017
  %cond190 = select i1 %cmp188, i32 8, i32 0, !dbg !19017
  %add191 = add i32 %add185, %cond190, !dbg !19018
  %ri_up192 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 0, !dbg !19019
  %142 = load i32, i32* %ri_up192, align 4, !dbg !19019
  %ri_up193 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 0, !dbg !19020
  %143 = load i32, i32* %ri_up193, align 4, !dbg !19020
  %cmp194 = icmp ne i32 %142, %143, !dbg !19021
  %144 = zext i1 %cmp194 to i64, !dbg !19022
  %cond196 = select i1 %cmp194, i32 64, i32 0, !dbg !19022
  %add197 = add i32 %add191, %cond196, !dbg !19023
  %ri_down198 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %newsigs, i32 0, i32 1, !dbg !19024
  %145 = load i32, i32* %ri_down198, align 4, !dbg !19024
  %ri_down199 = getelementptr inbounds %struct._input_signal_events, %struct._input_signal_events* %oldsigs, i32 0, i32 1, !dbg !19025
  %146 = load i32, i32* %ri_down199, align 4, !dbg !19025
  %cmp200 = icmp ne i32 %145, %146, !dbg !19026
  %147 = zext i1 %cmp200 to i64, !dbg !19027
  %cond202 = select i1 %cmp200, i32 128, i32 0, !dbg !19027
  %add203 = add i32 %add197, %cond202, !dbg !19028
  %exithunt204 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 21, !dbg !19029
  %148 = load i32, i32* %exithunt204, align 4, !dbg !19029
  %exithunt205 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 21, !dbg !19030
  %149 = load i32, i32* %exithunt205, align 4, !dbg !19030
  %cmp206 = icmp ne i32 %148, %149, !dbg !19031
  %150 = zext i1 %cmp206 to i64, !dbg !19032
  %cond208 = select i1 %cmp206, i32 256, i32 0, !dbg !19032
  %add209 = add i32 %add203, %cond208, !dbg !19033
  %rxidle210 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 22, !dbg !19034
  %151 = load i32, i32* %rxidle210, align 4, !dbg !19034
  %rxidle211 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 22, !dbg !19035
  %152 = load i32, i32* %rxidle211, align 4, !dbg !19035
  %cmp212 = icmp ne i32 %151, %152, !dbg !19036
  %153 = zext i1 %cmp212 to i64, !dbg !19037
  %cond214 = select i1 %cmp212, i32 512, i32 0, !dbg !19037
  %add215 = add i32 %add209, %cond214, !dbg !19038
  %and216 = and i32 %123, %add215, !dbg !19039
  store i32 %and216, i32* %events, align 4, !dbg !19040
  %154 = load i32, i32* %events, align 4, !dbg !19041
  %tobool217 = icmp ne i32 %154, 0, !dbg !19041
  br i1 %tobool217, label %if.then218, label %if.end219, !dbg !19043

if.then218:                                       ; preds = %if.end156
  br label %for.end, !dbg !19044

if.end219:                                        ; preds = %if.end156
  %155 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !19045
  %156 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !19045
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %156, i64 92, i1 false), !dbg !19045
  %157 = bitcast %struct._input_signal_events* %oldsigs to i8*, !dbg !19046
  %158 = bitcast %struct._input_signal_events* %newsigs to i8*, !dbg !19046
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %157, i8* align 4 %158, i64 32, i1 false), !dbg !19046
  br label %for.cond, !dbg !19047, !llvm.loop !19048

for.end:                                          ; preds = %if.then218, %if.then155, %if.then75
  %159 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19051
  %event_wait_q220 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %159, i32 0, i32 17, !dbg !19052
  call void @remove_wait_queue(%struct.wait_queue_head* %event_wait_q220, %struct.wait_queue_entry* %wait) #11, !dbg !19053
  br label %do.body221, !dbg !19054

do.body221:                                       ; preds = %for.end
  br label %do.body222, !dbg !19055

do.body222:                                       ; preds = %do.body221
  br label %do.body223, !dbg !19056

do.body223:                                       ; preds = %do.body222
  br label %do.end224, !dbg !19057

do.end224:                                        ; preds = %do.body223
  br label %do.body225, !dbg !19056

do.body225:                                       ; preds = %do.end224
  store i8* null, i8** %__vpp_verify.i313, align 8, !dbg !18711
  %160 = load i8*, i8** %__vpp_verify.i313, align 8, !dbg !18711
  %161 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !18712, !srcloc !18022
  store i64 %161, i64* %pfo_val__.i314, align 8, !dbg !18712
  %162 = load i64, i64* %pfo_val__.i314, align 8, !dbg !18712
  %163 = inttoptr i64 %162 to %struct.task_struct*, !dbg !18712
  store %struct.task_struct* %163, %struct.task_struct** %tmp.i315, align 8, !dbg !18712
  %164 = load %struct.task_struct*, %struct.task_struct** %tmp.i315, align 8, !dbg !18712
  store %struct.task_struct* %164, %struct.task_struct** %pscr_ret__.i312, align 8, !dbg !18706
  %165 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i312, align 8, !dbg !18706
  store %struct.task_struct* %165, %struct.task_struct** %tmp1.i316, align 8, !dbg !18706
  %166 = load %struct.task_struct*, %struct.task_struct** %tmp1.i316, align 8, !dbg !18706
  %state227 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %166, i32 0, i32 1, !dbg !19059
  store volatile i64 0, i64* %state227, align 16, !dbg !19059
  br label %do.end228, !dbg !19059

do.end228:                                        ; preds = %do.body225
  br label %do.end229, !dbg !19056

do.end229:                                        ; preds = %do.end228
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19055, !srcloc !19060
  br label %do.end230, !dbg !19055

do.end230:                                        ; preds = %do.end229
  %167 = load i32, i32* %mask, align 4, !dbg !19061
  %and231 = and i32 %167, 768, !dbg !19062
  %tobool232 = icmp ne i32 %and231, 0, !dbg !19062
  br i1 %tobool232, label %if.then233, label %if.end271, !dbg !19063

if.then233:                                       ; preds = %do.end230
  br label %do.body234, !dbg !19064

do.body234:                                       ; preds = %if.then233
  br label %do.body235, !dbg !19065

do.body235:                                       ; preds = %do.body234
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !19066, metadata !DIExpression()), !dbg !19068
  call void @llvm.dbg.declare(metadata i64* %__dummy2237, metadata !19069, metadata !DIExpression()), !dbg !19068
  %cmp238 = icmp eq i64* %__dummy236, %__dummy2237, !dbg !19068
  %conv239 = zext i1 %cmp238 to i32, !dbg !19068
  store i32 1, i32* %tmp240, align 4, !dbg !19068
  %168 = load i32, i32* %tmp240, align 4, !dbg !19068
  br label %do.body241, !dbg !19070

do.body241:                                       ; preds = %do.body235
  br label %do.body242, !dbg !19071

do.body242:                                       ; preds = %do.body241
  br label %do.body243, !dbg !19072

do.body243:                                       ; preds = %do.body242
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !19074, metadata !DIExpression()), !dbg !19077
  call void @llvm.dbg.declare(metadata i64* %__dummy2245, metadata !19078, metadata !DIExpression()), !dbg !19077
  %cmp246 = icmp eq i64* %__dummy244, %__dummy2245, !dbg !19077
  %conv247 = zext i1 %cmp246 to i32, !dbg !19077
  store i32 1, i32* %tmp248, align 4, !dbg !19077
  %169 = load i32, i32* %tmp248, align 4, !dbg !19077
  %call249 = call i64 @arch_local_irq_save() #11, !dbg !19079
  store i64 %call249, i64* %flags, align 8, !dbg !19079
  br label %do.end250, !dbg !19079

do.end250:                                        ; preds = %do.body243
  br label %do.end251, !dbg !19072

do.end251:                                        ; preds = %do.end250
  br label %do.body252, !dbg !19071

do.body252:                                       ; preds = %do.end251
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19080, !srcloc !19081
  br label %do.body253, !dbg !19080

do.body253:                                       ; preds = %do.body252
  %170 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19082
  %lock254 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %170, i32 0, i32 22, !dbg !19082
  store %struct.spinlock* %lock254, %struct.spinlock** %lock.addr.i317, align 8
  %171 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i317, align 8, !dbg !19083
  %172 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %171, i32 0, i32 0, !dbg !19084
  %rlock.i318 = bitcast %union.anon.1* %172 to %struct.raw_spinlock*, !dbg !19084
  br label %do.end256, !dbg !19082

do.end256:                                        ; preds = %do.body253
  br label %do.end257, !dbg !19080

do.end257:                                        ; preds = %do.end256
  br label %do.end258, !dbg !19071

do.end258:                                        ; preds = %do.end257
  br label %do.end259, !dbg !19070

do.end259:                                        ; preds = %do.end258
  br label %do.end260, !dbg !19065

do.end260:                                        ; preds = %do.end259
  %173 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19085
  %event_wait_q261 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %173, i32 0, i32 17, !dbg !19087
  %call262 = call i32 @waitqueue_active(%struct.wait_queue_head* %event_wait_q261) #11, !dbg !19088
  %tobool263 = icmp ne i32 %call262, 0, !dbg !19088
  br i1 %tobool263, label %if.end269, label %if.then264, !dbg !19089

if.then264:                                       ; preds = %do.end260
  %174 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19090
  %175 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19092
  %call265 = call zeroext i16 @rd_reg16(%struct.slgt_info* %175, i32 140) #11, !dbg !19093
  %conv266 = zext i16 %call265 to i32, !dbg !19093
  %and267 = and i32 %conv266, -513, !dbg !19094
  %conv268 = trunc i32 %and267 to i16, !dbg !19095
  call void @wr_reg16(%struct.slgt_info* %174, i32 140, i16 zeroext %conv268) #11, !dbg !19096
  br label %if.end269, !dbg !19097

if.end269:                                        ; preds = %if.then264, %do.end260
  %176 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19098
  %lock270 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %176, i32 0, i32 22, !dbg !19099
  %177 = load i64, i64* %flags, align 8, !dbg !19100
  store %struct.spinlock* %lock270, %struct.spinlock** %lock.addr.i319, align 8
  store i64 %177, i64* %flags.addr.i320, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19101
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19101
  store i32 1, i32* %tmp.i321, align 4, !dbg !19101
  %178 = load i32, i32* %tmp.i321, align 4, !dbg !19101
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19102
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19102
  store i32 1, i32* %tmp8.i322, align 4, !dbg !19102
  %179 = load i32, i32* %tmp8.i322, align 4, !dbg !19102
  %180 = load i64, i64* %flags.addr.i320, align 8, !dbg !19103
  call void @arch_local_irq_restore(i64 %180) #14, !dbg !19103
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19104, !srcloc !10199
  %181 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i319, align 8, !dbg !19105
  %182 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %181, i32 0, i32 0, !dbg !19105
  %rlock.i323 = bitcast %union.anon.1* %182 to %struct.raw_spinlock*, !dbg !19105
  br label %if.end271, !dbg !19106

if.end271:                                        ; preds = %if.end269, %do.end230
  br label %exit, !dbg !19107

exit:                                             ; preds = %if.end271, %if.then47
  call void @llvm.dbg.label(metadata !19108), !dbg !19109
  %183 = load i32, i32* %rc, align 4, !dbg !19110
  %cmp272 = icmp eq i32 %183, 0, !dbg !19112
  br i1 %cmp272, label %if.then274, label %if.end281, !dbg !19113

if.then274:                                       ; preds = %exit
  call void @might_fault() #11, !dbg !19114
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !19116, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !19119, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !19120, metadata !DIExpression()), !dbg !19118
  %184 = load i32*, i32** %mask_ptr.addr, align 8, !dbg !19118
  %185 = bitcast i32* %184 to i8*, !dbg !19118
  store i8* %185, i8** %__ptr_pu, align 8, !dbg !19118
  %186 = load i32, i32* %events, align 4, !dbg !19118
  store i32 %186, i32* %__val_pu, align 4, !dbg !19118
  %187 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !19118
  %188 = load i8*, i8** %__ptr_pu, align 8, !dbg !19118
  %189 = load i32, i32* %__val_pu, align 4, !dbg !19118
  %190 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %188, i32 %189, i64 4, i64 %187) #10, !dbg !19118, !srcloc !19121
  %asmresult276 = extractvalue { i8*, i64 } %190, 0, !dbg !19118
  %asmresult277 = extractvalue { i8*, i64 } %190, 1, !dbg !19118
  %191 = ptrtoint i8* %asmresult276 to i64, !dbg !19118
  %192 = trunc i64 %191 to i32, !dbg !19118
  store i32 %192, i32* %__ret_pu, align 4, !dbg !19118
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult277), !dbg !19118
  %193 = load i32, i32* %__ret_pu, align 4, !dbg !19118
  %conv279 = sext i32 %193 to i64, !dbg !19118
  store i64 %conv279, i64* %tmp278, align 8, !dbg !19118
  %194 = load i64, i64* %tmp278, align 8, !dbg !19118
  store i64 %194, i64* %tmp275, align 8, !dbg !19114
  %195 = load i64, i64* %tmp275, align 8, !dbg !19114
  %conv280 = trunc i64 %195 to i32, !dbg !19122
  store i32 %conv280, i32* %rc, align 4, !dbg !19123
  br label %if.end281, !dbg !19124

if.end281:                                        ; preds = %if.then274, %exit
  %196 = load i32, i32* %rc, align 4, !dbg !19125
  store i32 %196, i32* %retval, align 4, !dbg !19126
  br label %return, !dbg !19126

return:                                           ; preds = %if.end281, %if.then
  %197 = load i32, i32* %retval, align 4, !dbg !19127
  ret i32 %197, !dbg !19127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @modem_input_wait(%struct.slgt_info* %info, i32 %arg) #1 !dbg !19128 {
entry:
  %pscr_ret__.i156 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i156, metadata !17940, metadata !DIExpression()), !dbg !19131
  %__vpp_verify.i157 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i157, metadata !17950, metadata !DIExpression()), !dbg !19136
  %pfo_val__.i158 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i158, metadata !17953, metadata !DIExpression()), !dbg !19137
  %tmp.i159 = alloca %struct.task_struct*, align 8
  %tmp1.i160 = alloca %struct.task_struct*, align 8
  %lock.addr.i151 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i151, metadata !10114, metadata !DIExpression()), !dbg !19138
  %flags.addr.i152 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i152, metadata !10120, metadata !DIExpression()), !dbg !19143
  %tmp.i153 = alloca i32, align 4
  %tmp8.i154 = alloca i32, align 4
  %pscr_ret__.i146 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i146, metadata !17940, metadata !DIExpression()), !dbg !19144
  %__vpp_verify.i147 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i147, metadata !17950, metadata !DIExpression()), !dbg !19149
  %pfo_val__.i148 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i148, metadata !17953, metadata !DIExpression()), !dbg !19150
  %tmp.i149 = alloca %struct.task_struct*, align 8
  %tmp1.i150 = alloca %struct.task_struct*, align 8
  %lock.addr.i144 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i144, metadata !8902, metadata !DIExpression()), !dbg !19151
  %pscr_ret__.i139 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i139, metadata !17940, metadata !DIExpression()), !dbg !19158
  %__vpp_verify.i140 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i140, metadata !17950, metadata !DIExpression()), !dbg !19161
  %pfo_val__.i141 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i141, metadata !17953, metadata !DIExpression()), !dbg !19162
  %tmp.i142 = alloca %struct.task_struct*, align 8
  %tmp1.i143 = alloca %struct.task_struct*, align 8
  %lock.addr.i136 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i136, metadata !10114, metadata !DIExpression()), !dbg !19163
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !19165
  %tmp.i137 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %pscr_ret__.i131 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i131, metadata !17940, metadata !DIExpression()), !dbg !19166
  %__vpp_verify.i132 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i132, metadata !17950, metadata !DIExpression()), !dbg !19171
  %pfo_val__.i133 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i133, metadata !17953, metadata !DIExpression()), !dbg !19172
  %tmp.i134 = alloca %struct.task_struct*, align 8
  %tmp1.i135 = alloca %struct.task_struct*, align 8
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !19173
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !19180
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !19182
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !19183
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %info.addr = alloca %struct.slgt_info*, align 8
  %arg.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %cprev = alloca %struct.mgsl_icount, align 4
  %cnow = alloca %struct.mgsl_icount, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19184, metadata !DIExpression()), !dbg !19185
  store i32 %arg, i32* %arg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %arg.addr, metadata !19186, metadata !DIExpression()), !dbg !19187
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19188, metadata !DIExpression()), !dbg !19189
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !19190, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cprev, metadata !19192, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount* %cnow, metadata !19194, metadata !DIExpression()), !dbg !19195
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !19196, metadata !DIExpression()), !dbg !19197
  %flags1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !19197
  store i32 0, i32* %flags1, align 8, !dbg !19197
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !19197
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !19182
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !19182
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19183, !srcloc !18022
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !19183
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !19183
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !19183
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !19183
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !19183
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19180
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19180
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !19180
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !19180
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !19197
  store i8* %7, i8** %private, align 8, !dbg !19197
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !19197
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !19197
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !19197
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !19197
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !19197
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !19197
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !19197
  br label %do.body, !dbg !19198

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !19199

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19200, metadata !DIExpression()), !dbg !19202
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19203, metadata !DIExpression()), !dbg !19202
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !19202
  %conv = zext i1 %cmp to i32, !dbg !19202
  store i32 1, i32* %tmp, align 4, !dbg !19202
  %8 = load i32, i32* %tmp, align 4, !dbg !19202
  br label %do.body4, !dbg !19204

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !19205

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !19206

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !19208, metadata !DIExpression()), !dbg !19211
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !19212, metadata !DIExpression()), !dbg !19211
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !19211
  %conv10 = zext i1 %cmp9 to i32, !dbg !19211
  store i32 1, i32* %tmp11, align 4, !dbg !19211
  %9 = load i32, i32* %tmp11, align 4, !dbg !19211
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !19213
  store i64 %call12, i64* %flags, align 8, !dbg !19213
  br label %do.end, !dbg !19213

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !19206

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !19205

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19214, !srcloc !19215
  br label %do.body15, !dbg !19214

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19216
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 22, !dbg !19216
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19217
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !19218
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !19218
  br label %do.end17, !dbg !19216

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !19214

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !19205

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !19204

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !19199

do.end21:                                         ; preds = %do.end20
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19219
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 11, !dbg !19220
  %14 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !19220
  %15 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !19220
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 92, i1 false), !dbg !19220
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19221
  %status_event_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %16, i32 0, i32 16, !dbg !19222
  call void @add_wait_queue(%struct.wait_queue_head* %status_event_wait_q, %struct.wait_queue_entry* %wait) #11, !dbg !19223
  br label %do.body22, !dbg !19224

do.body22:                                        ; preds = %do.end21
  br label %do.body23, !dbg !19225

do.body23:                                        ; preds = %do.body22
  br label %do.body24, !dbg !19226

do.body24:                                        ; preds = %do.body23
  br label %do.end25, !dbg !19227

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !19226

do.body26:                                        ; preds = %do.end25
  store i8* null, i8** %__vpp_verify.i132, align 8, !dbg !19171
  %17 = load i8*, i8** %__vpp_verify.i132, align 8, !dbg !19171
  %18 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19172, !srcloc !18022
  store i64 %18, i64* %pfo_val__.i133, align 8, !dbg !19172
  %19 = load i64, i64* %pfo_val__.i133, align 8, !dbg !19172
  %20 = inttoptr i64 %19 to %struct.task_struct*, !dbg !19172
  store %struct.task_struct* %20, %struct.task_struct** %tmp.i134, align 8, !dbg !19172
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp.i134, align 8, !dbg !19172
  store %struct.task_struct* %21, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !19166
  %22 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i131, align 8, !dbg !19166
  store %struct.task_struct* %22, %struct.task_struct** %tmp1.i135, align 8, !dbg !19166
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp1.i135, align 8, !dbg !19166
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %23, i32 0, i32 1, !dbg !19229
  store volatile i64 1, i64* %state, align 16, !dbg !19229
  br label %do.end28, !dbg !19229

do.end28:                                         ; preds = %do.body26
  br label %do.end29, !dbg !19226

do.end29:                                         ; preds = %do.end28
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19225, !srcloc !19230
  br label %do.end30, !dbg !19225

do.end30:                                         ; preds = %do.end29
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19231
  %lock31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %24, i32 0, i32 22, !dbg !19232
  %25 = load i64, i64* %flags, align 8, !dbg !19233
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i136, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19234
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19234
  store i32 1, i32* %tmp.i137, align 4, !dbg !19234
  %26 = load i32, i32* %tmp.i137, align 4, !dbg !19234
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19235
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19235
  store i32 1, i32* %tmp8.i, align 4, !dbg !19235
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !19235
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !19236
  call void @arch_local_irq_restore(i64 %28) #14, !dbg !19236
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19237, !srcloc !10199
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i136, align 8, !dbg !19238
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !19238
  %rlock.i138 = bitcast %union.anon.1* %30 to %struct.raw_spinlock*, !dbg !19238
  br label %for.cond, !dbg !19239

for.cond:                                         ; preds = %if.end119, %do.end30
  call void @schedule() #11, !dbg !19240
  store i8* null, i8** %__vpp_verify.i140, align 8, !dbg !19161
  %31 = load i8*, i8** %__vpp_verify.i140, align 8, !dbg !19161
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19162, !srcloc !18022
  store i64 %32, i64* %pfo_val__.i141, align 8, !dbg !19162
  %33 = load i64, i64* %pfo_val__.i141, align 8, !dbg !19162
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !19162
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i142, align 8, !dbg !19162
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i142, align 8, !dbg !19162
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i139, align 8, !dbg !19158
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i139, align 8, !dbg !19158
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i143, align 8, !dbg !19158
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i143, align 8, !dbg !19158
  %call33 = call i32 @signal_pending(%struct.task_struct* %37) #11, !dbg !19241
  %tobool = icmp ne i32 %call33, 0, !dbg !19241
  br i1 %tobool, label %if.then, label %if.end, !dbg !19242

if.then:                                          ; preds = %for.cond
  store i32 -512, i32* %rc, align 4, !dbg !19243
  br label %for.end, !dbg !19245

if.end:                                           ; preds = %for.cond
  br label %do.body34, !dbg !19246

do.body34:                                        ; preds = %if.end
  br label %do.body35, !dbg !19247

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !19248, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !19251, metadata !DIExpression()), !dbg !19250
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !19250
  %conv39 = zext i1 %cmp38 to i32, !dbg !19250
  store i32 1, i32* %tmp40, align 4, !dbg !19250
  %38 = load i32, i32* %tmp40, align 4, !dbg !19250
  br label %do.body41, !dbg !19252

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !19253

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !19254

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !19256, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !19260, metadata !DIExpression()), !dbg !19259
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !19259
  %conv47 = zext i1 %cmp46 to i32, !dbg !19259
  store i32 1, i32* %tmp48, align 4, !dbg !19259
  %39 = load i32, i32* %tmp48, align 4, !dbg !19259
  %call49 = call i64 @arch_local_irq_save() #11, !dbg !19261
  store i64 %call49, i64* %flags, align 8, !dbg !19261
  br label %do.end50, !dbg !19261

do.end50:                                         ; preds = %do.body43
  br label %do.end51, !dbg !19254

do.end51:                                         ; preds = %do.end50
  br label %do.body52, !dbg !19253

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19262, !srcloc !19263
  br label %do.body53, !dbg !19262

do.body53:                                        ; preds = %do.body52
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19264
  %lock54 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 22, !dbg !19264
  store %struct.spinlock* %lock54, %struct.spinlock** %lock.addr.i144, align 8
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i144, align 8, !dbg !19265
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !19266
  %rlock.i145 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !19266
  br label %do.end56, !dbg !19264

do.end56:                                         ; preds = %do.body53
  br label %do.end57, !dbg !19262

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !19253

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !19252

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !19247

do.end60:                                         ; preds = %do.end59
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19267
  %icount61 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 11, !dbg !19268
  %44 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !19268
  %45 = bitcast %struct.mgsl_icount* %icount61 to i8*, !dbg !19268
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 92, i1 false), !dbg !19268
  br label %do.body62, !dbg !19269

do.body62:                                        ; preds = %do.end60
  br label %do.body63, !dbg !19270

do.body63:                                        ; preds = %do.body62
  br label %do.body64, !dbg !19271

do.body64:                                        ; preds = %do.body63
  br label %do.end65, !dbg !19272

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !19271

do.body66:                                        ; preds = %do.end65
  store i8* null, i8** %__vpp_verify.i147, align 8, !dbg !19149
  %46 = load i8*, i8** %__vpp_verify.i147, align 8, !dbg !19149
  %47 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19150, !srcloc !18022
  store i64 %47, i64* %pfo_val__.i148, align 8, !dbg !19150
  %48 = load i64, i64* %pfo_val__.i148, align 8, !dbg !19150
  %49 = inttoptr i64 %48 to %struct.task_struct*, !dbg !19150
  store %struct.task_struct* %49, %struct.task_struct** %tmp.i149, align 8, !dbg !19150
  %50 = load %struct.task_struct*, %struct.task_struct** %tmp.i149, align 8, !dbg !19150
  store %struct.task_struct* %50, %struct.task_struct** %pscr_ret__.i146, align 8, !dbg !19144
  %51 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i146, align 8, !dbg !19144
  store %struct.task_struct* %51, %struct.task_struct** %tmp1.i150, align 8, !dbg !19144
  %52 = load %struct.task_struct*, %struct.task_struct** %tmp1.i150, align 8, !dbg !19144
  %state68 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %52, i32 0, i32 1, !dbg !19274
  store volatile i64 1, i64* %state68, align 16, !dbg !19274
  br label %do.end69, !dbg !19274

do.end69:                                         ; preds = %do.body66
  br label %do.end70, !dbg !19271

do.end70:                                         ; preds = %do.end69
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19270, !srcloc !19275
  br label %do.end71, !dbg !19270

do.end71:                                         ; preds = %do.end70
  %53 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19276
  %lock72 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 22, !dbg !19277
  %54 = load i64, i64* %flags, align 8, !dbg !19278
  store %struct.spinlock* %lock72, %struct.spinlock** %lock.addr.i151, align 8
  store i64 %54, i64* %flags.addr.i152, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19279
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19279
  store i32 1, i32* %tmp.i153, align 4, !dbg !19279
  %55 = load i32, i32* %tmp.i153, align 4, !dbg !19279
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19280
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19280
  store i32 1, i32* %tmp8.i154, align 4, !dbg !19280
  %56 = load i32, i32* %tmp8.i154, align 4, !dbg !19280
  %57 = load i64, i64* %flags.addr.i152, align 8, !dbg !19281
  call void @arch_local_irq_restore(i64 %57) #14, !dbg !19281
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19282, !srcloc !10199
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i151, align 8, !dbg !19283
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !19283
  %rlock.i155 = bitcast %union.anon.1* %59 to %struct.raw_spinlock*, !dbg !19283
  %rng = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !19284
  %60 = load i32, i32* %rng, align 4, !dbg !19284
  %rng73 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 2, !dbg !19286
  %61 = load i32, i32* %rng73, align 4, !dbg !19286
  %cmp74 = icmp eq i32 %60, %61, !dbg !19287
  br i1 %cmp74, label %land.lhs.true, label %if.end88, !dbg !19288

land.lhs.true:                                    ; preds = %do.end71
  %dsr = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !19289
  %62 = load i32, i32* %dsr, align 4, !dbg !19289
  %dsr76 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 1, !dbg !19290
  %63 = load i32, i32* %dsr76, align 4, !dbg !19290
  %cmp77 = icmp eq i32 %62, %63, !dbg !19291
  br i1 %cmp77, label %land.lhs.true79, label %if.end88, !dbg !19292

land.lhs.true79:                                  ; preds = %land.lhs.true
  %dcd = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !19293
  %64 = load i32, i32* %dcd, align 4, !dbg !19293
  %dcd80 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 3, !dbg !19294
  %65 = load i32, i32* %dcd80, align 4, !dbg !19294
  %cmp81 = icmp eq i32 %64, %65, !dbg !19295
  br i1 %cmp81, label %land.lhs.true83, label %if.end88, !dbg !19296

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %cts = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !19297
  %66 = load i32, i32* %cts, align 4, !dbg !19297
  %cts84 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 0, !dbg !19298
  %67 = load i32, i32* %cts84, align 4, !dbg !19298
  %cmp85 = icmp eq i32 %66, %67, !dbg !19299
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !19300

if.then87:                                        ; preds = %land.lhs.true83
  store i32 -5, i32* %rc, align 4, !dbg !19301
  br label %for.end, !dbg !19303

if.end88:                                         ; preds = %land.lhs.true83, %land.lhs.true79, %land.lhs.true, %do.end71
  %68 = load i32, i32* %arg.addr, align 4, !dbg !19304
  %and = and i32 %68, 128, !dbg !19306
  %tobool89 = icmp ne i32 %and, 0, !dbg !19306
  br i1 %tobool89, label %land.lhs.true90, label %lor.lhs.false, !dbg !19307

land.lhs.true90:                                  ; preds = %if.end88
  %rng91 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 2, !dbg !19308
  %69 = load i32, i32* %rng91, align 4, !dbg !19308
  %rng92 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 2, !dbg !19309
  %70 = load i32, i32* %rng92, align 4, !dbg !19309
  %cmp93 = icmp ne i32 %69, %70, !dbg !19310
  br i1 %cmp93, label %if.then118, label %lor.lhs.false, !dbg !19311

lor.lhs.false:                                    ; preds = %land.lhs.true90, %if.end88
  %71 = load i32, i32* %arg.addr, align 4, !dbg !19312
  %and95 = and i32 %71, 256, !dbg !19313
  %tobool96 = icmp ne i32 %and95, 0, !dbg !19313
  br i1 %tobool96, label %land.lhs.true97, label %lor.lhs.false102, !dbg !19314

land.lhs.true97:                                  ; preds = %lor.lhs.false
  %dsr98 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 1, !dbg !19315
  %72 = load i32, i32* %dsr98, align 4, !dbg !19315
  %dsr99 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 1, !dbg !19316
  %73 = load i32, i32* %dsr99, align 4, !dbg !19316
  %cmp100 = icmp ne i32 %72, %73, !dbg !19317
  br i1 %cmp100, label %if.then118, label %lor.lhs.false102, !dbg !19318

lor.lhs.false102:                                 ; preds = %land.lhs.true97, %lor.lhs.false
  %74 = load i32, i32* %arg.addr, align 4, !dbg !19319
  %and103 = and i32 %74, 64, !dbg !19320
  %tobool104 = icmp ne i32 %and103, 0, !dbg !19320
  br i1 %tobool104, label %land.lhs.true105, label %lor.lhs.false110, !dbg !19321

land.lhs.true105:                                 ; preds = %lor.lhs.false102
  %dcd106 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 3, !dbg !19322
  %75 = load i32, i32* %dcd106, align 4, !dbg !19322
  %dcd107 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 3, !dbg !19323
  %76 = load i32, i32* %dcd107, align 4, !dbg !19323
  %cmp108 = icmp ne i32 %75, %76, !dbg !19324
  br i1 %cmp108, label %if.then118, label %lor.lhs.false110, !dbg !19325

lor.lhs.false110:                                 ; preds = %land.lhs.true105, %lor.lhs.false102
  %77 = load i32, i32* %arg.addr, align 4, !dbg !19326
  %and111 = and i32 %77, 32, !dbg !19327
  %tobool112 = icmp ne i32 %and111, 0, !dbg !19327
  br i1 %tobool112, label %land.lhs.true113, label %if.end119, !dbg !19328

land.lhs.true113:                                 ; preds = %lor.lhs.false110
  %cts114 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cnow, i32 0, i32 0, !dbg !19329
  %78 = load i32, i32* %cts114, align 4, !dbg !19329
  %cts115 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %cprev, i32 0, i32 0, !dbg !19330
  %79 = load i32, i32* %cts115, align 4, !dbg !19330
  %cmp116 = icmp ne i32 %78, %79, !dbg !19331
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !19332

if.then118:                                       ; preds = %land.lhs.true113, %land.lhs.true105, %land.lhs.true97, %land.lhs.true90
  store i32 0, i32* %rc, align 4, !dbg !19333
  br label %for.end, !dbg !19335

if.end119:                                        ; preds = %land.lhs.true113, %lor.lhs.false110
  %80 = bitcast %struct.mgsl_icount* %cprev to i8*, !dbg !19336
  %81 = bitcast %struct.mgsl_icount* %cnow to i8*, !dbg !19336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 92, i1 false), !dbg !19336
  br label %for.cond, !dbg !19337, !llvm.loop !19338

for.end:                                          ; preds = %if.then118, %if.then87, %if.then
  %82 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19341
  %status_event_wait_q120 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %82, i32 0, i32 16, !dbg !19342
  call void @remove_wait_queue(%struct.wait_queue_head* %status_event_wait_q120, %struct.wait_queue_entry* %wait) #11, !dbg !19343
  br label %do.body121, !dbg !19344

do.body121:                                       ; preds = %for.end
  br label %do.body122, !dbg !19345

do.body122:                                       ; preds = %do.body121
  br label %do.body123, !dbg !19346

do.body123:                                       ; preds = %do.body122
  br label %do.end124, !dbg !19347

do.end124:                                        ; preds = %do.body123
  br label %do.body125, !dbg !19346

do.body125:                                       ; preds = %do.end124
  store i8* null, i8** %__vpp_verify.i157, align 8, !dbg !19136
  %83 = load i8*, i8** %__vpp_verify.i157, align 8, !dbg !19136
  %84 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19137, !srcloc !18022
  store i64 %84, i64* %pfo_val__.i158, align 8, !dbg !19137
  %85 = load i64, i64* %pfo_val__.i158, align 8, !dbg !19137
  %86 = inttoptr i64 %85 to %struct.task_struct*, !dbg !19137
  store %struct.task_struct* %86, %struct.task_struct** %tmp.i159, align 8, !dbg !19137
  %87 = load %struct.task_struct*, %struct.task_struct** %tmp.i159, align 8, !dbg !19137
  store %struct.task_struct* %87, %struct.task_struct** %pscr_ret__.i156, align 8, !dbg !19131
  %88 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i156, align 8, !dbg !19131
  store %struct.task_struct* %88, %struct.task_struct** %tmp1.i160, align 8, !dbg !19131
  %89 = load %struct.task_struct*, %struct.task_struct** %tmp1.i160, align 8, !dbg !19131
  %state127 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %89, i32 0, i32 1, !dbg !19349
  store volatile i64 0, i64* %state127, align 16, !dbg !19349
  br label %do.end128, !dbg !19349

do.end128:                                        ; preds = %do.body125
  br label %do.end129, !dbg !19346

do.end129:                                        ; preds = %do.end128
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19345, !srcloc !19350
  br label %do.end130, !dbg !19345

do.end130:                                        ; preds = %do.end129
  %90 = load i32, i32* %rc, align 4, !dbg !19351
  ret i32 %90, !dbg !19352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_gpio(%struct.slgt_info* %info, %struct.gpio_desc* %user_gpio) #1 !dbg !19353 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !10114, metadata !DIExpression()), !dbg !19363
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !19365
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !19366
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !19373
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !19377
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !19378
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !19379
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !19380
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12427, metadata !DIExpression()), !dbg !19381
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12429, metadata !DIExpression()), !dbg !19382
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12431, metadata !DIExpression()), !dbg !19383
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %user_gpio.addr = alloca %struct.gpio_desc*, align 8
  %flags = alloca i64, align 8
  %gpio = alloca %struct.gpio_desc, align 4
  %data = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19384, metadata !DIExpression()), !dbg !19385
  store %struct.gpio_desc* %user_gpio, %struct.gpio_desc** %user_gpio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %user_gpio.addr, metadata !19386, metadata !DIExpression()), !dbg !19387
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19388, metadata !DIExpression()), !dbg !19389
  call void @llvm.dbg.declare(metadata %struct.gpio_desc* %gpio, metadata !19390, metadata !DIExpression()), !dbg !19391
  call void @llvm.dbg.declare(metadata i32* %data, metadata !19392, metadata !DIExpression()), !dbg !19393
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19394
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 20, !dbg !19396
  %1 = load i32, i32* %gpio_present, align 8, !dbg !19396
  %tobool = icmp ne i32 %1, 0, !dbg !19394
  br i1 %tobool, label %if.end, label %if.then, !dbg !19397

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !19398
  br label %return, !dbg !19398

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.gpio_desc* %gpio to i8*, !dbg !19399
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %user_gpio.addr, align 8, !dbg !19400
  %4 = bitcast %struct.gpio_desc* %3 to i8*, !dbg !19400
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !19401
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !19401
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !19379
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !19402
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !19402
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !19402

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !19402
  %conv.i.i = sext i32 %8 to i64, !dbg !19402
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19402
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !19402
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !19403
  %lnot.i.i = xor i1 %10, true, !dbg !19402
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !19402
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19402
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !19404

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19405
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !19406
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !19407

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !19408
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19409
  call void @copy_overflow(i32 %13, i64 %14) #14, !dbg !19410
  br label %if.end9.i.i, !dbg !19410

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19411
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !19411
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !19412

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !19413
  br label %if.end.i.i, !dbg !19413

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !19414
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19415
  br label %check_copy_size.exit.i, !dbg !19415

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19380
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !19380
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !19380
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !19380
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !19380
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19416
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !19416
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !19416
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !19416
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !19416
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !19380

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !19417, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !19418, !srcloc !12572
  br label %if.end31.i.i, !dbg !19419

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19380
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !19380
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !19380
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !19380
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !19380
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !19416
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !19380
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !19420
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !19421

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19422
  br label %check_copy_size.exit.i, !dbg !19422

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !19423
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19424
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19425
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !19425
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #14, !dbg !19426
  store i1 true, i1* %retval.i.i, align 1, !dbg !19427
  br label %check_copy_size.exit.i, !dbg !19427

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !19428
  %lnot.i = xor i1 %23, true, !dbg !19401
  %lnot.ext.i = zext i1 %23 to i32, !dbg !19401
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !19401
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !19429

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !19430
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !19431
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !19432
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #14, !dbg !19433
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !19434
  br label %copy_from_user.exit, !dbg !19435

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !19436
  %tobool1 = icmp ne i64 %27, 0, !dbg !19437
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !19438

if.then2:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !19439
  br label %return, !dbg !19439

if.end3:                                          ; preds = %copy_from_user.exit
  %28 = load i32, i32* @debug_level, align 4, !dbg !19440
  %cmp = icmp sge i32 %28, 3, !dbg !19440
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !19442

if.then4:                                         ; preds = %if.end3
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19440
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 4, !dbg !19440
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19440
  %state = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19440
  %30 = load i32, i32* %state, align 4, !dbg !19440
  %smask = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19440
  %31 = load i32, i32* %smask, align 4, !dbg !19440
  %dir = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 2, !dbg !19440
  %32 = load i32, i32* %dir, align 4, !dbg !19440
  %dmask = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 3, !dbg !19440
  %33 = load i32, i32* %dmask, align 4, !dbg !19440
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.110, i64 0, i64 0), i8* %arraydecay, i32 %30, i32 %31, i32 %32, i32 %33) #12, !dbg !19440
  br label %if.end6, !dbg !19440

if.end6:                                          ; preds = %if.then4, %if.end3
  br label %do.body, !dbg !19443

do.body:                                          ; preds = %if.end6
  br label %do.body7, !dbg !19444

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19445, metadata !DIExpression()), !dbg !19447
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19448, metadata !DIExpression()), !dbg !19447
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !19447
  %conv = zext i1 %cmp8 to i32, !dbg !19447
  store i32 1, i32* %tmp, align 4, !dbg !19447
  %34 = load i32, i32* %tmp, align 4, !dbg !19447
  br label %do.body9, !dbg !19449

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !19450

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !19451

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !19453, metadata !DIExpression()), !dbg !19456
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !19457, metadata !DIExpression()), !dbg !19456
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !19456
  %conv15 = zext i1 %cmp14 to i32, !dbg !19456
  store i32 1, i32* %tmp16, align 4, !dbg !19456
  %35 = load i32, i32* %tmp16, align 4, !dbg !19456
  %call17 = call i64 @arch_local_irq_save() #11, !dbg !19458
  store i64 %call17, i64* %flags, align 8, !dbg !19458
  br label %do.end, !dbg !19458

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !19451

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !19450

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19459, !srcloc !19460
  br label %do.body20, !dbg !19459

do.body20:                                        ; preds = %do.body19
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19461
  %port_array = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 9, !dbg !19461
  %arrayidx = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !19461
  %37 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx, align 8, !dbg !19461
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 22, !dbg !19461
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19462
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !19463
  %rlock.i = bitcast %union.anon.1* %39 to %struct.raw_spinlock*, !dbg !19463
  br label %do.end22, !dbg !19461

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !19459

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !19450

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !19449

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !19444

do.end26:                                         ; preds = %do.end25
  %dmask27 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 3, !dbg !19464
  %40 = load i32, i32* %dmask27, align 4, !dbg !19464
  %tobool28 = icmp ne i32 %40, 0, !dbg !19466
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !19467

if.then29:                                        ; preds = %do.end26
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19468
  %call30 = call i32 @rd_reg32(%struct.slgt_info* %41, i32 8) #11, !dbg !19470
  store i32 %call30, i32* %data, align 4, !dbg !19471
  %dmask31 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 3, !dbg !19472
  %42 = load i32, i32* %dmask31, align 4, !dbg !19472
  %dir32 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 2, !dbg !19473
  %43 = load i32, i32* %dir32, align 4, !dbg !19473
  %and = and i32 %42, %43, !dbg !19474
  %44 = load i32, i32* %data, align 4, !dbg !19475
  %or = or i32 %44, %and, !dbg !19475
  store i32 %or, i32* %data, align 4, !dbg !19475
  %dmask33 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 3, !dbg !19476
  %45 = load i32, i32* %dmask33, align 4, !dbg !19476
  %dir34 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 2, !dbg !19477
  %46 = load i32, i32* %dir34, align 4, !dbg !19477
  %neg = xor i32 %46, -1, !dbg !19478
  %and35 = and i32 %45, %neg, !dbg !19479
  %neg36 = xor i32 %and35, -1, !dbg !19480
  %47 = load i32, i32* %data, align 4, !dbg !19481
  %and37 = and i32 %47, %neg36, !dbg !19481
  store i32 %and37, i32* %data, align 4, !dbg !19481
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19482
  %49 = load i32, i32* %data, align 4, !dbg !19483
  call void @wr_reg32(%struct.slgt_info* %48, i32 8, i32 %49) #11, !dbg !19484
  br label %if.end38, !dbg !19485

if.end38:                                         ; preds = %if.then29, %do.end26
  %smask39 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19486
  %50 = load i32, i32* %smask39, align 4, !dbg !19486
  %tobool40 = icmp ne i32 %50, 0, !dbg !19488
  br i1 %tobool40, label %if.then41, label %if.end53, !dbg !19489

if.then41:                                        ; preds = %if.end38
  %51 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19490
  %call42 = call i32 @rd_reg32(%struct.slgt_info* %51, i32 16) #11, !dbg !19492
  store i32 %call42, i32* %data, align 4, !dbg !19493
  %smask43 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19494
  %52 = load i32, i32* %smask43, align 4, !dbg !19494
  %state44 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19495
  %53 = load i32, i32* %state44, align 4, !dbg !19495
  %and45 = and i32 %52, %53, !dbg !19496
  %54 = load i32, i32* %data, align 4, !dbg !19497
  %or46 = or i32 %54, %and45, !dbg !19497
  store i32 %or46, i32* %data, align 4, !dbg !19497
  %smask47 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19498
  %55 = load i32, i32* %smask47, align 4, !dbg !19498
  %state48 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19499
  %56 = load i32, i32* %state48, align 4, !dbg !19499
  %neg49 = xor i32 %56, -1, !dbg !19500
  %and50 = and i32 %55, %neg49, !dbg !19501
  %neg51 = xor i32 %and50, -1, !dbg !19502
  %57 = load i32, i32* %data, align 4, !dbg !19503
  %and52 = and i32 %57, %neg51, !dbg !19503
  store i32 %and52, i32* %data, align 4, !dbg !19503
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19504
  %59 = load i32, i32* %data, align 4, !dbg !19505
  call void @wr_reg32(%struct.slgt_info* %58, i32 16, i32 %59) #11, !dbg !19506
  br label %if.end53, !dbg !19507

if.end53:                                         ; preds = %if.then41, %if.end38
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19508
  %port_array54 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %60, i32 0, i32 9, !dbg !19509
  %arrayidx55 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array54, i64 0, i64 0, !dbg !19508
  %61 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx55, align 8, !dbg !19508
  %lock56 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %61, i32 0, i32 22, !dbg !19510
  %62 = load i64, i64* %flags, align 8, !dbg !19511
  store %struct.spinlock* %lock56, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %62, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19512
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19512
  store i32 1, i32* %tmp.i, align 4, !dbg !19512
  %63 = load i32, i32* %tmp.i, align 4, !dbg !19512
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19513
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19513
  store i32 1, i32* %tmp8.i, align 4, !dbg !19513
  %64 = load i32, i32* %tmp8.i, align 4, !dbg !19513
  %65 = load i64, i64* %flags.addr.i, align 8, !dbg !19514
  call void @arch_local_irq_restore(i64 %65) #14, !dbg !19514
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19515, !srcloc !10199
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !19516
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !19516
  %rlock.i58 = bitcast %union.anon.1* %67 to %struct.raw_spinlock*, !dbg !19516
  store i32 0, i32* %retval, align 4, !dbg !19517
  br label %return, !dbg !19517

return:                                           ; preds = %if.end53, %if.then2, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !19518
  ret i32 %68, !dbg !19518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_gpio(%struct.slgt_info* %info, %struct.gpio_desc* %user_gpio) #1 !dbg !19519 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !19520
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !19524
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !19525
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !19526
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !19527
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12443, metadata !DIExpression()), !dbg !19528
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12445, metadata !DIExpression()), !dbg !19529
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12447, metadata !DIExpression()), !dbg !19530
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %user_gpio.addr = alloca %struct.gpio_desc*, align 8
  %gpio = alloca %struct.gpio_desc, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19531, metadata !DIExpression()), !dbg !19532
  store %struct.gpio_desc* %user_gpio, %struct.gpio_desc** %user_gpio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %user_gpio.addr, metadata !19533, metadata !DIExpression()), !dbg !19534
  call void @llvm.dbg.declare(metadata %struct.gpio_desc* %gpio, metadata !19535, metadata !DIExpression()), !dbg !19536
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19537
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 20, !dbg !19539
  %1 = load i32, i32* %gpio_present, align 8, !dbg !19539
  %tobool = icmp ne i32 %1, 0, !dbg !19537
  br i1 %tobool, label %if.end, label %if.then, !dbg !19540

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !19541
  br label %return, !dbg !19541

if.end:                                           ; preds = %entry
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19542
  %call = call i32 @rd_reg32(%struct.slgt_info* %2, i32 16) #11, !dbg !19543
  %state = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19544
  store i32 %call, i32* %state, align 4, !dbg !19545
  %smask = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19546
  store i32 -1, i32* %smask, align 4, !dbg !19547
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19548
  %call1 = call i32 @rd_reg32(%struct.slgt_info* %3, i32 8) #11, !dbg !19549
  %dir = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 2, !dbg !19550
  store i32 %call1, i32* %dir, align 4, !dbg !19551
  %dmask = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 3, !dbg !19552
  store i32 -1, i32* %dmask, align 4, !dbg !19553
  %4 = load %struct.gpio_desc*, %struct.gpio_desc** %user_gpio.addr, align 8, !dbg !19554
  %5 = bitcast %struct.gpio_desc* %4 to i8*, !dbg !19554
  %6 = bitcast %struct.gpio_desc* %gpio to i8*, !dbg !19555
  store i8* %5, i8** %to.addr.i, align 8
  store i8* %6, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %from.addr.i, align 8, !dbg !19556
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !19556
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !19526
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !19557
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !19557
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !19557

land.rhs.i.i:                                     ; preds = %if.end
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !19557
  %conv.i.i = sext i32 %10 to i64, !dbg !19557
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19557
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !19557
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %12 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !19558
  %lnot.i.i = xor i1 %12, true, !dbg !19557
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !19557
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19557
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !19559

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19560
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #10, !dbg !19561
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !19562

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !19563
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19564
  call void @copy_overflow(i32 %15, i64 %16) #14, !dbg !19565
  br label %if.end9.i.i, !dbg !19565

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19566
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !19566
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !19567

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !19568
  br label %if.end.i.i, !dbg !19568

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !19569
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19570
  br label %check_copy_size.exit.i, !dbg !19570

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19527
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !19527
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !19527
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !19527
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !19527
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19571
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !19571
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !19571
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !19571
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !19571
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !19527

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !19572, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !19573, !srcloc !12572
  br label %if.end31.i.i, !dbg !19574

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19527
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !19527
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !19527
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !19527
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !19527
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !19571
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !19527
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !19575
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !19576

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19577
  br label %check_copy_size.exit.i, !dbg !19577

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !19578
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19579
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19580
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !19580
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #14, !dbg !19581
  store i1 true, i1* %retval.i.i, align 1, !dbg !19582
  br label %check_copy_size.exit.i, !dbg !19582

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !19583
  %lnot.i = xor i1 %25, true, !dbg !19556
  %lnot.ext.i = zext i1 %25 to i32, !dbg !19556
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !19556
  br i1 %25, label %if.then.i, label %copy_to_user.exit, !dbg !19584

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !19585
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !19586
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !19587
  %call2.i = call i64 @_copy_to_user(i8* %26, i8* %27, i64 %28) #14, !dbg !19588
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !19589
  br label %copy_to_user.exit, !dbg !19590

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !19591
  %tobool3 = icmp ne i64 %29, 0, !dbg !19592
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !19593

if.then4:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !19594
  br label %return, !dbg !19594

if.end5:                                          ; preds = %copy_to_user.exit
  %30 = load i32, i32* @debug_level, align 4, !dbg !19595
  %cmp = icmp sge i32 %30, 3, !dbg !19595
  br i1 %cmp, label %if.then6, label %if.end10, !dbg !19597

if.then6:                                         ; preds = %if.end5
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19595
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 4, !dbg !19595
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19595
  %state7 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19595
  %32 = load i32, i32* %state7, align 4, !dbg !19595
  %dir8 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 2, !dbg !19595
  %33 = load i32, i32* %dir8, align 4, !dbg !19595
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.111, i64 0, i64 0), i8* %arraydecay, i32 %32, i32 %33) #12, !dbg !19595
  br label %if.end10, !dbg !19595

if.end10:                                         ; preds = %if.then6, %if.end5
  store i32 0, i32* %retval, align 4, !dbg !19598
  br label %return, !dbg !19598

return:                                           ; preds = %if.end10, %if.then4, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !19599
  ret i32 %34, !dbg !19599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @wait_gpio(%struct.slgt_info* %info, %struct.gpio_desc* %user_gpio) #1 !dbg !19600 {
entry:
  %retval.i.i109 = alloca i1, align 1
  %addr.addr.i.i110 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i110, metadata !12402, metadata !DIExpression()), !dbg !19601
  %bytes.addr.i.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i111, metadata !12417, metadata !DIExpression()), !dbg !19605
  %is_source.addr.i.i112 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i112, metadata !12419, metadata !DIExpression()), !dbg !19606
  %sz.i.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i113, metadata !12421, metadata !DIExpression()), !dbg !19607
  %__ret_warn_on.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i114, metadata !12423, metadata !DIExpression()), !dbg !19608
  %tmp.i.i115 = alloca i64, align 8
  %to.addr.i116 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i116, metadata !12443, metadata !DIExpression()), !dbg !19609
  %from.addr.i117 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i117, metadata !12445, metadata !DIExpression()), !dbg !19610
  %n.addr.i118 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i118, metadata !12447, metadata !DIExpression()), !dbg !19611
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !10114, metadata !DIExpression()), !dbg !19612
  %flags.addr.i105 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i105, metadata !10120, metadata !DIExpression()), !dbg !19614
  %tmp.i106 = alloca i32, align 4
  %tmp8.i107 = alloca i32, align 4
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !8902, metadata !DIExpression()), !dbg !19615
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !19624
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !19627
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !19628
  %tmp.i101 = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i99 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i99, metadata !10114, metadata !DIExpression()), !dbg !19629
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !19631
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !19632
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !19639
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !19643
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !19644
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !19645
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !19646
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12427, metadata !DIExpression()), !dbg !19647
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12429, metadata !DIExpression()), !dbg !19648
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12431, metadata !DIExpression()), !dbg !19649
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %user_gpio.addr = alloca %struct.gpio_desc*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %gpio = alloca %struct.gpio_desc, align 4
  %wait = alloca %struct.cond_wait, align 8
  %state = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy56 = alloca i64, align 8
  %__dummy257 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  %__dummy64 = alloca i64, align 8
  %__dummy265 = alloca i64, align 8
  %tmp68 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19650, metadata !DIExpression()), !dbg !19651
  store %struct.gpio_desc* %user_gpio, %struct.gpio_desc** %user_gpio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gpio_desc** %user_gpio.addr, metadata !19652, metadata !DIExpression()), !dbg !19653
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19654, metadata !DIExpression()), !dbg !19655
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !19656, metadata !DIExpression()), !dbg !19657
  store i32 0, i32* %rc, align 4, !dbg !19657
  call void @llvm.dbg.declare(metadata %struct.gpio_desc* %gpio, metadata !19658, metadata !DIExpression()), !dbg !19659
  call void @llvm.dbg.declare(metadata %struct.cond_wait* %wait, metadata !19660, metadata !DIExpression()), !dbg !19661
  call void @llvm.dbg.declare(metadata i32* %state, metadata !19662, metadata !DIExpression()), !dbg !19663
  %0 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19664
  %gpio_present = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %0, i32 0, i32 20, !dbg !19666
  %1 = load i32, i32* %gpio_present, align 8, !dbg !19666
  %tobool = icmp ne i32 %1, 0, !dbg !19664
  br i1 %tobool, label %if.end, label %if.then, !dbg !19667

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !19668
  br label %return, !dbg !19668

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.gpio_desc* %gpio to i8*, !dbg !19669
  %3 = load %struct.gpio_desc*, %struct.gpio_desc** %user_gpio.addr, align 8, !dbg !19670
  %4 = bitcast %struct.gpio_desc* %3 to i8*, !dbg !19670
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !19671
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !19671
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !19645
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !19672
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !19672
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !19672

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !19672
  %conv.i.i = sext i32 %8 to i64, !dbg !19672
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19672
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !19672
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !19673
  %lnot.i.i = xor i1 %10, true, !dbg !19672
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !19672
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19672
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !19674

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19675
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !19676
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !19677

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !19678
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19679
  call void @copy_overflow(i32 %13, i64 %14) #14, !dbg !19680
  br label %if.end9.i.i, !dbg !19680

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19681
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !19681
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !19682

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !19683
  br label %if.end.i.i, !dbg !19683

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !19684
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19685
  br label %check_copy_size.exit.i, !dbg !19685

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19646
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !19646
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !19646
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !19646
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !19646
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19686
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !19686
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !19686
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !19686
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !19686
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !19646

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !19687, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !19688, !srcloc !12572
  br label %if.end31.i.i, !dbg !19689

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !19646
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !19646
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !19646
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !19646
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !19646
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !19686
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !19646
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !19690
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !19691

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !19692
  br label %check_copy_size.exit.i, !dbg !19692

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !19693
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !19694
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !19695
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !19695
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #14, !dbg !19696
  store i1 true, i1* %retval.i.i, align 1, !dbg !19697
  br label %check_copy_size.exit.i, !dbg !19697

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !19698
  %lnot.i = xor i1 %23, true, !dbg !19671
  %lnot.ext.i = zext i1 %23 to i32, !dbg !19671
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !19671
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !19699

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !19700
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !19701
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !19702
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #14, !dbg !19703
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !19704
  br label %copy_from_user.exit, !dbg !19705

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !19706
  %tobool1 = icmp ne i64 %27, 0, !dbg !19707
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !19708

if.then2:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !19709
  br label %return, !dbg !19709

if.end3:                                          ; preds = %copy_from_user.exit
  %28 = load i32, i32* @debug_level, align 4, !dbg !19710
  %cmp = icmp sge i32 %28, 3, !dbg !19710
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !19712

if.then4:                                         ; preds = %if.end3
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19710
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 4, !dbg !19710
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19710
  %state5 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19710
  %30 = load i32, i32* %state5, align 4, !dbg !19710
  %smask = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19710
  %31 = load i32, i32* %smask, align 4, !dbg !19710
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.112, i64 0, i64 0), i8* %arraydecay, i32 %30, i32 %31) #12, !dbg !19710
  br label %if.end7, !dbg !19710

if.end7:                                          ; preds = %if.then4, %if.end3
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19713
  %call8 = call i32 @rd_reg32(%struct.slgt_info* %32, i32 8) #11, !dbg !19715
  %neg = xor i32 %call8, -1, !dbg !19716
  %smask9 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19717
  %33 = load i32, i32* %smask9, align 4, !dbg !19718
  %and = and i32 %33, %neg, !dbg !19718
  store i32 %and, i32* %smask9, align 4, !dbg !19718
  %cmp10 = icmp eq i32 %and, 0, !dbg !19719
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !19720

if.then11:                                        ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !19721
  br label %return, !dbg !19721

if.end12:                                         ; preds = %if.end7
  %smask13 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19722
  %34 = load i32, i32* %smask13, align 4, !dbg !19722
  call void @init_cond_wait(%struct.cond_wait* %wait, i32 %34) #11, !dbg !19723
  br label %do.body, !dbg !19724

do.body:                                          ; preds = %if.end12
  br label %do.body14, !dbg !19725

do.body14:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19726, metadata !DIExpression()), !dbg !19728
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19729, metadata !DIExpression()), !dbg !19728
  %cmp15 = icmp eq i64* %__dummy, %__dummy2, !dbg !19728
  %conv = zext i1 %cmp15 to i32, !dbg !19728
  store i32 1, i32* %tmp, align 4, !dbg !19728
  %35 = load i32, i32* %tmp, align 4, !dbg !19728
  br label %do.body16, !dbg !19730

do.body16:                                        ; preds = %do.body14
  br label %do.body17, !dbg !19731

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !19732

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !19734, metadata !DIExpression()), !dbg !19737
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !19738, metadata !DIExpression()), !dbg !19737
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !19737
  %conv22 = zext i1 %cmp21 to i32, !dbg !19737
  store i32 1, i32* %tmp23, align 4, !dbg !19737
  %36 = load i32, i32* %tmp23, align 4, !dbg !19737
  %call24 = call i64 @arch_local_irq_save() #11, !dbg !19739
  store i64 %call24, i64* %flags, align 8, !dbg !19739
  br label %do.end, !dbg !19739

do.end:                                           ; preds = %do.body18
  br label %do.end25, !dbg !19732

do.end25:                                         ; preds = %do.end
  br label %do.body26, !dbg !19731

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19740, !srcloc !19741
  br label %do.body27, !dbg !19740

do.body27:                                        ; preds = %do.body26
  %37 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19742
  %port_array = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %37, i32 0, i32 9, !dbg !19742
  %arrayidx = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array, i64 0, i64 0, !dbg !19742
  %38 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx, align 8, !dbg !19742
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 22, !dbg !19742
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19743
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !19744
  %rlock.i = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !19744
  br label %do.end29, !dbg !19742

do.end29:                                         ; preds = %do.body27
  br label %do.end30, !dbg !19740

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !19731

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !19730

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !19725

do.end33:                                         ; preds = %do.end32
  %41 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19745
  %42 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19746
  %call34 = call i32 @rd_reg32(%struct.slgt_info* %42, i32 12) #11, !dbg !19747
  %smask35 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19748
  %43 = load i32, i32* %smask35, align 4, !dbg !19748
  %or = or i32 %call34, %43, !dbg !19749
  call void @wr_reg32(%struct.slgt_info* %41, i32 12, i32 %or) #11, !dbg !19750
  %44 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19751
  %call36 = call i32 @rd_reg32(%struct.slgt_info* %44, i32 16) #11, !dbg !19752
  store i32 %call36, i32* %state, align 4, !dbg !19753
  %smask37 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 1, !dbg !19754
  %45 = load i32, i32* %smask37, align 4, !dbg !19754
  %46 = load i32, i32* %state, align 4, !dbg !19755
  %state38 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19756
  %47 = load i32, i32* %state38, align 4, !dbg !19756
  %xor = xor i32 %46, %47, !dbg !19757
  %neg39 = xor i32 %xor, -1, !dbg !19758
  %and40 = and i32 %45, %neg39, !dbg !19759
  %tobool41 = icmp ne i32 %and40, 0, !dbg !19759
  br i1 %tobool41, label %if.then42, label %if.else, !dbg !19760

if.then42:                                        ; preds = %do.end33
  %48 = load i32, i32* %state, align 4, !dbg !19761
  %state43 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19763
  store i32 %48, i32* %state43, align 4, !dbg !19764
  br label %if.end84, !dbg !19765

if.else:                                          ; preds = %do.end33
  %49 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19766
  %gpio_wait_q = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %49, i32 0, i32 21, !dbg !19767
  call void @add_cond_wait(%struct.cond_wait** %gpio_wait_q, %struct.cond_wait* %wait) #11, !dbg !19768
  %50 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19769
  %port_array44 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %50, i32 0, i32 9, !dbg !19770
  %arrayidx45 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array44, i64 0, i64 0, !dbg !19769
  %51 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx45, align 8, !dbg !19769
  %lock46 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %51, i32 0, i32 22, !dbg !19771
  %52 = load i64, i64* %flags, align 8, !dbg !19772
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i99, align 8
  store i64 %52, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19773
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19773
  store i32 1, i32* %tmp.i, align 4, !dbg !19773
  %53 = load i32, i32* %tmp.i, align 4, !dbg !19773
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19774
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19774
  store i32 1, i32* %tmp8.i, align 4, !dbg !19774
  %54 = load i32, i32* %tmp8.i, align 4, !dbg !19774
  %55 = load i64, i64* %flags.addr.i, align 8, !dbg !19775
  call void @arch_local_irq_restore(i64 %55) #14, !dbg !19775
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19776, !srcloc !10199
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i99, align 8, !dbg !19777
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !19777
  %rlock.i100 = bitcast %union.anon.1* %57 to %struct.raw_spinlock*, !dbg !19777
  call void @schedule() #11, !dbg !19778
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !19627
  %58 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !19627
  %59 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !19628, !srcloc !18022
  store i64 %59, i64* %pfo_val__.i, align 8, !dbg !19628
  %60 = load i64, i64* %pfo_val__.i, align 8, !dbg !19628
  %61 = inttoptr i64 %60 to %struct.task_struct*, !dbg !19628
  store %struct.task_struct* %61, %struct.task_struct** %tmp.i101, align 8, !dbg !19628
  %62 = load %struct.task_struct*, %struct.task_struct** %tmp.i101, align 8, !dbg !19628
  store %struct.task_struct* %62, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19624
  %63 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !19624
  store %struct.task_struct* %63, %struct.task_struct** %tmp1.i, align 8, !dbg !19624
  %64 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !19624
  %call48 = call i32 @signal_pending(%struct.task_struct* %64) #11, !dbg !19779
  %tobool49 = icmp ne i32 %call48, 0, !dbg !19779
  br i1 %tobool49, label %if.then50, label %if.else51, !dbg !19780

if.then50:                                        ; preds = %if.else
  store i32 -512, i32* %rc, align 4, !dbg !19781
  br label %if.end53, !dbg !19782

if.else51:                                        ; preds = %if.else
  %data = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %wait, i32 0, i32 3, !dbg !19783
  %65 = load i32, i32* %data, align 8, !dbg !19783
  %state52 = getelementptr inbounds %struct.gpio_desc, %struct.gpio_desc* %gpio, i32 0, i32 0, !dbg !19784
  store i32 %65, i32* %state52, align 4, !dbg !19785
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then50
  br label %do.body54, !dbg !19786

do.body54:                                        ; preds = %if.end53
  br label %do.body55, !dbg !19787

do.body55:                                        ; preds = %do.body54
  call void @llvm.dbg.declare(metadata i64* %__dummy56, metadata !19788, metadata !DIExpression()), !dbg !19790
  call void @llvm.dbg.declare(metadata i64* %__dummy257, metadata !19791, metadata !DIExpression()), !dbg !19790
  %cmp58 = icmp eq i64* %__dummy56, %__dummy257, !dbg !19790
  %conv59 = zext i1 %cmp58 to i32, !dbg !19790
  store i32 1, i32* %tmp60, align 4, !dbg !19790
  %66 = load i32, i32* %tmp60, align 4, !dbg !19790
  br label %do.body61, !dbg !19792

do.body61:                                        ; preds = %do.body55
  br label %do.body62, !dbg !19793

do.body62:                                        ; preds = %do.body61
  br label %do.body63, !dbg !19794

do.body63:                                        ; preds = %do.body62
  call void @llvm.dbg.declare(metadata i64* %__dummy64, metadata !19796, metadata !DIExpression()), !dbg !19799
  call void @llvm.dbg.declare(metadata i64* %__dummy265, metadata !19800, metadata !DIExpression()), !dbg !19799
  %cmp66 = icmp eq i64* %__dummy64, %__dummy265, !dbg !19799
  %conv67 = zext i1 %cmp66 to i32, !dbg !19799
  store i32 1, i32* %tmp68, align 4, !dbg !19799
  %67 = load i32, i32* %tmp68, align 4, !dbg !19799
  %call69 = call i64 @arch_local_irq_save() #11, !dbg !19801
  store i64 %call69, i64* %flags, align 8, !dbg !19801
  br label %do.end70, !dbg !19801

do.end70:                                         ; preds = %do.body63
  br label %do.end71, !dbg !19794

do.end71:                                         ; preds = %do.end70
  br label %do.body72, !dbg !19793

do.body72:                                        ; preds = %do.end71
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19802, !srcloc !19803
  br label %do.body73, !dbg !19802

do.body73:                                        ; preds = %do.body72
  %68 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19804
  %port_array74 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %68, i32 0, i32 9, !dbg !19804
  %arrayidx75 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array74, i64 0, i64 0, !dbg !19804
  %69 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx75, align 8, !dbg !19804
  %lock76 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %69, i32 0, i32 22, !dbg !19804
  store %struct.spinlock* %lock76, %struct.spinlock** %lock.addr.i102, align 8
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !19805
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !19806
  %rlock.i103 = bitcast %union.anon.1* %71 to %struct.raw_spinlock*, !dbg !19806
  br label %do.end78, !dbg !19804

do.end78:                                         ; preds = %do.body73
  br label %do.end79, !dbg !19802

do.end79:                                         ; preds = %do.end78
  br label %do.end80, !dbg !19793

do.end80:                                         ; preds = %do.end79
  br label %do.end81, !dbg !19792

do.end81:                                         ; preds = %do.end80
  br label %do.end82, !dbg !19787

do.end82:                                         ; preds = %do.end81
  %72 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19807
  %gpio_wait_q83 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %72, i32 0, i32 21, !dbg !19808
  call void @remove_cond_wait(%struct.cond_wait** %gpio_wait_q83, %struct.cond_wait* %wait) #11, !dbg !19809
  br label %if.end84

if.end84:                                         ; preds = %do.end82, %if.then42
  %73 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19810
  %gpio_wait_q85 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %73, i32 0, i32 21, !dbg !19812
  %74 = load %struct.cond_wait*, %struct.cond_wait** %gpio_wait_q85, align 8, !dbg !19812
  %cmp86 = icmp eq %struct.cond_wait* %74, null, !dbg !19813
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !19814

if.then88:                                        ; preds = %if.end84
  %75 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19815
  call void @wr_reg32(%struct.slgt_info* %75, i32 12, i32 0) #11, !dbg !19816
  br label %if.end89, !dbg !19816

if.end89:                                         ; preds = %if.then88, %if.end84
  %76 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19817
  %port_array90 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %76, i32 0, i32 9, !dbg !19818
  %arrayidx91 = getelementptr [4 x %struct.slgt_info*], [4 x %struct.slgt_info*]* %port_array90, i64 0, i64 0, !dbg !19817
  %77 = load %struct.slgt_info*, %struct.slgt_info** %arrayidx91, align 8, !dbg !19817
  %lock92 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %77, i32 0, i32 22, !dbg !19819
  %78 = load i64, i64* %flags, align 8, !dbg !19820
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i104, align 8
  store i64 %78, i64* %flags.addr.i105, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19821
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19821
  store i32 1, i32* %tmp.i106, align 4, !dbg !19821
  %79 = load i32, i32* %tmp.i106, align 4, !dbg !19821
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19822
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19822
  store i32 1, i32* %tmp8.i107, align 4, !dbg !19822
  %80 = load i32, i32* %tmp8.i107, align 4, !dbg !19822
  %81 = load i64, i64* %flags.addr.i105, align 8, !dbg !19823
  call void @arch_local_irq_restore(i64 %81) #14, !dbg !19823
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19824, !srcloc !10199
  %82 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !19825
  %83 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %82, i32 0, i32 0, !dbg !19825
  %rlock.i108 = bitcast %union.anon.1* %83 to %struct.raw_spinlock*, !dbg !19825
  %84 = load i32, i32* %rc, align 4, !dbg !19826
  %cmp93 = icmp eq i32 %84, 0, !dbg !19827
  br i1 %cmp93, label %land.lhs.true, label %if.end98, !dbg !19828

land.lhs.true:                                    ; preds = %if.end89
  %85 = load %struct.gpio_desc*, %struct.gpio_desc** %user_gpio.addr, align 8, !dbg !19829
  %86 = bitcast %struct.gpio_desc* %85 to i8*, !dbg !19829
  %87 = bitcast %struct.gpio_desc* %gpio to i8*, !dbg !19830
  store i8* %86, i8** %to.addr.i116, align 8
  store i8* %87, i8** %from.addr.i117, align 8
  store i64 16, i64* %n.addr.i118, align 8
  %88 = load i8*, i8** %from.addr.i117, align 8, !dbg !19831
  %89 = load i64, i64* %n.addr.i118, align 8, !dbg !19831
  store i8* %88, i8** %addr.addr.i.i110, align 8
  store i64 %89, i64* %bytes.addr.i.i111, align 8
  store i8 1, i8* %is_source.addr.i.i112, align 1
  store i32 -1, i32* %sz.i.i113, align 4, !dbg !19607
  %90 = load i32, i32* %sz.i.i113, align 4, !dbg !19832
  %cmp.i.i119 = icmp sge i32 %90, 0, !dbg !19832
  br i1 %cmp.i.i119, label %land.rhs.i.i122, label %land.end.i.i126, !dbg !19832

land.rhs.i.i122:                                  ; preds = %land.lhs.true
  %91 = load i32, i32* %sz.i.i113, align 4, !dbg !19832
  %conv.i.i120 = sext i32 %91 to i64, !dbg !19832
  %92 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !19832
  %cmp1.i.i121 = icmp ult i64 %conv.i.i120, %92, !dbg !19832
  br label %land.end.i.i126

land.end.i.i126:                                  ; preds = %land.rhs.i.i122, %land.lhs.true
  %93 = phi i1 [ false, %land.lhs.true ], [ %cmp1.i.i121, %land.rhs.i.i122 ], !dbg !19833
  %lnot.i.i123 = xor i1 %93, true, !dbg !19832
  %lnot.ext.i.i124 = zext i1 %93 to i32, !dbg !19832
  %conv4.i.i125 = sext i32 %lnot.ext.i.i124 to i64, !dbg !19832
  br i1 %93, label %if.then.i.i127, label %if.end10.i.i142, !dbg !19834

if.then.i.i127:                                   ; preds = %land.end.i.i126
  %94 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !19835
  %95 = call i1 @llvm.is.constant.i64(i64 %94) #10, !dbg !19836
  br i1 %95, label %if.else.i.i130, label %if.then5.i.i128, !dbg !19837

if.then5.i.i128:                                  ; preds = %if.then.i.i127
  %96 = load i32, i32* %sz.i.i113, align 4, !dbg !19838
  %97 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !19839
  call void @copy_overflow(i32 %96, i64 %97) #14, !dbg !19840
  br label %if.end9.i.i134, !dbg !19840

if.else.i.i130:                                   ; preds = %if.then.i.i127
  %98 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !19841
  %tobool6.i.i129 = trunc i8 %98 to i1, !dbg !19841
  br i1 %tobool6.i.i129, label %if.then7.i.i131, label %if.else8.i.i132, !dbg !19842

if.then7.i.i131:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_from() #14, !dbg !19843
  br label %if.end.i.i133, !dbg !19843

if.else8.i.i132:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_to() #14, !dbg !19844
  br label %if.end.i.i133

if.end.i.i133:                                    ; preds = %if.else8.i.i132, %if.then7.i.i131
  br label %if.end9.i.i134

if.end9.i.i134:                                   ; preds = %if.end.i.i133, %if.then5.i.i128
  store i1 false, i1* %retval.i.i109, align 1, !dbg !19845
  br label %check_copy_size.exit.i156, !dbg !19845

if.end10.i.i142:                                  ; preds = %land.end.i.i126
  %99 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !19608
  %cmp11.i.i135 = icmp ugt i64 %99, 2147483647, !dbg !19608
  %lnot13.i.i136 = xor i1 %cmp11.i.i135, true, !dbg !19608
  %lnot.ext16.i.i137 = zext i1 %cmp11.i.i135 to i32, !dbg !19608
  store i32 %lnot.ext16.i.i137, i32* %__ret_warn_on.i.i114, align 4, !dbg !19608
  %100 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !19846
  %tobool17.i.i138 = icmp ne i32 %100, 0, !dbg !19846
  %lnot18.i.i139 = xor i1 %tobool17.i.i138, true, !dbg !19846
  %lnot.ext21.i.i140 = zext i1 %tobool17.i.i138 to i32, !dbg !19846
  %conv22.i.i141 = sext i32 %lnot.ext21.i.i140 to i64, !dbg !19846
  br i1 %tobool17.i.i138, label %if.then24.i.i143, label %if.end31.i.i149, !dbg !19608

if.then24.i.i143:                                 ; preds = %if.end10.i.i142
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !19847, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !19848, !srcloc !12572
  br label %if.end31.i.i149, !dbg !19849

if.end31.i.i149:                                  ; preds = %if.then24.i.i143, %if.end10.i.i142
  %101 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !19608
  %tobool32.i.i144 = icmp ne i32 %101, 0, !dbg !19608
  %lnot33.i.i145 = xor i1 %tobool32.i.i144, true, !dbg !19608
  %lnot.ext36.i.i146 = zext i1 %tobool32.i.i144 to i32, !dbg !19608
  %conv37.i.i147 = sext i32 %lnot.ext36.i.i146 to i64, !dbg !19608
  store i64 %conv37.i.i147, i64* %tmp.i.i115, align 8, !dbg !19846
  %102 = load i64, i64* %tmp.i.i115, align 8, !dbg !19608
  %tobool38.i.i148 = icmp ne i64 %102, 0, !dbg !19850
  br i1 %tobool38.i.i148, label %if.then39.i.i150, label %if.end40.i.i152, !dbg !19851

if.then39.i.i150:                                 ; preds = %if.end31.i.i149
  store i1 false, i1* %retval.i.i109, align 1, !dbg !19852
  br label %check_copy_size.exit.i156, !dbg !19852

if.end40.i.i152:                                  ; preds = %if.end31.i.i149
  %103 = load i8*, i8** %addr.addr.i.i110, align 8, !dbg !19853
  %104 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !19854
  %105 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !19855
  %tobool41.i.i151 = trunc i8 %105 to i1, !dbg !19855
  call void @check_object_size(i8* %103, i64 %104, i1 zeroext %tobool41.i.i151) #14, !dbg !19856
  store i1 true, i1* %retval.i.i109, align 1, !dbg !19857
  br label %check_copy_size.exit.i156, !dbg !19857

check_copy_size.exit.i156:                        ; preds = %if.end40.i.i152, %if.then39.i.i150, %if.end9.i.i134
  %106 = load i1, i1* %retval.i.i109, align 1, !dbg !19858
  %lnot.i153 = xor i1 %106, true, !dbg !19831
  %lnot.ext.i154 = zext i1 %106 to i32, !dbg !19831
  %conv.i155 = sext i32 %lnot.ext.i154 to i64, !dbg !19831
  br i1 %106, label %if.then.i158, label %copy_to_user.exit, !dbg !19859

if.then.i158:                                     ; preds = %check_copy_size.exit.i156
  %107 = load i8*, i8** %to.addr.i116, align 8, !dbg !19860
  %108 = load i8*, i8** %from.addr.i117, align 8, !dbg !19861
  %109 = load i64, i64* %n.addr.i118, align 8, !dbg !19862
  %call2.i157 = call i64 @_copy_to_user(i8* %107, i8* %108, i64 %109) #14, !dbg !19863
  store i64 %call2.i157, i64* %n.addr.i118, align 8, !dbg !19864
  br label %copy_to_user.exit, !dbg !19865

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i156, %if.then.i158
  %110 = load i64, i64* %n.addr.i118, align 8, !dbg !19866
  %tobool96 = icmp ne i64 %110, 0, !dbg !19867
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !19868

if.then97:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !19869
  br label %if.end98, !dbg !19870

if.end98:                                         ; preds = %if.then97, %copy_to_user.exit, %if.end89
  %111 = load i32, i32* %rc, align 4, !dbg !19871
  store i32 %111, i32* %retval, align 4, !dbg !19872
  br label %return, !dbg !19872

return:                                           ; preds = %if.end98, %if.then11, %if.then2, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !19873
  ret i32 %112, !dbg !19873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_xsync(%struct.slgt_info* %info, i32* %xsync) #1 !dbg !19874 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %xsync.addr = alloca i32*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19875, metadata !DIExpression()), !dbg !19876
  store i32* %xsync, i32** %xsync.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xsync.addr, metadata !19877, metadata !DIExpression()), !dbg !19878
  %0 = load i32, i32* @debug_level, align 4, !dbg !19879
  %cmp = icmp sge i32 %0, 3, !dbg !19879
  br i1 %cmp, label %if.then, label %if.end, !dbg !19881

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19879
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !19879
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19879
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19879
  %xsync1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 43, !dbg !19879
  %3 = load i32, i32* %xsync1, align 8, !dbg !19879
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !19879
  br label %if.end, !dbg !19879

if.end:                                           ; preds = %if.then, %entry
  call void @might_fault() #11, !dbg !19882
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !19885, metadata !DIExpression()), !dbg !19887
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !19888, metadata !DIExpression()), !dbg !19887
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !19889, metadata !DIExpression()), !dbg !19887
  %4 = load i32*, i32** %xsync.addr, align 8, !dbg !19887
  %5 = bitcast i32* %4 to i8*, !dbg !19887
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !19887
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19887
  %xsync2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 43, !dbg !19887
  %7 = load i32, i32* %xsync2, align 8, !dbg !19887
  store i32 %7, i32* %__val_pu, align 4, !dbg !19887
  %8 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !19887
  %9 = load i8*, i8** %__ptr_pu, align 8, !dbg !19887
  %10 = load i32, i32* %__val_pu, align 4, !dbg !19887
  %11 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %9, i32 %10, i64 4, i64 %8) #10, !dbg !19887, !srcloc !19890
  %asmresult = extractvalue { i8*, i64 } %11, 0, !dbg !19887
  %asmresult3 = extractvalue { i8*, i64 } %11, 1, !dbg !19887
  %12 = ptrtoint i8* %asmresult to i64, !dbg !19887
  %13 = trunc i64 %12 to i32, !dbg !19887
  store i32 %13, i32* %__ret_pu, align 4, !dbg !19887
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult3), !dbg !19887
  %14 = load i32, i32* %__ret_pu, align 4, !dbg !19887
  %conv = sext i32 %14 to i64, !dbg !19887
  store i64 %conv, i64* %tmp4, align 8, !dbg !19887
  %15 = load i64, i64* %tmp4, align 8, !dbg !19887
  store i64 %15, i64* %tmp, align 8, !dbg !19882
  %16 = load i64, i64* %tmp, align 8, !dbg !19882
  %tobool = icmp ne i64 %16, 0, !dbg !19891
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !19892

if.then5:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !19893
  br label %return, !dbg !19893

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19894
  br label %return, !dbg !19894

return:                                           ; preds = %if.end6, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !19895
  ret i32 %17, !dbg !19895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_xsync(%struct.slgt_info* %info, i32 %xsync) #1 !dbg !19896 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !10114, metadata !DIExpression()), !dbg !19897
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !19899
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !19900
  %info.addr = alloca %struct.slgt_info*, align 8
  %xsync.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19907, metadata !DIExpression()), !dbg !19908
  store i32 %xsync, i32* %xsync.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xsync.addr, metadata !19909, metadata !DIExpression()), !dbg !19910
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19911, metadata !DIExpression()), !dbg !19912
  %0 = load i32, i32* @debug_level, align 4, !dbg !19913
  %cmp = icmp sge i32 %0, 3, !dbg !19913
  br i1 %cmp, label %if.then, label %if.end, !dbg !19915

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19913
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !19913
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19913
  %2 = load i32, i32* %xsync.addr, align 4, !dbg !19913
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !19913
  br label %if.end, !dbg !19913

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !19916

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !19917

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19918, metadata !DIExpression()), !dbg !19920
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19921, metadata !DIExpression()), !dbg !19920
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !19920
  %conv = zext i1 %cmp2 to i32, !dbg !19920
  store i32 1, i32* %tmp, align 4, !dbg !19920
  %3 = load i32, i32* %tmp, align 4, !dbg !19920
  br label %do.body3, !dbg !19922

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !19923

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !19924

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !19926, metadata !DIExpression()), !dbg !19929
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !19930, metadata !DIExpression()), !dbg !19929
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !19929
  %conv9 = zext i1 %cmp8 to i32, !dbg !19929
  store i32 1, i32* %tmp10, align 4, !dbg !19929
  %4 = load i32, i32* %tmp10, align 4, !dbg !19929
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !19931
  store i64 %call11, i64* %flags, align 8, !dbg !19931
  br label %do.end, !dbg !19931

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !19924

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !19923

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19932, !srcloc !19933
  br label %do.body14, !dbg !19932

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19934
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !19934
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19935
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !19936
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !19936
  br label %do.end16, !dbg !19934

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !19932

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !19923

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !19922

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !19917

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %xsync.addr, align 4, !dbg !19937
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19938
  %xsync21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 43, !dbg !19939
  store i32 %8, i32* %xsync21, align 8, !dbg !19940
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19941
  %11 = load i32, i32* %xsync.addr, align 4, !dbg !19942
  call void @wr_reg32(%struct.slgt_info* %10, i32 64, i32 %11) #11, !dbg !19943
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19944
  %lock22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 22, !dbg !19945
  %13 = load i64, i64* %flags, align 8, !dbg !19946
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !19947
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !19947
  store i32 1, i32* %tmp.i, align 4, !dbg !19947
  %14 = load i32, i32* %tmp.i, align 4, !dbg !19947
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !19948
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !19948
  store i32 1, i32* %tmp8.i, align 4, !dbg !19948
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !19948
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !19949
  call void @arch_local_irq_restore(i64 %16) #14, !dbg !19949
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !19950, !srcloc !10199
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !19951
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !19951
  %rlock.i24 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !19951
  ret i32 0, !dbg !19952
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_xctrl(%struct.slgt_info* %info, i32* %xctrl) #1 !dbg !19953 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %xctrl.addr = alloca i32*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19954, metadata !DIExpression()), !dbg !19955
  store i32* %xctrl, i32** %xctrl.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xctrl.addr, metadata !19956, metadata !DIExpression()), !dbg !19957
  %0 = load i32, i32* @debug_level, align 4, !dbg !19958
  %cmp = icmp sge i32 %0, 3, !dbg !19958
  br i1 %cmp, label %if.then, label %if.end, !dbg !19960

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19958
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !19958
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19958
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19958
  %xctrl1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 44, !dbg !19958
  %3 = load i32, i32* %xctrl1, align 4, !dbg !19958
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.116, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !19958
  br label %if.end, !dbg !19958

if.end:                                           ; preds = %if.then, %entry
  call void @might_fault() #11, !dbg !19961
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !19964, metadata !DIExpression()), !dbg !19966
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !19967, metadata !DIExpression()), !dbg !19966
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !19968, metadata !DIExpression()), !dbg !19966
  %4 = load i32*, i32** %xctrl.addr, align 8, !dbg !19966
  %5 = bitcast i32* %4 to i8*, !dbg !19966
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !19966
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19966
  %xctrl2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 44, !dbg !19966
  %7 = load i32, i32* %xctrl2, align 4, !dbg !19966
  store i32 %7, i32* %__val_pu, align 4, !dbg !19966
  %8 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !19966
  %9 = load i8*, i8** %__ptr_pu, align 8, !dbg !19966
  %10 = load i32, i32* %__val_pu, align 4, !dbg !19966
  %11 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %9, i32 %10, i64 4, i64 %8) #10, !dbg !19966, !srcloc !19969
  %asmresult = extractvalue { i8*, i64 } %11, 0, !dbg !19966
  %asmresult3 = extractvalue { i8*, i64 } %11, 1, !dbg !19966
  %12 = ptrtoint i8* %asmresult to i64, !dbg !19966
  %13 = trunc i64 %12 to i32, !dbg !19966
  store i32 %13, i32* %__ret_pu, align 4, !dbg !19966
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult3), !dbg !19966
  %14 = load i32, i32* %__ret_pu, align 4, !dbg !19966
  %conv = sext i32 %14 to i64, !dbg !19966
  store i64 %conv, i64* %tmp4, align 8, !dbg !19966
  %15 = load i64, i64* %tmp4, align 8, !dbg !19966
  store i64 %15, i64* %tmp, align 8, !dbg !19961
  %16 = load i64, i64* %tmp, align 8, !dbg !19961
  %tobool = icmp ne i64 %16, 0, !dbg !19970
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !19971

if.then5:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !19972
  br label %return, !dbg !19972

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19973
  br label %return, !dbg !19973

return:                                           ; preds = %if.end6, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !19974
  ret i32 %17, !dbg !19974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_xctrl(%struct.slgt_info* %info, i32 %xctrl) #1 !dbg !19975 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !10114, metadata !DIExpression()), !dbg !19976
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !19978
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !19979
  %info.addr = alloca %struct.slgt_info*, align 8
  %xctrl.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !19986, metadata !DIExpression()), !dbg !19987
  store i32 %xctrl, i32* %xctrl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xctrl.addr, metadata !19988, metadata !DIExpression()), !dbg !19989
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19990, metadata !DIExpression()), !dbg !19991
  %0 = load i32, i32* @debug_level, align 4, !dbg !19992
  %cmp = icmp sge i32 %0, 3, !dbg !19992
  br i1 %cmp, label %if.then, label %if.end, !dbg !19994

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !19992
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !19992
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !19992
  %2 = load i32, i32* %xctrl.addr, align 4, !dbg !19992
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.117, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !19992
  br label %if.end, !dbg !19992

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !19995

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !19996

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19997, metadata !DIExpression()), !dbg !19999
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20000, metadata !DIExpression()), !dbg !19999
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !19999
  %conv = zext i1 %cmp2 to i32, !dbg !19999
  store i32 1, i32* %tmp, align 4, !dbg !19999
  %3 = load i32, i32* %tmp, align 4, !dbg !19999
  br label %do.body3, !dbg !20001

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20002

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20003

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20005, metadata !DIExpression()), !dbg !20008
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20009, metadata !DIExpression()), !dbg !20008
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20008
  %conv9 = zext i1 %cmp8 to i32, !dbg !20008
  store i32 1, i32* %tmp10, align 4, !dbg !20008
  %4 = load i32, i32* %tmp10, align 4, !dbg !20008
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20010
  store i64 %call11, i64* %flags, align 8, !dbg !20010
  br label %do.end, !dbg !20010

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20003

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20002

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20011, !srcloc !20012
  br label %do.body14, !dbg !20011

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20013
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !20013
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20014
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20015
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20015
  br label %do.end16, !dbg !20013

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20011

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20002

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20001

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !19996

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %xctrl.addr, align 4, !dbg !20016
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20017
  %xctrl21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 44, !dbg !20018
  store i32 %8, i32* %xctrl21, align 4, !dbg !20019
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20020
  %11 = load i32, i32* %xctrl.addr, align 4, !dbg !20021
  call void @wr_reg32(%struct.slgt_info* %10, i32 68, i32 %11) #11, !dbg !20022
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20023
  %lock22 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 22, !dbg !20024
  %13 = load i64, i64* %flags, align 8, !dbg !20025
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20026
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20026
  store i32 1, i32* %tmp.i, align 4, !dbg !20026
  %14 = load i32, i32* %tmp.i, align 4, !dbg !20026
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20027
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20027
  store i32 1, i32* %tmp8.i, align 4, !dbg !20027
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !20027
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !20028
  call void @arch_local_irq_restore(i64 %16) #14, !dbg !20028
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20029, !srcloc !10199
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !20030
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !20030
  %rlock.i24 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !20030
  ret i32 0, !dbg !20031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_params(%struct.slgt_info* %info, %struct._MGSL_PARAMS* %user_params) #1 !dbg !20032 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !20036
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !20040
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !20041
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !20042
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !20043
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12443, metadata !DIExpression()), !dbg !20044
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12445, metadata !DIExpression()), !dbg !20045
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12447, metadata !DIExpression()), !dbg !20046
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %user_params.addr = alloca %struct._MGSL_PARAMS*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20047, metadata !DIExpression()), !dbg !20048
  store %struct._MGSL_PARAMS* %user_params, %struct._MGSL_PARAMS** %user_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS** %user_params.addr, metadata !20049, metadata !DIExpression()), !dbg !20050
  %0 = load i32, i32* @debug_level, align 4, !dbg !20051
  %cmp = icmp sge i32 %0, 3, !dbg !20051
  br i1 %cmp, label %if.then, label %if.end, !dbg !20053

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20051
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20051
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20051
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i64 0, i64 0), i8* %arraydecay) #12, !dbg !20051
  br label %if.end, !dbg !20051

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._MGSL_PARAMS*, %struct._MGSL_PARAMS** %user_params.addr, align 8, !dbg !20054
  %3 = bitcast %struct._MGSL_PARAMS* %2 to i8*, !dbg !20054
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20055
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 36, !dbg !20056
  %5 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !20057
  store i8* %3, i8** %to.addr.i, align 8
  store i8* %5, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %6 = load i8*, i8** %from.addr.i, align 8, !dbg !20058
  %7 = load i64, i64* %n.addr.i, align 8, !dbg !20058
  store i8* %6, i8** %addr.addr.i.i, align 8
  store i64 %7, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !20042
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !20059
  %cmp.i.i = icmp sge i32 %8, 0, !dbg !20059
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !20059

land.rhs.i.i:                                     ; preds = %if.end
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !20059
  %conv.i.i = sext i32 %9 to i64, !dbg !20059
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20059
  %cmp1.i.i = icmp ult i64 %conv.i.i, %10, !dbg !20059
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %11 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !20060
  %lnot.i.i = xor i1 %11, true, !dbg !20059
  %lnot.ext.i.i = zext i1 %11 to i32, !dbg !20059
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20059
  br i1 %11, label %if.then.i.i, label %if.end10.i.i, !dbg !20061

if.then.i.i:                                      ; preds = %land.end.i.i
  %12 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20062
  %13 = call i1 @llvm.is.constant.i64(i64 %12) #10, !dbg !20063
  br i1 %13, label %if.else.i.i, label %if.then5.i.i, !dbg !20064

if.then5.i.i:                                     ; preds = %if.then.i.i
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !20065
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20066
  call void @copy_overflow(i32 %14, i64 %15) #14, !dbg !20067
  br label %if.end9.i.i, !dbg !20067

if.else.i.i:                                      ; preds = %if.then.i.i
  %16 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20068
  %tobool6.i.i = trunc i8 %16 to i1, !dbg !20068
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !20069

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !20070
  br label %if.end.i.i, !dbg !20070

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !20071
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20072
  br label %check_copy_size.exit.i, !dbg !20072

if.end10.i.i:                                     ; preds = %land.end.i.i
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20043
  %cmp11.i.i = icmp ugt i64 %17, 2147483647, !dbg !20043
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !20043
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !20043
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !20043
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20073
  %tobool17.i.i = icmp ne i32 %18, 0, !dbg !20073
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !20073
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !20073
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !20073
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !20043

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !20074, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !20075, !srcloc !12572
  br label %if.end31.i.i, !dbg !20076

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20043
  %tobool32.i.i = icmp ne i32 %19, 0, !dbg !20043
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !20043
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !20043
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !20043
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !20073
  %20 = load i64, i64* %tmp.i.i, align 8, !dbg !20043
  %tobool38.i.i = icmp ne i64 %20, 0, !dbg !20077
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !20078

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20079
  br label %check_copy_size.exit.i, !dbg !20079

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %21 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !20080
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20081
  %23 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20082
  %tobool41.i.i = trunc i8 %23 to i1, !dbg !20082
  call void @check_object_size(i8* %21, i64 %22, i1 zeroext %tobool41.i.i) #14, !dbg !20083
  store i1 true, i1* %retval.i.i, align 1, !dbg !20084
  br label %check_copy_size.exit.i, !dbg !20084

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %24 = load i1, i1* %retval.i.i, align 1, !dbg !20085
  %lnot.i = xor i1 %24, true, !dbg !20058
  %lnot.ext.i = zext i1 %24 to i32, !dbg !20058
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !20058
  br i1 %24, label %if.then.i, label %copy_to_user.exit, !dbg !20086

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %25 = load i8*, i8** %to.addr.i, align 8, !dbg !20087
  %26 = load i8*, i8** %from.addr.i, align 8, !dbg !20088
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !20089
  %call2.i = call i64 @_copy_to_user(i8* %25, i8* %26, i64 %27) #14, !dbg !20090
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !20091
  br label %copy_to_user.exit, !dbg !20092

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !20093
  %tobool = icmp ne i64 %28, 0, !dbg !20094
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !20095

if.then2:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !20096
  br label %return, !dbg !20096

if.end3:                                          ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !20097
  br label %return, !dbg !20097

return:                                           ; preds = %if.end3, %if.then2
  %29 = load i32, i32* %retval, align 4, !dbg !20098
  ret i32 %29, !dbg !20098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_params(%struct.slgt_info* %info, %struct._MGSL_PARAMS* %new_params) #1 !dbg !20099 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !10114, metadata !DIExpression()), !dbg !20100
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20102
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20103
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !20110
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !20114
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !20115
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !20116
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !20117
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12427, metadata !DIExpression()), !dbg !20118
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12429, metadata !DIExpression()), !dbg !20119
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12431, metadata !DIExpression()), !dbg !20120
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %new_params.addr = alloca %struct._MGSL_PARAMS*, align 8
  %flags = alloca i64, align 8
  %tmp_params = alloca %struct._MGSL_PARAMS, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20121, metadata !DIExpression()), !dbg !20122
  store %struct._MGSL_PARAMS* %new_params, %struct._MGSL_PARAMS** %new_params.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS** %new_params.addr, metadata !20123, metadata !DIExpression()), !dbg !20124
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20125, metadata !DIExpression()), !dbg !20126
  call void @llvm.dbg.declare(metadata %struct._MGSL_PARAMS* %tmp_params, metadata !20127, metadata !DIExpression()), !dbg !20128
  %0 = load i32, i32* @debug_level, align 4, !dbg !20129
  %cmp = icmp sge i32 %0, 3, !dbg !20129
  br i1 %cmp, label %if.then, label %if.end, !dbg !20131

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20129
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20129
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20129
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.119, i64 0, i64 0), i8* %arraydecay) #12, !dbg !20129
  br label %if.end, !dbg !20129

if.end:                                           ; preds = %if.then, %entry
  %2 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !20132
  %3 = load %struct._MGSL_PARAMS*, %struct._MGSL_PARAMS** %new_params.addr, align 8, !dbg !20133
  %4 = bitcast %struct._MGSL_PARAMS* %3 to i8*, !dbg !20133
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !20134
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !20134
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !20116
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !20135
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !20135
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !20135

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !20135
  %conv.i.i = sext i32 %8 to i64, !dbg !20135
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20135
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !20135
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !20136
  %lnot.i.i = xor i1 %10, true, !dbg !20135
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !20135
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20135
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !20137

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20138
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #10, !dbg !20139
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !20140

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !20141
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20142
  call void @copy_overflow(i32 %13, i64 %14) #14, !dbg !20143
  br label %if.end9.i.i, !dbg !20143

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20144
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !20144
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !20145

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !20146
  br label %if.end.i.i, !dbg !20146

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !20147
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20148
  br label %check_copy_size.exit.i, !dbg !20148

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20117
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !20117
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !20117
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !20117
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !20117
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20149
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !20149
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !20149
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !20149
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !20149
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !20117

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !20150, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !20151, !srcloc !12572
  br label %if.end31.i.i, !dbg !20152

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20117
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !20117
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !20117
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !20117
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !20117
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !20149
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !20117
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !20153
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !20154

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20155
  br label %check_copy_size.exit.i, !dbg !20155

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !20156
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20157
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20158
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !20158
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #14, !dbg !20159
  store i1 true, i1* %retval.i.i, align 1, !dbg !20160
  br label %check_copy_size.exit.i, !dbg !20160

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !20161
  %lnot.i = xor i1 %23, true, !dbg !20134
  %lnot.ext.i = zext i1 %23 to i32, !dbg !20134
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !20134
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !20162

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !20163
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !20164
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !20165
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #14, !dbg !20166
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !20167
  br label %copy_from_user.exit, !dbg !20168

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !20169
  %tobool = icmp ne i64 %27, 0, !dbg !20170
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !20171

if.then2:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !20172
  br label %return, !dbg !20172

if.end3:                                          ; preds = %copy_from_user.exit
  br label %do.body, !dbg !20173

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !20174

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20175, metadata !DIExpression()), !dbg !20177
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20178, metadata !DIExpression()), !dbg !20177
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !20177
  %conv = zext i1 %cmp5 to i32, !dbg !20177
  store i32 1, i32* %tmp, align 4, !dbg !20177
  %28 = load i32, i32* %tmp, align 4, !dbg !20177
  br label %do.body6, !dbg !20179

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !20180

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !20181

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !20183, metadata !DIExpression()), !dbg !20186
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !20187, metadata !DIExpression()), !dbg !20186
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !20186
  %conv12 = zext i1 %cmp11 to i32, !dbg !20186
  store i32 1, i32* %tmp13, align 4, !dbg !20186
  %29 = load i32, i32* %tmp13, align 4, !dbg !20186
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !20188
  store i64 %call14, i64* %flags, align 8, !dbg !20188
  br label %do.end, !dbg !20188

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !20181

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !20180

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20189, !srcloc !20190
  br label %do.body17, !dbg !20189

do.body17:                                        ; preds = %do.body16
  %30 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20191
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %30, i32 0, i32 22, !dbg !20191
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20192
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !20193
  %rlock.i = bitcast %union.anon.1* %32 to %struct.raw_spinlock*, !dbg !20193
  br label %do.end19, !dbg !20191

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !20189

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !20180

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !20179

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !20174

do.end23:                                         ; preds = %do.end22
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %tmp_params, i32 0, i32 0, !dbg !20194
  %33 = load i64, i64* %mode, align 8, !dbg !20194
  %cmp24 = icmp eq i64 %33, 7, !dbg !20196
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !20197

if.then26:                                        ; preds = %do.end23
  %clock_speed = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %tmp_params, i32 0, i32 4, !dbg !20198
  %34 = load i64, i64* %clock_speed, align 8, !dbg !20198
  %conv27 = trunc i64 %34 to i32, !dbg !20199
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20200
  %base_clock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %35, i32 0, i32 42, !dbg !20201
  store i32 %conv27, i32* %base_clock, align 4, !dbg !20202
  br label %if.end28, !dbg !20200

if.else:                                          ; preds = %do.end23
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20203
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 36, !dbg !20204
  %37 = bitcast %struct._MGSL_PARAMS* %params to i8*, !dbg !20205
  %38 = bitcast %struct._MGSL_PARAMS* %tmp_params to i8*, !dbg !20205
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 48, i1 false), !dbg !20205
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then26
  %39 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20206
  %lock29 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %39, i32 0, i32 22, !dbg !20207
  %40 = load i64, i64* %flags, align 8, !dbg !20208
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %40, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20209
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20209
  store i32 1, i32* %tmp.i, align 4, !dbg !20209
  %41 = load i32, i32* %tmp.i, align 4, !dbg !20209
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20210
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20210
  store i32 1, i32* %tmp8.i, align 4, !dbg !20210
  %42 = load i32, i32* %tmp8.i, align 4, !dbg !20210
  %43 = load i64, i64* %flags.addr.i, align 8, !dbg !20211
  call void @arch_local_irq_restore(i64 %43) #14, !dbg !20211
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20212, !srcloc !10199
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !20213
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !20213
  %rlock.i31 = bitcast %union.anon.1* %45 to %struct.raw_spinlock*, !dbg !20213
  %46 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20214
  call void @program_hw(%struct.slgt_info* %46) #11, !dbg !20215
  store i32 0, i32* %retval, align 4, !dbg !20216
  br label %return, !dbg !20216

return:                                           ; preds = %if.end28, %if.then2
  %47 = load i32, i32* %retval, align 4, !dbg !20217
  ret i32 %47, !dbg !20217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_txidle(%struct.slgt_info* %info, i32* %idle_mode) #1 !dbg !20218 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %idle_mode.addr = alloca i32*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20219, metadata !DIExpression()), !dbg !20220
  store i32* %idle_mode, i32** %idle_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %idle_mode.addr, metadata !20221, metadata !DIExpression()), !dbg !20222
  %0 = load i32, i32* @debug_level, align 4, !dbg !20223
  %cmp = icmp sge i32 %0, 3, !dbg !20223
  br i1 %cmp, label %if.then, label %if.end, !dbg !20225

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20223
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20223
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20223
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20223
  %idle_mode1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 37, !dbg !20223
  %3 = load i32, i32* %idle_mode1, align 8, !dbg !20223
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.120, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !20223
  br label %if.end, !dbg !20223

if.end:                                           ; preds = %if.then, %entry
  call void @might_fault() #11, !dbg !20226
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !20229, metadata !DIExpression()), !dbg !20231
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !20232, metadata !DIExpression()), !dbg !20231
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !20233, metadata !DIExpression()), !dbg !20231
  %4 = load i32*, i32** %idle_mode.addr, align 8, !dbg !20231
  %5 = bitcast i32* %4 to i8*, !dbg !20231
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !20231
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20231
  %idle_mode2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 37, !dbg !20231
  %7 = load i32, i32* %idle_mode2, align 8, !dbg !20231
  store i32 %7, i32* %__val_pu, align 4, !dbg !20231
  %8 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !20231
  %9 = load i8*, i8** %__ptr_pu, align 8, !dbg !20231
  %10 = load i32, i32* %__val_pu, align 4, !dbg !20231
  %11 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %9, i32 %10, i64 4, i64 %8) #10, !dbg !20231, !srcloc !20234
  %asmresult = extractvalue { i8*, i64 } %11, 0, !dbg !20231
  %asmresult3 = extractvalue { i8*, i64 } %11, 1, !dbg !20231
  %12 = ptrtoint i8* %asmresult to i64, !dbg !20231
  %13 = trunc i64 %12 to i32, !dbg !20231
  store i32 %13, i32* %__ret_pu, align 4, !dbg !20231
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult3), !dbg !20231
  %14 = load i32, i32* %__ret_pu, align 4, !dbg !20231
  %conv = sext i32 %14 to i64, !dbg !20231
  store i64 %conv, i64* %tmp4, align 8, !dbg !20231
  %15 = load i64, i64* %tmp4, align 8, !dbg !20231
  store i64 %15, i64* %tmp, align 8, !dbg !20226
  %16 = load i64, i64* %tmp, align 8, !dbg !20226
  %tobool = icmp ne i64 %16, 0, !dbg !20235
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !20236

if.then5:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !20237
  br label %return, !dbg !20237

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20238
  br label %return, !dbg !20238

return:                                           ; preds = %if.end6, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !20239
  ret i32 %17, !dbg !20239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_txidle(%struct.slgt_info* %info, i32 %idle_mode) #1 !dbg !20240 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !10114, metadata !DIExpression()), !dbg !20241
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20243
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20244
  %info.addr = alloca %struct.slgt_info*, align 8
  %idle_mode.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20251, metadata !DIExpression()), !dbg !20252
  store i32 %idle_mode, i32* %idle_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idle_mode.addr, metadata !20253, metadata !DIExpression()), !dbg !20254
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20255, metadata !DIExpression()), !dbg !20256
  %0 = load i32, i32* @debug_level, align 4, !dbg !20257
  %cmp = icmp sge i32 %0, 3, !dbg !20257
  br i1 %cmp, label %if.then, label %if.end, !dbg !20259

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20257
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20257
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20257
  %2 = load i32, i32* %idle_mode.addr, align 4, !dbg !20257
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.121, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !20257
  br label %if.end, !dbg !20257

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !20260

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20261

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20262, metadata !DIExpression()), !dbg !20264
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20265, metadata !DIExpression()), !dbg !20264
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20264
  %conv = zext i1 %cmp2 to i32, !dbg !20264
  store i32 1, i32* %tmp, align 4, !dbg !20264
  %3 = load i32, i32* %tmp, align 4, !dbg !20264
  br label %do.body3, !dbg !20266

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20267

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20268

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20270, metadata !DIExpression()), !dbg !20273
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20274, metadata !DIExpression()), !dbg !20273
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20273
  %conv9 = zext i1 %cmp8 to i32, !dbg !20273
  store i32 1, i32* %tmp10, align 4, !dbg !20273
  %4 = load i32, i32* %tmp10, align 4, !dbg !20273
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20275
  store i64 %call11, i64* %flags, align 8, !dbg !20275
  br label %do.end, !dbg !20275

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20268

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20267

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20276, !srcloc !20277
  br label %do.body14, !dbg !20276

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20278
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !20278
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20279
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20280
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20280
  br label %do.end16, !dbg !20278

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20276

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20267

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20266

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20261

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %idle_mode.addr, align 4, !dbg !20281
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20282
  %idle_mode21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 37, !dbg !20283
  store i32 %8, i32* %idle_mode21, align 8, !dbg !20284
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20285
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 36, !dbg !20287
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !20288
  %11 = load i64, i64* %mode, align 8, !dbg !20288
  %cmp22 = icmp ne i64 %11, 1, !dbg !20289
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !20290

if.then24:                                        ; preds = %do.end20
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20291
  call void @tx_set_idle(%struct.slgt_info* %12) #11, !dbg !20292
  br label %if.end25, !dbg !20292

if.end25:                                         ; preds = %if.then24, %do.end20
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20293
  %lock26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %13, i32 0, i32 22, !dbg !20294
  %14 = load i64, i64* %flags, align 8, !dbg !20295
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20296
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20296
  store i32 1, i32* %tmp.i, align 4, !dbg !20296
  %15 = load i32, i32* %tmp.i, align 4, !dbg !20296
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20297
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20297
  store i32 1, i32* %tmp8.i, align 4, !dbg !20297
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !20297
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !20298
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !20298
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20299, !srcloc !10199
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !20300
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !20300
  %rlock.i28 = bitcast %union.anon.1* %19 to %struct.raw_spinlock*, !dbg !20300
  ret i32 0, !dbg !20301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tx_enable(%struct.slgt_info* %info, i32 %enable) #1 !dbg !20302 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !10114, metadata !DIExpression()), !dbg !20303
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20305
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20306
  %info.addr = alloca %struct.slgt_info*, align 8
  %enable.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20313, metadata !DIExpression()), !dbg !20314
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !20315, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20317, metadata !DIExpression()), !dbg !20318
  %0 = load i32, i32* @debug_level, align 4, !dbg !20319
  %cmp = icmp sge i32 %0, 3, !dbg !20319
  br i1 %cmp, label %if.then, label %if.end, !dbg !20321

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20319
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20319
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20319
  %2 = load i32, i32* %enable.addr, align 4, !dbg !20319
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.122, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !20319
  br label %if.end, !dbg !20319

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !20322

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20323

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20324, metadata !DIExpression()), !dbg !20326
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20327, metadata !DIExpression()), !dbg !20326
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20326
  %conv = zext i1 %cmp2 to i32, !dbg !20326
  store i32 1, i32* %tmp, align 4, !dbg !20326
  %3 = load i32, i32* %tmp, align 4, !dbg !20326
  br label %do.body3, !dbg !20328

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20329

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20330

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20332, metadata !DIExpression()), !dbg !20335
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20336, metadata !DIExpression()), !dbg !20335
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20335
  %conv9 = zext i1 %cmp8 to i32, !dbg !20335
  store i32 1, i32* %tmp10, align 4, !dbg !20335
  %4 = load i32, i32* %tmp10, align 4, !dbg !20335
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20337
  store i64 %call11, i64* %flags, align 8, !dbg !20337
  br label %do.end, !dbg !20337

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20330

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20329

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20338, !srcloc !20339
  br label %do.body14, !dbg !20338

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20340
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !20340
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20341
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20342
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20342
  br label %do.end16, !dbg !20340

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20338

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20329

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20328

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20323

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %enable.addr, align 4, !dbg !20343
  %tobool = icmp ne i32 %8, 0, !dbg !20343
  br i1 %tobool, label %if.then21, label %if.else, !dbg !20345

if.then21:                                        ; preds = %do.end20
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20346
  %tx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 47, !dbg !20349
  %10 = load i8, i8* %tx_enabled, align 2, !dbg !20349
  %tobool22 = trunc i8 %10 to i1, !dbg !20349
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !20350

if.then23:                                        ; preds = %if.then21
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20351
  call void @tx_start(%struct.slgt_info* %11) #11, !dbg !20352
  br label %if.end24, !dbg !20352

if.end24:                                         ; preds = %if.then23, %if.then21
  br label %if.end29, !dbg !20353

if.else:                                          ; preds = %do.end20
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20354
  %tx_enabled25 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 47, !dbg !20357
  %13 = load i8, i8* %tx_enabled25, align 2, !dbg !20357
  %tobool26 = trunc i8 %13 to i1, !dbg !20357
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !20358

if.then27:                                        ; preds = %if.else
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20359
  call void @tx_stop(%struct.slgt_info* %14) #11, !dbg !20360
  br label %if.end28, !dbg !20360

if.end28:                                         ; preds = %if.then27, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end24
  %15 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20361
  %lock30 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %15, i32 0, i32 22, !dbg !20362
  %16 = load i64, i64* %flags, align 8, !dbg !20363
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20364
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20364
  store i32 1, i32* %tmp.i, align 4, !dbg !20364
  %17 = load i32, i32* %tmp.i, align 4, !dbg !20364
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20365
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20365
  store i32 1, i32* %tmp8.i, align 4, !dbg !20365
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !20365
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !20366
  call void @arch_local_irq_restore(i64 %19) #14, !dbg !20366
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20367, !srcloc !10199
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !20368
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !20368
  %rlock.i32 = bitcast %union.anon.1* %21 to %struct.raw_spinlock*, !dbg !20368
  ret i32 0, !dbg !20369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rx_enable(%struct.slgt_info* %info, i32 %enable) #1 !dbg !20370 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !10114, metadata !DIExpression()), !dbg !20371
  %flags.addr.i58 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i58, metadata !10120, metadata !DIExpression()), !dbg !20377
  %tmp.i59 = alloca i32, align 4
  %tmp8.i60 = alloca i32, align 4
  %lock.addr.i55 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i55, metadata !10114, metadata !DIExpression()), !dbg !20378
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20380
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20381
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %enable.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %rbuf_fill_level = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20388, metadata !DIExpression()), !dbg !20389
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !20390, metadata !DIExpression()), !dbg !20391
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20392, metadata !DIExpression()), !dbg !20393
  call void @llvm.dbg.declare(metadata i32* %rbuf_fill_level, metadata !20394, metadata !DIExpression()), !dbg !20395
  %0 = load i32, i32* @debug_level, align 4, !dbg !20396
  %cmp = icmp sge i32 %0, 3, !dbg !20396
  br i1 %cmp, label %if.then, label %if.end, !dbg !20398

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20396
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20396
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20396
  %2 = load i32, i32* %enable.addr, align 4, !dbg !20396
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.123, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !20396
  br label %if.end, !dbg !20396

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !20399

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20400

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20401, metadata !DIExpression()), !dbg !20403
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20404, metadata !DIExpression()), !dbg !20403
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20403
  %conv = zext i1 %cmp2 to i32, !dbg !20403
  store i32 1, i32* %tmp, align 4, !dbg !20403
  %3 = load i32, i32* %tmp, align 4, !dbg !20403
  br label %do.body3, !dbg !20405

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20406

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20407

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20409, metadata !DIExpression()), !dbg !20412
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20413, metadata !DIExpression()), !dbg !20412
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20412
  %conv9 = zext i1 %cmp8 to i32, !dbg !20412
  store i32 1, i32* %tmp10, align 4, !dbg !20412
  %4 = load i32, i32* %tmp10, align 4, !dbg !20412
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20414
  store i64 %call11, i64* %flags, align 8, !dbg !20414
  br label %do.end, !dbg !20414

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20407

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20406

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20415, !srcloc !20416
  br label %do.body14, !dbg !20415

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20417
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !20417
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20418
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20419
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20419
  br label %do.end16, !dbg !20417

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20415

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20406

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20405

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20400

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %enable.addr, align 4, !dbg !20420
  %shr = lshr i32 %8, 16, !dbg !20421
  store i32 %shr, i32* %rbuf_fill_level, align 4, !dbg !20422
  %9 = load i32, i32* %rbuf_fill_level, align 4, !dbg !20423
  %tobool = icmp ne i32 %9, 0, !dbg !20423
  br i1 %tobool, label %if.then21, label %if.end34, !dbg !20424

if.then21:                                        ; preds = %do.end20
  %10 = load i32, i32* %rbuf_fill_level, align 4, !dbg !20425
  %cmp22 = icmp ugt i32 %10, 256, !dbg !20426
  br i1 %cmp22, label %if.then25, label %lor.lhs.false, !dbg !20427

lor.lhs.false:                                    ; preds = %if.then21
  %11 = load i32, i32* %rbuf_fill_level, align 4, !dbg !20428
  %rem = urem i32 %11, 4, !dbg !20429
  %tobool24 = icmp ne i32 %rem, 0, !dbg !20429
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !20430

if.then25:                                        ; preds = %lor.lhs.false, %if.then21
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20431
  %lock26 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 22, !dbg !20432
  %13 = load i64, i64* %flags, align 8, !dbg !20433
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %13, i64* %flags.addr.i58, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20434
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20434
  store i32 1, i32* %tmp.i59, align 4, !dbg !20434
  %14 = load i32, i32* %tmp.i59, align 4, !dbg !20434
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20435
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20435
  store i32 1, i32* %tmp8.i60, align 4, !dbg !20435
  %15 = load i32, i32* %tmp8.i60, align 4, !dbg !20435
  %16 = load i64, i64* %flags.addr.i58, align 8, !dbg !20436
  call void @arch_local_irq_restore(i64 %16) #14, !dbg !20436
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20437, !srcloc !10199
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !20438
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !20438
  %rlock.i61 = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !20438
  store i32 -22, i32* %retval, align 4, !dbg !20439
  br label %return, !dbg !20439

if.end27:                                         ; preds = %lor.lhs.false
  %19 = load i32, i32* %rbuf_fill_level, align 4, !dbg !20440
  %20 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20441
  %rbuf_fill_level28 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %20, i32 0, i32 39, !dbg !20442
  store i32 %19, i32* %rbuf_fill_level28, align 8, !dbg !20443
  %21 = load i32, i32* %rbuf_fill_level, align 4, !dbg !20444
  %cmp29 = icmp ult i32 %21, 128, !dbg !20446
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !20447

if.then31:                                        ; preds = %if.end27
  %22 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20448
  %rx_pio = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %22, i32 0, i32 40, !dbg !20449
  store i32 1, i32* %rx_pio, align 4, !dbg !20450
  br label %if.end33, !dbg !20448

if.else:                                          ; preds = %if.end27
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20451
  %rx_pio32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 40, !dbg !20452
  store i32 0, i32* %rx_pio32, align 4, !dbg !20453
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  %24 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20454
  call void @rx_stop(%struct.slgt_info* %24) #11, !dbg !20455
  br label %if.end34, !dbg !20456

if.end34:                                         ; preds = %if.end33, %do.end20
  %25 = load i32, i32* %enable.addr, align 4, !dbg !20457
  %and = and i32 %25, 3, !dbg !20457
  store i32 %and, i32* %enable.addr, align 4, !dbg !20457
  %26 = load i32, i32* %enable.addr, align 4, !dbg !20458
  %tobool35 = icmp ne i32 %26, 0, !dbg !20458
  br i1 %tobool35, label %if.then36, label %if.else48, !dbg !20460

if.then36:                                        ; preds = %if.end34
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20461
  %rx_enabled = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 45, !dbg !20464
  %28 = load i8, i8* %rx_enabled, align 8, !dbg !20464
  %tobool37 = trunc i8 %28 to i1, !dbg !20464
  br i1 %tobool37, label %if.else39, label %if.then38, !dbg !20465

if.then38:                                        ; preds = %if.then36
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20466
  call void @rx_start(%struct.slgt_info* %29) #11, !dbg !20467
  br label %if.end47, !dbg !20467

if.else39:                                        ; preds = %if.then36
  %30 = load i32, i32* %enable.addr, align 4, !dbg !20468
  %cmp40 = icmp eq i32 %30, 2, !dbg !20470
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !20471

if.then42:                                        ; preds = %if.else39
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20472
  %32 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20474
  %call43 = call zeroext i16 @rd_reg16(%struct.slgt_info* %32, i32 134) #11, !dbg !20475
  %conv44 = zext i16 %call43 to i32, !dbg !20475
  %or = or i32 %conv44, 8, !dbg !20476
  %conv45 = trunc i32 %or to i16, !dbg !20475
  call void @wr_reg16(%struct.slgt_info* %31, i32 134, i16 zeroext %conv45) #11, !dbg !20477
  br label %if.end46, !dbg !20478

if.end46:                                         ; preds = %if.then42, %if.else39
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then38
  br label %if.end53, !dbg !20479

if.else48:                                        ; preds = %if.end34
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20480
  %rx_enabled49 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 45, !dbg !20483
  %34 = load i8, i8* %rx_enabled49, align 8, !dbg !20483
  %tobool50 = trunc i8 %34 to i1, !dbg !20483
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !20484

if.then51:                                        ; preds = %if.else48
  %35 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20485
  call void @rx_stop(%struct.slgt_info* %35) #11, !dbg !20486
  br label %if.end52, !dbg !20486

if.end52:                                         ; preds = %if.then51, %if.else48
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end47
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20487
  %lock54 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 22, !dbg !20488
  %37 = load i64, i64* %flags, align 8, !dbg !20489
  store %struct.spinlock* %lock54, %struct.spinlock** %lock.addr.i55, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20490
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20490
  store i32 1, i32* %tmp.i, align 4, !dbg !20490
  %38 = load i32, i32* %tmp.i, align 4, !dbg !20490
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20491
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20491
  store i32 1, i32* %tmp8.i, align 4, !dbg !20491
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !20491
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !20492
  call void @arch_local_irq_restore(i64 %40) #14, !dbg !20492
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20493, !srcloc !10199
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i55, align 8, !dbg !20494
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !20494
  %rlock.i56 = bitcast %union.anon.1* %42 to %struct.raw_spinlock*, !dbg !20494
  store i32 0, i32* %retval, align 4, !dbg !20495
  br label %return, !dbg !20495

return:                                           ; preds = %if.end53, %if.then25
  %43 = load i32, i32* %retval, align 4, !dbg !20496
  ret i32 %43, !dbg !20496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tx_abort(%struct.slgt_info* %info) #1 !dbg !20497 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !10114, metadata !DIExpression()), !dbg !20498
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20500
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20501
  %info.addr = alloca %struct.slgt_info*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20508, metadata !DIExpression()), !dbg !20509
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20510, metadata !DIExpression()), !dbg !20511
  %0 = load i32, i32* @debug_level, align 4, !dbg !20512
  %cmp = icmp sge i32 %0, 3, !dbg !20512
  br i1 %cmp, label %if.then, label %if.end, !dbg !20514

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20512
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20512
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20512
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.124, i64 0, i64 0), i8* %arraydecay) #12, !dbg !20512
  br label %if.end, !dbg !20512

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !20515

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20516

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20517, metadata !DIExpression()), !dbg !20519
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20520, metadata !DIExpression()), !dbg !20519
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20519
  %conv = zext i1 %cmp2 to i32, !dbg !20519
  store i32 1, i32* %tmp, align 4, !dbg !20519
  %2 = load i32, i32* %tmp, align 4, !dbg !20519
  br label %do.body3, !dbg !20521

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20522

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20523

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20525, metadata !DIExpression()), !dbg !20528
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20529, metadata !DIExpression()), !dbg !20528
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20528
  %conv9 = zext i1 %cmp8 to i32, !dbg !20528
  store i32 1, i32* %tmp10, align 4, !dbg !20528
  %3 = load i32, i32* %tmp10, align 4, !dbg !20528
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20530
  store i64 %call11, i64* %flags, align 8, !dbg !20530
  br label %do.end, !dbg !20530

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20523

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20522

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20531, !srcloc !20532
  br label %do.body14, !dbg !20531

do.body14:                                        ; preds = %do.body13
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20533
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 22, !dbg !20533
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20534
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !20535
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !20535
  br label %do.end16, !dbg !20533

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20531

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20522

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20521

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20516

do.end20:                                         ; preds = %do.end19
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20536
  call void @tdma_reset(%struct.slgt_info* %7) #11, !dbg !20537
  %8 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20538
  %lock21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %8, i32 0, i32 22, !dbg !20539
  %9 = load i64, i64* %flags, align 8, !dbg !20540
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20541
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20541
  store i32 1, i32* %tmp.i, align 4, !dbg !20541
  %10 = load i32, i32* %tmp.i, align 4, !dbg !20541
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20542
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20542
  store i32 1, i32* %tmp8.i, align 4, !dbg !20542
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !20542
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !20543
  call void @arch_local_irq_restore(i64 %12) #14, !dbg !20543
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20544, !srcloc !10199
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !20545
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !20545
  %rlock.i23 = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !20545
  ret i32 0, !dbg !20546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_stats(%struct.slgt_info* %info, %struct.mgsl_icount* %user_icount) #1 !dbg !20547 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !12402, metadata !DIExpression()), !dbg !20550
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !12417, metadata !DIExpression()), !dbg !20556
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !12419, metadata !DIExpression()), !dbg !20557
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !12421, metadata !DIExpression()), !dbg !20558
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !12423, metadata !DIExpression()), !dbg !20559
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !12443, metadata !DIExpression()), !dbg !20560
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !12445, metadata !DIExpression()), !dbg !20561
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !12447, metadata !DIExpression()), !dbg !20562
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %user_icount.addr = alloca %struct.mgsl_icount*, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20563, metadata !DIExpression()), !dbg !20564
  store %struct.mgsl_icount* %user_icount, %struct.mgsl_icount** %user_icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mgsl_icount** %user_icount.addr, metadata !20565, metadata !DIExpression()), !dbg !20566
  %0 = load i32, i32* @debug_level, align 4, !dbg !20567
  %cmp = icmp sge i32 %0, 3, !dbg !20567
  br i1 %cmp, label %if.then, label %if.end, !dbg !20569

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20567
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20567
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20567
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.125, i64 0, i64 0), i8* %arraydecay) #12, !dbg !20567
  br label %if.end, !dbg !20567

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.mgsl_icount*, %struct.mgsl_icount** %user_icount.addr, align 8, !dbg !20570
  %tobool = icmp ne %struct.mgsl_icount* %2, null, !dbg !20570
  br i1 %tobool, label %if.else, label %if.then1, !dbg !20571

if.then1:                                         ; preds = %if.end
  %3 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20572
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %3, i32 0, i32 11, !dbg !20574
  %4 = bitcast %struct.mgsl_icount* %icount to i8*, !dbg !20575
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 92, i1 false), !dbg !20575
  br label %if.end7, !dbg !20576

if.else:                                          ; preds = %if.end
  %5 = load %struct.mgsl_icount*, %struct.mgsl_icount** %user_icount.addr, align 8, !dbg !20577
  %6 = bitcast %struct.mgsl_icount* %5 to i8*, !dbg !20577
  %7 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20578
  %icount2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %7, i32 0, i32 11, !dbg !20579
  %8 = bitcast %struct.mgsl_icount* %icount2 to i8*, !dbg !20580
  store i8* %6, i8** %to.addr.i, align 8
  store i8* %8, i8** %from.addr.i, align 8
  store i64 92, i64* %n.addr.i, align 8
  %9 = load i8*, i8** %from.addr.i, align 8, !dbg !20581
  %10 = load i64, i64* %n.addr.i, align 8, !dbg !20581
  store i8* %9, i8** %addr.addr.i.i, align 8
  store i64 %10, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !20558
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !20582
  %cmp.i.i = icmp sge i32 %11, 0, !dbg !20582
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !20582

land.rhs.i.i:                                     ; preds = %if.else
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !20582
  %conv.i.i = sext i32 %12 to i64, !dbg !20582
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20582
  %cmp1.i.i = icmp ult i64 %conv.i.i, %13, !dbg !20582
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.else
  %14 = phi i1 [ false, %if.else ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !20583
  %lnot.i.i = xor i1 %14, true, !dbg !20582
  %lnot.ext.i.i = zext i1 %14 to i32, !dbg !20582
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !20582
  br i1 %14, label %if.then.i.i, label %if.end10.i.i, !dbg !20584

if.then.i.i:                                      ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20585
  %16 = call i1 @llvm.is.constant.i64(i64 %15) #10, !dbg !20586
  br i1 %16, label %if.else.i.i, label %if.then5.i.i, !dbg !20587

if.then5.i.i:                                     ; preds = %if.then.i.i
  %17 = load i32, i32* %sz.i.i, align 4, !dbg !20588
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20589
  call void @copy_overflow(i32 %17, i64 %18) #14, !dbg !20590
  br label %if.end9.i.i, !dbg !20590

if.else.i.i:                                      ; preds = %if.then.i.i
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20591
  %tobool6.i.i = trunc i8 %19 to i1, !dbg !20591
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !20592

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !20593
  br label %if.end.i.i, !dbg !20593

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !20594
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20595
  br label %check_copy_size.exit.i, !dbg !20595

if.end10.i.i:                                     ; preds = %land.end.i.i
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20559
  %cmp11.i.i = icmp ugt i64 %20, 2147483647, !dbg !20559
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !20559
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !20559
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !20559
  %21 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20596
  %tobool17.i.i = icmp ne i32 %21, 0, !dbg !20596
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !20596
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !20596
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !20596
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !20559

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 150, i32 2307, i64 12) #10, !dbg !20597, !srcloc !12569
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #10, !dbg !20598, !srcloc !12572
  br label %if.end31.i.i, !dbg !20599

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !20559
  %tobool32.i.i = icmp ne i32 %22, 0, !dbg !20559
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !20559
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !20559
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !20559
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !20596
  %23 = load i64, i64* %tmp.i.i, align 8, !dbg !20559
  %tobool38.i.i = icmp ne i64 %23, 0, !dbg !20600
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !20601

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !20602
  br label %check_copy_size.exit.i, !dbg !20602

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %24 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !20603
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !20604
  %26 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !20605
  %tobool41.i.i = trunc i8 %26 to i1, !dbg !20605
  call void @check_object_size(i8* %24, i64 %25, i1 zeroext %tobool41.i.i) #14, !dbg !20606
  store i1 true, i1* %retval.i.i, align 1, !dbg !20607
  br label %check_copy_size.exit.i, !dbg !20607

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %27 = load i1, i1* %retval.i.i, align 1, !dbg !20608
  %lnot.i = xor i1 %27, true, !dbg !20581
  %lnot.ext.i = zext i1 %27 to i32, !dbg !20581
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !20581
  br i1 %27, label %if.then.i, label %copy_to_user.exit, !dbg !20609

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %28 = load i8*, i8** %to.addr.i, align 8, !dbg !20610
  %29 = load i8*, i8** %from.addr.i, align 8, !dbg !20611
  %30 = load i64, i64* %n.addr.i, align 8, !dbg !20612
  %call2.i = call i64 @_copy_to_user(i8* %28, i8* %29, i64 %30) #14, !dbg !20613
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !20614
  br label %copy_to_user.exit, !dbg !20615

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !20616
  %tobool4 = icmp ne i64 %31, 0, !dbg !20617
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !20618

if.then5:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !20619
  br label %return, !dbg !20619

if.end6:                                          ; preds = %copy_to_user.exit
  br label %if.end7

if.end7:                                          ; preds = %if.end6, %if.then1
  store i32 0, i32* %retval, align 4, !dbg !20620
  br label %return, !dbg !20620

return:                                           ; preds = %if.end7, %if.then5
  %32 = load i32, i32* %retval, align 4, !dbg !20621
  ret i32 %32, !dbg !20621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_interface(%struct.slgt_info* %info, i32* %if_mode) #1 !dbg !20622 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.slgt_info*, align 8
  %if_mode.addr = alloca i32*, align 8
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20623, metadata !DIExpression()), !dbg !20624
  store i32* %if_mode, i32** %if_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %if_mode.addr, metadata !20625, metadata !DIExpression()), !dbg !20626
  %0 = load i32, i32* @debug_level, align 4, !dbg !20627
  %cmp = icmp sge i32 %0, 3, !dbg !20627
  br i1 %cmp, label %if.then, label %if.end, !dbg !20629

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20627
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20627
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20627
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20627
  %if_mode1 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 41, !dbg !20627
  %3 = load i32, i32* %if_mode1, align 8, !dbg !20627
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.126, i64 0, i64 0), i8* %arraydecay, i32 %3) #12, !dbg !20627
  br label %if.end, !dbg !20627

if.end:                                           ; preds = %if.then, %entry
  call void @might_fault() #11, !dbg !20630
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !20633, metadata !DIExpression()), !dbg !20635
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !20636, metadata !DIExpression()), !dbg !20635
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !20637, metadata !DIExpression()), !dbg !20635
  %4 = load i32*, i32** %if_mode.addr, align 8, !dbg !20635
  %5 = bitcast i32* %4 to i8*, !dbg !20635
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !20635
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20635
  %if_mode2 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 41, !dbg !20635
  %7 = load i32, i32* %if_mode2, align 8, !dbg !20635
  store i32 %7, i32* %__val_pu, align 4, !dbg !20635
  %8 = call i64 @llvm.read_register.i64(metadata !8138), !dbg !20635
  %9 = load i8*, i8** %__ptr_pu, align 8, !dbg !20635
  %10 = load i32, i32* %__val_pu, align 4, !dbg !20635
  %11 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %9, i32 %10, i64 4, i64 %8) #10, !dbg !20635, !srcloc !20638
  %asmresult = extractvalue { i8*, i64 } %11, 0, !dbg !20635
  %asmresult3 = extractvalue { i8*, i64 } %11, 1, !dbg !20635
  %12 = ptrtoint i8* %asmresult to i64, !dbg !20635
  %13 = trunc i64 %12 to i32, !dbg !20635
  store i32 %13, i32* %__ret_pu, align 4, !dbg !20635
  call void @llvm.write_register.i64(metadata !8138, i64 %asmresult3), !dbg !20635
  %14 = load i32, i32* %__ret_pu, align 4, !dbg !20635
  %conv = sext i32 %14 to i64, !dbg !20635
  store i64 %conv, i64* %tmp4, align 8, !dbg !20635
  %15 = load i64, i64* %tmp4, align 8, !dbg !20635
  store i64 %15, i64* %tmp, align 8, !dbg !20630
  %16 = load i64, i64* %tmp, align 8, !dbg !20630
  %tobool = icmp ne i64 %16, 0, !dbg !20639
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !20640

if.then5:                                         ; preds = %if.end
  store i32 -14, i32* %retval, align 4, !dbg !20641
  br label %return, !dbg !20641

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20642
  br label %return, !dbg !20642

return:                                           ; preds = %if.end6, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !20643
  ret i32 %17, !dbg !20643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_interface(%struct.slgt_info* %info, i32 %if_mode) #1 !dbg !20644 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !10114, metadata !DIExpression()), !dbg !20645
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20647
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20648
  %info.addr = alloca %struct.slgt_info*, align 8
  %if_mode.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %val = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20655, metadata !DIExpression()), !dbg !20656
  store i32 %if_mode, i32* %if_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %if_mode.addr, metadata !20657, metadata !DIExpression()), !dbg !20658
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20659, metadata !DIExpression()), !dbg !20660
  call void @llvm.dbg.declare(metadata i16* %val, metadata !20661, metadata !DIExpression()), !dbg !20662
  %0 = load i32, i32* @debug_level, align 4, !dbg !20663
  %cmp = icmp sge i32 %0, 3, !dbg !20663
  br i1 %cmp, label %if.then, label %if.end, !dbg !20665

if.then:                                          ; preds = %entry
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20663
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20663
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20663
  %2 = load i32, i32* %if_mode.addr, align 4, !dbg !20663
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.127, i64 0, i64 0), i8* %arraydecay, i32 %2) #12, !dbg !20663
  br label %if.end, !dbg !20663

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !20666

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20667

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20668, metadata !DIExpression()), !dbg !20670
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20671, metadata !DIExpression()), !dbg !20670
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20670
  %conv = zext i1 %cmp2 to i32, !dbg !20670
  store i32 1, i32* %tmp, align 4, !dbg !20670
  %3 = load i32, i32* %tmp, align 4, !dbg !20670
  br label %do.body3, !dbg !20672

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20673

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20674

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20676, metadata !DIExpression()), !dbg !20679
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20680, metadata !DIExpression()), !dbg !20679
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20679
  %conv9 = zext i1 %cmp8 to i32, !dbg !20679
  store i32 1, i32* %tmp10, align 4, !dbg !20679
  %4 = load i32, i32* %tmp10, align 4, !dbg !20679
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20681
  store i64 %call11, i64* %flags, align 8, !dbg !20681
  br label %do.end, !dbg !20681

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20674

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20673

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20682, !srcloc !20683
  br label %do.body14, !dbg !20682

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20684
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %5, i32 0, i32 22, !dbg !20684
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20685
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !20686
  %rlock.i = bitcast %union.anon.1* %7 to %struct.raw_spinlock*, !dbg !20686
  br label %do.end16, !dbg !20684

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20682

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20673

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20672

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20667

do.end20:                                         ; preds = %do.end19
  %8 = load i32, i32* %if_mode.addr, align 4, !dbg !20687
  %9 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20688
  %if_mode21 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %9, i32 0, i32 41, !dbg !20689
  store i32 %8, i32* %if_mode21, align 8, !dbg !20690
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20691
  call void @msc_set_vcr(%struct.slgt_info* %10) #11, !dbg !20692
  %11 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20693
  %call22 = call zeroext i16 @rd_reg16(%struct.slgt_info* %11, i32 130) #11, !dbg !20694
  store i16 %call22, i16* %val, align 2, !dbg !20695
  %12 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20696
  %if_mode23 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %12, i32 0, i32 41, !dbg !20698
  %13 = load i32, i32* %if_mode23, align 8, !dbg !20698
  %and = and i32 %13, 16, !dbg !20699
  %tobool = icmp ne i32 %and, 0, !dbg !20699
  br i1 %tobool, label %if.then24, label %if.else, !dbg !20700

if.then24:                                        ; preds = %do.end20
  %14 = load i16, i16* %val, align 2, !dbg !20701
  %conv25 = zext i16 %14 to i32, !dbg !20701
  %or = or i32 %conv25, 128, !dbg !20701
  %conv26 = trunc i32 %or to i16, !dbg !20701
  store i16 %conv26, i16* %val, align 2, !dbg !20701
  br label %if.end30, !dbg !20702

if.else:                                          ; preds = %do.end20
  %15 = load i16, i16* %val, align 2, !dbg !20703
  %conv27 = zext i16 %15 to i32, !dbg !20703
  %and28 = and i32 %conv27, -129, !dbg !20703
  %conv29 = trunc i32 %and28 to i16, !dbg !20703
  store i16 %conv29, i16* %val, align 2, !dbg !20703
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then24
  %16 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20704
  %17 = load i16, i16* %val, align 2, !dbg !20705
  call void @wr_reg16(%struct.slgt_info* %16, i32 130, i16 zeroext %17) #11, !dbg !20706
  %18 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20707
  %lock31 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %18, i32 0, i32 22, !dbg !20708
  %19 = load i64, i64* %flags, align 8, !dbg !20709
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20710
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20710
  store i32 1, i32* %tmp.i, align 4, !dbg !20710
  %20 = load i32, i32* %tmp.i, align 4, !dbg !20710
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20711
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20711
  store i32 1, i32* %tmp8.i, align 4, !dbg !20711
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !20711
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !20712
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !20712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20713, !srcloc !10199
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !20714
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !20714
  %rlock.i33 = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !20714
  ret i32 0, !dbg !20715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #1 !dbg !20716 {
entry:
  ret void, !dbg !20718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @waitqueue_active(%struct.wait_queue_head* %wq_head) #1 !dbg !20719 {
entry:
  %wq_head.addr = alloca %struct.wait_queue_head*, align 8
  store %struct.wait_queue_head* %wq_head, %struct.wait_queue_head** %wq_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wq_head.addr, metadata !20723, metadata !DIExpression()), !dbg !20724
  %0 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wq_head.addr, align 8, !dbg !20725
  %head = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %0, i32 0, i32 1, !dbg !20726
  %call = call i32 @list_empty(%struct.list_head* %head) #11, !dbg !20727
  %tobool = icmp ne i32 %call, 0, !dbg !20728
  %lnot = xor i1 %tobool, true, !dbg !20728
  %lnot.ext = zext i1 %lnot to i32, !dbg !20728
  ret i32 %lnot.ext, !dbg !20729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !20730 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !20735, metadata !DIExpression()), !dbg !20736
  br label %do.body, !dbg !20737

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !20739

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20737
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !20737
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20737
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !20739
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !20737
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20741
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !20742
  %conv = zext i1 %cmp to i32, !dbg !20742
  ret i32 %conv, !dbg !20743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_cond_wait(%struct.cond_wait* %w, i32 %data) #1 !dbg !8132 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !20744
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !20746
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !20747
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %w.addr = alloca %struct.cond_wait*, align 8
  %data.addr = alloca i32, align 4
  store %struct.cond_wait* %w, %struct.cond_wait** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %w.addr, metadata !20748, metadata !DIExpression()), !dbg !20749
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !20750, metadata !DIExpression()), !dbg !20751
  br label %do.body, !dbg !20752

do.body:                                          ; preds = %entry
  %0 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20753
  %q = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %0, i32 0, i32 1, !dbg !20753
  call void @__init_waitqueue_head(%struct.wait_queue_head* %q, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.113, i64 0, i64 0), %struct.lock_class_key* @init_cond_wait.__key) #11, !dbg !20753
  br label %do.end, !dbg !20753

do.end:                                           ; preds = %do.body
  %1 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20755
  %wait = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %1, i32 0, i32 2, !dbg !20756
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20746
  %2 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20746
  %3 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20747, !srcloc !18022
  store i64 %3, i64* %pfo_val__.i, align 8, !dbg !20747
  %4 = load i64, i64* %pfo_val__.i, align 8, !dbg !20747
  %5 = inttoptr i64 %4 to %struct.task_struct*, !dbg !20747
  store %struct.task_struct* %5, %struct.task_struct** %tmp.i, align 8, !dbg !20747
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20747
  store %struct.task_struct* %6, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20744
  %7 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20744
  store %struct.task_struct* %7, %struct.task_struct** %tmp1.i, align 8, !dbg !20744
  %8 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20744
  call void @init_waitqueue_entry(%struct.wait_queue_entry* %wait, %struct.task_struct* %8) #11, !dbg !20757
  %9 = load i32, i32* %data.addr, align 4, !dbg !20758
  %10 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20759
  %data1 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %10, i32 0, i32 3, !dbg !20760
  store i32 %9, i32* %data1, align 8, !dbg !20761
  ret void, !dbg !20762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_cond_wait(%struct.cond_wait** %head, %struct.cond_wait* %w) #1 !dbg !20763 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !20766
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !20771
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !20772
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %head.addr = alloca %struct.cond_wait**, align 8
  %w.addr = alloca %struct.cond_wait*, align 8
  store %struct.cond_wait** %head, %struct.cond_wait*** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait*** %head.addr, metadata !20773, metadata !DIExpression()), !dbg !20774
  store %struct.cond_wait* %w, %struct.cond_wait** %w.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %w.addr, metadata !20775, metadata !DIExpression()), !dbg !20776
  br label %do.body, !dbg !20777

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20778

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !20779

do.body2:                                         ; preds = %do.body1
  br label %do.end, !dbg !20780

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !20779

do.body3:                                         ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20771
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20771
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20772, !srcloc !18022
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !20772
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !20772
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !20772
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !20772
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20772
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20766
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20766
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !20766
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20766
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 1, !dbg !20782
  store volatile i64 1, i64* %state, align 16, !dbg !20782
  br label %do.end4, !dbg !20782

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !20779

do.end5:                                          ; preds = %do.end4
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20778, !srcloc !20783
  br label %do.end6, !dbg !20778

do.end6:                                          ; preds = %do.end5
  %7 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20784
  %q = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %7, i32 0, i32 1, !dbg !20785
  %8 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20786
  %wait = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %8, i32 0, i32 2, !dbg !20787
  call void @add_wait_queue(%struct.wait_queue_head* %q, %struct.wait_queue_entry* %wait) #11, !dbg !20788
  %9 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !20789
  %10 = load %struct.cond_wait*, %struct.cond_wait** %9, align 8, !dbg !20790
  %11 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20791
  %next = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %11, i32 0, i32 0, !dbg !20792
  store %struct.cond_wait* %10, %struct.cond_wait** %next, align 8, !dbg !20793
  %12 = load %struct.cond_wait*, %struct.cond_wait** %w.addr, align 8, !dbg !20794
  %13 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !20795
  store %struct.cond_wait* %12, %struct.cond_wait** %13, align 8, !dbg !20796
  ret void, !dbg !20797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_cond_wait(%struct.cond_wait** %head, %struct.cond_wait* %cw) #1 !dbg !20798 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !17940, metadata !DIExpression()), !dbg !20799
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !17950, metadata !DIExpression()), !dbg !20804
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !17953, metadata !DIExpression()), !dbg !20805
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %head.addr = alloca %struct.cond_wait**, align 8
  %cw.addr = alloca %struct.cond_wait*, align 8
  %w = alloca %struct.cond_wait*, align 8
  %prev = alloca %struct.cond_wait*, align 8
  store %struct.cond_wait** %head, %struct.cond_wait*** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait*** %head.addr, metadata !20806, metadata !DIExpression()), !dbg !20807
  store %struct.cond_wait* %cw, %struct.cond_wait** %cw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %cw.addr, metadata !20808, metadata !DIExpression()), !dbg !20809
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %w, metadata !20810, metadata !DIExpression()), !dbg !20811
  call void @llvm.dbg.declare(metadata %struct.cond_wait** %prev, metadata !20812, metadata !DIExpression()), !dbg !20813
  %0 = load %struct.cond_wait*, %struct.cond_wait** %cw.addr, align 8, !dbg !20814
  %q = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %0, i32 0, i32 1, !dbg !20815
  %1 = load %struct.cond_wait*, %struct.cond_wait** %cw.addr, align 8, !dbg !20816
  %wait = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %1, i32 0, i32 2, !dbg !20817
  call void @remove_wait_queue(%struct.wait_queue_head* %q, %struct.wait_queue_entry* %wait) #11, !dbg !20818
  br label %do.body, !dbg !20819

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20820

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !20821

do.body2:                                         ; preds = %do.body1
  br label %do.end, !dbg !20822

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !20821

do.body3:                                         ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20804
  %2 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20804
  %3 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !20805, !srcloc !18022
  store i64 %3, i64* %pfo_val__.i, align 8, !dbg !20805
  %4 = load i64, i64* %pfo_val__.i, align 8, !dbg !20805
  %5 = inttoptr i64 %4 to %struct.task_struct*, !dbg !20805
  store %struct.task_struct* %5, %struct.task_struct** %tmp.i, align 8, !dbg !20805
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20805
  store %struct.task_struct* %6, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20799
  %7 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20799
  store %struct.task_struct* %7, %struct.task_struct** %tmp1.i, align 8, !dbg !20799
  %8 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20799
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %8, i32 0, i32 1, !dbg !20824
  store volatile i64 0, i64* %state, align 16, !dbg !20824
  br label %do.end4, !dbg !20824

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !20821

do.end5:                                          ; preds = %do.end4
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20820, !srcloc !20825
  br label %do.end6, !dbg !20820

do.end6:                                          ; preds = %do.end5
  %9 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !20826
  %10 = load %struct.cond_wait*, %struct.cond_wait** %9, align 8, !dbg !20828
  store %struct.cond_wait* %10, %struct.cond_wait** %w, align 8, !dbg !20829
  store %struct.cond_wait* null, %struct.cond_wait** %prev, align 8, !dbg !20830
  br label %for.cond, !dbg !20831

for.cond:                                         ; preds = %for.inc, %do.end6
  %11 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20832
  %cmp = icmp ne %struct.cond_wait* %11, null, !dbg !20834
  br i1 %cmp, label %for.body, label %for.end, !dbg !20835

for.body:                                         ; preds = %for.cond
  %12 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20836
  %13 = load %struct.cond_wait*, %struct.cond_wait** %cw.addr, align 8, !dbg !20839
  %cmp7 = icmp eq %struct.cond_wait* %12, %13, !dbg !20840
  br i1 %cmp7, label %if.then, label %if.end12, !dbg !20841

if.then:                                          ; preds = %for.body
  %14 = load %struct.cond_wait*, %struct.cond_wait** %prev, align 8, !dbg !20842
  %cmp8 = icmp ne %struct.cond_wait* %14, null, !dbg !20845
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !20846

if.then9:                                         ; preds = %if.then
  %15 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20847
  %next = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %15, i32 0, i32 0, !dbg !20848
  %16 = load %struct.cond_wait*, %struct.cond_wait** %next, align 8, !dbg !20848
  %17 = load %struct.cond_wait*, %struct.cond_wait** %prev, align 8, !dbg !20849
  %next10 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %17, i32 0, i32 0, !dbg !20850
  store %struct.cond_wait* %16, %struct.cond_wait** %next10, align 8, !dbg !20851
  br label %if.end, !dbg !20849

if.else:                                          ; preds = %if.then
  %18 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20852
  %next11 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %18, i32 0, i32 0, !dbg !20853
  %19 = load %struct.cond_wait*, %struct.cond_wait** %next11, align 8, !dbg !20853
  %20 = load %struct.cond_wait**, %struct.cond_wait*** %head.addr, align 8, !dbg !20854
  store %struct.cond_wait* %19, %struct.cond_wait** %20, align 8, !dbg !20855
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %for.end, !dbg !20856

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !20857

for.inc:                                          ; preds = %if.end12
  %21 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20858
  store %struct.cond_wait* %21, %struct.cond_wait** %prev, align 8, !dbg !20859
  %22 = load %struct.cond_wait*, %struct.cond_wait** %w, align 8, !dbg !20860
  %next13 = getelementptr inbounds %struct.cond_wait, %struct.cond_wait* %22, i32 0, i32 0, !dbg !20861
  %23 = load %struct.cond_wait*, %struct.cond_wait** %next13, align 8, !dbg !20861
  store %struct.cond_wait* %23, %struct.cond_wait** %w, align 8, !dbg !20862
  br label %for.cond, !dbg !20863, !llvm.loop !20864

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !20866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_waitqueue_entry(%struct.wait_queue_entry* %wq_entry, %struct.task_struct* %p) #1 !dbg !20867 {
entry:
  %wq_entry.addr = alloca %struct.wait_queue_entry*, align 8
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.wait_queue_entry* %wq_entry, %struct.wait_queue_entry** %wq_entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry** %wq_entry.addr, metadata !20870, metadata !DIExpression()), !dbg !20871
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !20872, metadata !DIExpression()), !dbg !20873
  %0 = load %struct.wait_queue_entry*, %struct.wait_queue_entry** %wq_entry.addr, align 8, !dbg !20874
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %0, i32 0, i32 0, !dbg !20875
  store i32 0, i32* %flags, align 8, !dbg !20876
  %1 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !20877
  %2 = bitcast %struct.task_struct* %1 to i8*, !dbg !20877
  %3 = load %struct.wait_queue_entry*, %struct.wait_queue_entry** %wq_entry.addr, align 8, !dbg !20878
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %3, i32 0, i32 1, !dbg !20879
  store i8* %2, i8** %private, align 8, !dbg !20880
  %4 = load %struct.wait_queue_entry*, %struct.wait_queue_entry** %wq_entry.addr, align 8, !dbg !20881
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %4, i32 0, i32 2, !dbg !20882
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !20883
  ret void, !dbg !20884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_throttled(%struct.tty_struct* %tty) #1 !dbg !20885 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !20886, metadata !DIExpression()), !dbg !20887
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !20888
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !20889
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #11, !dbg !20890
  ret i1 %call, !dbg !20891
}

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #4

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @line_info(%struct.seq_file* %m, %struct.slgt_info* %info) #1 !dbg !20892 {
entry:
  %lock.addr.i138 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i138, metadata !10114, metadata !DIExpression()), !dbg !20895
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !10120, metadata !DIExpression()), !dbg !20897
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8902, metadata !DIExpression()), !dbg !20898
  %m.addr = alloca %struct.seq_file*, align 8
  %info.addr = alloca %struct.slgt_info*, align 8
  %stat_buf = alloca [30 x i8], align 16
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !20905, metadata !DIExpression()), !dbg !20906
  store %struct.slgt_info* %info, %struct.slgt_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.slgt_info** %info.addr, metadata !20907, metadata !DIExpression()), !dbg !20908
  call void @llvm.dbg.declare(metadata [30 x i8]* %stat_buf, metadata !20909, metadata !DIExpression()), !dbg !20913
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20914, metadata !DIExpression()), !dbg !20915
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !20916
  %1 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20917
  %device_name = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %1, i32 0, i32 4, !dbg !20918
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %device_name, i64 0, i64 0, !dbg !20917
  %2 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20919
  %phys_reg_addr = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %2, i32 0, i32 34, !dbg !20920
  %3 = load i32, i32* %phys_reg_addr, align 8, !dbg !20920
  %4 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20921
  %irq_level = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %4, i32 0, i32 31, !dbg !20922
  %5 = load i32, i32* %irq_level, align 4, !dbg !20922
  %6 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20923
  %max_frame_size = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %6, i32 0, i32 38, !dbg !20924
  %7 = load i32, i32* %max_frame_size, align 4, !dbg !20924
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.151, i64 0, i64 0), i8* %arraydecay, i32 %3, i32 %5, i32 %7) #11, !dbg !20925
  br label %do.body, !dbg !20926

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20927

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20928, metadata !DIExpression()), !dbg !20930
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20931, metadata !DIExpression()), !dbg !20930
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20930
  %conv = zext i1 %cmp to i32, !dbg !20930
  store i32 1, i32* %tmp, align 4, !dbg !20930
  %8 = load i32, i32* %tmp, align 4, !dbg !20930
  br label %do.body2, !dbg !20932

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20933

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20934

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20936, metadata !DIExpression()), !dbg !20939
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20940, metadata !DIExpression()), !dbg !20939
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20939
  %conv8 = zext i1 %cmp7 to i32, !dbg !20939
  store i32 1, i32* %tmp9, align 4, !dbg !20939
  %9 = load i32, i32* %tmp9, align 4, !dbg !20939
  %call = call i64 @arch_local_irq_save() #11, !dbg !20941
  store i64 %call, i64* %flags, align 8, !dbg !20941
  br label %do.end, !dbg !20941

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !20934

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !20933

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20942, !srcloc !20943
  br label %do.body12, !dbg !20942

do.body12:                                        ; preds = %do.body11
  %10 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20944
  %lock = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %10, i32 0, i32 22, !dbg !20944
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20945
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !20946
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !20946
  br label %do.end14, !dbg !20944

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !20942

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !20933

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20932

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20927

do.end18:                                         ; preds = %do.end17
  %13 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20947
  call void @get_signals(%struct.slgt_info* %13) #11, !dbg !20948
  %14 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20949
  %lock19 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %14, i32 0, i32 22, !dbg !20950
  %15 = load i64, i64* %flags, align 8, !dbg !20951
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i138, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !1587, metadata !10184, metadata !DIExpression()) #10, !dbg !20952
  call void @llvm.dbg.declare(metadata !1587, metadata !10188, metadata !DIExpression()) #10, !dbg !20952
  store i32 1, i32* %tmp.i, align 4, !dbg !20952
  %16 = load i32, i32* %tmp.i, align 4, !dbg !20952
  call void @llvm.dbg.declare(metadata !1587, metadata !10189, metadata !DIExpression()) #10, !dbg !20953
  call void @llvm.dbg.declare(metadata !1587, metadata !10195, metadata !DIExpression()) #10, !dbg !20953
  store i32 1, i32* %tmp8.i, align 4, !dbg !20953
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !20953
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !20954
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !20954
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !20955, !srcloc !10199
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i138, align 8, !dbg !20956
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !20956
  %rlock.i139 = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !20956
  %arrayidx = getelementptr [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20957
  store i8 0, i8* %arrayidx, align 16, !dbg !20958
  %arrayidx20 = getelementptr [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 1, !dbg !20959
  store i8 0, i8* %arrayidx20, align 1, !dbg !20960
  %21 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20961
  %signals = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %21, i32 0, i32 49, !dbg !20963
  %22 = load i8, i8* %signals, align 4, !dbg !20963
  %conv21 = zext i8 %22 to i32, !dbg !20961
  %and = and i32 %conv21, 32, !dbg !20964
  %tobool = icmp ne i32 %and, 0, !dbg !20964
  br i1 %tobool, label %if.then, label %if.end, !dbg !20965

if.then:                                          ; preds = %do.end18
  %arraydecay22 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20966
  %call23 = call i8* @strcat(i8* %arraydecay22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.152, i64 0, i64 0)) #11, !dbg !20967
  br label %if.end, !dbg !20967

if.end:                                           ; preds = %if.then, %do.end18
  %23 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20968
  %signals24 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %23, i32 0, i32 49, !dbg !20970
  %24 = load i8, i8* %signals24, align 4, !dbg !20970
  %conv25 = zext i8 %24 to i32, !dbg !20968
  %and26 = and i32 %conv25, 16, !dbg !20971
  %tobool27 = icmp ne i32 %and26, 0, !dbg !20971
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !20972

if.then28:                                        ; preds = %if.end
  %arraydecay29 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20973
  %call30 = call i8* @strcat(i8* %arraydecay29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i64 0, i64 0)) #11, !dbg !20974
  br label %if.end31, !dbg !20974

if.end31:                                         ; preds = %if.then28, %if.end
  %25 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20975
  %signals32 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %25, i32 0, i32 49, !dbg !20977
  %26 = load i8, i8* %signals32, align 4, !dbg !20977
  %conv33 = zext i8 %26 to i32, !dbg !20975
  %and34 = and i32 %conv33, 128, !dbg !20978
  %tobool35 = icmp ne i32 %and34, 0, !dbg !20978
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !20979

if.then36:                                        ; preds = %if.end31
  %arraydecay37 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20980
  %call38 = call i8* @strcat(i8* %arraydecay37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.154, i64 0, i64 0)) #11, !dbg !20981
  br label %if.end39, !dbg !20981

if.end39:                                         ; preds = %if.then36, %if.end31
  %27 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20982
  %signals40 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %27, i32 0, i32 49, !dbg !20984
  %28 = load i8, i8* %signals40, align 4, !dbg !20984
  %conv41 = zext i8 %28 to i32, !dbg !20982
  %and42 = and i32 %conv41, 64, !dbg !20985
  %tobool43 = icmp ne i32 %and42, 0, !dbg !20985
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !20986

if.then44:                                        ; preds = %if.end39
  %arraydecay45 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20987
  %call46 = call i8* @strcat(i8* %arraydecay45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.155, i64 0, i64 0)) #11, !dbg !20988
  br label %if.end47, !dbg !20988

if.end47:                                         ; preds = %if.then44, %if.end39
  %29 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20989
  %signals48 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %29, i32 0, i32 49, !dbg !20991
  %30 = load i8, i8* %signals48, align 4, !dbg !20991
  %conv49 = zext i8 %30 to i32, !dbg !20989
  %and50 = and i32 %conv49, 1, !dbg !20992
  %tobool51 = icmp ne i32 %and50, 0, !dbg !20992
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !20993

if.then52:                                        ; preds = %if.end47
  %arraydecay53 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !20994
  %call54 = call i8* @strcat(i8* %arraydecay53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i64 0, i64 0)) #11, !dbg !20995
  br label %if.end55, !dbg !20995

if.end55:                                         ; preds = %if.then52, %if.end47
  %31 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !20996
  %signals56 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %31, i32 0, i32 49, !dbg !20998
  %32 = load i8, i8* %signals56, align 4, !dbg !20998
  %conv57 = zext i8 %32 to i32, !dbg !20996
  %and58 = and i32 %conv57, 4, !dbg !20999
  %tobool59 = icmp ne i32 %and58, 0, !dbg !20999
  br i1 %tobool59, label %if.then60, label %if.end63, !dbg !21000

if.then60:                                        ; preds = %if.end55
  %arraydecay61 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !21001
  %call62 = call i8* @strcat(i8* %arraydecay61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.157, i64 0, i64 0)) #11, !dbg !21002
  br label %if.end63, !dbg !21002

if.end63:                                         ; preds = %if.then60, %if.end55
  %33 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21003
  %params = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %33, i32 0, i32 36, !dbg !21005
  %mode = getelementptr inbounds %struct._MGSL_PARAMS, %struct._MGSL_PARAMS* %params, i32 0, i32 0, !dbg !21006
  %34 = load i64, i64* %mode, align 8, !dbg !21006
  %cmp64 = icmp ne i64 %34, 1, !dbg !21007
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !21008

if.then66:                                        ; preds = %if.end63
  %35 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21009
  %36 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21011
  %icount = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %36, i32 0, i32 11, !dbg !21012
  %txok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount, i32 0, i32 11, !dbg !21013
  %37 = load i32, i32* %txok, align 4, !dbg !21013
  %38 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21014
  %icount67 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %38, i32 0, i32 11, !dbg !21015
  %rxok = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount67, i32 0, i32 20, !dbg !21016
  %39 = load i32, i32* %rxok, align 4, !dbg !21016
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %35, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.158, i64 0, i64 0), i32 %37, i32 %39) #11, !dbg !21017
  %40 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21018
  %icount68 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %40, i32 0, i32 11, !dbg !21020
  %txunder = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount68, i32 0, i32 12, !dbg !21021
  %41 = load i32, i32* %txunder, align 4, !dbg !21021
  %tobool69 = icmp ne i32 %41, 0, !dbg !21018
  br i1 %tobool69, label %if.then70, label %if.end73, !dbg !21022

if.then70:                                        ; preds = %if.then66
  %42 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21023
  %43 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21024
  %icount71 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %43, i32 0, i32 11, !dbg !21025
  %txunder72 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount71, i32 0, i32 12, !dbg !21026
  %44 = load i32, i32* %txunder72, align 4, !dbg !21026
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.159, i64 0, i64 0), i32 %44) #11, !dbg !21027
  br label %if.end73, !dbg !21027

if.end73:                                         ; preds = %if.then70, %if.then66
  %45 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21028
  %icount74 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %45, i32 0, i32 11, !dbg !21030
  %txabort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount74, i32 0, i32 13, !dbg !21031
  %46 = load i32, i32* %txabort, align 4, !dbg !21031
  %tobool75 = icmp ne i32 %46, 0, !dbg !21028
  br i1 %tobool75, label %if.then76, label %if.end79, !dbg !21032

if.then76:                                        ; preds = %if.end73
  %47 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21033
  %48 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21034
  %icount77 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %48, i32 0, i32 11, !dbg !21035
  %txabort78 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount77, i32 0, i32 13, !dbg !21036
  %49 = load i32, i32* %txabort78, align 4, !dbg !21036
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.160, i64 0, i64 0), i32 %49) #11, !dbg !21037
  br label %if.end79, !dbg !21037

if.end79:                                         ; preds = %if.then76, %if.end73
  %50 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21038
  %icount80 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %50, i32 0, i32 11, !dbg !21040
  %rxshort = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount80, i32 0, i32 15, !dbg !21041
  %51 = load i32, i32* %rxshort, align 4, !dbg !21041
  %tobool81 = icmp ne i32 %51, 0, !dbg !21038
  br i1 %tobool81, label %if.then82, label %if.end85, !dbg !21042

if.then82:                                        ; preds = %if.end79
  %52 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21043
  %53 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21044
  %icount83 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %53, i32 0, i32 11, !dbg !21045
  %rxshort84 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount83, i32 0, i32 15, !dbg !21046
  %54 = load i32, i32* %rxshort84, align 4, !dbg !21046
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %52, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.161, i64 0, i64 0), i32 %54) #11, !dbg !21047
  br label %if.end85, !dbg !21047

if.end85:                                         ; preds = %if.then82, %if.end79
  %55 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21048
  %icount86 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %55, i32 0, i32 11, !dbg !21050
  %rxlong = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount86, i32 0, i32 16, !dbg !21051
  %56 = load i32, i32* %rxlong, align 4, !dbg !21051
  %tobool87 = icmp ne i32 %56, 0, !dbg !21048
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !21052

if.then88:                                        ; preds = %if.end85
  %57 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21053
  %58 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21054
  %icount89 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %58, i32 0, i32 11, !dbg !21055
  %rxlong90 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount89, i32 0, i32 16, !dbg !21056
  %59 = load i32, i32* %rxlong90, align 4, !dbg !21056
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %57, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.162, i64 0, i64 0), i32 %59) #11, !dbg !21057
  br label %if.end91, !dbg !21057

if.end91:                                         ; preds = %if.then88, %if.end85
  %60 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21058
  %icount92 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %60, i32 0, i32 11, !dbg !21060
  %rxover = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount92, i32 0, i32 18, !dbg !21061
  %61 = load i32, i32* %rxover, align 4, !dbg !21061
  %tobool93 = icmp ne i32 %61, 0, !dbg !21058
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !21062

if.then94:                                        ; preds = %if.end91
  %62 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21063
  %63 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21064
  %icount95 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %63, i32 0, i32 11, !dbg !21065
  %rxover96 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount95, i32 0, i32 18, !dbg !21066
  %64 = load i32, i32* %rxover96, align 4, !dbg !21066
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.163, i64 0, i64 0), i32 %64) #11, !dbg !21067
  br label %if.end97, !dbg !21067

if.end97:                                         ; preds = %if.then94, %if.end91
  %65 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21068
  %icount98 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %65, i32 0, i32 11, !dbg !21070
  %rxcrc = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount98, i32 0, i32 19, !dbg !21071
  %66 = load i32, i32* %rxcrc, align 4, !dbg !21071
  %tobool99 = icmp ne i32 %66, 0, !dbg !21068
  br i1 %tobool99, label %if.then100, label %if.end103, !dbg !21072

if.then100:                                       ; preds = %if.end97
  %67 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21073
  %68 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21074
  %icount101 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %68, i32 0, i32 11, !dbg !21075
  %rxcrc102 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount101, i32 0, i32 19, !dbg !21076
  %69 = load i32, i32* %rxcrc102, align 4, !dbg !21076
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.164, i64 0, i64 0), i32 %69) #11, !dbg !21077
  br label %if.end103, !dbg !21077

if.end103:                                        ; preds = %if.then100, %if.end97
  br label %if.end130, !dbg !21078

if.else:                                          ; preds = %if.end63
  %70 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21079
  %71 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21081
  %icount104 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %71, i32 0, i32 11, !dbg !21082
  %tx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount104, i32 0, i32 4, !dbg !21083
  %72 = load i32, i32* %tx, align 4, !dbg !21083
  %73 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21084
  %icount105 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %73, i32 0, i32 11, !dbg !21085
  %rx = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount105, i32 0, i32 5, !dbg !21086
  %74 = load i32, i32* %rx, align 4, !dbg !21086
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %70, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.165, i64 0, i64 0), i32 %72, i32 %74) #11, !dbg !21087
  %75 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21088
  %icount106 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %75, i32 0, i32 11, !dbg !21090
  %frame = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount106, i32 0, i32 6, !dbg !21091
  %76 = load i32, i32* %frame, align 4, !dbg !21091
  %tobool107 = icmp ne i32 %76, 0, !dbg !21088
  br i1 %tobool107, label %if.then108, label %if.end111, !dbg !21092

if.then108:                                       ; preds = %if.else
  %77 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21093
  %78 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21094
  %icount109 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %78, i32 0, i32 11, !dbg !21095
  %frame110 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount109, i32 0, i32 6, !dbg !21096
  %79 = load i32, i32* %frame110, align 4, !dbg !21096
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %77, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.166, i64 0, i64 0), i32 %79) #11, !dbg !21097
  br label %if.end111, !dbg !21097

if.end111:                                        ; preds = %if.then108, %if.else
  %80 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21098
  %icount112 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %80, i32 0, i32 11, !dbg !21100
  %parity = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount112, i32 0, i32 7, !dbg !21101
  %81 = load i32, i32* %parity, align 4, !dbg !21101
  %tobool113 = icmp ne i32 %81, 0, !dbg !21098
  br i1 %tobool113, label %if.then114, label %if.end117, !dbg !21102

if.then114:                                       ; preds = %if.end111
  %82 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21103
  %83 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21104
  %icount115 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %83, i32 0, i32 11, !dbg !21105
  %parity116 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount115, i32 0, i32 7, !dbg !21106
  %84 = load i32, i32* %parity116, align 4, !dbg !21106
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %82, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.167, i64 0, i64 0), i32 %84) #11, !dbg !21107
  br label %if.end117, !dbg !21107

if.end117:                                        ; preds = %if.then114, %if.end111
  %85 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21108
  %icount118 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %85, i32 0, i32 11, !dbg !21110
  %brk = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount118, i32 0, i32 9, !dbg !21111
  %86 = load i32, i32* %brk, align 4, !dbg !21111
  %tobool119 = icmp ne i32 %86, 0, !dbg !21108
  br i1 %tobool119, label %if.then120, label %if.end123, !dbg !21112

if.then120:                                       ; preds = %if.end117
  %87 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21113
  %88 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21114
  %icount121 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %88, i32 0, i32 11, !dbg !21115
  %brk122 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount121, i32 0, i32 9, !dbg !21116
  %89 = load i32, i32* %brk122, align 4, !dbg !21116
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.168, i64 0, i64 0), i32 %89) #11, !dbg !21117
  br label %if.end123, !dbg !21117

if.end123:                                        ; preds = %if.then120, %if.end117
  %90 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21118
  %icount124 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %90, i32 0, i32 11, !dbg !21120
  %overrun = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount124, i32 0, i32 8, !dbg !21121
  %91 = load i32, i32* %overrun, align 4, !dbg !21121
  %tobool125 = icmp ne i32 %91, 0, !dbg !21118
  br i1 %tobool125, label %if.then126, label %if.end129, !dbg !21122

if.then126:                                       ; preds = %if.end123
  %92 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21123
  %93 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21124
  %icount127 = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %93, i32 0, i32 11, !dbg !21125
  %overrun128 = getelementptr inbounds %struct.mgsl_icount, %struct.mgsl_icount* %icount127, i32 0, i32 8, !dbg !21126
  %94 = load i32, i32* %overrun128, align 4, !dbg !21126
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %92, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i64 0, i64 0), i32 %94) #11, !dbg !21127
  br label %if.end129, !dbg !21127

if.end129:                                        ; preds = %if.then126, %if.end123
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end103
  %95 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21128
  %arraydecay131 = getelementptr inbounds [30 x i8], [30 x i8]* %stat_buf, i64 0, i64 0, !dbg !21129
  %add.ptr = getelementptr i8, i8* %arraydecay131, i64 1, !dbg !21130
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.170, i64 0, i64 0), i8* %add.ptr) #11, !dbg !21131
  %96 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !21132
  %97 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21133
  %tx_active = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %97, i32 0, i32 48, !dbg !21134
  %98 = load i8, i8* %tx_active, align 1, !dbg !21134
  %tobool132 = trunc i8 %98 to i1, !dbg !21134
  %conv133 = zext i1 %tobool132 to i32, !dbg !21133
  %99 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21135
  %bh_requested = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %99, i32 0, i32 25, !dbg !21136
  %100 = load i8, i8* %bh_requested, align 4, !dbg !21136
  %tobool134 = trunc i8 %100 to i1, !dbg !21136
  %conv135 = zext i1 %tobool134 to i32, !dbg !21135
  %101 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21137
  %bh_running = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %101, i32 0, i32 26, !dbg !21138
  %102 = load i8, i8* %bh_running, align 1, !dbg !21138
  %tobool136 = trunc i8 %102 to i1, !dbg !21138
  %conv137 = zext i1 %tobool136 to i32, !dbg !21137
  %103 = load %struct.slgt_info*, %struct.slgt_info** %info.addr, align 8, !dbg !21139
  %pending_bh = getelementptr inbounds %struct.slgt_info, %struct.slgt_info* %103, i32 0, i32 24, !dbg !21140
  %104 = load i32, i32* %pending_bh, align 8, !dbg !21140
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %96, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.171, i64 0, i64 0), i32 %conv133, i32 %conv135, i32 %conv137, i32 %104) #11, !dbg !21141
  ret void, !dbg !21142
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i8* @strcat(i8*, i8*) #4

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!8138}
!llvm.module.flags = !{!8139, !8140, !8141, !8142}
!llvm.ident = !{!8143}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file319", scope: !2, file: !3, line: 93, type: !8135, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7523, globals: !7978, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/synclink_gt.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !7368, !5656, !5751, !6211, !6230, !3892, !4134, !4218, !4294, !4302, !7469, !7474, !7505, !7512, !7517}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7462)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !6675, !7191, !7195, !7235, !7236, !7237, !7238, !7239, !7240, !7241, !7242, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7275, !7278, !7281, !7284, !7287, !7288, !7301, !7302, !7303, !7304, !7305, !7306, !7313, !7314, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7359, !7360, !7361, !7362, !7363, !7364, !7365, !7366, !7367, !7372, !7373, !7374, !7379, !7416, !7417, !7419, !7420, !7424, !7425, !7426, !7427, !7433, !7435, !7438, !7441, !7443, !7444, !7445, !7446, !7447, !7451, !7454}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !6635, !6655, !6659, !6665, !6671}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 19, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !6628}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !6607, !6608, !6626, !6627}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !6257, !6261, !6265, !6266, !6270, !6276, !6277, !6278, !6279, !6280, !6284, !6288, !6292, !6293, !6294, !6298, !6299, !6311, !6315, !6319, !6331, !6517, !6521, !6525, !6529, !6533, !6537, !6541, !6547, !6551, !6558, !6562, !6564, !6565}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !6207, !6208, !6209, !6210, !6219, !6220, !6221, !6222, !6223, !6224, !6240, !6241, !6250, !6251, !6252, !6253, !6254, !6255, !6256}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !6176, !6177, !6189, !6190, !6191, !6192, !6193, !6199, !6200, !6201}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !6111, !6112, !6113, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6143, !6144, !6145, !6146, !6147, !6148, !6149, !6154, !6162, !6163, !6164, !6172, !6173, !6174, !6175}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1597, !5714, !5802, !5885, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5901, !5905, !5906, !5909, !5910, !5913, !5914, !5915, !5956, !5983, !5984, !5985, !5986, !5987, !5988, !5991, !5992, !5998, !5999, !6001, !6002, !6003, !6062, !6063, !6078, !6079, !6080, !6081, !6082, !6085, !6086, !6087, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6110}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1566, !1570, !1574, !1578, !1579, !1580, !1584, !1588, !1589, !1590, !1594, !1595, !1596}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1565, line: 28, flags: DIFlagFwdDecl)
!1565 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1567, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1569)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!1338, !1554, !32, !292, !591}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{null, !1545}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1581, size: 64, offset: 512)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1581, file: !277, line: 183, baseType: !280, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1585, offset: 576)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1586, line: 187, elements: !1587)
!1586 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1587 = !{}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1585, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1585, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1591, offset: 576)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 3)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1585, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1585, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1585, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1598, size: 64, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1601)
!1601 = !{!1602, !1606, !1610, !1611, !1615, !1621, !1625, !1626, !1627, !1631, !1635, !1636, !1637, !1638, !1644, !1648, !1649, !1712, !1713, !1714, !1715, !5698, !5713}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1600, file: !1317, line: 1936, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1375, !1545}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1600, file: !1317, line: 1937, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !1375}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1600, file: !1317, line: 1938, baseType: !1607, size: 64, offset: 128)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1600, file: !1317, line: 1940, baseType: !1612, size: 64, offset: 192)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DISubroutineType(types: !1614)
!1614 = !{null, !1375, !32}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1600, file: !1317, line: 1941, baseType: !1616, size: 64, offset: 256)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DISubroutineType(types: !1618)
!1618 = !{!32, !1375, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1600, file: !1317, line: 1942, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DISubroutineType(types: !1624)
!1624 = !{!32, !1375}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1600, file: !1317, line: 1943, baseType: !1607, size: 64, offset: 384)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1600, file: !1317, line: 1944, baseType: !1575, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1600, file: !1317, line: 1945, baseType: !1628, size: 64, offset: 512)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = !DISubroutineType(types: !1630)
!1630 = !{!32, !1545, !32}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1600, file: !1317, line: 1946, baseType: !1632, size: 64, offset: 576)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DISubroutineType(types: !1634)
!1634 = !{!32, !1545}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1600, file: !1317, line: 1947, baseType: !1632, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1600, file: !1317, line: 1948, baseType: !1632, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1600, file: !1317, line: 1949, baseType: !1632, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1600, file: !1317, line: 1950, baseType: !1639, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!32, !1338, !1642}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1600, file: !1317, line: 1951, baseType: !1645, size: 64, offset: 896)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!32, !1545, !1001, !1038}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1600, file: !1317, line: 1952, baseType: !1575, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1600, file: !1317, line: 1954, baseType: !1650, size: 64, offset: 1024)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!32, !1653, !1338}
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1655, line: 16, size: 896, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1685, !1707, !1708, !1711}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1654, file: !1655, line: 17, baseType: !1038, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1654, file: !1655, line: 18, baseType: !1039, size: 64, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1654, file: !1655, line: 19, baseType: !1039, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1654, file: !1655, line: 20, baseType: !1039, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1654, file: !1655, line: 21, baseType: !1039, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1654, file: !1655, line: 22, baseType: !1476, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1654, file: !1655, line: 23, baseType: !1476, size: 64, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1654, file: !1655, line: 24, baseType: !1665, size: 192, offset: 448)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1666, line: 53, size: 192, elements: !1667)
!1666 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1667 = !{!1668, !1669, !1684}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1665, file: !1666, line: 54, baseType: !371, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1665, file: !1666, line: 55, baseType: !1670, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1671, line: 83, baseType: !1672)
!1671 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1671, line: 71, elements: !1673)
!1673 = !{!1674}
!1674 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1671, line: 72, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1671, line: 72, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1675, file: !1671, line: 73, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1671, line: 20, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1678, file: !1671, line: 21, baseType: !1681)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1682, line: 25, baseType: !1683)
!1682 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 25, elements: !1587)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1665, file: !1666, line: 59, baseType: !284, size: 128, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1654, file: !1655, line: 25, baseType: !1686, size: 64, offset: 640)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1688)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1655, line: 31, size: 256, elements: !1689)
!1689 = !{!1690, !1695, !1699, !1703}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1688, file: !1655, line: 32, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!591, !1653, !1694}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1688, file: !1655, line: 33, baseType: !1696, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DISubroutineType(types: !1698)
!1698 = !{null, !1653, !591}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1688, file: !1655, line: 34, baseType: !1700, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!591, !1653, !591, !1694}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1688, file: !1655, line: 35, baseType: !1704, size: 64, offset: 192)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!32, !1653, !591}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1654, file: !1655, line: 26, baseType: !32, size: 32, offset: 704)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1654, file: !1655, line: 27, baseType: !1709, size: 64, offset: 768)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1654, file: !1655, line: 28, baseType: !591, size: 64, offset: 832)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1600, file: !1317, line: 1955, baseType: !1650, size: 64, offset: 1088)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1600, file: !1317, line: 1956, baseType: !1650, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1600, file: !1317, line: 1957, baseType: !1650, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1600, file: !1317, line: 1963, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!32, !1545, !1719, !1742}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1721, line: 68, size: 512, align: 128, elements: !1722)
!1721 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1722 = !{!1723, !1724, !5690, !5697}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1720, file: !1721, line: 69, baseType: !312, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 77, baseType: !1725, size: 320, offset: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 77, size: 320, elements: !1726)
!1726 = !{!1727, !2032, !2037, !2065, !2073, !2079, !5614, !5689}
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 78, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 78, size: 320, elements: !1729)
!1729 = !{!1730, !1731, !2030, !2031}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1728, file: !1721, line: 84, baseType: !284, size: 128)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1728, file: !1721, line: 86, baseType: !1732, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1734)
!1734 = !{!1735, !1736, !1744, !1745, !1746, !1754, !1763, !1764, !1765, !1766, !2023, !2024, !2027, !2028, !2029}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1733, file: !1317, line: 452, baseType: !1375, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1733, file: !1317, line: 453, baseType: !1737, size: 128, offset: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1738, line: 292, size: 128, elements: !1739)
!1738 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1739 = !{!1740, !1741, !1743}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1737, file: !1738, line: 293, baseType: !1670)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1737, file: !1738, line: 295, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1737, file: !1738, line: 296, baseType: !591, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1733, file: !1317, line: 454, baseType: !1742, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1733, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1733, file: !1317, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1748)
!1748 = !{!1749, !1753}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !434, line: 126, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1751)
!1751 = !{!1752}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1750, file: !434, line: 32, baseType: !438, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1733, file: !1317, line: 461, baseType: !1755, size: 256, offset: 384)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1756, line: 35, size: 256, elements: !1757)
!1756 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1757 = !{!1758, !1759, !1760, !1762}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1755, file: !1756, line: 36, baseType: !371, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1755, file: !1756, line: 42, baseType: !371, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1755, file: !1756, line: 46, baseType: !1761, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1671, line: 29, baseType: !1678)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1755, file: !1756, line: 47, baseType: !284, size: 128, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1733, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1733, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1733, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1733, file: !1317, line: 465, baseType: !1767, size: 64, offset: 832)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1770)
!1770 = !{!1771, !1775, !1779, !1783, !1787, !1791, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1987, !1991, !1997, !1998, !1999, !2003, !2008, !2012, !2019}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1769, file: !1317, line: 368, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DISubroutineType(types: !1774)
!1774 = !{!32, !1719, !1619}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1769, file: !1317, line: 369, baseType: !1776, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!32, !1315, !1719}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1769, file: !1317, line: 372, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!32, !1732, !1619}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1769, file: !1317, line: 375, baseType: !1784, size: 64, offset: 192)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!32, !1719}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1769, file: !1317, line: 381, baseType: !1788, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!32, !1315, !1732, !287, !7}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1769, file: !1317, line: 383, baseType: !1792, size: 64, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{null, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1769, file: !1317, line: 385, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!32, !1315, !1732, !1476, !7, !7, !1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1769, file: !1317, line: 388, baseType: !1804, size: 64, offset: 448)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!32, !1315, !1732, !1476, !7, !7, !1719, !591}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1769, file: !1317, line: 393, baseType: !1808, size: 64, offset: 512)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!1811, !1732, !1811}
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1769, file: !1317, line: 394, baseType: !1813, size: 64, offset: 576)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{null, !1719, !7, !7}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1769, file: !1317, line: 395, baseType: !1817, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!32, !1719, !1742}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1769, file: !1317, line: 396, baseType: !1821, size: 64, offset: 704)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{null, !1719}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1769, file: !1317, line: 397, baseType: !1825, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!1521, !1828, !1848}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1837, !1838, !1839, !1840, !1841}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1829, file: !1317, line: 321, baseType: !1315, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1829, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1829, file: !1317, line: 327, baseType: !1834, size: 64, offset: 128)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DISubroutineType(types: !1836)
!1836 = !{null, !1828, !998, !998}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1829, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1829, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1829, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1829, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1841 = !DIDerivedType(tag: DW_TAG_member, scope: !1829, file: !1317, line: 332, baseType: !1842, size: 64, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1829, file: !1317, line: 332, size: 64, elements: !1843)
!1843 = !{!1844, !1845}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1842, file: !1317, line: 333, baseType: !7, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1842, file: !1317, line: 334, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1850, line: 29, size: 320, elements: !1851)
!1850 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1851 = !{!1852, !1853, !1854, !1855, !1978}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1849, file: !1850, line: 35, baseType: !7, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1849, file: !1850, line: 36, baseType: !1039, size: 64, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1850, line: 37, baseType: !1039, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 38, baseType: !1856, size: 64, offset: 192)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 38, size: 64, elements: !1857)
!1857 = !{!1858, !1866, !1873, !1882}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1856, file: !1850, line: 39, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1862, line: 17, size: 128, elements: !1863)
!1862 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1861, file: !1862, line: 19, baseType: !591, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1861, file: !1862, line: 20, baseType: !1040, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1856, file: !1850, line: 40, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1850, line: 15, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1869, file: !1850, line: 16, baseType: !591, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1869, file: !1850, line: 17, baseType: !1039, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1856, file: !1850, line: 41, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1877, line: 31, size: 128, elements: !1878)
!1877 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1878 = !{!1879, !1880, !1881}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1876, file: !1877, line: 32, baseType: !1719, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1876, file: !1877, line: 33, baseType: !7, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1876, file: !1877, line: 34, baseType: !7, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1856, file: !1850, line: 42, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1885, line: 57, size: 1088, elements: !1886)
!1885 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1886 = !{!1887, !1888, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1924, !1925, !1952}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1884, file: !1885, line: 58, baseType: !1665, size: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1890, line: 40, baseType: !1891)
!1890 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1890, line: 36, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1891, file: !1890, line: 37, baseType: !1670)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1891, file: !1890, line: 38, baseType: !284, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1884, file: !1885, line: 59, baseType: !1889, size: 128, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1884, file: !1885, line: 60, baseType: !7, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1884, file: !1885, line: 61, baseType: !7, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1884, file: !1885, line: 62, baseType: !7, size: 32, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1884, file: !1885, line: 63, baseType: !7, size: 32, offset: 544)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1884, file: !1885, line: 67, baseType: !7, size: 32, offset: 576)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1884, file: !1885, line: 68, baseType: !7, size: 32, offset: 608)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1884, file: !1885, line: 69, baseType: !7, size: 32, offset: 640)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1884, file: !1885, line: 70, baseType: !7, size: 32, offset: 672)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1884, file: !1885, line: 71, baseType: !7, size: 32, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1884, file: !1885, line: 72, baseType: !7, size: 32, offset: 736)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1884, file: !1885, line: 73, baseType: !1719, size: 64, offset: 768)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1884, file: !1885, line: 74, baseType: !1908, size: 64, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1910)
!1910 = !{!1911, !1919, !1920, !1921, !1922, !1923}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1909, file: !1317, line: 1315, baseType: !1912)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1913, line: 20, baseType: !1914)
!1913 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1913, line: 11, elements: !1915)
!1915 = !{!1916}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1914, file: !1913, line: 12, baseType: !1917)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1682, line: 33, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1682, line: 31, elements: !1587)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1909, file: !1317, line: 1316, baseType: !32, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1909, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1909, file: !1317, line: 1318, baseType: !1908, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1909, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1909, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1884, file: !1885, line: 75, baseType: !1908, size: 64, offset: 896)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1884, file: !1885, line: 76, baseType: !1926, size: 64, offset: 960)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1885, line: 26, size: 320, elements: !1928)
!1928 = !{!1929, !1930, !1931, !1932, !1950, !1951}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1927, file: !1885, line: 27, baseType: !1719, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1927, file: !1885, line: 28, baseType: !7, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1927, file: !1885, line: 29, baseType: !1933, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1885, line: 93, size: 256, elements: !1936)
!1936 = !{!1937, !1941, !1945, !1949}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1935, file: !1885, line: 101, baseType: !1938, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DISubroutineType(types: !1940)
!1940 = !{!32, !1883, !1926}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1935, file: !1885, line: 107, baseType: !1942, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{null, !1883, !1926}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1935, file: !1885, line: 117, baseType: !1946, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!771, !1883, !1926}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1935, file: !1885, line: 122, baseType: !1946, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1885, line: 30, baseType: !7, size: 32, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1927, file: !1885, line: 31, baseType: !312, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1884, file: !1885, line: 77, baseType: !1953, size: 64, offset: 1024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1955, line: 13, size: 896, elements: !1956)
!1955 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1956 = !{!1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1954, file: !1955, line: 14, baseType: !568, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1954, file: !1955, line: 15, baseType: !383, size: 32, offset: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1954, file: !1955, line: 16, baseType: !383, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1954, file: !1955, line: 21, baseType: !371, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1954, file: !1955, line: 27, baseType: !312, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1954, file: !1955, line: 28, baseType: !312, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1954, file: !1955, line: 29, baseType: !371, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1954, file: !1955, line: 32, baseType: !276, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1954, file: !1955, line: 33, baseType: !1382, size: 32, offset: 512)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1954, file: !1955, line: 37, baseType: !371, size: 64, offset: 576)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1954, file: !1955, line: 44, baseType: !1968, size: 256, offset: 640)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1969, line: 15, size: 256, elements: !1970)
!1969 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1970 = !{!1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1968, file: !1969, line: 16, baseType: !1761)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1968, file: !1969, line: 18, baseType: !32, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1968, file: !1969, line: 19, baseType: !32, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1968, file: !1969, line: 20, baseType: !32, size: 32, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1968, file: !1969, line: 21, baseType: !32, size: 32, offset: 96)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1968, file: !1969, line: 22, baseType: !312, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1968, file: !1969, line: 23, baseType: !312, size: 64, offset: 192)
!1978 = !DIDerivedType(tag: DW_TAG_member, scope: !1849, file: !1850, line: 44, baseType: !1979, size: 64, offset: 256)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1849, file: !1850, line: 44, size: 64, elements: !1980)
!1980 = !{!1981, !1982}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1979, file: !1850, line: 45, baseType: !312, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1979, file: !1850, line: 46, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1850, line: 46, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1983, file: !1850, line: 47, baseType: !7, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1983, file: !1850, line: 48, baseType: !7, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1769, file: !1317, line: 402, baseType: !1988, size: 64, offset: 832)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!32, !1732, !1719, !1719, !5}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1769, file: !1317, line: 404, baseType: !1992, size: 64, offset: 896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{!771, !1719, !1995}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1996, line: 305, baseType: !7)
!1996 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1769, file: !1317, line: 405, baseType: !1821, size: 64, offset: 960)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1769, file: !1317, line: 406, baseType: !1784, size: 64, offset: 1024)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1769, file: !1317, line: 407, baseType: !2000, size: 64, offset: 1088)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!32, !1719, !312, !312}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1769, file: !1317, line: 409, baseType: !2004, size: 64, offset: 1152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !1719, !2007, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1769, file: !1317, line: 410, baseType: !2009, size: 64, offset: 1216)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!32, !1732, !1719}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1769, file: !1317, line: 413, baseType: !2013, size: 64, offset: 1280)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!32, !2016, !1315, !2018}
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1769, file: !1317, line: 415, baseType: !2020, size: 64, offset: 1344)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !1315}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1733, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1733, file: !1317, line: 467, baseType: !2025, size: 32, offset: 960)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2026, line: 8, baseType: !987)
!2026 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1733, file: !1317, line: 468, baseType: !1670, offset: 992)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1733, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1733, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1728, file: !1721, line: 87, baseType: !312, size: 64, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1728, file: !1721, line: 94, baseType: !312, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 96, baseType: !2033, size: 64)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 96, size: 64, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2033, file: !1721, line: 101, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2037 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 103, baseType: !2038, size: 320)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 103, size: 320, elements: !2039)
!2039 = !{!2040, !2050, !2053, !2054}
!2040 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 104, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2041, file: !1721, line: 105, baseType: !284, size: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2041, file: !1721, line: 106, baseType: !2045, size: 128)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2041, file: !1721, line: 106, size: 128, elements: !2046)
!2046 = !{!2047, !2048, !2049}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1721, line: 107, baseType: !1719, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2045, file: !1721, line: 109, baseType: !32, size: 32, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2045, file: !1721, line: 110, baseType: !32, size: 32, offset: 96)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2038, file: !1721, line: 117, baseType: !2051, size: 64, offset: 128)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1721, line: 117, flags: DIFlagFwdDecl)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2038, file: !1721, line: 119, baseType: !591, size: 64, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, scope: !2038, file: !1721, line: 120, baseType: !2055, size: 64, offset: 256)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2038, file: !1721, line: 120, size: 64, elements: !2056)
!2056 = !{!2057, !2058, !2059}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2055, file: !1721, line: 121, baseType: !591, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2055, file: !1721, line: 122, baseType: !312, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !1721, line: 123, baseType: !2060, size: 32)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !1721, line: 123, size: 32, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2060, file: !1721, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2060, file: !1721, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2060, file: !1721, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 130, baseType: !2066, size: 192)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 130, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2066, file: !1721, line: 131, baseType: !312, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2066, file: !1721, line: 134, baseType: !482, size: 8, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2066, file: !1721, line: 135, baseType: !482, size: 8, offset: 72)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2066, file: !1721, line: 136, baseType: !383, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2066, file: !1721, line: 137, baseType: !7, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 139, baseType: !2074, size: 256)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 139, size: 256, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2074, file: !1721, line: 140, baseType: !312, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2074, file: !1721, line: 141, baseType: !383, size: 32, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2074, file: !1721, line: 143, baseType: !284, size: 128, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 145, baseType: !2080, size: 256)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 145, size: 256, elements: !2081)
!2081 = !{!2082, !2083, !2086, !2087, !5613}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2080, file: !1721, line: 146, baseType: !312, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2080, file: !1721, line: 147, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2085, line: 509, baseType: !1719)
!2085 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2080, file: !1721, line: 148, baseType: !312, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !1721, line: 149, baseType: !2088, size: 64, offset: 192)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !1721, line: 149, size: 64, elements: !2089)
!2089 = !{!2090, !5612}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2088, file: !1721, line: 150, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1721, line: 388, size: 7296, elements: !2093)
!2093 = !{!2094, !5611}
!2094 = !DIDerivedType(tag: DW_TAG_member, scope: !2092, file: !1721, line: 389, baseType: !2095, size: 7296)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2092, file: !1721, line: 389, size: 7296, elements: !2096)
!2096 = !{!2097, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2266, !2274, !2277, !2316, !2317, !5595, !5596, !5599, !5600, !5601, !5604, !5605, !5606, !5609, !5610}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2095, file: !1721, line: 390, baseType: !2098, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1721, line: 305, size: 1472, elements: !2100)
!2100 = !{!2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2115, !2116, !2121, !2122, !2125, !2209, !2210, !2211, !2212, !2213}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2099, file: !1721, line: 308, baseType: !312, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2099, file: !1721, line: 309, baseType: !312, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2099, file: !1721, line: 313, baseType: !2098, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2099, file: !1721, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2099, file: !1721, line: 323, baseType: !312, size: 64, offset: 448)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2099, file: !1721, line: 327, baseType: !2091, size: 64, offset: 512)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2099, file: !1721, line: 333, baseType: !2109, size: 64, offset: 576)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2085, line: 284, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2085, line: 284, size: 64, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2110, file: !2085, line: 284, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2114, line: 19, baseType: !312)
!2114 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2099, file: !1721, line: 334, baseType: !312, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2099, file: !1721, line: 343, baseType: !2117, size: 256, offset: 704)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !1721, line: 340, size: 256, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !1721, line: 341, baseType: !433, size: 192, align: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2117, file: !1721, line: 342, baseType: !312, size: 64, offset: 192)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2099, file: !1721, line: 351, baseType: !284, size: 128, offset: 960)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2099, file: !1721, line: 353, baseType: !2123, size: 64, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1721, line: 353, flags: DIFlagFwdDecl)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2099, file: !1721, line: 356, baseType: !2126, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2128)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2129)
!2129 = !{!2130, !2134, !2135, !2139, !2143, !2183, !2187, !2191, !2195, !2196, !2197, !2201, !2205}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2128, file: !14, line: 558, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null, !2098}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2128, file: !14, line: 559, baseType: !2131, size: 64, offset: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2128, file: !14, line: 560, baseType: !2136, size: 64, offset: 128)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!32, !2098, !312}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2128, file: !14, line: 561, baseType: !2140, size: 64, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!32, !2098}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2128, file: !14, line: 562, baseType: !2144, size: 64, offset: 256)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1721, line: 682, baseType: !7)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2150)
!2150 = !{!2151, !2152, !2153, !2154, !2155, !2156, !2163, !2170, !2176, !2177, !2178, !2180, !2182}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2149, file: !14, line: 509, baseType: !2098, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2149, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2149, file: !14, line: 511, baseType: !1742, size: 32, offset: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2149, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2149, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2149, file: !14, line: 514, baseType: !2157, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2085, line: 385, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 385, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2159, file: !2085, line: 385, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2114, line: 15, baseType: !312)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2149, file: !14, line: 516, baseType: !2164, size: 64, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2085, line: 359, baseType: !2166)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 359, size: 64, elements: !2167)
!2167 = !{!2168}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2166, file: !2085, line: 359, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2114, line: 16, baseType: !312)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2149, file: !14, line: 519, baseType: !2171, size: 64, offset: 384)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2114, line: 21, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2114, line: 21, size: 64, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2172, file: !2114, line: 21, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2114, line: 14, baseType: !312)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2149, file: !14, line: 521, baseType: !1719, size: 64, offset: 448)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2149, file: !14, line: 522, baseType: !1719, size: 64, offset: 512)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2149, file: !14, line: 528, baseType: !2179, size: 64, offset: 576)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2149, file: !14, line: 532, baseType: !2181, size: 64, offset: 640)
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2149, file: !14, line: 536, baseType: !2084, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2128, file: !14, line: 563, baseType: !2184, size: 64, offset: 320)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!2147, !2148, !13}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2128, file: !14, line: 565, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2148, !312, !312}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2128, file: !14, line: 567, baseType: !2192, size: 64, offset: 448)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!312, !2098}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2128, file: !14, line: 571, baseType: !2144, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2128, file: !14, line: 574, baseType: !2144, size: 64, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2128, file: !14, line: 579, baseType: !2198, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DISubroutineType(types: !2200)
!2200 = !{!32, !2098, !312, !591, !32, !32}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2128, file: !14, line: 585, baseType: !2202, size: 64, offset: 704)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{!292, !2098}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2128, file: !14, line: 615, baseType: !2206, size: 64, offset: 768)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!1719, !2098, !312}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2099, file: !1721, line: 359, baseType: !312, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2099, file: !1721, line: 361, baseType: !1315, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2099, file: !1721, line: 362, baseType: !591, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2099, file: !1721, line: 365, baseType: !371, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2099, file: !1721, line: 373, baseType: !2214, offset: 1472)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1721, line: 296, elements: !1587)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2095, file: !1721, line: 391, baseType: !1750, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2095, file: !1721, line: 392, baseType: !331, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2095, file: !1721, line: 394, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!312, !1315, !312, !312, !312, !312}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2095, file: !1721, line: 398, baseType: !312, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2095, file: !1721, line: 399, baseType: !312, size: 64, offset: 320)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2095, file: !1721, line: 405, baseType: !312, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2095, file: !1721, line: 406, baseType: !312, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2095, file: !1721, line: 407, baseType: !2226, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2085, line: 286, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2085, line: 286, size: 64, elements: !2229)
!2229 = !{!2230}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2228, file: !2085, line: 286, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2114, line: 18, baseType: !312)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2095, file: !1721, line: 416, baseType: !383, size: 32, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2095, file: !1721, line: 428, baseType: !383, size: 32, offset: 608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2095, file: !1721, line: 437, baseType: !383, size: 32, offset: 640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2095, file: !1721, line: 447, baseType: !383, size: 32, offset: 672)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2095, file: !1721, line: 450, baseType: !371, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2095, file: !1721, line: 452, baseType: !32, size: 32, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2095, file: !1721, line: 454, baseType: !1670, offset: 800)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2095, file: !1721, line: 457, baseType: !1755, size: 256, offset: 832)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2095, file: !1721, line: 459, baseType: !284, size: 128, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2095, file: !1721, line: 466, baseType: !312, size: 64, offset: 1216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2095, file: !1721, line: 467, baseType: !312, size: 64, offset: 1280)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2095, file: !1721, line: 469, baseType: !312, size: 64, offset: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2095, file: !1721, line: 470, baseType: !312, size: 64, offset: 1408)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2095, file: !1721, line: 471, baseType: !373, size: 64, offset: 1472)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2095, file: !1721, line: 472, baseType: !312, size: 64, offset: 1536)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2095, file: !1721, line: 473, baseType: !312, size: 64, offset: 1600)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2095, file: !1721, line: 474, baseType: !312, size: 64, offset: 1664)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2095, file: !1721, line: 475, baseType: !312, size: 64, offset: 1728)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2095, file: !1721, line: 477, baseType: !1670, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1792)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1856)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1920)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2095, file: !1721, line: 478, baseType: !312, size: 64, offset: 1984)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2048)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2112)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2095, file: !1721, line: 479, baseType: !312, size: 64, offset: 2176)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2240)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2304)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2368)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2095, file: !1721, line: 480, baseType: !312, size: 64, offset: 2432)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2095, file: !1721, line: 482, baseType: !2263, size: 2816, offset: 2496)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2264)
!2264 = !{!2265}
!2265 = !DISubrange(count: 44)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2095, file: !1721, line: 488, baseType: !2267, size: 256, offset: 5312)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2268, line: 60, size: 256, elements: !2269)
!2268 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2267, file: !2268, line: 61, baseType: !2271, size: 256)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2272)
!2272 = !{!2273}
!2273 = !DISubrange(count: 4)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2095, file: !1721, line: 490, baseType: !2275, size: 64, offset: 5568)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1721, line: 490, flags: DIFlagFwdDecl)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2095, file: !1721, line: 493, baseType: !2278, size: 896, offset: 5632)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2279, line: 53, baseType: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2279, line: 13, size: 896, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2288, !2289, !2290, !2291, !2311, !2312, !2313}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2280, file: !2279, line: 18, baseType: !331, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2280, file: !2279, line: 28, baseType: !373, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2280, file: !2279, line: 31, baseType: !1755, size: 256, offset: 128)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2280, file: !2279, line: 32, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2279, line: 32, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2280, file: !2279, line: 37, baseType: !476, size: 16, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2280, file: !2279, line: 40, baseType: !1665, size: 192, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2280, file: !2279, line: 41, baseType: !591, size: 64, offset: 704)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2280, file: !2279, line: 42, baseType: !2292, size: 64, offset: 768)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2295, line: 13, size: 896, elements: !2296)
!2295 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2294, file: !2295, line: 14, baseType: !591, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !2295, line: 15, baseType: !312, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2294, file: !2295, line: 17, baseType: !312, size: 64, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2294, file: !2295, line: 19, baseType: !998, size: 64, offset: 256)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2294, file: !2295, line: 21, baseType: !998, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2294, file: !2295, line: 22, baseType: !998, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2294, file: !2295, line: 23, baseType: !998, size: 64, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2294, file: !2295, line: 24, baseType: !998, size: 64, offset: 512)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2294, file: !2295, line: 25, baseType: !998, size: 64, offset: 576)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2294, file: !2295, line: 26, baseType: !998, size: 64, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2294, file: !2295, line: 27, baseType: !998, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2294, file: !2295, line: 28, baseType: !998, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2294, file: !2295, line: 29, baseType: !998, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2280, file: !2279, line: 44, baseType: !383, size: 32, offset: 832)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2280, file: !2279, line: 50, baseType: !581, size: 16, offset: 864)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2280, file: !2279, line: 51, baseType: !2314, size: 16, offset: 880)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2095, file: !1721, line: 495, baseType: !312, size: 64, offset: 6528)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2095, file: !1721, line: 497, baseType: !2318, size: 64, offset: 6592)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1721, line: 381, size: 384, elements: !2320)
!2320 = !{!2321, !2322, !5594}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2319, file: !1721, line: 382, baseType: !383, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2319, file: !1721, line: 383, baseType: !2323, size: 128, offset: 64)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1721, line: 376, size: 128, elements: !2324)
!2324 = !{!2325, !5592}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2323, file: !1721, line: 377, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2328, line: 640, size: 48640, elements: !2329)
!2328 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2329 = !{!2330, !2336, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2351, !2369, !2380, !2461, !2462, !2463, !2474, !2475, !2477, !2478, !2479, !2480, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2558, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2885, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2919, !2924, !2973, !2974, !2975, !2976, !2977, !2980, !2983, !2986, !2989, !3705, !5153, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5199, !5200, !5201, !5202, !5203, !5208, !5209, !5210, !5213, !5214, !5217, !5220, !5223, !5226, !5258, !5261, !5262, !5341, !5342, !5345, !5346, !5349, !5350, !5351, !5355, !5356, !5357, !5370, !5371, !5372, !5382, !5387, !5388, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2327, file: !2328, line: 646, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2332, line: 56, size: 128, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2335}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2331, file: !2332, line: 57, baseType: !312, size: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2331, file: !2332, line: 58, baseType: !987, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2327, file: !2328, line: 649, baseType: !2337, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2327, file: !2328, line: 657, baseType: !591, size: 64, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2327, file: !2328, line: 658, baseType: !568, size: 32, offset: 256)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2328, line: 660, baseType: !7, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2327, file: !2328, line: 661, baseType: !7, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2327, file: !2328, line: 684, baseType: !32, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2327, file: !2328, line: 686, baseType: !32, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2327, file: !2328, line: 687, baseType: !32, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2327, file: !2328, line: 688, baseType: !32, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2327, file: !2328, line: 689, baseType: !7, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2327, file: !2328, line: 691, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2328, line: 691, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2327, file: !2328, line: 692, baseType: !2352, size: 832, offset: 576)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2328, line: 451, size: 832, elements: !2353)
!2353 = !{!2354, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2352, file: !2328, line: 453, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2328, line: 325, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2355, file: !2328, line: 326, baseType: !312, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2355, file: !2328, line: 327, baseType: !987, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2352, file: !2328, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2352, file: !2328, line: 455, baseType: !284, size: 128, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2352, file: !2328, line: 456, baseType: !7, size: 32, offset: 448)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2352, file: !2328, line: 458, baseType: !331, size: 64, offset: 512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2352, file: !2328, line: 459, baseType: !331, size: 64, offset: 576)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2352, file: !2328, line: 460, baseType: !331, size: 64, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2352, file: !2328, line: 461, baseType: !331, size: 64, offset: 704)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2352, file: !2328, line: 463, baseType: !331, size: 64, offset: 768)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2352, file: !2328, line: 465, baseType: !2368, offset: 832)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2328, line: 415, elements: !1587)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2327, file: !2328, line: 693, baseType: !2370, size: 384, offset: 1408)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2328, line: 489, size: 384, elements: !2371)
!2371 = !{!2372, !2373, !2374, !2375, !2376, !2377, !2378}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2370, file: !2328, line: 490, baseType: !284, size: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2370, file: !2328, line: 491, baseType: !312, size: 64, offset: 128)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2370, file: !2328, line: 492, baseType: !312, size: 64, offset: 192)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2370, file: !2328, line: 493, baseType: !7, size: 32, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2370, file: !2328, line: 494, baseType: !476, size: 16, offset: 288)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2370, file: !2328, line: 495, baseType: !476, size: 16, offset: 304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2370, file: !2328, line: 497, baseType: !2379, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2327, file: !2328, line: 697, baseType: !2381, size: 1792, offset: 1792)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2328, line: 507, size: 1792, elements: !2382)
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2458, !2459}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2381, file: !2328, line: 508, baseType: !433, size: 192, align: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2381, file: !2328, line: 515, baseType: !331, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2381, file: !2328, line: 516, baseType: !331, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2381, file: !2328, line: 517, baseType: !331, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2381, file: !2328, line: 518, baseType: !331, size: 64, offset: 384)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2381, file: !2328, line: 519, baseType: !331, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2381, file: !2328, line: 526, baseType: !377, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2381, file: !2328, line: 527, baseType: !331, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !2328, line: 528, baseType: !7, size: 32, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2381, file: !2328, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2381, file: !2328, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2381, file: !2328, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2381, file: !2328, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2381, file: !2328, line: 563, baseType: !2397, size: 512, offset: 704)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2398)
!2398 = !{!2399, !2405, !2406, !2411, !2454, !2455, !2456, !2457}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2397, file: !20, line: 119, baseType: !2400, size: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2401, line: 9, size: 256, elements: !2402)
!2401 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2400, file: !2401, line: 10, baseType: !433, size: 192, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2400, file: !2401, line: 11, baseType: !453, size: 64, offset: 192)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2397, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2397, file: !20, line: 121, baseType: !2407, size: 64, offset: 320)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!19, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2397, file: !20, line: 122, baseType: !2412, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2414)
!2414 = !{!2415, !2435, !2436, !2439, !2444, !2445, !2449, !2453}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2413, file: !20, line: 160, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2418)
!2418 = !{!2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2417, file: !20, line: 215, baseType: !1761)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2417, file: !20, line: 216, baseType: !7, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2417, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2417, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2417, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2417, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2417, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2417, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2417, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2417, file: !20, line: 234, baseType: !2410, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2417, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2417, file: !20, line: 236, baseType: !2410, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2417, file: !20, line: 237, baseType: !2432, size: 4096, offset: 512)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2413, size: 4096, elements: !2433)
!2433 = !{!2434}
!2434 = !DISubrange(count: 8)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2413, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2413, file: !20, line: 162, baseType: !2437, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2413, file: !20, line: 163, baseType: !2440, size: 32, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2442)
!2442 = !{!2443}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2441, file: !1344, line: 276, baseType: !1348, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2413, file: !20, line: 164, baseType: !2410, size: 64, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2413, file: !20, line: 165, baseType: !2446, size: 128, offset: 256)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2401, line: 14, size: 128, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2446, file: !2401, line: 15, baseType: !1747, size: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2413, file: !20, line: 166, baseType: !2450, size: 64, offset: 384)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{!453}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2413, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2397, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2397, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2397, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2397, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2381, file: !2328, line: 572, baseType: !2397, size: 512, offset: 1216)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2381, file: !2328, line: 580, baseType: !2460, size: 64, offset: 1728)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2327, file: !2328, line: 721, baseType: !7, size: 32, offset: 3584)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2327, file: !2328, line: 722, baseType: !32, size: 32, offset: 3616)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2327, file: !2328, line: 723, baseType: !2464, size: 64, offset: 3648)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2466)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2467, line: 17, baseType: !2468)
!2467 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2467, line: 17, size: 64, elements: !2469)
!2469 = !{!2470}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2468, file: !2467, line: 17, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2472)
!2472 = !{!2473}
!2473 = !DISubrange(count: 1)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2327, file: !2328, line: 724, baseType: !2466, size: 64, offset: 3712)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2327, file: !2328, line: 749, baseType: !2476, offset: 3776)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2328, line: 290, elements: !1587)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2327, file: !2328, line: 751, baseType: !284, size: 128, offset: 3776)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2327, file: !2328, line: 757, baseType: !2091, size: 64, offset: 3904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2327, file: !2328, line: 758, baseType: !2091, size: 64, offset: 3968)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2327, file: !2328, line: 761, baseType: !2481, size: 320, offset: 4032)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2268, line: 34, size: 320, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2481, file: !2268, line: 35, baseType: !331, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2481, file: !2268, line: 36, baseType: !2485, size: 256, offset: 64)
!2485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2098, size: 256, elements: !2272)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2327, file: !2328, line: 766, baseType: !32, size: 32, offset: 4352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2327, file: !2328, line: 767, baseType: !32, size: 32, offset: 4384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2327, file: !2328, line: 768, baseType: !32, size: 32, offset: 4416)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2327, file: !2328, line: 770, baseType: !32, size: 32, offset: 4448)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2327, file: !2328, line: 772, baseType: !312, size: 64, offset: 4480)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2327, file: !2328, line: 775, baseType: !7, size: 32, offset: 4544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2327, file: !2328, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2327, file: !2328, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2327, file: !2328, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2327, file: !2328, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2327, file: !2328, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2327, file: !2328, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2327, file: !2328, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2327, file: !2328, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2327, file: !2328, line: 831, baseType: !312, size: 64, offset: 4672)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2327, file: !2328, line: 833, baseType: !2502, size: 384, offset: 4736)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2503)
!2503 = !{!2504, !2509}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2502, file: !25, line: 26, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!998, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, scope: !2502, file: !25, line: 27, baseType: !2510, size: 320, offset: 64)
!2510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2502, file: !25, line: 27, size: 320, elements: !2511)
!2511 = !{!2512, !2522, !2548}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2510, file: !25, line: 36, baseType: !2513, size: 320)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 29, size: 320, elements: !2514)
!2514 = !{!2515, !2517, !2518, !2519, !2520, !2521}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2513, file: !25, line: 30, baseType: !2516, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2513, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2513, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2513, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2513, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2513, file: !25, line: 35, baseType: !2516, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2510, file: !25, line: 46, baseType: !2523, size: 192)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 38, size: 192, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2547}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2523, file: !25, line: 39, baseType: !2437, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2523, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, scope: !2523, file: !25, line: 41, baseType: !2528, size: 64, offset: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2523, file: !25, line: 41, size: 64, elements: !2529)
!2529 = !{!2530, !2538}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2528, file: !25, line: 42, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2533, line: 7, size: 128, elements: !2534)
!2533 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !{!2535, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2532, file: !2533, line: 8, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2532, file: !2533, line: 9, baseType: !379, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2528, file: !25, line: 43, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2541, line: 7, size: 64, elements: !2542)
!2541 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2542 = !{!2543, !2546}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2540, file: !2541, line: 8, baseType: !2544, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2541, line: 5, baseType: !2545)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2540, file: !2541, line: 9, baseType: !2545, size: 32, offset: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2523, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2510, file: !25, line: 54, baseType: !2549, size: 256)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2510, file: !25, line: 48, size: 256, elements: !2550)
!2550 = !{!2551, !2554, !2555, !2556, !2557}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2549, file: !25, line: 49, baseType: !2552, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2549, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2549, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2549, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2549, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2327, file: !2328, line: 835, baseType: !2559, size: 32, offset: 5120)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2560)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2327, file: !2328, line: 836, baseType: !2559, size: 32, offset: 5152)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2327, file: !2328, line: 840, baseType: !312, size: 64, offset: 5184)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2327, file: !2328, line: 849, baseType: !2326, size: 64, offset: 5248)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2327, file: !2328, line: 852, baseType: !2326, size: 64, offset: 5312)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2327, file: !2328, line: 857, baseType: !284, size: 128, offset: 5376)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2327, file: !2328, line: 858, baseType: !284, size: 128, offset: 5504)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2327, file: !2328, line: 859, baseType: !2326, size: 64, offset: 5632)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2327, file: !2328, line: 867, baseType: !284, size: 128, offset: 5696)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2327, file: !2328, line: 868, baseType: !284, size: 128, offset: 5824)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2327, file: !2328, line: 871, baseType: !2571, size: 64, offset: 5952)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2573, line: 59, size: 768, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2576, !2577, !2578, !2580, !2581, !2582, !2583}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2572, file: !2573, line: 61, baseType: !568, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2572, file: !2573, line: 62, baseType: !7, size: 32, offset: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2572, file: !2573, line: 63, baseType: !1670, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2572, file: !2573, line: 65, baseType: !2579, size: 256, offset: 64)
!2579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 256, elements: !2272)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2572, file: !2573, line: 66, baseType: !1581, size: 64, offset: 320)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2572, file: !2573, line: 68, baseType: !1889, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2572, file: !2573, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2572, file: !2573, line: 70, baseType: !2584, size: 128, offset: 640)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2585, size: 128, elements: !2472)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2573, line: 54, size: 128, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2585, file: !2573, line: 55, baseType: !32, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2585, file: !2573, line: 56, baseType: !2589, size: 64, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2591, line: 20, size: 1088, elements: !2592)
!2591 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2592 = !{!2593, !2598, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2882, !2883, !2884}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2590, file: !2591, line: 21, baseType: !2594, size: 32)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !2595, line: 19, size: 32, elements: !2596)
!2595 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!2596 = !{!2597}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2594, file: !2595, line: 20, baseType: !568, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !2590, file: !2591, line: 22, baseType: !2599, size: 192, offset: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2600, line: 19, size: 192, elements: !2601)
!2600 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2601 = !{!2602, !2603, !2604}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2599, file: !2600, line: 20, baseType: !1737, size: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2599, file: !2600, line: 21, baseType: !7, size: 32, offset: 128)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2599, file: !2600, line: 22, baseType: !7, size: 32, offset: 160)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2590, file: !2591, line: 23, baseType: !299, size: 128, align: 64, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !2590, file: !2591, line: 24, baseType: !7, size: 32, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !2590, file: !2591, line: 25, baseType: !2326, size: 64, offset: 448)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !2590, file: !2591, line: 26, baseType: !2051, size: 64, offset: 512)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2590, file: !2591, line: 27, baseType: !7, size: 32, offset: 576)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2590, file: !2591, line: 28, baseType: !2589, size: 64, offset: 640)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2590, file: !2591, line: 32, baseType: !2612, size: 64, offset: 704)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2614, line: 56, size: 4160, elements: !2615)
!2614 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2615 = !{!2616, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2655, !2656, !2657, !2762, !2763, !2775, !2867, !2868, !2880}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2613, file: !2614, line: 57, baseType: !2617, size: 576)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2614, line: 23, size: 576, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2617, file: !2614, line: 24, baseType: !987, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, scope: !2617, file: !2614, line: 25, baseType: !2621, size: 512, offset: 64)
!2621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2617, file: !2614, line: 25, size: 512, elements: !2622)
!2622 = !{!2623, !2632}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2621, file: !2614, line: 26, baseType: !2624, size: 480)
!2624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2625, size: 480, elements: !2630)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2614, line: 17, size: 96, elements: !2626)
!2626 = !{!2627, !2628, !2629}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2625, file: !2614, line: 18, baseType: !987, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2625, file: !2614, line: 19, baseType: !987, size: 32, offset: 32)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2625, file: !2614, line: 20, baseType: !987, size: 32, offset: 64)
!2630 = !{!2631}
!2631 = !DISubrange(count: 5)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2621, file: !2614, line: 27, baseType: !2633, size: 128)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2621, file: !2614, line: 27, size: 128, elements: !2634)
!2634 = !{!2635, !2637}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2633, file: !2614, line: 28, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2633, file: !2614, line: 29, baseType: !2636, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2613, file: !2614, line: 58, baseType: !2617, size: 576, offset: 576)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2613, file: !2614, line: 59, baseType: !2617, size: 576, offset: 1152)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2613, file: !2614, line: 60, baseType: !383, size: 32, offset: 1728)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2613, file: !2614, line: 61, baseType: !2612, size: 64, offset: 1792)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2613, file: !2614, line: 62, baseType: !32, size: 32, offset: 1856)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2613, file: !2614, line: 63, baseType: !1382, size: 32, offset: 1888)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2613, file: !2614, line: 64, baseType: !1390, size: 32, offset: 1920)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2613, file: !2614, line: 65, baseType: !2646, size: 192, offset: 1984)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2647, line: 7, size: 192, elements: !2648)
!2647 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2648 = !{!2649, !2650, !2654}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2646, file: !2647, line: 8, baseType: !371, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2646, file: !2647, line: 9, baseType: !2651, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2653)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2647, line: 5, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2646, file: !2647, line: 10, baseType: !7, size: 32, offset: 128)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2613, file: !2614, line: 66, baseType: !312, size: 64, offset: 2176)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2613, file: !2614, line: 74, baseType: !284, size: 128, offset: 2240)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2613, file: !2614, line: 75, baseType: !2658, size: 64, offset: 2368)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2660, line: 189, size: 1664, elements: !2661)
!2660 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2661 = !{!2662, !2663, !2666, !2671, !2672, !2675, !2676, !2681, !2682, !2683, !2684, !2686, !2687, !2688, !2689, !2690, !2726, !2747}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2659, file: !2660, line: 190, baseType: !568, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2659, file: !2660, line: 191, baseType: !2664, size: 32, offset: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2660, line: 28, baseType: !2665)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2545)
!2666 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 192, baseType: !2667, size: 192, offset: 64)
!2667 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 192, size: 192, elements: !2668)
!2668 = !{!2669, !2670}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2667, file: !2660, line: 193, baseType: !284, size: 128)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2667, file: !2660, line: 194, baseType: !433, size: 192, align: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2659, file: !2660, line: 199, baseType: !1755, size: 256, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2659, file: !2660, line: 200, baseType: !2673, size: 64, offset: 512)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2660, line: 200, flags: DIFlagFwdDecl)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2659, file: !2660, line: 201, baseType: !591, size: 64, offset: 576)
!2676 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 202, baseType: !2677, size: 64, offset: 640)
!2677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 202, size: 64, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2677, file: !2660, line: 203, baseType: !1483, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2677, file: !2660, line: 204, baseType: !1483, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2659, file: !2660, line: 206, baseType: !1483, size: 64, offset: 704)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2659, file: !2660, line: 207, baseType: !1382, size: 32, offset: 768)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2659, file: !2660, line: 208, baseType: !1390, size: 32, offset: 800)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2659, file: !2660, line: 209, baseType: !2685, size: 32, offset: 832)
!2685 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2660, line: 31, baseType: !1502)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2659, file: !2660, line: 210, baseType: !476, size: 16, offset: 864)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2659, file: !2660, line: 211, baseType: !476, size: 16, offset: 880)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2659, file: !2660, line: 215, baseType: !625, size: 16, offset: 896)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2659, file: !2660, line: 222, baseType: !312, size: 64, offset: 960)
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 239, baseType: !2691, size: 320, offset: 1024)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 239, size: 320, elements: !2692)
!2692 = !{!2693, !2718}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2691, file: !2660, line: 240, baseType: !2694, size: 320)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2660, line: 108, size: 320, elements: !2695)
!2695 = !{!2696, !2697, !2707, !2710, !2717}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2694, file: !2660, line: 110, baseType: !312, size: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, scope: !2694, file: !2660, line: 111, baseType: !2698, size: 64, offset: 64)
!2698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2694, file: !2660, line: 111, size: 64, elements: !2699)
!2699 = !{!2700, !2706}
!2700 = !DIDerivedType(tag: DW_TAG_member, scope: !2698, file: !2660, line: 112, baseType: !2701, size: 64)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2698, file: !2660, line: 112, size: 64, elements: !2702)
!2702 = !{!2703, !2704}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2701, file: !2660, line: 114, baseType: !581, size: 16)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2701, file: !2660, line: 115, baseType: !2705, size: 48, offset: 16)
!2705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2698, file: !2660, line: 121, baseType: !312, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2694, file: !2660, line: 123, baseType: !2708, size: 64, offset: 128)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2660, line: 96, flags: DIFlagFwdDecl)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2694, file: !2660, line: 124, baseType: !2711, size: 64, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2660, line: 102, size: 192, elements: !2713)
!2713 = !{!2714, !2715, !2716}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2712, file: !2660, line: 103, baseType: !299, size: 128, align: 64)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2712, file: !2660, line: 104, baseType: !568, size: 32, offset: 128)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2712, file: !2660, line: 105, baseType: !771, size: 8, offset: 160)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2694, file: !2660, line: 125, baseType: !292, size: 64, offset: 256)
!2718 = !DIDerivedType(tag: DW_TAG_member, scope: !2691, file: !2660, line: 241, baseType: !2719, size: 320)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2691, file: !2660, line: 241, size: 320, elements: !2720)
!2720 = !{!2721, !2722, !2723, !2724, !2725}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2719, file: !2660, line: 242, baseType: !312, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2719, file: !2660, line: 243, baseType: !312, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2719, file: !2660, line: 244, baseType: !2708, size: 64, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2719, file: !2660, line: 245, baseType: !2711, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2719, file: !2660, line: 246, baseType: !1038, size: 64, offset: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !2660, line: 254, baseType: !2727, size: 256, offset: 1344)
!2727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !2660, line: 254, size: 256, elements: !2728)
!2728 = !{!2729, !2735}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2727, file: !2660, line: 255, baseType: !2730, size: 256)
!2730 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2660, line: 128, size: 256, elements: !2731)
!2731 = !{!2732, !2733}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2730, file: !2660, line: 129, baseType: !591, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2730, file: !2660, line: 130, baseType: !2734, size: 256)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2272)
!2735 = !DIDerivedType(tag: DW_TAG_member, scope: !2727, file: !2660, line: 256, baseType: !2736, size: 256)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2727, file: !2660, line: 256, size: 256, elements: !2737)
!2737 = !{!2738, !2739}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2736, file: !2660, line: 258, baseType: !284, size: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2736, file: !2660, line: 259, baseType: !2740, size: 128, offset: 128)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2741, line: 22, size: 128, elements: !2742)
!2741 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2742 = !{!2743, !2746}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2740, file: !2741, line: 23, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2741, line: 23, flags: DIFlagFwdDecl)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2740, file: !2741, line: 24, baseType: !312, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2659, file: !2660, line: 274, baseType: !2748, size: 64, offset: 1600)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2660, line: 170, size: 192, elements: !2750)
!2750 = !{!2751, !2760, !2761}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2749, file: !2660, line: 171, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2660, line: 165, baseType: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!32, !2658, !2756, !2758, !2658}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2709)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2730)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2749, file: !2660, line: 172, baseType: !2658, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2749, file: !2660, line: 173, baseType: !2708, size: 64, offset: 128)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2613, file: !2614, line: 76, baseType: !1755, size: 256, offset: 2432)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2613, file: !2614, line: 83, baseType: !2764, size: 256, offset: 2688)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2765, line: 102, size: 256, elements: !2766)
!2765 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2766 = !{!2767, !2768, !2769}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2764, file: !2765, line: 103, baseType: !371, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2764, file: !2765, line: 104, baseType: !284, size: 128, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2764, file: !2765, line: 105, baseType: !2770, size: 64, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2765, line: 21, baseType: !2771)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DISubroutineType(types: !2773)
!2773 = !{null, !2774}
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2613, file: !2614, line: 85, baseType: !2776, size: 768, offset: 2944)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2777, line: 156, size: 768, elements: !2778)
!2777 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2778 = !{!2779, !2784}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2776, file: !2777, line: 157, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!32, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2776, file: !2777, line: 158, baseType: !2785, size: 704, offset: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2777, line: 150, size: 704, elements: !2786)
!2786 = !{!2787, !2866}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2785, file: !2777, line: 152, baseType: !2788, size: 640)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2777, line: 131, size: 640, elements: !2789)
!2789 = !{!2790, !2823, !2835, !2836, !2856, !2857, !2859, !2865}
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2788, file: !2777, line: 132, baseType: !2791, size: 192)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2788, file: !2777, line: 132, size: 192, elements: !2792)
!2792 = !{!2793, !2822}
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !2791, file: !2777, line: 133, baseType: !2794, size: 192)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2791, file: !2777, line: 133, size: 192, elements: !2795)
!2795 = !{!2796, !2819, !2820, !2821}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2794, file: !2777, line: 134, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2777, line: 112, size: 512, elements: !2799)
!2799 = !{!2800, !2801, !2802, !2803, !2804, !2805, !2811, !2817, !2818}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2798, file: !2777, line: 113, baseType: !292, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2798, file: !2777, line: 114, baseType: !591, size: 64, offset: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2798, file: !2777, line: 115, baseType: !32, size: 32, offset: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2798, file: !2777, line: 116, baseType: !1379, size: 16, offset: 160)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2798, file: !2777, line: 117, baseType: !2797, size: 64, offset: 192)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2798, file: !2777, line: 118, baseType: !2806, size: 64, offset: 256)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2777, line: 47, baseType: !2808)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!32, !2797, !32, !591, !2810, !1694}
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2798, file: !2777, line: 119, baseType: !2812, size: 64, offset: 320)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2777, line: 94, size: 192, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2813, file: !2777, line: 95, baseType: !383, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2813, file: !2777, line: 96, baseType: !1889, size: 128, offset: 64)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2798, file: !2777, line: 120, baseType: !591, size: 64, offset: 384)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2798, file: !2777, line: 121, baseType: !591, size: 64, offset: 448)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2794, file: !2777, line: 135, baseType: !32, size: 32, offset: 64)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2794, file: !2777, line: 136, baseType: !32, size: 32, offset: 96)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2794, file: !2777, line: 137, baseType: !32, size: 32, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2791, file: !2777, line: 139, baseType: !299, size: 128, align: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2788, file: !2777, line: 141, baseType: !2824, size: 64, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2826, line: 26, size: 192, elements: !2827)
!2826 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2825, file: !2826, line: 27, baseType: !7, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2825, file: !2826, line: 28, baseType: !2830, size: 128, offset: 64)
!2830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2831, line: 43, size: 128, elements: !2832)
!2831 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2830, file: !2831, line: 44, baseType: !1761)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2830, file: !2831, line: 45, baseType: !284, size: 128)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2788, file: !2777, line: 142, baseType: !2797, size: 64, offset: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2788, file: !2777, line: 143, baseType: !2837, size: 64, offset: 320)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2777, line: 161, size: 960, elements: !2839)
!2839 = !{!2840, !2841, !2845, !2852}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2838, file: !2777, line: 162, baseType: !2776, size: 768)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2838, file: !2777, line: 163, baseType: !2842, size: 64, offset: 768)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!2783, !2837}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2838, file: !2777, line: 164, baseType: !2846, size: 64, offset: 832)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !2849, !2797, !2850, !2851}
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2838, file: !2777, line: 167, baseType: !2853, size: 64, offset: 896)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!32, !2849, !2797}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2788, file: !2777, line: 144, baseType: !2783, size: 64, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2788, file: !2777, line: 145, baseType: !2858, size: 64, offset: 448)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2788, file: !2777, line: 146, baseType: !2860, size: 64, offset: 512)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2777, line: 124, size: 256, elements: !2862)
!2862 = !{!2863, !2864}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2861, file: !2777, line: 125, baseType: !433, size: 192, align: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2861, file: !2777, line: 126, baseType: !2849, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2788, file: !2777, line: 147, baseType: !1581, size: 64, offset: 576)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2785, file: !2777, line: 153, baseType: !1750, size: 64, offset: 640)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2613, file: !2614, line: 86, baseType: !2849, size: 64, offset: 3712)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2613, file: !2614, line: 88, baseType: !2869, size: 64, offset: 3776)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2614, line: 92, size: 576, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2870, file: !2614, line: 93, baseType: !276, size: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2870, file: !2614, line: 94, baseType: !2612, size: 64, offset: 128)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2870, file: !2614, line: 95, baseType: !1382, size: 32, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2870, file: !2614, line: 96, baseType: !32, size: 32, offset: 224)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2870, file: !2614, line: 97, baseType: !2877, size: 320, offset: 256)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2878)
!2878 = !{!2879}
!2879 = !DISubrange(count: 10)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2613, file: !2614, line: 89, baseType: !2881, size: 320, offset: 3840)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2878)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2590, file: !2591, line: 33, baseType: !2869, size: 64, offset: 768)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !2590, file: !2591, line: 34, baseType: !32, size: 32, offset: 832)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2590, file: !2591, line: 35, baseType: !2646, size: 192, offset: 896)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2327, file: !2328, line: 872, baseType: !2886, size: 512, offset: 6016)
!2886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2272)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2327, file: !2328, line: 873, baseType: !284, size: 128, offset: 6528)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2327, file: !2328, line: 874, baseType: !284, size: 128, offset: 6656)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2327, file: !2328, line: 876, baseType: !2824, size: 64, offset: 6784)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2327, file: !2328, line: 879, baseType: !1001, size: 64, offset: 6848)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2327, file: !2328, line: 882, baseType: !1001, size: 64, offset: 6912)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2327, file: !2328, line: 884, baseType: !331, size: 64, offset: 6976)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2327, file: !2328, line: 885, baseType: !331, size: 64, offset: 7040)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2327, file: !2328, line: 890, baseType: !331, size: 64, offset: 7104)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2327, file: !2328, line: 891, baseType: !2896, size: 128, offset: 7168)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2328, line: 242, size: 128, elements: !2897)
!2897 = !{!2898, !2899, !2900}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2896, file: !2328, line: 244, baseType: !331, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2896, file: !2328, line: 245, baseType: !331, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2896, file: !2328, line: 246, baseType: !1761, offset: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2327, file: !2328, line: 900, baseType: !312, size: 64, offset: 7296)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2327, file: !2328, line: 901, baseType: !312, size: 64, offset: 7360)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2327, file: !2328, line: 904, baseType: !331, size: 64, offset: 7424)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2327, file: !2328, line: 907, baseType: !331, size: 64, offset: 7488)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2327, file: !2328, line: 910, baseType: !312, size: 64, offset: 7552)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2327, file: !2328, line: 911, baseType: !312, size: 64, offset: 7616)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2327, file: !2328, line: 914, baseType: !2908, size: 640, offset: 7680)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2909, line: 123, size: 640, elements: !2910)
!2909 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2910 = !{!2911, !2917, !2918}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2908, file: !2909, line: 124, baseType: !2912, size: 576)
!2912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2913, size: 576, elements: !1592)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2909, line: 108, size: 192, elements: !2914)
!2914 = !{!2915, !2916}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2913, file: !2909, line: 109, baseType: !331, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2913, file: !2909, line: 110, baseType: !2446, size: 128, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2908, file: !2909, line: 125, baseType: !7, size: 32, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2908, file: !2909, line: 126, baseType: !7, size: 32, offset: 608)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2327, file: !2328, line: 917, baseType: !2920, size: 192, offset: 8320)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2909, line: 134, size: 192, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2920, file: !2909, line: 135, baseType: !299, size: 128, align: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2920, file: !2909, line: 136, baseType: !7, size: 32, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2327, file: !2328, line: 923, baseType: !2925, size: 64, offset: 8512)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2927)
!2927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2928, line: 111, size: 1280, elements: !2929)
!2928 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2968}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2927, file: !2928, line: 112, baseType: !383, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2927, file: !2928, line: 120, baseType: !1382, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2927, file: !2928, line: 121, baseType: !1390, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2927, file: !2928, line: 122, baseType: !1382, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2927, file: !2928, line: 123, baseType: !1390, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2927, file: !2928, line: 124, baseType: !1382, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2927, file: !2928, line: 125, baseType: !1390, size: 32, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2927, file: !2928, line: 126, baseType: !1382, size: 32, offset: 224)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2927, file: !2928, line: 127, baseType: !1390, size: 32, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2927, file: !2928, line: 128, baseType: !7, size: 32, offset: 288)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2927, file: !2928, line: 129, baseType: !2941, size: 64, offset: 320)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2942, line: 26, baseType: !2943)
!2942 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2942, line: 24, size: 64, elements: !2944)
!2944 = !{!2945}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2943, file: !2942, line: 25, baseType: !2946, size: 64)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2947)
!2947 = !{!2948}
!2948 = !DISubrange(count: 2)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2927, file: !2928, line: 130, baseType: !2941, size: 64, offset: 384)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2927, file: !2928, line: 131, baseType: !2941, size: 64, offset: 448)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2927, file: !2928, line: 132, baseType: !2941, size: 64, offset: 512)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2927, file: !2928, line: 133, baseType: !2941, size: 64, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2927, file: !2928, line: 135, baseType: !482, size: 8, offset: 640)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2927, file: !2928, line: 137, baseType: !2658, size: 64, offset: 704)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2927, file: !2928, line: 138, baseType: !2658, size: 64, offset: 768)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2927, file: !2928, line: 139, baseType: !2658, size: 64, offset: 832)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2927, file: !2928, line: 140, baseType: !2658, size: 64, offset: 896)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2927, file: !2928, line: 145, baseType: !1953, size: 64, offset: 960)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2927, file: !2928, line: 146, baseType: !2612, size: 64, offset: 1024)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2927, file: !2928, line: 147, baseType: !2961, size: 64, offset: 1088)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2928, line: 25, size: 64, elements: !2963)
!2963 = !{!2964, !2965, !2966}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2962, file: !2928, line: 26, baseType: !383, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2962, file: !2928, line: 27, baseType: !32, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2962, file: !2928, line: 28, baseType: !2967, offset: 64)
!2967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2968 = !DIDerivedType(tag: DW_TAG_member, scope: !2927, file: !2928, line: 149, baseType: !2969, size: 128, offset: 1152)
!2969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2927, file: !2928, line: 149, size: 128, elements: !2970)
!2970 = !{!2971, !2972}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2969, file: !2928, line: 150, baseType: !32, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2969, file: !2928, line: 151, baseType: !299, size: 128, align: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2327, file: !2328, line: 926, baseType: !2925, size: 64, offset: 8576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2327, file: !2328, line: 929, baseType: !2925, size: 64, offset: 8640)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2327, file: !2328, line: 933, baseType: !2658, size: 64, offset: 8704)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2327, file: !2328, line: 943, baseType: !267, size: 128, offset: 8768)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2327, file: !2328, line: 945, baseType: !2978, size: 64, offset: 8896)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2328, line: 49, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2327, file: !2328, line: 956, baseType: !2981, size: 64, offset: 8960)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2328, line: 45, flags: DIFlagFwdDecl)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !2328, line: 959, baseType: !2984, size: 64, offset: 9024)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2328, line: 959, flags: DIFlagFwdDecl)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2327, file: !2328, line: 962, baseType: !2987, size: 64, offset: 9088)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2328, line: 66, flags: DIFlagFwdDecl)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2327, file: !2328, line: 966, baseType: !2990, size: 64, offset: 9152)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2992, line: 31, size: 576, elements: !2993)
!2992 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2993 = !{!2994, !2995, !2998, !3001, !3004, !3005, !3688, !3691, !3692}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2991, file: !2992, line: 32, baseType: !383, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2991, file: !2992, line: 33, baseType: !2996, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2992, line: 9, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2991, file: !2992, line: 34, baseType: !2999, size: 64, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2992, line: 10, flags: DIFlagFwdDecl)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2991, file: !2992, line: 35, baseType: !3002, size: 64, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2992, line: 8, flags: DIFlagFwdDecl)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2991, file: !2992, line: 36, baseType: !2589, size: 64, offset: 256)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2991, file: !2992, line: 37, baseType: !3006, size: 64, offset: 320)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !3008, line: 56, size: 16896, elements: !3009)
!3008 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!3009 = !{!3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3031, !3032, !3033, !3034, !3035, !3038, !3040, !3041, !3056, !3057, !3058, !3059, !3069, !3139, !3145, !3151, !3164, !3473, !3627, !3634, !3637, !3660, !3661, !3687}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !3007, file: !3008, line: 60, baseType: !568, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3007, file: !3008, line: 63, baseType: !568, size: 32, offset: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !3007, file: !3008, line: 66, baseType: !1670, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !3007, file: !3008, line: 68, baseType: !7, size: 32, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !3007, file: !3008, line: 70, baseType: !7, size: 32, offset: 96)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !3007, file: !3008, line: 71, baseType: !32, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !3007, file: !3008, line: 73, baseType: !1670, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !3007, file: !3008, line: 74, baseType: !383, size: 32, offset: 160)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3007, file: !3008, line: 76, baseType: !284, size: 128, offset: 192)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !3007, file: !3008, line: 77, baseType: !284, size: 128, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !3007, file: !3008, line: 83, baseType: !1323, size: 64, offset: 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !3007, file: !3008, line: 86, baseType: !2711, size: 64, offset: 512)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3007, file: !3008, line: 88, baseType: !2612, size: 64, offset: 576)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3007, file: !3008, line: 89, baseType: !2869, size: 64, offset: 640)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !3007, file: !3008, line: 90, baseType: !2599, size: 192, offset: 704)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3007, file: !3008, line: 92, baseType: !2646, size: 192, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !3007, file: !3008, line: 94, baseType: !284, size: 128, offset: 1088)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !3007, file: !3008, line: 95, baseType: !3028, size: 64, offset: 1216)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3030, line: 123, flags: DIFlagFwdDecl)
!3030 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !3007, file: !3008, line: 96, baseType: !3028, size: 64, offset: 1280)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !3007, file: !3008, line: 99, baseType: !2776, size: 768, offset: 1344)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !3007, file: !3008, line: 102, baseType: !445, size: 64, offset: 2112)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !3007, file: !3008, line: 103, baseType: !445, size: 64, offset: 2176)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !3007, file: !3008, line: 105, baseType: !3036, size: 64, offset: 2240)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !3008, line: 48, flags: DIFlagFwdDecl)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !3007, file: !3008, line: 107, baseType: !3039, size: 64, offset: 2304)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !3007, file: !3008, line: 108, baseType: !3039, size: 64, offset: 2368)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !3007, file: !3008, line: 109, baseType: !3042, size: 64, offset: 2432)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3043, line: 70, size: 64, elements: !3044)
!3043 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !{!3045}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3042, file: !3043, line: 71, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3043, line: 54, size: 192, elements: !3048)
!3048 = !{!3049, !3054, !3055}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3047, file: !3043, line: 55, baseType: !3050, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3043, line: 51, baseType: !3051)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!32, !3046, !312, !591}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3047, file: !3043, line: 56, baseType: !3046, size: 64, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3047, file: !3043, line: 57, baseType: !32, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !3007, file: !3008, line: 114, baseType: !987, size: 32, offset: 2496)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !3007, file: !3008, line: 116, baseType: !290, size: 64, offset: 2560)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !3007, file: !3008, line: 119, baseType: !284, size: 128, offset: 2624)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !3007, file: !3008, line: 121, baseType: !3060, size: 256, offset: 2752)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3061, line: 8, size: 256, elements: !3062)
!3061 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3062 = !{!3063, !3064, !3065, !3066}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3060, file: !3061, line: 10, baseType: !2849, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3060, file: !3061, line: 12, baseType: !32, size: 32, offset: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3060, file: !3061, line: 15, baseType: !1001, size: 64, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3060, file: !3061, line: 16, baseType: !3067, size: 64, offset: 192)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3061, line: 6, flags: DIFlagFwdDecl)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !3007, file: !3008, line: 122, baseType: !3070, size: 832, offset: 3008)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3071, line: 7, size: 832, elements: !3072)
!3071 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073, !3080, !3091, !3099, !3107, !3108, !3116, !3124, !3125, !3126, !3127, !3128, !3134}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3070, file: !3071, line: 8, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3076, line: 92, size: 1024, elements: !3077)
!3076 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3075, file: !3076, line: 93, baseType: !3079, size: 1024)
!3079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3070, file: !3071, line: 9, baseType: !3081, size: 64, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3076, line: 51, size: 2368, elements: !3083)
!3083 = !{!3084, !3088}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3082, file: !3076, line: 53, baseType: !3085, size: 2368)
!3085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3086)
!3086 = !{!3087}
!3087 = !DISubrange(count: 37)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3082, file: !3076, line: 54, baseType: !3089, offset: 2368)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3090, line: 68, elements: !1587)
!3090 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3070, file: !3071, line: 10, baseType: !3092, size: 64, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3093, size: 64)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3076, line: 104, size: 7936, elements: !3094)
!3094 = !{!3095}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3093, file: !3076, line: 105, baseType: !3096, size: 7936)
!3096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3097)
!3097 = !{!3098}
!3098 = !DISubrange(count: 124)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3070, file: !3071, line: 11, baseType: !3100, size: 64, offset: 192)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3076, line: 98, size: 576, elements: !3102)
!3102 = !{!3103}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3101, file: !3076, line: 99, baseType: !3104, size: 576)
!3104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3105)
!3105 = !{!3106}
!3106 = !DISubrange(count: 9)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3070, file: !3071, line: 12, baseType: !3100, size: 64, offset: 256)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3070, file: !3071, line: 13, baseType: !3109, size: 64, offset: 320)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3076, line: 59, size: 1792, elements: !3111)
!3111 = !{!3112}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3110, file: !3076, line: 60, baseType: !3113, size: 1792)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3114)
!3114 = !{!3115}
!3115 = !DISubrange(count: 28)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3070, file: !3071, line: 14, baseType: !3117, size: 64, offset: 384)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3076, line: 64, size: 32768, elements: !3119)
!3119 = !{!3120}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3118, file: !3076, line: 65, baseType: !3121, size: 32768)
!3121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3122)
!3122 = !{!3123}
!3123 = !DISubrange(count: 512)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3070, file: !3071, line: 17, baseType: !3028, size: 64, offset: 448)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3070, file: !3071, line: 18, baseType: !3100, size: 64, offset: 512)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3070, file: !3071, line: 19, baseType: !3100, size: 64, offset: 576)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3070, file: !3071, line: 20, baseType: !3081, size: 64, offset: 640)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3070, file: !3071, line: 21, baseType: !3129, size: 64, offset: 704)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3076, line: 71, size: 384, elements: !3131)
!3131 = !{!3132}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3130, file: !3076, line: 72, baseType: !3133, size: 384)
!3133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3070, file: !3071, line: 22, baseType: !3135, size: 64, offset: 768)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3076, line: 81, size: 32768, elements: !3137)
!3137 = !{!3138}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3136, file: !3076, line: 82, baseType: !3121, size: 32768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3007, file: !3008, line: 123, baseType: !3140, size: 256, offset: 3840)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3141, line: 11, size: 256, elements: !3142)
!3141 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3140, file: !3141, line: 12, baseType: !1665, size: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3140, file: !3141, line: 13, baseType: !1581, size: 64, offset: 192)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !3007, file: !3008, line: 124, baseType: !3146, size: 128, offset: 4096)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3147, line: 9, size: 128, elements: !3148)
!3147 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3146, file: !3147, line: 10, baseType: !32, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3146, file: !3147, line: 11, baseType: !2849, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !3007, file: !3008, line: 125, baseType: !3152, size: 512, offset: 4224)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3153, line: 11, size: 512, elements: !3154)
!3153 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3154 = !{!3155, !3156, !3157, !3158, !3159}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3152, file: !3153, line: 12, baseType: !1750, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3152, file: !3153, line: 13, baseType: !3039, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3152, file: !3153, line: 15, baseType: !7, size: 32, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3152, file: !3153, line: 16, baseType: !987, size: 32, offset: 160)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3152, file: !3153, line: 17, baseType: !3160, size: 320, offset: 192)
!3160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3043, line: 65, size: 320, elements: !3161)
!3161 = !{!3162, !3163}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3160, file: !3043, line: 66, baseType: !1755, size: 256)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3160, file: !3043, line: 67, baseType: !3046, size: 64, offset: 256)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !3007, file: !3008, line: 126, baseType: !3165, size: 5440, offset: 4736)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3166, line: 43, size: 5440, elements: !3167)
!3166 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3167 = !{!3168, !3169, !3170, !3171, !3172, !3173, !3176, !3177, !3180, !3181, !3182, !3183, !3184, !3185, !3187, !3188, !3191, !3192, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3417, !3418, !3419, !3420, !3421, !3429, !3430, !3431, !3435, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3455, !3456, !3458, !3459, !3462, !3463, !3464, !3465, !3466}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3165, file: !3166, line: 45, baseType: !2849, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3165, file: !3166, line: 46, baseType: !2849, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3165, file: !3166, line: 47, baseType: !2849, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3165, file: !3166, line: 48, baseType: !2849, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3165, file: !3166, line: 49, baseType: !2849, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3165, file: !3166, line: 51, baseType: !3174, size: 64, offset: 320)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3166, line: 16, flags: DIFlagFwdDecl)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3165, file: !3166, line: 52, baseType: !3174, size: 64, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3165, file: !3166, line: 53, baseType: !3178, size: 64, offset: 448)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3166, line: 53, flags: DIFlagFwdDecl)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3165, file: !3166, line: 54, baseType: !1665, size: 192, offset: 512)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3165, file: !3166, line: 62, baseType: !771, size: 8, offset: 704)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3165, file: !3166, line: 66, baseType: !3039, size: 64, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3165, file: !3166, line: 67, baseType: !771, size: 8, offset: 832)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3165, file: !3166, line: 68, baseType: !445, size: 64, offset: 896)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3165, file: !3166, line: 70, baseType: !3186, size: 64, offset: 960)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3165, file: !3166, line: 71, baseType: !445, size: 64, offset: 1024)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3165, file: !3166, line: 73, baseType: !3189, size: 64, offset: 1088)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3166, line: 73, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3165, file: !3166, line: 74, baseType: !3186, size: 64, offset: 1152)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3165, file: !3166, line: 75, baseType: !3193, size: 64, offset: 1216)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3195, line: 9, size: 1728, elements: !3196)
!3195 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3196 = !{!3197, !3198, !3199, !3200, !3201, !3328, !3329, !3330, !3331, !3332}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3194, file: !3195, line: 11, baseType: !998, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3194, file: !3195, line: 12, baseType: !998, size: 64, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3194, file: !3195, line: 13, baseType: !32, size: 32, offset: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3194, file: !3195, line: 14, baseType: !32, size: 32, offset: 160)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3194, file: !3195, line: 15, baseType: !3202, size: 64, offset: 192)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3203, size: 64)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3195, line: 98, size: 960, elements: !3204)
!3204 = !{!3205, !3206, !3278, !3282, !3283, !3284, !3285, !3326, !3327}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3203, file: !3195, line: 99, baseType: !7, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3203, file: !3195, line: 101, baseType: !3207, size: 64, offset: 64)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !3210, !3276}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3195, line: 77, size: 1408, elements: !3212)
!3212 = !{!3213, !3219, !3252, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3211, file: !3195, line: 78, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3215, line: 17, size: 64, elements: !3216)
!3215 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !{!3217}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3214, file: !3215, line: 18, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3211, file: !3195, line: 82, baseType: !3220, size: 352, offset: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3211, file: !3195, line: 79, size: 352, elements: !3221)
!3221 = !{!3222, !3232}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3220, file: !3195, line: 80, baseType: !3223, size: 160)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3195, line: 41, size: 160, elements: !3224)
!3224 = !{!3225, !3227, !3228, !3229, !3230, !3231}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3223, file: !3195, line: 42, baseType: !3226, size: 32)
!3226 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3223, file: !3195, line: 43, baseType: !3226, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3223, file: !3195, line: 44, baseType: !987, size: 32, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3223, file: !3195, line: 45, baseType: !987, size: 32, offset: 96)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3223, file: !3195, line: 46, baseType: !535, size: 16, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3223, file: !3195, line: 47, baseType: !581, size: 16, offset: 144)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3220, file: !3195, line: 81, baseType: !3233, size: 352)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3195, line: 50, size: 352, elements: !3234)
!3234 = !{!3235, !3248, !3249, !3250, !3251}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3233, file: !3195, line: 51, baseType: !3236, size: 128)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3237, line: 33, size: 128, elements: !3238)
!3237 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3238 = !{!3239}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3236, file: !3237, line: 40, baseType: !3240, size: 128)
!3240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !3237, line: 34, size: 128, elements: !3241)
!3241 = !{!3242, !3244, !3246}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3240, file: !3237, line: 35, baseType: !3243, size: 128)
!3243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3240, file: !3237, line: 37, baseType: !3245, size: 128)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2433)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3240, file: !3237, line: 38, baseType: !3247, size: 128)
!3247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3226, size: 128, elements: !2272)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3233, file: !3195, line: 52, baseType: !3236, size: 128, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3233, file: !3195, line: 53, baseType: !987, size: 32, offset: 256)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3233, file: !3195, line: 54, baseType: !3226, size: 32, offset: 288)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3233, file: !3195, line: 55, baseType: !987, size: 32, offset: 320)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3211, file: !3195, line: 83, baseType: !3253, size: 320, offset: 448)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3254, line: 11, size: 320, elements: !3255)
!3254 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3255 = !{!3256, !3257, !3258, !3263}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3253, file: !3254, line: 16, baseType: !276, size: 128)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3253, file: !3254, line: 17, baseType: !312, size: 64, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3253, file: !3254, line: 18, baseType: !3259, size: 64, offset: 192)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !3262}
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3253, file: !3254, line: 19, baseType: !987, size: 32, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3211, file: !3195, line: 84, baseType: !1670, offset: 768)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3211, file: !3195, line: 85, baseType: !568, size: 32, offset: 768)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3211, file: !3195, line: 86, baseType: !1750, size: 64, offset: 832)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3211, file: !3195, line: 87, baseType: !415, size: 64, offset: 896)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3211, file: !3195, line: 88, baseType: !415, size: 64, offset: 960)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3211, file: !3195, line: 89, baseType: !453, size: 64, offset: 1024)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3211, file: !3195, line: 90, baseType: !32, size: 32, offset: 1088)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3211, file: !3195, line: 91, baseType: !32, size: 32, offset: 1120)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3211, file: !3195, line: 92, baseType: !481, size: 8, offset: 1152)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3211, file: !3195, line: 93, baseType: !581, size: 16, offset: 1168)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3211, file: !3195, line: 94, baseType: !3193, size: 64, offset: 1216)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3211, file: !3195, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3203, file: !3195, line: 103, baseType: !3279, size: 64, offset: 128)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{null, !3210}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3203, file: !3195, line: 104, baseType: !3259, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3203, file: !3195, line: 105, baseType: !2051, size: 64, offset: 256)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3203, file: !3195, line: 106, baseType: !292, size: 64, offset: 320)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3203, file: !3195, line: 107, baseType: !3286, size: 320, offset: 384)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3215, line: 56, size: 320, elements: !3287)
!3287 = !{!3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3300, !3302}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3286, file: !3215, line: 57, baseType: !581, size: 16)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3286, file: !3215, line: 58, baseType: !581, size: 16, offset: 16)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3286, file: !3215, line: 59, baseType: !581, size: 16, offset: 32)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3286, file: !3215, line: 60, baseType: !581, size: 16, offset: 48)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3286, file: !3215, line: 61, baseType: !7, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3286, file: !3215, line: 62, baseType: !581, size: 16, offset: 96)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3286, file: !3215, line: 63, baseType: !771, size: 8, offset: 112)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3286, file: !3215, line: 64, baseType: !3296, size: 64, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3215, line: 38, baseType: !3297)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!987, !3276, !987, !987}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3286, file: !3215, line: 65, baseType: !3301, size: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3215, line: 39, baseType: !3297)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3286, file: !3215, line: 66, baseType: !3303, size: 64, offset: 256)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3215, line: 40, baseType: !3304)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 64)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!32, !3307, !3276}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3215, line: 33, size: 128, elements: !3309)
!3309 = !{!3310, !3325}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3308, file: !3215, line: 34, baseType: !3311, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3215, line: 81, size: 1024, elements: !3313)
!3313 = !{!3314, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3312, file: !3215, line: 82, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3215, line: 26, flags: DIFlagFwdDecl)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3312, file: !3215, line: 83, baseType: !7, size: 32, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3312, file: !3215, line: 84, baseType: !7, size: 32, offset: 96)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3312, file: !3215, line: 85, baseType: !3286, size: 320, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3312, file: !3215, line: 86, baseType: !771, size: 8, offset: 448)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3312, file: !3215, line: 87, baseType: !2764, size: 256, offset: 512)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3312, file: !3215, line: 88, baseType: !1665, size: 192, offset: 768)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3312, file: !3215, line: 89, baseType: !1670, offset: 960)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3312, file: !3215, line: 90, baseType: !383, size: 32, offset: 960)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3308, file: !3215, line: 35, baseType: !3276, size: 64, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3203, file: !3195, line: 108, baseType: !568, size: 32, offset: 704)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3203, file: !3195, line: 109, baseType: !2825, size: 192, offset: 768)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3194, file: !3195, line: 16, baseType: !3006, size: 64, offset: 256)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3194, file: !3195, line: 17, baseType: !771, size: 8, offset: 320)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3194, file: !3195, line: 19, baseType: !3312, size: 1024, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3194, file: !3195, line: 22, baseType: !371, size: 64, offset: 1408)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3194, file: !3195, line: 23, baseType: !2764, size: 256, offset: 1472)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3165, file: !3166, line: 87, baseType: !32, size: 32, offset: 1280)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3165, file: !3166, line: 88, baseType: !32, size: 32, offset: 1312)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3165, file: !3166, line: 89, baseType: !32, size: 32, offset: 1344)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3165, file: !3166, line: 90, baseType: !32, size: 32, offset: 1376)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3165, file: !3166, line: 91, baseType: !32, size: 32, offset: 1408)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3165, file: !3166, line: 92, baseType: !32, size: 32, offset: 1440)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3165, file: !3166, line: 94, baseType: !3340, size: 128, offset: 1472)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3166, line: 21, size: 128, elements: !3341)
!3341 = !{!3342, !3348, !3350}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3340, file: !3166, line: 22, baseType: !3343, size: 32)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3344)
!3344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3345)
!3345 = !{!3346, !3347}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3344, file: !1344, line: 803, baseType: !1343, size: 32)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3344, file: !1344, line: 804, baseType: !1670, offset: 32)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3340, file: !3166, line: 23, baseType: !3349, size: 64, offset: 32)
!3349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2947)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3340, file: !3166, line: 24, baseType: !771, size: 8, offset: 96)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3165, file: !3166, line: 96, baseType: !32, size: 32, offset: 1600)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3165, file: !3166, line: 97, baseType: !32, size: 32, offset: 1632)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3165, file: !3166, line: 99, baseType: !32, size: 32, offset: 1664)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3165, file: !3166, line: 100, baseType: !32, size: 32, offset: 1696)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3165, file: !3166, line: 101, baseType: !32, size: 32, offset: 1728)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3165, file: !3166, line: 102, baseType: !32, size: 32, offset: 1760)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3165, file: !3166, line: 103, baseType: !32, size: 32, offset: 1792)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3165, file: !3166, line: 104, baseType: !32, size: 32, offset: 1824)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3165, file: !3166, line: 106, baseType: !32, size: 32, offset: 1856)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3165, file: !3166, line: 107, baseType: !32, size: 32, offset: 1888)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3165, file: !3166, line: 111, baseType: !32, size: 32, offset: 1920)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3165, file: !3166, line: 112, baseType: !32, size: 32, offset: 1952)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3165, file: !3166, line: 114, baseType: !32, size: 32, offset: 1984)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3165, file: !3166, line: 116, baseType: !32, size: 32, offset: 2016)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3165, file: !3166, line: 117, baseType: !32, size: 32, offset: 2048)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3165, file: !3166, line: 121, baseType: !32, size: 32, offset: 2080)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3165, file: !3166, line: 122, baseType: !32, size: 32, offset: 2112)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3165, file: !3166, line: 123, baseType: !32, size: 32, offset: 2144)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3165, file: !3166, line: 124, baseType: !32, size: 32, offset: 2176)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3165, file: !3166, line: 125, baseType: !32, size: 32, offset: 2208)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3165, file: !3166, line: 126, baseType: !987, size: 32, offset: 2240)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3165, file: !3166, line: 128, baseType: !32, size: 32, offset: 2272)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3165, file: !3166, line: 129, baseType: !32, size: 32, offset: 2304)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3165, file: !3166, line: 130, baseType: !32, size: 32, offset: 2336)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3165, file: !3166, line: 132, baseType: !32, size: 32, offset: 2368)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3165, file: !3166, line: 133, baseType: !32, size: 32, offset: 2400)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3165, file: !3166, line: 134, baseType: !32, size: 32, offset: 2432)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3165, file: !3166, line: 135, baseType: !32, size: 32, offset: 2464)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3165, file: !3166, line: 136, baseType: !32, size: 32, offset: 2496)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3165, file: !3166, line: 137, baseType: !32, size: 32, offset: 2528)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3165, file: !3166, line: 138, baseType: !32, size: 32, offset: 2560)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3165, file: !3166, line: 139, baseType: !32, size: 32, offset: 2592)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3165, file: !3166, line: 140, baseType: !7, size: 32, offset: 2624)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3165, file: !3166, line: 141, baseType: !32, size: 32, offset: 2656)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3165, file: !3166, line: 142, baseType: !32, size: 32, offset: 2688)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3165, file: !3166, line: 143, baseType: !32, size: 32, offset: 2720)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3165, file: !3166, line: 144, baseType: !32, size: 32, offset: 2752)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3165, file: !3166, line: 145, baseType: !32, size: 32, offset: 2784)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3165, file: !3166, line: 146, baseType: !32, size: 32, offset: 2816)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3165, file: !3166, line: 147, baseType: !32, size: 32, offset: 2848)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3165, file: !3166, line: 148, baseType: !32, size: 32, offset: 2880)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3165, file: !3166, line: 149, baseType: !32, size: 32, offset: 2912)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3165, file: !3166, line: 150, baseType: !32, size: 32, offset: 2944)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3165, file: !3166, line: 151, baseType: !32, size: 32, offset: 2976)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3165, file: !3166, line: 152, baseType: !32, size: 32, offset: 3008)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3165, file: !3166, line: 153, baseType: !32, size: 32, offset: 3040)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3165, file: !3166, line: 154, baseType: !32, size: 32, offset: 3072)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3165, file: !3166, line: 155, baseType: !32, size: 32, offset: 3104)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3165, file: !3166, line: 156, baseType: !32, size: 32, offset: 3136)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3165, file: !3166, line: 157, baseType: !32, size: 32, offset: 3168)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3165, file: !3166, line: 158, baseType: !32, size: 32, offset: 3200)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3165, file: !3166, line: 159, baseType: !32, size: 32, offset: 3232)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3165, file: !3166, line: 160, baseType: !32, size: 32, offset: 3264)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3165, file: !3166, line: 161, baseType: !32, size: 32, offset: 3296)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3165, file: !3166, line: 162, baseType: !32, size: 32, offset: 3328)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3165, file: !3166, line: 163, baseType: !32, size: 32, offset: 3360)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3165, file: !3166, line: 164, baseType: !32, size: 32, offset: 3392)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3165, file: !3166, line: 165, baseType: !32, size: 32, offset: 3424)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3165, file: !3166, line: 166, baseType: !32, size: 32, offset: 3456)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3165, file: !3166, line: 167, baseType: !32, size: 32, offset: 3488)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3165, file: !3166, line: 168, baseType: !32, size: 32, offset: 3520)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3165, file: !3166, line: 169, baseType: !32, size: 32, offset: 3552)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3165, file: !3166, line: 170, baseType: !32, size: 32, offset: 3584)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3165, file: !3166, line: 171, baseType: !32, size: 32, offset: 3616)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3165, file: !3166, line: 172, baseType: !3416, size: 96, offset: 3648)
!3416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1592)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3165, file: !3166, line: 173, baseType: !3416, size: 96, offset: 3744)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3165, file: !3166, line: 174, baseType: !32, size: 32, offset: 3840)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3165, file: !3166, line: 175, baseType: !312, size: 64, offset: 3904)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3165, file: !3166, line: 176, baseType: !312, size: 64, offset: 3968)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3165, file: !3166, line: 177, baseType: !3422, size: 192, offset: 4032)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3166, line: 34, size: 192, elements: !3423)
!3423 = !{!3424, !3425, !3428}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3422, file: !3166, line: 35, baseType: !383, size: 32)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3422, file: !3166, line: 37, baseType: !3426, size: 64, offset: 64)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3166, line: 32, flags: DIFlagFwdDecl)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3422, file: !3166, line: 38, baseType: !32, size: 32, offset: 128)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3165, file: !3166, line: 178, baseType: !32, size: 32, offset: 4224)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3165, file: !3166, line: 179, baseType: !32, size: 32, offset: 4256)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3165, file: !3166, line: 180, baseType: !3432, size: 64, offset: 4288)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3434)
!3434 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3166, line: 180, flags: DIFlagFwdDecl)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3165, file: !3166, line: 181, baseType: !3436, size: 64, offset: 4352)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3166, line: 41, flags: DIFlagFwdDecl)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3165, file: !3166, line: 182, baseType: !1670, offset: 4416)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3165, file: !3166, line: 183, baseType: !7, size: 32, offset: 4416)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3165, file: !3166, line: 184, baseType: !383, size: 32, offset: 4448)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3165, file: !3166, line: 185, baseType: !312, size: 64, offset: 4480)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3165, file: !3166, line: 186, baseType: !32, size: 32, offset: 4544)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3165, file: !3166, line: 188, baseType: !32, size: 32, offset: 4576)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3165, file: !3166, line: 189, baseType: !32, size: 32, offset: 4608)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3165, file: !3166, line: 195, baseType: !32, size: 32, offset: 4640)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3165, file: !3166, line: 196, baseType: !32, size: 32, offset: 4672)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3165, file: !3166, line: 197, baseType: !32, size: 32, offset: 4704)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3165, file: !3166, line: 198, baseType: !32, size: 32, offset: 4736)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3165, file: !3166, line: 200, baseType: !3450, size: 96, offset: 4768)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3166, line: 27, size: 96, elements: !3451)
!3451 = !{!3452, !3453}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3450, file: !3166, line: 28, baseType: !3343, size: 32)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3450, file: !3166, line: 29, baseType: !3454, size: 64, offset: 32)
!3454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2947)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3165, file: !3166, line: 202, baseType: !383, size: 32, offset: 4864)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3165, file: !3166, line: 205, baseType: !3457, size: 64, offset: 4928)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3165, file: !3166, line: 206, baseType: !32, size: 32, offset: 4992)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3165, file: !3166, line: 222, baseType: !3460, size: 64, offset: 5056)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3166, line: 222, flags: DIFlagFwdDecl)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3165, file: !3166, line: 223, baseType: !7, size: 32, offset: 5120)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3165, file: !3166, line: 225, baseType: !3460, size: 64, offset: 5184)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3165, file: !3166, line: 226, baseType: !7, size: 32, offset: 5248)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3165, file: !3166, line: 228, baseType: !383, size: 32, offset: 5280)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3165, file: !3166, line: 229, baseType: !3467, size: 128, offset: 5312)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3468, line: 22, baseType: !3469)
!3468 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3468, line: 20, size: 128, elements: !3470)
!3470 = !{!3471}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3469, file: !3468, line: 21, baseType: !3472, size: 128)
!3472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2947)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !3007, file: !3008, line: 128, baseType: !3474, size: 4608, offset: 10176)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3475, line: 56, size: 4608, elements: !3476)
!3475 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3476 = !{!3477, !3517, !3520, !3521, !3522, !3523, !3526, !3529, !3532, !3533, !3534, !3537, !3538, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3618, !3619, !3620, !3621}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3474, file: !3475, line: 57, baseType: !3478, size: 1600)
!3478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3475, line: 15, size: 1600, elements: !3479)
!3479 = !{!3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3478, file: !3475, line: 17, baseType: !2849, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3478, file: !3475, line: 18, baseType: !2849, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3478, file: !3475, line: 19, baseType: !2849, size: 64, offset: 128)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3478, file: !3475, line: 20, baseType: !2849, size: 64, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3478, file: !3475, line: 21, baseType: !2849, size: 64, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3478, file: !3475, line: 23, baseType: !32, size: 32, offset: 320)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3478, file: !3475, line: 24, baseType: !32, size: 32, offset: 352)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3478, file: !3475, line: 25, baseType: !32, size: 32, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3478, file: !3475, line: 26, baseType: !32, size: 32, offset: 416)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3478, file: !3475, line: 27, baseType: !32, size: 32, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3478, file: !3475, line: 28, baseType: !32, size: 32, offset: 480)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3478, file: !3475, line: 29, baseType: !32, size: 32, offset: 512)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3478, file: !3475, line: 30, baseType: !32, size: 32, offset: 544)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3478, file: !3475, line: 31, baseType: !32, size: 32, offset: 576)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3478, file: !3475, line: 32, baseType: !32, size: 32, offset: 608)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3478, file: !3475, line: 33, baseType: !32, size: 32, offset: 640)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3478, file: !3475, line: 34, baseType: !32, size: 32, offset: 672)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3478, file: !3475, line: 35, baseType: !32, size: 32, offset: 704)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3478, file: !3475, line: 36, baseType: !32, size: 32, offset: 736)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3478, file: !3475, line: 37, baseType: !32, size: 32, offset: 768)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3478, file: !3475, line: 38, baseType: !32, size: 32, offset: 800)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3478, file: !3475, line: 39, baseType: !3502, size: 256, offset: 832)
!3502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2272)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3478, file: !3475, line: 40, baseType: !3457, size: 64, offset: 1088)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3478, file: !3475, line: 41, baseType: !32, size: 32, offset: 1152)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3478, file: !3475, line: 42, baseType: !32, size: 32, offset: 1184)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3478, file: !3475, line: 43, baseType: !32, size: 32, offset: 1216)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3478, file: !3475, line: 44, baseType: !32, size: 32, offset: 1248)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3478, file: !3475, line: 45, baseType: !32, size: 32, offset: 1280)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3478, file: !3475, line: 46, baseType: !32, size: 32, offset: 1312)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3478, file: !3475, line: 47, baseType: !32, size: 32, offset: 1344)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3478, file: !3475, line: 48, baseType: !32, size: 32, offset: 1376)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3478, file: !3475, line: 49, baseType: !32, size: 32, offset: 1408)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3478, file: !3475, line: 50, baseType: !32, size: 32, offset: 1440)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3478, file: !3475, line: 51, baseType: !32, size: 32, offset: 1472)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3478, file: !3475, line: 52, baseType: !32, size: 32, offset: 1504)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3478, file: !3475, line: 53, baseType: !771, size: 8, offset: 1536)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3474, file: !3475, line: 58, baseType: !3518, size: 64, offset: 1600)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3475, line: 58, flags: DIFlagFwdDecl)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3474, file: !3475, line: 59, baseType: !3518, size: 64, offset: 1664)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3474, file: !3475, line: 60, baseType: !3189, size: 64, offset: 1728)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3474, file: !3475, line: 61, baseType: !3193, size: 64, offset: 1792)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3474, file: !3475, line: 71, baseType: !3524, size: 64, offset: 1856)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3475, line: 71, flags: DIFlagFwdDecl)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3474, file: !3475, line: 72, baseType: !3527, size: 64, offset: 1920)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3475, line: 72, flags: DIFlagFwdDecl)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3474, file: !3475, line: 73, baseType: !3530, size: 64, offset: 1984)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3475, line: 73, flags: DIFlagFwdDecl)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3474, file: !3475, line: 74, baseType: !3253, size: 320, offset: 2048)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3474, file: !3475, line: 75, baseType: !3039, size: 64, offset: 2368)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3474, file: !3475, line: 76, baseType: !3535, size: 64, offset: 2432)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3475, line: 76, flags: DIFlagFwdDecl)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3474, file: !3475, line: 77, baseType: !284, size: 128, offset: 2496)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3474, file: !3475, line: 78, baseType: !3539, size: 1088, offset: 2624)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3548, !3554, !3560, !3561, !3565, !3569, !3573, !3577, !3578, !3582, !3586, !3590, !3594, !3598, !3599}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3539, file: !925, line: 16, baseType: !476, size: 16)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3539, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3539, file: !925, line: 19, baseType: !3544, size: 64, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{!32, !3547}
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3539, file: !925, line: 20, baseType: !3549, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!3552, !3552, !493}
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3539, file: !925, line: 21, baseType: !3555, size: 64, offset: 192)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!7, !3558}
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3553)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3539, file: !925, line: 22, baseType: !3555, size: 64, offset: 256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3539, file: !925, line: 23, baseType: !3562, size: 64, offset: 320)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!2516, !3552, !312}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3539, file: !925, line: 24, baseType: !3566, size: 64, offset: 384)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !3552}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3539, file: !925, line: 25, baseType: !3570, size: 64, offset: 448)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3552, !290, !32}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3539, file: !925, line: 27, baseType: !3574, size: 64, offset: 512)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!3552, !3552}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3539, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3539, file: !925, line: 29, baseType: !3579, size: 64, offset: 640)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !3552, !445, !415, !987, !771}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3539, file: !925, line: 32, baseType: !3583, size: 64, offset: 704)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{null, !3552, !445, !415}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3539, file: !925, line: 34, baseType: !3587, size: 64, offset: 768)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DISubroutineType(types: !3589)
!3589 = !{!32, !3006, !445, !415}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3539, file: !925, line: 35, baseType: !3591, size: 64, offset: 832)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3592, size: 64)
!3592 = !DISubroutineType(types: !3593)
!3593 = !{!923, !3558, !415, !3276}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3539, file: !925, line: 38, baseType: !3595, size: 64, offset: 896)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DISubroutineType(types: !3597)
!3597 = !{null, !3558, !3276}
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3539, file: !925, line: 41, baseType: !2051, size: 64, offset: 960)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3539, file: !925, line: 43, baseType: !3600, size: 64, offset: 1024)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3601, line: 97, size: 64, elements: !3602)
!3601 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3602 = !{!3603}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3600, file: !3601, line: 98, baseType: !377, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3474, file: !3475, line: 79, baseType: !1912, offset: 3712)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3474, file: !3475, line: 80, baseType: !1670, offset: 3712)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3474, file: !3475, line: 81, baseType: !7, size: 32, offset: 3712)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3474, file: !3475, line: 82, baseType: !312, size: 64, offset: 3776)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3474, file: !3475, line: 94, baseType: !3186, size: 64, offset: 3840)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3474, file: !3475, line: 95, baseType: !445, size: 64, offset: 3904)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3474, file: !3475, line: 96, baseType: !445, size: 64, offset: 3968)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3474, file: !3475, line: 97, baseType: !445, size: 64, offset: 4032)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3474, file: !3475, line: 98, baseType: !445, size: 64, offset: 4096)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3474, file: !3475, line: 107, baseType: !383, size: 32, offset: 4160)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3474, file: !3475, line: 108, baseType: !383, size: 32, offset: 4192)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3474, file: !3475, line: 109, baseType: !3616, size: 64, offset: 4224)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3475, line: 109, flags: DIFlagFwdDecl)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3474, file: !3475, line: 110, baseType: !3460, size: 64, offset: 4288)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3474, file: !3475, line: 111, baseType: !3460, size: 64, offset: 4352)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3474, file: !3475, line: 112, baseType: !7, size: 32, offset: 4416)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3474, file: !3475, line: 117, baseType: !3622, size: 128, offset: 4480)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3474, file: !3475, line: 113, size: 128, elements: !3623)
!3623 = !{!3624, !3625, !3626}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3622, file: !3475, line: 114, baseType: !1581, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3622, file: !3475, line: 115, baseType: !1670, offset: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3622, file: !3475, line: 116, baseType: !987, size: 32, offset: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !3007, file: !3008, line: 162, baseType: !3628, size: 192, offset: 14784)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3629)
!3629 = !{!3630, !3631, !3632, !3633}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3628, file: !417, line: 293, baseType: !415, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3628, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3628, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3628, file: !417, line: 297, baseType: !1670, offset: 160)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !3007, file: !3008, line: 164, baseType: !3635, size: 64, offset: 14976)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !3008, line: 47, flags: DIFlagFwdDecl)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !3007, file: !3008, line: 167, baseType: !3638, size: 512, offset: 15040)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3639, line: 14, size: 512, elements: !3640)
!3639 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3640 = !{!3641, !3656, !3658}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3638, file: !3639, line: 16, baseType: !3642, size: 128)
!3642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3643, size: 128, elements: !2947)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3645)
!3645 = !{!3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3644, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3644, file: !65, line: 1039, baseType: !3648, offset: 128)
!3648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3649, elements: !309)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3650)
!3650 = !{!3651, !3652}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3649, file: !65, line: 1033, baseType: !1088, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3649, file: !65, line: 1034, baseType: !3653, size: 128, offset: 64)
!3653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3654, size: 128, elements: !2947)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3638, file: !3639, line: 17, baseType: !3657, size: 128, offset: 128)
!3657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2947)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3638, file: !3639, line: 18, baseType: !3659, size: 256, offset: 256)
!3659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2947)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !3007, file: !3008, line: 174, baseType: !373, size: 64, offset: 15552)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !3007, file: !3008, line: 183, baseType: !3662, size: 1216, offset: 15616)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3663, line: 15, size: 1216, elements: !3664)
!3663 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3678, !3679, !3680, !3683, !3686}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3662, file: !3663, line: 17, baseType: !3028, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3662, file: !3663, line: 18, baseType: !3028, size: 64, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3662, file: !3663, line: 19, baseType: !3028, size: 64, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3662, file: !3663, line: 20, baseType: !3028, size: 64, offset: 192)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3662, file: !3663, line: 21, baseType: !3028, size: 64, offset: 256)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3662, file: !3663, line: 22, baseType: !3028, size: 64, offset: 320)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3662, file: !3663, line: 23, baseType: !3028, size: 64, offset: 384)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3662, file: !3663, line: 24, baseType: !3028, size: 64, offset: 448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3662, file: !3663, line: 25, baseType: !3028, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3662, file: !3663, line: 26, baseType: !3028, size: 64, offset: 576)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3662, file: !3663, line: 30, baseType: !3676, size: 64, offset: 640)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3663, line: 11, flags: DIFlagFwdDecl)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3662, file: !3663, line: 31, baseType: !1670, offset: 704)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3662, file: !3663, line: 32, baseType: !3253, size: 320, offset: 704)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3662, file: !3663, line: 33, baseType: !3681, size: 64, offset: 1024)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3663, line: 12, flags: DIFlagFwdDecl)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3662, file: !3663, line: 34, baseType: !3684, size: 64, offset: 1088)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3663, line: 13, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3662, file: !3663, line: 37, baseType: !1581, size: 64, offset: 1152)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !3007, file: !3008, line: 191, baseType: !445, size: 64, offset: 16832)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2991, file: !2992, line: 38, baseType: !3689, size: 64, offset: 384)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3690 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2992, line: 38, flags: DIFlagFwdDecl)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2991, file: !2992, line: 39, baseType: !3689, size: 64, offset: 448)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2991, file: !2992, line: 40, baseType: !3693, size: 64, offset: 512)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3695, line: 856, size: 448, elements: !3696)
!3695 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3696 = !{!3697, !3698, !3699, !3700, !3701}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3694, file: !3695, line: 857, baseType: !568, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3694, file: !3695, line: 858, baseType: !2646, size: 192, offset: 64)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3694, file: !3695, line: 859, baseType: !2612, size: 64, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3694, file: !3695, line: 860, baseType: !2869, size: 64, offset: 320)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3694, file: !3695, line: 861, baseType: !3702, size: 64, offset: 384)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3704, line: 16, flags: DIFlagFwdDecl)
!3704 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2327, file: !2328, line: 969, baseType: !3706, size: 64, offset: 9216)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3708, line: 82, size: 7296, elements: !3709)
!3708 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3709 = !{!3710, !3711, !3712, !3713, !3714, !3715, !3716, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3745, !3754, !3755, !3757, !3758, !3759, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5139, !5140, !5147, !5148, !5149, !5150, !5151, !5152}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3707, file: !3708, line: 83, baseType: !568, size: 32)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3707, file: !3708, line: 84, baseType: !383, size: 32, offset: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3707, file: !3708, line: 85, baseType: !32, size: 32, offset: 64)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3707, file: !3708, line: 86, baseType: !284, size: 128, offset: 128)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3707, file: !3708, line: 88, baseType: !1889, size: 128, offset: 256)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3707, file: !3708, line: 91, baseType: !2326, size: 64, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3707, file: !3708, line: 94, baseType: !3717, size: 192, offset: 448)
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3718, line: 30, size: 192, elements: !3719)
!3718 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3719 = !{!3720, !3721}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3717, file: !3718, line: 31, baseType: !284, size: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3717, file: !3718, line: 32, baseType: !3722, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3723, line: 25, baseType: !3724)
!3723 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3723, line: 23, size: 64, elements: !3725)
!3725 = !{!3726}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3724, file: !3723, line: 24, baseType: !2471, size: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3707, file: !3708, line: 97, baseType: !1581, size: 64, offset: 640)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3707, file: !3708, line: 100, baseType: !32, size: 32, offset: 704)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3707, file: !3708, line: 106, baseType: !32, size: 32, offset: 736)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3707, file: !3708, line: 107, baseType: !2326, size: 64, offset: 768)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3707, file: !3708, line: 110, baseType: !32, size: 32, offset: 832)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3707, file: !3708, line: 111, baseType: !7, size: 32, offset: 864)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3707, file: !3708, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3707, file: !3708, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3707, file: !3708, line: 128, baseType: !32, size: 32, offset: 928)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3707, file: !3708, line: 129, baseType: !284, size: 128, offset: 960)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3707, file: !3708, line: 132, baseType: !2397, size: 512, offset: 1088)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3707, file: !3708, line: 133, baseType: !453, size: 64, offset: 1600)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3707, file: !3708, line: 140, baseType: !3740, size: 256, offset: 1664)
!3740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3741, size: 256, elements: !2947)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3708, line: 38, size: 128, elements: !3742)
!3742 = !{!3743, !3744}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3741, file: !3708, line: 39, baseType: !331, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3741, file: !3708, line: 40, baseType: !331, size: 64, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3707, file: !3708, line: 146, baseType: !3746, size: 192, offset: 1920)
!3746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3708, line: 66, size: 192, elements: !3747)
!3747 = !{!3748}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3746, file: !3708, line: 67, baseType: !3749, size: 192)
!3749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3708, line: 47, size: 192, elements: !3750)
!3750 = !{!3751, !3752, !3753}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3749, file: !3708, line: 48, baseType: !373, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3749, file: !3708, line: 49, baseType: !373, size: 64, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3749, file: !3708, line: 50, baseType: !373, size: 64, offset: 128)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3707, file: !3708, line: 150, baseType: !2908, size: 640, offset: 2112)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3707, file: !3708, line: 153, baseType: !3756, size: 256, offset: 2752)
!3756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2571, size: 256, elements: !2272)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3707, file: !3708, line: 159, baseType: !2571, size: 64, offset: 3008)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3707, file: !3708, line: 162, baseType: !32, size: 32, offset: 3072)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3707, file: !3708, line: 164, baseType: !3760, size: 64, offset: 3136)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3762, line: 285, size: 5056, elements: !3763)
!3762 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!3763 = !{!3764, !3765, !3766, !4512, !5013, !5014, !5015, !5024, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3761, file: !3762, line: 286, baseType: !32, size: 32)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3761, file: !3762, line: 287, baseType: !2594, size: 32, offset: 32)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3761, file: !3762, line: 288, baseType: !3767, size: 64, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3769, line: 461, size: 5568, elements: !3770)
!3769 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3770 = !{!3771, !4052, !4053, !4056, !4057, !4109, !4205, !4206, !4207, !4208, !4209, !4224, !4331, !4344, !4347, !4348, !4352, !4354, !4355, !4356, !4360, !4366, !4367, !4370, !4374, !4464, !4465, !4466, !4467, !4468, !4500, !4501, !4502, !4505, !4508, !4509, !4510, !4511}
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3768, file: !3769, line: 462, baseType: !3772, size: 512)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3773, line: 64, size: 512, elements: !3774)
!3773 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3774 = !{!3775, !3776, !3777, !3779, !3821, !3922, !4046, !4047, !4048, !4049, !4050, !4051}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3772, file: !3773, line: 65, baseType: !292, size: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3772, file: !3773, line: 66, baseType: !284, size: 128, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3772, file: !3773, line: 67, baseType: !3778, size: 64, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3772, file: !3773, line: 68, baseType: !3780, size: 64, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3773, line: 192, size: 704, elements: !3782)
!3782 = !{!3783, !3784, !3785, !3786}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3781, file: !3773, line: 193, baseType: !284, size: 128)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3781, file: !3773, line: 194, baseType: !1670, offset: 128)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3781, file: !3773, line: 195, baseType: !3772, size: 512, offset: 128)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3781, file: !3773, line: 196, baseType: !3787, size: 64, offset: 640)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3789)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3773, line: 156, size: 192, elements: !3790)
!3790 = !{!3791, !3796, !3801}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3789, file: !3773, line: 157, baseType: !3792, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3793)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{!32, !3780, !3778}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3789, file: !3773, line: 158, baseType: !3797, size: 64, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3798)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!292, !3780, !3778}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3789, file: !3773, line: 159, baseType: !3802, size: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!32, !3780, !3778, !3806}
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3773, line: 148, size: 20736, elements: !3808)
!3808 = !{!3809, !3811, !3815, !3816, !3820}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3807, file: !3773, line: 149, baseType: !3810, size: 192)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1592)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3807, file: !3773, line: 150, baseType: !3812, size: 4096, offset: 192)
!3812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3813)
!3813 = !{!3814}
!3814 = !DISubrange(count: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3807, file: !3773, line: 151, baseType: !32, size: 32, offset: 4288)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3807, file: !3773, line: 152, baseType: !3817, size: 16384, offset: 4320)
!3817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !3818)
!3818 = !{!3819}
!3819 = !DISubrange(count: 2048)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3807, file: !3773, line: 153, baseType: !32, size: 32, offset: 20704)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3772, file: !3773, line: 69, baseType: !3822, size: 64, offset: 320)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3773, line: 138, size: 448, elements: !3824)
!3824 = !{!3825, !3829, !3848, !3850, !3883, !3914, !3918}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3823, file: !3773, line: 139, baseType: !3826, size: 64)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{null, !3778}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3823, file: !3773, line: 140, baseType: !3830, size: 64, offset: 64)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3832)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3833, line: 230, size: 128, elements: !3834)
!3833 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3834 = !{!3835, !3844}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3832, file: !3833, line: 231, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!1521, !3778, !3839, !1038}
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3833, line: 30, size: 128, elements: !3841)
!3841 = !{!3842, !3843}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3840, file: !3833, line: 31, baseType: !292, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3840, file: !3833, line: 32, baseType: !1379, size: 16, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3832, file: !3833, line: 232, baseType: !3845, size: 64, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!1521, !3778, !3839, !292, !1039}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3823, file: !3773, line: 141, baseType: !3849, size: 64, offset: 128)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3823, file: !3773, line: 142, baseType: !3851, size: 64, offset: 192)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3854)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3833, line: 84, size: 320, elements: !3855)
!3855 = !{!3856, !3857, !3861, !3880, !3881}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3854, file: !3833, line: 85, baseType: !292, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3854, file: !3833, line: 86, baseType: !3858, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{!1379, !3778, !3839, !32}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3854, file: !3833, line: 88, baseType: !3862, size: 64, offset: 128)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!1379, !3778, !3865, !32}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3833, line: 168, size: 448, elements: !3867)
!3867 = !{!3868, !3869, !3870, !3871, !3875, !3876}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3866, file: !3833, line: 169, baseType: !3840, size: 128)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3866, file: !3833, line: 170, baseType: !1039, size: 64, offset: 128)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3866, file: !3833, line: 171, baseType: !591, size: 64, offset: 192)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3866, file: !3833, line: 172, baseType: !3872, size: 64, offset: 256)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!1521, !1315, !3778, !3865, !1038, !1476, !1039}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3866, file: !3833, line: 174, baseType: !3872, size: 64, offset: 320)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3866, file: !3833, line: 176, baseType: !3877, size: 64, offset: 384)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!32, !1315, !3778, !3865, !2098}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3854, file: !3833, line: 90, baseType: !3849, size: 64, offset: 192)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3854, file: !3833, line: 91, baseType: !3882, size: 64, offset: 256)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3823, file: !3773, line: 143, baseType: !3884, size: 64, offset: 256)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{!3887, !3778}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !447, line: 39, size: 384, elements: !3890)
!3890 = !{!3891, !3897, !3901, !3905, !3909, !3913}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3889, file: !447, line: 40, baseType: !3892, size: 32)
!3892 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !447, line: 26, baseType: !7, size: 32, elements: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3895 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3896 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3889, file: !447, line: 41, baseType: !3898, size: 64, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!771}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3889, file: !447, line: 42, baseType: !3902, size: 64, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!591}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3889, file: !447, line: 43, baseType: !3906, size: 64, offset: 192)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!3276, !445}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3889, file: !447, line: 44, baseType: !3910, size: 64, offset: 256)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!3276}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3889, file: !447, line: 45, baseType: !1415, size: 64, offset: 320)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3823, file: !3773, line: 144, baseType: !3915, size: 64, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!3276, !3778}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3823, file: !3773, line: 145, baseType: !3919, size: 64, offset: 384)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{null, !3778, !2850, !2851}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3772, file: !3773, line: 70, baseType: !3923, size: 64, offset: 384)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1565, line: 123, size: 1024, elements: !3925)
!3925 = !{!3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !4039, !4040, !4041, !4042, !4043}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3924, file: !1565, line: 124, baseType: !383, size: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3924, file: !1565, line: 125, baseType: !383, size: 32, offset: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3924, file: !1565, line: 135, baseType: !3923, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3924, file: !1565, line: 136, baseType: !292, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3924, file: !1565, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3924, file: !1565, line: 140, baseType: !3276, size: 64, offset: 384)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3924, file: !1565, line: 141, baseType: !7, size: 32, offset: 448)
!3933 = !DIDerivedType(tag: DW_TAG_member, scope: !3924, file: !1565, line: 142, baseType: !3934, size: 256, offset: 512)
!3934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3924, file: !1565, line: 142, size: 256, elements: !3935)
!3935 = !{!3936, !3976, !3980}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3934, file: !1565, line: 143, baseType: !3937, size: 192)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1565, line: 91, size: 192, elements: !3938)
!3938 = !{!3939, !3940, !3941}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3937, file: !1565, line: 92, baseType: !312, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3937, file: !1565, line: 94, baseType: !1750, size: 64, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3937, file: !1565, line: 100, baseType: !3942, size: 64, offset: 128)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1565, line: 180, size: 704, elements: !3944)
!3944 = !{!3945, !3946, !3947, !3948, !3949, !3950, !3974, !3975}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3943, file: !1565, line: 182, baseType: !3923, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3943, file: !1565, line: 183, baseType: !7, size: 32, offset: 64)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3943, file: !1565, line: 186, baseType: !2599, size: 192, offset: 128)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3943, file: !1565, line: 187, baseType: !987, size: 32, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3943, file: !1565, line: 188, baseType: !987, size: 32, offset: 352)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3943, file: !1565, line: 189, baseType: !3951, size: 64, offset: 384)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1565, line: 168, size: 320, elements: !3953)
!3953 = !{!3954, !3958, !3962, !3966, !3970}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3952, file: !1565, line: 169, baseType: !3955, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!32, !1653, !3942}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3952, file: !1565, line: 171, baseType: !3959, size: 64, offset: 64)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!32, !3923, !292, !1379}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3952, file: !1565, line: 173, baseType: !3963, size: 64, offset: 128)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DISubroutineType(types: !3965)
!3965 = !{!32, !3923}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3952, file: !1565, line: 174, baseType: !3967, size: 64, offset: 192)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!32, !3923, !3923, !292}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3952, file: !1565, line: 176, baseType: !3971, size: 64, offset: 256)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = !DISubroutineType(types: !3973)
!3973 = !{!32, !1653, !3923, !3942}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3943, file: !1565, line: 192, baseType: !284, size: 128, offset: 448)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3943, file: !1565, line: 194, baseType: !1889, size: 128, offset: 576)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3934, file: !1565, line: 144, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1565, line: 103, size: 64, elements: !3978)
!3978 = !{!3979}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3977, file: !1565, line: 104, baseType: !3923, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3934, file: !1565, line: 145, baseType: !3981, size: 256)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1565, line: 107, size: 256, elements: !3982)
!3982 = !{!3983, !4034, !4037, !4038}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3981, file: !1565, line: 108, baseType: !3984, size: 64)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3986)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1565, line: 217, size: 768, elements: !3987)
!3987 = !{!3988, !4008, !4012, !4013, !4014, !4015, !4016, !4020, !4021, !4022, !4023, !4030}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3986, file: !1565, line: 222, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!32, !3992}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1565, line: 197, size: 1088, elements: !3994)
!3994 = !{!3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3993, file: !1565, line: 199, baseType: !3923, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3993, file: !1565, line: 200, baseType: !1315, size: 64, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3993, file: !1565, line: 201, baseType: !1653, size: 64, offset: 128)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3993, file: !1565, line: 202, baseType: !591, size: 64, offset: 192)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3993, file: !1565, line: 205, baseType: !1665, size: 192, offset: 256)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3993, file: !1565, line: 206, baseType: !1665, size: 192, offset: 448)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3993, file: !1565, line: 207, baseType: !32, size: 32, offset: 640)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3993, file: !1565, line: 208, baseType: !284, size: 128, offset: 704)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3993, file: !1565, line: 209, baseType: !1038, size: 64, offset: 832)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3993, file: !1565, line: 211, baseType: !1039, size: 64, offset: 896)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3993, file: !1565, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3993, file: !1565, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3993, file: !1565, line: 214, baseType: !2126, size: 64, offset: 1024)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3986, file: !1565, line: 223, baseType: !4009, size: 64, offset: 64)
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = !DISubroutineType(types: !4011)
!4011 = !{null, !3992}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3986, file: !1565, line: 236, baseType: !1704, size: 64, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3986, file: !1565, line: 238, baseType: !1691, size: 64, offset: 192)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3986, file: !1565, line: 239, baseType: !1700, size: 64, offset: 256)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3986, file: !1565, line: 240, baseType: !1696, size: 64, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3986, file: !1565, line: 242, baseType: !4017, size: 64, offset: 384)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!1521, !3992, !1038, !1039, !1476}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3986, file: !1565, line: 252, baseType: !1039, size: 64, offset: 448)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3986, file: !1565, line: 259, baseType: !771, size: 8, offset: 512)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3986, file: !1565, line: 260, baseType: !4017, size: 64, offset: 576)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3986, file: !1565, line: 263, baseType: !4024, size: 64, offset: 640)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!4027, !3992, !4028}
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1565, line: 27, flags: DIFlagFwdDecl)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3986, file: !1565, line: 266, baseType: !4031, size: 64, offset: 704)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!32, !3992, !2098}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3981, file: !1565, line: 109, baseType: !4035, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1565, line: 31, flags: DIFlagFwdDecl)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3981, file: !1565, line: 110, baseType: !1476, size: 64, offset: 128)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3981, file: !1565, line: 111, baseType: !3923, size: 64, offset: 192)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3924, file: !1565, line: 148, baseType: !591, size: 64, offset: 768)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3924, file: !1565, line: 154, baseType: !331, size: 64, offset: 832)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3924, file: !1565, line: 156, baseType: !476, size: 16, offset: 896)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3924, file: !1565, line: 157, baseType: !1379, size: 16, offset: 912)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3924, file: !1565, line: 158, baseType: !4044, size: 64, offset: 960)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1565, line: 32, flags: DIFlagFwdDecl)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3772, file: !3773, line: 71, baseType: !2594, size: 32, offset: 448)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3772, file: !3773, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3772, file: !3773, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3772, file: !3773, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3772, file: !3773, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3772, file: !3773, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3768, file: !3769, line: 463, baseType: !3767, size: 64, offset: 512)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3768, file: !3769, line: 465, baseType: !4054, size: 64, offset: 576)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3769, line: 36, flags: DIFlagFwdDecl)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3768, file: !3769, line: 467, baseType: !292, size: 64, offset: 640)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3768, file: !3769, line: 468, baseType: !4058, size: 64, offset: 704)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4060)
!4060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3769, line: 87, size: 384, elements: !4061)
!4061 = !{!4062, !4063, !4064, !4068, !4073, !4077}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4060, file: !3769, line: 88, baseType: !292, size: 64)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4060, file: !3769, line: 89, baseType: !3851, size: 64, offset: 64)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4060, file: !3769, line: 90, baseType: !4065, size: 64, offset: 128)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!32, !3767, !3806}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4060, file: !3769, line: 91, baseType: !4069, size: 64, offset: 192)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!1038, !3767, !4072, !2850, !2851}
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4060, file: !3769, line: 93, baseType: !4074, size: 64, offset: 256)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{null, !3767}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4060, file: !3769, line: 95, baseType: !4078, size: 64, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4080)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4081, line: 278, size: 1472, elements: !4082)
!4081 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4082 = !{!4083, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4080, file: !4081, line: 279, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{!32, !3767}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4080, file: !4081, line: 280, baseType: !4074, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4080, file: !4081, line: 281, baseType: !4084, size: 64, offset: 128)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4080, file: !4081, line: 282, baseType: !4084, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4080, file: !4081, line: 283, baseType: !4084, size: 64, offset: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4080, file: !4081, line: 284, baseType: !4084, size: 64, offset: 320)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4080, file: !4081, line: 285, baseType: !4084, size: 64, offset: 384)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4080, file: !4081, line: 286, baseType: !4084, size: 64, offset: 448)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4080, file: !4081, line: 287, baseType: !4084, size: 64, offset: 512)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4080, file: !4081, line: 288, baseType: !4084, size: 64, offset: 576)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4080, file: !4081, line: 289, baseType: !4084, size: 64, offset: 640)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4080, file: !4081, line: 290, baseType: !4084, size: 64, offset: 704)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4080, file: !4081, line: 291, baseType: !4084, size: 64, offset: 768)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4080, file: !4081, line: 292, baseType: !4084, size: 64, offset: 832)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4080, file: !4081, line: 293, baseType: !4084, size: 64, offset: 896)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4080, file: !4081, line: 294, baseType: !4084, size: 64, offset: 960)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4080, file: !4081, line: 295, baseType: !4084, size: 64, offset: 1024)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4080, file: !4081, line: 296, baseType: !4084, size: 64, offset: 1088)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4080, file: !4081, line: 297, baseType: !4084, size: 64, offset: 1152)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4080, file: !4081, line: 298, baseType: !4084, size: 64, offset: 1216)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4080, file: !4081, line: 299, baseType: !4084, size: 64, offset: 1280)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4080, file: !4081, line: 300, baseType: !4084, size: 64, offset: 1344)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4080, file: !4081, line: 301, baseType: !4084, size: 64, offset: 1408)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3768, file: !3769, line: 470, baseType: !4110, size: 64, offset: 768)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4112, line: 82, size: 1408, elements: !4113)
!4112 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4113 = !{!4114, !4115, !4116, !4117, !4118, !4119, !4120, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4200, !4203, !4204}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4111, file: !4112, line: 83, baseType: !292, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4111, file: !4112, line: 84, baseType: !292, size: 64, offset: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4111, file: !4112, line: 85, baseType: !3767, size: 64, offset: 128)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4111, file: !4112, line: 86, baseType: !3851, size: 64, offset: 192)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4111, file: !4112, line: 87, baseType: !3851, size: 64, offset: 256)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4111, file: !4112, line: 88, baseType: !3851, size: 64, offset: 320)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4111, file: !4112, line: 90, baseType: !4121, size: 64, offset: 384)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!32, !3767, !4124}
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4126, line: 95, size: 1152, elements: !4127)
!4126 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4127 = !{!4128, !4129, !4130, !4131, !4132, !4133, !4139, !4153, !4164, !4165, !4166, !4167, !4168, !4176, !4177, !4178, !4179, !4180, !4181}
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4125, file: !4126, line: 96, baseType: !292, size: 64)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4125, file: !4126, line: 97, baseType: !4110, size: 64, offset: 64)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4125, file: !4126, line: 99, baseType: !980, size: 64, offset: 128)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4125, file: !4126, line: 100, baseType: !292, size: 64, offset: 192)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4125, file: !4126, line: 102, baseType: !771, size: 8, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4125, file: !4126, line: 103, baseType: !4134, size: 32, offset: 288)
!4134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4126, line: 44, baseType: !7, size: 32, elements: !4135)
!4135 = !{!4136, !4137, !4138}
!4136 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4137 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4138 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4125, file: !4126, line: 105, baseType: !4140, size: 64, offset: 320)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4142)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4143, line: 262, size: 1600, elements: !4144)
!4143 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4144 = !{!4145, !4147, !4148, !4152}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4142, file: !4143, line: 263, baseType: !4146, size: 256)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4142, file: !4143, line: 264, baseType: !4146, size: 256, offset: 256)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4142, file: !4143, line: 265, baseType: !4149, size: 1024, offset: 512)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !4150)
!4150 = !{!4151}
!4151 = !DISubrange(count: 128)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4142, file: !4143, line: 266, baseType: !3276, size: 64, offset: 1536)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4125, file: !4126, line: 106, baseType: !4154, size: 64, offset: 384)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4156)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4143, line: 210, size: 256, elements: !4157)
!4157 = !{!4158, !4160, !4162, !4163}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4156, file: !4143, line: 211, baseType: !4159, size: 72)
!4159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3105)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4156, file: !4143, line: 212, baseType: !4161, size: 64, offset: 128)
!4161 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4143, line: 14, baseType: !312)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4156, file: !4143, line: 213, baseType: !493, size: 32, offset: 192)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4156, file: !4143, line: 214, baseType: !493, size: 32, offset: 224)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4125, file: !4126, line: 108, baseType: !4084, size: 64, offset: 448)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4125, file: !4126, line: 109, baseType: !4074, size: 64, offset: 512)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4125, file: !4126, line: 110, baseType: !4084, size: 64, offset: 576)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4125, file: !4126, line: 111, baseType: !4074, size: 64, offset: 640)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4125, file: !4126, line: 112, baseType: !4169, size: 64, offset: 704)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!32, !3767, !4172}
!4172 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4081, line: 52, baseType: !4173)
!4173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4081, line: 50, size: 32, elements: !4174)
!4174 = !{!4175}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4173, file: !4081, line: 51, baseType: !32, size: 32)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4125, file: !4126, line: 113, baseType: !4084, size: 64, offset: 768)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4125, file: !4126, line: 114, baseType: !3851, size: 64, offset: 832)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4125, file: !4126, line: 115, baseType: !3851, size: 64, offset: 896)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4125, file: !4126, line: 117, baseType: !4078, size: 64, offset: 960)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4125, file: !4126, line: 118, baseType: !4074, size: 64, offset: 1024)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4125, file: !4126, line: 120, baseType: !4182, size: 64, offset: 1088)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4126, line: 120, flags: DIFlagFwdDecl)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4111, file: !4112, line: 91, baseType: !4065, size: 64, offset: 448)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4111, file: !4112, line: 92, baseType: !4084, size: 64, offset: 512)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4111, file: !4112, line: 93, baseType: !4074, size: 64, offset: 576)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4111, file: !4112, line: 94, baseType: !4084, size: 64, offset: 640)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4111, file: !4112, line: 95, baseType: !4074, size: 64, offset: 704)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4111, file: !4112, line: 97, baseType: !4084, size: 64, offset: 768)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4111, file: !4112, line: 98, baseType: !4084, size: 64, offset: 832)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4111, file: !4112, line: 100, baseType: !4169, size: 64, offset: 896)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4111, file: !4112, line: 101, baseType: !4084, size: 64, offset: 960)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4111, file: !4112, line: 103, baseType: !4084, size: 64, offset: 1024)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4111, file: !4112, line: 105, baseType: !4084, size: 64, offset: 1088)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4111, file: !4112, line: 107, baseType: !4078, size: 64, offset: 1152)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4111, file: !4112, line: 109, baseType: !4197, size: 64, offset: 1216)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4112, line: 109, flags: DIFlagFwdDecl)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4111, file: !4112, line: 111, baseType: !4201, size: 64, offset: 1280)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4112, line: 111, flags: DIFlagFwdDecl)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4111, file: !4112, line: 112, baseType: !1585, offset: 1344)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4111, file: !4112, line: 114, baseType: !771, size: 8, offset: 1344)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3768, file: !3769, line: 471, baseType: !4124, size: 64, offset: 832)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3768, file: !3769, line: 473, baseType: !591, size: 64, offset: 896)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3768, file: !3769, line: 475, baseType: !591, size: 64, offset: 960)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3768, file: !3769, line: 480, baseType: !1665, size: 192, offset: 1024)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3768, file: !3769, line: 484, baseType: !4210, size: 576, offset: 1216)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3769, line: 361, size: 576, elements: !4211)
!4211 = !{!4212, !4213, !4214, !4215, !4216, !4217}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4210, file: !3769, line: 362, baseType: !284, size: 128)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4210, file: !3769, line: 363, baseType: !284, size: 128, offset: 128)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4210, file: !3769, line: 364, baseType: !284, size: 128, offset: 256)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4210, file: !3769, line: 365, baseType: !284, size: 128, offset: 384)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4210, file: !3769, line: 366, baseType: !771, size: 8, offset: 512)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4210, file: !3769, line: 367, baseType: !4218, size: 32, offset: 544)
!4218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3769, line: 343, baseType: !7, size: 32, elements: !4219)
!4219 = !{!4220, !4221, !4222, !4223}
!4220 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4221 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4222 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4223 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3768, file: !3769, line: 485, baseType: !4225, size: 2304, offset: 1792)
!4225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4081, line: 565, size: 2304, elements: !4226)
!4226 = !{!4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4301, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4324, !4328}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4225, file: !4081, line: 566, baseType: !4172, size: 32)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4225, file: !4081, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4225, file: !4081, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4225, file: !4081, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4225, file: !4081, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4225, file: !4081, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4225, file: !4081, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4225, file: !4081, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4225, file: !4081, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4225, file: !4081, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4225, file: !4081, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4225, file: !4081, line: 577, baseType: !987, size: 32, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4225, file: !4081, line: 578, baseType: !1670, offset: 96)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4225, file: !4081, line: 580, baseType: !284, size: 128, offset: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4225, file: !4081, line: 581, baseType: !2825, size: 192, offset: 256)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4225, file: !4081, line: 582, baseType: !4243, size: 64, offset: 448)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4245, line: 43, size: 1472, elements: !4246)
!4245 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4246 = !{!4247, !4248, !4249, !4250, !4251, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4244, file: !4245, line: 44, baseType: !292, size: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4244, file: !4245, line: 45, baseType: !32, size: 32, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4244, file: !4245, line: 46, baseType: !284, size: 128, offset: 128)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4244, file: !4245, line: 47, baseType: !1670, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4244, file: !4245, line: 48, baseType: !4252, size: 64, offset: 256)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4081, line: 533, flags: DIFlagFwdDecl)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4244, file: !4245, line: 49, baseType: !3253, size: 320, offset: 320)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4244, file: !4245, line: 50, baseType: !312, size: 64, offset: 640)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4244, file: !4245, line: 51, baseType: !453, size: 64, offset: 704)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4244, file: !4245, line: 52, baseType: !453, size: 64, offset: 768)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4244, file: !4245, line: 53, baseType: !453, size: 64, offset: 832)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4244, file: !4245, line: 54, baseType: !453, size: 64, offset: 896)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4244, file: !4245, line: 55, baseType: !453, size: 64, offset: 960)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4244, file: !4245, line: 56, baseType: !312, size: 64, offset: 1024)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4244, file: !4245, line: 57, baseType: !312, size: 64, offset: 1088)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4244, file: !4245, line: 58, baseType: !312, size: 64, offset: 1152)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4244, file: !4245, line: 59, baseType: !312, size: 64, offset: 1216)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4244, file: !4245, line: 60, baseType: !312, size: 64, offset: 1280)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4244, file: !4245, line: 61, baseType: !3767, size: 64, offset: 1344)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4244, file: !4245, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4244, file: !4245, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4225, file: !4081, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4225, file: !4081, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4225, file: !4081, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4225, file: !4081, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4225, file: !4081, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4225, file: !4081, line: 592, baseType: !2397, size: 512, offset: 576)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4225, file: !4081, line: 593, baseType: !331, size: 64, offset: 1088)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4225, file: !4081, line: 594, baseType: !2764, size: 256, offset: 1152)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4225, file: !4081, line: 595, baseType: !1889, size: 128, offset: 1408)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4225, file: !4081, line: 596, baseType: !4252, size: 64, offset: 1536)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4225, file: !4081, line: 597, baseType: !383, size: 32, offset: 1600)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4225, file: !4081, line: 598, baseType: !383, size: 32, offset: 1632)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4225, file: !4081, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4225, file: !4081, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4225, file: !4081, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4225, file: !4081, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4225, file: !4081, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4225, file: !4081, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4225, file: !4081, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4225, file: !4081, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4225, file: !4081, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4225, file: !4081, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4225, file: !4081, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4225, file: !4081, line: 610, baseType: !7, size: 32, offset: 1696)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4225, file: !4081, line: 611, baseType: !4294, size: 32, offset: 1728)
!4294 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4081, line: 524, baseType: !7, size: 32, elements: !4295)
!4295 = !{!4296, !4297, !4298, !4299, !4300}
!4296 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4297 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4298 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4299 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4300 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4225, file: !4081, line: 612, baseType: !4302, size: 32, offset: 1760)
!4302 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4081, line: 502, baseType: !7, size: 32, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307}
!4304 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4305 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4306 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4307 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4225, file: !4081, line: 613, baseType: !32, size: 32, offset: 1792)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4225, file: !4081, line: 614, baseType: !32, size: 32, offset: 1824)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4225, file: !4081, line: 615, baseType: !331, size: 64, offset: 1856)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4225, file: !4081, line: 616, baseType: !331, size: 64, offset: 1920)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4225, file: !4081, line: 617, baseType: !331, size: 64, offset: 1984)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4225, file: !4081, line: 618, baseType: !331, size: 64, offset: 2048)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4225, file: !4081, line: 620, baseType: !4315, size: 64, offset: 2112)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4081, line: 536, size: 256, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4321}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4316, file: !4081, line: 537, baseType: !1670)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4316, file: !4081, line: 538, baseType: !7, size: 32)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4316, file: !4081, line: 540, baseType: !284, size: 128, offset: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4316, file: !4081, line: 543, baseType: !4322, size: 64, offset: 192)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4081, line: 534, flags: DIFlagFwdDecl)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4225, file: !4081, line: 621, baseType: !4325, size: 64, offset: 2176)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{null, !3767, !2545}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4225, file: !4081, line: 622, baseType: !4329, size: 64, offset: 2240)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4081, line: 622, flags: DIFlagFwdDecl)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3768, file: !3769, line: 486, baseType: !4332, size: 64, offset: 4096)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4081, line: 642, size: 1792, elements: !4334)
!4334 = !{!4335, !4336, !4337, !4341, !4342, !4343}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4333, file: !4081, line: 643, baseType: !4080, size: 1472)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4333, file: !4081, line: 644, baseType: !4084, size: 64, offset: 1472)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4333, file: !4081, line: 645, baseType: !4338, size: 64, offset: 1536)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{null, !3767, !771}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4333, file: !4081, line: 646, baseType: !4084, size: 64, offset: 1600)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4333, file: !4081, line: 647, baseType: !4074, size: 64, offset: 1664)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4333, file: !4081, line: 648, baseType: !4074, size: 64, offset: 1728)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3768, file: !3769, line: 493, baseType: !4345, size: 64, offset: 4160)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3769, line: 493, flags: DIFlagFwdDecl)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3768, file: !3769, line: 499, baseType: !284, size: 128, offset: 4224)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3768, file: !3769, line: 502, baseType: !4349, size: 64, offset: 4352)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4351)
!4351 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3769, line: 502, flags: DIFlagFwdDecl)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3768, file: !3769, line: 504, baseType: !4353, size: 64, offset: 4416)
!4353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3768, file: !3769, line: 505, baseType: !331, size: 64, offset: 4480)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3768, file: !3769, line: 510, baseType: !331, size: 64, offset: 4544)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3768, file: !3769, line: 511, baseType: !4357, size: 64, offset: 4608)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4359)
!4359 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3769, line: 511, flags: DIFlagFwdDecl)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3768, file: !3769, line: 513, baseType: !4361, size: 64, offset: 4672)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3769, line: 288, size: 128, elements: !4363)
!4363 = !{!4364, !4365}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4362, file: !3769, line: 293, baseType: !7, size: 32)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4362, file: !3769, line: 294, baseType: !312, size: 64, offset: 64)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3768, file: !3769, line: 515, baseType: !284, size: 128, offset: 4736)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3768, file: !3769, line: 526, baseType: !4368, offset: 4864)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4369, line: 5, elements: !1587)
!4369 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3768, file: !3769, line: 528, baseType: !4371, size: 64, offset: 4864)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4373, line: 14, flags: DIFlagFwdDecl)
!4373 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3768, file: !3769, line: 529, baseType: !4375, size: 64, offset: 4928)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4377, line: 17, size: 192, elements: !4378)
!4377 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4378 = !{!4379, !4380, !4463}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4376, file: !4377, line: 18, baseType: !4375, size: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4376, file: !4377, line: 19, baseType: !4381, size: 64, offset: 64)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4383)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4377, line: 110, size: 1152, elements: !4384)
!4384 = !{!4385, !4389, !4393, !4399, !4405, !4409, !4413, !4418, !4422, !4423, !4427, !4431, !4435, !4446, !4447, !4448, !4449, !4459}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4383, file: !4377, line: 111, baseType: !4386, size: 64)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!4375, !4375}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4383, file: !4377, line: 112, baseType: !4390, size: 64, offset: 64)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{null, !4375}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4383, file: !4377, line: 113, baseType: !4394, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!771, !4397}
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4376)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4383, file: !4377, line: 114, baseType: !4400, size: 64, offset: 192)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!3276, !4397, !4403}
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3768)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4383, file: !4377, line: 116, baseType: !4406, size: 64, offset: 256)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 64)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!771, !4397, !292}
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4383, file: !4377, line: 118, baseType: !4410, size: 64, offset: 320)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!32, !4397, !292, !7, !591, !1039}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4383, file: !4377, line: 123, baseType: !4414, size: 64, offset: 384)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!32, !4397, !292, !4417, !1039}
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4383, file: !4377, line: 126, baseType: !4419, size: 64, offset: 448)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!292, !4397}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4383, file: !4377, line: 127, baseType: !4419, size: 64, offset: 512)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4383, file: !4377, line: 128, baseType: !4424, size: 64, offset: 576)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DISubroutineType(types: !4426)
!4426 = !{!4375, !4397}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4383, file: !4377, line: 130, baseType: !4428, size: 64, offset: 640)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!4375, !4397, !4375}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4383, file: !4377, line: 133, baseType: !4432, size: 64, offset: 704)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!4375, !4397, !292}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4383, file: !4377, line: 135, baseType: !4436, size: 64, offset: 768)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{!32, !4397, !292, !292, !7, !7, !4439}
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4377, line: 43, size: 640, elements: !4441)
!4441 = !{!4442, !4443, !4444}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4440, file: !4377, line: 44, baseType: !4375, size: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4440, file: !4377, line: 45, baseType: !7, size: 32, offset: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4440, file: !4377, line: 46, baseType: !4445, size: 512, offset: 128)
!4445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2433)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4383, file: !4377, line: 140, baseType: !4428, size: 64, offset: 832)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4383, file: !4377, line: 143, baseType: !4424, size: 64, offset: 896)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4383, file: !4377, line: 145, baseType: !4386, size: 64, offset: 960)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4383, file: !4377, line: 146, baseType: !4450, size: 64, offset: 1024)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!32, !4397, !4453}
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4377, line: 29, size: 128, elements: !4455)
!4455 = !{!4456, !4457, !4458}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4454, file: !4377, line: 30, baseType: !7, size: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4454, file: !4377, line: 31, baseType: !7, size: 32, offset: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4454, file: !4377, line: 32, baseType: !4397, size: 64, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4383, file: !4377, line: 148, baseType: !4460, size: 64, offset: 1088)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!32, !4397, !3767}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4376, file: !4377, line: 20, baseType: !3767, size: 64, offset: 128)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3768, file: !3769, line: 534, baseType: !1458, size: 32, offset: 4992)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3768, file: !3769, line: 535, baseType: !987, size: 32, offset: 5024)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3768, file: !3769, line: 537, baseType: !1670, offset: 5056)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3768, file: !3769, line: 538, baseType: !284, size: 128, offset: 5056)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3768, file: !3769, line: 540, baseType: !4469, size: 64, offset: 5184)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4471, line: 54, size: 960, elements: !4472)
!4471 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4472 = !{!4473, !4474, !4475, !4476, !4477, !4478, !4479, !4483, !4487, !4488, !4489, !4490, !4494, !4498, !4499}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4470, file: !4471, line: 55, baseType: !292, size: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4470, file: !4471, line: 56, baseType: !980, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4470, file: !4471, line: 58, baseType: !3851, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4470, file: !4471, line: 59, baseType: !3851, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4470, file: !4471, line: 60, baseType: !3778, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4470, file: !4471, line: 62, baseType: !4065, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4470, file: !4471, line: 63, baseType: !4480, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!1038, !3767, !4072}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4470, file: !4471, line: 65, baseType: !4484, size: 64, offset: 448)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !4469}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4470, file: !4471, line: 66, baseType: !4074, size: 64, offset: 512)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4470, file: !4471, line: 68, baseType: !4084, size: 64, offset: 576)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4470, file: !4471, line: 70, baseType: !3887, size: 64, offset: 640)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4470, file: !4471, line: 71, baseType: !4491, size: 64, offset: 704)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!3276, !3767}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4470, file: !4471, line: 73, baseType: !4495, size: 64, offset: 768)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !3767, !2850, !2851}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4470, file: !4471, line: 75, baseType: !4078, size: 64, offset: 832)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4470, file: !4471, line: 77, baseType: !4201, size: 64, offset: 896)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3768, file: !3769, line: 541, baseType: !3851, size: 64, offset: 5248)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3768, file: !3769, line: 543, baseType: !4074, size: 64, offset: 5312)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3768, file: !3769, line: 544, baseType: !4503, size: 64, offset: 5376)
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3769, line: 45, flags: DIFlagFwdDecl)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3768, file: !3769, line: 545, baseType: !4506, size: 64, offset: 5440)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3769, line: 47, flags: DIFlagFwdDecl)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3768, file: !3769, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3768, file: !3769, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3768, file: !3769, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3768, file: !3769, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3761, file: !3762, line: 289, baseType: !4513, size: 64, offset: 128)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !4515, line: 302, size: 1472, elements: !4516)
!4515 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!4516 = !{!4517, !4518, !4519, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4759, !4760, !4761, !4762, !4764, !4850, !4853, !4854, !5012}
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4514, file: !4515, line: 303, baseType: !32, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4514, file: !4515, line: 304, baseType: !2594, size: 32, offset: 32)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !4514, file: !4515, line: 305, baseType: !4520, size: 64, offset: 64)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !4523, line: 14, size: 832, elements: !4524)
!4523 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!4524 = !{!4525, !4526, !4527, !4729, !4730, !4731}
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4522, file: !4523, line: 15, baseType: !3772, size: 512)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4522, file: !4523, line: 16, baseType: !980, size: 64, offset: 512)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4522, file: !4523, line: 17, baseType: !4528, size: 64, offset: 576)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4530)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4531)
!4531 = !{!4532, !4533, !4537, !4541, !4545, !4546, !4547, !4551, !4564, !4565, !4569, !4573, !4574, !4578, !4579, !4583, !4588, !4589, !4593, !4597, !4689, !4693, !4694, !4698, !4699, !4703, !4707, !4712, !4716, !4720, !4724, !4728}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4530, file: !1317, line: 1823, baseType: !980, size: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4530, file: !1317, line: 1824, baseType: !4534, size: 64, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!1476, !1315, !1476, !32}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4530, file: !1317, line: 1825, baseType: !4538, size: 64, offset: 128)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!1521, !1315, !1038, !1039, !1694}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4530, file: !1317, line: 1826, baseType: !4542, size: 64, offset: 192)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!1521, !1315, !292, !1039, !1694}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4530, file: !1317, line: 1827, baseType: !1825, size: 64, offset: 256)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4530, file: !1317, line: 1828, baseType: !1825, size: 64, offset: 320)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4530, file: !1317, line: 1829, baseType: !4548, size: 64, offset: 384)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!32, !1828, !771}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4530, file: !1317, line: 1830, baseType: !4552, size: 64, offset: 448)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!32, !1315, !4555}
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4557)
!4557 = !{!4558, !4563}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4556, file: !1317, line: 1777, baseType: !4559, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4560)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!32, !4555, !292, !32, !1476, !331, !7}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4556, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4530, file: !1317, line: 1831, baseType: !4552, size: 64, offset: 512)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4530, file: !1317, line: 1832, baseType: !4566, size: 64, offset: 576)
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!4027, !1315, !4028}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4530, file: !1317, line: 1833, baseType: !4570, size: 64, offset: 640)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!998, !1315, !7, !312}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4530, file: !1317, line: 1834, baseType: !4570, size: 64, offset: 704)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4530, file: !1317, line: 1835, baseType: !4575, size: 64, offset: 768)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{!32, !1315, !2098}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4530, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4530, file: !1317, line: 1837, baseType: !4580, size: 64, offset: 896)
!4580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4581, size: 64)
!4581 = !DISubroutineType(types: !4582)
!4582 = !{!32, !1375, !1315}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4530, file: !1317, line: 1838, baseType: !4584, size: 64, offset: 960)
!4584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4585, size: 64)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{!32, !1315, !4587}
!4587 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4530, file: !1317, line: 1839, baseType: !4580, size: 64, offset: 1024)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4530, file: !1317, line: 1840, baseType: !4590, size: 64, offset: 1088)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!32, !1315, !1476, !1476, !32}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4530, file: !1317, line: 1841, baseType: !4594, size: 64, offset: 1152)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!32, !32, !1315, !32}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4530, file: !1317, line: 1842, baseType: !4598, size: 64, offset: 1216)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!32, !1315, !32, !4601}
!4601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4602, size: 64)
!4602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4603)
!4603 = !{!4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4634, !4665}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4602, file: !1317, line: 1063, baseType: !4601, size: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4602, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4602, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4602, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4602, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4602, file: !1317, line: 1072, baseType: !4587, size: 64, offset: 576)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4602, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4602, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4602, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4602, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4602, file: !1317, line: 1077, baseType: !1889, size: 128, offset: 768)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4602, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4602, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4602, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4602, file: !1317, line: 1082, baseType: !1908, size: 64, offset: 1088)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4602, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4602, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4602, file: !1317, line: 1087, baseType: !4622, size: 64, offset: 1280)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4624)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4625)
!4625 = !{!4626, !4630}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4624, file: !1317, line: 1012, baseType: !4627, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DISubroutineType(types: !4629)
!4629 = !{null, !4601, !4601}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4624, file: !1317, line: 1013, baseType: !4631, size: 64, offset: 64)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{null, !4601}
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4602, file: !1317, line: 1088, baseType: !4635, size: 64, offset: 1344)
!4635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!4636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4637)
!4637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4638)
!4638 = !{!4639, !4643, !4647, !4648, !4652, !4656, !4660, !4664}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4637, file: !1317, line: 1017, baseType: !4640, size: 64)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!4587, !4587}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4637, file: !1317, line: 1018, baseType: !4644, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{null, !4587}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4637, file: !1317, line: 1019, baseType: !4631, size: 64, offset: 128)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4637, file: !1317, line: 1020, baseType: !4649, size: 64, offset: 192)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!32, !4601, !32}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4637, file: !1317, line: 1021, baseType: !4653, size: 64, offset: 256)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!771, !4601}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4637, file: !1317, line: 1022, baseType: !4657, size: 64, offset: 320)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!32, !4601, !32, !287}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4637, file: !1317, line: 1023, baseType: !4661, size: 64, offset: 384)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{null, !4601, !1802}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4637, file: !1317, line: 1024, baseType: !4653, size: 64, offset: 448)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4602, file: !1317, line: 1097, baseType: !4666, size: 256, offset: 1408)
!4666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4602, file: !1317, line: 1089, size: 256, elements: !4667)
!4667 = !{!4668, !4677, !4683}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4666, file: !1317, line: 1090, baseType: !4669, size: 256)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4670, line: 10, size: 256, elements: !4671)
!4670 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4671 = !{!4672, !4673, !4676}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4669, file: !4670, line: 11, baseType: !987, size: 32)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4669, file: !4670, line: 12, baseType: !4674, size: 64, offset: 64)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4670, line: 5, flags: DIFlagFwdDecl)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4669, file: !4670, line: 13, baseType: !284, size: 128, offset: 128)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4666, file: !1317, line: 1091, baseType: !4678, size: 64)
!4678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4670, line: 17, size: 64, elements: !4679)
!4679 = !{!4680}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4678, file: !4670, line: 18, baseType: !4681, size: 64)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4670, line: 16, flags: DIFlagFwdDecl)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4666, file: !1317, line: 1096, baseType: !4684, size: 192)
!4684 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4666, file: !1317, line: 1092, size: 192, elements: !4685)
!4685 = !{!4686, !4687, !4688}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4684, file: !1317, line: 1093, baseType: !284, size: 128)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4684, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4684, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4530, file: !1317, line: 1843, baseType: !4690, size: 64, offset: 1280)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!1521, !1315, !1719, !32, !1039, !1694, !32}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4530, file: !1317, line: 1844, baseType: !2218, size: 64, offset: 1344)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4530, file: !1317, line: 1845, baseType: !4695, size: 64, offset: 1408)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!32, !32}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4530, file: !1317, line: 1846, baseType: !4598, size: 64, offset: 1472)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4530, file: !1317, line: 1847, baseType: !4700, size: 64, offset: 1536)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!1521, !1883, !1315, !1694, !1039, !7}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4530, file: !1317, line: 1848, baseType: !4704, size: 64, offset: 1600)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!1521, !1315, !1694, !1883, !1039, !7}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4530, file: !1317, line: 1849, baseType: !4708, size: 64, offset: 1664)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!32, !1315, !998, !4711, !1802}
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4530, file: !1317, line: 1850, baseType: !4713, size: 64, offset: 1728)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!998, !1315, !32, !1476, !1476}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4530, file: !1317, line: 1852, baseType: !4717, size: 64, offset: 1792)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{null, !1653, !1315}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4530, file: !1317, line: 1856, baseType: !4721, size: 64, offset: 1856)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4530, file: !1317, line: 1858, baseType: !4725, size: 64, offset: 1920)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DISubroutineType(types: !4727)
!4727 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4530, file: !1317, line: 1861, baseType: !4590, size: 64, offset: 1984)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4522, file: !4523, line: 18, baseType: !284, size: 128, offset: 640)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4522, file: !4523, line: 19, baseType: !1458, size: 32, offset: 768)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4522, file: !4523, line: 20, baseType: !7, size: 32, offset: 800)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4514, file: !4515, line: 306, baseType: !980, size: 64, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4514, file: !4515, line: 307, baseType: !292, size: 64, offset: 192)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4514, file: !4515, line: 308, baseType: !292, size: 64, offset: 256)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !4514, file: !4515, line: 309, baseType: !32, size: 32, offset: 320)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4514, file: !4515, line: 310, baseType: !32, size: 32, offset: 352)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !4514, file: !4515, line: 311, baseType: !32, size: 32, offset: 384)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4514, file: !4515, line: 312, baseType: !7, size: 32, offset: 416)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4514, file: !4515, line: 313, baseType: !625, size: 16, offset: 448)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !4514, file: !4515, line: 314, baseType: !625, size: 16, offset: 464)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !4514, file: !4515, line: 315, baseType: !4742, size: 352, offset: 480)
!4742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !4743, line: 32, size: 352, elements: !4744)
!4743 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!4744 = !{!4745, !4747, !4748, !4749, !4750, !4752, !4756, !4758}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !4742, file: !4743, line: 33, baseType: !4746, size: 32)
!4746 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !4743, line: 9, baseType: !7)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !4742, file: !4743, line: 34, baseType: !4746, size: 32, offset: 32)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !4742, file: !4743, line: 35, baseType: !4746, size: 32, offset: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !4742, file: !4743, line: 36, baseType: !4746, size: 32, offset: 96)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !4742, file: !4743, line: 37, baseType: !4751, size: 8, offset: 128)
!4751 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !4743, line: 7, baseType: !482)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !4742, file: !4743, line: 38, baseType: !4753, size: 152, offset: 136)
!4753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4751, size: 152, elements: !4754)
!4754 = !{!4755}
!4755 = !DISubrange(count: 19)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !4742, file: !4743, line: 39, baseType: !4757, size: 32, offset: 288)
!4757 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !4743, line: 8, baseType: !7)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !4742, file: !4743, line: 40, baseType: !4757, size: 32, offset: 320)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4514, file: !4515, line: 316, baseType: !312, size: 64, offset: 832)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !4514, file: !4515, line: 317, baseType: !3028, size: 64, offset: 896)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !4514, file: !4515, line: 318, baseType: !4513, size: 64, offset: 960)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !4514, file: !4515, line: 323, baseType: !4763, size: 64, offset: 1024)
!4763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4514, file: !4515, line: 324, baseType: !4765, size: 64, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !3762, line: 230, size: 2432, elements: !4768)
!4768 = !{!4769, !4799, !4800, !4801, !4823, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4767, file: !3762, line: 231, baseType: !4770, size: 1024)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !3762, line: 85, size: 1024, elements: !4771)
!4771 = !{!4772, !4788, !4789, !4790, !4791, !4792, !4796, !4797, !4798}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4770, file: !3762, line: 86, baseType: !4773, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !3762, line: 58, size: 256, elements: !4775)
!4775 = !{!4776, !4781, !4782, !4783, !4784, !4785, !4786}
!4776 = !DIDerivedType(tag: DW_TAG_member, scope: !4774, file: !3762, line: 59, baseType: !4777, size: 64)
!4777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4774, file: !3762, line: 59, size: 64, elements: !4778)
!4778 = !{!4779, !4780}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4777, file: !3762, line: 60, baseType: !4773, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4777, file: !3762, line: 61, baseType: !1323, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4774, file: !3762, line: 63, baseType: !32, size: 32, offset: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4774, file: !3762, line: 64, baseType: !32, size: 32, offset: 96)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4774, file: !3762, line: 65, baseType: !32, size: 32, offset: 128)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4774, file: !3762, line: 66, baseType: !32, size: 32, offset: 160)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4774, file: !3762, line: 67, baseType: !32, size: 32, offset: 192)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4774, file: !3762, line: 69, baseType: !4787, offset: 256)
!4787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4770, file: !3762, line: 87, baseType: !2764, size: 256, offset: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4770, file: !3762, line: 88, baseType: !1665, size: 192, offset: 320)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4770, file: !3762, line: 89, baseType: !383, size: 32, offset: 512)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !4770, file: !3762, line: 90, baseType: !4774, size: 256, offset: 576)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4770, file: !3762, line: 91, baseType: !4793, size: 64, offset: 832)
!4793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !1324, line: 54, size: 64, elements: !4794)
!4794 = !{!4795}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4793, file: !1324, line: 55, baseType: !1327, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !4770, file: !3762, line: 92, baseType: !383, size: 32, offset: 896)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !4770, file: !3762, line: 93, baseType: !32, size: 32, offset: 928)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4770, file: !3762, line: 94, baseType: !4773, size: 64, offset: 960)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4767, file: !3762, line: 232, baseType: !3760, size: 64, offset: 1024)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !4767, file: !3762, line: 233, baseType: !3760, size: 64, offset: 1088)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4767, file: !3762, line: 234, baseType: !4802, size: 64, offset: 1152)
!4802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4803, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4804)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !3762, line: 205, size: 320, elements: !4805)
!4805 = !{!4806, !4810, !4814, !4818, !4822}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4804, file: !3762, line: 207, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!32, !4766}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4804, file: !3762, line: 209, baseType: !4811, size: 64, offset: 64)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{null, !4766, !32}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4804, file: !3762, line: 213, baseType: !4815, size: 64, offset: 128)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{null, !4766}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4804, file: !3762, line: 218, baseType: !4819, size: 64, offset: 192)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!32, !4766, !3760}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4804, file: !3762, line: 220, baseType: !4815, size: 64, offset: 256)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !4767, file: !3762, line: 235, baseType: !4824, size: 64, offset: 1216)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4826)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !3762, line: 223, size: 128, elements: !4827)
!4827 = !{!4828, !4832}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4826, file: !3762, line: 224, baseType: !4829, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!32, !4766, !946, !946, !1039}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4826, file: !3762, line: 225, baseType: !4815, size: 64, offset: 64)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4767, file: !3762, line: 236, baseType: !1670, offset: 1280)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !4767, file: !3762, line: 237, baseType: !32, size: 32, offset: 1280)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4767, file: !3762, line: 238, baseType: !32, size: 32, offset: 1312)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !4767, file: !3762, line: 239, baseType: !1889, size: 128, offset: 1344)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !4767, file: !3762, line: 240, baseType: !1889, size: 128, offset: 1472)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4767, file: !3762, line: 241, baseType: !312, size: 64, offset: 1600)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !4767, file: !3762, line: 242, baseType: !312, size: 64, offset: 1664)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !4767, file: !3762, line: 243, baseType: !482, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !4767, file: !3762, line: 244, baseType: !482, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4767, file: !3762, line: 245, baseType: !1665, size: 192, offset: 1792)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !4767, file: !3762, line: 246, baseType: !1665, size: 192, offset: 1984)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !4767, file: !3762, line: 247, baseType: !564, size: 64, offset: 2176)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4767, file: !3762, line: 248, baseType: !7, size: 32, offset: 2240)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4767, file: !3762, line: 249, baseType: !7, size: 32, offset: 2272)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !4767, file: !3762, line: 250, baseType: !32, size: 32, offset: 2304)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4767, file: !3762, line: 253, baseType: !2594, size: 32, offset: 2336)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !4767, file: !3762, line: 254, baseType: !591, size: 64, offset: 2368)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !4514, file: !4515, line: 325, baseType: !4851, size: 64, offset: 1152)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !4514, file: !4515, line: 326, baseType: !591, size: 64, offset: 1216)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4514, file: !4515, line: 332, baseType: !4855, size: 64, offset: 1280)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4857)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !4515, line: 254, size: 2176, elements: !4858)
!4858 = !{!4859, !4863, !4867, !4871, !4875, !4879, !4883, !4884, !4888, !4892, !4893, !4897, !4898, !4902, !4906, !4910, !4911, !4912, !4913, !4914, !4915, !4919, !4920, !4921, !4925, !4929, !4930, !4934, !4946, !4959, !4980, !5006, !5007, !5011}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !4857, file: !4515, line: 255, baseType: !4860, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = !DISubroutineType(types: !4862)
!4862 = !{!3760, !4513, !1315, !32}
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !4857, file: !4515, line: 257, baseType: !4864, size: 64, offset: 64)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DISubroutineType(types: !4866)
!4866 = !{!32, !4513, !3760}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4857, file: !4515, line: 258, baseType: !4868, size: 64, offset: 128)
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = !DISubroutineType(types: !4870)
!4870 = !{null, !4513, !3760}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4857, file: !4515, line: 259, baseType: !4872, size: 64, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4873, size: 64)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!32, !3760, !1315}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4857, file: !4515, line: 260, baseType: !4876, size: 64, offset: 256)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{null, !3760, !1315}
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4857, file: !4515, line: 261, baseType: !4880, size: 64, offset: 320)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !3760}
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4857, file: !4515, line: 262, baseType: !4880, size: 64, offset: 384)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4857, file: !4515, line: 263, baseType: !4885, size: 64, offset: 448)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!32, !3760, !946, !32}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !4857, file: !4515, line: 265, baseType: !4889, size: 64, offset: 512)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!32, !3760, !482}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !4857, file: !4515, line: 266, baseType: !4880, size: 64, offset: 576)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !4857, file: !4515, line: 267, baseType: !4894, size: 64, offset: 640)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!32, !3760}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !4857, file: !4515, line: 268, baseType: !4894, size: 64, offset: 704)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4857, file: !4515, line: 269, baseType: !4899, size: 64, offset: 768)
!4899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4900, size: 64)
!4900 = !DISubroutineType(types: !4901)
!4901 = !{!32, !3760, !7, !312}
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4857, file: !4515, line: 271, baseType: !4903, size: 64, offset: 832)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!998, !3760, !7, !312}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4857, file: !4515, line: 273, baseType: !4907, size: 64, offset: 896)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{null, !3760, !4852}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4857, file: !4515, line: 274, baseType: !4880, size: 64, offset: 960)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4857, file: !4515, line: 275, baseType: !4880, size: 64, offset: 1024)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4857, file: !4515, line: 276, baseType: !4880, size: 64, offset: 1088)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4857, file: !4515, line: 277, baseType: !4880, size: 64, offset: 1152)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4857, file: !4515, line: 278, baseType: !4880, size: 64, offset: 1216)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !4857, file: !4515, line: 279, baseType: !4916, size: 64, offset: 1280)
!4916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4917 = !DISubroutineType(types: !4918)
!4918 = !{!32, !3760, !32}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4857, file: !4515, line: 280, baseType: !4880, size: 64, offset: 1344)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4857, file: !4515, line: 281, baseType: !4880, size: 64, offset: 1408)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !4857, file: !4515, line: 282, baseType: !4922, size: 64, offset: 1472)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DISubroutineType(types: !4924)
!4924 = !{null, !3760, !32}
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !4857, file: !4515, line: 283, baseType: !4926, size: 64, offset: 1536)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !3760, !268}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !4857, file: !4515, line: 284, baseType: !4894, size: 64, offset: 1600)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !4857, file: !4515, line: 285, baseType: !4931, size: 64, offset: 1664)
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!32, !3760, !7, !7}
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !4857, file: !4515, line: 287, baseType: !4935, size: 64, offset: 1728)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!32, !3760, !4938}
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4940, line: 15, size: 64, elements: !4941)
!4940 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4941 = !{!4942, !4943, !4944, !4945}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4939, file: !4940, line: 16, baseType: !476, size: 16)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4939, file: !4940, line: 17, baseType: !476, size: 16, offset: 16)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4939, file: !4940, line: 18, baseType: !476, size: 16, offset: 32)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4939, file: !4940, line: 19, baseType: !476, size: 16, offset: 48)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !4857, file: !4515, line: 288, baseType: !4947, size: 64, offset: 1792)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!32, !3760, !4950}
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4952, line: 10, size: 128, elements: !4953)
!4952 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4953 = !{!4954, !4955, !4956, !4958}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4951, file: !4952, line: 12, baseType: !475, size: 16)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4951, file: !4952, line: 13, baseType: !475, size: 16, offset: 16)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4951, file: !4952, line: 14, baseType: !4957, size: 80, offset: 32)
!4957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 80, elements: !2630)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4951, file: !4952, line: 15, baseType: !475, size: 16, offset: 112)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !4857, file: !4515, line: 289, baseType: !4960, size: 64, offset: 1856)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!32, !3760, !4963}
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4965, line: 102, size: 640, elements: !4966)
!4965 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4966 = !{!4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 32)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 64)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4964, file: !4965, line: 103, baseType: !32, size: 32, offset: 96)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4964, file: !4965, line: 104, baseType: !32, size: 32, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4964, file: !4965, line: 104, baseType: !32, size: 32, offset: 160)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 192)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 224)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 256)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4964, file: !4965, line: 105, baseType: !32, size: 32, offset: 288)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4964, file: !4965, line: 106, baseType: !32, size: 32, offset: 320)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4964, file: !4965, line: 107, baseType: !4979, size: 288, offset: 352)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 288, elements: !3105)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !4857, file: !4515, line: 291, baseType: !4981, size: 64, offset: 1920)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!32, !3760, !4984}
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4965, line: 19, size: 576, elements: !4986)
!4986 = !{!4987, !4988, !4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996, !4997, !4999, !5000, !5001, !5002, !5003, !5004, !5005}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4985, file: !4965, line: 20, baseType: !32, size: 32)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4985, file: !4965, line: 21, baseType: !32, size: 32, offset: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4985, file: !4965, line: 22, baseType: !7, size: 32, offset: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4985, file: !4965, line: 23, baseType: !32, size: 32, offset: 96)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4985, file: !4965, line: 24, baseType: !32, size: 32, offset: 128)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4985, file: !4965, line: 25, baseType: !32, size: 32, offset: 160)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4985, file: !4965, line: 26, baseType: !32, size: 32, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4985, file: !4965, line: 27, baseType: !32, size: 32, offset: 224)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4985, file: !4965, line: 28, baseType: !476, size: 16, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4985, file: !4965, line: 29, baseType: !268, size: 8, offset: 272)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4985, file: !4965, line: 30, baseType: !4998, size: 8, offset: 280)
!4998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 8, elements: !2472)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4985, file: !4965, line: 31, baseType: !32, size: 32, offset: 288)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4985, file: !4965, line: 32, baseType: !476, size: 16, offset: 320)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4985, file: !4965, line: 33, baseType: !476, size: 16, offset: 336)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4985, file: !4965, line: 34, baseType: !564, size: 64, offset: 384)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4985, file: !4965, line: 35, baseType: !476, size: 16, offset: 448)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4985, file: !4965, line: 36, baseType: !7, size: 32, offset: 480)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4985, file: !4965, line: 37, baseType: !312, size: 64, offset: 512)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !4857, file: !4515, line: 292, baseType: !4981, size: 64, offset: 1984)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4857, file: !4515, line: 293, baseType: !5008, size: 64, offset: 2048)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !3760, !1653}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !4857, file: !4515, line: 299, baseType: !1704, size: 64, offset: 2112)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !4514, file: !4515, line: 333, baseType: !284, size: 128, offset: 1344)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3761, file: !3762, line: 290, baseType: !4855, size: 64, offset: 192)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3761, file: !3762, line: 291, baseType: !32, size: 32, offset: 256)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !3761, file: !3762, line: 294, baseType: !5016, size: 384, offset: 320)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !5017, line: 133, size: 384, elements: !5018)
!5017 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!5018 = !{!5019, !5020, !5021, !5022, !5023}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5016, file: !5017, line: 134, baseType: !371, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !5016, file: !5017, line: 135, baseType: !1761, offset: 64)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !5016, file: !5017, line: 136, baseType: !7, size: 32, offset: 64)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !5016, file: !5017, line: 137, baseType: !284, size: 128, offset: 128)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !5016, file: !5017, line: 138, baseType: !284, size: 128, offset: 256)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !3761, file: !3762, line: 295, baseType: !5025, size: 64, offset: 704)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !5017, line: 215, size: 128, elements: !5027)
!5027 = !{!5028, !5073}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5026, file: !5017, line: 216, baseType: !5029, size: 64)
!5029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5030, size: 64)
!5030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !5017, line: 175, size: 1216, elements: !5031)
!5031 = !{!5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5043, !5047, !5051, !5052, !5053, !5057, !5058, !5062, !5063, !5067, !5071, !5072}
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5030, file: !5017, line: 176, baseType: !32, size: 32)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5030, file: !5017, line: 177, baseType: !1038, size: 64, offset: 64)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5030, file: !5017, line: 178, baseType: !32, size: 32, offset: 128)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5030, file: !5017, line: 179, baseType: !32, size: 32, offset: 160)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5030, file: !5017, line: 184, baseType: !4894, size: 64, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !5030, file: !5017, line: 185, baseType: !4880, size: 64, offset: 256)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !5030, file: !5017, line: 186, baseType: !4880, size: 64, offset: 320)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5030, file: !5017, line: 187, baseType: !5040, size: 64, offset: 384)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!1521, !3760, !1315, !564, !1039}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5030, file: !5017, line: 189, baseType: !5044, size: 64, offset: 448)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!1521, !3760, !1315, !946, !1039}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5030, file: !5017, line: 191, baseType: !5048, size: 64, offset: 512)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!32, !3760, !1315, !7, !312}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5030, file: !5017, line: 193, baseType: !5048, size: 64, offset: 576)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !5030, file: !5017, line: 195, baseType: !4907, size: 64, offset: 640)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !5030, file: !5017, line: 196, baseType: !5054, size: 64, offset: 704)
!5054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5055, size: 64)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!4027, !3760, !1315, !4028}
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !5030, file: !5017, line: 198, baseType: !4894, size: 64, offset: 768)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !5030, file: !5017, line: 203, baseType: !5059, size: 64, offset: 832)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !3760, !946, !1038, !32}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !5030, file: !5017, line: 205, baseType: !4880, size: 64, offset: 896)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !5030, file: !5017, line: 206, baseType: !5064, size: 64, offset: 960)
!5064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5065, size: 64)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !3760, !7}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !5030, file: !5017, line: 207, baseType: !5068, size: 64, offset: 1024)
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!32, !3760, !946, !1038, !32}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5030, file: !5017, line: 210, baseType: !980, size: 64, offset: 1088)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5030, file: !5017, line: 212, baseType: !32, size: 32, offset: 1152)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !5026, file: !5017, line: 217, baseType: !3760, size: 64, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !3761, file: !3762, line: 297, baseType: !1665, size: 192, offset: 768)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !3761, file: !3762, line: 298, baseType: !1665, size: 192, offset: 960)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !3761, file: !3762, line: 299, baseType: !1665, size: 192, offset: 1152)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !3761, file: !3762, line: 300, baseType: !1755, size: 256, offset: 1344)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !3761, file: !3762, line: 301, baseType: !1665, size: 192, offset: 1600)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !3761, file: !3762, line: 302, baseType: !1670, offset: 1792)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !3761, file: !3762, line: 303, baseType: !1670, offset: 1792)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3761, file: !3762, line: 305, baseType: !4742, size: 352, offset: 1792)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !3761, file: !3762, line: 305, baseType: !4742, size: 352, offset: 2144)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !3761, file: !3762, line: 306, baseType: !4950, size: 64, offset: 2496)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3761, file: !3762, line: 307, baseType: !5085, size: 512, offset: 2560)
!5085 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 512, elements: !3813)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !3761, file: !3762, line: 308, baseType: !2571, size: 64, offset: 3072)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !3761, file: !3762, line: 313, baseType: !2571, size: 64, offset: 3136)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3761, file: !3762, line: 314, baseType: !312, size: 64, offset: 3200)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3761, file: !3762, line: 315, baseType: !32, size: 32, offset: 3264)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !3761, file: !3762, line: 316, baseType: !4939, size: 64, offset: 3296)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !3761, file: !3762, line: 317, baseType: !312, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !3761, file: !3762, line: 318, baseType: !312, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3761, file: !3762, line: 319, baseType: !312, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !3761, file: !3762, line: 320, baseType: !32, size: 32, offset: 3456)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !3761, file: !3762, line: 321, baseType: !312, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !3761, file: !3762, line: 322, baseType: !312, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !3761, file: !3762, line: 323, baseType: !312, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !3761, file: !3762, line: 324, baseType: !7, size: 32, offset: 3584)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !3761, file: !3762, line: 325, baseType: !32, size: 32, offset: 3616)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3761, file: !3762, line: 327, baseType: !3760, size: 64, offset: 3648)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3761, file: !3762, line: 328, baseType: !1908, size: 64, offset: 3712)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !3761, file: !3762, line: 329, baseType: !1889, size: 128, offset: 3776)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !3761, file: !3762, line: 330, baseType: !1889, size: 128, offset: 3904)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !3761, file: !3762, line: 331, baseType: !2764, size: 256, offset: 4032)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !3761, file: !3762, line: 332, baseType: !591, size: 64, offset: 4288)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3761, file: !3762, line: 333, baseType: !591, size: 64, offset: 4352)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !3761, file: !3762, line: 334, baseType: !1670, offset: 4416)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !3761, file: !3762, line: 335, baseType: !284, size: 128, offset: 4416)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !3761, file: !3762, line: 339, baseType: !32, size: 32, offset: 4544)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !3761, file: !3762, line: 340, baseType: !564, size: 64, offset: 4608)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !3761, file: !3762, line: 341, baseType: !32, size: 32, offset: 4672)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !3761, file: !3762, line: 343, baseType: !2764, size: 256, offset: 4736)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3761, file: !3762, line: 344, baseType: !4766, size: 64, offset: 4992)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3707, file: !3708, line: 175, baseType: !3343, size: 32, offset: 3200)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3264)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3328)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3392)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3707, file: !3708, line: 176, baseType: !331, size: 64, offset: 3456)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3707, file: !3708, line: 177, baseType: !331, size: 64, offset: 3520)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3707, file: !3708, line: 178, baseType: !331, size: 64, offset: 3584)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3707, file: !3708, line: 179, baseType: !2896, size: 128, offset: 3648)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3776)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3840)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3904)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3707, file: !3708, line: 180, baseType: !312, size: 64, offset: 3968)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4032)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4096)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4160)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3707, file: !3708, line: 181, baseType: !312, size: 64, offset: 4224)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4288)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4352)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4416)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3707, file: !3708, line: 182, baseType: !312, size: 64, offset: 4480)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3707, file: !3708, line: 183, baseType: !312, size: 64, offset: 4544)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3707, file: !3708, line: 183, baseType: !312, size: 64, offset: 4608)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3707, file: !3708, line: 184, baseType: !5137, offset: 4672)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !5138, line: 12, elements: !1587)
!5138 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3707, file: !3708, line: 192, baseType: !335, size: 64, offset: 4672)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3707, file: !3708, line: 203, baseType: !5141, size: 2048, offset: 4736)
!5141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5142, size: 2048, elements: !269)
!5142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !5143, line: 43, size: 128, elements: !5144)
!5143 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!5144 = !{!5145, !5146}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !5142, file: !5143, line: 44, baseType: !1042, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !5142, file: !5143, line: 45, baseType: !1042, size: 64, offset: 64)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3707, file: !3708, line: 220, baseType: !771, size: 8, offset: 6784)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3707, file: !3708, line: 221, baseType: !625, size: 16, offset: 6800)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3707, file: !3708, line: 222, baseType: !625, size: 16, offset: 6816)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3707, file: !3708, line: 224, baseType: !2091, size: 64, offset: 6848)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3707, file: !3708, line: 227, baseType: !1665, size: 192, offset: 6912)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3707, file: !3708, line: 233, baseType: !1665, size: 192, offset: 7104)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2327, file: !2328, line: 970, baseType: !5154, size: 64, offset: 9280)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3708, line: 20, size: 16576, elements: !5156)
!5156 = !{!5157, !5158, !5159, !5160}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !5155, file: !3708, line: 21, baseType: !1670)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5155, file: !3708, line: 22, baseType: !568, size: 32)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !5155, file: !3708, line: 23, baseType: !1889, size: 128, offset: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5155, file: !3708, line: 24, baseType: !5161, size: 16384, offset: 192)
!5161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5162, size: 16384, elements: !3813)
!5162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3718, line: 49, size: 256, elements: !5163)
!5163 = !{!5164}
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !5162, file: !3718, line: 50, baseType: !5165, size: 256)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3718, line: 35, size: 256, elements: !5166)
!5166 = !{!5167, !5174, !5175, !5181}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !5165, file: !3718, line: 37, baseType: !5168, size: 64)
!5168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !5169, line: 19, baseType: !5170)
!5169 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !5169, line: 18, baseType: !5172)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !32}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !5165, file: !3718, line: 38, baseType: !312, size: 64, offset: 64)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !5165, file: !3718, line: 44, baseType: !5176, size: 64, offset: 128)
!5176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !5169, line: 22, baseType: !5177)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !5169, line: 21, baseType: !5179)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{null}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !5165, file: !3718, line: 46, baseType: !3722, size: 64, offset: 192)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2327, file: !2328, line: 971, baseType: !3722, size: 64, offset: 9344)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2327, file: !2328, line: 972, baseType: !3722, size: 64, offset: 9408)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2327, file: !2328, line: 974, baseType: !3722, size: 64, offset: 9472)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2327, file: !2328, line: 975, baseType: !3717, size: 192, offset: 9536)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2327, file: !2328, line: 976, baseType: !312, size: 64, offset: 9728)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2327, file: !2328, line: 977, baseType: !1039, size: 64, offset: 9792)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2327, file: !2328, line: 978, baseType: !7, size: 32, offset: 9856)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2327, file: !2328, line: 980, baseType: !302, size: 64, offset: 9920)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2327, file: !2328, line: 989, baseType: !5191, size: 128, offset: 9984)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !5192, line: 35, size: 128, elements: !5193)
!5192 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!5193 = !{!5194, !5195, !5196}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5191, file: !5192, line: 36, baseType: !32, size: 32)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !5191, file: !5192, line: 37, baseType: !383, size: 32, offset: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !5191, file: !5192, line: 38, baseType: !5197, size: 64, offset: 64)
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !5192, line: 23, flags: DIFlagFwdDecl)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2327, file: !2328, line: 992, baseType: !331, size: 64, offset: 10112)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2327, file: !2328, line: 993, baseType: !331, size: 64, offset: 10176)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2327, file: !2328, line: 996, baseType: !1670, offset: 10240)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2327, file: !2328, line: 999, baseType: !1761, offset: 10240)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2327, file: !2328, line: 1001, baseType: !5204, size: 64, offset: 10240)
!5204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2328, line: 636, size: 64, elements: !5205)
!5205 = !{!5206}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5204, file: !2328, line: 637, baseType: !5207, size: 64)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2327, file: !2328, line: 1005, baseType: !1747, size: 128, offset: 10304)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2327, file: !2328, line: 1007, baseType: !2326, size: 64, offset: 10432)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2327, file: !2328, line: 1009, baseType: !5211, size: 64, offset: 10496)
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5212, size: 64)
!5212 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2328, line: 1009, flags: DIFlagFwdDecl)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2327, file: !2328, line: 1043, baseType: !591, size: 64, offset: 10560)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2327, file: !2328, line: 1046, baseType: !5215, size: 64, offset: 10624)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2328, line: 41, flags: DIFlagFwdDecl)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2327, file: !2328, line: 1050, baseType: !5218, size: 64, offset: 10688)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2328, line: 42, flags: DIFlagFwdDecl)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2327, file: !2328, line: 1054, baseType: !5221, size: 64, offset: 10752)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 64)
!5222 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2328, line: 55, flags: DIFlagFwdDecl)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2327, file: !2328, line: 1056, baseType: !5224, size: 64, offset: 10816)
!5224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5225, size: 64)
!5225 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2328, line: 40, flags: DIFlagFwdDecl)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2327, file: !2328, line: 1058, baseType: !5227, size: 64, offset: 10880)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5229, line: 99, size: 704, elements: !5230)
!5229 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5230 = !{!5231, !5232, !5233, !5234, !5235, !5236, !5237, !5256, !5257}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5228, file: !5229, line: 100, baseType: !371, size: 64)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5228, file: !5229, line: 101, baseType: !383, size: 32, offset: 64)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5228, file: !5229, line: 102, baseType: !383, size: 32, offset: 96)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5228, file: !5229, line: 105, baseType: !1670, offset: 128)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5228, file: !5229, line: 107, baseType: !476, size: 16, offset: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5228, file: !5229, line: 109, baseType: !1737, size: 128, offset: 192)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5228, file: !5229, line: 110, baseType: !5238, size: 64, offset: 320)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5229, line: 73, size: 448, elements: !5240)
!5240 = !{!5241, !5244, !5245, !5250, !5255}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5239, file: !5229, line: 74, baseType: !5242, size: 64)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !5229, line: 74, flags: DIFlagFwdDecl)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5239, file: !5229, line: 75, baseType: !5227, size: 64, offset: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, scope: !5239, file: !5229, line: 83, baseType: !5246, size: 128, offset: 128)
!5246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5239, file: !5229, line: 83, size: 128, elements: !5247)
!5247 = !{!5248, !5249}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5246, file: !5229, line: 84, baseType: !284, size: 128)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5246, file: !5229, line: 85, baseType: !2051, size: 64)
!5250 = !DIDerivedType(tag: DW_TAG_member, scope: !5239, file: !5229, line: 87, baseType: !5251, size: 128, offset: 256)
!5251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5239, file: !5229, line: 87, size: 128, elements: !5252)
!5252 = !{!5253, !5254}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5251, file: !5229, line: 88, baseType: !276, size: 128)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5251, file: !5229, line: 89, baseType: !299, size: 128, align: 64)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5239, file: !5229, line: 92, baseType: !7, size: 32, offset: 384)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5228, file: !5229, line: 111, baseType: !1581, size: 64, offset: 384)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5228, file: !5229, line: 113, baseType: !2764, size: 256, offset: 448)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2327, file: !2328, line: 1061, baseType: !5259, size: 64, offset: 10944)
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 64)
!5260 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2328, line: 43, flags: DIFlagFwdDecl)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2327, file: !2328, line: 1064, baseType: !312, size: 64, offset: 11008)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2327, file: !2328, line: 1065, baseType: !5263, size: 64, offset: 11072)
!5263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5264, size: 64)
!5264 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3718, line: 14, baseType: !5265)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3718, line: 12, size: 384, elements: !5266)
!5266 = !{!5267}
!5267 = !DIDerivedType(tag: DW_TAG_member, scope: !5265, file: !3718, line: 13, baseType: !5268, size: 384)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5265, file: !3718, line: 13, size: 384, elements: !5269)
!5269 = !{!5270, !5271, !5272, !5273}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32, offset: 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5268, file: !3718, line: 13, baseType: !32, size: 32, offset: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5268, file: !3718, line: 13, baseType: !5274, size: 256, offset: 128)
!5274 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5275, line: 32, size: 256, elements: !5276)
!5275 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5276 = !{!5277, !5282, !5295, !5301, !5310, !5330, !5335}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5274, file: !5275, line: 37, baseType: !5278, size: 64)
!5278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 34, size: 64, elements: !5279)
!5279 = !{!5280, !5281}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5278, file: !5275, line: 35, baseType: !2560, size: 32)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5278, file: !5275, line: 36, baseType: !1388, size: 32, offset: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5274, file: !5275, line: 45, baseType: !5283, size: 192)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 40, size: 192, elements: !5284)
!5284 = !{!5285, !5287, !5288, !5294}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5283, file: !5275, line: 41, baseType: !5286, size: 32)
!5286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5283, file: !5275, line: 42, baseType: !32, size: 32, offset: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5283, file: !5275, line: 43, baseType: !5289, size: 64, offset: 64)
!5289 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5275, line: 11, baseType: !5290)
!5290 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5275, line: 8, size: 64, elements: !5291)
!5291 = !{!5292, !5293}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5290, file: !5275, line: 9, baseType: !32, size: 32)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5290, file: !5275, line: 10, baseType: !591, size: 64)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5283, file: !5275, line: 44, baseType: !32, size: 32, offset: 128)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5274, file: !5275, line: 52, baseType: !5296, size: 128)
!5296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 48, size: 128, elements: !5297)
!5297 = !{!5298, !5299, !5300}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5296, file: !5275, line: 49, baseType: !2560, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5296, file: !5275, line: 50, baseType: !1388, size: 32, offset: 32)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5296, file: !5275, line: 51, baseType: !5289, size: 64, offset: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5274, file: !5275, line: 61, baseType: !5302, size: 256)
!5302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 55, size: 256, elements: !5303)
!5303 = !{!5304, !5305, !5306, !5307, !5309}
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5302, file: !5275, line: 56, baseType: !2560, size: 32)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5302, file: !5275, line: 57, baseType: !1388, size: 32, offset: 32)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5302, file: !5275, line: 58, baseType: !32, size: 32, offset: 64)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5302, file: !5275, line: 59, baseType: !5308, size: 64, offset: 128)
!5308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5302, file: !5275, line: 60, baseType: !5308, size: 64, offset: 192)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5274, file: !5275, line: 95, baseType: !5311, size: 256)
!5311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 64, size: 256, elements: !5312)
!5312 = !{!5313, !5314}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5311, file: !5275, line: 65, baseType: !591, size: 64)
!5314 = !DIDerivedType(tag: DW_TAG_member, scope: !5311, file: !5275, line: 77, baseType: !5315, size: 192, offset: 64)
!5315 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5311, file: !5275, line: 77, size: 192, elements: !5316)
!5316 = !{!5317, !5318, !5325}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5315, file: !5275, line: 82, baseType: !625, size: 16)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5315, file: !5275, line: 88, baseType: !5319, size: 192)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5315, file: !5275, line: 84, size: 192, elements: !5320)
!5320 = !{!5321, !5323, !5324}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5319, file: !5275, line: 85, baseType: !5322, size: 64)
!5322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2433)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5319, file: !5275, line: 86, baseType: !591, size: 64, offset: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5319, file: !5275, line: 87, baseType: !591, size: 64, offset: 128)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5315, file: !5275, line: 93, baseType: !5326, size: 96)
!5326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5315, file: !5275, line: 90, size: 96, elements: !5327)
!5327 = !{!5328, !5329}
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5326, file: !5275, line: 91, baseType: !5322, size: 64)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5326, file: !5275, line: 92, baseType: !493, size: 32, offset: 64)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5274, file: !5275, line: 101, baseType: !5331, size: 128)
!5331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 98, size: 128, elements: !5332)
!5332 = !{!5333, !5334}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5331, file: !5275, line: 99, baseType: !998, size: 64)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5331, file: !5275, line: 100, baseType: !32, size: 32, offset: 64)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5274, file: !5275, line: 108, baseType: !5336, size: 128)
!5336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5274, file: !5275, line: 104, size: 128, elements: !5337)
!5337 = !{!5338, !5339, !5340}
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5336, file: !5275, line: 105, baseType: !591, size: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5336, file: !5275, line: 106, baseType: !32, size: 32, offset: 64)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5336, file: !5275, line: 107, baseType: !7, size: 32, offset: 96)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2327, file: !2328, line: 1067, baseType: !5137, offset: 11136)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2327, file: !2328, line: 1099, baseType: !5343, size: 64, offset: 11136)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2328, line: 56, flags: DIFlagFwdDecl)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2327, file: !2328, line: 1103, baseType: !284, size: 128, offset: 11200)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2327, file: !2328, line: 1104, baseType: !5347, size: 64, offset: 11328)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2328, line: 46, flags: DIFlagFwdDecl)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2327, file: !2328, line: 1105, baseType: !1665, size: 192, offset: 11392)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2327, file: !2328, line: 1106, baseType: !7, size: 32, offset: 11584)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2327, file: !2328, line: 1109, baseType: !5352, size: 128, offset: 11648)
!5352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5353, size: 128, elements: !2947)
!5353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5354, size: 64)
!5354 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2328, line: 51, flags: DIFlagFwdDecl)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2327, file: !2328, line: 1110, baseType: !1665, size: 192, offset: 11776)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2327, file: !2328, line: 1111, baseType: !284, size: 128, offset: 11968)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2327, file: !2328, line: 1173, baseType: !5358, size: 64, offset: 12096)
!5358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5359, size: 64)
!5359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5360, line: 62, size: 256, align: 256, elements: !5361)
!5360 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5361 = !{!5362, !5363, !5364, !5369}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5359, file: !5360, line: 75, baseType: !493, size: 32)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5359, file: !5360, line: 90, baseType: !493, size: 32, offset: 32)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5359, file: !5360, line: 124, baseType: !5365, size: 64, offset: 64)
!5365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5359, file: !5360, line: 109, size: 64, elements: !5366)
!5366 = !{!5367, !5368}
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5365, file: !5360, line: 110, baseType: !333, size: 64)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5365, file: !5360, line: 112, baseType: !333, size: 64)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5359, file: !5360, line: 144, baseType: !493, size: 32, offset: 128)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2327, file: !2328, line: 1174, baseType: !987, size: 32, offset: 12160)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2327, file: !2328, line: 1179, baseType: !312, size: 64, offset: 12224)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2327, file: !2328, line: 1182, baseType: !5373, size: 128, offset: 12288)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2268, line: 76, size: 128, elements: !5374)
!5374 = !{!5375, !5380, !5381}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5373, file: !2268, line: 85, baseType: !5376, size: 64)
!5376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5377, line: 7, size: 64, elements: !5378)
!5377 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5378 = !{!5379}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5376, file: !5377, line: 12, baseType: !2468, size: 64)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5373, file: !2268, line: 88, baseType: !771, size: 8, offset: 64)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5373, file: !2268, line: 95, baseType: !771, size: 8, offset: 72)
!5382 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !2328, line: 1184, baseType: !5383, size: 128, offset: 12416)
!5383 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !2328, line: 1184, size: 128, elements: !5384)
!5384 = !{!5385, !5386}
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5383, file: !2328, line: 1185, baseType: !568, size: 32)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5383, file: !2328, line: 1186, baseType: !299, size: 128, align: 64)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2327, file: !2328, line: 1190, baseType: !1883, size: 64, offset: 12544)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2327, file: !2328, line: 1192, baseType: !5389, size: 128, offset: 12608)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2268, line: 64, size: 128, elements: !5390)
!5390 = !{!5391, !5392, !5393}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5389, file: !2268, line: 65, baseType: !1719, size: 64)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5389, file: !2268, line: 67, baseType: !493, size: 32, offset: 64)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5389, file: !2268, line: 68, baseType: !493, size: 32, offset: 96)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2327, file: !2328, line: 1206, baseType: !32, size: 32, offset: 12736)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2327, file: !2328, line: 1207, baseType: !32, size: 32, offset: 12768)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2327, file: !2328, line: 1209, baseType: !312, size: 64, offset: 12800)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2327, file: !2328, line: 1219, baseType: !331, size: 64, offset: 12864)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2327, file: !2328, line: 1220, baseType: !331, size: 64, offset: 12928)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2327, file: !2328, line: 1317, baseType: !32, size: 32, offset: 12992)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2327, file: !2328, line: 1319, baseType: !2326, size: 64, offset: 13056)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2327, file: !2328, line: 1322, baseType: !5402, size: 64, offset: 13120)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5404, line: 56, size: 512, elements: !5405)
!5404 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5412, !5414}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5403, file: !5404, line: 57, baseType: !5402, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5403, file: !5404, line: 58, baseType: !591, size: 64, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5403, file: !5404, line: 59, baseType: !312, size: 64, offset: 128)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5403, file: !5404, line: 60, baseType: !312, size: 64, offset: 192)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5403, file: !5404, line: 61, baseType: !1801, size: 64, offset: 256)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5403, file: !5404, line: 62, baseType: !7, size: 32, offset: 320)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5403, file: !5404, line: 63, baseType: !5413, size: 64, offset: 384)
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5403, file: !5404, line: 64, baseType: !3276, size: 64, offset: 448)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2327, file: !2328, line: 1326, baseType: !568, size: 32, offset: 13184)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2327, file: !2328, line: 1342, baseType: !591, size: 64, offset: 13248)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2327, file: !2328, line: 1343, baseType: !333, size: 64, offset: 13312)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2327, file: !2328, line: 1344, baseType: !331, size: 64, offset: 13376)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2327, file: !2328, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2327, file: !2328, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2327, file: !2328, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2327, file: !2328, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2327, file: !2328, line: 1358, baseType: !5424, size: 34816, offset: 13824)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5425, line: 485, size: 34816, elements: !5426)
!5425 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5426 = !{!5427, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5456, !5457, !5458, !5459, !5460, !5461, !5464, !5465, !5466}
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5424, file: !5425, line: 487, baseType: !5428, size: 192)
!5428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5429, size: 192, elements: !1592)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5430, line: 16, size: 64, elements: !5431)
!5430 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5431 = !{!5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444}
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5429, file: !5430, line: 17, baseType: !581, size: 16)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5429, file: !5430, line: 18, baseType: !581, size: 16, offset: 16)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5429, file: !5430, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5429, file: !5430, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5429, file: !5430, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5429, file: !5430, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5429, file: !5430, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5429, file: !5430, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5429, file: !5430, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5429, file: !5430, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5424, file: !5425, line: 491, baseType: !312, size: 64, offset: 192)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5424, file: !5425, line: 495, baseType: !476, size: 16, offset: 256)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5424, file: !5425, line: 496, baseType: !476, size: 16, offset: 272)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5424, file: !5425, line: 497, baseType: !476, size: 16, offset: 288)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5424, file: !5425, line: 498, baseType: !476, size: 16, offset: 304)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5424, file: !5425, line: 502, baseType: !312, size: 64, offset: 320)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5424, file: !5425, line: 503, baseType: !312, size: 64, offset: 384)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5424, file: !5425, line: 514, baseType: !5453, size: 256, offset: 448)
!5453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5454, size: 256, elements: !2272)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5425, line: 483, flags: DIFlagFwdDecl)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5424, file: !5425, line: 516, baseType: !312, size: 64, offset: 704)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5424, file: !5425, line: 518, baseType: !312, size: 64, offset: 768)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5424, file: !5425, line: 520, baseType: !312, size: 64, offset: 832)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5424, file: !5425, line: 521, baseType: !312, size: 64, offset: 896)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5424, file: !5425, line: 522, baseType: !312, size: 64, offset: 960)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5424, file: !5425, line: 528, baseType: !5462, size: 64, offset: 1024)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5463, size: 64)
!5463 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5425, line: 10, flags: DIFlagFwdDecl)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5424, file: !5425, line: 535, baseType: !312, size: 64, offset: 1088)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5424, file: !5425, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5424, file: !5425, line: 540, baseType: !5467, size: 33280, offset: 1536)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5468, line: 317, size: 33280, elements: !5469)
!5468 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5469 = !{!5470, !5471, !5472}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5467, file: !5468, line: 330, baseType: !7, size: 32)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5467, file: !5468, line: 337, baseType: !312, size: 64, offset: 64)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5467, file: !5468, line: 348, baseType: !5473, size: 32768, offset: 512)
!5473 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5468, line: 304, size: 32768, elements: !5474)
!5474 = !{!5475, !5488, !5525, !5575, !5588}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5473, file: !5468, line: 305, baseType: !5476, size: 896)
!5476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5468, line: 12, size: 896, elements: !5477)
!5477 = !{!5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5487}
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5476, file: !5468, line: 13, baseType: !987, size: 32)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5476, file: !5468, line: 14, baseType: !987, size: 32, offset: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5476, file: !5468, line: 15, baseType: !987, size: 32, offset: 64)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5476, file: !5468, line: 16, baseType: !987, size: 32, offset: 96)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5476, file: !5468, line: 17, baseType: !987, size: 32, offset: 128)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5476, file: !5468, line: 18, baseType: !987, size: 32, offset: 160)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5476, file: !5468, line: 19, baseType: !987, size: 32, offset: 192)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5476, file: !5468, line: 22, baseType: !5486, size: 640, offset: 224)
!5486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5476, file: !5468, line: 25, baseType: !987, size: 32, offset: 864)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5473, file: !5468, line: 306, baseType: !5489, size: 4096, align: 128)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5468, line: 34, size: 4096, align: 128, elements: !5490)
!5490 = !{!5491, !5492, !5493, !5494, !5495, !5510, !5511, !5512, !5514, !5516, !5520}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5489, file: !5468, line: 35, baseType: !581, size: 16)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5489, file: !5468, line: 36, baseType: !581, size: 16, offset: 16)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5489, file: !5468, line: 37, baseType: !581, size: 16, offset: 32)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5489, file: !5468, line: 38, baseType: !581, size: 16, offset: 48)
!5495 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5468, line: 39, baseType: !5496, size: 128, offset: 64)
!5496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5468, line: 39, size: 128, elements: !5497)
!5497 = !{!5498, !5503}
!5498 = !DIDerivedType(tag: DW_TAG_member, scope: !5496, file: !5468, line: 40, baseType: !5499, size: 128)
!5499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5496, file: !5468, line: 40, size: 128, elements: !5500)
!5500 = !{!5501, !5502}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5499, file: !5468, line: 41, baseType: !331, size: 64)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5499, file: !5468, line: 42, baseType: !331, size: 64, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_member, scope: !5496, file: !5468, line: 44, baseType: !5504, size: 128)
!5504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5496, file: !5468, line: 44, size: 128, elements: !5505)
!5505 = !{!5506, !5507, !5508, !5509}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5504, file: !5468, line: 45, baseType: !987, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5504, file: !5468, line: 46, baseType: !987, size: 32, offset: 32)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5504, file: !5468, line: 47, baseType: !987, size: 32, offset: 64)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5504, file: !5468, line: 48, baseType: !987, size: 32, offset: 96)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5489, file: !5468, line: 51, baseType: !987, size: 32, offset: 192)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5489, file: !5468, line: 52, baseType: !987, size: 32, offset: 224)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5489, file: !5468, line: 55, baseType: !5513, size: 1024, offset: 256)
!5513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5489, file: !5468, line: 58, baseType: !5515, size: 2048, offset: 1280)
!5515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3813)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5489, file: !5468, line: 60, baseType: !5517, size: 384, offset: 3328)
!5517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !5518)
!5518 = !{!5519}
!5519 = !DISubrange(count: 12)
!5520 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5468, line: 62, baseType: !5521, size: 384, offset: 3712)
!5521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5468, line: 62, size: 384, elements: !5522)
!5522 = !{!5523, !5524}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5521, file: !5468, line: 63, baseType: !5517, size: 384)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5521, file: !5468, line: 64, baseType: !5517, size: 384)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5473, file: !5468, line: 307, baseType: !5526, size: 1088)
!5526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5468, line: 79, size: 1088, elements: !5527)
!5527 = !{!5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5574}
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5526, file: !5468, line: 80, baseType: !987, size: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5526, file: !5468, line: 81, baseType: !987, size: 32, offset: 32)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5526, file: !5468, line: 82, baseType: !987, size: 32, offset: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5526, file: !5468, line: 83, baseType: !987, size: 32, offset: 96)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5526, file: !5468, line: 84, baseType: !987, size: 32, offset: 128)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5526, file: !5468, line: 85, baseType: !987, size: 32, offset: 160)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5526, file: !5468, line: 86, baseType: !987, size: 32, offset: 192)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5526, file: !5468, line: 88, baseType: !5486, size: 640, offset: 224)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5526, file: !5468, line: 89, baseType: !794, size: 8, offset: 864)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5526, file: !5468, line: 90, baseType: !794, size: 8, offset: 872)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5526, file: !5468, line: 91, baseType: !794, size: 8, offset: 880)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5526, file: !5468, line: 92, baseType: !794, size: 8, offset: 888)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5526, file: !5468, line: 93, baseType: !794, size: 8, offset: 896)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5526, file: !5468, line: 94, baseType: !794, size: 8, offset: 904)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5526, file: !5468, line: 95, baseType: !5543, size: 64, offset: 960)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5545, line: 11, size: 128, elements: !5546)
!5545 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5546 = !{!5547, !5548}
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5544, file: !5545, line: 12, baseType: !998, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5544, file: !5545, line: 13, baseType: !5549, size: 64, offset: 64)
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5551, line: 56, size: 1344, elements: !5552)
!5551 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5552 = !{!5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5561, !5562, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5550, file: !5551, line: 61, baseType: !312, size: 64)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5550, file: !5551, line: 62, baseType: !312, size: 64, offset: 64)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5550, file: !5551, line: 63, baseType: !312, size: 64, offset: 128)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5550, file: !5551, line: 64, baseType: !312, size: 64, offset: 192)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5550, file: !5551, line: 65, baseType: !312, size: 64, offset: 256)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5550, file: !5551, line: 66, baseType: !312, size: 64, offset: 320)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5550, file: !5551, line: 68, baseType: !312, size: 64, offset: 384)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5550, file: !5551, line: 69, baseType: !312, size: 64, offset: 448)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5550, file: !5551, line: 70, baseType: !312, size: 64, offset: 512)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5550, file: !5551, line: 71, baseType: !312, size: 64, offset: 576)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5550, file: !5551, line: 72, baseType: !312, size: 64, offset: 640)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5550, file: !5551, line: 73, baseType: !312, size: 64, offset: 704)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5550, file: !5551, line: 74, baseType: !312, size: 64, offset: 768)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5550, file: !5551, line: 75, baseType: !312, size: 64, offset: 832)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5550, file: !5551, line: 76, baseType: !312, size: 64, offset: 896)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5550, file: !5551, line: 81, baseType: !312, size: 64, offset: 960)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5550, file: !5551, line: 83, baseType: !312, size: 64, offset: 1024)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5550, file: !5551, line: 84, baseType: !312, size: 64, offset: 1088)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5550, file: !5551, line: 85, baseType: !312, size: 64, offset: 1152)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5550, file: !5551, line: 86, baseType: !312, size: 64, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5550, file: !5551, line: 87, baseType: !312, size: 64, offset: 1280)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5526, file: !5468, line: 96, baseType: !987, size: 32, offset: 1024)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5473, file: !5468, line: 308, baseType: !5576, size: 4608, align: 512)
!5576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5468, line: 289, size: 4608, align: 512, elements: !5577)
!5577 = !{!5578, !5579, !5586}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5576, file: !5468, line: 290, baseType: !5489, size: 4096, align: 128)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5576, file: !5468, line: 291, baseType: !5580, size: 512, offset: 4096)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5468, line: 268, size: 512, elements: !5581)
!5581 = !{!5582, !5583, !5584}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5580, file: !5468, line: 269, baseType: !331, size: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5580, file: !5468, line: 270, baseType: !331, size: 64, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5580, file: !5468, line: 271, baseType: !5585, size: 384, offset: 128)
!5585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5576, file: !5468, line: 292, baseType: !5587, offset: 4608)
!5587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5473, file: !5468, line: 309, baseType: !5589, size: 32768)
!5589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !5590)
!5590 = !{!5591}
!5591 = !DISubrange(count: 4096)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2323, file: !1721, line: 378, baseType: !5593, size: 64, offset: 64)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2319, file: !1721, line: 384, baseType: !2825, size: 192, offset: 192)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2095, file: !1721, line: 500, baseType: !1670, offset: 6656)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2095, file: !1721, line: 501, baseType: !5597, size: 64, offset: 6656)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1721, line: 387, flags: DIFlagFwdDecl)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2095, file: !1721, line: 516, baseType: !2612, size: 64, offset: 6720)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2095, file: !1721, line: 519, baseType: !1315, size: 64, offset: 6784)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2095, file: !1721, line: 521, baseType: !5602, size: 64, offset: 6848)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1721, line: 521, flags: DIFlagFwdDecl)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2095, file: !1721, line: 545, baseType: !383, size: 32, offset: 6912)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2095, file: !1721, line: 548, baseType: !771, size: 8, offset: 6944)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2095, file: !1721, line: 550, baseType: !5607, offset: 6952)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5608, line: 142, elements: !1587)
!5608 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2095, file: !1721, line: 554, baseType: !2764, size: 256, offset: 6976)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2095, file: !1721, line: 557, baseType: !987, size: 32, offset: 7232)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2092, file: !1721, line: 565, baseType: !4787, offset: 7296)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2088, file: !1721, line: 151, baseType: !383, size: 32)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2080, file: !1721, line: 156, baseType: !1670, offset: 256)
!5614 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1721, line: 159, baseType: !5615, size: 128)
!5615 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1725, file: !1721, line: 159, size: 128, elements: !5616)
!5616 = !{!5617, !5688}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !5615, file: !1721, line: 161, baseType: !5618, size: 64)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !5620, line: 110, size: 1152, elements: !5621)
!5620 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!5621 = !{!5622, !5632, !5653, !5654, !5655, !5662, !5663, !5675, !5676, !5677}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !5619, file: !5620, line: 111, baseType: !5623, size: 384)
!5623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !5620, line: 19, size: 384, elements: !5624)
!5624 = !{!5625, !5627, !5628, !5629, !5630, !5631}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !5623, file: !5620, line: 20, baseType: !5626, size: 64)
!5626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !5623, file: !5620, line: 21, baseType: !5626, size: 64, offset: 64)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !5623, file: !5620, line: 22, baseType: !5626, size: 64, offset: 128)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5623, file: !5620, line: 23, baseType: !312, size: 64, offset: 192)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !5623, file: !5620, line: 24, baseType: !312, size: 64, offset: 256)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5623, file: !5620, line: 25, baseType: !312, size: 64, offset: 320)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5619, file: !5620, line: 112, baseType: !5633, size: 64, offset: 384)
!5633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5634, size: 64)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !5635, line: 105, size: 128, elements: !5636)
!5635 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!5636 = !{!5637, !5638}
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !5634, file: !5635, line: 110, baseType: !312, size: 64)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5634, file: !5635, line: 118, baseType: !5639, size: 64, offset: 64)
!5639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5640, size: 64)
!5640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !5635, line: 95, size: 448, elements: !5641)
!5641 = !{!5642, !5643, !5648, !5649, !5650, !5651, !5652}
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5640, file: !5635, line: 96, baseType: !371, size: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5640, file: !5635, line: 97, baseType: !5644, size: 64, offset: 64)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !5635, line: 60, baseType: !5646)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{null, !5633}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !5640, file: !5635, line: 98, baseType: !5644, size: 64, offset: 128)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !5640, file: !5635, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !5640, file: !5635, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5640, file: !5635, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5640, file: !5635, line: 102, baseType: !5633, size: 64, offset: 384)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !5619, file: !5620, line: 113, baseType: !5634, size: 128, offset: 448)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5619, file: !5620, line: 114, baseType: !2825, size: 192, offset: 576)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5619, file: !5620, line: 115, baseType: !5656, size: 32, offset: 768)
!5656 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !5620, line: 59, baseType: !7, size: 32, elements: !5657)
!5657 = !{!5658, !5659, !5660, !5661}
!5658 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!5659 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!5660 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!5661 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5619, file: !5620, line: 116, baseType: !7, size: 32, offset: 800)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5619, file: !5620, line: 117, baseType: !5664, size: 64, offset: 832)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5666)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !5620, line: 67, size: 256, elements: !5667)
!5667 = !{!5668, !5669, !5673, !5674}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !5666, file: !5620, line: 73, baseType: !1821, size: 64)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !5666, file: !5620, line: 78, baseType: !5670, size: 64, offset: 64)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{null, !5618}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !5666, file: !5620, line: 83, baseType: !5670, size: 64, offset: 128)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !5666, file: !5620, line: 89, baseType: !2144, size: 64, offset: 192)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5619, file: !5620, line: 118, baseType: !591, size: 64, offset: 896)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !5619, file: !5620, line: 119, baseType: !32, size: 32, offset: 960)
!5677 = !DIDerivedType(tag: DW_TAG_member, scope: !5619, file: !5620, line: 120, baseType: !5678, size: 128, offset: 1024)
!5678 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5619, file: !5620, line: 120, size: 128, elements: !5679)
!5679 = !{!5680, !5686}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5678, file: !5620, line: 121, baseType: !5681, size: 128)
!5681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !5682, line: 6, size: 128, elements: !5683)
!5682 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!5683 = !{!5684, !5685}
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5681, file: !5682, line: 7, baseType: !331, size: 64)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5681, file: !5682, line: 8, baseType: !331, size: 64, offset: 64)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !5678, file: !5620, line: 122, baseType: !5687)
!5687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5681, elements: !483)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !5615, file: !1721, line: 162, baseType: !591, size: 64, offset: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1725, file: !1721, line: 176, baseType: !299, size: 128, align: 64)
!5690 = !DIDerivedType(tag: DW_TAG_member, scope: !1720, file: !1721, line: 179, baseType: !5691, size: 32, offset: 384)
!5691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1720, file: !1721, line: 179, size: 32, elements: !5692)
!5692 = !{!5693, !5694, !5695, !5696}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !5691, file: !1721, line: 184, baseType: !383, size: 32)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !5691, file: !1721, line: 192, baseType: !7, size: 32)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5691, file: !1721, line: 194, baseType: !7, size: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !5691, file: !1721, line: 195, baseType: !32, size: 32)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1720, file: !1721, line: 199, baseType: !383, size: 32, offset: 416)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1600, file: !1317, line: 1964, baseType: !5699, size: 64, offset: 1344)
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5700, size: 64)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!998, !1545, !5702}
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5703, size: 64)
!5703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !5704, line: 12, size: 256, elements: !5705)
!5704 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!5705 = !{!5706, !5707, !5708, !5709, !5710}
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !5703, file: !5704, line: 13, baseType: !1742, size: 32)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !5703, file: !5704, line: 16, baseType: !32, size: 32, offset: 32)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !5703, file: !5704, line: 23, baseType: !312, size: 64, offset: 64)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !5703, file: !5704, line: 30, baseType: !312, size: 64, offset: 128)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !5703, file: !5704, line: 33, baseType: !5711, size: 64, offset: 192)
!5711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5712, size: 64)
!5712 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1721, line: 27, flags: DIFlagFwdDecl)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1600, file: !1317, line: 1966, baseType: !5699, size: 64, offset: 1408)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !5715, size: 64, offset: 448)
!5715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5716, size: 64)
!5716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5717)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !5718, line: 322, size: 704, elements: !5719)
!5718 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!5719 = !{!5720, !5771, !5775, !5779, !5780, !5781, !5782, !5783, !5788, !5793, !5797}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !5717, file: !5718, line: 323, baseType: !5721, size: 64)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!32, !5724}
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !5718, line: 294, size: 1600, elements: !5726)
!5726 = !{!5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5756, !5757, !5758}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !5725, file: !5718, line: 295, baseType: !276, size: 128)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !5725, file: !5718, line: 296, baseType: !284, size: 128, offset: 128)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !5725, file: !5718, line: 297, baseType: !284, size: 128, offset: 256)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !5725, file: !5718, line: 298, baseType: !284, size: 128, offset: 384)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !5725, file: !5718, line: 299, baseType: !1665, size: 192, offset: 512)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !5725, file: !5718, line: 300, baseType: !1670, offset: 704)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !5725, file: !5718, line: 301, baseType: !383, size: 32, offset: 704)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !5725, file: !5718, line: 302, baseType: !1545, size: 64, offset: 768)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !5725, file: !5718, line: 303, baseType: !5736, size: 64, offset: 832)
!5736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !5718, line: 68, size: 64, elements: !5737)
!5737 = !{!5738, !5750}
!5738 = !DIDerivedType(tag: DW_TAG_member, scope: !5736, file: !5718, line: 69, baseType: !5739, size: 32)
!5739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5736, file: !5718, line: 69, size: 32, elements: !5740)
!5740 = !{!5741, !5742, !5743}
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5739, file: !5718, line: 70, baseType: !1382, size: 32)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !5739, file: !5718, line: 71, baseType: !1390, size: 32)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !5739, file: !5718, line: 72, baseType: !5744, size: 32)
!5744 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !5745, line: 24, baseType: !5746)
!5745 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!5746 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5745, line: 22, size: 32, elements: !5747)
!5747 = !{!5748}
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5746, file: !5745, line: 23, baseType: !5749, size: 32)
!5749 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !5745, line: 20, baseType: !1388)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5736, file: !5718, line: 74, baseType: !5751, size: 32, offset: 32)
!5751 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !5718, line: 54, baseType: !7, size: 32, elements: !5752)
!5752 = !{!5753, !5754, !5755}
!5753 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!5754 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!5755 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !5725, file: !5718, line: 304, baseType: !1476, size: 64, offset: 896)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !5725, file: !5718, line: 305, baseType: !312, size: 64, offset: 960)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !5725, file: !5718, line: 306, baseType: !5759, size: 576, offset: 1024)
!5759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !5718, line: 205, size: 576, elements: !5760)
!5760 = !{!5761, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770}
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !5759, file: !5718, line: 206, baseType: !5762, size: 64)
!5762 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !5718, line: 66, baseType: !379)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !5759, file: !5718, line: 207, baseType: !5762, size: 64, offset: 64)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !5759, file: !5718, line: 208, baseType: !5762, size: 64, offset: 128)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !5759, file: !5718, line: 209, baseType: !5762, size: 64, offset: 192)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !5759, file: !5718, line: 210, baseType: !5762, size: 64, offset: 256)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !5759, file: !5718, line: 211, baseType: !5762, size: 64, offset: 320)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !5759, file: !5718, line: 212, baseType: !5762, size: 64, offset: 384)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !5759, file: !5718, line: 213, baseType: !1483, size: 64, offset: 448)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !5759, file: !5718, line: 214, baseType: !1483, size: 64, offset: 512)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !5717, file: !5718, line: 324, baseType: !5772, size: 64, offset: 64)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!5724, !1545, !32}
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !5717, file: !5718, line: 325, baseType: !5776, size: 64, offset: 128)
!5776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5777, size: 64)
!5777 = !DISubroutineType(types: !5778)
!5778 = !{null, !5724}
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !5717, file: !5718, line: 326, baseType: !5721, size: 64, offset: 192)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !5717, file: !5718, line: 327, baseType: !5721, size: 64, offset: 256)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !5717, file: !5718, line: 328, baseType: !5721, size: 64, offset: 320)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !5717, file: !5718, line: 329, baseType: !1628, size: 64, offset: 384)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !5717, file: !5718, line: 332, baseType: !5784, size: 64, offset: 448)
!5784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5785, size: 64)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{!5787, !1375}
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !5717, file: !5718, line: 333, baseType: !5789, size: 64, offset: 512)
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!32, !1375, !5792}
!5792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !5717, file: !5718, line: 335, baseType: !5794, size: 64, offset: 576)
!5794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5795, size: 64)
!5795 = !DISubroutineType(types: !5796)
!5796 = !{!32, !1375, !5787}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !5717, file: !5718, line: 337, baseType: !5798, size: 64, offset: 640)
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5799, size: 64)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!32, !1545, !5801}
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5736, size: 64)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !5803, size: 64, offset: 512)
!5803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5804, size: 64)
!5804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5805)
!5805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !5718, line: 428, size: 704, elements: !5806)
!5806 = !{!5807, !5811, !5812, !5816, !5817, !5818, !5833, !5856, !5860, !5861, !5884}
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !5805, file: !5718, line: 429, baseType: !5808, size: 64)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DISubroutineType(types: !5810)
!5810 = !{!32, !1545, !32, !32, !1492}
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !5805, file: !5718, line: 430, baseType: !1628, size: 64, offset: 64)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !5805, file: !5718, line: 431, baseType: !5813, size: 64, offset: 128)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!32, !1545, !7}
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !5805, file: !5718, line: 432, baseType: !5813, size: 64, offset: 192)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !5805, file: !5718, line: 433, baseType: !1628, size: 64, offset: 256)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !5805, file: !5718, line: 434, baseType: !5819, size: 64, offset: 320)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!32, !1545, !32, !5822}
!5822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5823, size: 64)
!5823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !5718, line: 415, size: 256, elements: !5824)
!5824 = !{!5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !5823, file: !5718, line: 416, baseType: !32, size: 32)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !5823, file: !5718, line: 417, baseType: !7, size: 32, offset: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !5823, file: !5718, line: 418, baseType: !7, size: 32, offset: 64)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !5823, file: !5718, line: 420, baseType: !7, size: 32, offset: 96)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !5823, file: !5718, line: 421, baseType: !7, size: 32, offset: 128)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !5823, file: !5718, line: 422, baseType: !7, size: 32, offset: 160)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !5823, file: !5718, line: 423, baseType: !7, size: 32, offset: 192)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !5823, file: !5718, line: 424, baseType: !7, size: 32, offset: 224)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !5805, file: !5718, line: 435, baseType: !5834, size: 64, offset: 384)
!5834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5835, size: 64)
!5835 = !DISubroutineType(types: !5836)
!5836 = !{!32, !1545, !5736, !5837}
!5837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5838, size: 64)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !5718, line: 343, size: 960, elements: !5839)
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !5838, file: !5718, line: 344, baseType: !32, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !5838, file: !5718, line: 345, baseType: !331, size: 64, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !5838, file: !5718, line: 346, baseType: !331, size: 64, offset: 128)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !5838, file: !5718, line: 347, baseType: !331, size: 64, offset: 192)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !5838, file: !5718, line: 348, baseType: !331, size: 64, offset: 256)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !5838, file: !5718, line: 349, baseType: !331, size: 64, offset: 320)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !5838, file: !5718, line: 350, baseType: !331, size: 64, offset: 384)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !5838, file: !5718, line: 351, baseType: !377, size: 64, offset: 448)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !5838, file: !5718, line: 353, baseType: !377, size: 64, offset: 512)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !5838, file: !5718, line: 354, baseType: !32, size: 32, offset: 576)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !5838, file: !5718, line: 355, baseType: !32, size: 32, offset: 608)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !5838, file: !5718, line: 356, baseType: !331, size: 64, offset: 640)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !5838, file: !5718, line: 357, baseType: !331, size: 64, offset: 704)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !5838, file: !5718, line: 358, baseType: !331, size: 64, offset: 768)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !5838, file: !5718, line: 359, baseType: !377, size: 64, offset: 832)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !5838, file: !5718, line: 360, baseType: !32, size: 32, offset: 896)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !5805, file: !5718, line: 436, baseType: !5857, size: 64, offset: 448)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{!32, !1545, !5801, !5837}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !5805, file: !5718, line: 438, baseType: !5834, size: 64, offset: 512)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !5805, file: !5718, line: 439, baseType: !5862, size: 64, offset: 576)
!5862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5863, size: 64)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!32, !1545, !5865}
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !5718, line: 409, size: 1408, elements: !5867)
!5867 = !{!5868, !5869}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !5866, file: !5718, line: 410, baseType: !7, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !5866, file: !5718, line: 411, baseType: !5870, size: 1344, offset: 64)
!5870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5871, size: 1344, elements: !1592)
!5871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !5718, line: 395, size: 448, elements: !5872)
!5872 = !{!5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5883}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5871, file: !5718, line: 396, baseType: !7, size: 32)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !5871, file: !5718, line: 397, baseType: !7, size: 32, offset: 32)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !5871, file: !5718, line: 399, baseType: !7, size: 32, offset: 64)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !5871, file: !5718, line: 400, baseType: !7, size: 32, offset: 96)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !5871, file: !5718, line: 401, baseType: !7, size: 32, offset: 128)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !5871, file: !5718, line: 402, baseType: !7, size: 32, offset: 160)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !5871, file: !5718, line: 403, baseType: !7, size: 32, offset: 192)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !5871, file: !5718, line: 404, baseType: !335, size: 64, offset: 256)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !5871, file: !5718, line: 405, baseType: !5882, size: 64, offset: 320)
!5882 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !5871, file: !5718, line: 406, baseType: !5882, size: 64, offset: 384)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !5805, file: !5718, line: 440, baseType: !5813, size: 64, offset: 640)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !5886, size: 64, offset: 576)
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5887, size: 64)
!5887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5888)
!5888 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1755, size: 256, offset: 896)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !5897, size: 64, offset: 1216)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5898, size: 64)
!5898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5899, size: 64)
!5899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5900)
!5900 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !5902, size: 64, offset: 1280)
!5902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !5903)
!5903 = !{!5904}
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !5902, file: !1354, line: 35, baseType: !1357, size: 64)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !5907, size: 64, offset: 1472)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !5224, size: 64, offset: 1536)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !5911, size: 64, offset: 1600)
!5911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5912, size: 64)
!5912 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !5916, size: 2432, offset: 1856)
!5916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !5718, line: 518, size: 2432, elements: !5917)
!5917 = !{!5918, !5919, !5920, !5922, !5954}
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5916, file: !5718, line: 519, baseType: !7, size: 32)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !5916, file: !5718, line: 520, baseType: !1755, size: 256, offset: 64)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5916, file: !5718, line: 521, baseType: !5921, size: 192, offset: 320)
!5921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1592)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5916, file: !5718, line: 522, baseType: !5923, size: 1728, offset: 512)
!5923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5924, size: 1728, elements: !1592)
!5924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !5718, line: 222, size: 576, elements: !5925)
!5925 = !{!5926, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !5924, file: !5718, line: 223, baseType: !5927, size: 64)
!5927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5928, size: 64)
!5928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !5718, line: 443, size: 256, elements: !5929)
!5929 = !{!5930, !5931, !5944, !5945}
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !5928, file: !5718, line: 444, baseType: !32, size: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !5928, file: !5718, line: 445, baseType: !5932, size: 64, offset: 64)
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64)
!5933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5934)
!5934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !5718, line: 310, size: 512, elements: !5935)
!5935 = !{!5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943}
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !5934, file: !5718, line: 311, baseType: !1628, size: 64)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !5934, file: !5718, line: 312, baseType: !1628, size: 64, offset: 64)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !5934, file: !5718, line: 313, baseType: !1628, size: 64, offset: 128)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !5934, file: !5718, line: 314, baseType: !1628, size: 64, offset: 192)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !5934, file: !5718, line: 315, baseType: !5721, size: 64, offset: 256)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !5934, file: !5718, line: 316, baseType: !5721, size: 64, offset: 320)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !5934, file: !5718, line: 317, baseType: !5721, size: 64, offset: 384)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !5934, file: !5718, line: 318, baseType: !5798, size: 64, offset: 448)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !5928, file: !5718, line: 446, baseType: !980, size: 64, offset: 128)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !5928, file: !5718, line: 447, baseType: !5927, size: 64, offset: 192)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !5924, file: !5718, line: 224, baseType: !32, size: 32, offset: 64)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !5924, file: !5718, line: 226, baseType: !284, size: 128, offset: 128)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !5924, file: !5718, line: 227, baseType: !312, size: 64, offset: 256)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !5924, file: !5718, line: 228, baseType: !7, size: 32, offset: 320)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !5924, file: !5718, line: 229, baseType: !7, size: 32, offset: 352)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !5924, file: !5718, line: 230, baseType: !5762, size: 64, offset: 384)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !5924, file: !5718, line: 231, baseType: !5762, size: 64, offset: 448)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !5924, file: !5718, line: 232, baseType: !591, size: 64, offset: 512)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5916, file: !5718, line: 523, baseType: !5955, size: 192, offset: 2240)
!5955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5932, size: 192, elements: !1592)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !5957, size: 2112, offset: 4288)
!5957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !5958)
!5958 = !{!5959, !5960, !5961}
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !5957, file: !1317, line: 1411, baseType: !32, size: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !5957, file: !1317, line: 1412, baseType: !1889, size: 128, offset: 64)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !5957, file: !1317, line: 1413, baseType: !5962, size: 1920, offset: 192)
!5962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5963, size: 1920, elements: !1592)
!5963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !5964, line: 12, size: 640, elements: !5965)
!5964 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!5965 = !{!5966, !5974, !5976, !5981, !5982}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !5963, file: !5964, line: 13, baseType: !5967, size: 320)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !5968, line: 17, size: 320, elements: !5969)
!5968 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!5969 = !{!5970, !5971, !5972, !5973}
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !5967, file: !5968, line: 18, baseType: !32, size: 32)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !5967, file: !5968, line: 19, baseType: !32, size: 32, offset: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !5967, file: !5968, line: 20, baseType: !1889, size: 128, offset: 64)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !5967, file: !5968, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !5963, file: !5964, line: 14, baseType: !5975, size: 64, offset: 320)
!5975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !5963, file: !5964, line: 15, baseType: !5977, size: 64, offset: 384)
!5977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !5978, line: 16, size: 64, elements: !5979)
!5978 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!5979 = !{!5980}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5977, file: !5978, line: 17, baseType: !2326, size: 64)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !5963, file: !5964, line: 16, baseType: !1889, size: 128, offset: 448)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5963, file: !5964, line: 17, baseType: !383, size: 32, offset: 576)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !5989, size: 64, offset: 6720)
!5989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5990, size: 64)
!5990 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4146, size: 256, offset: 6784)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !5993, size: 128, offset: 7040)
!5993 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !5994, line: 18, baseType: !5995)
!5994 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5994, line: 16, size: 128, elements: !5996)
!5996 = !{!5997}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5995, file: !5994, line: 17, baseType: !3243, size: 128)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !6000, size: 32, offset: 7200)
!6000 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1665, size: 192, offset: 7232)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !6004, size: 64, offset: 7488)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6006)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !6007)
!6007 = !{!6008, !6012, !6013, !6020, !6026, !6030, !6034, !6038, !6039, !6043, !6047, !6052, !6056}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !6006, file: !1336, line: 136, baseType: !6009, size: 64)
!6009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6010, size: 64)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!32, !1338, !7}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !6006, file: !1336, line: 137, baseType: !6009, size: 64, offset: 64)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !6006, file: !1336, line: 138, baseType: !6014, size: 64, offset: 128)
!6014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6015, size: 64)
!6015 = !DISubroutineType(types: !6016)
!6016 = !{!32, !6017, !6019}
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6018, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !6006, file: !1336, line: 139, baseType: !6021, size: 64, offset: 192)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = !DISubroutineType(types: !6023)
!6023 = !{!32, !6017, !7, !292, !6024}
!6024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6025, size: 64)
!6025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !6006, file: !1336, line: 141, baseType: !6027, size: 64, offset: 256)
!6027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6028, size: 64)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!32, !6017}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !6006, file: !1336, line: 142, baseType: !6031, size: 64, offset: 320)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{!32, !1338}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !6006, file: !1336, line: 143, baseType: !6035, size: 64, offset: 384)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !1338}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !6006, file: !1336, line: 144, baseType: !6035, size: 64, offset: 448)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !6006, file: !1336, line: 145, baseType: !6040, size: 64, offset: 512)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{null, !1338, !1375}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !6006, file: !1336, line: 146, baseType: !6044, size: 64, offset: 576)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!1038, !1338, !1038, !32}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !6006, file: !1336, line: 147, baseType: !6048, size: 64, offset: 640)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!1334, !6051}
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !6006, file: !1336, line: 148, baseType: !6053, size: 64, offset: 704)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!32, !1492, !771}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !6006, file: !1336, line: 149, baseType: !6057, size: 64, offset: 768)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!1338, !1338, !6060}
!6060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6061, size: 64)
!6061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !6064, size: 448, offset: 7616)
!6064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !5704, line: 60, size: 448, elements: !6065)
!6065 = !{!6066, !6071, !6072, !6073, !6074, !6075, !6076}
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6064, file: !5704, line: 61, baseType: !6067, size: 64)
!6067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6068, size: 64)
!6068 = !DISubroutineType(types: !6069)
!6069 = !{!312, !6070, !5702}
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6064, size: 64)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6064, file: !5704, line: 63, baseType: !6067, size: 64, offset: 64)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6064, file: !5704, line: 66, baseType: !998, size: 64, offset: 128)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6064, file: !5704, line: 67, baseType: !32, size: 32, offset: 192)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6064, file: !5704, line: 68, baseType: !7, size: 32, offset: 224)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6064, file: !5704, line: 71, baseType: !284, size: 128, offset: 256)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6064, file: !5704, line: 77, baseType: !6077, size: 64, offset: 384)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2025, size: 32, offset: 8224)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !6083, size: 64, offset: 8256)
!6083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6084, size: 64)
!6084 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2765, line: 18, flags: DIFlagFwdDecl)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1581, size: 64, offset: 8320)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2612, size: 64, offset: 8384)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !6088, size: 64, offset: 8448)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6089, line: 52, size: 64, elements: !6090)
!6089 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6090 = !{!6091}
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6088, file: !6089, line: 53, baseType: !6092, size: 64)
!6092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6089, line: 40, size: 256, elements: !6094)
!6094 = !{!6095, !6096, !6101}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6093, file: !6089, line: 42, baseType: !1670)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6093, file: !6089, line: 44, baseType: !6097, size: 192)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6089, line: 28, size: 192, elements: !6098)
!6098 = !{!6099, !6100}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6097, file: !6089, line: 29, baseType: !284, size: 128)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6097, file: !6089, line: 31, baseType: !998, size: 64, offset: 128)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6093, file: !6089, line: 49, baseType: !998, size: 64, offset: 192)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !6088, size: 64, offset: 8512)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2764, size: 256, offset: 8704)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1665, size: 192, offset: 8960)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1670, offset: 9184)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1670, offset: 9344)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1732, size: 64, offset: 256)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!6113 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !6114, size: 32, offset: 384)
!6114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !6115)
!6115 = !{!6116, !6118}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6114, file: !1317, line: 640, baseType: !6117, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6114, file: !1317, line: 641, baseType: !7, size: 32)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1670, offset: 896)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !5882, size: 64, offset: 960)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1755, size: 256, offset: 1088)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!6138 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !6139, size: 128, offset: 2112)
!6139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !6140)
!6140 = !{!6141, !6142}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6139, file: !1317, line: 679, baseType: !1581, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6139, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!6149 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !6150, size: 64, offset: 2496)
!6150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !6151)
!6151 = !{!6152, !6153}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6150, file: !1317, line: 691, baseType: !4528, size: 64)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6150, file: !1317, line: 692, baseType: !1607, size: 64)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !6155, size: 64, offset: 2560)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !6157)
!6157 = !{!6158, !6159, !6160, !6161}
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6156, file: !1317, line: 1101, baseType: !1670)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6156, file: !1317, line: 1102, baseType: !284, size: 128)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6156, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6156, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1733, size: 1216, align: 64, offset: 2624)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!6164 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !6165, size: 64, offset: 3968)
!6165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !6166)
!6166 = !{!6167, !6168, !6169, !6170, !6171}
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6165, file: !1317, line: 698, baseType: !1883, size: 64)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6165, file: !1317, line: 699, baseType: !5907, size: 64)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6165, file: !1317, line: 700, baseType: !4521, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6165, file: !1317, line: 701, baseType: !1038, size: 64)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6165, file: !1317, line: 702, baseType: !7, size: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !5989, size: 64, offset: 4096)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !6178, size: 32, offset: 704)
!6178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !6179, line: 25, size: 32, elements: !6180)
!6179 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!6180 = !{!6181}
!6181 = !DIDerivedType(tag: DW_TAG_member, scope: !6178, file: !6179, line: 26, baseType: !6182, size: 32)
!6182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6178, file: !6179, line: 26, size: 32, elements: !6183)
!6183 = !{!6184}
!6184 = !DIDerivedType(tag: DW_TAG_member, scope: !6182, file: !6179, line: 30, baseType: !6185, size: 32)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6182, file: !6179, line: 30, size: 32, elements: !6186)
!6186 = !{!6187, !6188}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6185, file: !6179, line: 31, baseType: !1670)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6185, file: !6179, line: 32, baseType: !32, size: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !6004, size: 64, offset: 768)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!6193 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !6194, size: 128, offset: 1024)
!6194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !6195)
!6195 = !{!6196, !6197}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6194, file: !1336, line: 108, baseType: !284, size: 128)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6194, file: !1336, line: 109, baseType: !6198, size: 64)
!6198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !6202, size: 128, offset: 1408)
!6202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !6203)
!6203 = !{!6204, !6205, !6206}
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6202, file: !1336, line: 117, baseType: !276, size: 128)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6202, file: !1336, line: 118, baseType: !1353, size: 128)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6202, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4528, size: 64, offset: 320)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1670, offset: 384)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !6211, size: 32, offset: 384)
!6211 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !6212)
!6212 = !{!6213, !6214, !6215, !6216, !6217, !6218}
!6213 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6214 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6215 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6216 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6217 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6218 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !6000, size: 32, offset: 544)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1665, size: 192, offset: 576)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !6225, size: 192, offset: 832)
!6225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !6226)
!6226 = !{!6227, !6228, !6229, !6237, !6238, !6239}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6225, file: !1317, line: 886, baseType: !1912)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6225, file: !1317, line: 887, baseType: !2571, size: 64)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6225, file: !1317, line: 888, baseType: !6230, size: 32, offset: 64)
!6230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2573, line: 9, baseType: !7, size: 32, elements: !6231)
!6231 = !{!6232, !6233, !6234, !6235, !6236}
!6232 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6233 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6234 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6235 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6236 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6225, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6225, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6225, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2925, size: 64, offset: 1024)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !6242, size: 256, offset: 1088)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !6243)
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6249}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6242, file: !1317, line: 897, baseType: !312, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6242, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6242, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6242, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6242, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6242, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1732, size: 64, offset: 1728)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2025, size: 32, offset: 1792)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2025, size: 32, offset: 1824)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !6258, size: 64, offset: 192)
!6258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6259, size: 64)
!6259 = !DISubroutineType(types: !6260)
!6260 = !{null, !1310}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !6262, size: 64, offset: 256)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!32, !1310, !591, !591}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !6258, size: 64, offset: 320)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !6267, size: 64, offset: 384)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!591, !1310, !591}
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !6271, size: 64, offset: 448)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 64)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{!32, !1310, !6274, !1111}
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6275, size: 64)
!6275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !6271, size: 64, offset: 512)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !6271, size: 64, offset: 576)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !6271, size: 64, offset: 640)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !6267, size: 64, offset: 704)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !6281, size: 64, offset: 768)
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6282, size: 64)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{!32, !1310, !591, !591, !331}
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !6285, size: 64, offset: 832)
!6285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6286, size: 64)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!32, !1310, !591}
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !6289, size: 64, offset: 896)
!6289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6290, size: 64)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!32, !1310, !591, !331}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !6285, size: 64, offset: 960)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !6285, size: 64, offset: 1024)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !6295, size: 64, offset: 1088)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!591, !1310, !1315, !32}
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !6300, size: 64, offset: 1216)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 64)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!32, !1310, !6303}
!6303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6304, size: 64)
!6304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !6305)
!6305 = !{!6306, !6307, !6308, !6309, !6310}
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6304, file: !96, line: 66, baseType: !481, size: 8)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !6304, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !6304, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !6304, file: !96, line: 69, baseType: !2315, size: 16, offset: 16)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !6304, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !6312, size: 64, offset: 1280)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!987, !591}
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !6316, size: 64, offset: 1344)
!6316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6317, size: 64)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{null, !1310, !591, !1653}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !6320, size: 64, offset: 1408)
!6320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6321, size: 64)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{!32, !6323, !6325, !6328, !6328}
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 64)
!6326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6327)
!6327 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!6328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6329, size: 64)
!6329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6330)
!6330 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !6332, size: 64, offset: 1472)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!32, !1310, !6335}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !6337)
!6337 = !{!6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6359, !6360, !6361, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6415, !6416, !6435, !6436, !6437, !6446, !6448, !6449, !6450, !6451, !6452, !6454, !6455, !6470, !6472, !6478, !6484, !6492, !6493, !6494, !6495, !6496, !6497, !6505, !6512}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6336, file: !65, line: 758, baseType: !373, size: 64)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !6336, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !6336, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !6336, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !6336, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !6336, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6336, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !6336, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !6336, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !6336, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !6336, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !6336, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !6336, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !6336, file: !65, line: 771, baseType: !6352, size: 64, offset: 448)
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6354)
!6354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !6355)
!6355 = !{!6356, !6357, !6358}
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6354, file: !65, line: 752, baseType: !987, size: 32)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !6354, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !6354, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !6336, file: !65, line: 772, baseType: !1665, size: 192, offset: 512)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !6336, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !6336, file: !65, line: 774, baseType: !6362, size: 64, offset: 768)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !6364)
!6364 = !{!6365, !6366, !6367, !6368, !6369, !6381, !6382, !6384, !6385, !6386, !6387}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !6363, file: !65, line: 588, baseType: !276, size: 128)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6363, file: !65, line: 590, baseType: !1665, size: 192, offset: 128)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6363, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6363, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6363, file: !65, line: 597, baseType: !6370, size: 256, offset: 448)
!6370 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6363, file: !65, line: 593, size: 256, elements: !6371)
!6371 = !{!6372, !6379, !6380}
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !6370, file: !65, line: 594, baseType: !6373, size: 112)
!6373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !6374)
!6374 = !{!6375, !6376, !6377}
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !6373, file: !65, line: 510, baseType: !794, size: 8)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !6373, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !6373, file: !65, line: 512, baseType: !6378, size: 96, offset: 16)
!6378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !5518)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6370, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !6370, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !6363, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !6363, file: !65, line: 604, baseType: !6383, size: 192, offset: 768)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 192, elements: !1592)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !6363, file: !65, line: 606, baseType: !3416, size: 96, offset: 960)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6363, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !6363, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6363, file: !65, line: 610, baseType: !6388, size: 1728, offset: 1216)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !6389)
!6389 = !{!6390, !6391, !6392, !6393, !6394, !6400}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6388, file: !65, line: 570, baseType: !312, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6388, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6388, file: !65, line: 572, baseType: !4149, size: 1024, offset: 128)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !6388, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !6388, file: !65, line: 574, baseType: !6395, size: 384, offset: 1280)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !6396, line: 40, size: 384, elements: !6397)
!6396 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!6397 = !{!6398}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6395, file: !6396, line: 41, baseType: !6399, size: 384)
!6399 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2947)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6388, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !6336, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !6336, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !6336, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !6336, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !6336, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !6336, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !6336, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !6336, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !6336, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !6336, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !6336, file: !65, line: 786, baseType: !6328, size: 64, offset: 1152)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !6336, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6336, file: !65, line: 789, baseType: !6414, size: 64, offset: 1280)
!6414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !6336, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !6336, file: !65, line: 791, baseType: !6417, size: 64, offset: 1408)
!6417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6418, size: 64)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423, !6431, !6432, !6433, !6434}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !6418, file: !65, line: 735, baseType: !591, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !6418, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !6418, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, scope: !6418, file: !65, line: 738, baseType: !6424, size: 128, offset: 192)
!6424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6418, file: !65, line: 738, size: 128, elements: !6425)
!6425 = !{!6426}
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !6424, file: !65, line: 742, baseType: !6427, size: 128)
!6427 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6424, file: !65, line: 739, size: 128, elements: !6428)
!6428 = !{!6429, !6430}
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !6427, file: !65, line: 740, baseType: !1310, size: 64)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6427, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !6418, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !6418, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !6418, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !6418, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !6336, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !6336, file: !65, line: 793, baseType: !6388, size: 1728, offset: 1536)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6336, file: !65, line: 794, baseType: !6438, size: 64, offset: 3264)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6440)
!6440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !6441)
!6441 = !{!6442}
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !6440, file: !65, line: 433, baseType: !6443, size: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DISubroutineType(types: !6445)
!6445 = !{!32, !1088, !6274, !1111}
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !6336, file: !65, line: 795, baseType: !6447, size: 64, offset: 3328)
!6447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !6336, file: !65, line: 796, baseType: !1665, size: 192, offset: 3392)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6336, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6336, file: !65, line: 798, baseType: !1953, size: 64, offset: 3648)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !6336, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !6336, file: !65, line: 800, baseType: !6453, size: 128, offset: 3776)
!6453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2947)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6336, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !6336, file: !65, line: 805, baseType: !6456, size: 64, offset: 4032)
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6457, size: 64)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !6458)
!6458 = !{!6459, !6460, !6461, !6464, !6465, !6466, !6467, !6468, !6469}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6457, file: !65, line: 479, baseType: !1088, size: 64)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !6457, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !6457, file: !65, line: 481, baseType: !6462, size: 64, offset: 128)
!6462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6463, size: 64)
!6463 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !6457, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !6457, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !6457, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !6457, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !6457, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !6457, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !6336, file: !65, line: 806, baseType: !6471, size: 64, offset: 4096)
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !6336, file: !65, line: 807, baseType: !6473, size: 64, offset: 4160)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!6474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !6475)
!6475 = !{!6476, !6477}
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6474, file: !96, line: 4964, baseType: !493, size: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !6474, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !6336, file: !65, line: 808, baseType: !6479, size: 64, offset: 4224)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !6481)
!6481 = !{!6482, !6483}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !6480, file: !65, line: 725, baseType: !581, size: 16)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !6480, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !6336, file: !65, line: 815, baseType: !6485, size: 64, offset: 4288)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 64)
!6486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !6487)
!6487 = !{!6488, !6489, !6490, !6491}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !6486, file: !96, line: 4972, baseType: !493, size: 32)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !6486, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !6486, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !6486, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !6336, file: !65, line: 823, baseType: !1802, size: 64, offset: 4352)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !6336, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !6336, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !6336, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !6336, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !6336, file: !65, line: 832, baseType: !6498, size: 64, offset: 4544)
!6498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6499, size: 64)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !6500, line: 17, size: 96, elements: !6501)
!6500 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!6501 = !{!6502, !6503, !6504}
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32, offset: 32)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !6499, file: !6500, line: 18, baseType: !32, size: 32, offset: 64)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !6336, file: !65, line: 833, baseType: !6506, size: 64, offset: 4608)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !6508)
!6508 = !{!6509, !6510, !6511}
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !6507, file: !65, line: 504, baseType: !331, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !6507, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6507, file: !65, line: 506, baseType: !3089, offset: 128)
!6512 = !DIDerivedType(tag: DW_TAG_member, scope: !6336, file: !65, line: 834, baseType: !6513, size: 256, offset: 4672)
!6513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6336, file: !65, line: 834, size: 256, elements: !6514)
!6514 = !{!6515, !6516}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6513, file: !65, line: 835, baseType: !2764, size: 256)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6513, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !6518, size: 64, offset: 1536)
!6518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6519, size: 64)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !1310, !6335}
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !6522, size: 64, offset: 1600)
!6522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6523, size: 64)
!6523 = !DISubroutineType(types: !6524)
!6524 = !{null, !1310, !987, !1088, !1088}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !6526, size: 64, offset: 1664)
!6526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 64)
!6527 = !DISubroutineType(types: !6528)
!6528 = !{!32, !6323, !4353, !987}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !6530, size: 64, offset: 1728)
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 64)
!6531 = !DISubroutineType(types: !6532)
!6532 = !{!32, !6323, !331, !2516}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !6534, size: 64, offset: 1792)
!6534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6535, size: 64)
!6535 = !DISubroutineType(types: !6536)
!6536 = !{!32, !1310, !2098}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !6538, size: 64, offset: 1856)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!4027, !1310, !1315, !4028}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !6542, size: 64, offset: 1920)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!32, !6545, !591, !987}
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !6548, size: 64, offset: 1984)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 64)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !6545, !591, !987}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !6552, size: 64, offset: 2048)
!6552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6553, size: 64)
!6553 = !DISubroutineType(types: !6554)
!6554 = !{!6555, !591}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6557, size: 64)
!6557 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !6559, size: 64, offset: 2112)
!6559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6560, size: 64)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!771, !6323, !6323}
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !6563, size: 64, offset: 2176)
!6563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !6566, size: 64, offset: 2304)
!6566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 64)
!6567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6568)
!6568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !6569)
!6569 = !{!6570, !6571, !6578, !6580}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !6568, file: !65, line: 47, baseType: !1686, size: 64)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !6568, file: !65, line: 48, baseType: !6572, size: 64, offset: 64)
!6572 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !6573)
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = !DISubroutineType(types: !6575)
!6575 = !{!32, !591, !6576}
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 64)
!6577 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !6568, file: !65, line: 49, baseType: !6579, size: 64, offset: 128)
!6579 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !6568, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !6471, size: 64, offset: 448)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !6594, size: 128, offset: 512)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !6595)
!6595 = !{!6596, !6597}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6594, file: !65, line: 137, baseType: !987, size: 32)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6594, file: !65, line: 138, baseType: !1953, size: 64, offset: 64)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2764, size: 256, offset: 1152)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1665, size: 192, offset: 1408)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !6609, size: 64, offset: 2112)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6611)
!6611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !6612)
!6612 = !{!6613, !6617, !6618, !6622}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !6611, file: !65, line: 213, baseType: !6614, size: 64)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!32, !1096, !591, !591}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !6611, file: !65, line: 215, baseType: !6614, size: 64, offset: 64)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !6611, file: !65, line: 217, baseType: !6619, size: 64, offset: 128)
!6619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6620, size: 64)
!6620 = !DISubroutineType(types: !6621)
!6621 = !{!32, !1096, !591, !591, !331}
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !6611, file: !65, line: 219, baseType: !6623, size: 64, offset: 192)
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6624, size: 64)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!32, !1096, !591}
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !6629, size: 128)
!6629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !6630)
!6630 = !{!6631, !6634}
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !6629, file: !31, line: 909, baseType: !6632, size: 64)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !6629, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !6636, size: 64, offset: 4096)
!6636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6637, size: 64)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!32, !290, !32, !6639, !987}
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 64)
!6640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6641, size: 64)
!6641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !6642, line: 94, size: 256, elements: !6643)
!6642 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!6643 = !{!6644, !6645, !6646, !6647, !6648, !6649, !6654}
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6641, file: !6642, line: 95, baseType: !591, size: 64)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6641, file: !6642, line: 96, baseType: !581, size: 16, offset: 64)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !6641, file: !6642, line: 97, baseType: !581, size: 16, offset: 80)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !6641, file: !6642, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !6641, file: !6642, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6641, file: !6642, line: 103, baseType: !6650, size: 64, offset: 128)
!6650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !6642, line: 50, size: 64, elements: !6651)
!6651 = !{!6652, !6653}
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6650, file: !6642, line: 51, baseType: !987, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6650, file: !6642, line: 52, baseType: !987, size: 32, offset: 32)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !6641, file: !6642, line: 104, baseType: !290, size: 64, offset: 192)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !6656, size: 64, offset: 4160)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!32, !290, !987, !987}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !6660, size: 64, offset: 4224)
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 64)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{!6663, !290}
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !6666, size: 64, offset: 4288)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!32, !290, !6669, !32}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6670, size: 64)
!6670 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !6672, size: 64, offset: 4352)
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 64)
!6673 = !DISubroutineType(types: !6674)
!6674 = !{!290, !290}
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !6676, size: 64, offset: 4032)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6678)
!6678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !6679)
!6679 = !{!6680, !6681, !6701, !6702, !6713, !6725, !6729, !6733, !6737, !6738, !6739, !6756, !6757, !6769, !6770, !6800, !6801, !6817, !6821, !6830, !6841, !6845, !6858, !6862, !6866, !6876, !6877, !6878, !6879, !6883, !6884, !6986, !6990, !7000, !7004, !7005, !7006, !7010, !7018, !7022, !7026, !7042, !7046, !7058, !7062, !7063, !7078, !7090, !7091, !7107, !7108, !7122, !7126, !7130, !7131, !7170, !7176, !7187, !7188, !7189, !7190}
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !6678, file: !251, line: 422, baseType: !987, size: 32)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !6678, file: !251, line: 423, baseType: !6682, size: 64, offset: 64)
!6682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6683, size: 64)
!6683 = !DISubroutineType(types: !6684)
!6684 = !{null, !290, !6685}
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 64)
!6686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !6687)
!6687 = !{!6688, !6689, !6690, !6691, !6692, !6693, !6694, !6696, !6697, !6698, !6699, !6700}
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6686, file: !209, line: 178, baseType: !493, size: 32)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6686, file: !209, line: 179, baseType: !4146, size: 256, offset: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6686, file: !209, line: 180, baseType: !4146, size: 256, offset: 288)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !6686, file: !209, line: 181, baseType: !4146, size: 256, offset: 544)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !6686, file: !209, line: 182, baseType: !4146, size: 256, offset: 800)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !6686, file: !209, line: 183, baseType: !4146, size: 256, offset: 1056)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !6686, file: !209, line: 184, baseType: !6695, size: 96, offset: 1312)
!6695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !5518)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !6686, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6686, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !6686, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !6686, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !6686, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !6678, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !6678, file: !251, line: 425, baseType: !6703, size: 64, offset: 192)
!6703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6704, size: 64)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{null, !290, !6706, !591}
!6706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6707, size: 64)
!6707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6707, file: !209, line: 311, baseType: !493, size: 32)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6707, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6707, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6707, file: !209, line: 314, baseType: !480, offset: 96)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !6678, file: !251, line: 426, baseType: !6714, size: 64, offset: 256)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !290, !6717}
!6717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6718, size: 64)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !6719)
!6719 = !{!6720, !6721, !6722, !6723}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6718, file: !209, line: 204, baseType: !493, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6718, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !6718, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !6718, file: !209, line: 207, baseType: !6724, size: 48, offset: 96)
!6724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !6678, file: !251, line: 427, baseType: !6726, size: 64, offset: 320)
!6726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6727, size: 64)
!6727 = !DISubroutineType(types: !6728)
!6728 = !{!32, !290, !6717}
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !6678, file: !251, line: 428, baseType: !6730, size: 64, offset: 384)
!6730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6731, size: 64)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!987, !290}
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !6678, file: !251, line: 429, baseType: !6734, size: 64, offset: 448)
!6734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6735, size: 64)
!6735 = !DISubroutineType(types: !6736)
!6736 = !{null, !290, !987}
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !6678, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !6678, file: !251, line: 431, baseType: !6730, size: 64, offset: 576)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !6678, file: !251, line: 432, baseType: !6740, size: 64, offset: 640)
!6740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6741, size: 64)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!32, !290, !6743}
!6743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6744, size: 64)
!6744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !6745)
!6745 = !{!6746, !6747}
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !6744, file: !251, line: 94, baseType: !208, size: 32)
!6747 = !DIDerivedType(tag: DW_TAG_member, scope: !6744, file: !251, line: 95, baseType: !6748, size: 32, offset: 32)
!6748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6744, file: !251, line: 95, size: 32, elements: !6749)
!6749 = !{!6750, !6751, !6752, !6753, !6754, !6755}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6748, file: !251, line: 96, baseType: !221, size: 32)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !6748, file: !251, line: 97, baseType: !229, size: 32)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !6748, file: !251, line: 98, baseType: !235, size: 32)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !6748, file: !251, line: 99, baseType: !242, size: 32)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !6748, file: !251, line: 100, baseType: !246, size: 32)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !6748, file: !251, line: 101, baseType: !794, size: 8)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !6678, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !6678, file: !251, line: 435, baseType: !6758, size: 64, offset: 768)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 64)
!6759 = !DISubroutineType(types: !6760)
!6760 = !{!32, !290, !6761, !793}
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !6763)
!6763 = !{!6764, !6765, !6766, !6767, !6768}
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6762, file: !209, line: 336, baseType: !493, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6762, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6762, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6762, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6762, file: !209, line: 340, baseType: !480, offset: 128)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !6678, file: !251, line: 437, baseType: !6758, size: 64, offset: 832)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !6678, file: !251, line: 439, baseType: !6771, size: 64, offset: 896)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{!32, !290, !6774}
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !6776)
!6776 = !{!6777, !6778, !6779, !6780, !6781, !6782, !6783, !6784, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6792, !6793, !6794, !6795, !6796, !6797, !6798, !6799}
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6775, file: !209, line: 463, baseType: !493, size: 32)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !6775, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !6775, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !6775, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !6775, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !6775, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !6775, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !6775, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !6775, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !6775, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !6775, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !6775, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !6775, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !6775, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !6775, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !6775, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !6775, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !6775, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !6775, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !6775, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !6775, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !6775, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !6775, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !6678, file: !251, line: 440, baseType: !6771, size: 64, offset: 960)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !6678, file: !251, line: 441, baseType: !6802, size: 64, offset: 1024)
!6802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6803, size: 64)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{null, !290, !6805}
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6806, size: 64)
!6806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !6807)
!6807 = !{!6808, !6809, !6810, !6811, !6812, !6813, !6814, !6815, !6816}
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6806, file: !209, line: 514, baseType: !493, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !6806, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !6806, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !6806, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !6806, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !6806, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !6806, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !6806, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !6806, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !6678, file: !251, line: 443, baseType: !6818, size: 64, offset: 1088)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DISubroutineType(types: !6820)
!6820 = !{!32, !290, !6805}
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !6678, file: !251, line: 445, baseType: !6822, size: 64, offset: 1152)
!6822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6823, size: 64)
!6823 = !DISubroutineType(types: !6824)
!6824 = !{null, !290, !6825}
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 64)
!6826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !6827)
!6827 = !{!6828, !6829}
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !6826, file: !251, line: 261, baseType: !331, size: 64)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !6826, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !6678, file: !251, line: 447, baseType: !6831, size: 64, offset: 1216)
!6831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6832, size: 64)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{null, !290, !6834}
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !6836)
!6836 = !{!6837, !6838, !6839, !6840}
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6835, file: !209, line: 576, baseType: !493, size: 32)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !6835, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !6835, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !6835, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !6678, file: !251, line: 449, baseType: !6842, size: 64, offset: 1280)
!6842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6843, size: 64)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!32, !290, !6834}
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !6678, file: !251, line: 451, baseType: !6846, size: 64, offset: 1344)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{null, !290, !6849, !4353}
!6849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6850, size: 64)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !6851)
!6851 = !{!6852, !6853, !6854, !6855, !6856}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6850, file: !209, line: 771, baseType: !493, size: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6850, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6850, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6850, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6850, file: !209, line: 775, baseType: !6857, offset: 128)
!6857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !6678, file: !251, line: 452, baseType: !6859, size: 64, offset: 1408)
!6859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6860, size: 64)
!6860 = !DISubroutineType(types: !6861)
!6861 = !{null, !290, !987, !793}
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !6678, file: !251, line: 453, baseType: !6863, size: 64, offset: 1472)
!6863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6864, size: 64)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!32, !290, !250}
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !6678, file: !251, line: 454, baseType: !6867, size: 64, offset: 1536)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 64)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{null, !290, !6870, !4353}
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !6872)
!6872 = !{!6873, !6874, !6875}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6871, file: !209, line: 790, baseType: !493, size: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !6871, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6871, file: !209, line: 792, baseType: !6857, offset: 64)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !6678, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6678, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !6678, file: !251, line: 458, baseType: !6730, size: 64, offset: 1728)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !6678, file: !251, line: 459, baseType: !6880, size: 64, offset: 1792)
!6880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6881, size: 64)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!32, !290, !987}
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !6678, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !6678, file: !251, line: 461, baseType: !6885, size: 64, offset: 1920)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!32, !290, !6888, !2516}
!6888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6889, size: 64)
!6889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !6890)
!6890 = !{!6891, !6892, !6893, !6894, !6980, !6985}
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6889, file: !209, line: 1089, baseType: !493, size: 32)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6889, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6889, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !6889, file: !209, line: 1092, baseType: !6895, size: 1344, offset: 128)
!6895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !6896)
!6896 = !{!6897, !6898, !6966, !6976, !6977, !6978, !6979}
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !6895, file: !209, line: 993, baseType: !493, size: 32)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !6895, file: !209, line: 994, baseType: !6899, size: 416, offset: 32)
!6899 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !6900)
!6900 = !{!6901, !6909, !6910, !6911, !6918, !6919, !6928, !6936, !6937, !6938, !6945, !6946, !6954, !6962}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !6899, file: !209, line: 940, baseType: !6902, size: 128)
!6902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !6903)
!6903 = !{!6904, !6905, !6906, !6907, !6908}
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6902, file: !209, line: 846, baseType: !3226, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6902, file: !209, line: 847, baseType: !3226, size: 32, offset: 32)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6902, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6902, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6902, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !6899, file: !209, line: 941, baseType: !6902, size: 128)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !6899, file: !209, line: 942, baseType: !6902, size: 128)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !6899, file: !209, line: 943, baseType: !6912, size: 128)
!6912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !6913)
!6913 = !{!6914, !6915, !6916, !6917}
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6912, file: !209, line: 863, baseType: !3226, size: 32)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6912, file: !209, line: 864, baseType: !3226, size: 32, offset: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6912, file: !209, line: 865, baseType: !3226, size: 32, offset: 64)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6912, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !6899, file: !209, line: 944, baseType: !6912, size: 128)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !6899, file: !209, line: 945, baseType: !6920, size: 128)
!6920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !6921)
!6921 = !{!6922, !6923, !6924, !6925, !6926, !6927}
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !6920, file: !209, line: 881, baseType: !3226, size: 32)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !6920, file: !209, line: 882, baseType: !3226, size: 32, offset: 32)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6920, file: !209, line: 883, baseType: !3226, size: 32, offset: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !6920, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !6920, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !6920, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !6899, file: !209, line: 946, baseType: !6929, size: 320)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !6930)
!6930 = !{!6931, !6932, !6933, !6934, !6935}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6929, file: !209, line: 900, baseType: !3247, size: 128)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6929, file: !209, line: 901, baseType: !3247, size: 128, offset: 128)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !6929, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !6929, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6929, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !6899, file: !209, line: 947, baseType: !6929, size: 320)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !6899, file: !209, line: 948, baseType: !6929, size: 320)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !6899, file: !209, line: 949, baseType: !6939, size: 320)
!6939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !6940)
!6940 = !{!6941, !6942, !6943, !6944}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6939, file: !209, line: 917, baseType: !3247, size: 128)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6939, file: !209, line: 918, baseType: !3247, size: 128, offset: 128)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !6939, file: !209, line: 919, baseType: !3226, size: 32, offset: 256)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6939, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !6899, file: !209, line: 950, baseType: !6939, size: 320)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !6899, file: !209, line: 951, baseType: !6947, size: 320)
!6947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !6948)
!6948 = !{!6949, !6950, !6951, !6952, !6953}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !6947, file: !209, line: 932, baseType: !3247, size: 128)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !6947, file: !209, line: 933, baseType: !3247, size: 128, offset: 128)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !6947, file: !209, line: 934, baseType: !3226, size: 32, offset: 256)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !6947, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !6947, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !6899, file: !209, line: 952, baseType: !6955, size: 112)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !6956, line: 164, size: 112, elements: !6957)
!6956 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!6957 = !{!6958, !6960, !6961}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6955, file: !6956, line: 165, baseType: !6959, size: 48)
!6959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !6955, file: !6956, line: 166, baseType: !6959, size: 48, offset: 48)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !6955, file: !6956, line: 167, baseType: !535, size: 16, offset: 96)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !6899, file: !209, line: 953, baseType: !6963, size: 416)
!6963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !6964)
!6964 = !{!6965}
!6965 = !DISubrange(count: 52)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !6895, file: !209, line: 995, baseType: !6967, size: 160, offset: 448)
!6967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !6968)
!6968 = !{!6969, !6971, !6972, !6973, !6974}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6967, file: !209, line: 968, baseType: !6970, size: 16)
!6970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2947)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !6967, file: !209, line: 969, baseType: !6959, size: 48, offset: 16)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !6967, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !6967, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6967, file: !209, line: 972, baseType: !6975, size: 64, offset: 96)
!6975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3226, size: 64, elements: !2947)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !6895, file: !209, line: 996, baseType: !6899, size: 416, offset: 608)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !6895, file: !209, line: 997, baseType: !6967, size: 160, offset: 1024)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !6895, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !6895, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!6980 = !DIDerivedType(tag: DW_TAG_member, scope: !6889, file: !209, line: 1093, baseType: !6981, size: 32, offset: 1472)
!6981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6889, file: !209, line: 1093, size: 32, elements: !6982)
!6982 = !{!6983, !6984}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !6981, file: !209, line: 1094, baseType: !493, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !6981, file: !209, line: 1095, baseType: !493, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !6889, file: !209, line: 1097, baseType: !492, offset: 1504)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !6678, file: !251, line: 463, baseType: !6987, size: 64, offset: 1984)
!6987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6988, size: 64)
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!32, !290, !6888}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !6678, file: !251, line: 464, baseType: !6991, size: 64, offset: 2048)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 64)
!6992 = !DISubroutineType(types: !6993)
!6993 = !{!32, !290, !6994}
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !6996)
!6996 = !{!6997, !6998, !6999}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6995, file: !209, line: 1218, baseType: !493, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !6995, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6995, file: !209, line: 1220, baseType: !4149, size: 1024, offset: 64)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !6678, file: !251, line: 465, baseType: !7001, size: 64, offset: 2112)
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7002, size: 64)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{!32, !290, !2516}
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !6678, file: !251, line: 466, baseType: !6730, size: 64, offset: 2176)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !6678, file: !251, line: 467, baseType: !6730, size: 64, offset: 2240)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !6678, file: !251, line: 468, baseType: !7007, size: 64, offset: 2304)
!7007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7008, size: 64)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{!32, !290, !2516, !793, !793}
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !6678, file: !251, line: 470, baseType: !7011, size: 64, offset: 2368)
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7012, size: 64)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!32, !290, !7014, !7016, !7017}
!7014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7015, size: 64)
!7015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 64)
!7017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !6678, file: !251, line: 472, baseType: !7019, size: 64, offset: 2432)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{!32, !290, !2516, !793, !793, !987}
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !6678, file: !251, line: 474, baseType: !7023, size: 64, offset: 2496)
!7023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{!32, !290, !7014, !7016, !7017, !2516, !771}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !6678, file: !251, line: 477, baseType: !7027, size: 64, offset: 2560)
!7027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7028, size: 64)
!7028 = !DISubroutineType(types: !7029)
!7029 = !{null, !290, !7030}
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 64)
!7031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !7032)
!7032 = !{!7033, !7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7031, file: !209, line: 542, baseType: !493, size: 32)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !7031, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !7031, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !7031, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !7031, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !7031, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !7031, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !7031, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !7031, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !6678, file: !251, line: 478, baseType: !7043, size: 64, offset: 2624)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!32, !290, !7030}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !6678, file: !251, line: 479, baseType: !7047, size: 64, offset: 2688)
!7047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7048, size: 64)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!32, !290, !7050}
!7050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7051, size: 64)
!7051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !7052)
!7052 = !{!7053, !7054, !7055, !7056, !7057}
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7051, file: !209, line: 1238, baseType: !493, size: 32)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7051, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7051, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7051, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7051, file: !209, line: 1242, baseType: !480, offset: 128)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !6678, file: !251, line: 480, baseType: !7059, size: 64, offset: 2752)
!7059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!32, !290, !7050, !591}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !6678, file: !251, line: 482, baseType: !7047, size: 64, offset: 2816)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !6678, file: !251, line: 483, baseType: !7064, size: 64, offset: 2880)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 64)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{!32, !290, !7067}
!7067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7068, size: 64)
!7068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !7069)
!7069 = !{!7070, !7071, !7072, !7073, !7074, !7076, !7077}
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7068, file: !209, line: 1318, baseType: !493, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !7068, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !7068, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !7068, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !7068, file: !209, line: 1322, baseType: !7075, size: 96, offset: 128)
!7075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1592)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !7068, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !7068, file: !209, line: 1324, baseType: !7075, size: 96, offset: 256)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !6678, file: !251, line: 484, baseType: !7079, size: 64, offset: 2944)
!7079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7080, size: 64)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{!32, !290, !7082}
!7082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7083, size: 64)
!7083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !7084)
!7084 = !{!7085, !7086, !7087, !7088}
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7083, file: !209, line: 383, baseType: !493, size: 32)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7083, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !7083, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7083, file: !209, line: 386, baseType: !7089, size: 256, offset: 96)
!7089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2433)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !6678, file: !251, line: 486, baseType: !6758, size: 64, offset: 3008)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !6678, file: !251, line: 488, baseType: !7092, size: 64, offset: 3072)
!7092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7093, size: 64)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!32, !290, !7095}
!7095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7096, size: 64)
!7096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !7097)
!7097 = !{!7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7106}
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7096, file: !209, line: 361, baseType: !493, size: 32)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7096, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !7096, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !7096, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !7096, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !7096, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !7096, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !7096, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!7106 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7096, file: !209, line: 369, baseType: !2946, size: 64, offset: 256)
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !6678, file: !251, line: 489, baseType: !7092, size: 64, offset: 3136)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !6678, file: !251, line: 490, baseType: !7109, size: 64, offset: 3200)
!7109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7110, size: 64)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{!32, !290, !7112, !591}
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7113, size: 64)
!7113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7114)
!7114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !7115)
!7115 = !{!7116, !7117, !7118, !7119, !7120}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7114, file: !209, line: 245, baseType: !493, size: 32)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7114, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !7114, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7114, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7114, file: !209, line: 249, baseType: !7121, offset: 128)
!7121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !6678, file: !251, line: 492, baseType: !7123, size: 64, offset: 3264)
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7124, size: 64)
!7124 = !DISubroutineType(types: !7125)
!7125 = !{!32, !290, !7112, !3276}
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !6678, file: !251, line: 494, baseType: !7127, size: 64, offset: 3328)
!7127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7128, size: 64)
!7128 = !DISubroutineType(types: !7129)
!7129 = !{!32, !290, !987, !6774}
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !6678, file: !251, line: 496, baseType: !7127, size: 64, offset: 3392)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !6678, file: !251, line: 498, baseType: !7132, size: 64, offset: 3456)
!7132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7133, size: 64)
!7133 = !DISubroutineType(types: !7134)
!7134 = !{!32, !290, !7135}
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !7137)
!7137 = !{!7138, !7163}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7136, file: !251, line: 125, baseType: !7139, size: 384)
!7139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !7140)
!7140 = !{!7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7153, !7154, !7155, !7156, !7158, !7162}
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7139, file: !209, line: 1997, baseType: !493, size: 32)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7139, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7139, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7139, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !7139, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7139, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !7139, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !7139, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !7139, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !7139, file: !209, line: 2006, baseType: !7151, size: 8, offset: 120)
!7151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !7152)
!7152 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !7139, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !7139, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7139, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7139, file: !209, line: 2010, baseType: !7157, size: 8, offset: 152)
!7157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2472)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7139, file: !209, line: 2011, baseType: !7159, size: 224, offset: 160)
!7159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !7160)
!7160 = !{!7161}
!7161 = !DISubrange(count: 7)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !7139, file: !209, line: 2012, baseType: !492, offset: 384)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !7136, file: !251, line: 130, baseType: !7164, size: 384, offset: 384)
!7164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7136, file: !251, line: 126, size: 384, elements: !7165)
!7165 = !{!7166, !7168, !7169}
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7164, file: !251, line: 127, baseType: !7167, size: 128)
!7167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2947)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7164, file: !251, line: 128, baseType: !7167, size: 128, offset: 128)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7164, file: !251, line: 129, baseType: !7167, size: 128, offset: 256)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !6678, file: !251, line: 500, baseType: !7171, size: 64, offset: 3520)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7172, size: 64)
!7172 = !DISubroutineType(types: !7173)
!7173 = !{!32, !290, !7174}
!7174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7175, size: 64)
!7175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7136)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !6678, file: !251, line: 502, baseType: !7177, size: 64, offset: 3584)
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7178, size: 64)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!32, !290, !7180}
!7180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7181, size: 64)
!7181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !7182)
!7182 = !{!7183, !7184, !7185, !7186}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !7181, file: !209, line: 1390, baseType: !493, size: 32)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !7181, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !7181, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7181, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !6678, file: !251, line: 504, baseType: !7177, size: 64, offset: 3648)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !6678, file: !251, line: 506, baseType: !6867, size: 64, offset: 3712)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !6678, file: !251, line: 508, baseType: !7109, size: 64, offset: 3776)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !6678, file: !251, line: 510, baseType: !7123, size: 64, offset: 3840)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !7192, size: 64, offset: 4096)
!7192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7193, size: 64)
!7193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7194)
!7194 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !7196, size: 64, offset: 4160)
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7197, size: 64)
!7197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7198)
!7198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !7199)
!7199 = !{!7200, !7204, !7210, !7223, !7227, !7231}
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !7198, file: !31, line: 271, baseType: !7201, size: 64)
!7201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7202, size: 64)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{!32, !415, !290, !476, !3276, !3276, !7}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !7198, file: !31, line: 274, baseType: !7205, size: 64, offset: 64)
!7205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7206, size: 64)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!32, !7208, !564}
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 64)
!7209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !7198, file: !31, line: 275, baseType: !7211, size: 64, offset: 128)
!7211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7212, size: 64)
!7212 = !DISubroutineType(types: !7213)
!7213 = !{!32, !7214, !7216, !535}
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!7216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7217, size: 64)
!7217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !7218)
!7218 = !{!7219, !7220, !7221}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !7217, file: !31, line: 245, baseType: !7, size: 32)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !7217, file: !31, line: 246, baseType: !3343, size: 32, offset: 32)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !7217, file: !31, line: 254, baseType: !7222, size: 768, offset: 64)
!7222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !5518)
!7223 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !7198, file: !31, line: 276, baseType: !7224, size: 64, offset: 192)
!7224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7225, size: 64)
!7225 = !DISubroutineType(types: !7226)
!7226 = !{null, !7216, !773, !946}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !7198, file: !31, line: 279, baseType: !7228, size: 64, offset: 256)
!7228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7229, size: 64)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{!771, !292, !7}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !7198, file: !31, line: 280, baseType: !7232, size: 64, offset: 320)
!7232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7233, size: 64)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!535, !7208}
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1670, offset: 4864)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !7262, size: 192, offset: 4864)
!7262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !7263)
!7263 = !{!7264, !7265}
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7262, file: !31, line: 225, baseType: !284, size: 128)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7262, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !7262, size: 192, offset: 5056)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !7262, size: 192, offset: 5248)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !3780, size: 64, offset: 5440)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !7273, size: 64, offset: 5632)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 64)
!7274 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !7276, size: 64, offset: 5696)
!7276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7277, size: 64)
!7277 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !7279, size: 64, offset: 5760)
!7279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7280, size: 64)
!7280 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !7282, size: 64, offset: 5824)
!7282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7283, size: 64)
!7283 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !7285, size: 64, offset: 5888)
!7285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 64)
!7286 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !7289, size: 64, offset: 6016)
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 64)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !7291)
!7291 = !{!7292, !7293, !7294}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7290, file: !31, line: 741, baseType: !3772, size: 512)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7290, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !7290, file: !31, line: 743, baseType: !7295, size: 512, align: 512, offset: 1024)
!7295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !6642, line: 57, size: 512, align: 512, elements: !7296)
!7296 = !{!7297, !7298, !7299, !7300}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7295, file: !6642, line: 58, baseType: !290, size: 64)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !7295, file: !6642, line: 59, baseType: !987, size: 32, offset: 64)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !7295, file: !6642, line: 60, baseType: !987, size: 32, offset: 96)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !7295, file: !6642, line: 61, baseType: !6650, size: 64, offset: 128)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !7307, size: 64, offset: 6336)
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !7309)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!7311, !7312}
!7311 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !7315, size: 64, offset: 6464)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7316, size: 64)
!7316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !7317)
!7317 = !{!7318, !7319, !7322, !7323, !7324, !7325, !7326, !7327, !7328, !7329, !7330, !7331}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7316, file: !31, line: 588, baseType: !290, size: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !7316, file: !31, line: 589, baseType: !7320, size: 64, offset: 64)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 64)
!7321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !7316, file: !31, line: 590, baseType: !7320, size: 64, offset: 128)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7316, file: !31, line: 592, baseType: !3772, size: 512, offset: 192)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !7316, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !7316, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !7316, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !7316, file: !31, line: 612, baseType: !1670, offset: 896)
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !7316, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !7316, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7316, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !7316, file: !31, line: 622, baseType: !7332, size: 512, offset: 1088)
!7332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !7333, line: 43, size: 512, elements: !7334)
!7333 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!7334 = !{!7335, !7336, !7337, !7338, !7339, !7340, !7341, !7342, !7343, !7344, !7345, !7346, !7347}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !7332, file: !7333, line: 45, baseType: !7, size: 32)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !7332, file: !7333, line: 46, baseType: !7, size: 32, offset: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !7332, file: !7333, line: 47, baseType: !7, size: 32, offset: 64)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !7332, file: !7333, line: 51, baseType: !7, size: 32, offset: 96)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !7332, file: !7333, line: 52, baseType: !7, size: 32, offset: 128)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !7332, file: !7333, line: 54, baseType: !7, size: 32, offset: 160)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !7332, file: !7333, line: 55, baseType: !7, size: 32, offset: 192)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !7332, file: !7333, line: 56, baseType: !7, size: 32, offset: 224)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !7332, file: !7333, line: 58, baseType: !7, size: 32, offset: 256)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !7332, file: !7333, line: 59, baseType: !312, size: 64, offset: 320)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !7332, file: !7333, line: 62, baseType: !7, size: 32, offset: 384)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !7332, file: !7333, line: 63, baseType: !7, size: 32, offset: 416)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !7332, file: !7333, line: 64, baseType: !7, size: 32, offset: 448)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !7315, size: 64, offset: 6912)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !7320, size: 64, offset: 7040)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1670, offset: 7136)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !7357, size: 64, offset: 7168)
!7357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7358, size: 64)
!7358 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3253, size: 320, offset: 7232)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !7368, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!7368 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !7369)
!7369 = !{!7370, !7371}
!7370 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!7371 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !7375, size: 64, offset: 8064)
!7375 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !3008, line: 318, baseType: !7376)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3008, line: 314, size: 64, elements: !7377)
!7377 = !{!7378}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !7376, file: !3008, line: 316, baseType: !3006, size: 64)
!7379 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !7380, size: 64, offset: 8128)
!7380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !7381)
!7381 = !{!7382, !7383, !7404, !7413}
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !7380, file: !31, line: 2111, baseType: !591, size: 64)
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !7380, file: !31, line: 2112, baseType: !7384, size: 64)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7385, size: 64)
!7385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !7386)
!7386 = !{!7387, !7402, !7403}
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !7385, file: !31, line: 2543, baseType: !7388, size: 64)
!7388 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3090, line: 79, baseType: !7389)
!7389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3090, line: 77, size: 64, elements: !7390)
!7390 = !{!7391}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !7389, file: !3090, line: 78, baseType: !7392, size: 64)
!7392 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !7393, line: 26, baseType: !7394)
!7393 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!7394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7393, line: 24, size: 64, elements: !7395)
!7395 = !{!7396}
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7394, file: !7393, line: 25, baseType: !7397, size: 64)
!7397 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !7398, line: 12, baseType: !7399)
!7398 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!7399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7398, line: 10, size: 64, elements: !7400)
!7400 = !{!7401}
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !7399, file: !7398, line: 11, baseType: !371, size: 64)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !7385, file: !31, line: 2544, baseType: !7388, size: 64, offset: 64)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7385, file: !31, line: 2545, baseType: !3089, offset: 128)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !7380, file: !31, line: 2113, baseType: !7405, size: 64)
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7406, size: 64)
!7406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !7407)
!7407 = !{!7408, !7409, !7410, !7411, !7412}
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7406, file: !31, line: 2535, baseType: !331, size: 64)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7406, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7406, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7406, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7406, file: !31, line: 2539, baseType: !3089, offset: 256)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !7380, file: !31, line: 2114, baseType: !7414, size: 64)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 64)
!7415 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !3768, size: 5568, offset: 8192)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7418, size: 256, offset: 13760)
!7418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3852, size: 256, elements: !2272)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !3852, size: 64, offset: 14016)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7421, size: 64, offset: 14080)
!7421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7422, size: 64)
!7422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7423)
!7423 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2314, size: 16, offset: 14192)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7428, size: 512, offset: 14208)
!7428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7429, size: 512, elements: !269)
!7429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7430)
!7430 = !{!7431, !7432}
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7429, file: !31, line: 794, baseType: !581, size: 16)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7429, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7434, size: 128, offset: 14720)
!7434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7436, size: 64, offset: 14848)
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !251, line: 536, flags: DIFlagFwdDecl)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7439, size: 64, offset: 14912)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 64)
!7440 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7442, size: 64, offset: 14976)
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7442, size: 64, offset: 15040)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7448, size: 64, offset: 15296)
!7448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 64)
!7449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7450)
!7450 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7452, size: 64, offset: 15360)
!7452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7453, size: 64)
!7453 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7455, size: 384, offset: 15424)
!7455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7456, size: 384, elements: !1592)
!7456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7457)
!7457 = !{!7458, !7459}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7456, file: !31, line: 890, baseType: !1088, size: 64)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7456, file: !31, line: 891, baseType: !7460, size: 64, offset: 64)
!7460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7461, size: 64)
!7461 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7462 = !{!7463, !7464, !7465, !7466, !7467, !7468}
!7463 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7464 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7465 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7466 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7467 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7468 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7469 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7470, line: 10, baseType: !7, size: 32, elements: !7471)
!7470 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7471 = !{!7472, !7473}
!7472 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7473 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7474 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2765, line: 30, baseType: !998, size: 64, elements: !7475)
!7475 = !{!7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504}
!7476 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!7477 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!7478 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!7479 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!7480 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!7481 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!7482 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!7483 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!7484 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!7485 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!7486 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!7487 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!7488 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!7489 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!7490 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!7491 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!7492 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!7493 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!7494 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!7495 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!7496 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!7497 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!7498 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!7499 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!7500 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!7501 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!7502 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!7503 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!7504 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!7505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7506, line: 305, baseType: !7, size: 32, elements: !7507)
!7506 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7507 = !{!7508, !7509, !7510, !7511}
!7508 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7509 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7510 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7511 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !31, line: 558, baseType: !7, size: 32, elements: !7513)
!7513 = !{!7514, !7515, !7516}
!7514 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!7515 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!7516 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!7517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7518, line: 11, baseType: !7, size: 32, elements: !7519)
!7518 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7519 = !{!7520, !7521, !7522}
!7520 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7521 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7522 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7523 = !{!591, !476, !312, !7524, !7526, !7528, !1742, !7530, !7970, !475, !7948, !482, !1038, !564, !32, !535, !3457, !980, !7972, !7974, !998, !7944, !7, !7951, !493, !7975, !2326, !7976}
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7525, size: 64)
!7525 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!7526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7527, size: 64)
!7527 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !482)
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7529, size: 64)
!7529 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !476)
!7530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7531, size: 64)
!7531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slgt_info", file: !3, line: 238, size: 8000, elements: !7532)
!7532 = !{!7533, !7534, !7535, !7536, !7537, !7541, !7814, !7815, !7816, !7817, !7819, !7820, !7847, !7848, !7849, !7850, !7851, !7852, !7853, !7854, !7855, !7856, !7876, !7877, !7878, !7879, !7880, !7881, !7882, !7883, !7884, !7885, !7886, !7887, !7888, !7889, !7890, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7943, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969}
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "if_ptr", scope: !7531, file: !3, line: 239, baseType: !591, size: 64)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7531, file: !3, line: 240, baseType: !4767, size: 2432, offset: 64)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "next_device", scope: !7531, file: !3, line: 242, baseType: !7530, size: 64, offset: 2496)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !7531, file: !3, line: 244, baseType: !32, size: 32, offset: 2560)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !7531, file: !3, line: 246, baseType: !7538, size: 200, offset: 2592)
!7538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 200, elements: !7539)
!7539 = !{!7540}
!7540 = !DISubrange(count: 25)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !7531, file: !3, line: 247, baseType: !7542, size: 64, offset: 2816)
!7542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7543, size: 64)
!7543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !7544, line: 309, size: 19264, elements: !7545)
!7544 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!7545 = !{!7546, !7547, !7616, !7617, !7618, !7619, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7640, !7641, !7642, !7643, !7644, !7645, !7646, !7711, !7712, !7713, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7733, !7734, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766, !7767, !7768, !7769, !7770, !7771, !7772, !7773, !7774, !7775, !7776, !7777, !7778, !7779, !7780, !7781, !7782, !7783, !7784, !7785, !7787, !7788, !7790, !7791, !7792, !7793, !7795, !7796, !7797, !7800, !7807, !7808, !7809, !7810, !7811, !7812, !7813}
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !7543, file: !7544, line: 310, baseType: !284, size: 128)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7543, file: !7544, line: 311, baseType: !7548, size: 64, offset: 128)
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 64)
!7549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !7544, line: 605, size: 8064, elements: !7550)
!7550 = !{!7551, !7552, !7553, !7554, !7555, !7556, !7557, !7572, !7573, !7574, !7598, !7601, !7602, !7603, !7604, !7605, !7606, !7607, !7608, !7609, !7611, !7612, !7613, !7614, !7615}
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7549, file: !7544, line: 606, baseType: !284, size: 128)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7549, file: !7544, line: 607, baseType: !7548, size: 64, offset: 128)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7549, file: !7544, line: 608, baseType: !284, size: 128, offset: 192)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !7549, file: !7544, line: 609, baseType: !284, size: 128, offset: 320)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !7549, file: !7544, line: 610, baseType: !7542, size: 64, offset: 448)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !7549, file: !7544, line: 611, baseType: !284, size: 128, offset: 512)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7549, file: !7544, line: 613, baseType: !7558, size: 256, offset: 640)
!7558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7559, size: 256, elements: !2272)
!7559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7560, size: 64)
!7560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !7561, line: 20, size: 512, elements: !7562)
!7561 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!7562 = !{!7563, !7565, !7566, !7567, !7568, !7569, !7570, !7571}
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7560, file: !7561, line: 21, baseType: !7564, size: 64)
!7564 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !277, line: 158, baseType: !5413)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7560, file: !7561, line: 22, baseType: !7564, size: 64, offset: 64)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7560, file: !7561, line: 23, baseType: !292, size: 64, offset: 128)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7560, file: !7561, line: 24, baseType: !312, size: 64, offset: 192)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !7560, file: !7561, line: 25, baseType: !312, size: 64, offset: 256)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7560, file: !7561, line: 26, baseType: !7559, size: 64, offset: 320)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !7560, file: !7561, line: 26, baseType: !7559, size: 64, offset: 384)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !7560, file: !7561, line: 26, baseType: !7559, size: 64, offset: 448)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !7549, file: !7544, line: 614, baseType: !284, size: 128, offset: 896)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !7549, file: !7544, line: 615, baseType: !7560, size: 512, offset: 1024)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7549, file: !7544, line: 617, baseType: !7575, size: 64, offset: 1536)
!7575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 64)
!7576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !7544, line: 731, size: 320, elements: !7577)
!7577 = !{!7578, !7582, !7586, !7590, !7594}
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !7576, file: !7544, line: 732, baseType: !7579, size: 64)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7580, size: 64)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{!32, !7548}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !7576, file: !7544, line: 733, baseType: !7583, size: 64, offset: 64)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 64)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{null, !7548}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !7576, file: !7544, line: 734, baseType: !7587, size: 64, offset: 128)
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!591, !7548, !7, !32}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7576, file: !7544, line: 735, baseType: !7591, size: 64, offset: 192)
!7591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7592, size: 64)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!32, !7548, !7, !32, !32, !2516}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7576, file: !7544, line: 736, baseType: !7595, size: 64, offset: 256)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{!32, !7548, !7, !32, !32, !987}
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !7549, file: !7544, line: 618, baseType: !7599, size: 64, offset: 1600)
!7599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7600, size: 64)
!7600 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !7544, line: 537, flags: DIFlagFwdDecl)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7549, file: !7544, line: 619, baseType: !591, size: 64, offset: 1664)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !7549, file: !7544, line: 620, baseType: !3028, size: 64, offset: 1728)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7549, file: !7544, line: 622, baseType: !482, size: 8, offset: 1792)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7549, file: !7544, line: 623, baseType: !482, size: 8, offset: 1800)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !7549, file: !7544, line: 624, baseType: !482, size: 8, offset: 1808)
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !7549, file: !7544, line: 625, baseType: !482, size: 8, offset: 1816)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7549, file: !7544, line: 630, baseType: !457, size: 384, offset: 1824)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !7549, file: !7544, line: 632, baseType: !476, size: 16, offset: 2208)
!7609 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !7549, file: !7544, line: 633, baseType: !7610, size: 16, offset: 2224)
!7610 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !7544, line: 237, baseType: !476)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !7549, file: !7544, line: 634, baseType: !3767, size: 64, offset: 2240)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7549, file: !7544, line: 635, baseType: !3768, size: 5568, offset: 2304)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !7549, file: !7544, line: 636, baseType: !3865, size: 64, offset: 7872)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !7549, file: !7544, line: 637, baseType: !3865, size: 64, offset: 7936)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !7549, file: !7544, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !7543, file: !7544, line: 312, baseType: !7548, size: 64, offset: 192)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !7543, file: !7544, line: 314, baseType: !591, size: 64, offset: 256)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !7543, file: !7544, line: 315, baseType: !3028, size: 64, offset: 320)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !7543, file: !7544, line: 316, baseType: !7620, size: 64, offset: 384)
!7620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7621, size: 64)
!7621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !7544, line: 69, size: 832, elements: !7622)
!7622 = !{!7623, !7624, !7625, !7628, !7629}
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7621, file: !7544, line: 70, baseType: !7548, size: 64)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7621, file: !7544, line: 71, baseType: !284, size: 128, offset: 64)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !7621, file: !7544, line: 72, baseType: !7626, size: 64, offset: 192)
!7626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7627, size: 64)
!7627 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !7544, line: 72, flags: DIFlagFwdDecl)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !7621, file: !7544, line: 73, baseType: !482, size: 8, offset: 256)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7621, file: !7544, line: 74, baseType: !3772, size: 512, offset: 320)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !7543, file: !7544, line: 318, baseType: !7, size: 32, offset: 448)
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7543, file: !7544, line: 319, baseType: !476, size: 16, offset: 480)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7543, file: !7544, line: 320, baseType: !476, size: 16, offset: 496)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !7543, file: !7544, line: 321, baseType: !476, size: 16, offset: 512)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !7543, file: !7544, line: 322, baseType: !476, size: 16, offset: 528)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7543, file: !7544, line: 323, baseType: !7, size: 32, offset: 544)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !7543, file: !7544, line: 324, baseType: !794, size: 8, offset: 576)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !7543, file: !7544, line: 325, baseType: !794, size: 8, offset: 584)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !7543, file: !7544, line: 330, baseType: !794, size: 8, offset: 592)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !7543, file: !7544, line: 331, baseType: !794, size: 8, offset: 600)
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !7543, file: !7544, line: 332, baseType: !794, size: 8, offset: 608)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !7543, file: !7544, line: 333, baseType: !794, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !7543, file: !7544, line: 334, baseType: !794, size: 8, offset: 624)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !7543, file: !7544, line: 335, baseType: !794, size: 8, offset: 632)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !7543, file: !7544, line: 336, baseType: !581, size: 16, offset: 640)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !7543, file: !7544, line: 337, baseType: !3457, size: 64, offset: 704)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7543, file: !7544, line: 339, baseType: !7647, size: 64, offset: 768)
!7647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7648, size: 64)
!7648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !7544, line: 858, size: 2048, elements: !7649)
!7649 = !{!7650, !7651, !7652, !7664, !7668, !7672, !7676, !7680, !7681, !7685, !7704, !7705, !7706}
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7648, file: !7544, line: 859, baseType: !284, size: 128)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7648, file: !7544, line: 860, baseType: !292, size: 64, offset: 128)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !7648, file: !7544, line: 861, baseType: !7653, size: 64, offset: 192)
!7653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7654, size: 64)
!7654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7655)
!7655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4143, line: 38, size: 256, elements: !7656)
!7656 = !{!7657, !7658, !7659, !7660, !7661, !7662, !7663}
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !7655, file: !4143, line: 39, baseType: !493, size: 32)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7655, file: !4143, line: 39, baseType: !493, size: 32, offset: 32)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !7655, file: !4143, line: 40, baseType: !493, size: 32, offset: 64)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !7655, file: !4143, line: 40, baseType: !493, size: 32, offset: 96)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !7655, file: !4143, line: 41, baseType: !493, size: 32, offset: 128)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !7655, file: !4143, line: 41, baseType: !493, size: 32, offset: 160)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7655, file: !4143, line: 42, baseType: !4161, size: 64, offset: 192)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7648, file: !7544, line: 862, baseType: !7665, size: 64, offset: 256)
!7665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7666, size: 64)
!7666 = !DISubroutineType(types: !7667)
!7667 = !{!32, !7542, !7653}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7648, file: !7544, line: 863, baseType: !7669, size: 64, offset: 320)
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7670, size: 64)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{null, !7542}
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7648, file: !7544, line: 864, baseType: !7673, size: 64, offset: 384)
!7673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7674, size: 64)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!32, !7542, !4172}
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7648, file: !7544, line: 865, baseType: !7677, size: 64, offset: 448)
!7677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7678, size: 64)
!7678 = !DISubroutineType(types: !7679)
!7679 = !{!32, !7542}
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7648, file: !7544, line: 866, baseType: !7669, size: 64, offset: 512)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !7648, file: !7544, line: 867, baseType: !7682, size: 64, offset: 576)
!7682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7683, size: 64)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!32, !7542, !32}
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !7648, file: !7544, line: 868, baseType: !7686, size: 64, offset: 640)
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 64)
!7687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7688)
!7688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !7544, line: 795, size: 384, elements: !7689)
!7689 = !{!7690, !7696, !7700, !7701, !7702, !7703}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !7688, file: !7544, line: 797, baseType: !7691, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DISubroutineType(types: !7693)
!7693 = !{!7694, !7542, !7695}
!7694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !7544, line: 772, baseType: !7)
!7695 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !7544, line: 180, baseType: !7)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !7688, file: !7544, line: 801, baseType: !7697, size: 64, offset: 64)
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7698, size: 64)
!7698 = !DISubroutineType(types: !7699)
!7699 = !{!7694, !7542}
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !7688, file: !7544, line: 804, baseType: !7697, size: 64, offset: 128)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !7688, file: !7544, line: 807, baseType: !7669, size: 64, offset: 192)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !7688, file: !7544, line: 808, baseType: !7669, size: 64, offset: 256)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7688, file: !7544, line: 811, baseType: !7669, size: 64, offset: 320)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !7648, file: !7544, line: 869, baseType: !3851, size: 64, offset: 704)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7648, file: !7544, line: 870, baseType: !4125, size: 1152, offset: 768)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !7648, file: !7544, line: 871, baseType: !7707, size: 128, offset: 1920)
!7707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !7544, line: 759, size: 128, elements: !7708)
!7708 = !{!7709, !7710}
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7707, file: !7544, line: 760, baseType: !1670)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7707, file: !7544, line: 761, baseType: !284, size: 128)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !7543, file: !7544, line: 340, baseType: !331, size: 64, offset: 832)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !7543, file: !7544, line: 346, baseType: !4362, size: 128, offset: 896)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !7543, file: !7544, line: 348, baseType: !7714, size: 32, offset: 1024)
!7714 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !7544, line: 155, baseType: !32)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !7543, file: !7544, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !7543, file: !7544, line: 352, baseType: !794, size: 8, offset: 1064)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !7543, file: !7544, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !7543, file: !7544, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !7543, file: !7544, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !7543, file: !7544, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !7543, file: !7544, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !7543, file: !7544, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !7543, file: !7544, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !7543, file: !7544, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !7543, file: !7544, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !7543, file: !7544, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !7543, file: !7544, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !7543, file: !7544, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !7543, file: !7544, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !7543, file: !7544, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !7543, file: !7544, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !7543, file: !7544, line: 376, baseType: !7, size: 32, offset: 1120)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !7543, file: !7544, line: 377, baseType: !7, size: 32, offset: 1152)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7543, file: !7544, line: 380, baseType: !7735, size: 64, offset: 1216)
!7735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7736, size: 64)
!7736 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !7544, line: 303, flags: DIFlagFwdDecl)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !7543, file: !7544, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !7543, file: !7544, line: 383, baseType: !32, size: 32, offset: 1312)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !7543, file: !7544, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !7543, file: !7544, line: 387, baseType: !7695, size: 32, offset: 1376)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7543, file: !7544, line: 388, baseType: !3768, size: 5568, offset: 1408)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !7543, file: !7544, line: 390, baseType: !32, size: 32, offset: 6976)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7543, file: !7544, line: 396, baseType: !7, size: 32, offset: 7008)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !7543, file: !7544, line: 397, baseType: !7745, size: 8704, offset: 7040)
!7745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7560, size: 8704, elements: !7746)
!7746 = !{!7747}
!7747 = !DISubrange(count: 17)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !7543, file: !7544, line: 399, baseType: !771, size: 8, offset: 15744)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !7543, file: !7544, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !7543, file: !7544, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !7543, file: !7544, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !7543, file: !7544, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !7543, file: !7544, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !7543, file: !7544, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !7543, file: !7544, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !7543, file: !7544, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !7543, file: !7544, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !7543, file: !7544, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !7543, file: !7544, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !7543, file: !7544, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !7543, file: !7544, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !7543, file: !7544, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !7543, file: !7544, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !7543, file: !7544, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !7543, file: !7544, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !7543, file: !7544, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !7543, file: !7544, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !7543, file: !7544, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !7543, file: !7544, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !7543, file: !7544, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !7543, file: !7544, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !7543, file: !7544, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!7773 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !7543, file: !7544, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !7543, file: !7544, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !7543, file: !7544, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !7543, file: !7544, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !7543, file: !7544, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !7543, file: !7544, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !7543, file: !7544, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!7780 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !7543, file: !7544, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !7543, file: !7544, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !7543, file: !7544, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !7543, file: !7544, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !7543, file: !7544, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7543, file: !7544, line: 450, baseType: !7786, size: 16, offset: 15792)
!7786 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !7544, line: 206, baseType: !476)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !7543, file: !7544, line: 451, baseType: !383, size: 32, offset: 15808)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !7543, file: !7544, line: 453, baseType: !7789, size: 512, offset: 15840)
!7789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 512, elements: !269)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !7543, file: !7544, line: 454, baseType: !1581, size: 64, offset: 16384)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !7543, file: !7544, line: 455, baseType: !3865, size: 64, offset: 16448)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !7543, file: !7544, line: 456, baseType: !32, size: 32, offset: 16512)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !7543, file: !7544, line: 457, baseType: !7794, size: 1088, offset: 16576)
!7794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3865, size: 1088, elements: !7746)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !7543, file: !7544, line: 458, baseType: !7794, size: 1088, offset: 17664)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !7543, file: !7544, line: 469, baseType: !3851, size: 64, offset: 18752)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !7543, file: !7544, line: 471, baseType: !7798, size: 64, offset: 18816)
!7798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7799, size: 64)
!7799 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !7544, line: 304, flags: DIFlagFwdDecl)
!7800 = !DIDerivedType(tag: DW_TAG_member, scope: !7543, file: !7544, line: 478, baseType: !7801, size: 64, offset: 18880)
!7801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7543, file: !7544, line: 478, size: 64, elements: !7802)
!7802 = !{!7803, !7806}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !7801, file: !7544, line: 479, baseType: !7804, size: 64)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7805, size: 64)
!7805 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !7544, line: 305, flags: DIFlagFwdDecl)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !7801, file: !7544, line: 480, baseType: !7542, size: 64)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !7543, file: !7544, line: 482, baseType: !581, size: 16, offset: 18944)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !7543, file: !7544, line: 483, baseType: !794, size: 8, offset: 18960)
!7809 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !7543, file: !7544, line: 497, baseType: !581, size: 16, offset: 18976)
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !7543, file: !7544, line: 498, baseType: !5413, size: 64, offset: 19008)
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !7543, file: !7544, line: 499, baseType: !1039, size: 64, offset: 19072)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !7543, file: !7544, line: 500, baseType: !1038, size: 64, offset: 19136)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !7543, file: !7544, line: 502, baseType: !312, size: 64, offset: 19200)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "port_count", scope: !7531, file: !3, line: 249, baseType: !32, size: 32, offset: 2880)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "adapter_num", scope: !7531, file: !3, line: 250, baseType: !32, size: 32, offset: 2912)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !7531, file: !3, line: 251, baseType: !32, size: 32, offset: 2944)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "port_array", scope: !7531, file: !3, line: 254, baseType: !7818, size: 256, offset: 3008)
!7818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7530, size: 256, elements: !2272)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !7531, file: !3, line: 256, baseType: !32, size: 32, offset: 3264)
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !7531, file: !3, line: 258, baseType: !7821, size: 736, offset: 3296)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mgsl_icount", file: !7822, line: 213, size: 736, elements: !7823)
!7822 = !DIFile(filename: "./include/uapi/linux/synclink.h", directory: "/home/lizy2001/genbc/linux")
!7823 = !{!7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833, !7834, !7835, !7836, !7837, !7838, !7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846}
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32, offset: 32)
!7826 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32, offset: 64)
!7827 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32, offset: 96)
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32, offset: 128)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !7821, file: !7822, line: 214, baseType: !493, size: 32, offset: 160)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !7821, file: !7822, line: 215, baseType: !493, size: 32, offset: 192)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7821, file: !7822, line: 215, baseType: !493, size: 32, offset: 224)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !7821, file: !7822, line: 215, baseType: !493, size: 32, offset: 256)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !7821, file: !7822, line: 215, baseType: !493, size: 32, offset: 288)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !7821, file: !7822, line: 216, baseType: !493, size: 32, offset: 320)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "txok", scope: !7821, file: !7822, line: 217, baseType: !493, size: 32, offset: 352)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "txunder", scope: !7821, file: !7822, line: 218, baseType: !493, size: 32, offset: 384)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "txabort", scope: !7821, file: !7822, line: 219, baseType: !493, size: 32, offset: 416)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "txtimeout", scope: !7821, file: !7822, line: 220, baseType: !493, size: 32, offset: 448)
!7839 = !DIDerivedType(tag: DW_TAG_member, name: "rxshort", scope: !7821, file: !7822, line: 221, baseType: !493, size: 32, offset: 480)
!7840 = !DIDerivedType(tag: DW_TAG_member, name: "rxlong", scope: !7821, file: !7822, line: 222, baseType: !493, size: 32, offset: 512)
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "rxabort", scope: !7821, file: !7822, line: 223, baseType: !493, size: 32, offset: 544)
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "rxover", scope: !7821, file: !7822, line: 224, baseType: !493, size: 32, offset: 576)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "rxcrc", scope: !7821, file: !7822, line: 225, baseType: !493, size: 32, offset: 608)
!7844 = !DIDerivedType(tag: DW_TAG_member, name: "rxok", scope: !7821, file: !7822, line: 226, baseType: !493, size: 32, offset: 640)
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "exithunt", scope: !7821, file: !7822, line: 227, baseType: !493, size: 32, offset: 672)
!7846 = !DIDerivedType(tag: DW_TAG_member, name: "rxidle", scope: !7821, file: !7822, line: 228, baseType: !493, size: 32, offset: 704)
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7531, file: !3, line: 260, baseType: !32, size: 32, offset: 4032)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !7531, file: !3, line: 261, baseType: !32, size: 32, offset: 4064)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !7531, file: !3, line: 262, baseType: !7, size: 32, offset: 4096)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !7531, file: !3, line: 263, baseType: !7, size: 32, offset: 4128)
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "status_event_wait_q", scope: !7531, file: !3, line: 265, baseType: !1889, size: 128, offset: 4160)
!7852 = !DIDerivedType(tag: DW_TAG_member, name: "event_wait_q", scope: !7531, file: !3, line: 266, baseType: !1889, size: 128, offset: 4288)
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timer", scope: !7531, file: !3, line: 267, baseType: !3253, size: 320, offset: 4416)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "rx_timer", scope: !7531, file: !3, line: 268, baseType: !3253, size: 320, offset: 4736)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_present", scope: !7531, file: !3, line: 270, baseType: !7, size: 32, offset: 5056)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_wait_q", scope: !7531, file: !3, line: 271, baseType: !7857, size: 64, offset: 5120)
!7857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7858, size: 64)
!7858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cond_wait", file: !3, line: 183, size: 576, elements: !7859)
!7859 = !{!7860, !7861, !7862, !7875}
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7858, file: !3, line: 184, baseType: !7857, size: 64)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !7858, file: !3, line: 185, baseType: !1889, size: 128, offset: 64)
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7858, file: !3, line: 186, baseType: !7863, size: 320, offset: 192)
!7863 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1890, line: 14, baseType: !7864)
!7864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1890, line: 29, size: 320, elements: !7865)
!7865 = !{!7866, !7867, !7868, !7874}
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7864, file: !1890, line: 30, baseType: !7, size: 32)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !7864, file: !1890, line: 31, baseType: !591, size: 64, offset: 64)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7864, file: !1890, line: 32, baseType: !7869, size: 64, offset: 128)
!7869 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1890, line: 16, baseType: !7870)
!7870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7871, size: 64)
!7871 = !DISubroutineType(types: !7872)
!7872 = !{!32, !7873, !7, !32, !591}
!7873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7864, file: !1890, line: 33, baseType: !284, size: 128, offset: 192)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7858, file: !3, line: 187, baseType: !7, size: 32, offset: 512)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7531, file: !3, line: 273, baseType: !1670, offset: 5184)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !7531, file: !3, line: 275, baseType: !2764, size: 256, offset: 5184)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "pending_bh", scope: !7531, file: !3, line: 276, baseType: !987, size: 32, offset: 5440)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "bh_requested", scope: !7531, file: !3, line: 277, baseType: !771, size: 8, offset: 5472)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "bh_running", scope: !7531, file: !3, line: 278, baseType: !771, size: 8, offset: 5480)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "isr_overflow", scope: !7531, file: !3, line: 280, baseType: !32, size: 32, offset: 5504)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "irq_requested", scope: !7531, file: !3, line: 281, baseType: !771, size: 8, offset: 5536)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "irq_occurred", scope: !7531, file: !3, line: 282, baseType: !771, size: 8, offset: 5544)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "bus_type", scope: !7531, file: !3, line: 286, baseType: !7, size: 32, offset: 5568)
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "irq_level", scope: !7531, file: !3, line: 287, baseType: !7, size: 32, offset: 5600)
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags", scope: !7531, file: !3, line: 288, baseType: !312, size: 64, offset: 5632)
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "reg_addr", scope: !7531, file: !3, line: 290, baseType: !564, size: 64, offset: 5696)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "phys_reg_addr", scope: !7531, file: !3, line: 291, baseType: !987, size: 32, offset: 5760)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "reg_addr_requested", scope: !7531, file: !3, line: 292, baseType: !771, size: 8, offset: 5792)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !7531, file: !3, line: 294, baseType: !7891, size: 384, offset: 5824)
!7891 = !DIDerivedType(tag: DW_TAG_typedef, name: "MGSL_PARAMS", file: !7822, line: 170, baseType: !7892)
!7892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MGSL_PARAMS", file: !7822, line: 146, size: 384, elements: !7893)
!7893 = !{!7894, !7895, !7896, !7897, !7898, !7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906}
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7892, file: !7822, line: 150, baseType: !312, size: 64)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7892, file: !7822, line: 151, baseType: !482, size: 8, offset: 64)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7892, file: !7822, line: 155, baseType: !476, size: 16, offset: 80)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7892, file: !7822, line: 156, baseType: !482, size: 8, offset: 96)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "clock_speed", scope: !7892, file: !7822, line: 157, baseType: !312, size: 64, offset: 128)
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filter", scope: !7892, file: !7822, line: 158, baseType: !482, size: 8, offset: 192)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "crc_type", scope: !7892, file: !7822, line: 159, baseType: !476, size: 16, offset: 208)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "preamble_length", scope: !7892, file: !7822, line: 160, baseType: !482, size: 8, offset: 224)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "preamble", scope: !7892, file: !7822, line: 161, baseType: !482, size: 8, offset: 232)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "data_rate", scope: !7892, file: !7822, line: 165, baseType: !312, size: 64, offset: 256)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !7892, file: !7822, line: 166, baseType: !482, size: 8, offset: 320)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !7892, file: !7822, line: 167, baseType: !482, size: 8, offset: 328)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7892, file: !7822, line: 168, baseType: !482, size: 8, offset: 336)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "idle_mode", scope: !7531, file: !3, line: 295, baseType: !987, size: 32, offset: 6208)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "max_frame_size", scope: !7531, file: !3, line: 296, baseType: !987, size: 32, offset: 6240)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_fill_level", scope: !7531, file: !3, line: 298, baseType: !7, size: 32, offset: 6272)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pio", scope: !7531, file: !3, line: 299, baseType: !7, size: 32, offset: 6304)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "if_mode", scope: !7531, file: !3, line: 300, baseType: !7, size: 32, offset: 6336)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "base_clock", scope: !7531, file: !3, line: 301, baseType: !7, size: 32, offset: 6368)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "xsync", scope: !7531, file: !3, line: 302, baseType: !7, size: 32, offset: 6400)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "xctrl", scope: !7531, file: !3, line: 303, baseType: !7, size: 32, offset: 6432)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "rx_enabled", scope: !7531, file: !3, line: 307, baseType: !771, size: 8, offset: 6464)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "rx_restart", scope: !7531, file: !3, line: 308, baseType: !771, size: 8, offset: 6472)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "tx_enabled", scope: !7531, file: !3, line: 310, baseType: !771, size: 8, offset: 6480)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "tx_active", scope: !7531, file: !3, line: 311, baseType: !771, size: 8, offset: 6488)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "signals", scope: !7531, file: !3, line: 313, baseType: !482, size: 8, offset: 6496)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "init_error", scope: !7531, file: !3, line: 314, baseType: !32, size: 32, offset: 6528)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buf", scope: !7531, file: !3, line: 316, baseType: !564, size: 64, offset: 6592)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !7531, file: !3, line: 317, baseType: !32, size: 32, offset: 6656)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_buf", scope: !7531, file: !3, line: 319, baseType: !1038, size: 64, offset: 6720)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rts_on_tx_done", scope: !7531, file: !3, line: 320, baseType: !771, size: 8, offset: 6784)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "input_signal_events", scope: !7531, file: !3, line: 321, baseType: !7926, size: 256, offset: 6816)
!7926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_input_signal_events", file: !3, line: 224, size: 256, elements: !7927)
!7927 = !{!7928, !7929, !7930, !7931, !7932, !7933, !7934, !7935}
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "ri_up", scope: !7926, file: !3, line: 225, baseType: !32, size: 32)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "ri_down", scope: !7926, file: !3, line: 226, baseType: !32, size: 32, offset: 32)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_up", scope: !7926, file: !3, line: 227, baseType: !32, size: 32, offset: 64)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_down", scope: !7926, file: !3, line: 228, baseType: !32, size: 32, offset: 96)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_up", scope: !7926, file: !3, line: 229, baseType: !32, size: 32, offset: 128)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_down", scope: !7926, file: !3, line: 230, baseType: !32, size: 32, offset: 160)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "cts_up", scope: !7926, file: !3, line: 231, baseType: !32, size: 32, offset: 192)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "cts_down", scope: !7926, file: !3, line: 232, baseType: !32, size: 32, offset: 224)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_chkcount", scope: !7531, file: !3, line: 323, baseType: !32, size: 32, offset: 7072)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "cts_chkcount", scope: !7531, file: !3, line: 324, baseType: !32, size: 32, offset: 7104)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "dsr_chkcount", scope: !7531, file: !3, line: 325, baseType: !32, size: 32, offset: 7136)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "ri_chkcount", scope: !7531, file: !3, line: 326, baseType: !32, size: 32, offset: 7168)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !7531, file: !3, line: 328, baseType: !1038, size: 64, offset: 7232)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "bufs_dma_addr", scope: !7531, file: !3, line: 329, baseType: !2036, size: 64, offset: 7296)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_count", scope: !7531, file: !3, line: 331, baseType: !7, size: 32, offset: 7360)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "rbufs", scope: !7531, file: !3, line: 332, baseType: !7944, size: 64, offset: 7424)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 64)
!7945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slgt_desc", file: !3, line: 197, size: 384, elements: !7946)
!7946 = !{!7947, !7949, !7950, !7952, !7953, !7954, !7955, !7956}
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7945, file: !3, line: 199, baseType: !7948, size: 16)
!7948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !525, line: 29, baseType: !475)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !7945, file: !3, line: 200, baseType: !7948, size: 16, offset: 16)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "pbuf", scope: !7945, file: !3, line: 201, baseType: !7951, size: 32, offset: 32)
!7951 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !525, line: 31, baseType: !493)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7945, file: !3, line: 202, baseType: !7951, size: 32, offset: 64)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7945, file: !3, line: 205, baseType: !1038, size: 64, offset: 128)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "pdesc", scope: !7945, file: !3, line: 206, baseType: !7, size: 32, offset: 192)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "buf_dma_addr", scope: !7945, file: !3, line: 207, baseType: !2036, size: 64, offset: 256)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !7945, file: !3, line: 208, baseType: !476, size: 16, offset: 320)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_current", scope: !7531, file: !3, line: 333, baseType: !7, size: 32, offset: 7488)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_index", scope: !7531, file: !3, line: 334, baseType: !7, size: 32, offset: 7520)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_fill_index", scope: !7531, file: !3, line: 335, baseType: !7, size: 32, offset: 7552)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf_fill_count", scope: !7531, file: !3, line: 336, baseType: !476, size: 16, offset: 7584)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "tbuf_count", scope: !7531, file: !3, line: 338, baseType: !7, size: 32, offset: 7616)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "tbufs", scope: !7531, file: !3, line: 339, baseType: !7944, size: 64, offset: 7680)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "tbuf_current", scope: !7531, file: !3, line: 340, baseType: !7, size: 32, offset: 7744)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "tbuf_start", scope: !7531, file: !3, line: 341, baseType: !7, size: 32, offset: 7776)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_rbuf", scope: !7531, file: !3, line: 343, baseType: !564, size: 64, offset: 7808)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_rbuf_count", scope: !7531, file: !3, line: 344, baseType: !7, size: 32, offset: 7872)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "netcount", scope: !7531, file: !3, line: 348, baseType: !32, size: 32, offset: 7904)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "netlock", scope: !7531, file: !3, line: 349, baseType: !1670, offset: 7936)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7531, file: !3, line: 351, baseType: !290, size: 64, offset: 7936)
!7970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7971, size: 64)
!7971 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7973, size: 64)
!7973 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !268)
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!7976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7977, size: 64)
!7977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7971)
!7978 = !{!0, !7979, !7984, !8034, !8039, !8041, !8044, !8046, !8051, !8056, !8061, !8063, !8065, !8070, !8072, !8074, !8079, !8081, !8083, !8085, !8088, !8090, !8092, !8094, !8096, !8098, !8101, !8106, !8108, !8110, !8112, !8114, !8116, !8122, !8124, !8126, !8128, !8130}
!7979 = !DIGlobalVariableExpression(var: !7980, expr: !DIExpression())
!7980 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license320", scope: !2, file: !3, line: 93, type: !7981, isLocal: true, isDefinition: true, align: 8)
!7981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 192, elements: !7982)
!7982 = !{!7983}
!7983 = !DISubrange(count: 24)
!7984 = !DIGlobalVariableExpression(var: !7985, expr: !DIExpression())
!7985 = distinct !DIGlobalVariable(name: "__param_ttymajor", scope: !2, file: !3, line: 127, type: !7986, isLocal: true, isDefinition: true, align: 64)
!7986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7987)
!7987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !7988, line: 69, size: 320, elements: !7989)
!7988 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!7989 = !{!7990, !7991, !7992, !8008, !8010, !8012, !8013}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7987, file: !7988, line: 70, baseType: !292, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !7987, file: !7988, line: 71, baseType: !980, size: 64, offset: 64)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7987, file: !7988, line: 72, baseType: !7993, size: 64, offset: 128)
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7994, size: 64)
!7994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7995)
!7995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !7988, line: 47, size: 256, elements: !7996)
!7996 = !{!7997, !7998, !8003, !8007}
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7995, file: !7988, line: 49, baseType: !7, size: 32)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !7995, file: !7988, line: 51, baseType: !7999, size: 64, offset: 64)
!7999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8000, size: 64)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!32, !292, !8002}
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 64)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !7995, file: !7988, line: 53, baseType: !8004, size: 64, offset: 128)
!8004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8005, size: 64)
!8005 = !DISubroutineType(types: !8006)
!8006 = !{!32, !1038, !8002}
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7995, file: !7988, line: 55, baseType: !1415, size: 64, offset: 192)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !7987, file: !7988, line: 73, baseType: !8009, size: 16, offset: 192)
!8009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !7987, file: !7988, line: 74, baseType: !8011, size: 8, offset: 208)
!8011 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !7151)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7987, file: !7988, line: 75, baseType: !794, size: 8, offset: 216)
!8013 = !DIDerivedType(tag: DW_TAG_member, scope: !7987, file: !7988, line: 76, baseType: !8014, size: 64, offset: 256)
!8014 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7987, file: !7988, line: 76, size: 64, elements: !8015)
!8015 = !{!8016, !8017, !8024}
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !8014, file: !7988, line: 77, baseType: !591, size: 64)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !8014, file: !7988, line: 78, baseType: !8018, size: 64)
!8018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8019, size: 64)
!8019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8020)
!8020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !7988, line: 86, size: 128, elements: !8021)
!8021 = !{!8022, !8023}
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !8020, file: !7988, line: 87, baseType: !7, size: 32)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !8020, file: !7988, line: 88, baseType: !1038, size: 64, offset: 64)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !8014, file: !7988, line: 79, baseType: !8025, size: 64)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 64)
!8026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8027)
!8027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !7988, line: 92, size: 256, elements: !8028)
!8028 = !{!8029, !8030, !8031, !8032, !8033}
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8027, file: !7988, line: 94, baseType: !7, size: 32)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !8027, file: !7988, line: 95, baseType: !7, size: 32, offset: 32)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !8027, file: !7988, line: 96, baseType: !5975, size: 64, offset: 64)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8027, file: !7988, line: 97, baseType: !7993, size: 64, offset: 128)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !8027, file: !7988, line: 98, baseType: !591, size: 64, offset: 192)
!8034 = !DIGlobalVariableExpression(var: !8035, expr: !DIExpression())
!8035 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ttymajortype321", scope: !2, file: !3, line: 127, type: !8036, isLocal: true, isDefinition: true, align: 8)
!8036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 272, elements: !8037)
!8037 = !{!8038}
!8038 = !DISubrange(count: 34)
!8039 = !DIGlobalVariableExpression(var: !8040, expr: !DIExpression())
!8040 = distinct !DIGlobalVariable(name: "__param_debug_level", scope: !2, file: !3, line: 128, type: !7986, isLocal: true, isDefinition: true, align: 64)
!8041 = !DIGlobalVariableExpression(var: !8042, expr: !DIExpression())
!8042 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug_leveltype322", scope: !2, file: !3, line: 128, type: !8043, isLocal: true, isDefinition: true, align: 8)
!8043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 296, elements: !3086)
!8044 = !DIGlobalVariableExpression(var: !8045, expr: !DIExpression())
!8045 = distinct !DIGlobalVariable(name: "__param_maxframe", scope: !2, file: !3, line: 129, type: !7986, isLocal: true, isDefinition: true, align: 64)
!8046 = !DIGlobalVariableExpression(var: !8047, expr: !DIExpression())
!8047 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_maxframetype323", scope: !2, file: !3, line: 129, type: !8048, isLocal: true, isDefinition: true, align: 8)
!8048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 344, elements: !8049)
!8049 = !{!8050}
!8050 = !DISubrange(count: 43)
!8051 = !DIGlobalVariableExpression(var: !8052, expr: !DIExpression())
!8052 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ttymajor324", scope: !2, file: !3, line: 131, type: !8053, isLocal: true, isDefinition: true, align: 8)
!8053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 608, elements: !8054)
!8054 = !{!8055}
!8055 = !DISubrange(count: 76)
!8056 = !DIGlobalVariableExpression(var: !8057, expr: !DIExpression())
!8057 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug_level325", scope: !2, file: !3, line: 132, type: !8058, isLocal: true, isDefinition: true, align: 8)
!8058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 696, elements: !8059)
!8059 = !{!8060}
!8060 = !DISubrange(count: 87)
!8061 = !DIGlobalVariableExpression(var: !8062, expr: !DIExpression())
!8062 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_maxframe326", scope: !2, file: !3, line: 133, type: !8053, isLocal: true, isDefinition: true, align: 8)
!8063 = !DIGlobalVariableExpression(var: !8064, expr: !DIExpression())
!8064 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_slgt_init342", scope: !2, file: !3, line: 3812, type: !591, isLocal: true, isDefinition: true)
!8065 = !DIGlobalVariableExpression(var: !8066, expr: !DIExpression())
!8066 = distinct !DIGlobalVariable(name: "__exitcall_slgt_exit", scope: !2, file: !3, line: 3813, type: !8067, isLocal: true, isDefinition: true)
!8067 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !8068, line: 117, baseType: !8069)
!8068 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!8069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!8070 = !DIGlobalVariableExpression(var: !8071, expr: !DIExpression())
!8071 = distinct !DIGlobalVariable(name: "ttymajor", scope: !2, file: !3, line: 123, type: !32, isLocal: true, isDefinition: true)
!8072 = !DIGlobalVariableExpression(var: !8073, expr: !DIExpression())
!8073 = distinct !DIGlobalVariable(name: "debug_level", scope: !2, file: !3, line: 124, type: !32, isLocal: true, isDefinition: true)
!8074 = !DIGlobalVariableExpression(var: !8075, expr: !DIExpression())
!8075 = distinct !DIGlobalVariable(name: "__param_str_ttymajor", scope: !2, file: !3, line: 127, type: !8076, isLocal: true, isDefinition: true)
!8076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 168, elements: !8077)
!8077 = !{!8078}
!8078 = !DISubrange(count: 21)
!8079 = !DIGlobalVariableExpression(var: !8080, expr: !DIExpression())
!8080 = distinct !DIGlobalVariable(name: "__param_str_debug_level", scope: !2, file: !3, line: 128, type: !7981, isLocal: true, isDefinition: true)
!8081 = !DIGlobalVariableExpression(var: !8082, expr: !DIExpression())
!8082 = distinct !DIGlobalVariable(name: "__param_str_maxframe", scope: !2, file: !3, line: 129, type: !8076, isLocal: true, isDefinition: true)
!8083 = !DIGlobalVariableExpression(var: !8084, expr: !DIExpression())
!8084 = distinct !DIGlobalVariable(name: "__param_arr_maxframe", scope: !2, file: !3, line: 129, type: !8026, isLocal: true, isDefinition: true)
!8085 = !DIGlobalVariableExpression(var: !8086, expr: !DIExpression())
!8086 = distinct !DIGlobalVariable(name: "maxframe", scope: !2, file: !3, line: 125, type: !8087, isLocal: true, isDefinition: true)
!8087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1024, elements: !819)
!8088 = !DIGlobalVariableExpression(var: !8089, expr: !DIExpression())
!8089 = distinct !DIGlobalVariable(name: "driver_name", scope: !2, file: !3, line: 90, type: !1038, isLocal: true, isDefinition: true)
!8090 = !DIGlobalVariableExpression(var: !8091, expr: !DIExpression())
!8091 = distinct !DIGlobalVariable(name: "serial_driver", scope: !2, file: !3, line: 138, type: !4513, isLocal: true, isDefinition: true)
!8092 = !DIGlobalVariableExpression(var: !8093, expr: !DIExpression())
!8093 = distinct !DIGlobalVariable(name: "slgt_device_list", scope: !2, file: !3, line: 120, type: !7530, isLocal: true, isDefinition: true)
!8094 = !DIGlobalVariableExpression(var: !8095, expr: !DIExpression())
!8095 = distinct !DIGlobalVariable(name: "pci_registered", scope: !2, file: !3, line: 115, type: !771, isLocal: true, isDefinition: true)
!8096 = !DIGlobalVariableExpression(var: !8097, expr: !DIExpression())
!8097 = distinct !DIGlobalVariable(name: "pci_driver", scope: !2, file: !3, line: 108, type: !7648, isLocal: true, isDefinition: true)
!8098 = !DIGlobalVariableExpression(var: !8099, expr: !DIExpression())
!8099 = distinct !DIGlobalVariable(name: "pci_table", scope: !2, file: !3, line: 97, type: !8100, isLocal: true, isDefinition: true)
!8100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7654, size: 1280, elements: !2630)
!8101 = !DIGlobalVariableExpression(var: !8102, expr: !DIExpression())
!8102 = distinct !DIGlobalVariable(name: "__key", scope: !8103, file: !3, line: 3571, type: !1585, isLocal: true, isDefinition: true)
!8103 = distinct !DISubprogram(name: "alloc_dev", scope: !3, file: !3, line: 3552, type: !8104, scopeLine: 3553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!7530, !32, !32, !7542}
!8106 = !DIGlobalVariableExpression(var: !8107, expr: !DIExpression())
!8107 = distinct !DIGlobalVariable(name: "__key", scope: !8103, file: !3, line: 3572, type: !1585, isLocal: true, isDefinition: true)
!8108 = !DIGlobalVariableExpression(var: !8109, expr: !DIExpression())
!8109 = distinct !DIGlobalVariable(name: "slgt_port_ops", scope: !2, file: !3, line: 3544, type: !4803, isLocal: true, isDefinition: true)
!8110 = !DIGlobalVariableExpression(var: !8111, expr: !DIExpression())
!8111 = distinct !DIGlobalVariable(name: "default_params", scope: !2, file: !3, line: 356, type: !7891, isLocal: true, isDefinition: true)
!8112 = !DIGlobalVariableExpression(var: !8113, expr: !DIExpression())
!8113 = distinct !DIGlobalVariable(name: "tty_dev_prefix", scope: !2, file: !3, line: 92, type: !1038, isLocal: true, isDefinition: true)
!8114 = !DIGlobalVariableExpression(var: !8115, expr: !DIExpression())
!8115 = distinct !DIGlobalVariable(name: "hdlcdev_ops", scope: !2, file: !3, line: 1742, type: !397, isLocal: true, isDefinition: true)
!8116 = !DIGlobalVariableExpression(var: !8117, expr: !DIExpression())
!8117 = distinct !DIGlobalVariable(name: "patterns", scope: !8118, file: !3, line: 4930, type: !8121, isLocal: true, isDefinition: true)
!8118 = distinct !DISubprogram(name: "register_test", scope: !3, file: !3, line: 4928, type: !8119, scopeLine: 4929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!32, !7530}
!8121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 96, elements: !999)
!8122 = !DIGlobalVariableExpression(var: !8123, expr: !DIExpression())
!8123 = distinct !DIGlobalVariable(name: "count", scope: !8118, file: !3, line: 4932, type: !7, isLocal: true, isDefinition: true)
!8124 = !DIGlobalVariableExpression(var: !8125, expr: !DIExpression())
!8125 = distinct !DIGlobalVariable(name: "slgt_device_count", scope: !2, file: !3, line: 121, type: !32, isLocal: true, isDefinition: true)
!8126 = !DIGlobalVariableExpression(var: !8127, expr: !DIExpression())
!8127 = distinct !DIGlobalVariable(name: "slgt_driver_name", scope: !2, file: !3, line: 91, type: !1038, isLocal: true, isDefinition: true)
!8128 = !DIGlobalVariableExpression(var: !8129, expr: !DIExpression())
!8129 = distinct !DIGlobalVariable(name: "ops", scope: !2, file: !3, line: 3680, type: !4856, isLocal: true, isDefinition: true)
!8130 = !DIGlobalVariableExpression(var: !8131, expr: !DIExpression())
!8131 = distinct !DIGlobalVariable(name: "__key", scope: !8132, file: !3, line: 2989, type: !1585, isLocal: true, isDefinition: true)
!8132 = distinct !DISubprogram(name: "init_cond_wait", scope: !3, file: !3, line: 2987, type: !8133, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8133 = !DISubroutineType(types: !8134)
!8134 = !{null, !7857, !7}
!8135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 328, elements: !8136)
!8136 = !{!8137}
!8137 = !DISubrange(count: 41)
!8138 = !{!"rsp"}
!8139 = !{i32 7, !"Dwarf Version", i32 4}
!8140 = !{i32 2, !"Debug Info Version", i32 3}
!8141 = !{i32 1, !"wchar_size", i32 2}
!8142 = !{i32 1, !"Code Model", i32 2}
!8143 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!8144 = distinct !DISubprogram(name: "slgt_exit", scope: !3, file: !3, line: 3807, type: !5179, scopeLine: 3808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8145 = !DILocation(line: 3809, column: 2, scope: !8144)
!8146 = !DILocation(line: 3810, column: 1, scope: !8144)
!8147 = distinct !DISubprogram(name: "slgt_cleanup", scope: !3, file: !3, line: 3706, type: !5179, scopeLine: 3707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8148 = !DILocalVariable(name: "rc", scope: !8147, file: !3, line: 3708, type: !32)
!8149 = !DILocation(line: 3708, column: 6, scope: !8147)
!8150 = !DILocalVariable(name: "info", scope: !8147, file: !3, line: 3709, type: !7530)
!8151 = !DILocation(line: 3709, column: 20, scope: !8147)
!8152 = !DILocalVariable(name: "tmp", scope: !8147, file: !3, line: 3710, type: !7530)
!8153 = !DILocation(line: 3710, column: 20, scope: !8147)
!8154 = !DILocation(line: 3712, column: 34, scope: !8147)
!8155 = !DILocation(line: 3712, column: 2, scope: !8147)
!8156 = !DILocation(line: 3714, column: 6, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 3714, column: 6)
!8158 = !DILocation(line: 3714, column: 6, scope: !8147)
!8159 = !DILocation(line: 3715, column: 13, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 3715, column: 3)
!8161 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 3714, column: 21)
!8162 = !DILocation(line: 3715, column: 12, scope: !8160)
!8163 = !DILocation(line: 3715, column: 8, scope: !8160)
!8164 = !DILocation(line: 3715, column: 32, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 3715, column: 3)
!8166 = !DILocation(line: 3715, column: 37, scope: !8165)
!8167 = !DILocation(line: 3715, column: 3, scope: !8160)
!8168 = !DILocation(line: 3716, column: 26, scope: !8165)
!8169 = !DILocation(line: 3716, column: 41, scope: !8165)
!8170 = !DILocation(line: 3716, column: 47, scope: !8165)
!8171 = !DILocation(line: 3716, column: 4, scope: !8165)
!8172 = !DILocation(line: 3715, column: 52, scope: !8165)
!8173 = !DILocation(line: 3715, column: 58, scope: !8165)
!8174 = !DILocation(line: 3715, column: 51, scope: !8165)
!8175 = !DILocation(line: 3715, column: 3, scope: !8165)
!8176 = distinct !{!8176, !8167, !8177}
!8177 = !DILocation(line: 3716, column: 51, scope: !8160)
!8178 = !DILocation(line: 3717, column: 30, scope: !8161)
!8179 = !DILocation(line: 3717, column: 8, scope: !8161)
!8180 = !DILocation(line: 3717, column: 6, scope: !8161)
!8181 = !DILocation(line: 3718, column: 7, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 3718, column: 7)
!8183 = !DILocation(line: 3718, column: 7, scope: !8161)
!8184 = !DILocation(line: 3719, column: 4, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 3719, column: 4)
!8186 = !DILocation(line: 3719, column: 4, scope: !8182)
!8187 = !DILocation(line: 3720, column: 18, scope: !8161)
!8188 = !DILocation(line: 3720, column: 3, scope: !8161)
!8189 = !DILocation(line: 3721, column: 2, scope: !8161)
!8190 = !DILocation(line: 3724, column: 9, scope: !8147)
!8191 = !DILocation(line: 3724, column: 7, scope: !8147)
!8192 = !DILocation(line: 3725, column: 2, scope: !8147)
!8193 = !DILocation(line: 3725, column: 8, scope: !8147)
!8194 = !DILocation(line: 3726, column: 14, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 3725, column: 14)
!8196 = !DILocation(line: 3726, column: 3, scope: !8195)
!8197 = !DILocation(line: 3727, column: 10, scope: !8195)
!8198 = !DILocation(line: 3727, column: 16, scope: !8195)
!8199 = !DILocation(line: 3727, column: 8, scope: !8195)
!8200 = distinct !{!8200, !8192, !8201}
!8201 = !DILocation(line: 3728, column: 2, scope: !8147)
!8202 = !DILocation(line: 3731, column: 9, scope: !8147)
!8203 = !DILocation(line: 3731, column: 7, scope: !8147)
!8204 = !DILocation(line: 3732, column: 2, scope: !8147)
!8205 = !DILocation(line: 3732, column: 8, scope: !8147)
!8206 = !DILocation(line: 3734, column: 16, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 3732, column: 14)
!8208 = !DILocation(line: 3734, column: 3, scope: !8207)
!8209 = !DILocation(line: 3736, column: 17, scope: !8207)
!8210 = !DILocation(line: 3736, column: 3, scope: !8207)
!8211 = !DILocation(line: 3737, column: 17, scope: !8207)
!8212 = !DILocation(line: 3737, column: 3, scope: !8207)
!8213 = !DILocation(line: 3738, column: 7, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8207, file: !3, line: 3738, column: 7)
!8215 = !DILocation(line: 3738, column: 13, scope: !8214)
!8216 = !DILocation(line: 3738, column: 22, scope: !8214)
!8217 = !DILocation(line: 3738, column: 7, scope: !8207)
!8218 = !DILocation(line: 3739, column: 22, scope: !8214)
!8219 = !DILocation(line: 3739, column: 4, scope: !8214)
!8220 = !DILocation(line: 3740, column: 9, scope: !8207)
!8221 = !DILocation(line: 3740, column: 7, scope: !8207)
!8222 = !DILocation(line: 3741, column: 10, scope: !8207)
!8223 = !DILocation(line: 3741, column: 16, scope: !8207)
!8224 = !DILocation(line: 3741, column: 8, scope: !8207)
!8225 = !DILocation(line: 3742, column: 21, scope: !8207)
!8226 = !DILocation(line: 3742, column: 26, scope: !8207)
!8227 = !DILocation(line: 3742, column: 3, scope: !8207)
!8228 = !DILocation(line: 3743, column: 9, scope: !8207)
!8229 = !DILocation(line: 3743, column: 3, scope: !8207)
!8230 = distinct !{!8230, !8204, !8231}
!8231 = !DILocation(line: 3744, column: 2, scope: !8147)
!8232 = !DILocation(line: 3746, column: 6, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 3746, column: 6)
!8234 = !DILocation(line: 3746, column: 6, scope: !8147)
!8235 = !DILocation(line: 3747, column: 3, scope: !8233)
!8236 = !DILocation(line: 3748, column: 1, scope: !8147)
!8237 = distinct !DISubprogram(name: "slgt_init", scope: !3, file: !3, line: 3753, type: !8238, scopeLine: 3754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!32}
!8240 = !DILocalVariable(name: "rc", scope: !8237, file: !3, line: 3755, type: !32)
!8241 = !DILocation(line: 3755, column: 6, scope: !8237)
!8242 = !DILocation(line: 3757, column: 27, scope: !8237)
!8243 = !DILocation(line: 3757, column: 2, scope: !8237)
!8244 = !DILocation(line: 3759, column: 18, scope: !8237)
!8245 = !DILocation(line: 3759, column: 16, scope: !8237)
!8246 = !DILocation(line: 3760, column: 7, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3760, column: 6)
!8248 = !DILocation(line: 3760, column: 6, scope: !8237)
!8249 = !DILocation(line: 3761, column: 44, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 3760, column: 22)
!8251 = !DILocation(line: 3761, column: 3, scope: !8250)
!8252 = !DILocation(line: 3762, column: 3, scope: !8250)
!8253 = !DILocation(line: 3767, column: 31, scope: !8237)
!8254 = !DILocation(line: 3767, column: 2, scope: !8237)
!8255 = !DILocation(line: 3767, column: 17, scope: !8237)
!8256 = !DILocation(line: 3767, column: 29, scope: !8237)
!8257 = !DILocation(line: 3768, column: 24, scope: !8237)
!8258 = !DILocation(line: 3768, column: 2, scope: !8237)
!8259 = !DILocation(line: 3768, column: 17, scope: !8237)
!8260 = !DILocation(line: 3768, column: 22, scope: !8237)
!8261 = !DILocation(line: 3769, column: 25, scope: !8237)
!8262 = !DILocation(line: 3769, column: 2, scope: !8237)
!8263 = !DILocation(line: 3769, column: 17, scope: !8237)
!8264 = !DILocation(line: 3769, column: 23, scope: !8237)
!8265 = !DILocation(line: 3770, column: 2, scope: !8237)
!8266 = !DILocation(line: 3770, column: 17, scope: !8237)
!8267 = !DILocation(line: 3770, column: 29, scope: !8237)
!8268 = !DILocation(line: 3771, column: 2, scope: !8237)
!8269 = !DILocation(line: 3771, column: 17, scope: !8237)
!8270 = !DILocation(line: 3771, column: 22, scope: !8237)
!8271 = !DILocation(line: 3772, column: 2, scope: !8237)
!8272 = !DILocation(line: 3772, column: 17, scope: !8237)
!8273 = !DILocation(line: 3772, column: 25, scope: !8237)
!8274 = !DILocation(line: 3773, column: 2, scope: !8237)
!8275 = !DILocation(line: 3773, column: 17, scope: !8237)
!8276 = !DILocation(line: 3773, column: 32, scope: !8237)
!8277 = !DILocation(line: 3774, column: 2, scope: !8237)
!8278 = !DILocation(line: 3774, column: 17, scope: !8237)
!8279 = !DILocation(line: 3774, column: 30, scope: !8237)
!8280 = !DILocation(line: 3774, column: 38, scope: !8237)
!8281 = !DILocation(line: 3776, column: 2, scope: !8237)
!8282 = !DILocation(line: 3776, column: 17, scope: !8237)
!8283 = !DILocation(line: 3776, column: 30, scope: !8237)
!8284 = !DILocation(line: 3776, column: 39, scope: !8237)
!8285 = !DILocation(line: 3777, column: 2, scope: !8237)
!8286 = !DILocation(line: 3777, column: 17, scope: !8237)
!8287 = !DILocation(line: 3777, column: 30, scope: !8237)
!8288 = !DILocation(line: 3777, column: 39, scope: !8237)
!8289 = !DILocation(line: 3778, column: 2, scope: !8237)
!8290 = !DILocation(line: 3778, column: 17, scope: !8237)
!8291 = !DILocation(line: 3778, column: 23, scope: !8237)
!8292 = !DILocation(line: 3779, column: 21, scope: !8237)
!8293 = !DILocation(line: 3779, column: 2, scope: !8237)
!8294 = !DILocation(line: 3780, column: 32, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3780, column: 6)
!8296 = !DILocation(line: 3780, column: 12, scope: !8295)
!8297 = !DILocation(line: 3780, column: 10, scope: !8295)
!8298 = !DILocation(line: 3780, column: 48, scope: !8295)
!8299 = !DILocation(line: 3780, column: 6, scope: !8237)
!8300 = !DILocation(line: 3781, column: 3, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3781, column: 3)
!8302 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 3780, column: 53)
!8303 = !DILocation(line: 3781, column: 3, scope: !8302)
!8304 = !DILocation(line: 3782, column: 18, scope: !8302)
!8305 = !DILocation(line: 3782, column: 3, scope: !8302)
!8306 = !DILocation(line: 3783, column: 17, scope: !8302)
!8307 = !DILocation(line: 3784, column: 3, scope: !8302)
!8308 = !DILocation(line: 3788, column: 9, scope: !8237)
!8309 = !DILocation(line: 3788, column: 22, scope: !8237)
!8310 = !DILocation(line: 3788, column: 37, scope: !8237)
!8311 = !DILocation(line: 3787, column: 2, scope: !8237)
!8312 = !DILocation(line: 3790, column: 20, scope: !8237)
!8313 = !DILocation(line: 3791, column: 12, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3791, column: 6)
!8315 = !DILocation(line: 3791, column: 10, scope: !8314)
!8316 = !DILocation(line: 3791, column: 46, scope: !8314)
!8317 = !DILocation(line: 3791, column: 6, scope: !8237)
!8318 = !DILocation(line: 3792, column: 47, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 3791, column: 51)
!8320 = !DILocation(line: 3792, column: 60, scope: !8319)
!8321 = !DILocation(line: 3792, column: 3, scope: !8319)
!8322 = !DILocation(line: 3793, column: 3, scope: !8319)
!8323 = !DILocation(line: 3795, column: 17, scope: !8237)
!8324 = !DILocation(line: 3797, column: 7, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 3797, column: 6)
!8326 = !DILocation(line: 3797, column: 6, scope: !8237)
!8327 = !DILocation(line: 3798, column: 34, scope: !8325)
!8328 = !DILocation(line: 3798, column: 3, scope: !8325)
!8329 = !DILocation(line: 3800, column: 2, scope: !8237)
!8330 = !DILabel(scope: !8237, name: "error", file: !3, line: 3802)
!8331 = !DILocation(line: 3802, column: 1, scope: !8237)
!8332 = !DILocation(line: 3803, column: 2, scope: !8237)
!8333 = !DILocation(line: 3804, column: 9, scope: !8237)
!8334 = !DILocation(line: 3804, column: 2, scope: !8237)
!8335 = !DILocation(line: 3805, column: 1, scope: !8237)
!8336 = distinct !DISubprogram(name: "reset_port", scope: !3, file: !3, line: 4069, type: !8337, scopeLine: 4070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !7530}
!8339 = !DILocalVariable(name: "info", arg: 1, scope: !8336, file: !3, line: 4069, type: !7530)
!8340 = !DILocation(line: 4069, column: 42, scope: !8336)
!8341 = !DILocation(line: 4071, column: 7, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 4071, column: 6)
!8343 = !DILocation(line: 4071, column: 13, scope: !8342)
!8344 = !DILocation(line: 4071, column: 6, scope: !8336)
!8345 = !DILocation(line: 4072, column: 3, scope: !8342)
!8346 = !DILocation(line: 4074, column: 10, scope: !8336)
!8347 = !DILocation(line: 4074, column: 2, scope: !8336)
!8348 = !DILocation(line: 4075, column: 10, scope: !8336)
!8349 = !DILocation(line: 4075, column: 2, scope: !8336)
!8350 = !DILocation(line: 4077, column: 2, scope: !8336)
!8351 = !DILocation(line: 4077, column: 8, scope: !8336)
!8352 = !DILocation(line: 4077, column: 16, scope: !8336)
!8353 = !DILocation(line: 4078, column: 14, scope: !8336)
!8354 = !DILocation(line: 4078, column: 2, scope: !8336)
!8355 = !DILocation(line: 4080, column: 2, scope: !8336)
!8356 = !DILocation(line: 4081, column: 1, scope: !8336)
!8357 = distinct !DISubprogram(name: "hdlcdev_exit", scope: !3, file: !3, line: 1805, type: !8337, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8358 = !DILocalVariable(name: "info", arg: 1, scope: !8357, file: !3, line: 1805, type: !7530)
!8359 = !DILocation(line: 1805, column: 44, scope: !8357)
!8360 = !DILocation(line: 1807, column: 25, scope: !8357)
!8361 = !DILocation(line: 1807, column: 31, scope: !8357)
!8362 = !DILocation(line: 1807, column: 2, scope: !8357)
!8363 = !DILocation(line: 1808, column: 14, scope: !8357)
!8364 = !DILocation(line: 1808, column: 20, scope: !8357)
!8365 = !DILocation(line: 1808, column: 2, scope: !8357)
!8366 = !DILocation(line: 1809, column: 2, scope: !8357)
!8367 = !DILocation(line: 1809, column: 8, scope: !8357)
!8368 = !DILocation(line: 1809, column: 15, scope: !8357)
!8369 = !DILocation(line: 1810, column: 1, scope: !8357)
!8370 = distinct !DISubprogram(name: "free_dma_bufs", scope: !3, file: !3, line: 3433, type: !8337, scopeLine: 3434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8371 = !DILocalVariable(name: "info", arg: 1, scope: !8370, file: !3, line: 3433, type: !7530)
!8372 = !DILocation(line: 3433, column: 45, scope: !8370)
!8373 = !DILocation(line: 3435, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 3435, column: 6)
!8375 = !DILocation(line: 3435, column: 12, scope: !8374)
!8376 = !DILocation(line: 3435, column: 6, scope: !8370)
!8377 = !DILocation(line: 3436, column: 13, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3435, column: 18)
!8379 = !DILocation(line: 3436, column: 19, scope: !8378)
!8380 = !DILocation(line: 3436, column: 25, scope: !8378)
!8381 = !DILocation(line: 3436, column: 32, scope: !8378)
!8382 = !DILocation(line: 3436, column: 38, scope: !8378)
!8383 = !DILocation(line: 3436, column: 3, scope: !8378)
!8384 = !DILocation(line: 3437, column: 13, scope: !8378)
!8385 = !DILocation(line: 3437, column: 19, scope: !8378)
!8386 = !DILocation(line: 3437, column: 25, scope: !8378)
!8387 = !DILocation(line: 3437, column: 32, scope: !8378)
!8388 = !DILocation(line: 3437, column: 38, scope: !8378)
!8389 = !DILocation(line: 3437, column: 3, scope: !8378)
!8390 = !DILocation(line: 3438, column: 13, scope: !8378)
!8391 = !DILocation(line: 3438, column: 3, scope: !8378)
!8392 = !DILocation(line: 3439, column: 2, scope: !8378)
!8393 = !DILocation(line: 3440, column: 16, scope: !8370)
!8394 = !DILocation(line: 3440, column: 2, scope: !8370)
!8395 = !DILocation(line: 3441, column: 1, scope: !8370)
!8396 = distinct !DISubprogram(name: "free_tmp_rbuf", scope: !3, file: !3, line: 3324, type: !8337, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8397 = !DILocalVariable(name: "info", arg: 1, scope: !8396, file: !3, line: 3324, type: !7530)
!8398 = !DILocation(line: 3324, column: 45, scope: !8396)
!8399 = !DILocation(line: 3326, column: 8, scope: !8396)
!8400 = !DILocation(line: 3326, column: 14, scope: !8396)
!8401 = !DILocation(line: 3326, column: 2, scope: !8396)
!8402 = !DILocation(line: 3327, column: 2, scope: !8396)
!8403 = !DILocation(line: 3327, column: 8, scope: !8396)
!8404 = !DILocation(line: 3327, column: 17, scope: !8396)
!8405 = !DILocation(line: 3328, column: 8, scope: !8396)
!8406 = !DILocation(line: 3328, column: 14, scope: !8396)
!8407 = !DILocation(line: 3328, column: 2, scope: !8396)
!8408 = !DILocation(line: 3329, column: 2, scope: !8396)
!8409 = !DILocation(line: 3329, column: 8, scope: !8396)
!8410 = !DILocation(line: 3329, column: 17, scope: !8396)
!8411 = !DILocation(line: 3330, column: 1, scope: !8396)
!8412 = distinct !DISubprogram(name: "release_resources", scope: !3, file: !3, line: 3468, type: !8337, scopeLine: 3469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8413 = !DILocalVariable(name: "info", arg: 1, scope: !8412, file: !3, line: 3468, type: !7530)
!8414 = !DILocation(line: 3468, column: 49, scope: !8412)
!8415 = !DILocation(line: 3470, column: 6, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 3470, column: 6)
!8417 = !DILocation(line: 3470, column: 12, scope: !8416)
!8418 = !DILocation(line: 3470, column: 6, scope: !8412)
!8419 = !DILocation(line: 3471, column: 12, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 3470, column: 27)
!8421 = !DILocation(line: 3471, column: 18, scope: !8420)
!8422 = !DILocation(line: 3471, column: 29, scope: !8420)
!8423 = !DILocation(line: 3471, column: 3, scope: !8420)
!8424 = !DILocation(line: 3472, column: 3, scope: !8420)
!8425 = !DILocation(line: 3472, column: 9, scope: !8420)
!8426 = !DILocation(line: 3472, column: 23, scope: !8420)
!8427 = !DILocation(line: 3473, column: 2, scope: !8420)
!8428 = !DILocation(line: 3475, column: 6, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 3475, column: 6)
!8430 = !DILocation(line: 3475, column: 12, scope: !8429)
!8431 = !DILocation(line: 3475, column: 6, scope: !8412)
!8432 = !DILocation(line: 3476, column: 3, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3475, column: 32)
!8434 = !DILocation(line: 3477, column: 3, scope: !8433)
!8435 = !DILocation(line: 3477, column: 9, scope: !8433)
!8436 = !DILocation(line: 3477, column: 28, scope: !8433)
!8437 = !DILocation(line: 3478, column: 2, scope: !8433)
!8438 = !DILocation(line: 3480, column: 6, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 3480, column: 6)
!8440 = !DILocation(line: 3480, column: 12, scope: !8439)
!8441 = !DILocation(line: 3480, column: 6, scope: !8412)
!8442 = !DILocation(line: 3481, column: 11, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 3480, column: 22)
!8444 = !DILocation(line: 3481, column: 17, scope: !8443)
!8445 = !DILocation(line: 3481, column: 3, scope: !8443)
!8446 = !DILocation(line: 3482, column: 3, scope: !8443)
!8447 = !DILocation(line: 3482, column: 9, scope: !8443)
!8448 = !DILocation(line: 3482, column: 18, scope: !8443)
!8449 = !DILocation(line: 3483, column: 2, scope: !8443)
!8450 = !DILocation(line: 3484, column: 1, scope: !8412)
!8451 = distinct !DISubprogram(name: "tx_stop", scope: !3, file: !3, line: 4046, type: !8337, scopeLine: 4047, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8452 = !DILocalVariable(name: "info", arg: 1, scope: !8451, file: !3, line: 4046, type: !7530)
!8453 = !DILocation(line: 4046, column: 39, scope: !8451)
!8454 = !DILocalVariable(name: "val", scope: !8451, file: !3, line: 4048, type: !476)
!8455 = !DILocation(line: 4048, column: 17, scope: !8451)
!8456 = !DILocation(line: 4050, column: 13, scope: !8451)
!8457 = !DILocation(line: 4050, column: 19, scope: !8451)
!8458 = !DILocation(line: 4050, column: 2, scope: !8451)
!8459 = !DILocation(line: 4052, column: 13, scope: !8451)
!8460 = !DILocation(line: 4052, column: 2, scope: !8451)
!8461 = !DILocation(line: 4055, column: 17, scope: !8451)
!8462 = !DILocation(line: 4055, column: 8, scope: !8451)
!8463 = !DILocation(line: 4055, column: 28, scope: !8451)
!8464 = !DILocation(line: 4055, column: 6, scope: !8451)
!8465 = !DILocation(line: 4056, column: 11, scope: !8451)
!8466 = !DILocation(line: 4056, column: 39, scope: !8451)
!8467 = !DILocation(line: 4056, column: 43, scope: !8451)
!8468 = !DILocation(line: 4056, column: 22, scope: !8451)
!8469 = !DILocation(line: 4056, column: 2, scope: !8451)
!8470 = !DILocation(line: 4058, column: 2, scope: !8451)
!8471 = !DILocation(line: 4061, column: 11, scope: !8451)
!8472 = !DILocation(line: 4061, column: 2, scope: !8451)
!8473 = !DILocation(line: 4063, column: 14, scope: !8451)
!8474 = !DILocation(line: 4063, column: 2, scope: !8451)
!8475 = !DILocation(line: 4065, column: 2, scope: !8451)
!8476 = !DILocation(line: 4065, column: 8, scope: !8451)
!8477 = !DILocation(line: 4065, column: 19, scope: !8451)
!8478 = !DILocation(line: 4066, column: 2, scope: !8451)
!8479 = !DILocation(line: 4066, column: 8, scope: !8451)
!8480 = !DILocation(line: 4066, column: 18, scope: !8451)
!8481 = !DILocation(line: 4067, column: 1, scope: !8451)
!8482 = distinct !DISubprogram(name: "rx_stop", scope: !3, file: !3, line: 3939, type: !8337, scopeLine: 3940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8483 = !DILocalVariable(name: "info", arg: 1, scope: !8482, file: !3, line: 3939, type: !7530)
!8484 = !DILocation(line: 3939, column: 39, scope: !8482)
!8485 = !DILocalVariable(name: "val", scope: !8482, file: !3, line: 3941, type: !476)
!8486 = !DILocation(line: 3941, column: 17, scope: !8482)
!8487 = !DILocation(line: 3944, column: 17, scope: !8482)
!8488 = !DILocation(line: 3944, column: 8, scope: !8482)
!8489 = !DILocation(line: 3944, column: 28, scope: !8482)
!8490 = !DILocation(line: 3944, column: 6, scope: !8482)
!8491 = !DILocation(line: 3945, column: 11, scope: !8482)
!8492 = !DILocation(line: 3945, column: 39, scope: !8482)
!8493 = !DILocation(line: 3945, column: 43, scope: !8482)
!8494 = !DILocation(line: 3945, column: 22, scope: !8482)
!8495 = !DILocation(line: 3945, column: 2, scope: !8482)
!8496 = !DILocation(line: 3946, column: 11, scope: !8482)
!8497 = !DILocation(line: 3946, column: 22, scope: !8482)
!8498 = !DILocation(line: 3946, column: 2, scope: !8482)
!8499 = !DILocation(line: 3948, column: 2, scope: !8482)
!8500 = !DILocation(line: 3951, column: 11, scope: !8482)
!8501 = !DILocation(line: 3951, column: 2, scope: !8482)
!8502 = !DILocation(line: 3953, column: 13, scope: !8482)
!8503 = !DILocation(line: 3953, column: 2, scope: !8482)
!8504 = !DILocation(line: 3955, column: 2, scope: !8482)
!8505 = !DILocation(line: 3955, column: 8, scope: !8482)
!8506 = !DILocation(line: 3955, column: 19, scope: !8482)
!8507 = !DILocation(line: 3956, column: 2, scope: !8482)
!8508 = !DILocation(line: 3956, column: 8, scope: !8482)
!8509 = !DILocation(line: 3956, column: 19, scope: !8482)
!8510 = !DILocation(line: 3957, column: 1, scope: !8482)
!8511 = distinct !DISubprogram(name: "set_signals", scope: !3, file: !3, line: 4562, type: !8337, scopeLine: 4563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8512 = !DILocalVariable(name: "info", arg: 1, scope: !8511, file: !3, line: 4562, type: !7530)
!8513 = !DILocation(line: 4562, column: 43, scope: !8511)
!8514 = !DILocalVariable(name: "val", scope: !8511, file: !3, line: 4564, type: !482)
!8515 = !DILocation(line: 4564, column: 16, scope: !8511)
!8516 = !DILocation(line: 4564, column: 30, scope: !8511)
!8517 = !DILocation(line: 4564, column: 22, scope: !8511)
!8518 = !DILocation(line: 4565, column: 6, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 4565, column: 6)
!8520 = !DILocation(line: 4565, column: 12, scope: !8519)
!8521 = !DILocation(line: 4565, column: 20, scope: !8519)
!8522 = !DILocation(line: 4565, column: 6, scope: !8511)
!8523 = !DILocation(line: 4566, column: 7, scope: !8519)
!8524 = !DILocation(line: 4566, column: 3, scope: !8519)
!8525 = !DILocation(line: 4568, column: 7, scope: !8519)
!8526 = !DILocation(line: 4569, column: 6, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 4569, column: 6)
!8528 = !DILocation(line: 4569, column: 12, scope: !8527)
!8529 = !DILocation(line: 4569, column: 20, scope: !8527)
!8530 = !DILocation(line: 4569, column: 6, scope: !8511)
!8531 = !DILocation(line: 4570, column: 7, scope: !8527)
!8532 = !DILocation(line: 4570, column: 3, scope: !8527)
!8533 = !DILocation(line: 4572, column: 7, scope: !8527)
!8534 = !DILocation(line: 4573, column: 10, scope: !8511)
!8535 = !DILocation(line: 4573, column: 21, scope: !8511)
!8536 = !DILocation(line: 4573, column: 2, scope: !8511)
!8537 = !DILocation(line: 4574, column: 1, scope: !8511)
!8538 = distinct !DISubprogram(name: "wr_reg16", scope: !3, file: !3, line: 3844, type: !8539, scopeLine: 3845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{null, !7530, !7, !475}
!8541 = !DILocalVariable(name: "info", arg: 1, scope: !8538, file: !3, line: 3844, type: !7530)
!8542 = !DILocation(line: 3844, column: 40, scope: !8538)
!8543 = !DILocalVariable(name: "addr", arg: 2, scope: !8538, file: !3, line: 3844, type: !7)
!8544 = !DILocation(line: 3844, column: 59, scope: !8538)
!8545 = !DILocalVariable(name: "value", arg: 3, scope: !8538, file: !3, line: 3844, type: !475)
!8546 = !DILocation(line: 3844, column: 71, scope: !8538)
!8547 = !DILocalVariable(name: "reg_addr", scope: !8538, file: !3, line: 3846, type: !312)
!8548 = !DILocation(line: 3846, column: 2, scope: !8538)
!8549 = !DILocation(line: 3846, column: 2, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 3846, column: 2)
!8551 = !DILocation(line: 3846, column: 2, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 3846, column: 2)
!8553 = !DILocation(line: 3847, column: 9, scope: !8538)
!8554 = !DILocation(line: 3847, column: 32, scope: !8538)
!8555 = !DILocation(line: 3847, column: 16, scope: !8538)
!8556 = !DILocation(line: 3847, column: 2, scope: !8538)
!8557 = !DILocation(line: 3848, column: 1, scope: !8538)
!8558 = distinct !DISubprogram(name: "rd_reg16", scope: !3, file: !3, line: 3838, type: !8559, scopeLine: 3839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8559 = !DISubroutineType(types: !8560)
!8560 = !{!475, !7530, !7}
!8561 = !DILocalVariable(name: "info", arg: 1, scope: !8558, file: !3, line: 3838, type: !7530)
!8562 = !DILocation(line: 3838, column: 41, scope: !8558)
!8563 = !DILocalVariable(name: "addr", arg: 2, scope: !8558, file: !3, line: 3838, type: !7)
!8564 = !DILocation(line: 3838, column: 60, scope: !8558)
!8565 = !DILocalVariable(name: "reg_addr", scope: !8558, file: !3, line: 3840, type: !312)
!8566 = !DILocation(line: 3840, column: 2, scope: !8558)
!8567 = !DILocation(line: 3840, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 3840, column: 2)
!8569 = !DILocation(line: 3840, column: 2, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8568, file: !3, line: 3840, column: 2)
!8571 = !DILocation(line: 3841, column: 31, scope: !8558)
!8572 = !DILocation(line: 3841, column: 15, scope: !8558)
!8573 = !DILocation(line: 3841, column: 9, scope: !8558)
!8574 = !DILocation(line: 3841, column: 2, scope: !8558)
!8575 = distinct !DISubprogram(name: "tdma_reset", scope: !3, file: !3, line: 3875, type: !8337, scopeLine: 3876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8576 = !DILocalVariable(name: "info", arg: 1, scope: !8575, file: !3, line: 3875, type: !7530)
!8577 = !DILocation(line: 3875, column: 42, scope: !8575)
!8578 = !DILocalVariable(name: "i", scope: !8575, file: !3, line: 3877, type: !7)
!8579 = !DILocation(line: 3877, column: 15, scope: !8575)
!8580 = !DILocation(line: 3880, column: 11, scope: !8575)
!8581 = !DILocation(line: 3880, column: 2, scope: !8575)
!8582 = !DILocation(line: 3883, column: 7, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 3883, column: 2)
!8584 = !DILocation(line: 3883, column: 6, scope: !8583)
!8585 = !DILocation(line: 3883, column: 12, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 3883, column: 2)
!8587 = !DILocation(line: 3883, column: 14, scope: !8586)
!8588 = !DILocation(line: 3883, column: 2, scope: !8583)
!8589 = !DILocation(line: 3884, column: 18, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 3884, column: 7)
!8591 = !DILocation(line: 3884, column: 9, scope: !8590)
!8592 = !DILocation(line: 3884, column: 31, scope: !8590)
!8593 = !DILocation(line: 3884, column: 7, scope: !8586)
!8594 = !DILocation(line: 3885, column: 4, scope: !8590)
!8595 = !DILocation(line: 3884, column: 37, scope: !8590)
!8596 = !DILocation(line: 3883, column: 24, scope: !8586)
!8597 = !DILocation(line: 3883, column: 2, scope: !8586)
!8598 = distinct !{!8598, !8588, !8599}
!8599 = !DILocation(line: 3885, column: 4, scope: !8583)
!8600 = !DILocation(line: 3886, column: 1, scope: !8575)
!8601 = distinct !DISubprogram(name: "reset_tbufs", scope: !3, file: !3, line: 4773, type: !8337, scopeLine: 4774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8602 = !DILocalVariable(name: "info", arg: 1, scope: !8601, file: !3, line: 4773, type: !7530)
!8603 = !DILocation(line: 4773, column: 43, scope: !8601)
!8604 = !DILocalVariable(name: "i", scope: !8601, file: !3, line: 4775, type: !7)
!8605 = !DILocation(line: 4775, column: 15, scope: !8601)
!8606 = !DILocation(line: 4776, column: 2, scope: !8601)
!8607 = !DILocation(line: 4776, column: 8, scope: !8601)
!8608 = !DILocation(line: 4776, column: 21, scope: !8601)
!8609 = !DILocation(line: 4777, column: 8, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8601, file: !3, line: 4777, column: 2)
!8611 = !DILocation(line: 4777, column: 7, scope: !8610)
!8612 = !DILocation(line: 4777, column: 13, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 4777, column: 2)
!8614 = !DILocation(line: 4777, column: 17, scope: !8613)
!8615 = !DILocation(line: 4777, column: 23, scope: !8613)
!8616 = !DILocation(line: 4777, column: 15, scope: !8613)
!8617 = !DILocation(line: 4777, column: 2, scope: !8610)
!8618 = !DILocation(line: 4778, column: 3, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8613, file: !3, line: 4777, column: 41)
!8620 = !DILocation(line: 4778, column: 9, scope: !8619)
!8621 = !DILocation(line: 4778, column: 15, scope: !8619)
!8622 = !DILocation(line: 4778, column: 18, scope: !8619)
!8623 = !DILocation(line: 4778, column: 25, scope: !8619)
!8624 = !DILocation(line: 4779, column: 3, scope: !8619)
!8625 = !DILocation(line: 4779, column: 9, scope: !8619)
!8626 = !DILocation(line: 4779, column: 15, scope: !8619)
!8627 = !DILocation(line: 4779, column: 18, scope: !8619)
!8628 = !DILocation(line: 4779, column: 25, scope: !8619)
!8629 = !DILocation(line: 4780, column: 2, scope: !8619)
!8630 = !DILocation(line: 4777, column: 37, scope: !8613)
!8631 = !DILocation(line: 4777, column: 2, scope: !8613)
!8632 = distinct !{!8632, !8617, !8633}
!8633 = !DILocation(line: 4780, column: 2, scope: !8610)
!8634 = !DILocation(line: 4781, column: 1, scope: !8601)
!8635 = distinct !DISubprogram(name: "wr_reg32", scope: !3, file: !3, line: 3856, type: !8636, scopeLine: 3857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{null, !7530, !7, !493}
!8638 = !DILocalVariable(name: "info", arg: 1, scope: !8635, file: !3, line: 3856, type: !7530)
!8639 = !DILocation(line: 3856, column: 40, scope: !8635)
!8640 = !DILocalVariable(name: "addr", arg: 2, scope: !8635, file: !3, line: 3856, type: !7)
!8641 = !DILocation(line: 3856, column: 59, scope: !8635)
!8642 = !DILocalVariable(name: "value", arg: 3, scope: !8635, file: !3, line: 3856, type: !493)
!8643 = !DILocation(line: 3856, column: 71, scope: !8635)
!8644 = !DILocalVariable(name: "reg_addr", scope: !8635, file: !3, line: 3858, type: !312)
!8645 = !DILocation(line: 3858, column: 2, scope: !8635)
!8646 = !DILocation(line: 3858, column: 2, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 3858, column: 2)
!8648 = !DILocation(line: 3858, column: 2, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8647, file: !3, line: 3858, column: 2)
!8650 = !DILocation(line: 3859, column: 9, scope: !8635)
!8651 = !DILocation(line: 3859, column: 32, scope: !8635)
!8652 = !DILocation(line: 3859, column: 16, scope: !8635)
!8653 = !DILocation(line: 3859, column: 2, scope: !8635)
!8654 = !DILocation(line: 3860, column: 1, scope: !8635)
!8655 = distinct !DISubprogram(name: "rd_reg32", scope: !3, file: !3, line: 3850, type: !8656, scopeLine: 3851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8656 = !DISubroutineType(types: !8657)
!8657 = !{!493, !7530, !7}
!8658 = !DILocalVariable(name: "info", arg: 1, scope: !8655, file: !3, line: 3850, type: !7530)
!8659 = !DILocation(line: 3850, column: 41, scope: !8655)
!8660 = !DILocalVariable(name: "addr", arg: 2, scope: !8655, file: !3, line: 3850, type: !7)
!8661 = !DILocation(line: 3850, column: 60, scope: !8655)
!8662 = !DILocalVariable(name: "reg_addr", scope: !8655, file: !3, line: 3852, type: !312)
!8663 = !DILocation(line: 3852, column: 2, scope: !8655)
!8664 = !DILocation(line: 3852, column: 2, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 3852, column: 2)
!8666 = !DILocation(line: 3852, column: 2, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 3852, column: 2)
!8668 = !DILocation(line: 3853, column: 31, scope: !8655)
!8669 = !DILocation(line: 3853, column: 15, scope: !8655)
!8670 = !DILocation(line: 3853, column: 9, scope: !8655)
!8671 = !DILocation(line: 3853, column: 2, scope: !8655)
!8672 = distinct !DISubprogram(name: "writel", scope: !8673, file: !8673, line: 67, type: !8674, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8673 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8674 = !DISubroutineType(types: !8675)
!8675 = !{null, !7, !8676}
!8676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8677, size: 64)
!8677 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8678 = !DILocalVariable(name: "val", arg: 1, scope: !8672, file: !8673, line: 67, type: !7)
!8679 = !DILocation(line: 67, column: 1, scope: !8672)
!8680 = !DILocalVariable(name: "addr", arg: 2, scope: !8672, file: !8673, line: 67, type: !8676)
!8681 = !{i32 -2143277221}
!8682 = distinct !DISubprogram(name: "readl", scope: !8673, file: !8673, line: 59, type: !8683, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{!7, !8685}
!8685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8686, size: 64)
!8686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8677)
!8687 = !DILocalVariable(name: "addr", arg: 1, scope: !8682, file: !8673, line: 59, type: !8685)
!8688 = !DILocation(line: 59, column: 1, scope: !8682)
!8689 = !DILocalVariable(name: "ret", scope: !8682, file: !8673, line: 59, type: !7)
!8690 = !{i32 -2143279614}
!8691 = distinct !DISubprogram(name: "rdma_reset", scope: !3, file: !3, line: 3862, type: !8337, scopeLine: 3863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8692 = !DILocalVariable(name: "info", arg: 1, scope: !8691, file: !3, line: 3862, type: !7530)
!8693 = !DILocation(line: 3862, column: 42, scope: !8691)
!8694 = !DILocalVariable(name: "i", scope: !8691, file: !3, line: 3864, type: !7)
!8695 = !DILocation(line: 3864, column: 15, scope: !8691)
!8696 = !DILocation(line: 3867, column: 11, scope: !8691)
!8697 = !DILocation(line: 3867, column: 2, scope: !8691)
!8698 = !DILocation(line: 3870, column: 7, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 3870, column: 2)
!8700 = !DILocation(line: 3870, column: 6, scope: !8699)
!8701 = !DILocation(line: 3870, column: 12, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 3870, column: 2)
!8703 = !DILocation(line: 3870, column: 14, scope: !8702)
!8704 = !DILocation(line: 3870, column: 2, scope: !8699)
!8705 = !DILocation(line: 3871, column: 18, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 3871, column: 7)
!8707 = !DILocation(line: 3871, column: 9, scope: !8706)
!8708 = !DILocation(line: 3871, column: 31, scope: !8706)
!8709 = !DILocation(line: 3871, column: 7, scope: !8702)
!8710 = !DILocation(line: 3872, column: 4, scope: !8706)
!8711 = !DILocation(line: 3871, column: 37, scope: !8706)
!8712 = !DILocation(line: 3870, column: 24, scope: !8702)
!8713 = !DILocation(line: 3870, column: 2, scope: !8702)
!8714 = distinct !{!8714, !8704, !8715}
!8715 = !DILocation(line: 3872, column: 4, scope: !8699)
!8716 = !DILocation(line: 3873, column: 1, scope: !8691)
!8717 = distinct !DISubprogram(name: "rd_reg8", scope: !3, file: !3, line: 3826, type: !8718, scopeLine: 3827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8718 = !DISubroutineType(types: !8719)
!8719 = !{!481, !7530, !7}
!8720 = !DILocalVariable(name: "info", arg: 1, scope: !8717, file: !3, line: 3826, type: !7530)
!8721 = !DILocation(line: 3826, column: 39, scope: !8717)
!8722 = !DILocalVariable(name: "addr", arg: 2, scope: !8717, file: !3, line: 3826, type: !7)
!8723 = !DILocation(line: 3826, column: 58, scope: !8717)
!8724 = !DILocalVariable(name: "reg_addr", scope: !8717, file: !3, line: 3828, type: !312)
!8725 = !DILocation(line: 3828, column: 2, scope: !8717)
!8726 = !DILocation(line: 3828, column: 2, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 3828, column: 2)
!8728 = !DILocation(line: 3828, column: 2, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 3828, column: 2)
!8730 = !DILocation(line: 3829, column: 31, scope: !8717)
!8731 = !DILocation(line: 3829, column: 15, scope: !8717)
!8732 = !DILocation(line: 3829, column: 9, scope: !8717)
!8733 = !DILocation(line: 3829, column: 2, scope: !8717)
!8734 = distinct !DISubprogram(name: "wr_reg8", scope: !3, file: !3, line: 3832, type: !8735, scopeLine: 3833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{null, !7530, !7, !481}
!8737 = !DILocalVariable(name: "info", arg: 1, scope: !8734, file: !3, line: 3832, type: !7530)
!8738 = !DILocation(line: 3832, column: 39, scope: !8734)
!8739 = !DILocalVariable(name: "addr", arg: 2, scope: !8734, file: !3, line: 3832, type: !7)
!8740 = !DILocation(line: 3832, column: 58, scope: !8734)
!8741 = !DILocalVariable(name: "value", arg: 3, scope: !8734, file: !3, line: 3832, type: !481)
!8742 = !DILocation(line: 3832, column: 69, scope: !8734)
!8743 = !DILocalVariable(name: "reg_addr", scope: !8734, file: !3, line: 3834, type: !312)
!8744 = !DILocation(line: 3834, column: 2, scope: !8734)
!8745 = !DILocation(line: 3834, column: 2, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 3834, column: 2)
!8747 = !DILocation(line: 3834, column: 2, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 3834, column: 2)
!8749 = !DILocation(line: 3835, column: 9, scope: !8734)
!8750 = !DILocation(line: 3835, column: 32, scope: !8734)
!8751 = !DILocation(line: 3835, column: 16, scope: !8734)
!8752 = !DILocation(line: 3835, column: 2, scope: !8734)
!8753 = !DILocation(line: 3836, column: 1, scope: !8734)
!8754 = distinct !DISubprogram(name: "readb", scope: !8673, file: !8673, line: 57, type: !8755, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8755 = !DISubroutineType(types: !8756)
!8756 = !{!482, !8685}
!8757 = !DILocalVariable(name: "addr", arg: 1, scope: !8754, file: !8673, line: 57, type: !8685)
!8758 = !DILocation(line: 57, column: 1, scope: !8754)
!8759 = !DILocalVariable(name: "ret", scope: !8754, file: !8673, line: 57, type: !482)
!8760 = !{i32 -2143280445}
!8761 = distinct !DISubprogram(name: "writeb", scope: !8673, file: !8673, line: 65, type: !8762, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8762 = !DISubroutineType(types: !8763)
!8763 = !{null, !482, !8676}
!8764 = !DILocalVariable(name: "val", arg: 1, scope: !8761, file: !8673, line: 65, type: !482)
!8765 = !DILocation(line: 65, column: 1, scope: !8761)
!8766 = !DILocalVariable(name: "addr", arg: 2, scope: !8761, file: !8673, line: 65, type: !8676)
!8767 = !{i32 -2143277991}
!8768 = distinct !DISubprogram(name: "writew", scope: !8673, file: !8673, line: 66, type: !8769, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{null, !476, !8676}
!8771 = !DILocalVariable(name: "val", arg: 1, scope: !8768, file: !8673, line: 66, type: !476)
!8772 = !DILocation(line: 66, column: 1, scope: !8768)
!8773 = !DILocalVariable(name: "addr", arg: 2, scope: !8768, file: !8673, line: 66, type: !8676)
!8774 = !{i32 -2143277607}
!8775 = distinct !DISubprogram(name: "readw", scope: !8673, file: !8673, line: 58, type: !8776, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8776 = !DISubroutineType(types: !8777)
!8777 = !{!476, !8685}
!8778 = !DILocalVariable(name: "addr", arg: 1, scope: !8775, file: !8673, line: 58, type: !8685)
!8779 = !DILocation(line: 58, column: 1, scope: !8775)
!8780 = !DILocalVariable(name: "ret", scope: !8775, file: !8673, line: 58, type: !476)
!8781 = !{i32 -2143280031}
!8782 = distinct !DISubprogram(name: "free_bufs", scope: !3, file: !3, line: 3405, type: !8783, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{null, !7530, !7944, !32}
!8785 = !DILocalVariable(name: "info", arg: 1, scope: !8782, file: !3, line: 3405, type: !7530)
!8786 = !DILocation(line: 3405, column: 41, scope: !8782)
!8787 = !DILocalVariable(name: "bufs", arg: 2, scope: !8782, file: !3, line: 3405, type: !7944)
!8788 = !DILocation(line: 3405, column: 65, scope: !8782)
!8789 = !DILocalVariable(name: "count", arg: 3, scope: !8782, file: !3, line: 3405, type: !32)
!8790 = !DILocation(line: 3405, column: 75, scope: !8782)
!8791 = !DILocalVariable(name: "i", scope: !8782, file: !3, line: 3407, type: !32)
!8792 = !DILocation(line: 3407, column: 6, scope: !8782)
!8793 = !DILocation(line: 3408, column: 8, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 3408, column: 2)
!8795 = !DILocation(line: 3408, column: 7, scope: !8794)
!8796 = !DILocation(line: 3408, column: 12, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8794, file: !3, line: 3408, column: 2)
!8798 = !DILocation(line: 3408, column: 16, scope: !8797)
!8799 = !DILocation(line: 3408, column: 14, scope: !8797)
!8800 = !DILocation(line: 3408, column: 2, scope: !8794)
!8801 = !DILocation(line: 3409, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 3409, column: 7)
!8803 = distinct !DILexicalBlock(scope: !8797, file: !3, line: 3408, column: 28)
!8804 = !DILocation(line: 3409, column: 12, scope: !8802)
!8805 = !DILocation(line: 3409, column: 15, scope: !8802)
!8806 = !DILocation(line: 3409, column: 19, scope: !8802)
!8807 = !DILocation(line: 3409, column: 7, scope: !8803)
!8808 = !DILocation(line: 3410, column: 4, scope: !8802)
!8809 = !DILocation(line: 3411, column: 22, scope: !8803)
!8810 = !DILocation(line: 3411, column: 28, scope: !8803)
!8811 = !DILocation(line: 3411, column: 34, scope: !8803)
!8812 = !DILocation(line: 3411, column: 51, scope: !8803)
!8813 = !DILocation(line: 3411, column: 56, scope: !8803)
!8814 = !DILocation(line: 3411, column: 59, scope: !8803)
!8815 = !DILocation(line: 3412, column: 7, scope: !8803)
!8816 = !DILocation(line: 3412, column: 12, scope: !8803)
!8817 = !DILocation(line: 3412, column: 15, scope: !8803)
!8818 = !DILocation(line: 3411, column: 3, scope: !8803)
!8819 = !DILocation(line: 3413, column: 3, scope: !8803)
!8820 = !DILocation(line: 3413, column: 8, scope: !8803)
!8821 = !DILocation(line: 3413, column: 11, scope: !8803)
!8822 = !DILocation(line: 3413, column: 15, scope: !8803)
!8823 = !DILocation(line: 3414, column: 2, scope: !8803)
!8824 = !DILocation(line: 3408, column: 24, scope: !8797)
!8825 = !DILocation(line: 3408, column: 2, scope: !8797)
!8826 = distinct !{!8826, !8800, !8827}
!8827 = !DILocation(line: 3414, column: 2, scope: !8794)
!8828 = !DILocation(line: 3415, column: 1, scope: !8782)
!8829 = distinct !DISubprogram(name: "free_desc", scope: !3, file: !3, line: 3381, type: !8337, scopeLine: 3382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8830 = !DILocalVariable(name: "info", arg: 1, scope: !8829, file: !3, line: 3381, type: !7530)
!8831 = !DILocation(line: 3381, column: 41, scope: !8829)
!8832 = !DILocation(line: 3383, column: 6, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8829, file: !3, line: 3383, column: 6)
!8834 = !DILocation(line: 3383, column: 12, scope: !8833)
!8835 = !DILocation(line: 3383, column: 17, scope: !8833)
!8836 = !DILocation(line: 3383, column: 6, scope: !8829)
!8837 = !DILocation(line: 3384, column: 22, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 3383, column: 26)
!8839 = !DILocation(line: 3384, column: 28, scope: !8838)
!8840 = !DILocation(line: 3384, column: 34, scope: !8838)
!8841 = !DILocation(line: 3385, column: 7, scope: !8838)
!8842 = !DILocation(line: 3385, column: 13, scope: !8838)
!8843 = !DILocation(line: 3385, column: 19, scope: !8838)
!8844 = !DILocation(line: 3385, column: 25, scope: !8838)
!8845 = !DILocation(line: 3384, column: 3, scope: !8838)
!8846 = !DILocation(line: 3386, column: 3, scope: !8838)
!8847 = !DILocation(line: 3386, column: 9, scope: !8838)
!8848 = !DILocation(line: 3386, column: 15, scope: !8838)
!8849 = !DILocation(line: 3387, column: 3, scope: !8838)
!8850 = !DILocation(line: 3387, column: 9, scope: !8838)
!8851 = !DILocation(line: 3387, column: 15, scope: !8838)
!8852 = !DILocation(line: 3388, column: 3, scope: !8838)
!8853 = !DILocation(line: 3388, column: 9, scope: !8838)
!8854 = !DILocation(line: 3388, column: 15, scope: !8838)
!8855 = !DILocation(line: 3389, column: 2, scope: !8838)
!8856 = !DILocation(line: 3390, column: 1, scope: !8829)
!8857 = distinct !DISubprogram(name: "dma_free_coherent", scope: !8858, file: !8858, line: 400, type: !8859, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8858 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!8859 = !DISubroutineType(types: !8860)
!8860 = !{null, !3767, !1039, !591, !2036}
!8861 = !DILocalVariable(name: "dev", arg: 1, scope: !8857, file: !8858, line: 400, type: !3767)
!8862 = !DILocation(line: 400, column: 53, scope: !8857)
!8863 = !DILocalVariable(name: "size", arg: 2, scope: !8857, file: !8858, line: 400, type: !1039)
!8864 = !DILocation(line: 400, column: 65, scope: !8857)
!8865 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !8857, file: !8858, line: 401, type: !591)
!8866 = !DILocation(line: 401, column: 9, scope: !8857)
!8867 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !8857, file: !8858, line: 401, type: !2036)
!8868 = !DILocation(line: 401, column: 30, scope: !8857)
!8869 = !DILocation(line: 403, column: 24, scope: !8857)
!8870 = !DILocation(line: 403, column: 29, scope: !8857)
!8871 = !DILocation(line: 403, column: 35, scope: !8857)
!8872 = !DILocation(line: 403, column: 45, scope: !8857)
!8873 = !DILocation(line: 403, column: 9, scope: !8857)
!8874 = !DILocation(line: 403, column: 2, scope: !8857)
!8875 = distinct !DISubprogram(name: "init_one", scope: !3, file: !3, line: 3664, type: !7666, scopeLine: 3666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8876 = !DILocalVariable(name: "dev", arg: 1, scope: !8875, file: !3, line: 3664, type: !7542)
!8877 = !DILocation(line: 3664, column: 37, scope: !8875)
!8878 = !DILocalVariable(name: "ent", arg: 2, scope: !8875, file: !3, line: 3665, type: !7653)
!8879 = !DILocation(line: 3665, column: 38, scope: !8875)
!8880 = !DILocation(line: 3667, column: 24, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 3667, column: 6)
!8882 = !DILocation(line: 3667, column: 6, scope: !8881)
!8883 = !DILocation(line: 3667, column: 6, scope: !8875)
!8884 = !DILocation(line: 3668, column: 44, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8881, file: !3, line: 3667, column: 30)
!8886 = !DILocation(line: 3668, column: 3, scope: !8885)
!8887 = !DILocation(line: 3669, column: 3, scope: !8885)
!8888 = !DILocation(line: 3671, column: 17, scope: !8875)
!8889 = !DILocation(line: 3671, column: 2, scope: !8875)
!8890 = !DILocation(line: 3672, column: 14, scope: !8875)
!8891 = !DILocation(line: 3672, column: 33, scope: !8875)
!8892 = !DILocation(line: 3672, column: 2, scope: !8875)
!8893 = !DILocation(line: 3673, column: 2, scope: !8875)
!8894 = !DILocation(line: 3674, column: 1, scope: !8875)
!8895 = distinct !DISubprogram(name: "remove_one", scope: !3, file: !3, line: 3676, type: !7670, scopeLine: 3677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8896 = !DILocalVariable(name: "dev", arg: 1, scope: !8895, file: !3, line: 3676, type: !7542)
!8897 = !DILocation(line: 3676, column: 40, scope: !8895)
!8898 = !DILocation(line: 3678, column: 1, scope: !8895)
!8899 = distinct !DISubprogram(name: "device_init", scope: !3, file: !3, line: 3596, type: !8900, scopeLine: 3597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{null, !32, !7542}
!8902 = !DILocalVariable(name: "lock", arg: 1, scope: !8903, file: !8904, line: 327, type: !2181)
!8903 = distinct !DISubprogram(name: "spinlock_check", scope: !8904, file: !8904, line: 327, type: !8905, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!8904 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!8905 = !DISubroutineType(types: !8906)
!8906 = !{!8907, !2181}
!8907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!8908 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !8909)
!8909 = distinct !DILocation(line: 3624, column: 3, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 3624, column: 3)
!8911 = distinct !DILexicalBlock(scope: !8912, file: !3, line: 3620, column: 33)
!8912 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 3620, column: 2)
!8913 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3620, column: 2)
!8914 = !DILocalVariable(name: "adapter_num", arg: 1, scope: !8899, file: !3, line: 3596, type: !32)
!8915 = !DILocation(line: 3596, column: 29, scope: !8899)
!8916 = !DILocalVariable(name: "pdev", arg: 2, scope: !8899, file: !3, line: 3596, type: !7542)
!8917 = !DILocation(line: 3596, column: 58, scope: !8899)
!8918 = !DILocalVariable(name: "port_array", scope: !8899, file: !3, line: 3598, type: !7818)
!8919 = !DILocation(line: 3598, column: 20, scope: !8899)
!8920 = !DILocalVariable(name: "i", scope: !8899, file: !3, line: 3599, type: !32)
!8921 = !DILocation(line: 3599, column: 6, scope: !8899)
!8922 = !DILocalVariable(name: "port_count", scope: !8899, file: !3, line: 3600, type: !32)
!8923 = !DILocation(line: 3600, column: 6, scope: !8899)
!8924 = !DILocation(line: 3602, column: 6, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3602, column: 6)
!8926 = !DILocation(line: 3602, column: 12, scope: !8925)
!8927 = !DILocation(line: 3602, column: 19, scope: !8925)
!8928 = !DILocation(line: 3602, column: 6, scope: !8899)
!8929 = !DILocation(line: 3603, column: 14, scope: !8925)
!8930 = !DILocation(line: 3603, column: 3, scope: !8925)
!8931 = !DILocation(line: 3604, column: 11, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 3604, column: 11)
!8933 = !DILocation(line: 3604, column: 17, scope: !8932)
!8934 = !DILocation(line: 3604, column: 24, scope: !8932)
!8935 = !DILocation(line: 3604, column: 11, scope: !8925)
!8936 = !DILocation(line: 3605, column: 14, scope: !8932)
!8937 = !DILocation(line: 3605, column: 3, scope: !8932)
!8938 = !DILocation(line: 3608, column: 8, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3608, column: 2)
!8940 = !DILocation(line: 3608, column: 7, scope: !8939)
!8941 = !DILocation(line: 3608, column: 12, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 3608, column: 2)
!8943 = !DILocation(line: 3608, column: 16, scope: !8942)
!8944 = !DILocation(line: 3608, column: 14, scope: !8942)
!8945 = !DILocation(line: 3608, column: 2, scope: !8939)
!8946 = !DILocation(line: 3609, column: 29, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 3608, column: 33)
!8948 = !DILocation(line: 3609, column: 42, scope: !8947)
!8949 = !DILocation(line: 3609, column: 45, scope: !8947)
!8950 = !DILocation(line: 3609, column: 19, scope: !8947)
!8951 = !DILocation(line: 3609, column: 14, scope: !8947)
!8952 = !DILocation(line: 3609, column: 3, scope: !8947)
!8953 = !DILocation(line: 3609, column: 17, scope: !8947)
!8954 = !DILocation(line: 3610, column: 18, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8947, file: !3, line: 3610, column: 7)
!8956 = !DILocation(line: 3610, column: 7, scope: !8955)
!8957 = !DILocation(line: 3610, column: 21, scope: !8955)
!8958 = !DILocation(line: 3610, column: 7, scope: !8947)
!8959 = !DILocation(line: 3611, column: 9, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 3611, column: 4)
!8961 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 3610, column: 30)
!8962 = !DILocation(line: 3611, column: 14, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 3611, column: 4)
!8964 = !DILocation(line: 3611, column: 16, scope: !8963)
!8965 = !DILocation(line: 3611, column: 4, scope: !8960)
!8966 = !DILocation(line: 3612, column: 34, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 3611, column: 27)
!8968 = !DILocation(line: 3612, column: 23, scope: !8967)
!8969 = !DILocation(line: 3612, column: 38, scope: !8967)
!8970 = !DILocation(line: 3612, column: 5, scope: !8967)
!8971 = !DILocation(line: 3613, column: 22, scope: !8967)
!8972 = !DILocation(line: 3613, column: 11, scope: !8967)
!8973 = !DILocation(line: 3613, column: 5, scope: !8967)
!8974 = !DILocation(line: 3614, column: 4, scope: !8967)
!8975 = !DILocation(line: 3611, column: 22, scope: !8963)
!8976 = !DILocation(line: 3611, column: 4, scope: !8963)
!8977 = distinct !{!8977, !8965, !8978}
!8978 = !DILocation(line: 3614, column: 4, scope: !8960)
!8979 = !DILocation(line: 3615, column: 4, scope: !8961)
!8980 = !DILocation(line: 3617, column: 2, scope: !8947)
!8981 = !DILocation(line: 3608, column: 28, scope: !8942)
!8982 = !DILocation(line: 3608, column: 2, scope: !8942)
!8983 = distinct !{!8983, !8945, !8984}
!8984 = !DILocation(line: 3617, column: 2, scope: !8939)
!8985 = !DILocation(line: 3620, column: 8, scope: !8913)
!8986 = !DILocation(line: 3620, column: 7, scope: !8913)
!8987 = !DILocation(line: 3620, column: 12, scope: !8912)
!8988 = !DILocation(line: 3620, column: 16, scope: !8912)
!8989 = !DILocation(line: 3620, column: 14, scope: !8912)
!8990 = !DILocation(line: 3620, column: 2, scope: !8913)
!8991 = !DILocation(line: 3621, column: 21, scope: !8911)
!8992 = !DILocation(line: 3621, column: 10, scope: !8911)
!8993 = !DILocation(line: 3621, column: 25, scope: !8911)
!8994 = !DILocation(line: 3621, column: 3, scope: !8911)
!8995 = !DILocation(line: 3622, column: 25, scope: !8911)
!8996 = !DILocation(line: 3622, column: 14, scope: !8911)
!8997 = !DILocation(line: 3622, column: 3, scope: !8911)
!8998 = !DILocation(line: 3623, column: 31, scope: !8911)
!8999 = !DILocation(line: 3623, column: 14, scope: !8911)
!9000 = !DILocation(line: 3623, column: 3, scope: !8911)
!9001 = !DILocation(line: 3623, column: 18, scope: !8911)
!9002 = !DILocation(line: 3623, column: 29, scope: !8911)
!9003 = !DILocation(line: 3624, column: 3, scope: !8911)
!9004 = !DILocation(line: 3624, column: 3, scope: !8910)
!9005 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !8909)
!9006 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !8909)
!9007 = !DILocation(line: 3625, column: 2, scope: !8911)
!9008 = !DILocation(line: 3620, column: 28, scope: !8912)
!9009 = !DILocation(line: 3620, column: 2, scope: !8912)
!9010 = distinct !{!9010, !8990, !9011}
!9011 = !DILocation(line: 3625, column: 2, scope: !8913)
!9012 = !DILocation(line: 3628, column: 23, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3628, column: 6)
!9014 = !DILocation(line: 3628, column: 7, scope: !9013)
!9015 = !DILocation(line: 3628, column: 6, scope: !8899)
!9016 = !DILocation(line: 3630, column: 18, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 3628, column: 39)
!9018 = !DILocation(line: 3630, column: 3, scope: !9017)
!9019 = !DILocation(line: 3633, column: 10, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 3633, column: 3)
!9021 = !DILocation(line: 3633, column: 8, scope: !9020)
!9022 = !DILocation(line: 3633, column: 15, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 3633, column: 3)
!9024 = !DILocation(line: 3633, column: 19, scope: !9023)
!9025 = !DILocation(line: 3633, column: 17, scope: !9023)
!9026 = !DILocation(line: 3633, column: 3, scope: !9020)
!9027 = !DILocation(line: 3634, column: 31, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 3633, column: 36)
!9029 = !DILocation(line: 3634, column: 46, scope: !9028)
!9030 = !DILocation(line: 3634, column: 15, scope: !9028)
!9031 = !DILocation(line: 3634, column: 4, scope: !9028)
!9032 = !DILocation(line: 3634, column: 19, scope: !9028)
!9033 = !DILocation(line: 3634, column: 29, scope: !9028)
!9034 = !DILocation(line: 3635, column: 31, scope: !9028)
!9035 = !DILocation(line: 3635, column: 46, scope: !9028)
!9036 = !DILocation(line: 3635, column: 15, scope: !9028)
!9037 = !DILocation(line: 3635, column: 4, scope: !9028)
!9038 = !DILocation(line: 3635, column: 19, scope: !9028)
!9039 = !DILocation(line: 3635, column: 29, scope: !9028)
!9040 = !DILocation(line: 3636, column: 30, scope: !9028)
!9041 = !DILocation(line: 3636, column: 19, scope: !9028)
!9042 = !DILocation(line: 3636, column: 4, scope: !9028)
!9043 = !DILocation(line: 3637, column: 3, scope: !9028)
!9044 = !DILocation(line: 3633, column: 31, scope: !9023)
!9045 = !DILocation(line: 3633, column: 3, scope: !9023)
!9046 = distinct !{!9046, !9026, !9047}
!9047 = !DILocation(line: 3637, column: 3, scope: !9020)
!9048 = !DILocation(line: 3639, column: 19, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 3639, column: 7)
!9050 = !DILocation(line: 3639, column: 34, scope: !9049)
!9051 = !DILocation(line: 3641, column: 6, scope: !9049)
!9052 = !DILocation(line: 3641, column: 21, scope: !9049)
!9053 = !DILocation(line: 3642, column: 6, scope: !9049)
!9054 = !DILocation(line: 3642, column: 21, scope: !9049)
!9055 = !DILocation(line: 3643, column: 6, scope: !9049)
!9056 = !DILocation(line: 3639, column: 7, scope: !9049)
!9057 = !DILocation(line: 3643, column: 21, scope: !9049)
!9058 = !DILocation(line: 3639, column: 7, scope: !9017)
!9059 = !DILocation(line: 3644, column: 4, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 3644, column: 4)
!9061 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 3643, column: 26)
!9062 = !DILocation(line: 3644, column: 4, scope: !9061)
!9063 = !DILocation(line: 3647, column: 3, scope: !9061)
!9064 = !DILocation(line: 3648, column: 4, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 3647, column: 10)
!9066 = !DILocation(line: 3648, column: 19, scope: !9065)
!9067 = !DILocation(line: 3648, column: 33, scope: !9065)
!9068 = !DILocation(line: 3649, column: 17, scope: !9065)
!9069 = !DILocation(line: 3649, column: 4, scope: !9065)
!9070 = !DILocation(line: 3650, column: 10, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 3650, column: 4)
!9072 = !DILocation(line: 3650, column: 9, scope: !9071)
!9073 = !DILocation(line: 3650, column: 15, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 3650, column: 4)
!9075 = !DILocation(line: 3650, column: 19, scope: !9074)
!9076 = !DILocation(line: 3650, column: 17, scope: !9074)
!9077 = !DILocation(line: 3650, column: 4, scope: !9071)
!9078 = !DILocation(line: 3651, column: 33, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 3650, column: 37)
!9080 = !DILocation(line: 3651, column: 48, scope: !9079)
!9081 = !DILocation(line: 3651, column: 16, scope: !9079)
!9082 = !DILocation(line: 3651, column: 5, scope: !9079)
!9083 = !DILocation(line: 3651, column: 20, scope: !9079)
!9084 = !DILocation(line: 3651, column: 31, scope: !9079)
!9085 = !DILocation(line: 3652, column: 35, scope: !9079)
!9086 = !DILocation(line: 3652, column: 50, scope: !9079)
!9087 = !DILocation(line: 3652, column: 16, scope: !9079)
!9088 = !DILocation(line: 3652, column: 5, scope: !9079)
!9089 = !DILocation(line: 3652, column: 20, scope: !9079)
!9090 = !DILocation(line: 3652, column: 33, scope: !9079)
!9091 = !DILocation(line: 3653, column: 4, scope: !9079)
!9092 = !DILocation(line: 3650, column: 33, scope: !9074)
!9093 = !DILocation(line: 3650, column: 4, scope: !9074)
!9094 = distinct !{!9094, !9077, !9095}
!9095 = !DILocation(line: 3653, column: 4, scope: !9071)
!9096 = !DILocation(line: 3655, column: 2, scope: !9017)
!9097 = !DILocation(line: 3657, column: 9, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 3657, column: 2)
!9099 = !DILocation(line: 3657, column: 7, scope: !9098)
!9100 = !DILocation(line: 3657, column: 14, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 3657, column: 2)
!9102 = !DILocation(line: 3657, column: 18, scope: !9101)
!9103 = !DILocation(line: 3657, column: 16, scope: !9101)
!9104 = !DILocation(line: 3657, column: 2, scope: !9098)
!9105 = !DILocalVariable(name: "info", scope: !9106, file: !3, line: 3658, type: !7530)
!9106 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 3657, column: 35)
!9107 = !DILocation(line: 3658, column: 21, scope: !9106)
!9108 = !DILocation(line: 3658, column: 39, scope: !9106)
!9109 = !DILocation(line: 3658, column: 28, scope: !9106)
!9110 = !DILocation(line: 3659, column: 29, scope: !9106)
!9111 = !DILocation(line: 3659, column: 35, scope: !9106)
!9112 = !DILocation(line: 3659, column: 41, scope: !9106)
!9113 = !DILocation(line: 3659, column: 56, scope: !9106)
!9114 = !DILocation(line: 3659, column: 62, scope: !9106)
!9115 = !DILocation(line: 3660, column: 6, scope: !9106)
!9116 = !DILocation(line: 3660, column: 12, scope: !9106)
!9117 = !DILocation(line: 3660, column: 18, scope: !9106)
!9118 = !DILocation(line: 3659, column: 3, scope: !9106)
!9119 = !DILocation(line: 3661, column: 2, scope: !9106)
!9120 = !DILocation(line: 3657, column: 30, scope: !9101)
!9121 = !DILocation(line: 3657, column: 2, scope: !9101)
!9122 = distinct !{!9122, !9104, !9123}
!9123 = !DILocation(line: 3661, column: 2, scope: !9098)
!9124 = !DILocation(line: 3662, column: 1, scope: !8899)
!9125 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !9126)
!9126 = distinct !DILocation(line: 3573, column: 3, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3573, column: 3)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 3561, column: 9)
!9129 = distinct !DILexicalBlock(scope: !8103, file: !3, line: 3558, column: 6)
!9130 = !DILocalVariable(name: "adapter_num", arg: 1, scope: !8103, file: !3, line: 3552, type: !32)
!9131 = !DILocation(line: 3552, column: 40, scope: !8103)
!9132 = !DILocalVariable(name: "port_num", arg: 2, scope: !8103, file: !3, line: 3552, type: !32)
!9133 = !DILocation(line: 3552, column: 57, scope: !8103)
!9134 = !DILocalVariable(name: "pdev", arg: 3, scope: !8103, file: !3, line: 3552, type: !7542)
!9135 = !DILocation(line: 3552, column: 83, scope: !8103)
!9136 = !DILocalVariable(name: "info", scope: !8103, file: !3, line: 3554, type: !7530)
!9137 = !DILocation(line: 3554, column: 20, scope: !8103)
!9138 = !DILocation(line: 3556, column: 9, scope: !8103)
!9139 = !DILocation(line: 3556, column: 7, scope: !8103)
!9140 = !DILocation(line: 3558, column: 7, scope: !9129)
!9141 = !DILocation(line: 3558, column: 6, scope: !8103)
!9142 = !DILocation(line: 3559, column: 3, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 3559, column: 3)
!9144 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 3558, column: 13)
!9145 = !DILocation(line: 3559, column: 3, scope: !9144)
!9146 = !DILocation(line: 3561, column: 2, scope: !9144)
!9147 = !DILocation(line: 3562, column: 18, scope: !9128)
!9148 = !DILocation(line: 3562, column: 24, scope: !9128)
!9149 = !DILocation(line: 3562, column: 3, scope: !9128)
!9150 = !DILocation(line: 3563, column: 3, scope: !9128)
!9151 = !DILocation(line: 3563, column: 9, scope: !9128)
!9152 = !DILocation(line: 3563, column: 14, scope: !9128)
!9153 = !DILocation(line: 3563, column: 18, scope: !9128)
!9154 = !DILocation(line: 3564, column: 3, scope: !9128)
!9155 = !DILocation(line: 3564, column: 9, scope: !9128)
!9156 = !DILocation(line: 3564, column: 15, scope: !9128)
!9157 = !DILocation(line: 3565, column: 3, scope: !9128)
!9158 = !DILocation(line: 3565, column: 3, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3565, column: 3)
!9160 = !DILocation(line: 3566, column: 3, scope: !9128)
!9161 = !DILocation(line: 3566, column: 9, scope: !9128)
!9162 = !DILocation(line: 3566, column: 24, scope: !9128)
!9163 = !DILocation(line: 3567, column: 3, scope: !9128)
!9164 = !DILocation(line: 3567, column: 9, scope: !9128)
!9165 = !DILocation(line: 3567, column: 20, scope: !9128)
!9166 = !DILocation(line: 3568, column: 3, scope: !9128)
!9167 = !DILocation(line: 3568, column: 9, scope: !9128)
!9168 = !DILocation(line: 3568, column: 25, scope: !9128)
!9169 = !DILocation(line: 3569, column: 3, scope: !9128)
!9170 = !DILocation(line: 3569, column: 9, scope: !9128)
!9171 = !DILocation(line: 3569, column: 14, scope: !9128)
!9172 = !DILocation(line: 3569, column: 26, scope: !9128)
!9173 = !DILocation(line: 3570, column: 3, scope: !9128)
!9174 = !DILocation(line: 3570, column: 9, scope: !9128)
!9175 = !DILocation(line: 3570, column: 14, scope: !9128)
!9176 = !DILocation(line: 3570, column: 27, scope: !9128)
!9177 = !DILocation(line: 3571, column: 3, scope: !9128)
!9178 = !DILocation(line: 3571, column: 3, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3571, column: 3)
!9180 = !DILocation(line: 3572, column: 3, scope: !9128)
!9181 = !DILocation(line: 3572, column: 3, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 3572, column: 3)
!9183 = !DILocation(line: 3573, column: 3, scope: !9128)
!9184 = !DILocation(line: 3573, column: 3, scope: !9127)
!9185 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !9126)
!9186 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !9126)
!9187 = !DILocation(line: 3574, column: 11, scope: !9128)
!9188 = !DILocation(line: 3574, column: 17, scope: !9128)
!9189 = !DILocation(line: 3574, column: 3, scope: !9128)
!9190 = !DILocation(line: 3575, column: 3, scope: !9128)
!9191 = !DILocation(line: 3575, column: 9, scope: !9128)
!9192 = !DILocation(line: 3575, column: 19, scope: !9128)
!9193 = !DILocation(line: 3576, column: 23, scope: !9128)
!9194 = !DILocation(line: 3576, column: 3, scope: !9128)
!9195 = !DILocation(line: 3576, column: 9, scope: !9128)
!9196 = !DILocation(line: 3576, column: 21, scope: !9128)
!9197 = !DILocation(line: 3577, column: 20, scope: !9128)
!9198 = !DILocation(line: 3577, column: 3, scope: !9128)
!9199 = !DILocation(line: 3577, column: 9, scope: !9128)
!9200 = !DILocation(line: 3577, column: 18, scope: !9128)
!9201 = !DILocation(line: 3579, column: 3, scope: !9128)
!9202 = !DILocation(line: 3580, column: 3, scope: !9128)
!9203 = !DILocation(line: 3583, column: 16, scope: !9128)
!9204 = !DILocation(line: 3583, column: 3, scope: !9128)
!9205 = !DILocation(line: 3583, column: 9, scope: !9128)
!9206 = !DILocation(line: 3583, column: 14, scope: !9128)
!9207 = !DILocation(line: 3584, column: 21, scope: !9128)
!9208 = !DILocation(line: 3584, column: 27, scope: !9128)
!9209 = !DILocation(line: 3584, column: 3, scope: !9128)
!9210 = !DILocation(line: 3584, column: 9, scope: !9128)
!9211 = !DILocation(line: 3584, column: 19, scope: !9128)
!9212 = !DILocation(line: 3585, column: 25, scope: !9128)
!9213 = !DILocation(line: 3585, column: 3, scope: !9128)
!9214 = !DILocation(line: 3585, column: 9, scope: !9128)
!9215 = !DILocation(line: 3585, column: 23, scope: !9128)
!9216 = !DILocation(line: 3587, column: 3, scope: !9128)
!9217 = !DILocation(line: 3587, column: 9, scope: !9128)
!9218 = !DILocation(line: 3587, column: 18, scope: !9128)
!9219 = !DILocation(line: 3588, column: 3, scope: !9128)
!9220 = !DILocation(line: 3588, column: 9, scope: !9128)
!9221 = !DILocation(line: 3588, column: 19, scope: !9128)
!9222 = !DILocation(line: 3590, column: 3, scope: !9128)
!9223 = !DILocation(line: 3590, column: 9, scope: !9128)
!9224 = !DILocation(line: 3590, column: 20, scope: !9128)
!9225 = !DILocation(line: 3593, column: 9, scope: !8103)
!9226 = !DILocation(line: 3593, column: 2, scope: !8103)
!9227 = distinct !DISubprogram(name: "add_device", scope: !3, file: !3, line: 3489, type: !8337, scopeLine: 3490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9228 = !DILocalVariable(name: "info", arg: 1, scope: !9227, file: !3, line: 3489, type: !7530)
!9229 = !DILocation(line: 3489, column: 42, scope: !9227)
!9230 = !DILocalVariable(name: "devstr", scope: !9227, file: !3, line: 3491, type: !1038)
!9231 = !DILocation(line: 3491, column: 8, scope: !9227)
!9232 = !DILocation(line: 3493, column: 2, scope: !9227)
!9233 = !DILocation(line: 3493, column: 8, scope: !9227)
!9234 = !DILocation(line: 3493, column: 20, scope: !9227)
!9235 = !DILocation(line: 3494, column: 15, scope: !9227)
!9236 = !DILocation(line: 3494, column: 2, scope: !9227)
!9237 = !DILocation(line: 3494, column: 8, scope: !9227)
!9238 = !DILocation(line: 3494, column: 13, scope: !9227)
!9239 = !DILocation(line: 3495, column: 10, scope: !9227)
!9240 = !DILocation(line: 3495, column: 16, scope: !9227)
!9241 = !DILocation(line: 3495, column: 37, scope: !9227)
!9242 = !DILocation(line: 3495, column: 53, scope: !9227)
!9243 = !DILocation(line: 3495, column: 59, scope: !9227)
!9244 = !DILocation(line: 3495, column: 2, scope: !9227)
!9245 = !DILocation(line: 3497, column: 6, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3497, column: 6)
!9247 = !DILocation(line: 3497, column: 12, scope: !9246)
!9248 = !DILocation(line: 3497, column: 17, scope: !9246)
!9249 = !DILocation(line: 3497, column: 6, scope: !9227)
!9250 = !DILocation(line: 3498, column: 16, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3498, column: 7)
!9252 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 3497, column: 32)
!9253 = !DILocation(line: 3498, column: 22, scope: !9251)
!9254 = !DILocation(line: 3498, column: 7, scope: !9251)
!9255 = !DILocation(line: 3498, column: 7, scope: !9252)
!9256 = !DILocation(line: 3499, column: 36, scope: !9251)
!9257 = !DILocation(line: 3499, column: 42, scope: !9251)
!9258 = !DILocation(line: 3499, column: 27, scope: !9251)
!9259 = !DILocation(line: 3499, column: 4, scope: !9251)
!9260 = !DILocation(line: 3499, column: 10, scope: !9251)
!9261 = !DILocation(line: 3499, column: 25, scope: !9251)
!9262 = !DILocation(line: 3500, column: 2, scope: !9252)
!9263 = !DILocation(line: 3502, column: 19, scope: !9227)
!9264 = !DILocation(line: 3504, column: 7, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3504, column: 6)
!9266 = !DILocation(line: 3504, column: 6, scope: !9227)
!9267 = !DILocation(line: 3505, column: 22, scope: !9265)
!9268 = !DILocation(line: 3505, column: 20, scope: !9265)
!9269 = !DILocation(line: 3505, column: 3, scope: !9265)
!9270 = !DILocalVariable(name: "current_dev", scope: !9271, file: !3, line: 3507, type: !7530)
!9271 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 3506, column: 7)
!9272 = !DILocation(line: 3507, column: 21, scope: !9271)
!9273 = !DILocation(line: 3507, column: 35, scope: !9271)
!9274 = !DILocation(line: 3508, column: 3, scope: !9271)
!9275 = !DILocation(line: 3508, column: 9, scope: !9271)
!9276 = !DILocation(line: 3508, column: 22, scope: !9271)
!9277 = !DILocation(line: 3509, column: 18, scope: !9271)
!9278 = !DILocation(line: 3509, column: 31, scope: !9271)
!9279 = !DILocation(line: 3509, column: 16, scope: !9271)
!9280 = distinct !{!9280, !9274, !9278}
!9281 = !DILocation(line: 3510, column: 30, scope: !9271)
!9282 = !DILocation(line: 3510, column: 3, scope: !9271)
!9283 = !DILocation(line: 3510, column: 16, scope: !9271)
!9284 = !DILocation(line: 3510, column: 28, scope: !9271)
!9285 = !DILocation(line: 3513, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3513, column: 6)
!9287 = !DILocation(line: 3513, column: 12, scope: !9286)
!9288 = !DILocation(line: 3513, column: 27, scope: !9286)
!9289 = !DILocation(line: 3513, column: 6, scope: !9227)
!9290 = !DILocation(line: 3514, column: 3, scope: !9286)
!9291 = !DILocation(line: 3514, column: 9, scope: !9286)
!9292 = !DILocation(line: 3514, column: 24, scope: !9286)
!9293 = !DILocation(line: 3515, column: 11, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 3515, column: 11)
!9295 = !DILocation(line: 3515, column: 17, scope: !9294)
!9296 = !DILocation(line: 3515, column: 32, scope: !9294)
!9297 = !DILocation(line: 3515, column: 11, scope: !9286)
!9298 = !DILocation(line: 3516, column: 3, scope: !9294)
!9299 = !DILocation(line: 3516, column: 9, scope: !9294)
!9300 = !DILocation(line: 3516, column: 24, scope: !9294)
!9301 = !DILocation(line: 3518, column: 9, scope: !9227)
!9302 = !DILocation(line: 3518, column: 15, scope: !9227)
!9303 = !DILocation(line: 3518, column: 21, scope: !9227)
!9304 = !DILocation(line: 3518, column: 2, scope: !9227)
!9305 = !DILocation(line: 3520, column: 10, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3518, column: 29)
!9307 = !DILocation(line: 3521, column: 3, scope: !9306)
!9308 = !DILocation(line: 3523, column: 10, scope: !9306)
!9309 = !DILocation(line: 3524, column: 3, scope: !9306)
!9310 = !DILocation(line: 3526, column: 10, scope: !9306)
!9311 = !DILocation(line: 3527, column: 3, scope: !9306)
!9312 = !DILocation(line: 3529, column: 10, scope: !9306)
!9313 = !DILocation(line: 3530, column: 3, scope: !9306)
!9314 = !DILocation(line: 3530, column: 9, scope: !9306)
!9315 = !DILocation(line: 3530, column: 16, scope: !9306)
!9316 = !DILocation(line: 3530, column: 21, scope: !9306)
!9317 = !DILocation(line: 3531, column: 3, scope: !9306)
!9318 = !DILocation(line: 3533, column: 10, scope: !9306)
!9319 = !DILocation(line: 3534, column: 2, scope: !9306)
!9320 = !DILocation(line: 3536, column: 3, scope: !9227)
!9321 = !DILocation(line: 3536, column: 11, scope: !9227)
!9322 = !DILocation(line: 3536, column: 17, scope: !9227)
!9323 = !DILocation(line: 3536, column: 30, scope: !9227)
!9324 = !DILocation(line: 3536, column: 36, scope: !9227)
!9325 = !DILocation(line: 3537, column: 3, scope: !9227)
!9326 = !DILocation(line: 3537, column: 9, scope: !9227)
!9327 = !DILocation(line: 3537, column: 20, scope: !9227)
!9328 = !DILocation(line: 3537, column: 26, scope: !9227)
!9329 = !DILocation(line: 3535, column: 2, scope: !9227)
!9330 = !DILocation(line: 3540, column: 15, scope: !9227)
!9331 = !DILocation(line: 3540, column: 2, scope: !9227)
!9332 = !DILocation(line: 3542, column: 1, scope: !9227)
!9333 = distinct !DISubprogram(name: "claim_resources", scope: !3, file: !3, line: 3443, type: !8119, scopeLine: 3444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9334 = !DILocalVariable(name: "info", arg: 1, scope: !9333, file: !3, line: 3443, type: !7530)
!9335 = !DILocation(line: 3443, column: 46, scope: !9333)
!9336 = !DILocation(line: 3445, column: 6, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 3445, column: 6)
!9338 = !DILocation(line: 3445, column: 76, scope: !9337)
!9339 = !DILocation(line: 3445, column: 6, scope: !9333)
!9340 = !DILocation(line: 3446, column: 3, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 3446, column: 3)
!9342 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 3445, column: 85)
!9343 = !DILocation(line: 3446, column: 3, scope: !9342)
!9344 = !DILocation(line: 3448, column: 3, scope: !9342)
!9345 = !DILocation(line: 3448, column: 9, scope: !9342)
!9346 = !DILocation(line: 3448, column: 20, scope: !9342)
!9347 = !DILocation(line: 3449, column: 3, scope: !9342)
!9348 = !DILocation(line: 3452, column: 3, scope: !9337)
!9349 = !DILocation(line: 3452, column: 9, scope: !9337)
!9350 = !DILocation(line: 3452, column: 28, scope: !9337)
!9351 = !DILocation(line: 3454, column: 27, scope: !9333)
!9352 = !DILocation(line: 3454, column: 33, scope: !9333)
!9353 = !DILocation(line: 3454, column: 19, scope: !9333)
!9354 = !DILocation(line: 3454, column: 2, scope: !9333)
!9355 = !DILocation(line: 3454, column: 8, scope: !9333)
!9356 = !DILocation(line: 3454, column: 17, scope: !9333)
!9357 = !DILocation(line: 3455, column: 7, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 3455, column: 6)
!9359 = !DILocation(line: 3455, column: 13, scope: !9358)
!9360 = !DILocation(line: 3455, column: 6, scope: !9333)
!9361 = !DILocation(line: 3456, column: 3, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 3456, column: 3)
!9363 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 3455, column: 23)
!9364 = !DILocation(line: 3456, column: 3, scope: !9363)
!9365 = !DILocation(line: 3458, column: 3, scope: !9363)
!9366 = !DILocation(line: 3458, column: 9, scope: !9363)
!9367 = !DILocation(line: 3458, column: 20, scope: !9363)
!9368 = !DILocation(line: 3459, column: 3, scope: !9363)
!9369 = !DILocation(line: 3461, column: 2, scope: !9333)
!9370 = !DILabel(scope: !9333, name: "errout", file: !3, line: 3463)
!9371 = !DILocation(line: 3463, column: 1, scope: !9333)
!9372 = !DILocation(line: 3464, column: 20, scope: !9333)
!9373 = !DILocation(line: 3464, column: 2, scope: !9333)
!9374 = !DILocation(line: 3465, column: 2, scope: !9333)
!9375 = !DILocation(line: 3466, column: 1, scope: !9333)
!9376 = distinct !DISubprogram(name: "alloc_dma_bufs", scope: !3, file: !3, line: 3417, type: !8119, scopeLine: 3418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9377 = !DILocalVariable(name: "info", arg: 1, scope: !9376, file: !3, line: 3417, type: !7530)
!9378 = !DILocation(line: 3417, column: 45, scope: !9376)
!9379 = !DILocation(line: 3419, column: 2, scope: !9376)
!9380 = !DILocation(line: 3419, column: 8, scope: !9376)
!9381 = !DILocation(line: 3419, column: 19, scope: !9376)
!9382 = !DILocation(line: 3420, column: 2, scope: !9376)
!9383 = !DILocation(line: 3420, column: 8, scope: !9376)
!9384 = !DILocation(line: 3420, column: 19, scope: !9376)
!9385 = !DILocation(line: 3422, column: 17, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 3422, column: 6)
!9387 = !DILocation(line: 3422, column: 6, scope: !9386)
!9388 = !DILocation(line: 3422, column: 23, scope: !9386)
!9389 = !DILocation(line: 3422, column: 27, scope: !9386)
!9390 = !DILocation(line: 3423, column: 17, scope: !9386)
!9391 = !DILocation(line: 3423, column: 23, scope: !9386)
!9392 = !DILocation(line: 3423, column: 29, scope: !9386)
!9393 = !DILocation(line: 3423, column: 36, scope: !9386)
!9394 = !DILocation(line: 3423, column: 42, scope: !9386)
!9395 = !DILocation(line: 3423, column: 6, scope: !9386)
!9396 = !DILocation(line: 3423, column: 54, scope: !9386)
!9397 = !DILocation(line: 3423, column: 58, scope: !9386)
!9398 = !DILocation(line: 3424, column: 17, scope: !9386)
!9399 = !DILocation(line: 3424, column: 23, scope: !9386)
!9400 = !DILocation(line: 3424, column: 29, scope: !9386)
!9401 = !DILocation(line: 3424, column: 36, scope: !9386)
!9402 = !DILocation(line: 3424, column: 42, scope: !9386)
!9403 = !DILocation(line: 3424, column: 6, scope: !9386)
!9404 = !DILocation(line: 3424, column: 54, scope: !9386)
!9405 = !DILocation(line: 3424, column: 58, scope: !9386)
!9406 = !DILocation(line: 3425, column: 21, scope: !9386)
!9407 = !DILocation(line: 3425, column: 6, scope: !9386)
!9408 = !DILocation(line: 3425, column: 27, scope: !9386)
!9409 = !DILocation(line: 3422, column: 6, scope: !9376)
!9410 = !DILocation(line: 3426, column: 3, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 3426, column: 3)
!9412 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 3425, column: 32)
!9413 = !DILocation(line: 3426, column: 3, scope: !9412)
!9414 = !DILocation(line: 3427, column: 3, scope: !9412)
!9415 = !DILocation(line: 3429, column: 14, scope: !9376)
!9416 = !DILocation(line: 3429, column: 2, scope: !9376)
!9417 = !DILocation(line: 3430, column: 2, scope: !9376)
!9418 = !DILocation(line: 3431, column: 1, scope: !9376)
!9419 = distinct !DISubprogram(name: "request_irq", scope: !3030, file: !3030, line: 157, type: !9420, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9420 = !DISubroutineType(types: !9421)
!9421 = !{!32, !7, !9422, !312, !292, !591}
!9422 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3030, line: 92, baseType: !9423)
!9423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9424, size: 64)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!9426, !32, !591}
!9426 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7518, line: 17, baseType: !7517)
!9427 = !DILocalVariable(name: "irq", arg: 1, scope: !9419, file: !3030, line: 157, type: !7)
!9428 = !DILocation(line: 157, column: 26, scope: !9419)
!9429 = !DILocalVariable(name: "handler", arg: 2, scope: !9419, file: !3030, line: 157, type: !9422)
!9430 = !DILocation(line: 157, column: 45, scope: !9419)
!9431 = !DILocalVariable(name: "flags", arg: 3, scope: !9419, file: !3030, line: 157, type: !312)
!9432 = !DILocation(line: 157, column: 68, scope: !9419)
!9433 = !DILocalVariable(name: "name", arg: 4, scope: !9419, file: !3030, line: 158, type: !292)
!9434 = !DILocation(line: 158, column: 18, scope: !9419)
!9435 = !DILocalVariable(name: "dev", arg: 5, scope: !9419, file: !3030, line: 158, type: !591)
!9436 = !DILocation(line: 158, column: 30, scope: !9419)
!9437 = !DILocation(line: 160, column: 30, scope: !9419)
!9438 = !DILocation(line: 160, column: 35, scope: !9419)
!9439 = !DILocation(line: 160, column: 50, scope: !9419)
!9440 = !DILocation(line: 160, column: 57, scope: !9419)
!9441 = !DILocation(line: 160, column: 63, scope: !9419)
!9442 = !DILocation(line: 160, column: 9, scope: !9419)
!9443 = !DILocation(line: 160, column: 2, scope: !9419)
!9444 = distinct !DISubprogram(name: "slgt_interrupt", scope: !3, file: !3, line: 2331, type: !9424, scopeLine: 2332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9445 = !DILocalVariable(name: "lock", arg: 1, scope: !9446, file: !8904, line: 392, type: !2181)
!9446 = distinct !DISubprogram(name: "spin_unlock", scope: !8904, file: !8904, line: 392, type: !9447, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{null, !2181}
!9449 = !DILocation(line: 392, column: 53, scope: !9446, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 2386, column: 3, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 2374, column: 39)
!9452 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 2374, column: 2)
!9453 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2374, column: 2)
!9454 = !DILocalVariable(name: "lock", arg: 1, scope: !9455, file: !8904, line: 352, type: !2181)
!9455 = distinct !DISubprogram(name: "spin_lock", scope: !8904, file: !8904, line: 352, type: !9447, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9456 = !DILocation(line: 352, column: 51, scope: !9455, inlinedAt: !9457)
!9457 = distinct !DILocation(line: 2378, column: 3, scope: !9451)
!9458 = !DILocation(line: 392, column: 53, scope: !9446, inlinedAt: !9459)
!9459 = distinct !DILocation(line: 2371, column: 3, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 2356, column: 26)
!9461 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2356, column: 6)
!9462 = !DILocation(line: 352, column: 51, scope: !9455, inlinedAt: !9463)
!9463 = distinct !DILocation(line: 2359, column: 3, scope: !9460)
!9464 = !DILocation(line: 392, column: 53, scope: !9446, inlinedAt: !9465)
!9465 = distinct !DILocation(line: 2352, column: 4, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2342, column: 40)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 2342, column: 3)
!9468 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 2342, column: 3)
!9469 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2339, column: 50)
!9470 = !DILocation(line: 352, column: 51, scope: !9455, inlinedAt: !9471)
!9471 = distinct !DILocation(line: 2345, column: 4, scope: !9466)
!9472 = !DILocalVariable(name: "dummy", arg: 1, scope: !9444, file: !3, line: 2331, type: !32)
!9473 = !DILocation(line: 2331, column: 39, scope: !9444)
!9474 = !DILocalVariable(name: "dev_id", arg: 2, scope: !9444, file: !3, line: 2331, type: !591)
!9475 = !DILocation(line: 2331, column: 52, scope: !9444)
!9476 = !DILocalVariable(name: "info", scope: !9444, file: !3, line: 2333, type: !7530)
!9477 = !DILocation(line: 2333, column: 20, scope: !9444)
!9478 = !DILocation(line: 2333, column: 27, scope: !9444)
!9479 = !DILocalVariable(name: "gsr", scope: !9444, file: !3, line: 2334, type: !7)
!9480 = !DILocation(line: 2334, column: 15, scope: !9444)
!9481 = !DILocalVariable(name: "i", scope: !9444, file: !3, line: 2335, type: !7)
!9482 = !DILocation(line: 2335, column: 15, scope: !9444)
!9483 = !DILocation(line: 2337, column: 2, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2337, column: 2)
!9485 = !DILocation(line: 2337, column: 2, scope: !9444)
!9486 = !DILocation(line: 2339, column: 2, scope: !9444)
!9487 = !DILocation(line: 2339, column: 24, scope: !9444)
!9488 = !DILocation(line: 2339, column: 15, scope: !9444)
!9489 = !DILocation(line: 2339, column: 35, scope: !9444)
!9490 = !DILocation(line: 2339, column: 13, scope: !9444)
!9491 = !DILocation(line: 2340, column: 3, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 2340, column: 3)
!9493 = !DILocation(line: 2340, column: 3, scope: !9469)
!9494 = !DILocation(line: 2341, column: 3, scope: !9469)
!9495 = !DILocation(line: 2341, column: 9, scope: !9469)
!9496 = !DILocation(line: 2341, column: 22, scope: !9469)
!9497 = !DILocation(line: 2342, column: 8, scope: !9468)
!9498 = !DILocation(line: 2342, column: 7, scope: !9468)
!9499 = !DILocation(line: 2342, column: 12, scope: !9467)
!9500 = !DILocation(line: 2342, column: 16, scope: !9467)
!9501 = !DILocation(line: 2342, column: 22, scope: !9467)
!9502 = !DILocation(line: 2342, column: 14, scope: !9467)
!9503 = !DILocation(line: 2342, column: 3, scope: !9468)
!9504 = !DILocation(line: 2343, column: 8, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2343, column: 8)
!9506 = !DILocation(line: 2343, column: 14, scope: !9505)
!9507 = !DILocation(line: 2343, column: 25, scope: !9505)
!9508 = !DILocation(line: 2343, column: 28, scope: !9505)
!9509 = !DILocation(line: 2343, column: 8, scope: !9466)
!9510 = !DILocation(line: 2344, column: 5, scope: !9505)
!9511 = !DILocation(line: 2345, column: 15, scope: !9466)
!9512 = !DILocation(line: 2345, column: 21, scope: !9466)
!9513 = !DILocation(line: 2345, column: 32, scope: !9466)
!9514 = !DILocation(line: 2345, column: 36, scope: !9466)
!9515 = !DILocation(line: 354, column: 2, scope: !9516, inlinedAt: !9471)
!9516 = distinct !DILexicalBlock(scope: !9455, file: !8904, line: 354, column: 2)
!9517 = !{i32 -2145348191}
!9518 = !DILocation(line: 354, column: 2, scope: !9519, inlinedAt: !9471)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !8904, line: 354, column: 2)
!9520 = !DILocation(line: 2346, column: 8, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2346, column: 8)
!9522 = !DILocation(line: 2346, column: 23, scope: !9521)
!9523 = !DILocation(line: 2346, column: 20, scope: !9521)
!9524 = !DILocation(line: 2346, column: 12, scope: !9521)
!9525 = !DILocation(line: 2346, column: 8, scope: !9466)
!9526 = !DILocation(line: 2347, column: 16, scope: !9521)
!9527 = !DILocation(line: 2347, column: 22, scope: !9521)
!9528 = !DILocation(line: 2347, column: 33, scope: !9521)
!9529 = !DILocation(line: 2347, column: 5, scope: !9521)
!9530 = !DILocation(line: 2348, column: 8, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2348, column: 8)
!9532 = !DILocation(line: 2348, column: 25, scope: !9531)
!9533 = !DILocation(line: 2348, column: 26, scope: !9531)
!9534 = !DILocation(line: 2348, column: 21, scope: !9531)
!9535 = !DILocation(line: 2348, column: 12, scope: !9531)
!9536 = !DILocation(line: 2348, column: 8, scope: !9466)
!9537 = !DILocation(line: 2349, column: 14, scope: !9531)
!9538 = !DILocation(line: 2349, column: 20, scope: !9531)
!9539 = !DILocation(line: 2349, column: 31, scope: !9531)
!9540 = !DILocation(line: 2349, column: 5, scope: !9531)
!9541 = !DILocation(line: 2350, column: 8, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 2350, column: 8)
!9543 = !DILocation(line: 2350, column: 25, scope: !9542)
!9544 = !DILocation(line: 2350, column: 26, scope: !9542)
!9545 = !DILocation(line: 2350, column: 21, scope: !9542)
!9546 = !DILocation(line: 2350, column: 12, scope: !9542)
!9547 = !DILocation(line: 2350, column: 8, scope: !9466)
!9548 = !DILocation(line: 2351, column: 14, scope: !9542)
!9549 = !DILocation(line: 2351, column: 20, scope: !9542)
!9550 = !DILocation(line: 2351, column: 31, scope: !9542)
!9551 = !DILocation(line: 2351, column: 5, scope: !9542)
!9552 = !DILocation(line: 2352, column: 17, scope: !9466)
!9553 = !DILocation(line: 2352, column: 23, scope: !9466)
!9554 = !DILocation(line: 2352, column: 34, scope: !9466)
!9555 = !DILocation(line: 2352, column: 38, scope: !9466)
!9556 = !DILocation(line: 394, column: 2, scope: !9557, inlinedAt: !9465)
!9557 = distinct !DILexicalBlock(scope: !9446, file: !8904, line: 394, column: 2)
!9558 = !{i32 -2145345830}
!9559 = !DILocation(line: 394, column: 2, scope: !9560, inlinedAt: !9465)
!9560 = distinct !DILexicalBlock(scope: !9557, file: !8904, line: 394, column: 2)
!9561 = !DILocation(line: 2353, column: 3, scope: !9466)
!9562 = !DILocation(line: 2342, column: 36, scope: !9467)
!9563 = !DILocation(line: 2342, column: 3, scope: !9467)
!9564 = distinct !{!9564, !9503, !9565}
!9565 = !DILocation(line: 2353, column: 3, scope: !9468)
!9566 = distinct !{!9566, !9486, !9567}
!9567 = !DILocation(line: 2354, column: 2, scope: !9444)
!9568 = !DILocation(line: 2356, column: 6, scope: !9461)
!9569 = !DILocation(line: 2356, column: 12, scope: !9461)
!9570 = !DILocation(line: 2356, column: 6, scope: !9444)
!9571 = !DILocalVariable(name: "state", scope: !9460, file: !3, line: 2357, type: !7)
!9572 = !DILocation(line: 2357, column: 16, scope: !9460)
!9573 = !DILocalVariable(name: "changed", scope: !9460, file: !3, line: 2358, type: !7)
!9574 = !DILocation(line: 2358, column: 16, scope: !9460)
!9575 = !DILocation(line: 2359, column: 14, scope: !9460)
!9576 = !DILocation(line: 2359, column: 20, scope: !9460)
!9577 = !DILocation(line: 354, column: 2, scope: !9516, inlinedAt: !9463)
!9578 = !DILocation(line: 354, column: 2, scope: !9519, inlinedAt: !9463)
!9579 = !DILocation(line: 2360, column: 3, scope: !9460)
!9580 = !DILocation(line: 2360, column: 30, scope: !9460)
!9581 = !DILocation(line: 2360, column: 21, scope: !9460)
!9582 = !DILocation(line: 2360, column: 19, scope: !9460)
!9583 = !DILocation(line: 2360, column: 43, scope: !9460)
!9584 = !DILocation(line: 2361, column: 4, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2361, column: 4)
!9586 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 2360, column: 49)
!9587 = !DILocation(line: 2361, column: 4, scope: !9586)
!9588 = !DILocation(line: 2363, column: 21, scope: !9586)
!9589 = !DILocation(line: 2363, column: 12, scope: !9586)
!9590 = !DILocation(line: 2363, column: 10, scope: !9586)
!9591 = !DILocation(line: 2365, column: 13, scope: !9586)
!9592 = !DILocation(line: 2365, column: 25, scope: !9586)
!9593 = !DILocation(line: 2365, column: 4, scope: !9586)
!9594 = !DILocation(line: 2366, column: 10, scope: !9595)
!9595 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 2366, column: 4)
!9596 = !DILocation(line: 2366, column: 9, scope: !9595)
!9597 = !DILocation(line: 2366, column: 15, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 2366, column: 4)
!9599 = !DILocation(line: 2366, column: 19, scope: !9598)
!9600 = !DILocation(line: 2366, column: 25, scope: !9598)
!9601 = !DILocation(line: 2366, column: 17, scope: !9598)
!9602 = !DILocation(line: 2366, column: 4, scope: !9595)
!9603 = !DILocation(line: 2367, column: 9, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 2367, column: 9)
!9605 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 2366, column: 43)
!9606 = !DILocation(line: 2367, column: 15, scope: !9604)
!9607 = !DILocation(line: 2367, column: 26, scope: !9604)
!9608 = !DILocation(line: 2367, column: 29, scope: !9604)
!9609 = !DILocation(line: 2367, column: 9, scope: !9605)
!9610 = !DILocation(line: 2368, column: 15, scope: !9604)
!9611 = !DILocation(line: 2368, column: 21, scope: !9604)
!9612 = !DILocation(line: 2368, column: 32, scope: !9604)
!9613 = !DILocation(line: 2368, column: 36, scope: !9604)
!9614 = !DILocation(line: 2368, column: 45, scope: !9604)
!9615 = !DILocation(line: 2368, column: 6, scope: !9604)
!9616 = !DILocation(line: 2369, column: 4, scope: !9605)
!9617 = !DILocation(line: 2366, column: 39, scope: !9598)
!9618 = !DILocation(line: 2366, column: 4, scope: !9598)
!9619 = distinct !{!9619, !9602, !9620}
!9620 = !DILocation(line: 2369, column: 4, scope: !9595)
!9621 = distinct !{!9621, !9579, !9622}
!9622 = !DILocation(line: 2370, column: 3, scope: !9460)
!9623 = !DILocation(line: 2371, column: 16, scope: !9460)
!9624 = !DILocation(line: 2371, column: 22, scope: !9460)
!9625 = !DILocation(line: 394, column: 2, scope: !9557, inlinedAt: !9459)
!9626 = !DILocation(line: 394, column: 2, scope: !9560, inlinedAt: !9459)
!9627 = !DILocation(line: 2372, column: 2, scope: !9460)
!9628 = !DILocation(line: 2374, column: 7, scope: !9453)
!9629 = !DILocation(line: 2374, column: 6, scope: !9453)
!9630 = !DILocation(line: 2374, column: 11, scope: !9452)
!9631 = !DILocation(line: 2374, column: 15, scope: !9452)
!9632 = !DILocation(line: 2374, column: 21, scope: !9452)
!9633 = !DILocation(line: 2374, column: 13, scope: !9452)
!9634 = !DILocation(line: 2374, column: 2, scope: !9453)
!9635 = !DILocalVariable(name: "port", scope: !9451, file: !3, line: 2375, type: !7530)
!9636 = !DILocation(line: 2375, column: 21, scope: !9451)
!9637 = !DILocation(line: 2375, column: 28, scope: !9451)
!9638 = !DILocation(line: 2375, column: 34, scope: !9451)
!9639 = !DILocation(line: 2375, column: 45, scope: !9451)
!9640 = !DILocation(line: 2376, column: 7, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 2376, column: 7)
!9642 = !DILocation(line: 2376, column: 12, scope: !9641)
!9643 = !DILocation(line: 2376, column: 7, scope: !9451)
!9644 = !DILocation(line: 2377, column: 4, scope: !9641)
!9645 = !DILocation(line: 2378, column: 14, scope: !9451)
!9646 = !DILocation(line: 2378, column: 20, scope: !9451)
!9647 = !DILocation(line: 354, column: 2, scope: !9516, inlinedAt: !9457)
!9648 = !DILocation(line: 354, column: 2, scope: !9519, inlinedAt: !9457)
!9649 = !DILocation(line: 2379, column: 8, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 2379, column: 7)
!9651 = !DILocation(line: 2379, column: 14, scope: !9650)
!9652 = !DILocation(line: 2379, column: 19, scope: !9650)
!9653 = !DILocation(line: 2379, column: 25, scope: !9650)
!9654 = !DILocation(line: 2379, column: 28, scope: !9650)
!9655 = !DILocation(line: 2379, column: 34, scope: !9650)
!9656 = !DILocation(line: 2379, column: 44, scope: !9650)
!9657 = !DILocation(line: 2380, column: 7, scope: !9650)
!9658 = !DILocation(line: 2380, column: 13, scope: !9650)
!9659 = !DILocation(line: 2380, column: 24, scope: !9650)
!9660 = !DILocation(line: 2380, column: 28, scope: !9650)
!9661 = !DILocation(line: 2380, column: 34, scope: !9650)
!9662 = !DILocation(line: 2380, column: 45, scope: !9650)
!9663 = !DILocation(line: 2381, column: 8, scope: !9650)
!9664 = !DILocation(line: 2381, column: 14, scope: !9650)
!9665 = !DILocation(line: 2379, column: 7, scope: !9451)
!9666 = !DILocation(line: 2382, column: 4, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 2382, column: 4)
!9668 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 2381, column: 28)
!9669 = !DILocation(line: 2382, column: 4, scope: !9668)
!9670 = !DILocation(line: 2383, column: 19, scope: !9668)
!9671 = !DILocation(line: 2383, column: 25, scope: !9668)
!9672 = !DILocation(line: 2383, column: 4, scope: !9668)
!9673 = !DILocation(line: 2384, column: 4, scope: !9668)
!9674 = !DILocation(line: 2384, column: 10, scope: !9668)
!9675 = !DILocation(line: 2384, column: 23, scope: !9668)
!9676 = !DILocation(line: 2385, column: 3, scope: !9668)
!9677 = !DILocation(line: 2386, column: 16, scope: !9451)
!9678 = !DILocation(line: 2386, column: 22, scope: !9451)
!9679 = !DILocation(line: 394, column: 2, scope: !9557, inlinedAt: !9450)
!9680 = !DILocation(line: 394, column: 2, scope: !9560, inlinedAt: !9450)
!9681 = !DILocation(line: 2387, column: 2, scope: !9451)
!9682 = !DILocation(line: 2374, column: 35, scope: !9452)
!9683 = !DILocation(line: 2374, column: 2, scope: !9452)
!9684 = distinct !{!9684, !9634, !9685}
!9685 = !DILocation(line: 2387, column: 2, scope: !9453)
!9686 = !DILocation(line: 2389, column: 2, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 2389, column: 2)
!9688 = !DILocation(line: 2389, column: 2, scope: !9444)
!9689 = !DILocation(line: 2390, column: 2, scope: !9444)
!9690 = distinct !DISubprogram(name: "adapter_test", scope: !3, file: !3, line: 5076, type: !8119, scopeLine: 5077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9691 = !DILocalVariable(name: "info", arg: 1, scope: !9690, file: !3, line: 5076, type: !7530)
!9692 = !DILocation(line: 5076, column: 43, scope: !9690)
!9693 = !DILocation(line: 5078, column: 2, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 5078, column: 2)
!9695 = !DILocation(line: 5078, column: 2, scope: !9690)
!9696 = !DILocation(line: 5079, column: 20, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9690, file: !3, line: 5079, column: 6)
!9698 = !DILocation(line: 5079, column: 6, scope: !9697)
!9699 = !DILocation(line: 5079, column: 26, scope: !9697)
!9700 = !DILocation(line: 5079, column: 6, scope: !9690)
!9701 = !DILocation(line: 5081, column: 4, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 5079, column: 31)
!9703 = !DILocation(line: 5081, column: 10, scope: !9702)
!9704 = !DILocation(line: 5081, column: 23, scope: !9702)
!9705 = !DILocation(line: 5081, column: 29, scope: !9702)
!9706 = !DILocation(line: 5080, column: 3, scope: !9702)
!9707 = !DILocation(line: 5082, column: 2, scope: !9702)
!9708 = !DILocation(line: 5082, column: 22, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9697, file: !3, line: 5082, column: 13)
!9710 = !DILocation(line: 5082, column: 13, scope: !9709)
!9711 = !DILocation(line: 5082, column: 28, scope: !9709)
!9712 = !DILocation(line: 5082, column: 13, scope: !9697)
!9713 = !DILocation(line: 5084, column: 4, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 5082, column: 33)
!9715 = !DILocation(line: 5084, column: 10, scope: !9714)
!9716 = !DILocation(line: 5084, column: 23, scope: !9714)
!9717 = !DILocation(line: 5084, column: 29, scope: !9714)
!9718 = !DILocation(line: 5083, column: 3, scope: !9714)
!9719 = !DILocation(line: 5085, column: 2, scope: !9714)
!9720 = !DILocation(line: 5085, column: 27, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 5085, column: 13)
!9722 = !DILocation(line: 5085, column: 13, scope: !9721)
!9723 = !DILocation(line: 5085, column: 33, scope: !9721)
!9724 = !DILocation(line: 5085, column: 13, scope: !9709)
!9725 = !DILocation(line: 5086, column: 40, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 5085, column: 38)
!9727 = !DILocation(line: 5086, column: 46, scope: !9726)
!9728 = !DILocation(line: 5086, column: 3, scope: !9726)
!9729 = !DILocation(line: 5087, column: 2, scope: !9726)
!9730 = !DILocation(line: 5088, column: 9, scope: !9690)
!9731 = !DILocation(line: 5088, column: 15, scope: !9690)
!9732 = !DILocation(line: 5088, column: 2, scope: !9690)
!9733 = distinct !DISubprogram(name: "kzalloc", scope: !7506, file: !7506, line: 662, type: !9734, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9734 = !DISubroutineType(types: !9735)
!9735 = !{!591, !1039, !1742}
!9736 = !DILocalVariable(name: "s", arg: 1, scope: !9737, file: !7506, line: 445, type: !2051)
!9737 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7506, file: !7506, line: 445, type: !9738, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!591, !2051, !1742, !1039}
!9740 = !DILocation(line: 445, column: 72, scope: !9737, inlinedAt: !9741)
!9741 = distinct !DILocation(line: 552, column: 10, scope: !9742, inlinedAt: !9745)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !7506, line: 540, column: 34)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !7506, line: 540, column: 6)
!9744 = distinct !DISubprogram(name: "kmalloc", scope: !7506, file: !7506, line: 538, type: !9734, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9745 = distinct !DILocation(line: 664, column: 9, scope: !9733)
!9746 = !DILocalVariable(name: "flags", arg: 2, scope: !9737, file: !7506, line: 446, type: !1742)
!9747 = !DILocation(line: 446, column: 9, scope: !9737, inlinedAt: !9741)
!9748 = !DILocalVariable(name: "size", arg: 3, scope: !9737, file: !7506, line: 446, type: !1039)
!9749 = !DILocation(line: 446, column: 23, scope: !9737, inlinedAt: !9741)
!9750 = !DILocalVariable(name: "ret", scope: !9737, file: !7506, line: 448, type: !591)
!9751 = !DILocation(line: 448, column: 8, scope: !9737, inlinedAt: !9741)
!9752 = !DILocalVariable(name: "flags", arg: 1, scope: !9753, file: !7506, line: 318, type: !1742)
!9753 = distinct !DISubprogram(name: "kmalloc_type", scope: !7506, file: !7506, line: 318, type: !9754, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9754 = !DISubroutineType(types: !9755)
!9755 = !{!7505, !1742}
!9756 = !DILocation(line: 318, column: 67, scope: !9753, inlinedAt: !9757)
!9757 = distinct !DILocation(line: 553, column: 20, scope: !9742, inlinedAt: !9745)
!9758 = !DILocalVariable(name: "size", arg: 1, scope: !9759, file: !7506, line: 346, type: !1039)
!9759 = distinct !DISubprogram(name: "kmalloc_index", scope: !7506, file: !7506, line: 346, type: !9760, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9760 = !DISubroutineType(types: !9761)
!9761 = !{!7, !1039}
!9762 = !DILocation(line: 346, column: 58, scope: !9759, inlinedAt: !9763)
!9763 = distinct !DILocation(line: 547, column: 11, scope: !9742, inlinedAt: !9745)
!9764 = !DILocalVariable(name: "size", arg: 1, scope: !9765, file: !7506, line: 472, type: !1039)
!9765 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7506, file: !7506, line: 472, type: !9766, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9766 = !DISubroutineType(types: !9767)
!9767 = !{!591, !1039, !1742, !7}
!9768 = !DILocation(line: 472, column: 28, scope: !9765, inlinedAt: !9769)
!9769 = distinct !DILocation(line: 481, column: 9, scope: !9770, inlinedAt: !9771)
!9770 = distinct !DISubprogram(name: "kmalloc_large", scope: !7506, file: !7506, line: 478, type: !9734, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!9771 = distinct !DILocation(line: 545, column: 11, scope: !9772, inlinedAt: !9745)
!9772 = distinct !DILexicalBlock(scope: !9742, file: !7506, line: 544, column: 7)
!9773 = !DILocalVariable(name: "flags", arg: 2, scope: !9765, file: !7506, line: 472, type: !1742)
!9774 = !DILocation(line: 472, column: 40, scope: !9765, inlinedAt: !9769)
!9775 = !DILocalVariable(name: "order", arg: 3, scope: !9765, file: !7506, line: 472, type: !7)
!9776 = !DILocation(line: 472, column: 60, scope: !9765, inlinedAt: !9769)
!9777 = !DILocalVariable(name: "size", arg: 1, scope: !9770, file: !7506, line: 478, type: !1039)
!9778 = !DILocation(line: 478, column: 51, scope: !9770, inlinedAt: !9771)
!9779 = !DILocalVariable(name: "flags", arg: 2, scope: !9770, file: !7506, line: 478, type: !1742)
!9780 = !DILocation(line: 478, column: 63, scope: !9770, inlinedAt: !9771)
!9781 = !DILocalVariable(name: "order", scope: !9770, file: !7506, line: 480, type: !7)
!9782 = !DILocation(line: 480, column: 15, scope: !9770, inlinedAt: !9771)
!9783 = !DILocalVariable(name: "size", arg: 1, scope: !9744, file: !7506, line: 538, type: !1039)
!9784 = !DILocation(line: 538, column: 45, scope: !9744, inlinedAt: !9745)
!9785 = !DILocalVariable(name: "flags", arg: 2, scope: !9744, file: !7506, line: 538, type: !1742)
!9786 = !DILocation(line: 538, column: 57, scope: !9744, inlinedAt: !9745)
!9787 = !DILocalVariable(name: "index", scope: !9742, file: !7506, line: 542, type: !7)
!9788 = !DILocation(line: 542, column: 16, scope: !9742, inlinedAt: !9745)
!9789 = !DILocalVariable(name: "size", arg: 1, scope: !9733, file: !7506, line: 662, type: !1039)
!9790 = !DILocation(line: 662, column: 36, scope: !9733)
!9791 = !DILocalVariable(name: "flags", arg: 2, scope: !9733, file: !7506, line: 662, type: !1742)
!9792 = !DILocation(line: 662, column: 48, scope: !9733)
!9793 = !DILocation(line: 664, column: 17, scope: !9733)
!9794 = !DILocation(line: 664, column: 23, scope: !9733)
!9795 = !DILocation(line: 664, column: 29, scope: !9733)
!9796 = !DILocation(line: 540, column: 27, scope: !9743, inlinedAt: !9745)
!9797 = !DILocation(line: 540, column: 6, scope: !9743, inlinedAt: !9745)
!9798 = !DILocation(line: 540, column: 6, scope: !9744, inlinedAt: !9745)
!9799 = !DILocation(line: 544, column: 7, scope: !9772, inlinedAt: !9745)
!9800 = !DILocation(line: 544, column: 12, scope: !9772, inlinedAt: !9745)
!9801 = !DILocation(line: 544, column: 7, scope: !9742, inlinedAt: !9745)
!9802 = !DILocation(line: 545, column: 25, scope: !9772, inlinedAt: !9745)
!9803 = !DILocation(line: 545, column: 31, scope: !9772, inlinedAt: !9745)
!9804 = !DILocation(line: 480, column: 33, scope: !9770, inlinedAt: !9771)
!9805 = !DILocation(line: 480, column: 23, scope: !9770, inlinedAt: !9771)
!9806 = !DILocation(line: 481, column: 29, scope: !9770, inlinedAt: !9771)
!9807 = !DILocation(line: 481, column: 35, scope: !9770, inlinedAt: !9771)
!9808 = !DILocation(line: 481, column: 42, scope: !9770, inlinedAt: !9771)
!9809 = !DILocation(line: 474, column: 23, scope: !9765, inlinedAt: !9769)
!9810 = !DILocation(line: 474, column: 29, scope: !9765, inlinedAt: !9769)
!9811 = !DILocation(line: 474, column: 36, scope: !9765, inlinedAt: !9769)
!9812 = !DILocation(line: 474, column: 9, scope: !9765, inlinedAt: !9769)
!9813 = !DILocation(line: 545, column: 4, scope: !9772, inlinedAt: !9745)
!9814 = !DILocation(line: 547, column: 25, scope: !9742, inlinedAt: !9745)
!9815 = !DILocation(line: 348, column: 7, scope: !9816, inlinedAt: !9763)
!9816 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 348, column: 6)
!9817 = !DILocation(line: 348, column: 6, scope: !9759, inlinedAt: !9763)
!9818 = !DILocation(line: 349, column: 3, scope: !9816, inlinedAt: !9763)
!9819 = !DILocation(line: 351, column: 6, scope: !9820, inlinedAt: !9763)
!9820 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 351, column: 6)
!9821 = !DILocation(line: 351, column: 11, scope: !9820, inlinedAt: !9763)
!9822 = !DILocation(line: 351, column: 6, scope: !9759, inlinedAt: !9763)
!9823 = !DILocation(line: 352, column: 3, scope: !9820, inlinedAt: !9763)
!9824 = !DILocation(line: 354, column: 32, scope: !9825, inlinedAt: !9763)
!9825 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 354, column: 6)
!9826 = !DILocation(line: 354, column: 37, scope: !9825, inlinedAt: !9763)
!9827 = !DILocation(line: 354, column: 42, scope: !9825, inlinedAt: !9763)
!9828 = !DILocation(line: 354, column: 45, scope: !9825, inlinedAt: !9763)
!9829 = !DILocation(line: 354, column: 50, scope: !9825, inlinedAt: !9763)
!9830 = !DILocation(line: 354, column: 6, scope: !9759, inlinedAt: !9763)
!9831 = !DILocation(line: 355, column: 3, scope: !9825, inlinedAt: !9763)
!9832 = !DILocation(line: 356, column: 32, scope: !9833, inlinedAt: !9763)
!9833 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 356, column: 6)
!9834 = !DILocation(line: 356, column: 37, scope: !9833, inlinedAt: !9763)
!9835 = !DILocation(line: 356, column: 43, scope: !9833, inlinedAt: !9763)
!9836 = !DILocation(line: 356, column: 46, scope: !9833, inlinedAt: !9763)
!9837 = !DILocation(line: 356, column: 51, scope: !9833, inlinedAt: !9763)
!9838 = !DILocation(line: 356, column: 6, scope: !9759, inlinedAt: !9763)
!9839 = !DILocation(line: 357, column: 3, scope: !9833, inlinedAt: !9763)
!9840 = !DILocation(line: 358, column: 6, scope: !9841, inlinedAt: !9763)
!9841 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 358, column: 6)
!9842 = !DILocation(line: 358, column: 11, scope: !9841, inlinedAt: !9763)
!9843 = !DILocation(line: 358, column: 6, scope: !9759, inlinedAt: !9763)
!9844 = !DILocation(line: 358, column: 26, scope: !9841, inlinedAt: !9763)
!9845 = !DILocation(line: 359, column: 6, scope: !9846, inlinedAt: !9763)
!9846 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 359, column: 6)
!9847 = !DILocation(line: 359, column: 11, scope: !9846, inlinedAt: !9763)
!9848 = !DILocation(line: 359, column: 6, scope: !9759, inlinedAt: !9763)
!9849 = !DILocation(line: 359, column: 26, scope: !9846, inlinedAt: !9763)
!9850 = !DILocation(line: 360, column: 6, scope: !9851, inlinedAt: !9763)
!9851 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 360, column: 6)
!9852 = !DILocation(line: 360, column: 11, scope: !9851, inlinedAt: !9763)
!9853 = !DILocation(line: 360, column: 6, scope: !9759, inlinedAt: !9763)
!9854 = !DILocation(line: 360, column: 26, scope: !9851, inlinedAt: !9763)
!9855 = !DILocation(line: 361, column: 6, scope: !9856, inlinedAt: !9763)
!9856 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 361, column: 6)
!9857 = !DILocation(line: 361, column: 11, scope: !9856, inlinedAt: !9763)
!9858 = !DILocation(line: 361, column: 6, scope: !9759, inlinedAt: !9763)
!9859 = !DILocation(line: 361, column: 26, scope: !9856, inlinedAt: !9763)
!9860 = !DILocation(line: 362, column: 6, scope: !9861, inlinedAt: !9763)
!9861 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 362, column: 6)
!9862 = !DILocation(line: 362, column: 11, scope: !9861, inlinedAt: !9763)
!9863 = !DILocation(line: 362, column: 6, scope: !9759, inlinedAt: !9763)
!9864 = !DILocation(line: 362, column: 26, scope: !9861, inlinedAt: !9763)
!9865 = !DILocation(line: 363, column: 6, scope: !9866, inlinedAt: !9763)
!9866 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 363, column: 6)
!9867 = !DILocation(line: 363, column: 11, scope: !9866, inlinedAt: !9763)
!9868 = !DILocation(line: 363, column: 6, scope: !9759, inlinedAt: !9763)
!9869 = !DILocation(line: 363, column: 26, scope: !9866, inlinedAt: !9763)
!9870 = !DILocation(line: 364, column: 6, scope: !9871, inlinedAt: !9763)
!9871 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 364, column: 6)
!9872 = !DILocation(line: 364, column: 11, scope: !9871, inlinedAt: !9763)
!9873 = !DILocation(line: 364, column: 6, scope: !9759, inlinedAt: !9763)
!9874 = !DILocation(line: 364, column: 26, scope: !9871, inlinedAt: !9763)
!9875 = !DILocation(line: 365, column: 6, scope: !9876, inlinedAt: !9763)
!9876 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 365, column: 6)
!9877 = !DILocation(line: 365, column: 11, scope: !9876, inlinedAt: !9763)
!9878 = !DILocation(line: 365, column: 6, scope: !9759, inlinedAt: !9763)
!9879 = !DILocation(line: 365, column: 26, scope: !9876, inlinedAt: !9763)
!9880 = !DILocation(line: 366, column: 6, scope: !9881, inlinedAt: !9763)
!9881 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 366, column: 6)
!9882 = !DILocation(line: 366, column: 11, scope: !9881, inlinedAt: !9763)
!9883 = !DILocation(line: 366, column: 6, scope: !9759, inlinedAt: !9763)
!9884 = !DILocation(line: 366, column: 26, scope: !9881, inlinedAt: !9763)
!9885 = !DILocation(line: 367, column: 6, scope: !9886, inlinedAt: !9763)
!9886 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 367, column: 6)
!9887 = !DILocation(line: 367, column: 11, scope: !9886, inlinedAt: !9763)
!9888 = !DILocation(line: 367, column: 6, scope: !9759, inlinedAt: !9763)
!9889 = !DILocation(line: 367, column: 26, scope: !9886, inlinedAt: !9763)
!9890 = !DILocation(line: 368, column: 6, scope: !9891, inlinedAt: !9763)
!9891 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 368, column: 6)
!9892 = !DILocation(line: 368, column: 11, scope: !9891, inlinedAt: !9763)
!9893 = !DILocation(line: 368, column: 6, scope: !9759, inlinedAt: !9763)
!9894 = !DILocation(line: 368, column: 26, scope: !9891, inlinedAt: !9763)
!9895 = !DILocation(line: 369, column: 6, scope: !9896, inlinedAt: !9763)
!9896 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 369, column: 6)
!9897 = !DILocation(line: 369, column: 11, scope: !9896, inlinedAt: !9763)
!9898 = !DILocation(line: 369, column: 6, scope: !9759, inlinedAt: !9763)
!9899 = !DILocation(line: 369, column: 26, scope: !9896, inlinedAt: !9763)
!9900 = !DILocation(line: 370, column: 6, scope: !9901, inlinedAt: !9763)
!9901 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 370, column: 6)
!9902 = !DILocation(line: 370, column: 11, scope: !9901, inlinedAt: !9763)
!9903 = !DILocation(line: 370, column: 6, scope: !9759, inlinedAt: !9763)
!9904 = !DILocation(line: 370, column: 26, scope: !9901, inlinedAt: !9763)
!9905 = !DILocation(line: 371, column: 6, scope: !9906, inlinedAt: !9763)
!9906 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 371, column: 6)
!9907 = !DILocation(line: 371, column: 11, scope: !9906, inlinedAt: !9763)
!9908 = !DILocation(line: 371, column: 6, scope: !9759, inlinedAt: !9763)
!9909 = !DILocation(line: 371, column: 26, scope: !9906, inlinedAt: !9763)
!9910 = !DILocation(line: 372, column: 6, scope: !9911, inlinedAt: !9763)
!9911 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 372, column: 6)
!9912 = !DILocation(line: 372, column: 11, scope: !9911, inlinedAt: !9763)
!9913 = !DILocation(line: 372, column: 6, scope: !9759, inlinedAt: !9763)
!9914 = !DILocation(line: 372, column: 26, scope: !9911, inlinedAt: !9763)
!9915 = !DILocation(line: 373, column: 6, scope: !9916, inlinedAt: !9763)
!9916 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 373, column: 6)
!9917 = !DILocation(line: 373, column: 11, scope: !9916, inlinedAt: !9763)
!9918 = !DILocation(line: 373, column: 6, scope: !9759, inlinedAt: !9763)
!9919 = !DILocation(line: 373, column: 26, scope: !9916, inlinedAt: !9763)
!9920 = !DILocation(line: 374, column: 6, scope: !9921, inlinedAt: !9763)
!9921 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 374, column: 6)
!9922 = !DILocation(line: 374, column: 11, scope: !9921, inlinedAt: !9763)
!9923 = !DILocation(line: 374, column: 6, scope: !9759, inlinedAt: !9763)
!9924 = !DILocation(line: 374, column: 26, scope: !9921, inlinedAt: !9763)
!9925 = !DILocation(line: 375, column: 6, scope: !9926, inlinedAt: !9763)
!9926 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 375, column: 6)
!9927 = !DILocation(line: 375, column: 11, scope: !9926, inlinedAt: !9763)
!9928 = !DILocation(line: 375, column: 6, scope: !9759, inlinedAt: !9763)
!9929 = !DILocation(line: 375, column: 27, scope: !9926, inlinedAt: !9763)
!9930 = !DILocation(line: 376, column: 6, scope: !9931, inlinedAt: !9763)
!9931 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 376, column: 6)
!9932 = !DILocation(line: 376, column: 11, scope: !9931, inlinedAt: !9763)
!9933 = !DILocation(line: 376, column: 6, scope: !9759, inlinedAt: !9763)
!9934 = !DILocation(line: 376, column: 32, scope: !9931, inlinedAt: !9763)
!9935 = !DILocation(line: 377, column: 6, scope: !9936, inlinedAt: !9763)
!9936 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 377, column: 6)
!9937 = !DILocation(line: 377, column: 11, scope: !9936, inlinedAt: !9763)
!9938 = !DILocation(line: 377, column: 6, scope: !9759, inlinedAt: !9763)
!9939 = !DILocation(line: 377, column: 32, scope: !9936, inlinedAt: !9763)
!9940 = !DILocation(line: 378, column: 6, scope: !9941, inlinedAt: !9763)
!9941 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 378, column: 6)
!9942 = !DILocation(line: 378, column: 11, scope: !9941, inlinedAt: !9763)
!9943 = !DILocation(line: 378, column: 6, scope: !9759, inlinedAt: !9763)
!9944 = !DILocation(line: 378, column: 32, scope: !9941, inlinedAt: !9763)
!9945 = !DILocation(line: 379, column: 6, scope: !9946, inlinedAt: !9763)
!9946 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 379, column: 6)
!9947 = !DILocation(line: 379, column: 11, scope: !9946, inlinedAt: !9763)
!9948 = !DILocation(line: 379, column: 6, scope: !9759, inlinedAt: !9763)
!9949 = !DILocation(line: 379, column: 33, scope: !9946, inlinedAt: !9763)
!9950 = !DILocation(line: 380, column: 6, scope: !9951, inlinedAt: !9763)
!9951 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 380, column: 6)
!9952 = !DILocation(line: 380, column: 11, scope: !9951, inlinedAt: !9763)
!9953 = !DILocation(line: 380, column: 6, scope: !9759, inlinedAt: !9763)
!9954 = !DILocation(line: 380, column: 33, scope: !9951, inlinedAt: !9763)
!9955 = !DILocation(line: 381, column: 6, scope: !9956, inlinedAt: !9763)
!9956 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 381, column: 6)
!9957 = !DILocation(line: 381, column: 11, scope: !9956, inlinedAt: !9763)
!9958 = !DILocation(line: 381, column: 6, scope: !9759, inlinedAt: !9763)
!9959 = !DILocation(line: 381, column: 33, scope: !9956, inlinedAt: !9763)
!9960 = !DILocation(line: 382, column: 2, scope: !9961, inlinedAt: !9763)
!9961 = distinct !DILexicalBlock(scope: !9962, file: !7506, line: 382, column: 2)
!9962 = distinct !DILexicalBlock(scope: !9759, file: !7506, line: 382, column: 2)
!9963 = !{i32 -2143123631, i32 -2143123602, i32 -2143123556, i32 -2143123498, i32 -2143123444, i32 -2143123390, i32 -2143123335, i32 -2143123304}
!9964 = !DILocation(line: 382, column: 2, scope: !9965, inlinedAt: !9763)
!9965 = distinct !DILexicalBlock(scope: !9966, file: !7506, line: 382, column: 2)
!9966 = distinct !DILexicalBlock(scope: !9962, file: !7506, line: 382, column: 2)
!9967 = !{i32 -2143122861, i32 -2143122854, i32 -2143122800, i32 -2143122769, i32 -2143122739}
!9968 = !DILocation(line: 382, column: 2, scope: !9966, inlinedAt: !9763)
!9969 = !DILocation(line: 386, column: 1, scope: !9759, inlinedAt: !9763)
!9970 = !DILocation(line: 547, column: 9, scope: !9742, inlinedAt: !9745)
!9971 = !DILocation(line: 549, column: 8, scope: !9972, inlinedAt: !9745)
!9972 = distinct !DILexicalBlock(scope: !9742, file: !7506, line: 549, column: 7)
!9973 = !DILocation(line: 549, column: 7, scope: !9742, inlinedAt: !9745)
!9974 = !DILocation(line: 550, column: 4, scope: !9972, inlinedAt: !9745)
!9975 = !DILocation(line: 553, column: 33, scope: !9742, inlinedAt: !9745)
!9976 = !DILocation(line: 325, column: 6, scope: !9977, inlinedAt: !9757)
!9977 = distinct !DILexicalBlock(scope: !9753, file: !7506, line: 325, column: 6)
!9978 = !DILocation(line: 325, column: 6, scope: !9753, inlinedAt: !9757)
!9979 = !DILocation(line: 326, column: 3, scope: !9977, inlinedAt: !9757)
!9980 = !DILocation(line: 332, column: 9, scope: !9753, inlinedAt: !9757)
!9981 = !DILocation(line: 332, column: 15, scope: !9753, inlinedAt: !9757)
!9982 = !DILocation(line: 332, column: 2, scope: !9753, inlinedAt: !9757)
!9983 = !DILocation(line: 336, column: 1, scope: !9753, inlinedAt: !9757)
!9984 = !DILocation(line: 553, column: 5, scope: !9742, inlinedAt: !9745)
!9985 = !DILocation(line: 553, column: 41, scope: !9742, inlinedAt: !9745)
!9986 = !DILocation(line: 554, column: 5, scope: !9742, inlinedAt: !9745)
!9987 = !DILocation(line: 554, column: 12, scope: !9742, inlinedAt: !9745)
!9988 = !DILocation(line: 448, column: 31, scope: !9737, inlinedAt: !9741)
!9989 = !DILocation(line: 448, column: 34, scope: !9737, inlinedAt: !9741)
!9990 = !DILocation(line: 448, column: 14, scope: !9737, inlinedAt: !9741)
!9991 = !DILocation(line: 450, column: 22, scope: !9737, inlinedAt: !9741)
!9992 = !DILocation(line: 450, column: 25, scope: !9737, inlinedAt: !9741)
!9993 = !DILocation(line: 450, column: 30, scope: !9737, inlinedAt: !9741)
!9994 = !DILocation(line: 450, column: 36, scope: !9737, inlinedAt: !9741)
!9995 = !DILocation(line: 450, column: 8, scope: !9737, inlinedAt: !9741)
!9996 = !DILocation(line: 450, column: 6, scope: !9737, inlinedAt: !9741)
!9997 = !DILocation(line: 451, column: 9, scope: !9737, inlinedAt: !9741)
!9998 = !DILocation(line: 552, column: 3, scope: !9742, inlinedAt: !9745)
!9999 = !DILocation(line: 557, column: 19, scope: !9744, inlinedAt: !9745)
!10000 = !DILocation(line: 557, column: 25, scope: !9744, inlinedAt: !9745)
!10001 = !DILocation(line: 557, column: 9, scope: !9744, inlinedAt: !9745)
!10002 = !DILocation(line: 557, column: 2, scope: !9744, inlinedAt: !9745)
!10003 = !DILocation(line: 558, column: 1, scope: !9744, inlinedAt: !9745)
!10004 = !DILocation(line: 664, column: 2, scope: !9733)
!10005 = distinct !DISubprogram(name: "__init_work", scope: !2765, file: !2765, line: 215, type: !10006, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{null, !2774, !32}
!10008 = !DILocalVariable(name: "work", arg: 1, scope: !10005, file: !2765, line: 215, type: !2774)
!10009 = !DILocation(line: 215, column: 52, scope: !10005)
!10010 = !DILocalVariable(name: "onstack", arg: 2, scope: !10005, file: !2765, line: 215, type: !32)
!10011 = !DILocation(line: 215, column: 62, scope: !10005)
!10012 = !DILocation(line: 215, column: 73, scope: !10005)
!10013 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !10014, file: !10014, line: 33, type: !10015, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10014 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!10015 = !DISubroutineType(types: !10016)
!10016 = !{null, !287}
!10017 = !DILocalVariable(name: "list", arg: 1, scope: !10013, file: !10014, line: 33, type: !287)
!10018 = !DILocation(line: 33, column: 53, scope: !10013)
!10019 = !DILocation(line: 35, column: 2, scope: !10013)
!10020 = !DILocation(line: 35, column: 2, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10013, file: !10014, line: 35, column: 2)
!10022 = !DILocation(line: 35, column: 2, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10021, file: !10014, line: 35, column: 2)
!10024 = !DILocation(line: 35, column: 2, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !10014, line: 35, column: 2)
!10026 = !DILocation(line: 36, column: 15, scope: !10013)
!10027 = !DILocation(line: 36, column: 2, scope: !10013)
!10028 = !DILocation(line: 36, column: 8, scope: !10013)
!10029 = !DILocation(line: 36, column: 13, scope: !10013)
!10030 = !DILocation(line: 37, column: 1, scope: !10013)
!10031 = distinct !DISubprogram(name: "bh_handler", scope: !3, file: !3, line: 1918, type: !2772, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10032 = !DILocalVariable(name: "work", arg: 1, scope: !10031, file: !3, line: 1918, type: !2774)
!10033 = !DILocation(line: 1918, column: 44, scope: !10031)
!10034 = !DILocalVariable(name: "info", scope: !10031, file: !3, line: 1920, type: !7530)
!10035 = !DILocation(line: 1920, column: 20, scope: !10031)
!10036 = !DILocalVariable(name: "__mptr", scope: !10037, file: !3, line: 1920, type: !591)
!10037 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 1920, column: 27)
!10038 = !DILocation(line: 1920, column: 27, scope: !10037)
!10039 = !DILocation(line: 1920, column: 27, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1920, column: 27)
!10041 = !DILocalVariable(name: "action", scope: !10031, file: !3, line: 1921, type: !32)
!10042 = !DILocation(line: 1921, column: 6, scope: !10031)
!10043 = !DILocation(line: 1923, column: 2, scope: !10031)
!10044 = !DILocation(line: 1923, column: 8, scope: !10031)
!10045 = !DILocation(line: 1923, column: 19, scope: !10031)
!10046 = !DILocation(line: 1925, column: 2, scope: !10031)
!10047 = !DILocation(line: 1925, column: 28, scope: !10031)
!10048 = !DILocation(line: 1925, column: 18, scope: !10031)
!10049 = !DILocation(line: 1925, column: 16, scope: !10031)
!10050 = !DILocation(line: 1926, column: 11, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 1925, column: 36)
!10052 = !DILocation(line: 1926, column: 3, scope: !10051)
!10053 = !DILocation(line: 1928, column: 4, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1928, column: 4)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 1926, column: 19)
!10056 = !DILocation(line: 1928, column: 4, scope: !10055)
!10057 = !DILocation(line: 1929, column: 11, scope: !10055)
!10058 = !DILocation(line: 1929, column: 17, scope: !10055)
!10059 = !DILocation(line: 1929, column: 24, scope: !10055)
!10060 = !DILocation(line: 1929, column: 4, scope: !10055)
!10061 = !DILocation(line: 1931, column: 14, scope: !10062)
!10062 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1929, column: 30)
!10063 = !DILocation(line: 1931, column: 5, scope: !10062)
!10064 = !DILocation(line: 1932, column: 5, scope: !10062)
!10065 = !DILocation(line: 1934, column: 5, scope: !10062)
!10066 = !DILocation(line: 1934, column: 24, scope: !10062)
!10067 = !DILocation(line: 1934, column: 11, scope: !10062)
!10068 = distinct !{!10068, !10065, !10069}
!10069 = !DILocation(line: 1934, column: 30, scope: !10062)
!10070 = !DILocation(line: 1935, column: 5, scope: !10062)
!10071 = !DILocation(line: 1940, column: 5, scope: !10062)
!10072 = !DILocation(line: 1940, column: 22, scope: !10062)
!10073 = !DILocation(line: 1940, column: 11, scope: !10062)
!10074 = distinct !{!10074, !10071, !10075}
!10075 = !DILocation(line: 1940, column: 28, scope: !10062)
!10076 = !DILocation(line: 1941, column: 5, scope: !10062)
!10077 = !DILocation(line: 1944, column: 8, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1944, column: 8)
!10079 = !DILocation(line: 1944, column: 14, scope: !10078)
!10080 = !DILocation(line: 1944, column: 8, scope: !10055)
!10081 = !DILocation(line: 1945, column: 14, scope: !10078)
!10082 = !DILocation(line: 1945, column: 5, scope: !10078)
!10083 = !DILocation(line: 1946, column: 4, scope: !10055)
!10084 = !DILocation(line: 1948, column: 16, scope: !10055)
!10085 = !DILocation(line: 1948, column: 4, scope: !10055)
!10086 = !DILocation(line: 1949, column: 4, scope: !10055)
!10087 = !DILocation(line: 1951, column: 4, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1951, column: 4)
!10089 = !DILocation(line: 1951, column: 4, scope: !10055)
!10090 = !DILocation(line: 1952, column: 4, scope: !10055)
!10091 = !DILocation(line: 1952, column: 10, scope: !10055)
!10092 = !DILocation(line: 1952, column: 22, scope: !10055)
!10093 = !DILocation(line: 1953, column: 4, scope: !10055)
!10094 = !DILocation(line: 1953, column: 10, scope: !10055)
!10095 = !DILocation(line: 1953, column: 23, scope: !10055)
!10096 = !DILocation(line: 1954, column: 4, scope: !10055)
!10097 = !DILocation(line: 1954, column: 10, scope: !10055)
!10098 = !DILocation(line: 1954, column: 23, scope: !10055)
!10099 = !DILocation(line: 1955, column: 4, scope: !10055)
!10100 = !DILocation(line: 1955, column: 10, scope: !10055)
!10101 = !DILocation(line: 1955, column: 23, scope: !10055)
!10102 = !DILocation(line: 1956, column: 4, scope: !10055)
!10103 = !DILocation(line: 1958, column: 4, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 1958, column: 4)
!10105 = !DILocation(line: 1958, column: 4, scope: !10055)
!10106 = !DILocation(line: 1959, column: 4, scope: !10055)
!10107 = distinct !{!10107, !10046, !10108}
!10108 = !DILocation(line: 1961, column: 2, scope: !10031)
!10109 = !DILocation(line: 1962, column: 2, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 1962, column: 2)
!10111 = !DILocation(line: 1962, column: 2, scope: !10031)
!10112 = !DILocation(line: 1963, column: 1, scope: !10031)
!10113 = distinct !DISubprogram(name: "tx_timeout", scope: !3, file: !3, line: 5094, type: !3260, scopeLine: 5095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10114 = !DILocalVariable(name: "lock", arg: 1, scope: !10115, file: !8904, line: 407, type: !2181)
!10115 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !8904, file: !8904, line: 407, type: !10116, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{null, !2181, !312}
!10118 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10119)
!10119 = distinct !DILocation(line: 5105, column: 2, scope: !10113)
!10120 = !DILocalVariable(name: "flags", arg: 2, scope: !10115, file: !8904, line: 407, type: !312)
!10121 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10119)
!10122 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10123)
!10123 = distinct !DILocation(line: 5103, column: 2, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !3, line: 5103, column: 2)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 5103, column: 2)
!10126 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 5103, column: 2)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 5103, column: 2)
!10128 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 5103, column: 2)
!10129 = !DILocalVariable(name: "t", arg: 1, scope: !10113, file: !3, line: 5094, type: !3262)
!10130 = !DILocation(line: 5094, column: 43, scope: !10113)
!10131 = !DILocalVariable(name: "info", scope: !10113, file: !3, line: 5096, type: !7530)
!10132 = !DILocation(line: 5096, column: 20, scope: !10113)
!10133 = !DILocalVariable(name: "__mptr", scope: !10134, file: !3, line: 5096, type: !591)
!10134 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 5096, column: 27)
!10135 = !DILocation(line: 5096, column: 27, scope: !10134)
!10136 = !DILocation(line: 5096, column: 27, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 5096, column: 27)
!10138 = !DILocalVariable(name: "flags", scope: !10113, file: !3, line: 5097, type: !312)
!10139 = !DILocation(line: 5097, column: 16, scope: !10113)
!10140 = !DILocation(line: 5099, column: 2, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 5099, column: 2)
!10142 = !DILocation(line: 5099, column: 2, scope: !10113)
!10143 = !DILocation(line: 5100, column: 5, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 5100, column: 5)
!10145 = !DILocation(line: 5100, column: 11, scope: !10144)
!10146 = !DILocation(line: 5100, column: 21, scope: !10144)
!10147 = !DILocation(line: 5100, column: 24, scope: !10144)
!10148 = !DILocation(line: 5100, column: 30, scope: !10144)
!10149 = !DILocation(line: 5100, column: 37, scope: !10144)
!10150 = !DILocation(line: 5100, column: 42, scope: !10144)
!10151 = !DILocation(line: 5100, column: 5, scope: !10113)
!10152 = !DILocation(line: 5101, column: 3, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 5100, column: 61)
!10154 = !DILocation(line: 5101, column: 9, scope: !10153)
!10155 = !DILocation(line: 5101, column: 16, scope: !10153)
!10156 = !DILocation(line: 5101, column: 25, scope: !10153)
!10157 = !DILocation(line: 5102, column: 2, scope: !10153)
!10158 = !DILocation(line: 5103, column: 2, scope: !10113)
!10159 = !DILocation(line: 5103, column: 2, scope: !10128)
!10160 = !DILocalVariable(name: "__dummy", scope: !10161, file: !3, line: 5103, type: !312)
!10161 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 5103, column: 2)
!10162 = !DILocation(line: 5103, column: 2, scope: !10161)
!10163 = !DILocalVariable(name: "__dummy2", scope: !10161, file: !3, line: 5103, type: !312)
!10164 = !DILocation(line: 5103, column: 2, scope: !10127)
!10165 = !DILocation(line: 5103, column: 2, scope: !10126)
!10166 = !DILocation(line: 5103, column: 2, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 5103, column: 2)
!10168 = !DILocalVariable(name: "__dummy", scope: !10169, file: !3, line: 5103, type: !312)
!10169 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 5103, column: 2)
!10170 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 5103, column: 2)
!10171 = !DILocation(line: 5103, column: 2, scope: !10169)
!10172 = !DILocalVariable(name: "__dummy2", scope: !10169, file: !3, line: 5103, type: !312)
!10173 = !DILocation(line: 5103, column: 2, scope: !10170)
!10174 = !DILocation(line: 5103, column: 2, scope: !10125)
!10175 = !{i32 -2139450169}
!10176 = !DILocation(line: 5103, column: 2, scope: !10124)
!10177 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10123)
!10178 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10123)
!10179 = !DILocation(line: 5104, column: 10, scope: !10113)
!10180 = !DILocation(line: 5104, column: 2, scope: !10113)
!10181 = !DILocation(line: 5105, column: 26, scope: !10113)
!10182 = !DILocation(line: 5105, column: 32, scope: !10113)
!10183 = !DILocation(line: 5105, column: 37, scope: !10113)
!10184 = !DILocalVariable(name: "__dummy", scope: !10185, file: !8904, line: 409, type: !312)
!10185 = distinct !DILexicalBlock(scope: !10186, file: !8904, line: 409, column: 2)
!10186 = distinct !DILexicalBlock(scope: !10115, file: !8904, line: 409, column: 2)
!10187 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10119)
!10188 = !DILocalVariable(name: "__dummy2", scope: !10185, file: !8904, line: 409, type: !312)
!10189 = !DILocalVariable(name: "__dummy", scope: !10190, file: !8904, line: 409, type: !312)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !8904, line: 409, column: 2)
!10191 = distinct !DILexicalBlock(scope: !10192, file: !8904, line: 409, column: 2)
!10192 = distinct !DILexicalBlock(scope: !10193, file: !8904, line: 409, column: 2)
!10193 = distinct !DILexicalBlock(scope: !10186, file: !8904, line: 409, column: 2)
!10194 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10119)
!10195 = !DILocalVariable(name: "__dummy2", scope: !10190, file: !8904, line: 409, type: !312)
!10196 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10119)
!10197 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10119)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !8904, line: 409, column: 2)
!10199 = !{i32 -2145343504}
!10200 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10119)
!10201 = distinct !DILexicalBlock(scope: !10198, file: !8904, line: 409, column: 2)
!10202 = !DILocation(line: 5108, column: 6, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 5108, column: 6)
!10204 = !DILocation(line: 5108, column: 12, scope: !10203)
!10205 = !DILocation(line: 5108, column: 6, scope: !10113)
!10206 = !DILocation(line: 5109, column: 19, scope: !10203)
!10207 = !DILocation(line: 5109, column: 3, scope: !10203)
!10208 = !DILocation(line: 5112, column: 15, scope: !10203)
!10209 = !DILocation(line: 5112, column: 3, scope: !10203)
!10210 = !DILocation(line: 5113, column: 1, scope: !10113)
!10211 = distinct !DISubprogram(name: "rx_timeout", scope: !3, file: !3, line: 5118, type: !3260, scopeLine: 5119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10212 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10213)
!10213 = distinct !DILocation(line: 5126, column: 2, scope: !10211)
!10214 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10213)
!10215 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10216)
!10216 = distinct !DILocation(line: 5124, column: 2, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 5124, column: 2)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 5124, column: 2)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5124, column: 2)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 5124, column: 2)
!10221 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 5124, column: 2)
!10222 = !DILocalVariable(name: "t", arg: 1, scope: !10211, file: !3, line: 5118, type: !3262)
!10223 = !DILocation(line: 5118, column: 43, scope: !10211)
!10224 = !DILocalVariable(name: "info", scope: !10211, file: !3, line: 5120, type: !7530)
!10225 = !DILocation(line: 5120, column: 20, scope: !10211)
!10226 = !DILocalVariable(name: "__mptr", scope: !10227, file: !3, line: 5120, type: !591)
!10227 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 5120, column: 27)
!10228 = !DILocation(line: 5120, column: 27, scope: !10227)
!10229 = !DILocation(line: 5120, column: 27, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 5120, column: 27)
!10231 = !DILocalVariable(name: "flags", scope: !10211, file: !3, line: 5121, type: !312)
!10232 = !DILocation(line: 5121, column: 16, scope: !10211)
!10233 = !DILocation(line: 5123, column: 2, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 5123, column: 2)
!10235 = !DILocation(line: 5123, column: 2, scope: !10211)
!10236 = !DILocation(line: 5124, column: 2, scope: !10211)
!10237 = !DILocation(line: 5124, column: 2, scope: !10221)
!10238 = !DILocalVariable(name: "__dummy", scope: !10239, file: !3, line: 5124, type: !312)
!10239 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 5124, column: 2)
!10240 = !DILocation(line: 5124, column: 2, scope: !10239)
!10241 = !DILocalVariable(name: "__dummy2", scope: !10239, file: !3, line: 5124, type: !312)
!10242 = !DILocation(line: 5124, column: 2, scope: !10220)
!10243 = !DILocation(line: 5124, column: 2, scope: !10219)
!10244 = !DILocation(line: 5124, column: 2, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 5124, column: 2)
!10246 = !DILocalVariable(name: "__dummy", scope: !10247, file: !3, line: 5124, type: !312)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 5124, column: 2)
!10248 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 5124, column: 2)
!10249 = !DILocation(line: 5124, column: 2, scope: !10247)
!10250 = !DILocalVariable(name: "__dummy2", scope: !10247, file: !3, line: 5124, type: !312)
!10251 = !DILocation(line: 5124, column: 2, scope: !10248)
!10252 = !DILocation(line: 5124, column: 2, scope: !10218)
!10253 = !{i32 -2139447553}
!10254 = !DILocation(line: 5124, column: 2, scope: !10217)
!10255 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10216)
!10256 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10216)
!10257 = !DILocation(line: 5125, column: 2, scope: !10211)
!10258 = !DILocation(line: 5125, column: 8, scope: !10211)
!10259 = !DILocation(line: 5125, column: 19, scope: !10211)
!10260 = !DILocation(line: 5126, column: 26, scope: !10211)
!10261 = !DILocation(line: 5126, column: 32, scope: !10211)
!10262 = !DILocation(line: 5126, column: 38, scope: !10211)
!10263 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10213)
!10264 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10213)
!10265 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10213)
!10266 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10213)
!10267 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10213)
!10268 = !DILocation(line: 5127, column: 14, scope: !10211)
!10269 = !DILocation(line: 5127, column: 20, scope: !10211)
!10270 = !DILocation(line: 5127, column: 2, scope: !10211)
!10271 = !DILocation(line: 5128, column: 1, scope: !10211)
!10272 = distinct !DISubprogram(name: "get_order", scope: !10273, file: !10273, line: 29, type: !10274, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10273 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10274 = !DISubroutineType(types: !10275)
!10275 = !{!32, !312}
!10276 = !DILocalVariable(name: "x", arg: 1, scope: !10277, file: !10278, line: 366, type: !333)
!10277 = distinct !DISubprogram(name: "fls64", scope: !10278, file: !10278, line: 366, type: !10279, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10278 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10279 = !DISubroutineType(types: !10280)
!10280 = !{!32, !333}
!10281 = !DILocation(line: 366, column: 40, scope: !10277, inlinedAt: !10282)
!10282 = distinct !DILocation(line: 46, column: 9, scope: !10272)
!10283 = !DILocalVariable(name: "bitpos", scope: !10277, file: !10278, line: 368, type: !32)
!10284 = !DILocation(line: 368, column: 6, scope: !10277, inlinedAt: !10282)
!10285 = !DILocalVariable(name: "size", arg: 1, scope: !10272, file: !10273, line: 29, type: !312)
!10286 = !DILocation(line: 29, column: 63, scope: !10272)
!10287 = !DILocation(line: 31, column: 27, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10272, file: !10273, line: 31, column: 6)
!10289 = !DILocation(line: 31, column: 6, scope: !10288)
!10290 = !DILocation(line: 31, column: 6, scope: !10272)
!10291 = !DILocation(line: 32, column: 8, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !10273, line: 32, column: 7)
!10293 = distinct !DILexicalBlock(scope: !10288, file: !10273, line: 31, column: 34)
!10294 = !DILocation(line: 32, column: 7, scope: !10293)
!10295 = !DILocation(line: 33, column: 4, scope: !10292)
!10296 = !DILocation(line: 35, column: 7, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !10273, line: 35, column: 7)
!10298 = !DILocation(line: 35, column: 12, scope: !10297)
!10299 = !DILocation(line: 35, column: 7, scope: !10293)
!10300 = !DILocation(line: 36, column: 4, scope: !10297)
!10301 = !DILocation(line: 38, column: 10, scope: !10293)
!10302 = !DILocation(line: 38, column: 28, scope: !10293)
!10303 = !DILocation(line: 38, column: 41, scope: !10293)
!10304 = !DILocation(line: 38, column: 3, scope: !10293)
!10305 = !DILocation(line: 41, column: 6, scope: !10272)
!10306 = !DILocation(line: 42, column: 7, scope: !10272)
!10307 = !DILocation(line: 46, column: 15, scope: !10272)
!10308 = !DILocation(line: 374, column: 2, scope: !10277, inlinedAt: !10282)
!10309 = !DILocation(line: 376, column: 14, scope: !10277, inlinedAt: !10282)
!10310 = !{i32 430886}
!10311 = !DILocation(line: 377, column: 9, scope: !10277, inlinedAt: !10282)
!10312 = !DILocation(line: 377, column: 16, scope: !10277, inlinedAt: !10282)
!10313 = !DILocation(line: 46, column: 2, scope: !10272)
!10314 = !DILocation(line: 48, column: 1, scope: !10272)
!10315 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10316, file: !10316, line: 30, type: !10317, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10316 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10317 = !DISubroutineType(types: !10318)
!10318 = !{!32, !331}
!10319 = !DILocation(line: 366, column: 40, scope: !10277, inlinedAt: !10320)
!10320 = distinct !DILocation(line: 32, column: 9, scope: !10315)
!10321 = !DILocation(line: 368, column: 6, scope: !10277, inlinedAt: !10320)
!10322 = !DILocalVariable(name: "n", arg: 1, scope: !10315, file: !10316, line: 30, type: !331)
!10323 = !DILocation(line: 30, column: 21, scope: !10315)
!10324 = !DILocation(line: 32, column: 15, scope: !10315)
!10325 = !DILocation(line: 374, column: 2, scope: !10277, inlinedAt: !10320)
!10326 = !DILocation(line: 376, column: 14, scope: !10277, inlinedAt: !10320)
!10327 = !DILocation(line: 377, column: 9, scope: !10277, inlinedAt: !10320)
!10328 = !DILocation(line: 377, column: 16, scope: !10277, inlinedAt: !10320)
!10329 = !DILocation(line: 32, column: 18, scope: !10315)
!10330 = !DILocation(line: 32, column: 2, scope: !10315)
!10331 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10332, file: !10332, line: 137, type: !10333, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10332 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10333 = !DISubroutineType(types: !10334)
!10334 = !{!591, !2051, !3276, !1039, !1742}
!10335 = !DILocalVariable(name: "s", arg: 1, scope: !10331, file: !10332, line: 137, type: !2051)
!10336 = !DILocation(line: 137, column: 54, scope: !10331)
!10337 = !DILocalVariable(name: "object", arg: 2, scope: !10331, file: !10332, line: 137, type: !3276)
!10338 = !DILocation(line: 137, column: 69, scope: !10331)
!10339 = !DILocalVariable(name: "size", arg: 3, scope: !10331, file: !10332, line: 138, type: !1039)
!10340 = !DILocation(line: 138, column: 12, scope: !10331)
!10341 = !DILocalVariable(name: "flags", arg: 4, scope: !10331, file: !10332, line: 138, type: !1742)
!10342 = !DILocation(line: 138, column: 24, scope: !10331)
!10343 = !DILocation(line: 140, column: 17, scope: !10331)
!10344 = !DILocation(line: 140, column: 2, scope: !10331)
!10345 = distinct !DISubprogram(name: "carrier_raised", scope: !3, file: !3, line: 3197, type: !4808, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10346 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10347)
!10347 = distinct !DILocation(line: 3204, column: 2, scope: !10345)
!10348 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10347)
!10349 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10350)
!10350 = distinct !DILocation(line: 3202, column: 2, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 3202, column: 2)
!10352 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 3202, column: 2)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3202, column: 2)
!10354 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 3202, column: 2)
!10355 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 3202, column: 2)
!10356 = !DILocalVariable(name: "port", arg: 1, scope: !10345, file: !3, line: 3197, type: !4766)
!10357 = !DILocation(line: 3197, column: 44, scope: !10345)
!10358 = !DILocalVariable(name: "flags", scope: !10345, file: !3, line: 3199, type: !312)
!10359 = !DILocation(line: 3199, column: 16, scope: !10345)
!10360 = !DILocalVariable(name: "info", scope: !10345, file: !3, line: 3200, type: !7530)
!10361 = !DILocation(line: 3200, column: 20, scope: !10345)
!10362 = !DILocalVariable(name: "__mptr", scope: !10363, file: !3, line: 3200, type: !591)
!10363 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 3200, column: 27)
!10364 = !DILocation(line: 3200, column: 27, scope: !10363)
!10365 = !DILocation(line: 3200, column: 27, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 3200, column: 27)
!10367 = !DILocation(line: 3202, column: 2, scope: !10345)
!10368 = !DILocation(line: 3202, column: 2, scope: !10355)
!10369 = !DILocalVariable(name: "__dummy", scope: !10370, file: !3, line: 3202, type: !312)
!10370 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 3202, column: 2)
!10371 = !DILocation(line: 3202, column: 2, scope: !10370)
!10372 = !DILocalVariable(name: "__dummy2", scope: !10370, file: !3, line: 3202, type: !312)
!10373 = !DILocation(line: 3202, column: 2, scope: !10354)
!10374 = !DILocation(line: 3202, column: 2, scope: !10353)
!10375 = !DILocation(line: 3202, column: 2, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10353, file: !3, line: 3202, column: 2)
!10377 = !DILocalVariable(name: "__dummy", scope: !10378, file: !3, line: 3202, type: !312)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 3202, column: 2)
!10379 = distinct !DILexicalBlock(scope: !10376, file: !3, line: 3202, column: 2)
!10380 = !DILocation(line: 3202, column: 2, scope: !10378)
!10381 = !DILocalVariable(name: "__dummy2", scope: !10378, file: !3, line: 3202, type: !312)
!10382 = !DILocation(line: 3202, column: 2, scope: !10379)
!10383 = !DILocation(line: 3202, column: 2, scope: !10352)
!10384 = !{i32 -2139489662}
!10385 = !DILocation(line: 3202, column: 2, scope: !10351)
!10386 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10350)
!10387 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10350)
!10388 = !DILocation(line: 3203, column: 14, scope: !10345)
!10389 = !DILocation(line: 3203, column: 2, scope: !10345)
!10390 = !DILocation(line: 3204, column: 26, scope: !10345)
!10391 = !DILocation(line: 3204, column: 32, scope: !10345)
!10392 = !DILocation(line: 3204, column: 37, scope: !10345)
!10393 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10347)
!10394 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10347)
!10395 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10347)
!10396 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10347)
!10397 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10347)
!10398 = !DILocation(line: 3205, column: 10, scope: !10345)
!10399 = !DILocation(line: 3205, column: 16, scope: !10345)
!10400 = !DILocation(line: 3205, column: 24, scope: !10345)
!10401 = !DILocation(line: 3205, column: 9, scope: !10345)
!10402 = !DILocation(line: 3205, column: 2, scope: !10345)
!10403 = distinct !DISubprogram(name: "dtr_rts", scope: !3, file: !3, line: 3208, type: !4812, scopeLine: 3209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10404 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10405)
!10405 = distinct !DILocation(line: 3219, column: 2, scope: !10403)
!10406 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10405)
!10407 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10408)
!10408 = distinct !DILocation(line: 3213, column: 2, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !3, line: 3213, column: 2)
!10410 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 3213, column: 2)
!10411 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 3213, column: 2)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 3213, column: 2)
!10413 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 3213, column: 2)
!10414 = !DILocalVariable(name: "port", arg: 1, scope: !10403, file: !3, line: 3208, type: !4766)
!10415 = !DILocation(line: 3208, column: 38, scope: !10403)
!10416 = !DILocalVariable(name: "on", arg: 2, scope: !10403, file: !3, line: 3208, type: !32)
!10417 = !DILocation(line: 3208, column: 48, scope: !10403)
!10418 = !DILocalVariable(name: "flags", scope: !10403, file: !3, line: 3210, type: !312)
!10419 = !DILocation(line: 3210, column: 16, scope: !10403)
!10420 = !DILocalVariable(name: "info", scope: !10403, file: !3, line: 3211, type: !7530)
!10421 = !DILocation(line: 3211, column: 20, scope: !10403)
!10422 = !DILocalVariable(name: "__mptr", scope: !10423, file: !3, line: 3211, type: !591)
!10423 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 3211, column: 27)
!10424 = !DILocation(line: 3211, column: 27, scope: !10423)
!10425 = !DILocation(line: 3211, column: 27, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !3, line: 3211, column: 27)
!10427 = !DILocation(line: 3213, column: 2, scope: !10403)
!10428 = !DILocation(line: 3213, column: 2, scope: !10413)
!10429 = !DILocalVariable(name: "__dummy", scope: !10430, file: !3, line: 3213, type: !312)
!10430 = distinct !DILexicalBlock(scope: !10412, file: !3, line: 3213, column: 2)
!10431 = !DILocation(line: 3213, column: 2, scope: !10430)
!10432 = !DILocalVariable(name: "__dummy2", scope: !10430, file: !3, line: 3213, type: !312)
!10433 = !DILocation(line: 3213, column: 2, scope: !10412)
!10434 = !DILocation(line: 3213, column: 2, scope: !10411)
!10435 = !DILocation(line: 3213, column: 2, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10411, file: !3, line: 3213, column: 2)
!10437 = !DILocalVariable(name: "__dummy", scope: !10438, file: !3, line: 3213, type: !312)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 3213, column: 2)
!10439 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 3213, column: 2)
!10440 = !DILocation(line: 3213, column: 2, scope: !10438)
!10441 = !DILocalVariable(name: "__dummy2", scope: !10438, file: !3, line: 3213, type: !312)
!10442 = !DILocation(line: 3213, column: 2, scope: !10439)
!10443 = !DILocation(line: 3213, column: 2, scope: !10410)
!10444 = !{i32 -2139487198}
!10445 = !DILocation(line: 3213, column: 2, scope: !10409)
!10446 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10408)
!10447 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10408)
!10448 = !DILocation(line: 3214, column: 6, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 3214, column: 6)
!10450 = !DILocation(line: 3214, column: 6, scope: !10403)
!10451 = !DILocation(line: 3215, column: 3, scope: !10449)
!10452 = !DILocation(line: 3215, column: 9, scope: !10449)
!10453 = !DILocation(line: 3215, column: 17, scope: !10449)
!10454 = !DILocation(line: 3217, column: 3, scope: !10449)
!10455 = !DILocation(line: 3217, column: 9, scope: !10449)
!10456 = !DILocation(line: 3217, column: 17, scope: !10449)
!10457 = !DILocation(line: 3218, column: 14, scope: !10403)
!10458 = !DILocation(line: 3218, column: 2, scope: !10403)
!10459 = !DILocation(line: 3219, column: 26, scope: !10403)
!10460 = !DILocation(line: 3219, column: 32, scope: !10403)
!10461 = !DILocation(line: 3219, column: 37, scope: !10403)
!10462 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10405)
!10463 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10405)
!10464 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10405)
!10465 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10405)
!10466 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10405)
!10467 = !DILocation(line: 3220, column: 1, scope: !10403)
!10468 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !10469, file: !10469, line: 666, type: !10470, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10469 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!10470 = !DISubroutineType(types: !10471)
!10471 = !{!312}
!10472 = !DILocalVariable(name: "f", scope: !10468, file: !10469, line: 668, type: !312)
!10473 = !DILocation(line: 668, column: 16, scope: !10468)
!10474 = !DILocation(line: 670, column: 6, scope: !10468)
!10475 = !DILocation(line: 670, column: 4, scope: !10468)
!10476 = !DILocation(line: 671, column: 2, scope: !10468)
!10477 = !DILocation(line: 672, column: 9, scope: !10468)
!10478 = !DILocation(line: 672, column: 2, scope: !10468)
!10479 = distinct !DISubprogram(name: "get_signals", scope: !3, file: !3, line: 4500, type: !8337, scopeLine: 4501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10480 = !DILocalVariable(name: "info", arg: 1, scope: !10479, file: !3, line: 4500, type: !7530)
!10481 = !DILocation(line: 4500, column: 43, scope: !10479)
!10482 = !DILocalVariable(name: "status", scope: !10479, file: !3, line: 4502, type: !476)
!10483 = !DILocation(line: 4502, column: 17, scope: !10479)
!10484 = !DILocation(line: 4502, column: 35, scope: !10479)
!10485 = !DILocation(line: 4502, column: 26, scope: !10479)
!10486 = !DILocation(line: 4505, column: 2, scope: !10479)
!10487 = !DILocation(line: 4505, column: 8, scope: !10479)
!10488 = !DILocation(line: 4505, column: 16, scope: !10479)
!10489 = !DILocation(line: 4507, column: 6, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 4507, column: 6)
!10491 = !DILocation(line: 4507, column: 13, scope: !10490)
!10492 = !DILocation(line: 4507, column: 6, scope: !10479)
!10493 = !DILocation(line: 4508, column: 3, scope: !10490)
!10494 = !DILocation(line: 4508, column: 9, scope: !10490)
!10495 = !DILocation(line: 4508, column: 17, scope: !10490)
!10496 = !DILocation(line: 4509, column: 6, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 4509, column: 6)
!10498 = !DILocation(line: 4509, column: 13, scope: !10497)
!10499 = !DILocation(line: 4509, column: 6, scope: !10479)
!10500 = !DILocation(line: 4510, column: 3, scope: !10497)
!10501 = !DILocation(line: 4510, column: 9, scope: !10497)
!10502 = !DILocation(line: 4510, column: 17, scope: !10497)
!10503 = !DILocation(line: 4511, column: 6, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 4511, column: 6)
!10505 = !DILocation(line: 4511, column: 13, scope: !10504)
!10506 = !DILocation(line: 4511, column: 6, scope: !10479)
!10507 = !DILocation(line: 4512, column: 3, scope: !10504)
!10508 = !DILocation(line: 4512, column: 9, scope: !10504)
!10509 = !DILocation(line: 4512, column: 17, scope: !10504)
!10510 = !DILocation(line: 4513, column: 6, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 4513, column: 6)
!10512 = !DILocation(line: 4513, column: 13, scope: !10511)
!10513 = !DILocation(line: 4513, column: 6, scope: !10479)
!10514 = !DILocation(line: 4514, column: 3, scope: !10511)
!10515 = !DILocation(line: 4514, column: 9, scope: !10511)
!10516 = !DILocation(line: 4514, column: 17, scope: !10511)
!10517 = !DILocation(line: 4515, column: 1, scope: !10479)
!10518 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !10469, file: !10469, line: 646, type: !10470, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10519 = !DILocalVariable(name: "__ret", scope: !10520, file: !10469, line: 648, type: !312)
!10520 = distinct !DILexicalBlock(scope: !10518, file: !10469, line: 648, column: 9)
!10521 = !DILocation(line: 648, column: 9, scope: !10520)
!10522 = !DILocalVariable(name: "__edi", scope: !10520, file: !10469, line: 648, type: !312)
!10523 = !DILocalVariable(name: "__esi", scope: !10520, file: !10469, line: 648, type: !312)
!10524 = !DILocalVariable(name: "__edx", scope: !10520, file: !10469, line: 648, type: !312)
!10525 = !DILocalVariable(name: "__ecx", scope: !10520, file: !10469, line: 648, type: !312)
!10526 = !DILocalVariable(name: "__eax", scope: !10520, file: !10469, line: 648, type: !312)
!10527 = !DILocation(line: 648, column: 9, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !10469, line: 648, column: 9)
!10529 = distinct !DILexicalBlock(scope: !10520, file: !10469, line: 648, column: 9)
!10530 = !{i32 -2145657073, i32 -2145654758, i32 -2145654524, i32 -2145654473, i32 -2145654445, i32 -2145654420, i32 -2145654736, i32 -2145654723, i32 -2145654285, i32 -2145654166, i32 -2145654631, i32 -2145654604, i32 -2145654576, i32 -2145654546}
!10531 = !DILocalVariable(name: "__mask", scope: !10532, file: !10469, line: 648, type: !312)
!10532 = distinct !DILexicalBlock(scope: !10528, file: !10469, line: 648, column: 9)
!10533 = !DILocation(line: 648, column: 9, scope: !10532)
!10534 = !DILocation(line: 648, column: 9, scope: !10529)
!10535 = !DILocation(line: 648, column: 2, scope: !10518)
!10536 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !10469, file: !10469, line: 656, type: !5179, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10537 = !DILocalVariable(name: "__edi", scope: !10538, file: !10469, line: 658, type: !312)
!10538 = distinct !DILexicalBlock(scope: !10536, file: !10469, line: 658, column: 2)
!10539 = !DILocation(line: 658, column: 2, scope: !10538)
!10540 = !DILocalVariable(name: "__esi", scope: !10538, file: !10469, line: 658, type: !312)
!10541 = !DILocalVariable(name: "__edx", scope: !10538, file: !10469, line: 658, type: !312)
!10542 = !DILocalVariable(name: "__ecx", scope: !10538, file: !10469, line: 658, type: !312)
!10543 = !DILocalVariable(name: "__eax", scope: !10538, file: !10469, line: 658, type: !312)
!10544 = !{i32 -2145649979, i32 -2145649247, i32 -2145649013, i32 -2145648962, i32 -2145648934, i32 -2145648909, i32 -2145649225, i32 -2145649212, i32 -2145648774, i32 -2145648655, i32 -2145649120, i32 -2145649093, i32 -2145649065, i32 -2145649035}
!10545 = !DILocation(line: 659, column: 1, scope: !10536)
!10546 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !10469, file: !10469, line: 651, type: !10547, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10547 = !DISubroutineType(types: !10548)
!10548 = !{null, !312}
!10549 = !DILocalVariable(name: "f", arg: 1, scope: !10546, file: !10469, line: 651, type: !312)
!10550 = !DILocation(line: 651, column: 65, scope: !10546)
!10551 = !DILocalVariable(name: "__edi", scope: !10552, file: !10469, line: 653, type: !312)
!10552 = distinct !DILexicalBlock(scope: !10546, file: !10469, line: 653, column: 2)
!10553 = !DILocation(line: 653, column: 2, scope: !10552)
!10554 = !DILocalVariable(name: "__esi", scope: !10552, file: !10469, line: 653, type: !312)
!10555 = !DILocalVariable(name: "__edx", scope: !10552, file: !10469, line: 653, type: !312)
!10556 = !DILocalVariable(name: "__ecx", scope: !10552, file: !10469, line: 653, type: !312)
!10557 = !DILocalVariable(name: "__eax", scope: !10552, file: !10469, line: 653, type: !312)
!10558 = !{i32 -2145652606, i32 -2145651856, i32 -2145651622, i32 -2145651571, i32 -2145651543, i32 -2145651518, i32 -2145651834, i32 -2145651821, i32 -2145651383, i32 -2145651264, i32 -2145651729, i32 -2145651702, i32 -2145651674, i32 -2145651644}
!10559 = !DILocation(line: 654, column: 1, scope: !10546)
!10560 = distinct !DISubprogram(name: "bh_action", scope: !3, file: !3, line: 1887, type: !8119, scopeLine: 1888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10561 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10562)
!10562 = distinct !DILocation(line: 1910, column: 2, scope: !10560)
!10563 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10562)
!10564 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10565)
!10565 = distinct !DILocation(line: 1892, column: 2, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 1892, column: 2)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 1892, column: 2)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1892, column: 2)
!10569 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 1892, column: 2)
!10570 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 1892, column: 2)
!10571 = !DILocalVariable(name: "info", arg: 1, scope: !10560, file: !3, line: 1887, type: !7530)
!10572 = !DILocation(line: 1887, column: 40, scope: !10560)
!10573 = !DILocalVariable(name: "flags", scope: !10560, file: !3, line: 1889, type: !312)
!10574 = !DILocation(line: 1889, column: 16, scope: !10560)
!10575 = !DILocalVariable(name: "rc", scope: !10560, file: !3, line: 1890, type: !32)
!10576 = !DILocation(line: 1890, column: 6, scope: !10560)
!10577 = !DILocation(line: 1892, column: 2, scope: !10560)
!10578 = !DILocation(line: 1892, column: 2, scope: !10570)
!10579 = !DILocalVariable(name: "__dummy", scope: !10580, file: !3, line: 1892, type: !312)
!10580 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 1892, column: 2)
!10581 = !DILocation(line: 1892, column: 2, scope: !10580)
!10582 = !DILocalVariable(name: "__dummy2", scope: !10580, file: !3, line: 1892, type: !312)
!10583 = !DILocation(line: 1892, column: 2, scope: !10569)
!10584 = !DILocation(line: 1892, column: 2, scope: !10568)
!10585 = !DILocation(line: 1892, column: 2, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 1892, column: 2)
!10587 = !DILocalVariable(name: "__dummy", scope: !10588, file: !3, line: 1892, type: !312)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 1892, column: 2)
!10589 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 1892, column: 2)
!10590 = !DILocation(line: 1892, column: 2, scope: !10588)
!10591 = !DILocalVariable(name: "__dummy2", scope: !10588, file: !3, line: 1892, type: !312)
!10592 = !DILocation(line: 1892, column: 2, scope: !10589)
!10593 = !DILocation(line: 1892, column: 2, scope: !10567)
!10594 = !{i32 -2139543364}
!10595 = !DILocation(line: 1892, column: 2, scope: !10566)
!10596 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10565)
!10597 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10565)
!10598 = !DILocation(line: 1894, column: 6, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10560, file: !3, line: 1894, column: 6)
!10600 = !DILocation(line: 1894, column: 12, scope: !10599)
!10601 = !DILocation(line: 1894, column: 23, scope: !10599)
!10602 = !DILocation(line: 1894, column: 6, scope: !10560)
!10603 = !DILocation(line: 1895, column: 3, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1894, column: 37)
!10605 = !DILocation(line: 1895, column: 9, scope: !10604)
!10606 = !DILocation(line: 1895, column: 20, scope: !10604)
!10607 = !DILocation(line: 1896, column: 6, scope: !10604)
!10608 = !DILocation(line: 1897, column: 2, scope: !10604)
!10609 = !DILocation(line: 1897, column: 13, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1897, column: 13)
!10611 = !DILocation(line: 1897, column: 19, scope: !10610)
!10612 = !DILocation(line: 1897, column: 30, scope: !10610)
!10613 = !DILocation(line: 1897, column: 13, scope: !10599)
!10614 = !DILocation(line: 1898, column: 3, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 1897, column: 45)
!10616 = !DILocation(line: 1898, column: 9, scope: !10615)
!10617 = !DILocation(line: 1898, column: 20, scope: !10615)
!10618 = !DILocation(line: 1899, column: 6, scope: !10615)
!10619 = !DILocation(line: 1900, column: 2, scope: !10615)
!10620 = !DILocation(line: 1900, column: 13, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 1900, column: 13)
!10622 = !DILocation(line: 1900, column: 19, scope: !10621)
!10623 = !DILocation(line: 1900, column: 30, scope: !10621)
!10624 = !DILocation(line: 1900, column: 13, scope: !10610)
!10625 = !DILocation(line: 1901, column: 3, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 1900, column: 43)
!10627 = !DILocation(line: 1901, column: 9, scope: !10626)
!10628 = !DILocation(line: 1901, column: 20, scope: !10626)
!10629 = !DILocation(line: 1902, column: 6, scope: !10626)
!10630 = !DILocation(line: 1903, column: 2, scope: !10626)
!10631 = !DILocation(line: 1905, column: 3, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 1903, column: 9)
!10633 = !DILocation(line: 1905, column: 9, scope: !10632)
!10634 = !DILocation(line: 1905, column: 20, scope: !10632)
!10635 = !DILocation(line: 1906, column: 3, scope: !10632)
!10636 = !DILocation(line: 1906, column: 9, scope: !10632)
!10637 = !DILocation(line: 1906, column: 22, scope: !10632)
!10638 = !DILocation(line: 1907, column: 6, scope: !10632)
!10639 = !DILocation(line: 1910, column: 26, scope: !10560)
!10640 = !DILocation(line: 1910, column: 32, scope: !10560)
!10641 = !DILocation(line: 1910, column: 37, scope: !10560)
!10642 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10562)
!10643 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10562)
!10644 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10562)
!10645 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10562)
!10646 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10562)
!10647 = !DILocation(line: 1912, column: 9, scope: !10560)
!10648 = !DILocation(line: 1912, column: 2, scope: !10560)
!10649 = distinct !DISubprogram(name: "rx_async", scope: !3, file: !3, line: 1817, type: !8337, scopeLine: 1818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10650 = !DILocalVariable(name: "info", arg: 1, scope: !10649, file: !3, line: 1817, type: !7530)
!10651 = !DILocation(line: 1817, column: 40, scope: !10649)
!10652 = !DILocalVariable(name: "icount", scope: !10649, file: !3, line: 1819, type: !10653)
!10653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7821, size: 64)
!10654 = !DILocation(line: 1819, column: 23, scope: !10649)
!10655 = !DILocation(line: 1819, column: 33, scope: !10649)
!10656 = !DILocation(line: 1819, column: 39, scope: !10649)
!10657 = !DILocalVariable(name: "start", scope: !10649, file: !3, line: 1820, type: !7)
!10658 = !DILocation(line: 1820, column: 15, scope: !10649)
!10659 = !DILocalVariable(name: "end", scope: !10649, file: !3, line: 1820, type: !7)
!10660 = !DILocation(line: 1820, column: 22, scope: !10649)
!10661 = !DILocalVariable(name: "p", scope: !10649, file: !3, line: 1821, type: !564)
!10662 = !DILocation(line: 1821, column: 17, scope: !10649)
!10663 = !DILocalVariable(name: "status", scope: !10649, file: !3, line: 1822, type: !482)
!10664 = !DILocation(line: 1822, column: 16, scope: !10649)
!10665 = !DILocalVariable(name: "bufs", scope: !10649, file: !3, line: 1823, type: !7944)
!10666 = !DILocation(line: 1823, column: 20, scope: !10649)
!10667 = !DILocation(line: 1823, column: 27, scope: !10649)
!10668 = !DILocation(line: 1823, column: 33, scope: !10649)
!10669 = !DILocalVariable(name: "i", scope: !10649, file: !3, line: 1824, type: !32)
!10670 = !DILocation(line: 1824, column: 6, scope: !10649)
!10671 = !DILocalVariable(name: "count", scope: !10649, file: !3, line: 1824, type: !32)
!10672 = !DILocation(line: 1824, column: 9, scope: !10649)
!10673 = !DILocalVariable(name: "chars", scope: !10649, file: !3, line: 1825, type: !32)
!10674 = !DILocation(line: 1825, column: 6, scope: !10649)
!10675 = !DILocalVariable(name: "stat", scope: !10649, file: !3, line: 1826, type: !32)
!10676 = !DILocation(line: 1826, column: 6, scope: !10649)
!10677 = !DILocalVariable(name: "ch", scope: !10649, file: !3, line: 1827, type: !482)
!10678 = !DILocation(line: 1827, column: 16, scope: !10649)
!10679 = !DILocation(line: 1829, column: 16, scope: !10649)
!10680 = !DILocation(line: 1829, column: 22, scope: !10649)
!10681 = !DILocation(line: 1829, column: 14, scope: !10649)
!10682 = !DILocation(line: 1829, column: 8, scope: !10649)
!10683 = !DILocation(line: 1831, column: 2, scope: !10649)
!10684 = !DILocation(line: 1831, column: 8, scope: !10649)
!10685 = !DILocation(line: 1832, column: 11, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 1831, column: 34)
!10687 = !DILocation(line: 1832, column: 35, scope: !10686)
!10688 = !DILocation(line: 1832, column: 41, scope: !10686)
!10689 = !DILocation(line: 1832, column: 33, scope: !10686)
!10690 = !DILocation(line: 1832, column: 9, scope: !10686)
!10691 = !DILocation(line: 1833, column: 11, scope: !10686)
!10692 = !DILocation(line: 1833, column: 16, scope: !10686)
!10693 = !DILocation(line: 1833, column: 21, scope: !10686)
!10694 = !DILocation(line: 1833, column: 27, scope: !10686)
!10695 = !DILocation(line: 1833, column: 33, scope: !10686)
!10696 = !DILocation(line: 1833, column: 25, scope: !10686)
!10697 = !DILocation(line: 1833, column: 9, scope: !10686)
!10698 = !DILocation(line: 1835, column: 3, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1835, column: 3)
!10700 = !DILocation(line: 1835, column: 3, scope: !10686)
!10701 = !DILocation(line: 1836, column: 3, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1836, column: 3)
!10703 = !DILocation(line: 1836, column: 3, scope: !10686)
!10704 = !DILocation(line: 1838, column: 8, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1838, column: 3)
!10706 = !DILocation(line: 1838, column: 7, scope: !10705)
!10707 = !DILocation(line: 1838, column: 13, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10705, file: !3, line: 1838, column: 3)
!10709 = !DILocation(line: 1838, column: 17, scope: !10708)
!10710 = !DILocation(line: 1838, column: 15, scope: !10708)
!10711 = !DILocation(line: 1838, column: 3, scope: !10705)
!10712 = !DILocation(line: 1839, column: 10, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 1838, column: 36)
!10714 = !DILocation(line: 1839, column: 9, scope: !10713)
!10715 = !DILocation(line: 1839, column: 7, scope: !10713)
!10716 = !DILocation(line: 1840, column: 4, scope: !10713)
!10717 = !DILocation(line: 1840, column: 12, scope: !10713)
!10718 = !DILocation(line: 1840, column: 14, scope: !10713)
!10719 = !DILocation(line: 1842, column: 9, scope: !10713)
!10720 = !DILocation(line: 1844, column: 15, scope: !10713)
!10721 = !DILocation(line: 1844, column: 17, scope: !10713)
!10722 = !DILocation(line: 1844, column: 13, scope: !10713)
!10723 = !DILocation(line: 1844, column: 22, scope: !10713)
!10724 = !DILocation(line: 1844, column: 11, scope: !10713)
!10725 = !DILocation(line: 1845, column: 8, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1845, column: 8)
!10727 = !DILocation(line: 1845, column: 8, scope: !10713)
!10728 = !DILocation(line: 1846, column: 9, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 1846, column: 9)
!10730 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 1845, column: 16)
!10731 = !DILocation(line: 1846, column: 16, scope: !10729)
!10732 = !DILocation(line: 1846, column: 9, scope: !10730)
!10733 = !DILocation(line: 1847, column: 6, scope: !10729)
!10734 = !DILocation(line: 1847, column: 14, scope: !10729)
!10735 = !DILocation(line: 1847, column: 20, scope: !10729)
!10736 = !DILocation(line: 1848, column: 14, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 1848, column: 14)
!10738 = !DILocation(line: 1848, column: 21, scope: !10737)
!10739 = !DILocation(line: 1848, column: 14, scope: !10729)
!10740 = !DILocation(line: 1849, column: 6, scope: !10737)
!10741 = !DILocation(line: 1849, column: 14, scope: !10737)
!10742 = !DILocation(line: 1849, column: 19, scope: !10737)
!10743 = !DILocation(line: 1851, column: 9, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 1851, column: 9)
!10745 = !DILocation(line: 1851, column: 18, scope: !10744)
!10746 = !DILocation(line: 1851, column: 24, scope: !10744)
!10747 = !DILocation(line: 1851, column: 16, scope: !10744)
!10748 = !DILocation(line: 1851, column: 9, scope: !10730)
!10749 = !DILocation(line: 1852, column: 6, scope: !10744)
!10750 = !DILocation(line: 1853, column: 9, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10730, file: !3, line: 1853, column: 9)
!10752 = !DILocation(line: 1853, column: 16, scope: !10751)
!10753 = !DILocation(line: 1853, column: 9, scope: !10730)
!10754 = !DILocation(line: 1854, column: 11, scope: !10751)
!10755 = !DILocation(line: 1854, column: 6, scope: !10751)
!10756 = !DILocation(line: 1855, column: 14, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 1855, column: 14)
!10758 = !DILocation(line: 1855, column: 21, scope: !10757)
!10759 = !DILocation(line: 1855, column: 14, scope: !10751)
!10760 = !DILocation(line: 1856, column: 11, scope: !10757)
!10761 = !DILocation(line: 1856, column: 6, scope: !10757)
!10762 = !DILocation(line: 1857, column: 4, scope: !10730)
!10763 = !DILocation(line: 1858, column: 26, scope: !10713)
!10764 = !DILocation(line: 1858, column: 32, scope: !10713)
!10765 = !DILocation(line: 1858, column: 38, scope: !10713)
!10766 = !DILocation(line: 1858, column: 42, scope: !10713)
!10767 = !DILocation(line: 1858, column: 4, scope: !10713)
!10768 = !DILocation(line: 1859, column: 9, scope: !10713)
!10769 = !DILocation(line: 1860, column: 3, scope: !10713)
!10770 = !DILocation(line: 1838, column: 25, scope: !10708)
!10771 = !DILocation(line: 1838, column: 31, scope: !10708)
!10772 = !DILocation(line: 1838, column: 3, scope: !10708)
!10773 = distinct !{!10773, !10711, !10774}
!10774 = !DILocation(line: 1860, column: 3, scope: !10705)
!10775 = !DILocation(line: 1862, column: 7, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1862, column: 7)
!10777 = !DILocation(line: 1862, column: 11, scope: !10776)
!10778 = !DILocation(line: 1862, column: 9, scope: !10776)
!10779 = !DILocation(line: 1862, column: 7, scope: !10686)
!10780 = !DILocation(line: 1864, column: 24, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10776, file: !3, line: 1862, column: 18)
!10782 = !DILocation(line: 1864, column: 4, scope: !10781)
!10783 = !DILocation(line: 1864, column: 10, scope: !10781)
!10784 = !DILocation(line: 1864, column: 21, scope: !10781)
!10785 = !DILocation(line: 1865, column: 15, scope: !10781)
!10786 = !DILocation(line: 1865, column: 21, scope: !10781)
!10787 = !DILocation(line: 1865, column: 31, scope: !10781)
!10788 = !DILocation(line: 1865, column: 39, scope: !10781)
!10789 = !DILocation(line: 1865, column: 4, scope: !10781)
!10790 = !DILocation(line: 1866, column: 4, scope: !10781)
!10791 = !DILocation(line: 1869, column: 3, scope: !10686)
!10792 = !DILocation(line: 1869, column: 9, scope: !10686)
!10793 = !DILocation(line: 1869, column: 20, scope: !10686)
!10794 = !DILocation(line: 1870, column: 14, scope: !10686)
!10795 = !DILocation(line: 1870, column: 20, scope: !10686)
!10796 = !DILocation(line: 1870, column: 25, scope: !10686)
!10797 = !DILocation(line: 1870, column: 3, scope: !10686)
!10798 = !DILocation(line: 1872, column: 7, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1872, column: 7)
!10800 = !DILocation(line: 1872, column: 16, scope: !10799)
!10801 = !DILocation(line: 1872, column: 22, scope: !10799)
!10802 = !DILocation(line: 1872, column: 13, scope: !10799)
!10803 = !DILocation(line: 1872, column: 7, scope: !10686)
!10804 = !DILocation(line: 1873, column: 8, scope: !10799)
!10805 = !DILocation(line: 1873, column: 4, scope: !10799)
!10806 = !DILocation(line: 1876, column: 7, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 1876, column: 7)
!10808 = !DILocation(line: 1876, column: 14, scope: !10807)
!10809 = !DILocation(line: 1876, column: 11, scope: !10807)
!10810 = !DILocation(line: 1876, column: 7, scope: !10686)
!10811 = !DILocation(line: 1877, column: 4, scope: !10807)
!10812 = distinct !{!10812, !10683, !10813}
!10813 = !DILocation(line: 1878, column: 2, scope: !10649)
!10814 = !DILocation(line: 1880, column: 6, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10649, file: !3, line: 1880, column: 6)
!10816 = !DILocation(line: 1880, column: 6, scope: !10649)
!10817 = !DILocation(line: 1881, column: 25, scope: !10815)
!10818 = !DILocation(line: 1881, column: 31, scope: !10815)
!10819 = !DILocation(line: 1881, column: 3, scope: !10815)
!10820 = !DILocation(line: 1882, column: 1, scope: !10649)
!10821 = distinct !DISubprogram(name: "rx_get_frame", scope: !3, file: !3, line: 4610, type: !10822, scopeLine: 4611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{!771, !7530}
!10824 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !10825)
!10825 = distinct !DILocation(line: 4650, column: 5, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 4647, column: 25)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 4647, column: 8)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 4646, column: 34)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4646, column: 7)
!10830 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 4631, column: 11)
!10831 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 4631, column: 2)
!10832 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4631, column: 2)
!10833 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !10825)
!10834 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 4648, column: 5, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !3, line: 4648, column: 5)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 4648, column: 5)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4648, column: 5)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !3, line: 4648, column: 5)
!10840 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 4648, column: 5)
!10841 = !DILocalVariable(name: "info", arg: 1, scope: !10821, file: !3, line: 4610, type: !7530)
!10842 = !DILocation(line: 4610, column: 44, scope: !10821)
!10843 = !DILocalVariable(name: "start", scope: !10821, file: !3, line: 4612, type: !7)
!10844 = !DILocation(line: 4612, column: 15, scope: !10821)
!10845 = !DILocalVariable(name: "end", scope: !10821, file: !3, line: 4612, type: !7)
!10846 = !DILocation(line: 4612, column: 22, scope: !10821)
!10847 = !DILocalVariable(name: "status", scope: !10821, file: !3, line: 4613, type: !476)
!10848 = !DILocation(line: 4613, column: 17, scope: !10821)
!10849 = !DILocalVariable(name: "framesize", scope: !10821, file: !3, line: 4614, type: !7)
!10850 = !DILocation(line: 4614, column: 15, scope: !10821)
!10851 = !DILocalVariable(name: "flags", scope: !10821, file: !3, line: 4615, type: !312)
!10852 = !DILocation(line: 4615, column: 16, scope: !10821)
!10853 = !DILocalVariable(name: "tty", scope: !10821, file: !3, line: 4616, type: !3760)
!10854 = !DILocation(line: 4616, column: 21, scope: !10821)
!10855 = !DILocation(line: 4616, column: 27, scope: !10821)
!10856 = !DILocation(line: 4616, column: 33, scope: !10821)
!10857 = !DILocation(line: 4616, column: 38, scope: !10821)
!10858 = !DILocalVariable(name: "addr_field", scope: !10821, file: !3, line: 4617, type: !482)
!10859 = !DILocation(line: 4617, column: 16, scope: !10821)
!10860 = !DILocalVariable(name: "crc_size", scope: !10821, file: !3, line: 4618, type: !7)
!10861 = !DILocation(line: 4618, column: 15, scope: !10821)
!10862 = !DILocation(line: 4620, column: 10, scope: !10821)
!10863 = !DILocation(line: 4620, column: 16, scope: !10821)
!10864 = !DILocation(line: 4620, column: 23, scope: !10821)
!10865 = !DILocation(line: 4620, column: 32, scope: !10821)
!10866 = !DILocation(line: 4620, column: 2, scope: !10821)
!10867 = !DILocation(line: 4621, column: 35, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4620, column: 49)
!10869 = !DILocation(line: 4621, column: 40, scope: !10868)
!10870 = !DILocation(line: 4622, column: 35, scope: !10868)
!10871 = !DILocation(line: 4622, column: 40, scope: !10868)
!10872 = !DILocation(line: 4623, column: 2, scope: !10868)
!10873 = !DILabel(scope: !10821, name: "check_again", file: !3, line: 4625)
!10874 = !DILocation(line: 4625, column: 1, scope: !10821)
!10875 = !DILocation(line: 4627, column: 12, scope: !10821)
!10876 = !DILocation(line: 4628, column: 13, scope: !10821)
!10877 = !DILocation(line: 4629, column: 16, scope: !10821)
!10878 = !DILocation(line: 4629, column: 22, scope: !10821)
!10879 = !DILocation(line: 4629, column: 14, scope: !10821)
!10880 = !DILocation(line: 4629, column: 8, scope: !10821)
!10881 = !DILocation(line: 4631, column: 2, scope: !10821)
!10882 = !DILocation(line: 4632, column: 8, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4632, column: 7)
!10884 = !DILocation(line: 4632, column: 7, scope: !10830)
!10885 = !DILocation(line: 4633, column: 4, scope: !10883)
!10886 = !DILocation(line: 4635, column: 7, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4635, column: 7)
!10888 = !DILocation(line: 4635, column: 17, scope: !10887)
!10889 = !DILocation(line: 4635, column: 22, scope: !10887)
!10890 = !DILocation(line: 4635, column: 25, scope: !10887)
!10891 = !DILocation(line: 4635, column: 31, scope: !10887)
!10892 = !DILocation(line: 4635, column: 38, scope: !10887)
!10893 = !DILocation(line: 4635, column: 50, scope: !10887)
!10894 = !DILocation(line: 4635, column: 7, scope: !10830)
!10895 = !DILocation(line: 4636, column: 17, scope: !10887)
!10896 = !DILocation(line: 4636, column: 23, scope: !10887)
!10897 = !DILocation(line: 4636, column: 29, scope: !10887)
!10898 = !DILocation(line: 4636, column: 34, scope: !10887)
!10899 = !DILocation(line: 4636, column: 15, scope: !10887)
!10900 = !DILocation(line: 4636, column: 4, scope: !10887)
!10901 = !DILocation(line: 4638, column: 16, scope: !10830)
!10902 = !DILocation(line: 4638, column: 13, scope: !10830)
!10903 = !DILocation(line: 4640, column: 7, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4640, column: 7)
!10905 = !DILocation(line: 4640, column: 7, scope: !10830)
!10906 = !DILocation(line: 4641, column: 4, scope: !10904)
!10907 = !DILocation(line: 4643, column: 7, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4643, column: 7)
!10909 = !DILocation(line: 4643, column: 16, scope: !10908)
!10910 = !DILocation(line: 4643, column: 22, scope: !10908)
!10911 = !DILocation(line: 4643, column: 13, scope: !10908)
!10912 = !DILocation(line: 4643, column: 7, scope: !10830)
!10913 = !DILocation(line: 4644, column: 8, scope: !10908)
!10914 = !DILocation(line: 4644, column: 4, scope: !10908)
!10915 = !DILocation(line: 4646, column: 7, scope: !10829)
!10916 = !DILocation(line: 4646, column: 14, scope: !10829)
!10917 = !DILocation(line: 4646, column: 20, scope: !10829)
!10918 = !DILocation(line: 4646, column: 11, scope: !10829)
!10919 = !DILocation(line: 4646, column: 7, scope: !10830)
!10920 = !DILocation(line: 4647, column: 8, scope: !10827)
!10921 = !DILocation(line: 4647, column: 14, scope: !10827)
!10922 = !DILocation(line: 4647, column: 8, scope: !10828)
!10923 = !DILocation(line: 4648, column: 5, scope: !10826)
!10924 = !DILocation(line: 4648, column: 5, scope: !10840)
!10925 = !DILocalVariable(name: "__dummy", scope: !10926, file: !3, line: 4648, type: !312)
!10926 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4648, column: 5)
!10927 = !DILocation(line: 4648, column: 5, scope: !10926)
!10928 = !DILocalVariable(name: "__dummy2", scope: !10926, file: !3, line: 4648, type: !312)
!10929 = !DILocation(line: 4648, column: 5, scope: !10839)
!10930 = !DILocation(line: 4648, column: 5, scope: !10838)
!10931 = !DILocation(line: 4648, column: 5, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 4648, column: 5)
!10933 = !DILocalVariable(name: "__dummy", scope: !10934, file: !3, line: 4648, type: !312)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 4648, column: 5)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 4648, column: 5)
!10936 = !DILocation(line: 4648, column: 5, scope: !10934)
!10937 = !DILocalVariable(name: "__dummy2", scope: !10934, file: !3, line: 4648, type: !312)
!10938 = !DILocation(line: 4648, column: 5, scope: !10935)
!10939 = !DILocation(line: 4648, column: 5, scope: !10837)
!10940 = !{i32 -2139464863}
!10941 = !DILocation(line: 4648, column: 5, scope: !10836)
!10942 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !10835)
!10943 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !10835)
!10944 = !DILocation(line: 4649, column: 14, scope: !10826)
!10945 = !DILocation(line: 4649, column: 5, scope: !10826)
!10946 = !DILocation(line: 4650, column: 29, scope: !10826)
!10947 = !DILocation(line: 4650, column: 35, scope: !10826)
!10948 = !DILocation(line: 4650, column: 40, scope: !10826)
!10949 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !10825)
!10950 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !10825)
!10951 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !10825)
!10952 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !10825)
!10953 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !10825)
!10954 = !DILocation(line: 4651, column: 4, scope: !10826)
!10955 = !DILocation(line: 4652, column: 4, scope: !10828)
!10956 = !DILocation(line: 4631, column: 2, scope: !10831)
!10957 = distinct !{!10957, !10958, !10959}
!10958 = !DILocation(line: 4631, column: 2, scope: !10832)
!10959 = !DILocation(line: 4654, column: 2, scope: !10832)
!10960 = !DILocation(line: 4665, column: 11, scope: !10821)
!10961 = !DILocation(line: 4665, column: 9, scope: !10821)
!10962 = !DILocation(line: 4668, column: 7, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4668, column: 6)
!10964 = !DILocation(line: 4668, column: 13, scope: !10963)
!10965 = !DILocation(line: 4668, column: 20, scope: !10963)
!10966 = !DILocation(line: 4668, column: 29, scope: !10963)
!10967 = !DILocation(line: 4668, column: 46, scope: !10963)
!10968 = !DILocation(line: 4668, column: 6, scope: !10821)
!10969 = !DILocation(line: 4669, column: 10, scope: !10963)
!10970 = !DILocation(line: 4669, column: 3, scope: !10963)
!10971 = !DILocation(line: 4671, column: 6, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4671, column: 6)
!10973 = !DILocation(line: 4671, column: 16, scope: !10972)
!10974 = !DILocation(line: 4671, column: 21, scope: !10972)
!10975 = !DILocation(line: 4672, column: 5, scope: !10972)
!10976 = !DILocation(line: 4672, column: 16, scope: !10972)
!10977 = !DILocation(line: 4672, column: 24, scope: !10972)
!10978 = !DILocation(line: 4672, column: 27, scope: !10972)
!10979 = !DILocation(line: 4672, column: 41, scope: !10972)
!10980 = !DILocation(line: 4672, column: 47, scope: !10972)
!10981 = !DILocation(line: 4672, column: 54, scope: !10972)
!10982 = !DILocation(line: 4672, column: 38, scope: !10972)
!10983 = !DILocation(line: 4671, column: 6, scope: !10821)
!10984 = !DILocation(line: 4673, column: 14, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 4672, column: 68)
!10986 = !DILocation(line: 4673, column: 20, scope: !10985)
!10987 = !DILocation(line: 4673, column: 27, scope: !10985)
!10988 = !DILocation(line: 4673, column: 3, scope: !10985)
!10989 = !DILocation(line: 4674, column: 3, scope: !10985)
!10990 = !DILocation(line: 4677, column: 6, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4677, column: 6)
!10992 = !DILocation(line: 4677, column: 23, scope: !10991)
!10993 = !DILocation(line: 4677, column: 21, scope: !10991)
!10994 = !DILocation(line: 4677, column: 16, scope: !10991)
!10995 = !DILocation(line: 4677, column: 33, scope: !10991)
!10996 = !DILocation(line: 4677, column: 36, scope: !10991)
!10997 = !DILocation(line: 4677, column: 43, scope: !10991)
!10998 = !DILocation(line: 4677, column: 6, scope: !10821)
!10999 = !DILocation(line: 4678, column: 3, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 4677, column: 51)
!11001 = !DILocation(line: 4678, column: 9, scope: !11000)
!11002 = !DILocation(line: 4678, column: 16, scope: !11000)
!11003 = !DILocation(line: 4678, column: 23, scope: !11000)
!11004 = !DILocation(line: 4679, column: 13, scope: !11000)
!11005 = !DILocation(line: 4680, column: 2, scope: !11000)
!11006 = !DILocation(line: 4680, column: 13, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 4680, column: 13)
!11008 = !DILocation(line: 4680, column: 20, scope: !11007)
!11009 = !DILocation(line: 4680, column: 13, scope: !10991)
!11010 = !DILocation(line: 4681, column: 3, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 4680, column: 28)
!11012 = !DILocation(line: 4681, column: 9, scope: !11011)
!11013 = !DILocation(line: 4681, column: 16, scope: !11011)
!11014 = !DILocation(line: 4681, column: 21, scope: !11011)
!11015 = !DILocation(line: 4682, column: 9, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 4682, column: 7)
!11017 = !DILocation(line: 4682, column: 15, scope: !11016)
!11018 = !DILocation(line: 4682, column: 22, scope: !11016)
!11019 = !DILocation(line: 4682, column: 31, scope: !11016)
!11020 = !DILocation(line: 4682, column: 7, scope: !11011)
!11021 = !DILocation(line: 4683, column: 14, scope: !11016)
!11022 = !DILocation(line: 4683, column: 4, scope: !11016)
!11023 = !DILocation(line: 4684, column: 2, scope: !11011)
!11024 = !DILocation(line: 4687, column: 6, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4687, column: 6)
!11026 = !DILocation(line: 4687, column: 16, scope: !11025)
!11027 = !DILocation(line: 4687, column: 6, scope: !10821)
!11028 = !DILocation(line: 4688, column: 3, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 4687, column: 22)
!11030 = !DILocation(line: 4688, column: 9, scope: !11029)
!11031 = !DILocation(line: 4688, column: 17, scope: !11029)
!11032 = !DILocation(line: 4688, column: 23, scope: !11029)
!11033 = !DILocation(line: 4688, column: 32, scope: !11029)
!11034 = !DILocation(line: 4689, column: 3, scope: !11029)
!11035 = !DILocation(line: 4689, column: 9, scope: !11029)
!11036 = !DILocation(line: 4689, column: 17, scope: !11029)
!11037 = !DILocation(line: 4689, column: 23, scope: !11029)
!11038 = !DILocation(line: 4689, column: 38, scope: !11029)
!11039 = !DILocation(line: 4690, column: 2, scope: !11029)
!11040 = !DILocation(line: 4693, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4693, column: 2)
!11042 = !DILocation(line: 4693, column: 2, scope: !10821)
!11043 = !DILocation(line: 4695, column: 2, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4695, column: 2)
!11045 = !DILocation(line: 4695, column: 2, scope: !10821)
!11046 = !DILocalVariable(name: "__UNIQUE_ID___x343", scope: !11047, file: !3, line: 4695, type: !32)
!11047 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 4695, column: 2)
!11048 = !DILocation(line: 4695, column: 2, scope: !11047)
!11049 = !DILocalVariable(name: "__UNIQUE_ID___y344", scope: !11047, file: !3, line: 4695, type: !32)
!11050 = !DILocation(line: 4697, column: 6, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !10821, file: !3, line: 4697, column: 6)
!11052 = !DILocation(line: 4697, column: 6, scope: !10821)
!11053 = !DILocation(line: 4698, column: 9, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 4698, column: 7)
!11055 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 4697, column: 17)
!11056 = !DILocation(line: 4698, column: 15, scope: !11054)
!11057 = !DILocation(line: 4698, column: 22, scope: !11054)
!11058 = !DILocation(line: 4698, column: 31, scope: !11054)
!11059 = !DILocation(line: 4698, column: 7, scope: !11055)
!11060 = !DILocation(line: 4699, column: 17, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 4698, column: 54)
!11062 = !DILocation(line: 4699, column: 14, scope: !11061)
!11063 = !DILocation(line: 4700, column: 13, scope: !11061)
!11064 = !DILocation(line: 4701, column: 3, scope: !11061)
!11065 = !DILocation(line: 4703, column: 7, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11055, file: !3, line: 4703, column: 7)
!11067 = !DILocation(line: 4703, column: 19, scope: !11066)
!11068 = !DILocation(line: 4703, column: 25, scope: !11066)
!11069 = !DILocation(line: 4703, column: 42, scope: !11066)
!11070 = !DILocation(line: 4703, column: 40, scope: !11066)
!11071 = !DILocation(line: 4703, column: 17, scope: !11066)
!11072 = !DILocation(line: 4703, column: 7, scope: !11055)
!11073 = !DILocation(line: 4704, column: 4, scope: !11066)
!11074 = !DILocation(line: 4704, column: 10, scope: !11066)
!11075 = !DILocation(line: 4704, column: 17, scope: !11066)
!11076 = !DILocation(line: 4704, column: 23, scope: !11066)
!11077 = !DILocalVariable(name: "copy_count", scope: !11078, file: !3, line: 4707, type: !32)
!11078 = distinct !DILexicalBlock(scope: !11066, file: !3, line: 4705, column: 8)
!11079 = !DILocation(line: 4707, column: 8, scope: !11078)
!11080 = !DILocation(line: 4707, column: 21, scope: !11078)
!11081 = !DILocalVariable(name: "i", scope: !11078, file: !3, line: 4708, type: !32)
!11082 = !DILocation(line: 4708, column: 8, scope: !11078)
!11083 = !DILocation(line: 4708, column: 12, scope: !11078)
!11084 = !DILocalVariable(name: "p", scope: !11078, file: !3, line: 4709, type: !564)
!11085 = !DILocation(line: 4709, column: 19, scope: !11078)
!11086 = !DILocation(line: 4709, column: 23, scope: !11078)
!11087 = !DILocation(line: 4709, column: 29, scope: !11078)
!11088 = !DILocation(line: 4710, column: 27, scope: !11078)
!11089 = !DILocation(line: 4710, column: 4, scope: !11078)
!11090 = !DILocation(line: 4710, column: 10, scope: !11078)
!11091 = !DILocation(line: 4710, column: 25, scope: !11078)
!11092 = !DILocation(line: 4712, column: 4, scope: !11078)
!11093 = !DILocation(line: 4712, column: 10, scope: !11078)
!11094 = !DILocation(line: 4712, column: 17, scope: !11078)
!11095 = !DILocation(line: 4712, column: 21, scope: !11078)
!11096 = !DILocation(line: 4714, column: 4, scope: !11078)
!11097 = !DILocation(line: 4714, column: 10, scope: !11078)
!11098 = !DILocalVariable(name: "partial_count", scope: !11099, file: !3, line: 4715, type: !32)
!11099 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 4714, column: 22)
!11100 = !DILocation(line: 4715, column: 9, scope: !11099)
!11101 = !DILocalVariable(name: "__UNIQUE_ID___x345", scope: !11102, file: !3, line: 4715, type: !32)
!11102 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 4715, column: 25)
!11103 = !DILocation(line: 4715, column: 25, scope: !11102)
!11104 = !DILocalVariable(name: "__UNIQUE_ID___y346", scope: !11102, file: !3, line: 4715, type: !32)
!11105 = !DILocation(line: 4716, column: 12, scope: !11099)
!11106 = !DILocation(line: 4716, column: 15, scope: !11099)
!11107 = !DILocation(line: 4716, column: 21, scope: !11099)
!11108 = !DILocation(line: 4716, column: 27, scope: !11099)
!11109 = !DILocation(line: 4716, column: 30, scope: !11099)
!11110 = !DILocation(line: 4716, column: 35, scope: !11099)
!11111 = !DILocation(line: 4716, column: 5, scope: !11099)
!11112 = !DILocation(line: 4717, column: 10, scope: !11099)
!11113 = !DILocation(line: 4717, column: 7, scope: !11099)
!11114 = !DILocation(line: 4718, column: 19, scope: !11099)
!11115 = !DILocation(line: 4718, column: 16, scope: !11099)
!11116 = !DILocation(line: 4719, column: 9, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 4719, column: 9)
!11118 = !DILocation(line: 4719, column: 16, scope: !11117)
!11119 = !DILocation(line: 4719, column: 22, scope: !11117)
!11120 = !DILocation(line: 4719, column: 13, scope: !11117)
!11121 = !DILocation(line: 4719, column: 9, scope: !11099)
!11122 = !DILocation(line: 4720, column: 8, scope: !11117)
!11123 = !DILocation(line: 4720, column: 6, scope: !11117)
!11124 = distinct !{!11124, !11096, !11125}
!11125 = !DILocation(line: 4721, column: 4, scope: !11078)
!11126 = !DILocation(line: 4723, column: 8, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 4723, column: 8)
!11128 = !DILocation(line: 4723, column: 14, scope: !11127)
!11129 = !DILocation(line: 4723, column: 21, scope: !11127)
!11130 = !DILocation(line: 4723, column: 30, scope: !11127)
!11131 = !DILocation(line: 4723, column: 8, scope: !11078)
!11132 = !DILocation(line: 4724, column: 11, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 4723, column: 52)
!11134 = !DILocation(line: 4724, column: 18, scope: !11133)
!11135 = !DILocation(line: 4724, column: 10, scope: !11133)
!11136 = !DILocation(line: 4724, column: 6, scope: !11133)
!11137 = !DILocation(line: 4724, column: 8, scope: !11133)
!11138 = !DILocation(line: 4725, column: 14, scope: !11133)
!11139 = !DILocation(line: 4726, column: 4, scope: !11133)
!11140 = !DILocation(line: 4729, column: 8, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11078, file: !3, line: 4729, column: 8)
!11142 = !DILocation(line: 4729, column: 14, scope: !11141)
!11143 = !DILocation(line: 4729, column: 8, scope: !11078)
!11144 = !DILocation(line: 4730, column: 16, scope: !11141)
!11145 = !DILocation(line: 4730, column: 21, scope: !11141)
!11146 = !DILocation(line: 4730, column: 27, scope: !11141)
!11147 = !DILocation(line: 4730, column: 37, scope: !11141)
!11148 = !DILocation(line: 4730, column: 5, scope: !11141)
!11149 = !DILocation(line: 4733, column: 23, scope: !11141)
!11150 = !DILocation(line: 4733, column: 28, scope: !11141)
!11151 = !DILocation(line: 4733, column: 34, scope: !11141)
!11152 = !DILocation(line: 4733, column: 44, scope: !11141)
!11153 = !DILocation(line: 4733, column: 50, scope: !11141)
!11154 = !DILocation(line: 4733, column: 60, scope: !11141)
!11155 = !DILocation(line: 4733, column: 5, scope: !11141)
!11156 = !DILocation(line: 4735, column: 2, scope: !11055)
!11157 = !DILocation(line: 4736, column: 13, scope: !10821)
!11158 = !DILocation(line: 4736, column: 19, scope: !10821)
!11159 = !DILocation(line: 4736, column: 26, scope: !10821)
!11160 = !DILocation(line: 4736, column: 2, scope: !10821)
!11161 = !DILocation(line: 4737, column: 2, scope: !10821)
!11162 = !DILabel(scope: !10821, name: "cleanup", file: !3, line: 4739)
!11163 = !DILocation(line: 4739, column: 1, scope: !10821)
!11164 = !DILocation(line: 4740, column: 2, scope: !10821)
!11165 = !DILocation(line: 4741, column: 1, scope: !10821)
!11166 = distinct !DISubprogram(name: "rx_get_buf", scope: !3, file: !3, line: 4747, type: !10822, scopeLine: 4748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11167 = !DILocalVariable(name: "info", arg: 1, scope: !11166, file: !3, line: 4747, type: !7530)
!11168 = !DILocation(line: 4747, column: 42, scope: !11166)
!11169 = !DILocalVariable(name: "i", scope: !11166, file: !3, line: 4749, type: !7)
!11170 = !DILocation(line: 4749, column: 15, scope: !11166)
!11171 = !DILocation(line: 4749, column: 19, scope: !11166)
!11172 = !DILocation(line: 4749, column: 25, scope: !11166)
!11173 = !DILocalVariable(name: "count", scope: !11166, file: !3, line: 4750, type: !7)
!11174 = !DILocation(line: 4750, column: 15, scope: !11166)
!11175 = !DILocation(line: 4752, column: 7, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 4752, column: 6)
!11177 = !DILocation(line: 4752, column: 6, scope: !11166)
!11178 = !DILocation(line: 4753, column: 3, scope: !11176)
!11179 = !DILocation(line: 4754, column: 10, scope: !11166)
!11180 = !DILocation(line: 4754, column: 8, scope: !11166)
!11181 = !DILocation(line: 4755, column: 9, scope: !11166)
!11182 = !DILocation(line: 4755, column: 15, scope: !11166)
!11183 = !DILocation(line: 4755, column: 22, scope: !11166)
!11184 = !DILocation(line: 4755, column: 2, scope: !11166)
!11185 = !DILocation(line: 4760, column: 7, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !3, line: 4760, column: 7)
!11187 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 4755, column: 28)
!11188 = !DILocation(line: 4760, column: 7, scope: !11187)
!11189 = !DILocation(line: 4761, column: 9, scope: !11186)
!11190 = !DILocation(line: 4761, column: 4, scope: !11186)
!11191 = !DILocation(line: 4762, column: 3, scope: !11187)
!11192 = !DILocation(line: 4764, column: 2, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 4764, column: 2)
!11194 = !DILocation(line: 4764, column: 2, scope: !11166)
!11195 = !DILocation(line: 4765, column: 2, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 4765, column: 2)
!11197 = !DILocation(line: 4765, column: 2, scope: !11166)
!11198 = !DILocation(line: 4766, column: 6, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 4766, column: 6)
!11200 = !DILocation(line: 4766, column: 6, scope: !11166)
!11201 = !DILocation(line: 4767, column: 21, scope: !11199)
!11202 = !DILocation(line: 4767, column: 27, scope: !11199)
!11203 = !DILocation(line: 4767, column: 32, scope: !11199)
!11204 = !DILocation(line: 4767, column: 37, scope: !11199)
!11205 = !DILocation(line: 4767, column: 43, scope: !11199)
!11206 = !DILocation(line: 4767, column: 49, scope: !11199)
!11207 = !DILocation(line: 4767, column: 52, scope: !11199)
!11208 = !DILocation(line: 4768, column: 7, scope: !11199)
!11209 = !DILocation(line: 4768, column: 13, scope: !11199)
!11210 = !DILocation(line: 4768, column: 23, scope: !11199)
!11211 = !DILocation(line: 4767, column: 3, scope: !11199)
!11212 = !DILocation(line: 4769, column: 13, scope: !11166)
!11213 = !DILocation(line: 4769, column: 19, scope: !11166)
!11214 = !DILocation(line: 4769, column: 22, scope: !11166)
!11215 = !DILocation(line: 4769, column: 2, scope: !11166)
!11216 = !DILocation(line: 4770, column: 2, scope: !11166)
!11217 = !DILocation(line: 4771, column: 1, scope: !11166)
!11218 = distinct !DISubprogram(name: "rx_start", scope: !3, file: !3, line: 3959, type: !8337, scopeLine: 3960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11219 = !DILocalVariable(name: "info", arg: 1, scope: !11218, file: !3, line: 3959, type: !7530)
!11220 = !DILocation(line: 3959, column: 40, scope: !11218)
!11221 = !DILocalVariable(name: "val", scope: !11218, file: !3, line: 3961, type: !476)
!11222 = !DILocation(line: 3961, column: 17, scope: !11218)
!11223 = !DILocation(line: 3963, column: 2, scope: !11218)
!11224 = !DILocation(line: 3966, column: 11, scope: !11218)
!11225 = !DILocation(line: 3966, column: 2, scope: !11218)
!11226 = !DILocation(line: 3969, column: 17, scope: !11218)
!11227 = !DILocation(line: 3969, column: 8, scope: !11218)
!11228 = !DILocation(line: 3969, column: 28, scope: !11218)
!11229 = !DILocation(line: 3969, column: 6, scope: !11218)
!11230 = !DILocation(line: 3970, column: 11, scope: !11218)
!11231 = !DILocation(line: 3970, column: 39, scope: !11218)
!11232 = !DILocation(line: 3970, column: 43, scope: !11218)
!11233 = !DILocation(line: 3970, column: 22, scope: !11218)
!11234 = !DILocation(line: 3970, column: 2, scope: !11218)
!11235 = !DILocation(line: 3971, column: 11, scope: !11218)
!11236 = !DILocation(line: 3971, column: 22, scope: !11218)
!11237 = !DILocation(line: 3971, column: 2, scope: !11218)
!11238 = !DILocation(line: 3973, column: 13, scope: !11218)
!11239 = !DILocation(line: 3973, column: 2, scope: !11218)
!11240 = !DILocation(line: 3974, column: 14, scope: !11218)
!11241 = !DILocation(line: 3974, column: 2, scope: !11218)
!11242 = !DILocation(line: 3976, column: 6, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 3976, column: 6)
!11244 = !DILocation(line: 3976, column: 12, scope: !11243)
!11245 = !DILocation(line: 3976, column: 6, scope: !11218)
!11246 = !DILocation(line: 3978, column: 12, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 3976, column: 20)
!11248 = !DILocation(line: 3978, column: 49, scope: !11247)
!11249 = !DILocation(line: 3978, column: 40, scope: !11247)
!11250 = !DILocation(line: 3978, column: 60, scope: !11247)
!11251 = !DILocation(line: 3978, column: 23, scope: !11247)
!11252 = !DILocation(line: 3978, column: 3, scope: !11247)
!11253 = !DILocation(line: 3979, column: 3, scope: !11247)
!11254 = !DILocation(line: 3980, column: 7, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 3980, column: 7)
!11256 = !DILocation(line: 3980, column: 13, scope: !11255)
!11257 = !DILocation(line: 3980, column: 20, scope: !11255)
!11258 = !DILocation(line: 3980, column: 25, scope: !11255)
!11259 = !DILocation(line: 3980, column: 7, scope: !11247)
!11260 = !DILocation(line: 3982, column: 13, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11255, file: !3, line: 3980, column: 45)
!11262 = !DILocation(line: 3982, column: 4, scope: !11261)
!11263 = !DILocation(line: 3983, column: 3, scope: !11261)
!11264 = !DILocation(line: 3984, column: 2, scope: !11247)
!11265 = !DILocation(line: 3986, column: 12, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 3984, column: 9)
!11267 = !DILocation(line: 3986, column: 49, scope: !11266)
!11268 = !DILocation(line: 3986, column: 40, scope: !11266)
!11269 = !DILocation(line: 3986, column: 60, scope: !11266)
!11270 = !DILocation(line: 3986, column: 23, scope: !11266)
!11271 = !DILocation(line: 3986, column: 3, scope: !11266)
!11272 = !DILocation(line: 3988, column: 12, scope: !11266)
!11273 = !DILocation(line: 3988, column: 25, scope: !11266)
!11274 = !DILocation(line: 3988, column: 31, scope: !11266)
!11275 = !DILocation(line: 3988, column: 40, scope: !11266)
!11276 = !DILocation(line: 3988, column: 3, scope: !11266)
!11277 = !DILocation(line: 3990, column: 7, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3990, column: 7)
!11279 = !DILocation(line: 3990, column: 13, scope: !11278)
!11280 = !DILocation(line: 3990, column: 20, scope: !11278)
!11281 = !DILocation(line: 3990, column: 25, scope: !11278)
!11282 = !DILocation(line: 3990, column: 7, scope: !11266)
!11283 = !DILocation(line: 3992, column: 13, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 3990, column: 45)
!11285 = !DILocation(line: 3992, column: 4, scope: !11284)
!11286 = !DILocation(line: 3993, column: 3, scope: !11284)
!11287 = !DILocation(line: 3995, column: 13, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 3993, column: 10)
!11289 = !DILocation(line: 3995, column: 4, scope: !11288)
!11290 = !DILocation(line: 3999, column: 2, scope: !11218)
!11291 = !DILocation(line: 4002, column: 11, scope: !11218)
!11292 = !DILocation(line: 4002, column: 48, scope: !11218)
!11293 = !DILocation(line: 4002, column: 39, scope: !11218)
!11294 = !DILocation(line: 4002, column: 59, scope: !11218)
!11295 = !DILocation(line: 4002, column: 22, scope: !11218)
!11296 = !DILocation(line: 4002, column: 2, scope: !11218)
!11297 = !DILocation(line: 4004, column: 2, scope: !11218)
!11298 = !DILocation(line: 4004, column: 8, scope: !11218)
!11299 = !DILocation(line: 4004, column: 19, scope: !11218)
!11300 = !DILocation(line: 4005, column: 2, scope: !11218)
!11301 = !DILocation(line: 4005, column: 8, scope: !11218)
!11302 = !DILocation(line: 4005, column: 19, scope: !11218)
!11303 = !DILocation(line: 4006, column: 1, scope: !11218)
!11304 = distinct !DISubprogram(name: "bh_transmit", scope: !3, file: !3, line: 1965, type: !8337, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11305 = !DILocalVariable(name: "info", arg: 1, scope: !11304, file: !3, line: 1965, type: !7530)
!11306 = !DILocation(line: 1965, column: 43, scope: !11304)
!11307 = !DILocalVariable(name: "tty", scope: !11304, file: !3, line: 1967, type: !3760)
!11308 = !DILocation(line: 1967, column: 21, scope: !11304)
!11309 = !DILocation(line: 1967, column: 27, scope: !11304)
!11310 = !DILocation(line: 1967, column: 33, scope: !11304)
!11311 = !DILocation(line: 1967, column: 38, scope: !11304)
!11312 = !DILocation(line: 1969, column: 2, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 1969, column: 2)
!11314 = !DILocation(line: 1969, column: 2, scope: !11304)
!11315 = !DILocation(line: 1970, column: 6, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 1970, column: 6)
!11317 = !DILocation(line: 1970, column: 6, scope: !11304)
!11318 = !DILocation(line: 1971, column: 14, scope: !11316)
!11319 = !DILocation(line: 1971, column: 3, scope: !11316)
!11320 = !DILocation(line: 1972, column: 1, scope: !11304)
!11321 = distinct !DISubprogram(name: "trace_block", scope: !3, file: !3, line: 551, type: !11322, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{null, !7530, !292, !32, !292}
!11324 = !DILocalVariable(name: "info", arg: 1, scope: !11321, file: !3, line: 551, type: !7530)
!11325 = !DILocation(line: 551, column: 43, scope: !11321)
!11326 = !DILocalVariable(name: "data", arg: 2, scope: !11321, file: !3, line: 551, type: !292)
!11327 = !DILocation(line: 551, column: 61, scope: !11321)
!11328 = !DILocalVariable(name: "count", arg: 3, scope: !11321, file: !3, line: 551, type: !32)
!11329 = !DILocation(line: 551, column: 71, scope: !11321)
!11330 = !DILocalVariable(name: "label", arg: 4, scope: !11321, file: !3, line: 551, type: !292)
!11331 = !DILocation(line: 551, column: 90, scope: !11321)
!11332 = !DILocalVariable(name: "i", scope: !11321, file: !3, line: 553, type: !32)
!11333 = !DILocation(line: 553, column: 6, scope: !11321)
!11334 = !DILocalVariable(name: "linecount", scope: !11321, file: !3, line: 554, type: !32)
!11335 = !DILocation(line: 554, column: 6, scope: !11321)
!11336 = !DILocation(line: 555, column: 25, scope: !11321)
!11337 = !DILocation(line: 555, column: 31, scope: !11321)
!11338 = !DILocation(line: 555, column: 44, scope: !11321)
!11339 = !DILocation(line: 555, column: 2, scope: !11321)
!11340 = !DILocation(line: 556, column: 2, scope: !11321)
!11341 = !DILocation(line: 556, column: 8, scope: !11321)
!11342 = !DILocation(line: 557, column: 16, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 556, column: 15)
!11344 = !DILocation(line: 557, column: 22, scope: !11343)
!11345 = !DILocation(line: 557, column: 15, scope: !11343)
!11346 = !DILocation(line: 557, column: 35, scope: !11343)
!11347 = !DILocation(line: 557, column: 13, scope: !11343)
!11348 = !DILocation(line: 558, column: 8, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 558, column: 3)
!11350 = !DILocation(line: 558, column: 7, scope: !11349)
!11351 = !DILocation(line: 558, column: 12, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 558, column: 3)
!11353 = !DILocation(line: 558, column: 16, scope: !11352)
!11354 = !DILocation(line: 558, column: 14, scope: !11352)
!11355 = !DILocation(line: 558, column: 3, scope: !11349)
!11356 = !DILocation(line: 559, column: 34, scope: !11352)
!11357 = !DILocation(line: 559, column: 39, scope: !11352)
!11358 = !DILocation(line: 559, column: 19, scope: !11352)
!11359 = !DILocation(line: 559, column: 4, scope: !11352)
!11360 = !DILocation(line: 558, column: 28, scope: !11352)
!11361 = !DILocation(line: 558, column: 3, scope: !11352)
!11362 = distinct !{!11362, !11355, !11363}
!11363 = !DILocation(line: 559, column: 41, scope: !11349)
!11364 = !DILocation(line: 560, column: 3, scope: !11343)
!11365 = !DILocation(line: 560, column: 8, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 560, column: 3)
!11367 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 560, column: 3)
!11368 = !DILocation(line: 560, column: 9, scope: !11366)
!11369 = !DILocation(line: 560, column: 3, scope: !11367)
!11370 = !DILocation(line: 561, column: 4, scope: !11366)
!11371 = !DILocation(line: 560, column: 14, scope: !11366)
!11372 = !DILocation(line: 560, column: 3, scope: !11366)
!11373 = distinct !{!11373, !11369, !11374}
!11374 = !DILocation(line: 561, column: 16, scope: !11367)
!11375 = !DILocation(line: 562, column: 8, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 562, column: 3)
!11377 = !DILocation(line: 562, column: 7, scope: !11376)
!11378 = !DILocation(line: 562, column: 11, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11376, file: !3, line: 562, column: 3)
!11380 = !DILocation(line: 562, column: 13, scope: !11379)
!11381 = !DILocation(line: 562, column: 12, scope: !11379)
!11382 = !DILocation(line: 562, column: 3, scope: !11376)
!11383 = !DILocation(line: 563, column: 8, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 563, column: 8)
!11385 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 562, column: 28)
!11386 = !DILocation(line: 563, column: 13, scope: !11384)
!11387 = !DILocation(line: 563, column: 15, scope: !11384)
!11388 = !DILocation(line: 563, column: 21, scope: !11384)
!11389 = !DILocation(line: 563, column: 24, scope: !11384)
!11390 = !DILocation(line: 563, column: 29, scope: !11384)
!11391 = !DILocation(line: 563, column: 31, scope: !11384)
!11392 = !DILocation(line: 563, column: 8, scope: !11385)
!11393 = !DILocation(line: 564, column: 17, scope: !11384)
!11394 = !DILocation(line: 564, column: 22, scope: !11384)
!11395 = !DILocation(line: 564, column: 5, scope: !11384)
!11396 = !DILocation(line: 566, column: 5, scope: !11384)
!11397 = !DILocation(line: 567, column: 3, scope: !11385)
!11398 = !DILocation(line: 562, column: 24, scope: !11379)
!11399 = !DILocation(line: 562, column: 3, scope: !11379)
!11400 = distinct !{!11400, !11382, !11401}
!11401 = !DILocation(line: 567, column: 3, scope: !11376)
!11402 = !DILocation(line: 568, column: 3, scope: !11343)
!11403 = !DILocation(line: 569, column: 12, scope: !11343)
!11404 = !DILocation(line: 569, column: 9, scope: !11343)
!11405 = !DILocation(line: 570, column: 12, scope: !11343)
!11406 = !DILocation(line: 570, column: 9, scope: !11343)
!11407 = distinct !{!11407, !11340, !11408}
!11408 = !DILocation(line: 571, column: 2, scope: !11321)
!11409 = !DILocation(line: 572, column: 1, scope: !11321)
!11410 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !11411, file: !11411, line: 18, type: !11412, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11411 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!11412 = !DISubroutineType(types: !11413)
!11413 = !{!32, !4766, !482, !268}
!11414 = !DILocalVariable(name: "port", arg: 1, scope: !11410, file: !11411, line: 18, type: !4766)
!11415 = !DILocation(line: 18, column: 57, scope: !11410)
!11416 = !DILocalVariable(name: "ch", arg: 2, scope: !11410, file: !11411, line: 19, type: !482)
!11417 = !DILocation(line: 19, column: 20, scope: !11410)
!11418 = !DILocalVariable(name: "flag", arg: 3, scope: !11410, file: !11411, line: 19, type: !268)
!11419 = !DILocation(line: 19, column: 29, scope: !11410)
!11420 = !DILocalVariable(name: "tb", scope: !11410, file: !11411, line: 21, type: !4773)
!11421 = !DILocation(line: 21, column: 21, scope: !11410)
!11422 = !DILocation(line: 21, column: 26, scope: !11410)
!11423 = !DILocation(line: 21, column: 32, scope: !11410)
!11424 = !DILocation(line: 21, column: 36, scope: !11410)
!11425 = !DILocalVariable(name: "change", scope: !11410, file: !11411, line: 22, type: !32)
!11426 = !DILocation(line: 22, column: 6, scope: !11410)
!11427 = !DILocation(line: 24, column: 12, scope: !11410)
!11428 = !DILocation(line: 24, column: 16, scope: !11410)
!11429 = !DILocation(line: 24, column: 22, scope: !11410)
!11430 = !DILocation(line: 24, column: 37, scope: !11410)
!11431 = !DILocation(line: 24, column: 41, scope: !11410)
!11432 = !DILocation(line: 24, column: 46, scope: !11410)
!11433 = !DILocation(line: 0, scope: !11410)
!11434 = !DILocation(line: 24, column: 9, scope: !11410)
!11435 = !DILocation(line: 25, column: 7, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11410, file: !11411, line: 25, column: 6)
!11437 = !DILocation(line: 25, column: 14, scope: !11436)
!11438 = !DILocation(line: 25, column: 17, scope: !11436)
!11439 = !DILocation(line: 25, column: 21, scope: !11436)
!11440 = !DILocation(line: 25, column: 28, scope: !11436)
!11441 = !DILocation(line: 25, column: 32, scope: !11436)
!11442 = !DILocation(line: 25, column: 26, scope: !11436)
!11443 = !DILocation(line: 25, column: 6, scope: !11410)
!11444 = !DILocation(line: 26, column: 8, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11446, file: !11411, line: 26, column: 7)
!11446 = distinct !DILexicalBlock(scope: !11436, file: !11411, line: 25, column: 38)
!11447 = !DILocation(line: 26, column: 12, scope: !11445)
!11448 = !DILocation(line: 26, column: 7, scope: !11445)
!11449 = !DILocation(line: 26, column: 18, scope: !11445)
!11450 = !DILocation(line: 26, column: 7, scope: !11446)
!11451 = !DILocation(line: 27, column: 34, scope: !11445)
!11452 = !DILocation(line: 27, column: 18, scope: !11445)
!11453 = !DILocation(line: 27, column: 22, scope: !11445)
!11454 = !DILocation(line: 27, column: 26, scope: !11445)
!11455 = !DILocation(line: 27, column: 5, scope: !11445)
!11456 = !DILocation(line: 27, column: 32, scope: !11445)
!11457 = !DILocation(line: 27, column: 4, scope: !11445)
!11458 = !DILocation(line: 28, column: 35, scope: !11446)
!11459 = !DILocation(line: 28, column: 17, scope: !11446)
!11460 = !DILocation(line: 28, column: 21, scope: !11446)
!11461 = !DILocation(line: 28, column: 25, scope: !11446)
!11462 = !DILocation(line: 28, column: 29, scope: !11446)
!11463 = !DILocation(line: 28, column: 4, scope: !11446)
!11464 = !DILocation(line: 28, column: 33, scope: !11446)
!11465 = !DILocation(line: 29, column: 3, scope: !11446)
!11466 = !DILocation(line: 31, column: 32, scope: !11410)
!11467 = !DILocation(line: 31, column: 38, scope: !11410)
!11468 = !DILocation(line: 31, column: 42, scope: !11410)
!11469 = !DILocation(line: 31, column: 9, scope: !11410)
!11470 = !DILocation(line: 31, column: 2, scope: !11410)
!11471 = !DILocation(line: 32, column: 1, scope: !11410)
!11472 = distinct !DISubprogram(name: "free_rbufs", scope: !3, file: !3, line: 4579, type: !11473, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11473 = !DISubroutineType(types: !11474)
!11474 = !{null, !7530, !7, !7}
!11475 = !DILocalVariable(name: "info", arg: 1, scope: !11472, file: !3, line: 4579, type: !7530)
!11476 = !DILocation(line: 4579, column: 42, scope: !11472)
!11477 = !DILocalVariable(name: "i", arg: 2, scope: !11472, file: !3, line: 4579, type: !7)
!11478 = !DILocation(line: 4579, column: 61, scope: !11472)
!11479 = !DILocalVariable(name: "last", arg: 3, scope: !11472, file: !3, line: 4579, type: !7)
!11480 = !DILocation(line: 4579, column: 77, scope: !11472)
!11481 = !DILocalVariable(name: "done", scope: !11472, file: !3, line: 4581, type: !32)
!11482 = !DILocation(line: 4581, column: 6, scope: !11472)
!11483 = !DILocation(line: 4583, column: 2, scope: !11472)
!11484 = !DILocation(line: 4583, column: 9, scope: !11472)
!11485 = !DILocation(line: 4583, column: 8, scope: !11472)
!11486 = !DILocation(line: 4585, column: 3, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 4583, column: 15)
!11488 = !DILocation(line: 4585, column: 9, scope: !11487)
!11489 = !DILocation(line: 4585, column: 15, scope: !11487)
!11490 = !DILocation(line: 4585, column: 18, scope: !11487)
!11491 = !DILocation(line: 4585, column: 25, scope: !11487)
!11492 = !DILocation(line: 4586, column: 3, scope: !11487)
!11493 = !DILocation(line: 4587, column: 7, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 4587, column: 7)
!11495 = !DILocation(line: 4587, column: 12, scope: !11494)
!11496 = !DILocation(line: 4587, column: 9, scope: !11494)
!11497 = !DILocation(line: 4587, column: 7, scope: !11487)
!11498 = !DILocation(line: 4588, column: 9, scope: !11494)
!11499 = !DILocation(line: 4588, column: 4, scope: !11494)
!11500 = !DILocation(line: 4589, column: 7, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11487, file: !3, line: 4589, column: 7)
!11502 = !DILocation(line: 4589, column: 14, scope: !11501)
!11503 = !DILocation(line: 4589, column: 20, scope: !11501)
!11504 = !DILocation(line: 4589, column: 11, scope: !11501)
!11505 = !DILocation(line: 4589, column: 7, scope: !11487)
!11506 = !DILocation(line: 4590, column: 6, scope: !11501)
!11507 = !DILocation(line: 4590, column: 4, scope: !11501)
!11508 = distinct !{!11508, !11483, !11509}
!11509 = !DILocation(line: 4591, column: 2, scope: !11472)
!11510 = !DILocation(line: 4592, column: 23, scope: !11472)
!11511 = !DILocation(line: 4592, column: 2, scope: !11472)
!11512 = !DILocation(line: 4592, column: 8, scope: !11472)
!11513 = !DILocation(line: 4592, column: 21, scope: !11472)
!11514 = !DILocation(line: 4593, column: 1, scope: !11472)
!11515 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !3762, file: !3762, line: 80, type: !11516, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11516 = !DISubroutineType(types: !11517)
!11517 = !{!1038, !4773, !32}
!11518 = !DILocalVariable(name: "b", arg: 1, scope: !11515, file: !3762, line: 80, type: !4773)
!11519 = !DILocation(line: 80, column: 53, scope: !11515)
!11520 = !DILocalVariable(name: "ofs", arg: 2, scope: !11515, file: !3762, line: 80, type: !32)
!11521 = !DILocation(line: 80, column: 60, scope: !11515)
!11522 = !DILocation(line: 82, column: 30, scope: !11515)
!11523 = !DILocation(line: 82, column: 33, scope: !11515)
!11524 = !DILocation(line: 82, column: 17, scope: !11515)
!11525 = !DILocation(line: 82, column: 40, scope: !11515)
!11526 = !DILocation(line: 82, column: 43, scope: !11515)
!11527 = !DILocation(line: 82, column: 38, scope: !11515)
!11528 = !DILocation(line: 82, column: 2, scope: !11515)
!11529 = distinct !DISubprogram(name: "char_buf_ptr", scope: !3762, file: !3762, line: 75, type: !11530, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11530 = !DISubroutineType(types: !11531)
!11531 = !{!564, !4773, !32}
!11532 = !DILocalVariable(name: "b", arg: 1, scope: !11529, file: !3762, line: 75, type: !4773)
!11533 = !DILocation(line: 75, column: 62, scope: !11529)
!11534 = !DILocalVariable(name: "ofs", arg: 2, scope: !11529, file: !3762, line: 75, type: !32)
!11535 = !DILocation(line: 75, column: 69, scope: !11529)
!11536 = !DILocation(line: 77, column: 27, scope: !11529)
!11537 = !DILocation(line: 77, column: 30, scope: !11529)
!11538 = !DILocation(line: 77, column: 10, scope: !11529)
!11539 = !DILocation(line: 77, column: 38, scope: !11529)
!11540 = !DILocation(line: 77, column: 36, scope: !11529)
!11541 = !DILocation(line: 77, column: 2, scope: !11529)
!11542 = distinct !DISubprogram(name: "hdlcdev_rx", scope: !3, file: !3, line: 1719, type: !11543, scopeLine: 1720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11543 = !DISubroutineType(types: !11544)
!11544 = !{null, !7530, !1038, !32}
!11545 = !DILocalVariable(name: "info", arg: 1, scope: !11542, file: !3, line: 1719, type: !7530)
!11546 = !DILocation(line: 1719, column: 42, scope: !11542)
!11547 = !DILocalVariable(name: "buf", arg: 2, scope: !11542, file: !3, line: 1719, type: !1038)
!11548 = !DILocation(line: 1719, column: 54, scope: !11542)
!11549 = !DILocalVariable(name: "size", arg: 3, scope: !11542, file: !3, line: 1719, type: !32)
!11550 = !DILocation(line: 1719, column: 63, scope: !11542)
!11551 = !DILocalVariable(name: "skb", scope: !11542, file: !3, line: 1721, type: !415)
!11552 = !DILocation(line: 1721, column: 18, scope: !11542)
!11553 = !DILocation(line: 1721, column: 38, scope: !11542)
!11554 = !DILocation(line: 1721, column: 24, scope: !11542)
!11555 = !DILocalVariable(name: "dev", scope: !11542, file: !3, line: 1722, type: !290)
!11556 = !DILocation(line: 1722, column: 21, scope: !11542)
!11557 = !DILocation(line: 1722, column: 27, scope: !11542)
!11558 = !DILocation(line: 1722, column: 33, scope: !11542)
!11559 = !DILocation(line: 1724, column: 2, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 1724, column: 2)
!11561 = !DILocation(line: 1724, column: 2, scope: !11542)
!11562 = !DILocation(line: 1726, column: 6, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 1726, column: 6)
!11564 = !DILocation(line: 1726, column: 10, scope: !11563)
!11565 = !DILocation(line: 1726, column: 6, scope: !11542)
!11566 = !DILocation(line: 1727, column: 3, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 1727, column: 3)
!11568 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 1726, column: 19)
!11569 = !DILocation(line: 1727, column: 3, scope: !11568)
!11570 = !DILocation(line: 1728, column: 3, scope: !11568)
!11571 = !DILocation(line: 1728, column: 8, scope: !11568)
!11572 = !DILocation(line: 1728, column: 14, scope: !11568)
!11573 = !DILocation(line: 1728, column: 24, scope: !11568)
!11574 = !DILocation(line: 1729, column: 3, scope: !11568)
!11575 = !DILocation(line: 1732, column: 15, scope: !11542)
!11576 = !DILocation(line: 1732, column: 20, scope: !11542)
!11577 = !DILocation(line: 1732, column: 25, scope: !11542)
!11578 = !DILocation(line: 1732, column: 2, scope: !11542)
!11579 = !DILocation(line: 1734, column: 34, scope: !11542)
!11580 = !DILocation(line: 1734, column: 39, scope: !11542)
!11581 = !DILocation(line: 1734, column: 18, scope: !11542)
!11582 = !DILocation(line: 1734, column: 2, scope: !11542)
!11583 = !DILocation(line: 1734, column: 7, scope: !11542)
!11584 = !DILocation(line: 1734, column: 16, scope: !11542)
!11585 = !DILocation(line: 1736, column: 2, scope: !11542)
!11586 = !DILocation(line: 1736, column: 7, scope: !11542)
!11587 = !DILocation(line: 1736, column: 13, scope: !11542)
!11588 = !DILocation(line: 1736, column: 23, scope: !11542)
!11589 = !DILocation(line: 1737, column: 25, scope: !11542)
!11590 = !DILocation(line: 1737, column: 2, scope: !11542)
!11591 = !DILocation(line: 1737, column: 7, scope: !11542)
!11592 = !DILocation(line: 1737, column: 13, scope: !11542)
!11593 = !DILocation(line: 1737, column: 22, scope: !11542)
!11594 = !DILocation(line: 1739, column: 11, scope: !11542)
!11595 = !DILocation(line: 1739, column: 2, scope: !11542)
!11596 = !DILocation(line: 1740, column: 1, scope: !11542)
!11597 = distinct !DISubprogram(name: "ldisc_receive_buf", scope: !3, file: !3, line: 631, type: !11598, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{null, !3760, !11600, !1038, !32}
!11600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11601, size: 64)
!11601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !481)
!11602 = !DILocalVariable(name: "tty", arg: 1, scope: !11597, file: !3, line: 631, type: !3760)
!11603 = !DILocation(line: 631, column: 50, scope: !11597)
!11604 = !DILocalVariable(name: "data", arg: 2, scope: !11597, file: !3, line: 632, type: !11600)
!11605 = !DILocation(line: 632, column: 22, scope: !11597)
!11606 = !DILocalVariable(name: "flags", arg: 3, scope: !11597, file: !3, line: 632, type: !1038)
!11607 = !DILocation(line: 632, column: 34, scope: !11597)
!11608 = !DILocalVariable(name: "count", arg: 4, scope: !11597, file: !3, line: 632, type: !32)
!11609 = !DILocation(line: 632, column: 45, scope: !11597)
!11610 = !DILocalVariable(name: "ld", scope: !11597, file: !3, line: 634, type: !5025)
!11611 = !DILocation(line: 634, column: 20, scope: !11597)
!11612 = !DILocation(line: 635, column: 7, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 635, column: 6)
!11614 = !DILocation(line: 635, column: 6, scope: !11597)
!11615 = !DILocation(line: 636, column: 3, scope: !11613)
!11616 = !DILocation(line: 637, column: 21, scope: !11597)
!11617 = !DILocation(line: 637, column: 7, scope: !11597)
!11618 = !DILocation(line: 637, column: 5, scope: !11597)
!11619 = !DILocation(line: 638, column: 6, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 638, column: 6)
!11621 = !DILocation(line: 638, column: 6, scope: !11597)
!11622 = !DILocation(line: 639, column: 7, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11624, file: !3, line: 639, column: 7)
!11624 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 638, column: 10)
!11625 = !DILocation(line: 639, column: 11, scope: !11623)
!11626 = !DILocation(line: 639, column: 16, scope: !11623)
!11627 = !DILocation(line: 639, column: 7, scope: !11624)
!11628 = !DILocation(line: 640, column: 4, scope: !11623)
!11629 = !DILocation(line: 640, column: 8, scope: !11623)
!11630 = !DILocation(line: 640, column: 13, scope: !11623)
!11631 = !DILocation(line: 640, column: 25, scope: !11623)
!11632 = !DILocation(line: 640, column: 30, scope: !11623)
!11633 = !DILocation(line: 640, column: 36, scope: !11623)
!11634 = !DILocation(line: 640, column: 43, scope: !11623)
!11635 = !DILocation(line: 641, column: 19, scope: !11624)
!11636 = !DILocation(line: 641, column: 3, scope: !11624)
!11637 = !DILocation(line: 642, column: 2, scope: !11624)
!11638 = !DILocation(line: 643, column: 1, scope: !11597)
!11639 = distinct !DISubprogram(name: "dev_alloc_skb", scope: !417, file: !417, line: 2837, type: !11640, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{!415, !7}
!11642 = !DILocalVariable(name: "length", arg: 1, scope: !11639, file: !417, line: 2837, type: !7)
!11643 = !DILocation(line: 2837, column: 58, scope: !11639)
!11644 = !DILocation(line: 2839, column: 32, scope: !11639)
!11645 = !DILocation(line: 2839, column: 9, scope: !11639)
!11646 = !DILocation(line: 2839, column: 2, scope: !11639)
!11647 = distinct !DISubprogram(name: "skb_put_data", scope: !417, file: !417, line: 2270, type: !11648, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11648 = !DISubroutineType(types: !11649)
!11649 = !{!591, !415, !3276, !7}
!11650 = !DILocalVariable(name: "skb", arg: 1, scope: !11647, file: !417, line: 2270, type: !415)
!11651 = !DILocation(line: 2270, column: 50, scope: !11647)
!11652 = !DILocalVariable(name: "data", arg: 2, scope: !11647, file: !417, line: 2270, type: !3276)
!11653 = !DILocation(line: 2270, column: 67, scope: !11647)
!11654 = !DILocalVariable(name: "len", arg: 3, scope: !11647, file: !417, line: 2271, type: !7)
!11655 = !DILocation(line: 2271, column: 19, scope: !11647)
!11656 = !DILocalVariable(name: "tmp", scope: !11647, file: !417, line: 2273, type: !591)
!11657 = !DILocation(line: 2273, column: 8, scope: !11647)
!11658 = !DILocation(line: 2273, column: 22, scope: !11647)
!11659 = !DILocation(line: 2273, column: 27, scope: !11647)
!11660 = !DILocation(line: 2273, column: 14, scope: !11647)
!11661 = !DILocation(line: 2275, column: 9, scope: !11647)
!11662 = !DILocation(line: 2275, column: 14, scope: !11647)
!11663 = !DILocation(line: 2275, column: 20, scope: !11647)
!11664 = !DILocation(line: 2275, column: 2, scope: !11647)
!11665 = !DILocation(line: 2277, column: 9, scope: !11647)
!11666 = !DILocation(line: 2277, column: 2, scope: !11647)
!11667 = distinct !DISubprogram(name: "hdlc_type_trans", scope: !11668, file: !11668, line: 101, type: !11669, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11668 = !DIFile(filename: "./include/linux/hdlc.h", directory: "/home/lizy2001/genbc/linux")
!11669 = !DISubroutineType(types: !11670)
!11670 = !{!535, !415, !290}
!11671 = !DILocalVariable(name: "skb", arg: 1, scope: !11667, file: !11668, line: 101, type: !415)
!11672 = !DILocation(line: 101, column: 58, scope: !11667)
!11673 = !DILocalVariable(name: "dev", arg: 2, scope: !11667, file: !11668, line: 102, type: !290)
!11674 = !DILocation(line: 102, column: 26, scope: !11667)
!11675 = !DILocalVariable(name: "hdlc", scope: !11667, file: !11668, line: 104, type: !11676)
!11676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11677, size: 64)
!11677 = !DIDerivedType(tag: DW_TAG_typedef, name: "hdlc_device", file: !11668, line: 50, baseType: !11678)
!11678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdlc_device", file: !11668, line: 35, size: 384, elements: !11679)
!11679 = !{!11680, !11684, !11685, !11709, !11710, !11711, !11712, !11713}
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !11678, file: !11668, line: 37, baseType: !11681, size: 64)
!11681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11682, size: 64)
!11682 = !DISubroutineType(types: !11683)
!11683 = !{!32, !290, !476, !476}
!11684 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !11678, file: !11668, line: 41, baseType: !411, size: 64, offset: 64)
!11685 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !11678, file: !11668, line: 44, baseType: !11686, size: 64, offset: 128)
!11686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11687, size: 64)
!11687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11688)
!11688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdlc_proto", file: !11668, line: 19, size: 704, elements: !11689)
!11689 = !{!11690, !11691, !11692, !11693, !11694, !11695, !11699, !11701, !11705, !11706, !11707}
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !11688, file: !11668, line: 20, baseType: !401, size: 64)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !11688, file: !11668, line: 21, baseType: !405, size: 64, offset: 64)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11688, file: !11668, line: 22, baseType: !405, size: 64, offset: 128)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !11688, file: !11668, line: 23, baseType: !405, size: 64, offset: 192)
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !11688, file: !11668, line: 24, baseType: !405, size: 64, offset: 256)
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !11688, file: !11668, line: 25, baseType: !11696, size: 64, offset: 320)
!11696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11697, size: 64)
!11697 = !DISubroutineType(types: !11698)
!11698 = !{!32, !290, !597}
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "type_trans", scope: !11688, file: !11668, line: 26, baseType: !11700, size: 64, offset: 384)
!11700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11669, size: 64)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "netif_rx", scope: !11688, file: !11668, line: 27, baseType: !11702, size: 64, offset: 448)
!11702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11703, size: 64)
!11703 = !DISubroutineType(types: !11704)
!11704 = !{!32, !415}
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !11688, file: !11668, line: 28, baseType: !411, size: 64, offset: 512)
!11706 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !11688, file: !11668, line: 29, baseType: !980, size: 64, offset: 576)
!11707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11688, file: !11668, line: 30, baseType: !11708, size: 64, offset: 640)
!11708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11688, size: 64)
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "carrier", scope: !11678, file: !11668, line: 45, baseType: !32, size: 32, offset: 192)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !11678, file: !11668, line: 46, baseType: !32, size: 32, offset: 224)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "state_lock", scope: !11678, file: !11668, line: 47, baseType: !1670, offset: 256)
!11712 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11678, file: !11668, line: 48, baseType: !591, size: 64, offset: 256)
!11713 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !11678, file: !11668, line: 49, baseType: !591, size: 64, offset: 320)
!11714 = !DILocation(line: 104, column: 15, scope: !11667)
!11715 = !DILocation(line: 104, column: 34, scope: !11667)
!11716 = !DILocation(line: 104, column: 22, scope: !11667)
!11717 = !DILocation(line: 106, column: 13, scope: !11667)
!11718 = !DILocation(line: 106, column: 2, scope: !11667)
!11719 = !DILocation(line: 106, column: 7, scope: !11667)
!11720 = !DILocation(line: 106, column: 11, scope: !11667)
!11721 = !DILocation(line: 107, column: 23, scope: !11667)
!11722 = !DILocation(line: 107, column: 2, scope: !11667)
!11723 = !DILocation(line: 109, column: 6, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11667, file: !11668, line: 109, column: 6)
!11725 = !DILocation(line: 109, column: 12, scope: !11724)
!11726 = !DILocation(line: 109, column: 19, scope: !11724)
!11727 = !DILocation(line: 109, column: 6, scope: !11667)
!11728 = !DILocation(line: 110, column: 10, scope: !11724)
!11729 = !DILocation(line: 110, column: 16, scope: !11724)
!11730 = !DILocation(line: 110, column: 23, scope: !11724)
!11731 = !DILocation(line: 110, column: 34, scope: !11724)
!11732 = !DILocation(line: 110, column: 39, scope: !11724)
!11733 = !DILocation(line: 110, column: 3, scope: !11724)
!11734 = !DILocation(line: 112, column: 3, scope: !11724)
!11735 = !DILocation(line: 113, column: 1, scope: !11667)
!11736 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !417, file: !417, line: 2823, type: !11737, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11737 = !DISubroutineType(types: !11738)
!11738 = !{!415, !290, !7}
!11739 = !DILocalVariable(name: "dev", arg: 1, scope: !11736, file: !417, line: 2823, type: !290)
!11740 = !DILocation(line: 2823, column: 67, scope: !11736)
!11741 = !DILocalVariable(name: "length", arg: 2, scope: !11736, file: !417, line: 2824, type: !7)
!11742 = !DILocation(line: 2824, column: 26, scope: !11736)
!11743 = !DILocation(line: 2826, column: 28, scope: !11736)
!11744 = !DILocation(line: 2826, column: 33, scope: !11736)
!11745 = !DILocation(line: 2826, column: 9, scope: !11736)
!11746 = !DILocation(line: 2826, column: 2, scope: !11736)
!11747 = distinct !DISubprogram(name: "dev_to_hdlc", scope: !11668, file: !11668, line: 69, type: !11748, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11748 = !DISubroutineType(types: !11749)
!11749 = !{!11750, !290}
!11750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11678, size: 64)
!11751 = !DILocalVariable(name: "dev", arg: 1, scope: !11747, file: !11668, line: 69, type: !290)
!11752 = !DILocation(line: 69, column: 66, scope: !11747)
!11753 = !DILocation(line: 71, column: 21, scope: !11747)
!11754 = !DILocation(line: 71, column: 9, scope: !11747)
!11755 = !DILocation(line: 71, column: 2, scope: !11747)
!11756 = distinct !DISubprogram(name: "skb_reset_mac_header", scope: !417, file: !417, line: 2556, type: !469, scopeLine: 2557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11757 = !DILocalVariable(name: "skb", arg: 1, scope: !11756, file: !417, line: 2556, type: !415)
!11758 = !DILocation(line: 2556, column: 57, scope: !11756)
!11759 = !DILocation(line: 2558, column: 20, scope: !11756)
!11760 = !DILocation(line: 2558, column: 25, scope: !11756)
!11761 = !DILocation(line: 2558, column: 32, scope: !11756)
!11762 = !DILocation(line: 2558, column: 37, scope: !11756)
!11763 = !DILocation(line: 2558, column: 30, scope: !11756)
!11764 = !DILocation(line: 2558, column: 2, scope: !11756)
!11765 = !DILocation(line: 2558, column: 7, scope: !11756)
!11766 = !DILocation(line: 2558, column: 18, scope: !11756)
!11767 = !DILocation(line: 2559, column: 1, scope: !11756)
!11768 = distinct !DISubprogram(name: "netdev_priv", scope: !31, file: !31, line: 2322, type: !11769, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11769 = !DISubroutineType(types: !11770)
!11770 = !{!591, !773}
!11771 = !DILocalVariable(name: "dev", arg: 1, scope: !11768, file: !31, line: 2322, type: !773)
!11772 = !DILocation(line: 2322, column: 58, scope: !11768)
!11773 = !DILocation(line: 2324, column: 17, scope: !11768)
!11774 = !DILocation(line: 2324, column: 9, scope: !11768)
!11775 = !DILocation(line: 2324, column: 21, scope: !11768)
!11776 = !DILocation(line: 2324, column: 2, scope: !11768)
!11777 = distinct !DISubprogram(name: "reset_rbufs", scope: !3, file: !3, line: 4598, type: !8337, scopeLine: 4599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11778 = !DILocalVariable(name: "info", arg: 1, scope: !11777, file: !3, line: 4598, type: !7530)
!11779 = !DILocation(line: 4598, column: 43, scope: !11777)
!11780 = !DILocation(line: 4600, column: 13, scope: !11777)
!11781 = !DILocation(line: 4600, column: 22, scope: !11777)
!11782 = !DILocation(line: 4600, column: 28, scope: !11777)
!11783 = !DILocation(line: 4600, column: 39, scope: !11777)
!11784 = !DILocation(line: 4600, column: 2, scope: !11777)
!11785 = !DILocation(line: 4601, column: 2, scope: !11777)
!11786 = !DILocation(line: 4601, column: 8, scope: !11777)
!11787 = !DILocation(line: 4601, column: 24, scope: !11777)
!11788 = !DILocation(line: 4602, column: 2, scope: !11777)
!11789 = !DILocation(line: 4602, column: 8, scope: !11777)
!11790 = !DILocation(line: 4602, column: 24, scope: !11777)
!11791 = !DILocation(line: 4603, column: 1, scope: !11777)
!11792 = distinct !DISubprogram(name: "hdlcdev_tx_done", scope: !3, file: !3, line: 1705, type: !8337, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11793 = !DILocalVariable(name: "info", arg: 1, scope: !11792, file: !3, line: 1705, type: !7530)
!11794 = !DILocation(line: 1705, column: 47, scope: !11792)
!11795 = !DILocation(line: 1707, column: 26, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 1707, column: 6)
!11797 = !DILocation(line: 1707, column: 32, scope: !11796)
!11798 = !DILocation(line: 1707, column: 6, scope: !11796)
!11799 = !DILocation(line: 1707, column: 6, scope: !11792)
!11800 = !DILocation(line: 1708, column: 20, scope: !11796)
!11801 = !DILocation(line: 1708, column: 26, scope: !11796)
!11802 = !DILocation(line: 1708, column: 3, scope: !11796)
!11803 = !DILocation(line: 1709, column: 1, scope: !11792)
!11804 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !31, file: !31, line: 3354, type: !11805, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11805 = !DISubroutineType(types: !11806)
!11806 = !{!771, !773}
!11807 = !DILocalVariable(name: "dev", arg: 1, scope: !11804, file: !31, line: 3354, type: !773)
!11808 = !DILocation(line: 3354, column: 65, scope: !11804)
!11809 = !DILocation(line: 3356, column: 52, scope: !11804)
!11810 = !DILocation(line: 3356, column: 32, scope: !11804)
!11811 = !DILocation(line: 3356, column: 9, scope: !11804)
!11812 = !DILocation(line: 3356, column: 2, scope: !11804)
!11813 = distinct !DISubprogram(name: "netif_wake_queue", scope: !31, file: !31, line: 3309, type: !406, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11814 = !DILocalVariable(name: "dev", arg: 1, scope: !11813, file: !31, line: 3309, type: !290)
!11815 = !DILocation(line: 3309, column: 56, scope: !11813)
!11816 = !DILocation(line: 3311, column: 42, scope: !11813)
!11817 = !DILocation(line: 3311, column: 22, scope: !11813)
!11818 = !DILocation(line: 3311, column: 2, scope: !11813)
!11819 = !DILocation(line: 3312, column: 1, scope: !11813)
!11820 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !31, file: !31, line: 3343, type: !11821, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{!771, !11823}
!11823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11824, size: 64)
!11824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7316)
!11825 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !11820, file: !31, line: 3343, type: !11823)
!11826 = !DILocation(line: 3343, column: 70, scope: !11820)
!11827 = !DILocation(line: 3345, column: 43, scope: !11820)
!11828 = !DILocation(line: 3345, column: 54, scope: !11820)
!11829 = !DILocation(line: 3345, column: 9, scope: !11820)
!11830 = !DILocation(line: 3345, column: 2, scope: !11820)
!11831 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !31, file: !31, line: 2234, type: !11832, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{!7315, !773, !7}
!11834 = !DILocalVariable(name: "dev", arg: 1, scope: !11831, file: !31, line: 2234, type: !773)
!11835 = !DILocation(line: 2234, column: 67, scope: !11831)
!11836 = !DILocalVariable(name: "index", arg: 2, scope: !11831, file: !31, line: 2235, type: !7)
!11837 = !DILocation(line: 2235, column: 20, scope: !11831)
!11838 = !DILocation(line: 2237, column: 10, scope: !11831)
!11839 = !DILocation(line: 2237, column: 15, scope: !11831)
!11840 = !DILocation(line: 2237, column: 19, scope: !11831)
!11841 = !DILocation(line: 2237, column: 2, scope: !11831)
!11842 = distinct !DISubprogram(name: "test_bit", scope: !11843, file: !11843, line: 132, type: !11844, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11843 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!11844 = !DISubroutineType(types: !11845)
!11845 = !{!771, !998, !11846}
!11846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11847, size: 64)
!11847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11848)
!11848 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!11849 = !DILocalVariable(name: "nr", arg: 1, scope: !11850, file: !10278, line: 210, type: !998)
!11850 = distinct !DISubprogram(name: "variable_test_bit", scope: !10278, file: !10278, line: 210, type: !11844, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11851 = !DILocation(line: 210, column: 52, scope: !11850, inlinedAt: !11852)
!11852 = distinct !DILocation(line: 135, column: 9, scope: !11842)
!11853 = !DILocalVariable(name: "addr", arg: 2, scope: !11850, file: !10278, line: 210, type: !11846)
!11854 = !DILocation(line: 210, column: 86, scope: !11850, inlinedAt: !11852)
!11855 = !DILocalVariable(name: "oldbit", scope: !11850, file: !10278, line: 212, type: !771)
!11856 = !DILocation(line: 212, column: 7, scope: !11850, inlinedAt: !11852)
!11857 = !DILocalVariable(name: "nr", arg: 1, scope: !11858, file: !10278, line: 204, type: !998)
!11858 = distinct !DISubprogram(name: "constant_test_bit", scope: !10278, file: !10278, line: 204, type: !11844, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11859 = !DILocation(line: 204, column: 52, scope: !11858, inlinedAt: !11860)
!11860 = distinct !DILocation(line: 135, column: 9, scope: !11842)
!11861 = !DILocalVariable(name: "addr", arg: 2, scope: !11858, file: !10278, line: 204, type: !11846)
!11862 = !DILocation(line: 204, column: 86, scope: !11858, inlinedAt: !11860)
!11863 = !DILocalVariable(name: "v", arg: 1, scope: !11864, file: !11865, line: 69, type: !8685)
!11864 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11865, file: !11865, line: 69, type: !11866, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11865 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11866 = !DISubroutineType(types: !11867)
!11867 = !{null, !8685, !1039}
!11868 = !DILocation(line: 69, column: 73, scope: !11864, inlinedAt: !11869)
!11869 = distinct !DILocation(line: 134, column: 2, scope: !11842)
!11870 = !DILocalVariable(name: "size", arg: 2, scope: !11864, file: !11865, line: 69, type: !1039)
!11871 = !DILocation(line: 69, column: 83, scope: !11864, inlinedAt: !11869)
!11872 = !DILocalVariable(name: "nr", arg: 1, scope: !11842, file: !11843, line: 132, type: !998)
!11873 = !DILocation(line: 132, column: 34, scope: !11842)
!11874 = !DILocalVariable(name: "addr", arg: 2, scope: !11842, file: !11843, line: 132, type: !11846)
!11875 = !DILocation(line: 132, column: 68, scope: !11842)
!11876 = !DILocation(line: 134, column: 25, scope: !11842)
!11877 = !DILocation(line: 134, column: 32, scope: !11842)
!11878 = !DILocation(line: 134, column: 30, scope: !11842)
!11879 = !DILocation(line: 71, column: 19, scope: !11864, inlinedAt: !11869)
!11880 = !DILocation(line: 71, column: 22, scope: !11864, inlinedAt: !11869)
!11881 = !DILocation(line: 71, column: 2, scope: !11864, inlinedAt: !11869)
!11882 = !DILocation(line: 72, column: 2, scope: !11864, inlinedAt: !11869)
!11883 = !DILocation(line: 135, column: 9, scope: !11842)
!11884 = !DILocation(line: 206, column: 19, scope: !11858, inlinedAt: !11860)
!11885 = !DILocation(line: 206, column: 22, scope: !11858, inlinedAt: !11860)
!11886 = !DILocation(line: 206, column: 15, scope: !11858, inlinedAt: !11860)
!11887 = !DILocation(line: 207, column: 4, scope: !11858, inlinedAt: !11860)
!11888 = !DILocation(line: 207, column: 9, scope: !11858, inlinedAt: !11860)
!11889 = !DILocation(line: 207, column: 12, scope: !11858, inlinedAt: !11860)
!11890 = !DILocation(line: 206, column: 44, scope: !11858, inlinedAt: !11860)
!11891 = !DILocation(line: 207, column: 37, scope: !11858, inlinedAt: !11860)
!11892 = !DILocation(line: 217, column: 33, scope: !11850, inlinedAt: !11852)
!11893 = !DILocation(line: 217, column: 46, scope: !11850, inlinedAt: !11852)
!11894 = !DILocation(line: 214, column: 2, scope: !11850, inlinedAt: !11852)
!11895 = !{i32 -2147012087, i32 -2147012027}
!11896 = !DILocation(line: 219, column: 9, scope: !11850, inlinedAt: !11852)
!11897 = !DILocation(line: 135, column: 2, scope: !11842)
!11898 = distinct !DISubprogram(name: "kasan_check_read", scope: !11899, file: !11899, line: 34, type: !11900, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11899 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11900 = !DISubroutineType(types: !11901)
!11901 = !{!771, !8685, !7}
!11902 = !DILocalVariable(name: "p", arg: 1, scope: !11898, file: !11899, line: 34, type: !8685)
!11903 = !DILocation(line: 34, column: 58, scope: !11898)
!11904 = !DILocalVariable(name: "size", arg: 2, scope: !11898, file: !11899, line: 34, type: !7)
!11905 = !DILocation(line: 34, column: 74, scope: !11898)
!11906 = !DILocation(line: 36, column: 2, scope: !11898)
!11907 = distinct !DISubprogram(name: "kcsan_check_access", scope: !11908, file: !11908, line: 178, type: !11909, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11908 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!11909 = !DISubroutineType(types: !11910)
!11910 = !{null, !8685, !1039, !32}
!11911 = !DILocalVariable(name: "ptr", arg: 1, scope: !11907, file: !11908, line: 178, type: !8685)
!11912 = !DILocation(line: 178, column: 60, scope: !11907)
!11913 = !DILocalVariable(name: "size", arg: 2, scope: !11907, file: !11908, line: 178, type: !1039)
!11914 = !DILocation(line: 178, column: 72, scope: !11907)
!11915 = !DILocalVariable(name: "type", arg: 3, scope: !11907, file: !11908, line: 179, type: !32)
!11916 = !DILocation(line: 179, column: 15, scope: !11907)
!11917 = !DILocation(line: 179, column: 23, scope: !11907)
!11918 = distinct !DISubprogram(name: "hdlcdev_init", scope: !3, file: !3, line: 1758, type: !8119, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11919 = !DILocalVariable(name: "info", arg: 1, scope: !11918, file: !3, line: 1758, type: !7530)
!11920 = !DILocation(line: 1758, column: 43, scope: !11918)
!11921 = !DILocalVariable(name: "rc", scope: !11918, file: !3, line: 1760, type: !32)
!11922 = !DILocation(line: 1760, column: 6, scope: !11918)
!11923 = !DILocalVariable(name: "dev", scope: !11918, file: !3, line: 1761, type: !290)
!11924 = !DILocation(line: 1761, column: 21, scope: !11918)
!11925 = !DILocalVariable(name: "hdlc", scope: !11918, file: !3, line: 1762, type: !11676)
!11926 = !DILocation(line: 1762, column: 15, scope: !11918)
!11927 = !DILocation(line: 1766, column: 22, scope: !11918)
!11928 = !DILocation(line: 1766, column: 8, scope: !11918)
!11929 = !DILocation(line: 1766, column: 6, scope: !11918)
!11930 = !DILocation(line: 1767, column: 7, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 1767, column: 6)
!11932 = !DILocation(line: 1767, column: 6, scope: !11918)
!11933 = !DILocation(line: 1768, column: 53, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 1767, column: 12)
!11935 = !DILocation(line: 1768, column: 59, scope: !11934)
!11936 = !DILocation(line: 1768, column: 3, scope: !11934)
!11937 = !DILocation(line: 1769, column: 3, scope: !11934)
!11938 = !DILocation(line: 1773, column: 19, scope: !11918)
!11939 = !DILocation(line: 1773, column: 25, scope: !11918)
!11940 = !DILocation(line: 1773, column: 2, scope: !11918)
!11941 = !DILocation(line: 1773, column: 7, scope: !11918)
!11942 = !DILocation(line: 1773, column: 17, scope: !11918)
!11943 = !DILocation(line: 1774, column: 19, scope: !11918)
!11944 = !DILocation(line: 1774, column: 25, scope: !11918)
!11945 = !DILocation(line: 1774, column: 39, scope: !11918)
!11946 = !DILocation(line: 1774, column: 55, scope: !11918)
!11947 = !DILocation(line: 1774, column: 2, scope: !11918)
!11948 = !DILocation(line: 1774, column: 7, scope: !11918)
!11949 = !DILocation(line: 1774, column: 17, scope: !11918)
!11950 = !DILocation(line: 1775, column: 19, scope: !11918)
!11951 = !DILocation(line: 1775, column: 25, scope: !11918)
!11952 = !DILocation(line: 1775, column: 2, scope: !11918)
!11953 = !DILocation(line: 1775, column: 7, scope: !11918)
!11954 = !DILocation(line: 1775, column: 17, scope: !11918)
!11955 = !DILocation(line: 1778, column: 2, scope: !11918)
!11956 = !DILocation(line: 1778, column: 7, scope: !11918)
!11957 = !DILocation(line: 1778, column: 22, scope: !11918)
!11958 = !DILocation(line: 1779, column: 2, scope: !11918)
!11959 = !DILocation(line: 1779, column: 7, scope: !11918)
!11960 = !DILocation(line: 1779, column: 22, scope: !11918)
!11961 = !DILocation(line: 1780, column: 2, scope: !11918)
!11962 = !DILocation(line: 1780, column: 7, scope: !11918)
!11963 = !DILocation(line: 1780, column: 22, scope: !11918)
!11964 = !DILocation(line: 1783, column: 29, scope: !11918)
!11965 = !DILocation(line: 1783, column: 17, scope: !11918)
!11966 = !DILocation(line: 1783, column: 15, scope: !11918)
!11967 = !DILocation(line: 1784, column: 2, scope: !11918)
!11968 = !DILocation(line: 1784, column: 8, scope: !11918)
!11969 = !DILocation(line: 1784, column: 15, scope: !11918)
!11970 = !DILocation(line: 1785, column: 2, scope: !11918)
!11971 = !DILocation(line: 1785, column: 8, scope: !11918)
!11972 = !DILocation(line: 1785, column: 15, scope: !11918)
!11973 = !DILocation(line: 1788, column: 7, scope: !11918)
!11974 = !DILocation(line: 1788, column: 5, scope: !11918)
!11975 = !DILocation(line: 1789, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 1789, column: 6)
!11977 = !DILocation(line: 1789, column: 6, scope: !11918)
!11978 = !DILocation(line: 1790, column: 3, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 1789, column: 10)
!11980 = !DILocation(line: 1791, column: 15, scope: !11979)
!11981 = !DILocation(line: 1791, column: 3, scope: !11979)
!11982 = !DILocation(line: 1792, column: 10, scope: !11979)
!11983 = !DILocation(line: 1792, column: 3, scope: !11979)
!11984 = !DILocation(line: 1795, column: 17, scope: !11918)
!11985 = !DILocation(line: 1795, column: 2, scope: !11918)
!11986 = !DILocation(line: 1795, column: 8, scope: !11918)
!11987 = !DILocation(line: 1795, column: 15, scope: !11918)
!11988 = !DILocation(line: 1796, column: 2, scope: !11918)
!11989 = !DILocation(line: 1797, column: 1, scope: !11918)
!11990 = distinct !DISubprogram(name: "hdlcdev_attach", scope: !3, file: !3, line: 1407, type: !11682, scopeLine: 1409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!11991 = !DILocalVariable(name: "dev", arg: 1, scope: !11990, file: !3, line: 1407, type: !290)
!11992 = !DILocation(line: 1407, column: 46, scope: !11990)
!11993 = !DILocalVariable(name: "encoding", arg: 2, scope: !11990, file: !3, line: 1407, type: !476)
!11994 = !DILocation(line: 1407, column: 66, scope: !11990)
!11995 = !DILocalVariable(name: "parity", arg: 3, scope: !11990, file: !3, line: 1408, type: !476)
!11996 = !DILocation(line: 1408, column: 21, scope: !11990)
!11997 = !DILocalVariable(name: "info", scope: !11990, file: !3, line: 1410, type: !7530)
!11998 = !DILocation(line: 1410, column: 20, scope: !11990)
!11999 = !DILocation(line: 1410, column: 27, scope: !11990)
!12000 = !DILocalVariable(name: "new_encoding", scope: !11990, file: !3, line: 1411, type: !482)
!12001 = !DILocation(line: 1411, column: 17, scope: !11990)
!12002 = !DILocalVariable(name: "new_crctype", scope: !11990, file: !3, line: 1412, type: !476)
!12003 = !DILocation(line: 1412, column: 17, scope: !11990)
!12004 = !DILocation(line: 1415, column: 6, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1415, column: 6)
!12006 = !DILocation(line: 1415, column: 12, scope: !12005)
!12007 = !DILocation(line: 1415, column: 17, scope: !12005)
!12008 = !DILocation(line: 1415, column: 6, scope: !11990)
!12009 = !DILocation(line: 1416, column: 3, scope: !12005)
!12010 = !DILocation(line: 1418, column: 2, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1418, column: 2)
!12012 = !DILocation(line: 1418, column: 2, scope: !11990)
!12013 = !DILocation(line: 1420, column: 10, scope: !11990)
!12014 = !DILocation(line: 1420, column: 2, scope: !11990)
!12015 = !DILocation(line: 1422, column: 41, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1421, column: 2)
!12017 = !DILocation(line: 1422, column: 62, scope: !12016)
!12018 = !DILocation(line: 1423, column: 41, scope: !12016)
!12019 = !DILocation(line: 1423, column: 69, scope: !12016)
!12020 = !DILocation(line: 1424, column: 41, scope: !12016)
!12021 = !DILocation(line: 1424, column: 71, scope: !12016)
!12022 = !DILocation(line: 1425, column: 41, scope: !12016)
!12023 = !DILocation(line: 1425, column: 72, scope: !12016)
!12024 = !DILocation(line: 1426, column: 41, scope: !12016)
!12025 = !DILocation(line: 1426, column: 72, scope: !12016)
!12026 = !DILocation(line: 1427, column: 11, scope: !12016)
!12027 = !DILocation(line: 1430, column: 10, scope: !11990)
!12028 = !DILocation(line: 1430, column: 2, scope: !11990)
!12029 = !DILocation(line: 1432, column: 43, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1431, column: 2)
!12031 = !DILocation(line: 1432, column: 60, scope: !12030)
!12032 = !DILocation(line: 1433, column: 43, scope: !12030)
!12033 = !DILocation(line: 1433, column: 64, scope: !12030)
!12034 = !DILocation(line: 1434, column: 43, scope: !12030)
!12035 = !DILocation(line: 1434, column: 64, scope: !12030)
!12036 = !DILocation(line: 1435, column: 11, scope: !12030)
!12037 = !DILocation(line: 1438, column: 26, scope: !11990)
!12038 = !DILocation(line: 1438, column: 2, scope: !11990)
!12039 = !DILocation(line: 1438, column: 8, scope: !11990)
!12040 = !DILocation(line: 1438, column: 15, scope: !11990)
!12041 = !DILocation(line: 1438, column: 24, scope: !11990)
!12042 = !DILocation(line: 1439, column: 26, scope: !11990)
!12043 = !DILocation(line: 1439, column: 2, scope: !11990)
!12044 = !DILocation(line: 1439, column: 8, scope: !11990)
!12045 = !DILocation(line: 1439, column: 15, scope: !11990)
!12046 = !DILocation(line: 1439, column: 24, scope: !11990)
!12047 = !DILocation(line: 1442, column: 6, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1442, column: 6)
!12049 = !DILocation(line: 1442, column: 12, scope: !12048)
!12050 = !DILocation(line: 1442, column: 6, scope: !11990)
!12051 = !DILocation(line: 1443, column: 14, scope: !12048)
!12052 = !DILocation(line: 1443, column: 3, scope: !12048)
!12053 = !DILocation(line: 1445, column: 2, scope: !11990)
!12054 = !DILocation(line: 1446, column: 1, scope: !11990)
!12055 = distinct !DISubprogram(name: "hdlcdev_xmit", scope: !3, file: !3, line: 1453, type: !412, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12056 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12057)
!12057 = distinct !DILocation(line: 1476, column: 2, scope: !12055)
!12058 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12057)
!12059 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12060)
!12060 = distinct !DILocation(line: 1474, column: 2, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 1474, column: 2)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1474, column: 2)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !3, line: 1474, column: 2)
!12064 = distinct !DILexicalBlock(scope: !12065, file: !3, line: 1474, column: 2)
!12065 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 1474, column: 2)
!12066 = !DILocalVariable(name: "skb", arg: 1, scope: !12055, file: !3, line: 1453, type: !415)
!12067 = !DILocation(line: 1453, column: 49, scope: !12055)
!12068 = !DILocalVariable(name: "dev", arg: 2, scope: !12055, file: !3, line: 1454, type: !290)
!12069 = !DILocation(line: 1454, column: 30, scope: !12055)
!12070 = !DILocalVariable(name: "info", scope: !12055, file: !3, line: 1456, type: !7530)
!12071 = !DILocation(line: 1456, column: 20, scope: !12055)
!12072 = !DILocation(line: 1456, column: 27, scope: !12055)
!12073 = !DILocalVariable(name: "flags", scope: !12055, file: !3, line: 1457, type: !312)
!12074 = !DILocation(line: 1457, column: 16, scope: !12055)
!12075 = !DILocation(line: 1459, column: 2, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 1459, column: 2)
!12077 = !DILocation(line: 1459, column: 2, scope: !12055)
!12078 = !DILocation(line: 1461, column: 7, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12055, file: !3, line: 1461, column: 6)
!12080 = !DILocation(line: 1461, column: 12, scope: !12079)
!12081 = !DILocation(line: 1461, column: 6, scope: !12055)
!12082 = !DILocation(line: 1462, column: 3, scope: !12079)
!12083 = !DILocation(line: 1465, column: 19, scope: !12055)
!12084 = !DILocation(line: 1465, column: 2, scope: !12055)
!12085 = !DILocation(line: 1468, column: 2, scope: !12055)
!12086 = !DILocation(line: 1468, column: 7, scope: !12055)
!12087 = !DILocation(line: 1468, column: 13, scope: !12055)
!12088 = !DILocation(line: 1468, column: 23, scope: !12055)
!12089 = !DILocation(line: 1469, column: 25, scope: !12055)
!12090 = !DILocation(line: 1469, column: 30, scope: !12055)
!12091 = !DILocation(line: 1469, column: 2, scope: !12055)
!12092 = !DILocation(line: 1469, column: 7, scope: !12055)
!12093 = !DILocation(line: 1469, column: 13, scope: !12055)
!12094 = !DILocation(line: 1469, column: 22, scope: !12055)
!12095 = !DILocation(line: 1472, column: 21, scope: !12055)
!12096 = !DILocation(line: 1472, column: 2, scope: !12055)
!12097 = !DILocation(line: 1474, column: 2, scope: !12055)
!12098 = !DILocation(line: 1474, column: 2, scope: !12065)
!12099 = !DILocalVariable(name: "__dummy", scope: !12100, file: !3, line: 1474, type: !312)
!12100 = distinct !DILexicalBlock(scope: !12064, file: !3, line: 1474, column: 2)
!12101 = !DILocation(line: 1474, column: 2, scope: !12100)
!12102 = !DILocalVariable(name: "__dummy2", scope: !12100, file: !3, line: 1474, type: !312)
!12103 = !DILocation(line: 1474, column: 2, scope: !12064)
!12104 = !DILocation(line: 1474, column: 2, scope: !12063)
!12105 = !DILocation(line: 1474, column: 2, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 1474, column: 2)
!12107 = !DILocalVariable(name: "__dummy", scope: !12108, file: !3, line: 1474, type: !312)
!12108 = distinct !DILexicalBlock(scope: !12109, file: !3, line: 1474, column: 2)
!12109 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 1474, column: 2)
!12110 = !DILocation(line: 1474, column: 2, scope: !12108)
!12111 = !DILocalVariable(name: "__dummy2", scope: !12108, file: !3, line: 1474, type: !312)
!12112 = !DILocation(line: 1474, column: 2, scope: !12109)
!12113 = !DILocation(line: 1474, column: 2, scope: !12062)
!12114 = !{i32 -2139551419}
!12115 = !DILocation(line: 1474, column: 2, scope: !12061)
!12116 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12060)
!12117 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12060)
!12118 = !DILocation(line: 1475, column: 10, scope: !12055)
!12119 = !DILocation(line: 1475, column: 16, scope: !12055)
!12120 = !DILocation(line: 1475, column: 21, scope: !12055)
!12121 = !DILocation(line: 1475, column: 27, scope: !12055)
!12122 = !DILocation(line: 1475, column: 32, scope: !12055)
!12123 = !DILocation(line: 1475, column: 2, scope: !12055)
!12124 = !DILocation(line: 1476, column: 26, scope: !12055)
!12125 = !DILocation(line: 1476, column: 32, scope: !12055)
!12126 = !DILocation(line: 1476, column: 38, scope: !12055)
!12127 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12057)
!12128 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12057)
!12129 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12057)
!12130 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12057)
!12131 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12057)
!12132 = !DILocation(line: 1479, column: 2, scope: !12055)
!12133 = !DILocation(line: 1481, column: 2, scope: !12055)
!12134 = !DILocation(line: 1482, column: 1, scope: !12055)
!12135 = distinct !DISubprogram(name: "hdlcdev_open", scope: !3, file: !3, line: 1492, type: !402, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12136 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12137)
!12137 = distinct !DILocation(line: 1535, column: 2, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1535, column: 2)
!12139 = distinct !DILexicalBlock(scope: !12140, file: !3, line: 1535, column: 2)
!12140 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 1535, column: 2)
!12141 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 1535, column: 2)
!12142 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1535, column: 2)
!12143 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 1522, column: 3, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12146, file: !3, line: 1519, column: 33)
!12146 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1519, column: 6)
!12147 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12144)
!12148 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12149)
!12149 = distinct !DILocation(line: 1520, column: 3, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !3, line: 1520, column: 3)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 1520, column: 3)
!12152 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 1520, column: 3)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 1520, column: 3)
!12154 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 1520, column: 3)
!12155 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12156)
!12156 = distinct !DILocation(line: 1516, column: 2, scope: !12135)
!12157 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12156)
!12158 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12159)
!12159 = distinct !DILocation(line: 1512, column: 3, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 1510, column: 52)
!12161 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1510, column: 6)
!12162 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12159)
!12163 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12164)
!12164 = distinct !DILocation(line: 1537, column: 2, scope: !12135)
!12165 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12164)
!12166 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12167)
!12167 = distinct !DILocation(line: 1509, column: 2, scope: !12168)
!12168 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 1509, column: 2)
!12169 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 1509, column: 2)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1509, column: 2)
!12171 = distinct !DILexicalBlock(scope: !12172, file: !3, line: 1509, column: 2)
!12172 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1509, column: 2)
!12173 = !DILocalVariable(name: "dev", arg: 1, scope: !12135, file: !3, line: 1492, type: !290)
!12174 = !DILocation(line: 1492, column: 44, scope: !12135)
!12175 = !DILocalVariable(name: "info", scope: !12135, file: !3, line: 1494, type: !7530)
!12176 = !DILocation(line: 1494, column: 20, scope: !12135)
!12177 = !DILocation(line: 1494, column: 27, scope: !12135)
!12178 = !DILocalVariable(name: "rc", scope: !12135, file: !3, line: 1495, type: !32)
!12179 = !DILocation(line: 1495, column: 6, scope: !12135)
!12180 = !DILocalVariable(name: "flags", scope: !12135, file: !3, line: 1496, type: !312)
!12181 = !DILocation(line: 1496, column: 16, scope: !12135)
!12182 = !DILocation(line: 1498, column: 7, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1498, column: 6)
!12184 = !DILocation(line: 1498, column: 6, scope: !12135)
!12185 = !DILocation(line: 1499, column: 3, scope: !12183)
!12186 = !DILocation(line: 1501, column: 2, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1501, column: 2)
!12188 = !DILocation(line: 1501, column: 2, scope: !12135)
!12189 = !DILocation(line: 1504, column: 17, scope: !12135)
!12190 = !DILocation(line: 1504, column: 7, scope: !12135)
!12191 = !DILocation(line: 1504, column: 5, scope: !12135)
!12192 = !DILocation(line: 1505, column: 6, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1505, column: 6)
!12194 = !DILocation(line: 1505, column: 6, scope: !12135)
!12195 = !DILocation(line: 1506, column: 10, scope: !12193)
!12196 = !DILocation(line: 1506, column: 3, scope: !12193)
!12197 = !DILocation(line: 1509, column: 2, scope: !12135)
!12198 = !DILocation(line: 1509, column: 2, scope: !12172)
!12199 = !DILocalVariable(name: "__dummy", scope: !12200, file: !3, line: 1509, type: !312)
!12200 = distinct !DILexicalBlock(scope: !12171, file: !3, line: 1509, column: 2)
!12201 = !DILocation(line: 1509, column: 2, scope: !12200)
!12202 = !DILocalVariable(name: "__dummy2", scope: !12200, file: !3, line: 1509, type: !312)
!12203 = !DILocation(line: 1509, column: 2, scope: !12171)
!12204 = !DILocation(line: 1509, column: 2, scope: !12170)
!12205 = !DILocation(line: 1509, column: 2, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 1509, column: 2)
!12207 = !DILocalVariable(name: "__dummy", scope: !12208, file: !3, line: 1509, type: !312)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 1509, column: 2)
!12209 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 1509, column: 2)
!12210 = !DILocation(line: 1509, column: 2, scope: !12208)
!12211 = !DILocalVariable(name: "__dummy2", scope: !12208, file: !3, line: 1509, type: !312)
!12212 = !DILocation(line: 1509, column: 2, scope: !12209)
!12213 = !DILocation(line: 1509, column: 2, scope: !12169)
!12214 = !{i32 -2139550232}
!12215 = !DILocation(line: 1509, column: 2, scope: !12168)
!12216 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12167)
!12217 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12167)
!12218 = !DILocation(line: 1510, column: 6, scope: !12161)
!12219 = !DILocation(line: 1510, column: 12, scope: !12161)
!12220 = !DILocation(line: 1510, column: 17, scope: !12161)
!12221 = !DILocation(line: 1510, column: 23, scope: !12161)
!12222 = !DILocation(line: 1510, column: 28, scope: !12161)
!12223 = !DILocation(line: 1510, column: 31, scope: !12161)
!12224 = !DILocation(line: 1510, column: 37, scope: !12161)
!12225 = !DILocation(line: 1510, column: 46, scope: !12161)
!12226 = !DILocation(line: 1510, column: 6, scope: !12135)
!12227 = !DILocation(line: 1511, column: 3, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 1511, column: 3)
!12229 = !DILocation(line: 1511, column: 3, scope: !12160)
!12230 = !DILocation(line: 1512, column: 27, scope: !12160)
!12231 = !DILocation(line: 1512, column: 33, scope: !12160)
!12232 = !DILocation(line: 1512, column: 42, scope: !12160)
!12233 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12159)
!12234 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12159)
!12235 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12159)
!12236 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12159)
!12237 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12159)
!12238 = !DILocation(line: 1513, column: 3, scope: !12160)
!12239 = !DILocation(line: 1515, column: 2, scope: !12135)
!12240 = !DILocation(line: 1515, column: 8, scope: !12135)
!12241 = !DILocation(line: 1515, column: 16, scope: !12135)
!12242 = !DILocation(line: 1516, column: 26, scope: !12135)
!12243 = !DILocation(line: 1516, column: 32, scope: !12135)
!12244 = !DILocation(line: 1516, column: 41, scope: !12135)
!12245 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12156)
!12246 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12156)
!12247 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12156)
!12248 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12156)
!12249 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12156)
!12250 = !DILocation(line: 1519, column: 20, scope: !12146)
!12251 = !DILocation(line: 1519, column: 12, scope: !12146)
!12252 = !DILocation(line: 1519, column: 10, scope: !12146)
!12253 = !DILocation(line: 1519, column: 27, scope: !12146)
!12254 = !DILocation(line: 1519, column: 6, scope: !12135)
!12255 = !DILocation(line: 1520, column: 3, scope: !12145)
!12256 = !DILocation(line: 1520, column: 3, scope: !12154)
!12257 = !DILocalVariable(name: "__dummy", scope: !12258, file: !3, line: 1520, type: !312)
!12258 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 1520, column: 3)
!12259 = !DILocation(line: 1520, column: 3, scope: !12258)
!12260 = !DILocalVariable(name: "__dummy2", scope: !12258, file: !3, line: 1520, type: !312)
!12261 = !DILocation(line: 1520, column: 3, scope: !12153)
!12262 = !DILocation(line: 1520, column: 3, scope: !12152)
!12263 = !DILocation(line: 1520, column: 3, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 1520, column: 3)
!12265 = !DILocalVariable(name: "__dummy", scope: !12266, file: !3, line: 1520, type: !312)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !3, line: 1520, column: 3)
!12267 = distinct !DILexicalBlock(scope: !12264, file: !3, line: 1520, column: 3)
!12268 = !DILocation(line: 1520, column: 3, scope: !12266)
!12269 = !DILocalVariable(name: "__dummy2", scope: !12266, file: !3, line: 1520, type: !312)
!12270 = !DILocation(line: 1520, column: 3, scope: !12267)
!12271 = !DILocation(line: 1520, column: 3, scope: !12151)
!12272 = !{i32 -2139549104}
!12273 = !DILocation(line: 1520, column: 3, scope: !12150)
!12274 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12149)
!12275 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12149)
!12276 = !DILocation(line: 1521, column: 3, scope: !12145)
!12277 = !DILocation(line: 1521, column: 9, scope: !12145)
!12278 = !DILocation(line: 1521, column: 17, scope: !12145)
!12279 = !DILocation(line: 1522, column: 27, scope: !12145)
!12280 = !DILocation(line: 1522, column: 33, scope: !12145)
!12281 = !DILocation(line: 1522, column: 42, scope: !12145)
!12282 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12144)
!12283 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12144)
!12284 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12144)
!12285 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12144)
!12286 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12144)
!12287 = !DILocation(line: 1523, column: 10, scope: !12145)
!12288 = !DILocation(line: 1523, column: 3, scope: !12145)
!12289 = !DILocation(line: 1527, column: 2, scope: !12135)
!12290 = !DILocation(line: 1527, column: 8, scope: !12135)
!12291 = !DILocation(line: 1527, column: 16, scope: !12135)
!12292 = !DILocation(line: 1528, column: 13, scope: !12135)
!12293 = !DILocation(line: 1528, column: 2, scope: !12135)
!12294 = !DILocation(line: 1531, column: 21, scope: !12135)
!12295 = !DILocation(line: 1531, column: 2, scope: !12135)
!12296 = !DILocation(line: 1532, column: 20, scope: !12135)
!12297 = !DILocation(line: 1532, column: 2, scope: !12135)
!12298 = !DILocation(line: 1535, column: 2, scope: !12135)
!12299 = !DILocation(line: 1535, column: 2, scope: !12142)
!12300 = !DILocalVariable(name: "__dummy", scope: !12301, file: !3, line: 1535, type: !312)
!12301 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 1535, column: 2)
!12302 = !DILocation(line: 1535, column: 2, scope: !12301)
!12303 = !DILocalVariable(name: "__dummy2", scope: !12301, file: !3, line: 1535, type: !312)
!12304 = !DILocation(line: 1535, column: 2, scope: !12141)
!12305 = !DILocation(line: 1535, column: 2, scope: !12140)
!12306 = !DILocation(line: 1535, column: 2, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12140, file: !3, line: 1535, column: 2)
!12308 = !DILocalVariable(name: "__dummy", scope: !12309, file: !3, line: 1535, type: !312)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 1535, column: 2)
!12310 = distinct !DILexicalBlock(scope: !12307, file: !3, line: 1535, column: 2)
!12311 = !DILocation(line: 1535, column: 2, scope: !12309)
!12312 = !DILocalVariable(name: "__dummy2", scope: !12309, file: !3, line: 1535, type: !312)
!12313 = !DILocation(line: 1535, column: 2, scope: !12310)
!12314 = !DILocation(line: 1535, column: 2, scope: !12139)
!12315 = !{i32 -2139548069}
!12316 = !DILocation(line: 1535, column: 2, scope: !12138)
!12317 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12137)
!12318 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12137)
!12319 = !DILocation(line: 1536, column: 14, scope: !12135)
!12320 = !DILocation(line: 1536, column: 2, scope: !12135)
!12321 = !DILocation(line: 1537, column: 26, scope: !12135)
!12322 = !DILocation(line: 1537, column: 32, scope: !12135)
!12323 = !DILocation(line: 1537, column: 38, scope: !12135)
!12324 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12164)
!12325 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12164)
!12326 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12164)
!12327 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12164)
!12328 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12164)
!12329 = !DILocation(line: 1538, column: 6, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1538, column: 6)
!12331 = !DILocation(line: 1538, column: 12, scope: !12330)
!12332 = !DILocation(line: 1538, column: 20, scope: !12330)
!12333 = !DILocation(line: 1538, column: 6, scope: !12135)
!12334 = !DILocation(line: 1539, column: 20, scope: !12330)
!12335 = !DILocation(line: 1539, column: 3, scope: !12330)
!12336 = !DILocation(line: 1541, column: 21, scope: !12330)
!12337 = !DILocation(line: 1541, column: 3, scope: !12330)
!12338 = !DILocation(line: 1542, column: 2, scope: !12135)
!12339 = !DILocation(line: 1543, column: 1, scope: !12135)
!12340 = distinct !DISubprogram(name: "hdlcdev_close", scope: !3, file: !3, line: 1553, type: !402, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12341 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12342)
!12342 = distinct !DILocation(line: 1569, column: 2, scope: !12340)
!12343 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12342)
!12344 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12345)
!12345 = distinct !DILocation(line: 1567, column: 2, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !3, line: 1567, column: 2)
!12347 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 1567, column: 2)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 1567, column: 2)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 1567, column: 2)
!12350 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 1567, column: 2)
!12351 = !DILocalVariable(name: "dev", arg: 1, scope: !12340, file: !3, line: 1553, type: !290)
!12352 = !DILocation(line: 1553, column: 45, scope: !12340)
!12353 = !DILocalVariable(name: "info", scope: !12340, file: !3, line: 1555, type: !7530)
!12354 = !DILocation(line: 1555, column: 20, scope: !12340)
!12355 = !DILocation(line: 1555, column: 27, scope: !12340)
!12356 = !DILocalVariable(name: "flags", scope: !12340, file: !3, line: 1556, type: !312)
!12357 = !DILocation(line: 1556, column: 16, scope: !12340)
!12358 = !DILocation(line: 1558, column: 2, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12340, file: !3, line: 1558, column: 2)
!12360 = !DILocation(line: 1558, column: 2, scope: !12340)
!12361 = !DILocation(line: 1560, column: 19, scope: !12340)
!12362 = !DILocation(line: 1560, column: 2, scope: !12340)
!12363 = !DILocation(line: 1563, column: 11, scope: !12340)
!12364 = !DILocation(line: 1563, column: 2, scope: !12340)
!12365 = !DILocation(line: 1565, column: 13, scope: !12340)
!12366 = !DILocation(line: 1565, column: 2, scope: !12340)
!12367 = !DILocation(line: 1567, column: 2, scope: !12340)
!12368 = !DILocation(line: 1567, column: 2, scope: !12350)
!12369 = !DILocalVariable(name: "__dummy", scope: !12370, file: !3, line: 1567, type: !312)
!12370 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 1567, column: 2)
!12371 = !DILocation(line: 1567, column: 2, scope: !12370)
!12372 = !DILocalVariable(name: "__dummy2", scope: !12370, file: !3, line: 1567, type: !312)
!12373 = !DILocation(line: 1567, column: 2, scope: !12349)
!12374 = !DILocation(line: 1567, column: 2, scope: !12348)
!12375 = !DILocation(line: 1567, column: 2, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 1567, column: 2)
!12377 = !DILocalVariable(name: "__dummy", scope: !12378, file: !3, line: 1567, type: !312)
!12378 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 1567, column: 2)
!12379 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 1567, column: 2)
!12380 = !DILocation(line: 1567, column: 2, scope: !12378)
!12381 = !DILocalVariable(name: "__dummy2", scope: !12378, file: !3, line: 1567, type: !312)
!12382 = !DILocation(line: 1567, column: 2, scope: !12379)
!12383 = !DILocation(line: 1567, column: 2, scope: !12347)
!12384 = !{i32 -2139546919}
!12385 = !DILocation(line: 1567, column: 2, scope: !12346)
!12386 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12345)
!12387 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12345)
!12388 = !DILocation(line: 1568, column: 2, scope: !12340)
!12389 = !DILocation(line: 1568, column: 8, scope: !12340)
!12390 = !DILocation(line: 1568, column: 16, scope: !12340)
!12391 = !DILocation(line: 1569, column: 26, scope: !12340)
!12392 = !DILocation(line: 1569, column: 32, scope: !12340)
!12393 = !DILocation(line: 1569, column: 41, scope: !12340)
!12394 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12342)
!12395 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12342)
!12396 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12342)
!12397 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12342)
!12398 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12342)
!12399 = !DILocation(line: 1571, column: 2, scope: !12340)
!12400 = !DILocation(line: 1572, column: 2, scope: !12340)
!12401 = distinct !DISubprogram(name: "hdlcdev_ioctl", scope: !3, file: !3, line: 1583, type: !595, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12402 = !DILocalVariable(name: "addr", arg: 1, scope: !12403, file: !12404, line: 138, type: !3276)
!12403 = distinct !DISubprogram(name: "check_copy_size", scope: !12404, file: !12404, line: 138, type: !12405, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12404 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!12405 = !DISubroutineType(types: !12406)
!12406 = !{!771, !3276, !1039, !771}
!12407 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !12408)
!12408 = distinct !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !12414)
!12409 = distinct !DILexicalBlock(scope: !12411, file: !12410, line: 191, column: 6)
!12410 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!12411 = distinct !DISubprogram(name: "copy_from_user", scope: !12410, file: !12410, line: 189, type: !12412, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12412 = !DISubroutineType(types: !12413)
!12413 = !{!312, !591, !3276, !312}
!12414 = distinct !DILocation(line: 1635, column: 7, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1635, column: 7)
!12416 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 1602, column: 33)
!12417 = !DILocalVariable(name: "bytes", arg: 2, scope: !12403, file: !12404, line: 138, type: !1039)
!12418 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !12408)
!12419 = !DILocalVariable(name: "is_source", arg: 3, scope: !12403, file: !12404, line: 138, type: !771)
!12420 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !12408)
!12421 = !DILocalVariable(name: "sz", scope: !12403, file: !12404, line: 140, type: !32)
!12422 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !12408)
!12423 = !DILocalVariable(name: "__ret_warn_on", scope: !12424, file: !12404, line: 150, type: !32)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !12404, line: 150, column: 6)
!12425 = distinct !DILexicalBlock(scope: !12403, file: !12404, line: 150, column: 6)
!12426 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !12408)
!12427 = !DILocalVariable(name: "to", arg: 1, scope: !12411, file: !12410, line: 189, type: !591)
!12428 = !DILocation(line: 189, column: 22, scope: !12411, inlinedAt: !12414)
!12429 = !DILocalVariable(name: "from", arg: 2, scope: !12411, file: !12410, line: 189, type: !3276)
!12430 = !DILocation(line: 189, column: 45, scope: !12411, inlinedAt: !12414)
!12431 = !DILocalVariable(name: "n", arg: 3, scope: !12411, file: !12410, line: 189, type: !312)
!12432 = !DILocation(line: 189, column: 65, scope: !12411, inlinedAt: !12414)
!12433 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !12434)
!12434 = distinct !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !12437)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !12410, line: 199, column: 6)
!12436 = distinct !DISubprogram(name: "copy_to_user", scope: !12410, file: !12410, line: 197, type: !12412, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12437 = distinct !DILocation(line: 1627, column: 7, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1627, column: 7)
!12439 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !12434)
!12440 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !12434)
!12441 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !12434)
!12442 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !12434)
!12443 = !DILocalVariable(name: "to", arg: 1, scope: !12436, file: !12410, line: 197, type: !591)
!12444 = !DILocation(line: 197, column: 27, scope: !12436, inlinedAt: !12437)
!12445 = !DILocalVariable(name: "from", arg: 2, scope: !12436, file: !12410, line: 197, type: !3276)
!12446 = !DILocation(line: 197, column: 43, scope: !12436, inlinedAt: !12437)
!12447 = !DILocalVariable(name: "n", arg: 3, scope: !12436, file: !12410, line: 197, type: !312)
!12448 = !DILocation(line: 197, column: 63, scope: !12436, inlinedAt: !12437)
!12449 = !DILocalVariable(name: "dev", arg: 1, scope: !12401, file: !3, line: 1583, type: !290)
!12450 = !DILocation(line: 1583, column: 45, scope: !12401)
!12451 = !DILocalVariable(name: "ifr", arg: 2, scope: !12401, file: !3, line: 1583, type: !597)
!12452 = !DILocation(line: 1583, column: 64, scope: !12401)
!12453 = !DILocalVariable(name: "cmd", arg: 3, scope: !12401, file: !3, line: 1583, type: !32)
!12454 = !DILocation(line: 1583, column: 73, scope: !12401)
!12455 = !DILocalVariable(name: "size", scope: !12401, file: !3, line: 1585, type: !12456)
!12456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!12457 = !DILocation(line: 1585, column: 15, scope: !12401)
!12458 = !DILocalVariable(name: "new_line", scope: !12401, file: !3, line: 1586, type: !701)
!12459 = !DILocation(line: 1586, column: 23, scope: !12401)
!12460 = !DILocalVariable(name: "line", scope: !12401, file: !3, line: 1587, type: !700)
!12461 = !DILocation(line: 1587, column: 31, scope: !12401)
!12462 = !DILocation(line: 1587, column: 38, scope: !12401)
!12463 = !DILocation(line: 1587, column: 43, scope: !12401)
!12464 = !DILocation(line: 1587, column: 56, scope: !12401)
!12465 = !DILocation(line: 1587, column: 65, scope: !12401)
!12466 = !DILocalVariable(name: "info", scope: !12401, file: !3, line: 1588, type: !7530)
!12467 = !DILocation(line: 1588, column: 20, scope: !12401)
!12468 = !DILocation(line: 1588, column: 27, scope: !12401)
!12469 = !DILocalVariable(name: "flags", scope: !12401, file: !3, line: 1589, type: !7)
!12470 = !DILocation(line: 1589, column: 15, scope: !12401)
!12471 = !DILocation(line: 1591, column: 2, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 1591, column: 2)
!12473 = !DILocation(line: 1591, column: 2, scope: !12401)
!12474 = !DILocation(line: 1594, column: 6, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 1594, column: 6)
!12476 = !DILocation(line: 1594, column: 12, scope: !12475)
!12477 = !DILocation(line: 1594, column: 17, scope: !12475)
!12478 = !DILocation(line: 1594, column: 6, scope: !12401)
!12479 = !DILocation(line: 1595, column: 3, scope: !12475)
!12480 = !DILocation(line: 1597, column: 6, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 1597, column: 6)
!12482 = !DILocation(line: 1597, column: 10, scope: !12481)
!12483 = !DILocation(line: 1597, column: 6, scope: !12401)
!12484 = !DILocation(line: 1598, column: 21, scope: !12481)
!12485 = !DILocation(line: 1598, column: 26, scope: !12481)
!12486 = !DILocation(line: 1598, column: 31, scope: !12481)
!12487 = !DILocation(line: 1598, column: 10, scope: !12481)
!12488 = !DILocation(line: 1598, column: 3, scope: !12481)
!12489 = !DILocation(line: 1600, column: 2, scope: !12401)
!12490 = !DILocation(line: 1602, column: 9, scope: !12401)
!12491 = !DILocation(line: 1602, column: 14, scope: !12401)
!12492 = !DILocation(line: 1602, column: 27, scope: !12401)
!12493 = !DILocation(line: 1602, column: 2, scope: !12401)
!12494 = !DILocation(line: 1605, column: 3, scope: !12416)
!12495 = !DILocation(line: 1605, column: 8, scope: !12416)
!12496 = !DILocation(line: 1605, column: 21, scope: !12416)
!12497 = !DILocation(line: 1605, column: 26, scope: !12416)
!12498 = !DILocation(line: 1606, column: 7, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1606, column: 7)
!12500 = !DILocation(line: 1606, column: 12, scope: !12499)
!12501 = !DILocation(line: 1606, column: 25, scope: !12499)
!12502 = !DILocation(line: 1606, column: 30, scope: !12499)
!12503 = !DILocation(line: 1606, column: 7, scope: !12416)
!12504 = !DILocation(line: 1607, column: 4, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 1606, column: 38)
!12506 = !DILocation(line: 1607, column: 9, scope: !12505)
!12507 = !DILocation(line: 1607, column: 22, scope: !12505)
!12508 = !DILocation(line: 1607, column: 27, scope: !12505)
!12509 = !DILocation(line: 1608, column: 4, scope: !12505)
!12510 = !DILocation(line: 1611, column: 11, scope: !12416)
!12511 = !DILocation(line: 1611, column: 17, scope: !12416)
!12512 = !DILocation(line: 1611, column: 24, scope: !12416)
!12513 = !DILocation(line: 1611, column: 30, scope: !12416)
!12514 = !DILocation(line: 1611, column: 9, scope: !12416)
!12515 = !DILocation(line: 1616, column: 11, scope: !12416)
!12516 = !DILocation(line: 1616, column: 3, scope: !12416)
!12517 = !DILocation(line: 1617, column: 64, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1616, column: 17)
!12519 = !DILocation(line: 1617, column: 75, scope: !12518)
!12520 = !DILocation(line: 1617, column: 88, scope: !12518)
!12521 = !DILocation(line: 1618, column: 64, scope: !12518)
!12522 = !DILocation(line: 1618, column: 75, scope: !12518)
!12523 = !DILocation(line: 1618, column: 88, scope: !12518)
!12524 = !DILocation(line: 1619, column: 64, scope: !12518)
!12525 = !DILocation(line: 1619, column: 75, scope: !12518)
!12526 = !DILocation(line: 1619, column: 90, scope: !12518)
!12527 = !DILocation(line: 1620, column: 64, scope: !12518)
!12528 = !DILocation(line: 1620, column: 75, scope: !12518)
!12529 = !DILocation(line: 1620, column: 93, scope: !12518)
!12530 = !DILocation(line: 1621, column: 21, scope: !12518)
!12531 = !DILocation(line: 1621, column: 32, scope: !12518)
!12532 = !DILocation(line: 1622, column: 3, scope: !12518)
!12533 = !DILocation(line: 1624, column: 25, scope: !12416)
!12534 = !DILocation(line: 1624, column: 31, scope: !12416)
!12535 = !DILocation(line: 1624, column: 38, scope: !12416)
!12536 = !DILocation(line: 1624, column: 12, scope: !12416)
!12537 = !DILocation(line: 1624, column: 23, scope: !12416)
!12538 = !DILocation(line: 1625, column: 25, scope: !12416)
!12539 = !DILocation(line: 1625, column: 31, scope: !12416)
!12540 = !DILocation(line: 1625, column: 38, scope: !12416)
!12541 = !DILocation(line: 1625, column: 12, scope: !12416)
!12542 = !DILocation(line: 1625, column: 23, scope: !12416)
!12543 = !DILocation(line: 1627, column: 20, scope: !12438)
!12544 = !DILocation(line: 1627, column: 26, scope: !12438)
!12545 = !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !12437)
!12546 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !12434)
!12547 = distinct !DILexicalBlock(scope: !12403, file: !12404, line: 141, column: 6)
!12548 = !DILocation(line: 0, scope: !12547, inlinedAt: !12434)
!12549 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !12434)
!12550 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !12434)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !12404, line: 142, column: 7)
!12552 = distinct !DILexicalBlock(scope: !12547, file: !12404, line: 141, column: 39)
!12553 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !12434)
!12554 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !12434)
!12555 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !12434)
!12556 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !12434)
!12557 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !12434)
!12558 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !12434)
!12559 = distinct !DILexicalBlock(scope: !12551, file: !12404, line: 144, column: 12)
!12560 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !12434)
!12561 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !12434)
!12562 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !12434)
!12563 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !12434)
!12564 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !12434)
!12565 = distinct !DILexicalBlock(scope: !12424, file: !12404, line: 150, column: 6)
!12566 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !12434)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !12404, line: 150, column: 6)
!12568 = distinct !DILexicalBlock(scope: !12565, file: !12404, line: 150, column: 6)
!12569 = !{i32 -2145425946, i32 -2145425917, i32 -2145425871, i32 -2145425813, i32 -2145425759, i32 -2145425705, i32 -2145425650, i32 -2145425619}
!12570 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !12434)
!12571 = distinct !DILexicalBlock(scope: !12568, file: !12404, line: 150, column: 6)
!12572 = !{i32 -2145425199, i32 -2145425192, i32 -2145425140, i32 -2145425109, i32 -2145425079}
!12573 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !12434)
!12574 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !12434)
!12575 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !12434)
!12576 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !12434)
!12577 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !12434)
!12578 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !12434)
!12579 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !12434)
!12580 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !12434)
!12581 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !12434)
!12582 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !12434)
!12583 = !DILocation(line: 199, column: 6, scope: !12436, inlinedAt: !12437)
!12584 = !DILocation(line: 200, column: 21, scope: !12435, inlinedAt: !12437)
!12585 = !DILocation(line: 200, column: 25, scope: !12435, inlinedAt: !12437)
!12586 = !DILocation(line: 200, column: 31, scope: !12435, inlinedAt: !12437)
!12587 = !DILocation(line: 200, column: 7, scope: !12435, inlinedAt: !12437)
!12588 = !DILocation(line: 200, column: 5, scope: !12435, inlinedAt: !12437)
!12589 = !DILocation(line: 200, column: 3, scope: !12435, inlinedAt: !12437)
!12590 = !DILocation(line: 201, column: 9, scope: !12436, inlinedAt: !12437)
!12591 = !DILocation(line: 1627, column: 7, scope: !12438)
!12592 = !DILocation(line: 1627, column: 7, scope: !12416)
!12593 = !DILocation(line: 1628, column: 4, scope: !12438)
!12594 = !DILocation(line: 1629, column: 3, scope: !12416)
!12595 = !DILocation(line: 1633, column: 7, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1633, column: 6)
!12597 = !DILocation(line: 1633, column: 6, scope: !12416)
!12598 = !DILocation(line: 1634, column: 4, scope: !12596)
!12599 = !DILocation(line: 1635, column: 22, scope: !12415)
!12600 = !DILocation(line: 1635, column: 33, scope: !12415)
!12601 = !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !12414)
!12602 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !12408)
!12603 = !DILocation(line: 0, scope: !12547, inlinedAt: !12408)
!12604 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !12408)
!12605 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !12408)
!12606 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !12408)
!12607 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !12408)
!12608 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !12408)
!12609 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !12408)
!12610 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !12408)
!12611 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !12408)
!12612 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !12408)
!12613 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !12408)
!12614 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !12408)
!12615 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !12408)
!12616 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !12408)
!12617 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !12408)
!12618 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !12408)
!12619 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !12408)
!12620 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !12408)
!12621 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !12408)
!12622 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !12408)
!12623 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !12408)
!12624 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !12408)
!12625 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !12408)
!12626 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !12408)
!12627 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !12408)
!12628 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !12408)
!12629 = !DILocation(line: 191, column: 6, scope: !12411, inlinedAt: !12414)
!12630 = !DILocation(line: 192, column: 23, scope: !12409, inlinedAt: !12414)
!12631 = !DILocation(line: 192, column: 27, scope: !12409, inlinedAt: !12414)
!12632 = !DILocation(line: 192, column: 33, scope: !12409, inlinedAt: !12414)
!12633 = !DILocation(line: 192, column: 7, scope: !12409, inlinedAt: !12414)
!12634 = !DILocation(line: 192, column: 5, scope: !12409, inlinedAt: !12414)
!12635 = !DILocation(line: 192, column: 3, scope: !12409, inlinedAt: !12414)
!12636 = !DILocation(line: 193, column: 9, scope: !12411, inlinedAt: !12414)
!12637 = !DILocation(line: 1635, column: 7, scope: !12415)
!12638 = !DILocation(line: 1635, column: 7, scope: !12416)
!12639 = !DILocation(line: 1636, column: 4, scope: !12415)
!12640 = !DILocation(line: 1638, column: 20, scope: !12416)
!12641 = !DILocation(line: 1638, column: 3, scope: !12416)
!12642 = !DILocation(line: 1640, column: 30, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1639, column: 3)
!12644 = !DILocation(line: 1640, column: 77, scope: !12643)
!12645 = !DILocation(line: 1641, column: 30, scope: !12643)
!12646 = !DILocation(line: 1641, column: 77, scope: !12643)
!12647 = !DILocation(line: 1642, column: 30, scope: !12643)
!12648 = !DILocation(line: 1642, column: 77, scope: !12643)
!12649 = !DILocation(line: 1643, column: 30, scope: !12643)
!12650 = !DILocation(line: 1643, column: 77, scope: !12643)
!12651 = !DILocation(line: 1644, column: 32, scope: !12643)
!12652 = !DILocation(line: 1644, column: 38, scope: !12643)
!12653 = !DILocation(line: 1644, column: 45, scope: !12643)
!12654 = !DILocation(line: 1644, column: 51, scope: !12643)
!12655 = !DILocation(line: 1644, column: 30, scope: !12643)
!12656 = !DILocation(line: 1648, column: 58, scope: !12643)
!12657 = !DILocation(line: 1649, column: 12, scope: !12643)
!12658 = !DILocation(line: 1652, column: 16, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1652, column: 7)
!12660 = !DILocation(line: 1652, column: 7, scope: !12659)
!12661 = !DILocation(line: 1652, column: 25, scope: !12659)
!12662 = !DILocation(line: 1652, column: 30, scope: !12659)
!12663 = !DILocation(line: 1652, column: 42, scope: !12659)
!12664 = !DILocation(line: 1652, column: 33, scope: !12659)
!12665 = !DILocation(line: 1652, column: 51, scope: !12659)
!12666 = !DILocation(line: 1652, column: 7, scope: !12416)
!12667 = !DILocation(line: 1653, column: 4, scope: !12659)
!12668 = !DILocation(line: 1655, column: 3, scope: !12416)
!12669 = !DILocation(line: 1655, column: 9, scope: !12416)
!12670 = !DILocation(line: 1655, column: 16, scope: !12416)
!12671 = !DILocation(line: 1655, column: 22, scope: !12416)
!12672 = !DILocation(line: 1659, column: 25, scope: !12416)
!12673 = !DILocation(line: 1659, column: 3, scope: !12416)
!12674 = !DILocation(line: 1659, column: 9, scope: !12416)
!12675 = !DILocation(line: 1659, column: 16, scope: !12416)
!12676 = !DILocation(line: 1659, column: 22, scope: !12416)
!12677 = !DILocation(line: 1661, column: 36, scope: !12416)
!12678 = !DILocation(line: 1661, column: 27, scope: !12416)
!12679 = !DILocation(line: 1661, column: 3, scope: !12416)
!12680 = !DILocation(line: 1661, column: 9, scope: !12416)
!12681 = !DILocation(line: 1661, column: 16, scope: !12416)
!12682 = !DILocation(line: 1661, column: 25, scope: !12416)
!12683 = !DILocation(line: 1663, column: 7, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1663, column: 7)
!12685 = !DILocation(line: 1663, column: 13, scope: !12684)
!12686 = !DILocation(line: 1663, column: 7, scope: !12416)
!12687 = !DILocation(line: 1664, column: 40, scope: !12684)
!12688 = !DILocation(line: 1664, column: 31, scope: !12684)
!12689 = !DILocation(line: 1664, column: 4, scope: !12684)
!12690 = !DILocation(line: 1664, column: 10, scope: !12684)
!12691 = !DILocation(line: 1664, column: 17, scope: !12684)
!12692 = !DILocation(line: 1664, column: 29, scope: !12684)
!12693 = !DILocation(line: 1666, column: 4, scope: !12684)
!12694 = !DILocation(line: 1666, column: 10, scope: !12684)
!12695 = !DILocation(line: 1666, column: 17, scope: !12684)
!12696 = !DILocation(line: 1666, column: 29, scope: !12684)
!12697 = !DILocation(line: 1669, column: 7, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 1669, column: 7)
!12699 = !DILocation(line: 1669, column: 13, scope: !12698)
!12700 = !DILocation(line: 1669, column: 7, scope: !12416)
!12701 = !DILocation(line: 1670, column: 15, scope: !12698)
!12702 = !DILocation(line: 1670, column: 4, scope: !12698)
!12703 = !DILocation(line: 1671, column: 3, scope: !12416)
!12704 = !DILocation(line: 1674, column: 21, scope: !12416)
!12705 = !DILocation(line: 1674, column: 26, scope: !12416)
!12706 = !DILocation(line: 1674, column: 31, scope: !12416)
!12707 = !DILocation(line: 1674, column: 10, scope: !12416)
!12708 = !DILocation(line: 1674, column: 3, scope: !12416)
!12709 = !DILocation(line: 1676, column: 1, scope: !12401)
!12710 = distinct !DISubprogram(name: "hdlcdev_tx_timeout", scope: !3, file: !3, line: 1682, type: !733, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12711 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 1694, column: 2, scope: !12710)
!12713 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !12712)
!12714 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !12715)
!12715 = distinct !DILocation(line: 1692, column: 2, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12717, file: !3, line: 1692, column: 2)
!12717 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 1692, column: 2)
!12718 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 1692, column: 2)
!12719 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 1692, column: 2)
!12720 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 1692, column: 2)
!12721 = !DILocalVariable(name: "dev", arg: 1, scope: !12710, file: !3, line: 1682, type: !290)
!12722 = !DILocation(line: 1682, column: 51, scope: !12710)
!12723 = !DILocalVariable(name: "txqueue", arg: 2, scope: !12710, file: !3, line: 1682, type: !7)
!12724 = !DILocation(line: 1682, column: 69, scope: !12710)
!12725 = !DILocalVariable(name: "info", scope: !12710, file: !3, line: 1684, type: !7530)
!12726 = !DILocation(line: 1684, column: 20, scope: !12710)
!12727 = !DILocation(line: 1684, column: 27, scope: !12710)
!12728 = !DILocalVariable(name: "flags", scope: !12710, file: !3, line: 1685, type: !312)
!12729 = !DILocation(line: 1685, column: 16, scope: !12710)
!12730 = !DILocation(line: 1687, column: 2, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 1687, column: 2)
!12732 = !DILocation(line: 1687, column: 2, scope: !12710)
!12733 = !DILocation(line: 1689, column: 2, scope: !12710)
!12734 = !DILocation(line: 1689, column: 7, scope: !12710)
!12735 = !DILocation(line: 1689, column: 13, scope: !12710)
!12736 = !DILocation(line: 1689, column: 22, scope: !12710)
!12737 = !DILocation(line: 1690, column: 2, scope: !12710)
!12738 = !DILocation(line: 1690, column: 7, scope: !12710)
!12739 = !DILocation(line: 1690, column: 13, scope: !12710)
!12740 = !DILocation(line: 1690, column: 30, scope: !12710)
!12741 = !DILocation(line: 1692, column: 2, scope: !12710)
!12742 = !DILocation(line: 1692, column: 2, scope: !12720)
!12743 = !DILocalVariable(name: "__dummy", scope: !12744, file: !3, line: 1692, type: !312)
!12744 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 1692, column: 2)
!12745 = !DILocation(line: 1692, column: 2, scope: !12744)
!12746 = !DILocalVariable(name: "__dummy2", scope: !12744, file: !3, line: 1692, type: !312)
!12747 = !DILocation(line: 1692, column: 2, scope: !12719)
!12748 = !DILocation(line: 1692, column: 2, scope: !12718)
!12749 = !DILocation(line: 1692, column: 2, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 1692, column: 2)
!12751 = !DILocalVariable(name: "__dummy", scope: !12752, file: !3, line: 1692, type: !312)
!12752 = distinct !DILexicalBlock(scope: !12753, file: !3, line: 1692, column: 2)
!12753 = distinct !DILexicalBlock(scope: !12750, file: !3, line: 1692, column: 2)
!12754 = !DILocation(line: 1692, column: 2, scope: !12752)
!12755 = !DILocalVariable(name: "__dummy2", scope: !12752, file: !3, line: 1692, type: !312)
!12756 = !DILocation(line: 1692, column: 2, scope: !12753)
!12757 = !DILocation(line: 1692, column: 2, scope: !12717)
!12758 = !{i32 -2139545165}
!12759 = !DILocation(line: 1692, column: 2, scope: !12716)
!12760 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !12715)
!12761 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !12715)
!12762 = !DILocation(line: 1693, column: 10, scope: !12710)
!12763 = !DILocation(line: 1693, column: 2, scope: !12710)
!12764 = !DILocation(line: 1694, column: 26, scope: !12710)
!12765 = !DILocation(line: 1694, column: 32, scope: !12710)
!12766 = !DILocation(line: 1694, column: 37, scope: !12710)
!12767 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !12712)
!12768 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !12712)
!12769 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !12712)
!12770 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !12712)
!12771 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !12712)
!12772 = !DILocation(line: 1696, column: 19, scope: !12710)
!12773 = !DILocation(line: 1696, column: 2, scope: !12710)
!12774 = !DILocation(line: 1697, column: 1, scope: !12710)
!12775 = distinct !DISubprogram(name: "try_module_get", scope: !12776, file: !12776, line: 751, type: !12777, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12776 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!12777 = !DISubroutineType(types: !12778)
!12778 = !{!771, !980}
!12779 = !DILocalVariable(name: "module", arg: 1, scope: !12775, file: !12776, line: 751, type: !980)
!12780 = !DILocation(line: 751, column: 50, scope: !12775)
!12781 = !DILocation(line: 753, column: 2, scope: !12775)
!12782 = distinct !DISubprogram(name: "startup", scope: !3, file: !3, line: 2393, type: !8119, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!12783 = !DILocation(line: 445, column: 72, scope: !9737, inlinedAt: !12784)
!12784 = distinct !DILocation(line: 552, column: 10, scope: !9742, inlinedAt: !12785)
!12785 = distinct !DILocation(line: 2401, column: 18, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 2400, column: 21)
!12787 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2400, column: 6)
!12788 = !DILocation(line: 446, column: 9, scope: !9737, inlinedAt: !12784)
!12789 = !DILocation(line: 446, column: 23, scope: !9737, inlinedAt: !12784)
!12790 = !DILocation(line: 448, column: 8, scope: !9737, inlinedAt: !12784)
!12791 = !DILocation(line: 318, column: 67, scope: !9753, inlinedAt: !12792)
!12792 = distinct !DILocation(line: 553, column: 20, scope: !9742, inlinedAt: !12785)
!12793 = !DILocation(line: 346, column: 58, scope: !9759, inlinedAt: !12794)
!12794 = distinct !DILocation(line: 547, column: 11, scope: !9742, inlinedAt: !12785)
!12795 = !DILocation(line: 472, column: 28, scope: !9765, inlinedAt: !12796)
!12796 = distinct !DILocation(line: 481, column: 9, scope: !9770, inlinedAt: !12797)
!12797 = distinct !DILocation(line: 545, column: 11, scope: !9772, inlinedAt: !12785)
!12798 = !DILocation(line: 472, column: 40, scope: !9765, inlinedAt: !12796)
!12799 = !DILocation(line: 472, column: 60, scope: !9765, inlinedAt: !12796)
!12800 = !DILocation(line: 478, column: 51, scope: !9770, inlinedAt: !12797)
!12801 = !DILocation(line: 478, column: 63, scope: !9770, inlinedAt: !12797)
!12802 = !DILocation(line: 480, column: 15, scope: !9770, inlinedAt: !12797)
!12803 = !DILocation(line: 538, column: 45, scope: !9744, inlinedAt: !12785)
!12804 = !DILocation(line: 538, column: 57, scope: !9744, inlinedAt: !12785)
!12805 = !DILocation(line: 542, column: 16, scope: !9742, inlinedAt: !12785)
!12806 = !DILocalVariable(name: "info", arg: 1, scope: !12782, file: !3, line: 2393, type: !7530)
!12807 = !DILocation(line: 2393, column: 38, scope: !12782)
!12808 = !DILocation(line: 2395, column: 2, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2395, column: 2)
!12810 = !DILocation(line: 2395, column: 2, scope: !12782)
!12811 = !DILocation(line: 2397, column: 28, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2397, column: 6)
!12813 = !DILocation(line: 2397, column: 34, scope: !12812)
!12814 = !DILocation(line: 2397, column: 6, scope: !12812)
!12815 = !DILocation(line: 2397, column: 6, scope: !12782)
!12816 = !DILocation(line: 2398, column: 3, scope: !12812)
!12817 = !DILocation(line: 2400, column: 7, scope: !12787)
!12818 = !DILocation(line: 2400, column: 13, scope: !12787)
!12819 = !DILocation(line: 2400, column: 6, scope: !12782)
!12820 = !DILocation(line: 2401, column: 26, scope: !12786)
!12821 = !DILocation(line: 2401, column: 32, scope: !12786)
!12822 = !DILocation(line: 540, column: 27, scope: !9743, inlinedAt: !12785)
!12823 = !DILocation(line: 540, column: 6, scope: !9743, inlinedAt: !12785)
!12824 = !DILocation(line: 540, column: 6, scope: !9744, inlinedAt: !12785)
!12825 = !DILocation(line: 544, column: 7, scope: !9772, inlinedAt: !12785)
!12826 = !DILocation(line: 544, column: 12, scope: !9772, inlinedAt: !12785)
!12827 = !DILocation(line: 544, column: 7, scope: !9742, inlinedAt: !12785)
!12828 = !DILocation(line: 545, column: 25, scope: !9772, inlinedAt: !12785)
!12829 = !DILocation(line: 545, column: 31, scope: !9772, inlinedAt: !12785)
!12830 = !DILocation(line: 480, column: 33, scope: !9770, inlinedAt: !12797)
!12831 = !DILocation(line: 480, column: 23, scope: !9770, inlinedAt: !12797)
!12832 = !DILocation(line: 481, column: 29, scope: !9770, inlinedAt: !12797)
!12833 = !DILocation(line: 481, column: 35, scope: !9770, inlinedAt: !12797)
!12834 = !DILocation(line: 481, column: 42, scope: !9770, inlinedAt: !12797)
!12835 = !DILocation(line: 474, column: 23, scope: !9765, inlinedAt: !12796)
!12836 = !DILocation(line: 474, column: 29, scope: !9765, inlinedAt: !12796)
!12837 = !DILocation(line: 474, column: 36, scope: !9765, inlinedAt: !12796)
!12838 = !DILocation(line: 474, column: 9, scope: !9765, inlinedAt: !12796)
!12839 = !DILocation(line: 545, column: 4, scope: !9772, inlinedAt: !12785)
!12840 = !DILocation(line: 547, column: 25, scope: !9742, inlinedAt: !12785)
!12841 = !DILocation(line: 348, column: 7, scope: !9816, inlinedAt: !12794)
!12842 = !DILocation(line: 348, column: 6, scope: !9759, inlinedAt: !12794)
!12843 = !DILocation(line: 349, column: 3, scope: !9816, inlinedAt: !12794)
!12844 = !DILocation(line: 351, column: 6, scope: !9820, inlinedAt: !12794)
!12845 = !DILocation(line: 351, column: 11, scope: !9820, inlinedAt: !12794)
!12846 = !DILocation(line: 351, column: 6, scope: !9759, inlinedAt: !12794)
!12847 = !DILocation(line: 352, column: 3, scope: !9820, inlinedAt: !12794)
!12848 = !DILocation(line: 354, column: 32, scope: !9825, inlinedAt: !12794)
!12849 = !DILocation(line: 354, column: 37, scope: !9825, inlinedAt: !12794)
!12850 = !DILocation(line: 354, column: 42, scope: !9825, inlinedAt: !12794)
!12851 = !DILocation(line: 354, column: 45, scope: !9825, inlinedAt: !12794)
!12852 = !DILocation(line: 354, column: 50, scope: !9825, inlinedAt: !12794)
!12853 = !DILocation(line: 354, column: 6, scope: !9759, inlinedAt: !12794)
!12854 = !DILocation(line: 355, column: 3, scope: !9825, inlinedAt: !12794)
!12855 = !DILocation(line: 356, column: 32, scope: !9833, inlinedAt: !12794)
!12856 = !DILocation(line: 356, column: 37, scope: !9833, inlinedAt: !12794)
!12857 = !DILocation(line: 356, column: 43, scope: !9833, inlinedAt: !12794)
!12858 = !DILocation(line: 356, column: 46, scope: !9833, inlinedAt: !12794)
!12859 = !DILocation(line: 356, column: 51, scope: !9833, inlinedAt: !12794)
!12860 = !DILocation(line: 356, column: 6, scope: !9759, inlinedAt: !12794)
!12861 = !DILocation(line: 357, column: 3, scope: !9833, inlinedAt: !12794)
!12862 = !DILocation(line: 358, column: 6, scope: !9841, inlinedAt: !12794)
!12863 = !DILocation(line: 358, column: 11, scope: !9841, inlinedAt: !12794)
!12864 = !DILocation(line: 358, column: 6, scope: !9759, inlinedAt: !12794)
!12865 = !DILocation(line: 358, column: 26, scope: !9841, inlinedAt: !12794)
!12866 = !DILocation(line: 359, column: 6, scope: !9846, inlinedAt: !12794)
!12867 = !DILocation(line: 359, column: 11, scope: !9846, inlinedAt: !12794)
!12868 = !DILocation(line: 359, column: 6, scope: !9759, inlinedAt: !12794)
!12869 = !DILocation(line: 359, column: 26, scope: !9846, inlinedAt: !12794)
!12870 = !DILocation(line: 360, column: 6, scope: !9851, inlinedAt: !12794)
!12871 = !DILocation(line: 360, column: 11, scope: !9851, inlinedAt: !12794)
!12872 = !DILocation(line: 360, column: 6, scope: !9759, inlinedAt: !12794)
!12873 = !DILocation(line: 360, column: 26, scope: !9851, inlinedAt: !12794)
!12874 = !DILocation(line: 361, column: 6, scope: !9856, inlinedAt: !12794)
!12875 = !DILocation(line: 361, column: 11, scope: !9856, inlinedAt: !12794)
!12876 = !DILocation(line: 361, column: 6, scope: !9759, inlinedAt: !12794)
!12877 = !DILocation(line: 361, column: 26, scope: !9856, inlinedAt: !12794)
!12878 = !DILocation(line: 362, column: 6, scope: !9861, inlinedAt: !12794)
!12879 = !DILocation(line: 362, column: 11, scope: !9861, inlinedAt: !12794)
!12880 = !DILocation(line: 362, column: 6, scope: !9759, inlinedAt: !12794)
!12881 = !DILocation(line: 362, column: 26, scope: !9861, inlinedAt: !12794)
!12882 = !DILocation(line: 363, column: 6, scope: !9866, inlinedAt: !12794)
!12883 = !DILocation(line: 363, column: 11, scope: !9866, inlinedAt: !12794)
!12884 = !DILocation(line: 363, column: 6, scope: !9759, inlinedAt: !12794)
!12885 = !DILocation(line: 363, column: 26, scope: !9866, inlinedAt: !12794)
!12886 = !DILocation(line: 364, column: 6, scope: !9871, inlinedAt: !12794)
!12887 = !DILocation(line: 364, column: 11, scope: !9871, inlinedAt: !12794)
!12888 = !DILocation(line: 364, column: 6, scope: !9759, inlinedAt: !12794)
!12889 = !DILocation(line: 364, column: 26, scope: !9871, inlinedAt: !12794)
!12890 = !DILocation(line: 365, column: 6, scope: !9876, inlinedAt: !12794)
!12891 = !DILocation(line: 365, column: 11, scope: !9876, inlinedAt: !12794)
!12892 = !DILocation(line: 365, column: 6, scope: !9759, inlinedAt: !12794)
!12893 = !DILocation(line: 365, column: 26, scope: !9876, inlinedAt: !12794)
!12894 = !DILocation(line: 366, column: 6, scope: !9881, inlinedAt: !12794)
!12895 = !DILocation(line: 366, column: 11, scope: !9881, inlinedAt: !12794)
!12896 = !DILocation(line: 366, column: 6, scope: !9759, inlinedAt: !12794)
!12897 = !DILocation(line: 366, column: 26, scope: !9881, inlinedAt: !12794)
!12898 = !DILocation(line: 367, column: 6, scope: !9886, inlinedAt: !12794)
!12899 = !DILocation(line: 367, column: 11, scope: !9886, inlinedAt: !12794)
!12900 = !DILocation(line: 367, column: 6, scope: !9759, inlinedAt: !12794)
!12901 = !DILocation(line: 367, column: 26, scope: !9886, inlinedAt: !12794)
!12902 = !DILocation(line: 368, column: 6, scope: !9891, inlinedAt: !12794)
!12903 = !DILocation(line: 368, column: 11, scope: !9891, inlinedAt: !12794)
!12904 = !DILocation(line: 368, column: 6, scope: !9759, inlinedAt: !12794)
!12905 = !DILocation(line: 368, column: 26, scope: !9891, inlinedAt: !12794)
!12906 = !DILocation(line: 369, column: 6, scope: !9896, inlinedAt: !12794)
!12907 = !DILocation(line: 369, column: 11, scope: !9896, inlinedAt: !12794)
!12908 = !DILocation(line: 369, column: 6, scope: !9759, inlinedAt: !12794)
!12909 = !DILocation(line: 369, column: 26, scope: !9896, inlinedAt: !12794)
!12910 = !DILocation(line: 370, column: 6, scope: !9901, inlinedAt: !12794)
!12911 = !DILocation(line: 370, column: 11, scope: !9901, inlinedAt: !12794)
!12912 = !DILocation(line: 370, column: 6, scope: !9759, inlinedAt: !12794)
!12913 = !DILocation(line: 370, column: 26, scope: !9901, inlinedAt: !12794)
!12914 = !DILocation(line: 371, column: 6, scope: !9906, inlinedAt: !12794)
!12915 = !DILocation(line: 371, column: 11, scope: !9906, inlinedAt: !12794)
!12916 = !DILocation(line: 371, column: 6, scope: !9759, inlinedAt: !12794)
!12917 = !DILocation(line: 371, column: 26, scope: !9906, inlinedAt: !12794)
!12918 = !DILocation(line: 372, column: 6, scope: !9911, inlinedAt: !12794)
!12919 = !DILocation(line: 372, column: 11, scope: !9911, inlinedAt: !12794)
!12920 = !DILocation(line: 372, column: 6, scope: !9759, inlinedAt: !12794)
!12921 = !DILocation(line: 372, column: 26, scope: !9911, inlinedAt: !12794)
!12922 = !DILocation(line: 373, column: 6, scope: !9916, inlinedAt: !12794)
!12923 = !DILocation(line: 373, column: 11, scope: !9916, inlinedAt: !12794)
!12924 = !DILocation(line: 373, column: 6, scope: !9759, inlinedAt: !12794)
!12925 = !DILocation(line: 373, column: 26, scope: !9916, inlinedAt: !12794)
!12926 = !DILocation(line: 374, column: 6, scope: !9921, inlinedAt: !12794)
!12927 = !DILocation(line: 374, column: 11, scope: !9921, inlinedAt: !12794)
!12928 = !DILocation(line: 374, column: 6, scope: !9759, inlinedAt: !12794)
!12929 = !DILocation(line: 374, column: 26, scope: !9921, inlinedAt: !12794)
!12930 = !DILocation(line: 375, column: 6, scope: !9926, inlinedAt: !12794)
!12931 = !DILocation(line: 375, column: 11, scope: !9926, inlinedAt: !12794)
!12932 = !DILocation(line: 375, column: 6, scope: !9759, inlinedAt: !12794)
!12933 = !DILocation(line: 375, column: 27, scope: !9926, inlinedAt: !12794)
!12934 = !DILocation(line: 376, column: 6, scope: !9931, inlinedAt: !12794)
!12935 = !DILocation(line: 376, column: 11, scope: !9931, inlinedAt: !12794)
!12936 = !DILocation(line: 376, column: 6, scope: !9759, inlinedAt: !12794)
!12937 = !DILocation(line: 376, column: 32, scope: !9931, inlinedAt: !12794)
!12938 = !DILocation(line: 377, column: 6, scope: !9936, inlinedAt: !12794)
!12939 = !DILocation(line: 377, column: 11, scope: !9936, inlinedAt: !12794)
!12940 = !DILocation(line: 377, column: 6, scope: !9759, inlinedAt: !12794)
!12941 = !DILocation(line: 377, column: 32, scope: !9936, inlinedAt: !12794)
!12942 = !DILocation(line: 378, column: 6, scope: !9941, inlinedAt: !12794)
!12943 = !DILocation(line: 378, column: 11, scope: !9941, inlinedAt: !12794)
!12944 = !DILocation(line: 378, column: 6, scope: !9759, inlinedAt: !12794)
!12945 = !DILocation(line: 378, column: 32, scope: !9941, inlinedAt: !12794)
!12946 = !DILocation(line: 379, column: 6, scope: !9946, inlinedAt: !12794)
!12947 = !DILocation(line: 379, column: 11, scope: !9946, inlinedAt: !12794)
!12948 = !DILocation(line: 379, column: 6, scope: !9759, inlinedAt: !12794)
!12949 = !DILocation(line: 379, column: 33, scope: !9946, inlinedAt: !12794)
!12950 = !DILocation(line: 380, column: 6, scope: !9951, inlinedAt: !12794)
!12951 = !DILocation(line: 380, column: 11, scope: !9951, inlinedAt: !12794)
!12952 = !DILocation(line: 380, column: 6, scope: !9759, inlinedAt: !12794)
!12953 = !DILocation(line: 380, column: 33, scope: !9951, inlinedAt: !12794)
!12954 = !DILocation(line: 381, column: 6, scope: !9956, inlinedAt: !12794)
!12955 = !DILocation(line: 381, column: 11, scope: !9956, inlinedAt: !12794)
!12956 = !DILocation(line: 381, column: 6, scope: !9759, inlinedAt: !12794)
!12957 = !DILocation(line: 381, column: 33, scope: !9956, inlinedAt: !12794)
!12958 = !DILocation(line: 382, column: 2, scope: !9961, inlinedAt: !12794)
!12959 = !DILocation(line: 382, column: 2, scope: !9965, inlinedAt: !12794)
!12960 = !DILocation(line: 382, column: 2, scope: !9966, inlinedAt: !12794)
!12961 = !DILocation(line: 386, column: 1, scope: !9759, inlinedAt: !12794)
!12962 = !DILocation(line: 547, column: 9, scope: !9742, inlinedAt: !12785)
!12963 = !DILocation(line: 549, column: 8, scope: !9972, inlinedAt: !12785)
!12964 = !DILocation(line: 549, column: 7, scope: !9742, inlinedAt: !12785)
!12965 = !DILocation(line: 550, column: 4, scope: !9972, inlinedAt: !12785)
!12966 = !DILocation(line: 553, column: 33, scope: !9742, inlinedAt: !12785)
!12967 = !DILocation(line: 325, column: 6, scope: !9977, inlinedAt: !12792)
!12968 = !DILocation(line: 325, column: 6, scope: !9753, inlinedAt: !12792)
!12969 = !DILocation(line: 326, column: 3, scope: !9977, inlinedAt: !12792)
!12970 = !DILocation(line: 332, column: 9, scope: !9753, inlinedAt: !12792)
!12971 = !DILocation(line: 332, column: 15, scope: !9753, inlinedAt: !12792)
!12972 = !DILocation(line: 332, column: 2, scope: !9753, inlinedAt: !12792)
!12973 = !DILocation(line: 336, column: 1, scope: !9753, inlinedAt: !12792)
!12974 = !DILocation(line: 553, column: 5, scope: !9742, inlinedAt: !12785)
!12975 = !DILocation(line: 553, column: 41, scope: !9742, inlinedAt: !12785)
!12976 = !DILocation(line: 554, column: 5, scope: !9742, inlinedAt: !12785)
!12977 = !DILocation(line: 554, column: 12, scope: !9742, inlinedAt: !12785)
!12978 = !DILocation(line: 448, column: 31, scope: !9737, inlinedAt: !12784)
!12979 = !DILocation(line: 448, column: 34, scope: !9737, inlinedAt: !12784)
!12980 = !DILocation(line: 448, column: 14, scope: !9737, inlinedAt: !12784)
!12981 = !DILocation(line: 450, column: 22, scope: !9737, inlinedAt: !12784)
!12982 = !DILocation(line: 450, column: 25, scope: !9737, inlinedAt: !12784)
!12983 = !DILocation(line: 450, column: 30, scope: !9737, inlinedAt: !12784)
!12984 = !DILocation(line: 450, column: 36, scope: !9737, inlinedAt: !12784)
!12985 = !DILocation(line: 450, column: 8, scope: !9737, inlinedAt: !12784)
!12986 = !DILocation(line: 450, column: 6, scope: !9737, inlinedAt: !12784)
!12987 = !DILocation(line: 451, column: 9, scope: !9737, inlinedAt: !12784)
!12988 = !DILocation(line: 552, column: 3, scope: !9742, inlinedAt: !12785)
!12989 = !DILocation(line: 557, column: 19, scope: !9744, inlinedAt: !12785)
!12990 = !DILocation(line: 557, column: 25, scope: !9744, inlinedAt: !12785)
!12991 = !DILocation(line: 557, column: 9, scope: !9744, inlinedAt: !12785)
!12992 = !DILocation(line: 557, column: 2, scope: !9744, inlinedAt: !12785)
!12993 = !DILocation(line: 558, column: 1, scope: !9744, inlinedAt: !12785)
!12994 = !DILocation(line: 2401, column: 3, scope: !12786)
!12995 = !DILocation(line: 2401, column: 9, scope: !12786)
!12996 = !DILocation(line: 2401, column: 16, scope: !12786)
!12997 = !DILocation(line: 2402, column: 8, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 2402, column: 7)
!12999 = !DILocation(line: 2402, column: 14, scope: !12998)
!13000 = !DILocation(line: 2402, column: 7, scope: !12786)
!13001 = !DILocation(line: 2403, column: 4, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 2403, column: 4)
!13003 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 2402, column: 22)
!13004 = !DILocation(line: 2403, column: 4, scope: !13003)
!13005 = !DILocation(line: 2404, column: 4, scope: !13003)
!13006 = !DILocation(line: 2406, column: 2, scope: !12786)
!13007 = !DILocation(line: 2408, column: 2, scope: !12782)
!13008 = !DILocation(line: 2408, column: 8, scope: !12782)
!13009 = !DILocation(line: 2408, column: 19, scope: !12782)
!13010 = !DILocation(line: 2410, column: 10, scope: !12782)
!13011 = !DILocation(line: 2410, column: 16, scope: !12782)
!13012 = !DILocation(line: 2410, column: 2, scope: !12782)
!13013 = !DILocation(line: 2413, column: 16, scope: !12782)
!13014 = !DILocation(line: 2413, column: 2, scope: !12782)
!13015 = !DILocation(line: 2415, column: 6, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2415, column: 6)
!13017 = !DILocation(line: 2415, column: 12, scope: !13016)
!13018 = !DILocation(line: 2415, column: 17, scope: !13016)
!13019 = !DILocation(line: 2415, column: 6, scope: !12782)
!13020 = !DILocation(line: 2416, column: 28, scope: !13016)
!13021 = !DILocation(line: 2416, column: 34, scope: !13016)
!13022 = !DILocation(line: 2416, column: 39, scope: !13016)
!13023 = !DILocation(line: 2416, column: 44, scope: !13016)
!13024 = !DILocation(line: 2416, column: 3, scope: !13016)
!13025 = !DILocation(line: 2418, column: 28, scope: !12782)
!13026 = !DILocation(line: 2418, column: 34, scope: !12782)
!13027 = !DILocation(line: 2418, column: 2, scope: !12782)
!13028 = !DILocation(line: 2420, column: 2, scope: !12782)
!13029 = !DILocation(line: 2421, column: 1, scope: !12782)
!13030 = distinct !DISubprogram(name: "program_hw", scope: !3, file: !3, line: 2468, type: !8337, scopeLine: 2469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13031 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 2497, column: 2, scope: !13030)
!13033 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !13032)
!13034 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !13035)
!13035 = distinct !DILocation(line: 2472, column: 2, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 2472, column: 2)
!13037 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 2472, column: 2)
!13038 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 2472, column: 2)
!13039 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 2472, column: 2)
!13040 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 2472, column: 2)
!13041 = !DILocalVariable(name: "info", arg: 1, scope: !13030, file: !3, line: 2468, type: !7530)
!13042 = !DILocation(line: 2468, column: 42, scope: !13030)
!13043 = !DILocalVariable(name: "flags", scope: !13030, file: !3, line: 2470, type: !312)
!13044 = !DILocation(line: 2470, column: 16, scope: !13030)
!13045 = !DILocation(line: 2472, column: 2, scope: !13030)
!13046 = !DILocation(line: 2472, column: 2, scope: !13040)
!13047 = !DILocalVariable(name: "__dummy", scope: !13048, file: !3, line: 2472, type: !312)
!13048 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 2472, column: 2)
!13049 = !DILocation(line: 2472, column: 2, scope: !13048)
!13050 = !DILocalVariable(name: "__dummy2", scope: !13048, file: !3, line: 2472, type: !312)
!13051 = !DILocation(line: 2472, column: 2, scope: !13039)
!13052 = !DILocation(line: 2472, column: 2, scope: !13038)
!13053 = !DILocation(line: 2472, column: 2, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13038, file: !3, line: 2472, column: 2)
!13055 = !DILocalVariable(name: "__dummy", scope: !13056, file: !3, line: 2472, type: !312)
!13056 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 2472, column: 2)
!13057 = distinct !DILexicalBlock(scope: !13054, file: !3, line: 2472, column: 2)
!13058 = !DILocation(line: 2472, column: 2, scope: !13056)
!13059 = !DILocalVariable(name: "__dummy2", scope: !13056, file: !3, line: 2472, type: !312)
!13060 = !DILocation(line: 2472, column: 2, scope: !13057)
!13061 = !DILocation(line: 2472, column: 2, scope: !13037)
!13062 = !{i32 -2139534317}
!13063 = !DILocation(line: 2472, column: 2, scope: !13036)
!13064 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !13035)
!13065 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !13035)
!13066 = !DILocation(line: 2474, column: 10, scope: !13030)
!13067 = !DILocation(line: 2474, column: 2, scope: !13030)
!13068 = !DILocation(line: 2475, column: 10, scope: !13030)
!13069 = !DILocation(line: 2475, column: 2, scope: !13030)
!13070 = !DILocation(line: 2477, column: 6, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 2477, column: 6)
!13072 = !DILocation(line: 2477, column: 12, scope: !13071)
!13073 = !DILocation(line: 2477, column: 19, scope: !13071)
!13074 = !DILocation(line: 2477, column: 24, scope: !13071)
!13075 = !DILocation(line: 2477, column: 43, scope: !13071)
!13076 = !DILocation(line: 2478, column: 6, scope: !13071)
!13077 = !DILocation(line: 2478, column: 12, scope: !13071)
!13078 = !DILocation(line: 2477, column: 6, scope: !13030)
!13079 = !DILocation(line: 2479, column: 13, scope: !13071)
!13080 = !DILocation(line: 2479, column: 3, scope: !13071)
!13081 = !DILocation(line: 2481, column: 14, scope: !13071)
!13082 = !DILocation(line: 2481, column: 3, scope: !13071)
!13083 = !DILocation(line: 2483, column: 14, scope: !13030)
!13084 = !DILocation(line: 2483, column: 2, scope: !13030)
!13085 = !DILocation(line: 2485, column: 2, scope: !13030)
!13086 = !DILocation(line: 2485, column: 8, scope: !13030)
!13087 = !DILocation(line: 2485, column: 21, scope: !13030)
!13088 = !DILocation(line: 2486, column: 2, scope: !13030)
!13089 = !DILocation(line: 2486, column: 8, scope: !13030)
!13090 = !DILocation(line: 2486, column: 21, scope: !13030)
!13091 = !DILocation(line: 2487, column: 2, scope: !13030)
!13092 = !DILocation(line: 2487, column: 8, scope: !13030)
!13093 = !DILocation(line: 2487, column: 20, scope: !13030)
!13094 = !DILocation(line: 2488, column: 2, scope: !13030)
!13095 = !DILocation(line: 2488, column: 8, scope: !13030)
!13096 = !DILocation(line: 2488, column: 21, scope: !13030)
!13097 = !DILocation(line: 2490, column: 2, scope: !13030)
!13098 = !DILocation(line: 2491, column: 14, scope: !13030)
!13099 = !DILocation(line: 2491, column: 2, scope: !13030)
!13100 = !DILocation(line: 2493, column: 6, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 2493, column: 6)
!13102 = !DILocation(line: 2493, column: 12, scope: !13101)
!13103 = !DILocation(line: 2493, column: 21, scope: !13101)
!13104 = !DILocation(line: 2494, column: 7, scope: !13101)
!13105 = !DILocation(line: 2494, column: 13, scope: !13101)
!13106 = !DILocation(line: 2494, column: 18, scope: !13101)
!13107 = !DILocation(line: 2494, column: 22, scope: !13101)
!13108 = !DILocation(line: 2494, column: 25, scope: !13101)
!13109 = !DILocation(line: 2494, column: 31, scope: !13101)
!13110 = !DILocation(line: 2494, column: 36, scope: !13101)
!13111 = !DILocation(line: 2494, column: 41, scope: !13101)
!13112 = !DILocation(line: 2494, column: 49, scope: !13101)
!13113 = !DILocation(line: 2494, column: 57, scope: !13101)
!13114 = !DILocation(line: 2493, column: 6, scope: !13030)
!13115 = !DILocation(line: 2495, column: 12, scope: !13101)
!13116 = !DILocation(line: 2495, column: 3, scope: !13101)
!13117 = !DILocation(line: 2497, column: 26, scope: !13030)
!13118 = !DILocation(line: 2497, column: 32, scope: !13030)
!13119 = !DILocation(line: 2497, column: 37, scope: !13030)
!13120 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !13032)
!13121 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !13032)
!13122 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !13032)
!13123 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !13032)
!13124 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !13032)
!13125 = !DILocation(line: 2498, column: 1, scope: !13030)
!13126 = distinct !DISubprogram(name: "netif_trans_update", scope: !31, file: !31, line: 4223, type: !406, scopeLine: 4224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13127 = !DILocalVariable(name: "dev", arg: 1, scope: !13126, file: !31, line: 4223, type: !290)
!13128 = !DILocation(line: 4223, column: 58, scope: !13126)
!13129 = !DILocalVariable(name: "txq", scope: !13126, file: !31, line: 4225, type: !7315)
!13130 = !DILocation(line: 4225, column: 23, scope: !13126)
!13131 = !DILocation(line: 4225, column: 49, scope: !13126)
!13132 = !DILocation(line: 4225, column: 29, scope: !13126)
!13133 = !DILocation(line: 4227, column: 6, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13126, file: !31, line: 4227, column: 6)
!13135 = !DILocation(line: 4227, column: 11, scope: !13134)
!13136 = !DILocation(line: 4227, column: 26, scope: !13134)
!13137 = !DILocation(line: 4227, column: 23, scope: !13134)
!13138 = !DILocation(line: 4227, column: 6, scope: !13126)
!13139 = !DILocation(line: 4228, column: 22, scope: !13134)
!13140 = !DILocation(line: 4228, column: 3, scope: !13134)
!13141 = !DILocation(line: 4228, column: 8, scope: !13134)
!13142 = !DILocation(line: 4228, column: 20, scope: !13134)
!13143 = !DILocation(line: 4229, column: 1, scope: !13126)
!13144 = distinct !DISubprogram(name: "netif_start_queue", scope: !31, file: !31, line: 3285, type: !406, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13145 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13146, file: !31, line: 3274, type: !7315)
!13146 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !31, file: !31, line: 3274, type: !13147, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13147 = !DISubroutineType(types: !13148)
!13148 = !{null, !7315}
!13149 = !DILocation(line: 3274, column: 71, scope: !13146, inlinedAt: !13150)
!13150 = distinct !DILocation(line: 3287, column: 2, scope: !13144)
!13151 = !DILocalVariable(name: "dev", arg: 1, scope: !13144, file: !31, line: 3285, type: !290)
!13152 = !DILocation(line: 3285, column: 57, scope: !13144)
!13153 = !DILocation(line: 3287, column: 43, scope: !13144)
!13154 = !DILocation(line: 3287, column: 23, scope: !13144)
!13155 = !DILocation(line: 3276, column: 37, scope: !13146, inlinedAt: !13150)
!13156 = !DILocation(line: 3276, column: 48, scope: !13146, inlinedAt: !13150)
!13157 = !DILocation(line: 3276, column: 2, scope: !13146, inlinedAt: !13150)
!13158 = !DILocation(line: 3288, column: 1, scope: !13144)
!13159 = distinct !DISubprogram(name: "tty_port_initialized", scope: !3762, file: !3762, line: 664, type: !13160, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!771, !4766}
!13162 = !DILocalVariable(name: "port", arg: 1, scope: !13159, file: !3762, line: 664, type: !4766)
!13163 = !DILocation(line: 664, column: 58, scope: !13159)
!13164 = !DILocation(line: 666, column: 41, scope: !13159)
!13165 = !DILocation(line: 666, column: 47, scope: !13159)
!13166 = !DILocation(line: 666, column: 9, scope: !13159)
!13167 = !DILocation(line: 666, column: 2, scope: !13159)
!13168 = distinct !DISubprogram(name: "change_params", scope: !3, file: !3, line: 2503, type: !8337, scopeLine: 2504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13169 = !DILocalVariable(name: "info", arg: 1, scope: !13168, file: !3, line: 2503, type: !7530)
!13170 = !DILocation(line: 2503, column: 45, scope: !13168)
!13171 = !DILocalVariable(name: "cflag", scope: !13168, file: !3, line: 2505, type: !7)
!13172 = !DILocation(line: 2505, column: 11, scope: !13168)
!13173 = !DILocalVariable(name: "bits_per_char", scope: !13168, file: !3, line: 2506, type: !32)
!13174 = !DILocation(line: 2506, column: 6, scope: !13168)
!13175 = !DILocation(line: 2508, column: 7, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2508, column: 6)
!13177 = !DILocation(line: 2508, column: 13, scope: !13176)
!13178 = !DILocation(line: 2508, column: 18, scope: !13176)
!13179 = !DILocation(line: 2508, column: 6, scope: !13168)
!13180 = !DILocation(line: 2509, column: 3, scope: !13176)
!13181 = !DILocation(line: 2510, column: 2, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2510, column: 2)
!13183 = !DILocation(line: 2510, column: 2, scope: !13168)
!13184 = !DILocation(line: 2512, column: 10, scope: !13168)
!13185 = !DILocation(line: 2512, column: 16, scope: !13168)
!13186 = !DILocation(line: 2512, column: 21, scope: !13168)
!13187 = !DILocation(line: 2512, column: 26, scope: !13168)
!13188 = !DILocation(line: 2512, column: 34, scope: !13168)
!13189 = !DILocation(line: 2512, column: 8, scope: !13168)
!13190 = !DILocation(line: 2516, column: 7, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2516, column: 7)
!13192 = !DILocation(line: 2516, column: 13, scope: !13191)
!13193 = !DILocation(line: 2516, column: 7, scope: !13168)
!13194 = !DILocation(line: 2517, column: 3, scope: !13191)
!13195 = !DILocation(line: 2517, column: 9, scope: !13191)
!13196 = !DILocation(line: 2517, column: 17, scope: !13191)
!13197 = !DILocation(line: 2519, column: 3, scope: !13191)
!13198 = !DILocation(line: 2519, column: 9, scope: !13191)
!13199 = !DILocation(line: 2519, column: 17, scope: !13191)
!13200 = !DILocation(line: 2523, column: 10, scope: !13168)
!13201 = !DILocation(line: 2523, column: 16, scope: !13168)
!13202 = !DILocation(line: 2523, column: 2, scope: !13168)
!13203 = !DILocation(line: 2524, column: 12, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2523, column: 25)
!13205 = !DILocation(line: 2524, column: 18, scope: !13204)
!13206 = !DILocation(line: 2524, column: 25, scope: !13204)
!13207 = !DILocation(line: 2524, column: 35, scope: !13204)
!13208 = !DILocation(line: 2524, column: 40, scope: !13204)
!13209 = !DILocation(line: 2525, column: 12, scope: !13204)
!13210 = !DILocation(line: 2525, column: 18, scope: !13204)
!13211 = !DILocation(line: 2525, column: 25, scope: !13204)
!13212 = !DILocation(line: 2525, column: 35, scope: !13204)
!13213 = !DILocation(line: 2525, column: 40, scope: !13204)
!13214 = !DILocation(line: 2526, column: 12, scope: !13204)
!13215 = !DILocation(line: 2526, column: 18, scope: !13204)
!13216 = !DILocation(line: 2526, column: 25, scope: !13204)
!13217 = !DILocation(line: 2526, column: 35, scope: !13204)
!13218 = !DILocation(line: 2526, column: 40, scope: !13204)
!13219 = !DILocation(line: 2527, column: 12, scope: !13204)
!13220 = !DILocation(line: 2527, column: 18, scope: !13204)
!13221 = !DILocation(line: 2527, column: 25, scope: !13204)
!13222 = !DILocation(line: 2527, column: 35, scope: !13204)
!13223 = !DILocation(line: 2527, column: 40, scope: !13204)
!13224 = !DILocation(line: 2528, column: 12, scope: !13204)
!13225 = !DILocation(line: 2528, column: 18, scope: !13204)
!13226 = !DILocation(line: 2528, column: 25, scope: !13204)
!13227 = !DILocation(line: 2528, column: 35, scope: !13204)
!13228 = !DILocation(line: 2528, column: 40, scope: !13204)
!13229 = !DILocation(line: 2531, column: 28, scope: !13168)
!13230 = !DILocation(line: 2531, column: 34, scope: !13168)
!13231 = !DILocation(line: 2531, column: 27, scope: !13168)
!13232 = !DILocation(line: 2531, column: 2, scope: !13168)
!13233 = !DILocation(line: 2531, column: 8, scope: !13168)
!13234 = !DILocation(line: 2531, column: 15, scope: !13168)
!13235 = !DILocation(line: 2531, column: 25, scope: !13168)
!13236 = !DILocation(line: 2533, column: 6, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2533, column: 6)
!13238 = !DILocation(line: 2533, column: 12, scope: !13237)
!13239 = !DILocation(line: 2533, column: 6, scope: !13168)
!13240 = !DILocation(line: 2534, column: 26, scope: !13237)
!13241 = !DILocation(line: 2534, column: 32, scope: !13237)
!13242 = !DILocation(line: 2534, column: 25, scope: !13237)
!13243 = !DILocation(line: 2534, column: 3, scope: !13237)
!13244 = !DILocation(line: 2534, column: 9, scope: !13237)
!13245 = !DILocation(line: 2534, column: 16, scope: !13237)
!13246 = !DILocation(line: 2534, column: 23, scope: !13237)
!13247 = !DILocation(line: 2536, column: 3, scope: !13237)
!13248 = !DILocation(line: 2536, column: 9, scope: !13237)
!13249 = !DILocation(line: 2536, column: 16, scope: !13237)
!13250 = !DILocation(line: 2536, column: 23, scope: !13237)
!13251 = !DILocation(line: 2541, column: 18, scope: !13168)
!13252 = !DILocation(line: 2541, column: 24, scope: !13168)
!13253 = !DILocation(line: 2541, column: 31, scope: !13168)
!13254 = !DILocation(line: 2542, column: 4, scope: !13168)
!13255 = !DILocation(line: 2542, column: 10, scope: !13168)
!13256 = !DILocation(line: 2542, column: 17, scope: !13168)
!13257 = !DILocation(line: 2541, column: 41, scope: !13168)
!13258 = !DILocation(line: 2542, column: 27, scope: !13168)
!13259 = !DILocation(line: 2541, column: 16, scope: !13168)
!13260 = !DILocation(line: 2544, column: 45, scope: !13168)
!13261 = !DILocation(line: 2544, column: 51, scope: !13168)
!13262 = !DILocation(line: 2544, column: 56, scope: !13168)
!13263 = !DILocation(line: 2544, column: 27, scope: !13168)
!13264 = !DILocation(line: 2544, column: 2, scope: !13168)
!13265 = !DILocation(line: 2544, column: 8, scope: !13168)
!13266 = !DILocation(line: 2544, column: 15, scope: !13168)
!13267 = !DILocation(line: 2544, column: 25, scope: !13168)
!13268 = !DILocation(line: 2546, column: 6, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2546, column: 6)
!13270 = !DILocation(line: 2546, column: 12, scope: !13269)
!13271 = !DILocation(line: 2546, column: 19, scope: !13269)
!13272 = !DILocation(line: 2546, column: 6, scope: !13168)
!13273 = !DILocation(line: 2547, column: 26, scope: !13274)
!13274 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 2546, column: 30)
!13275 = !DILocation(line: 2547, column: 25, scope: !13274)
!13276 = !DILocation(line: 2547, column: 19, scope: !13274)
!13277 = !DILocation(line: 2548, column: 5, scope: !13274)
!13278 = !DILocation(line: 2548, column: 11, scope: !13274)
!13279 = !DILocation(line: 2548, column: 18, scope: !13274)
!13280 = !DILocation(line: 2547, column: 41, scope: !13274)
!13281 = !DILocation(line: 2547, column: 3, scope: !13274)
!13282 = !DILocation(line: 2547, column: 9, scope: !13274)
!13283 = !DILocation(line: 2547, column: 17, scope: !13274)
!13284 = !DILocation(line: 2549, column: 2, scope: !13274)
!13285 = !DILocation(line: 2550, column: 2, scope: !13168)
!13286 = !DILocation(line: 2550, column: 8, scope: !13168)
!13287 = !DILocation(line: 2550, column: 16, scope: !13168)
!13288 = !DILocation(line: 2552, column: 25, scope: !13168)
!13289 = !DILocation(line: 2552, column: 31, scope: !13168)
!13290 = !DILocation(line: 2552, column: 37, scope: !13168)
!13291 = !DILocation(line: 2552, column: 43, scope: !13168)
!13292 = !DILocation(line: 2552, column: 2, scope: !13168)
!13293 = !DILocation(line: 2553, column: 30, scope: !13168)
!13294 = !DILocation(line: 2553, column: 36, scope: !13168)
!13295 = !DILocation(line: 2553, column: 43, scope: !13168)
!13296 = !DILocation(line: 2553, column: 42, scope: !13168)
!13297 = !DILocation(line: 2553, column: 49, scope: !13168)
!13298 = !DILocation(line: 2553, column: 2, scope: !13168)
!13299 = !DILocation(line: 2557, column: 2, scope: !13168)
!13300 = !DILocation(line: 2557, column: 8, scope: !13168)
!13301 = !DILocation(line: 2557, column: 25, scope: !13168)
!13302 = !DILocation(line: 2558, column: 6, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2558, column: 6)
!13304 = !DILocation(line: 2558, column: 6, scope: !13168)
!13305 = !DILocation(line: 2559, column: 3, scope: !13303)
!13306 = !DILocation(line: 2559, column: 9, scope: !13303)
!13307 = !DILocation(line: 2559, column: 26, scope: !13303)
!13308 = !DILocation(line: 2560, column: 6, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2560, column: 6)
!13310 = !DILocation(line: 2560, column: 31, scope: !13309)
!13311 = !DILocation(line: 2560, column: 34, scope: !13309)
!13312 = !DILocation(line: 2560, column: 6, scope: !13168)
!13313 = !DILocation(line: 2561, column: 3, scope: !13309)
!13314 = !DILocation(line: 2561, column: 9, scope: !13309)
!13315 = !DILocation(line: 2561, column: 26, scope: !13309)
!13316 = !DILocation(line: 2562, column: 6, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2562, column: 6)
!13318 = !DILocation(line: 2562, column: 6, scope: !13168)
!13319 = !DILocation(line: 2563, column: 3, scope: !13317)
!13320 = !DILocation(line: 2563, column: 9, scope: !13317)
!13321 = !DILocation(line: 2563, column: 28, scope: !13317)
!13322 = !DILocation(line: 2564, column: 6, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2564, column: 6)
!13324 = !DILocation(line: 2564, column: 6, scope: !13168)
!13325 = !DILocation(line: 2565, column: 3, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13323, file: !3, line: 2564, column: 32)
!13327 = !DILocation(line: 2565, column: 9, scope: !13326)
!13328 = !DILocation(line: 2565, column: 28, scope: !13326)
!13329 = !DILocation(line: 2569, column: 7, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13326, file: !3, line: 2569, column: 7)
!13331 = !DILocation(line: 2569, column: 7, scope: !13326)
!13332 = !DILocation(line: 2570, column: 4, scope: !13330)
!13333 = !DILocation(line: 2570, column: 10, scope: !13330)
!13334 = !DILocation(line: 2570, column: 29, scope: !13330)
!13335 = !DILocation(line: 2571, column: 2, scope: !13326)
!13336 = !DILocation(line: 2573, column: 13, scope: !13168)
!13337 = !DILocation(line: 2573, column: 2, scope: !13168)
!13338 = !DILocation(line: 2574, column: 1, scope: !13168)
!13339 = distinct !DISubprogram(name: "clear_bit", scope: !13340, file: !13340, line: 39, type: !13341, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13340 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13341 = !DISubroutineType(types: !13342)
!13342 = !{null, !998, !13343}
!13343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11848, size: 64)
!13344 = !DILocalVariable(name: "nr", arg: 1, scope: !13345, file: !10278, line: 72, type: !998)
!13345 = distinct !DISubprogram(name: "arch_clear_bit", scope: !10278, file: !10278, line: 72, type: !13341, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13346 = !DILocation(line: 72, column: 21, scope: !13345, inlinedAt: !13347)
!13347 = distinct !DILocation(line: 42, column: 2, scope: !13339)
!13348 = !DILocalVariable(name: "addr", arg: 2, scope: !13345, file: !10278, line: 72, type: !13343)
!13349 = !DILocation(line: 72, column: 49, scope: !13345, inlinedAt: !13347)
!13350 = !DILocalVariable(name: "v", arg: 1, scope: !13351, file: !11865, line: 84, type: !8685)
!13351 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !11865, file: !11865, line: 84, type: !11866, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13352 = !DILocation(line: 84, column: 74, scope: !13351, inlinedAt: !13353)
!13353 = distinct !DILocation(line: 41, column: 2, scope: !13339)
!13354 = !DILocalVariable(name: "size", arg: 2, scope: !13351, file: !11865, line: 84, type: !1039)
!13355 = !DILocation(line: 84, column: 84, scope: !13351, inlinedAt: !13353)
!13356 = !DILocalVariable(name: "nr", arg: 1, scope: !13339, file: !13340, line: 39, type: !998)
!13357 = !DILocation(line: 39, column: 35, scope: !13339)
!13358 = !DILocalVariable(name: "addr", arg: 2, scope: !13339, file: !13340, line: 39, type: !13343)
!13359 = !DILocation(line: 39, column: 63, scope: !13339)
!13360 = !DILocation(line: 41, column: 26, scope: !13339)
!13361 = !DILocation(line: 41, column: 33, scope: !13339)
!13362 = !DILocation(line: 41, column: 31, scope: !13339)
!13363 = !DILocation(line: 86, column: 20, scope: !13351, inlinedAt: !13353)
!13364 = !DILocation(line: 86, column: 23, scope: !13351, inlinedAt: !13353)
!13365 = !DILocation(line: 86, column: 2, scope: !13351, inlinedAt: !13353)
!13366 = !DILocation(line: 87, column: 2, scope: !13351, inlinedAt: !13353)
!13367 = !DILocation(line: 42, column: 17, scope: !13339)
!13368 = !DILocation(line: 42, column: 21, scope: !13339)
!13369 = !DILocation(line: 74, column: 27, scope: !13370, inlinedAt: !13347)
!13370 = distinct !DILexicalBlock(scope: !13345, file: !10278, line: 74, column: 6)
!13371 = !DILocation(line: 74, column: 6, scope: !13370, inlinedAt: !13347)
!13372 = !DILocation(line: 74, column: 6, scope: !13345, inlinedAt: !13347)
!13373 = !DILocation(line: 76, column: 6, scope: !13374, inlinedAt: !13347)
!13374 = distinct !DILexicalBlock(scope: !13370, file: !10278, line: 74, column: 32)
!13375 = !DILocation(line: 77, column: 13, scope: !13374, inlinedAt: !13347)
!13376 = !DILocation(line: 77, column: 12, scope: !13374, inlinedAt: !13347)
!13377 = !DILocation(line: 75, column: 3, scope: !13374, inlinedAt: !13347)
!13378 = !{i32 -2147020381}
!13379 = !DILocation(line: 78, column: 2, scope: !13374, inlinedAt: !13347)
!13380 = !DILocation(line: 80, column: 8, scope: !13381, inlinedAt: !13347)
!13381 = distinct !DILexicalBlock(scope: !13370, file: !10278, line: 78, column: 9)
!13382 = !DILocation(line: 80, column: 32, scope: !13381, inlinedAt: !13347)
!13383 = !DILocation(line: 79, column: 3, scope: !13381, inlinedAt: !13347)
!13384 = !{i32 -2147020249}
!13385 = !DILocation(line: 43, column: 1, scope: !13339)
!13386 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !3762, file: !3762, line: 669, type: !13387, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{null, !4766, !771}
!13389 = !DILocalVariable(name: "port", arg: 1, scope: !13386, file: !3762, line: 669, type: !4766)
!13390 = !DILocation(line: 669, column: 62, scope: !13386)
!13391 = !DILocalVariable(name: "val", arg: 2, scope: !13386, file: !3762, line: 669, type: !771)
!13392 = !DILocation(line: 669, column: 73, scope: !13386)
!13393 = !DILocation(line: 671, column: 6, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13386, file: !3762, line: 671, column: 6)
!13395 = !DILocation(line: 671, column: 6, scope: !13386)
!13396 = !DILocation(line: 672, column: 34, scope: !13394)
!13397 = !DILocation(line: 672, column: 40, scope: !13394)
!13398 = !DILocation(line: 672, column: 3, scope: !13394)
!13399 = !DILocation(line: 674, column: 36, scope: !13394)
!13400 = !DILocation(line: 674, column: 42, scope: !13394)
!13401 = !DILocation(line: 674, column: 3, scope: !13394)
!13402 = !DILocation(line: 675, column: 1, scope: !13386)
!13403 = distinct !DISubprogram(name: "tty_get_baud_rate", scope: !3762, file: !3762, line: 538, type: !13404, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13404 = !DISubroutineType(types: !13405)
!13405 = !{!4757, !3760}
!13406 = !DILocalVariable(name: "tty", arg: 1, scope: !13403, file: !3762, line: 538, type: !3760)
!13407 = !DILocation(line: 538, column: 60, scope: !13403)
!13408 = !DILocation(line: 540, column: 32, scope: !13403)
!13409 = !DILocation(line: 540, column: 37, scope: !13403)
!13410 = !DILocation(line: 540, column: 9, scope: !13403)
!13411 = !DILocation(line: 540, column: 2, scope: !13403)
!13412 = distinct !DISubprogram(name: "tty_port_set_cts_flow", scope: !3762, file: !3762, line: 617, type: !13387, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13413 = !DILocalVariable(name: "port", arg: 1, scope: !13412, file: !3762, line: 617, type: !4766)
!13414 = !DILocation(line: 617, column: 59, scope: !13412)
!13415 = !DILocalVariable(name: "val", arg: 2, scope: !13412, file: !3762, line: 617, type: !771)
!13416 = !DILocation(line: 617, column: 70, scope: !13412)
!13417 = !DILocation(line: 619, column: 6, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13412, file: !3762, line: 619, column: 6)
!13419 = !DILocation(line: 619, column: 6, scope: !13412)
!13420 = !DILocation(line: 620, column: 31, scope: !13418)
!13421 = !DILocation(line: 620, column: 37, scope: !13418)
!13422 = !DILocation(line: 620, column: 3, scope: !13418)
!13423 = !DILocation(line: 622, column: 33, scope: !13418)
!13424 = !DILocation(line: 622, column: 39, scope: !13418)
!13425 = !DILocation(line: 622, column: 3, scope: !13418)
!13426 = !DILocation(line: 623, column: 1, scope: !13412)
!13427 = distinct !DISubprogram(name: "tty_port_set_check_carrier", scope: !3762, file: !3762, line: 643, type: !13387, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13428 = !DILocalVariable(name: "port", arg: 1, scope: !13427, file: !3762, line: 643, type: !4766)
!13429 = !DILocation(line: 643, column: 64, scope: !13427)
!13430 = !DILocalVariable(name: "val", arg: 2, scope: !13427, file: !3762, line: 643, type: !771)
!13431 = !DILocation(line: 643, column: 75, scope: !13427)
!13432 = !DILocation(line: 645, column: 6, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13427, file: !3762, line: 645, column: 6)
!13434 = !DILocation(line: 645, column: 6, scope: !13427)
!13435 = !DILocation(line: 646, column: 31, scope: !13433)
!13436 = !DILocation(line: 646, column: 37, scope: !13433)
!13437 = !DILocation(line: 646, column: 3, scope: !13433)
!13438 = !DILocation(line: 648, column: 33, scope: !13433)
!13439 = !DILocation(line: 648, column: 39, scope: !13433)
!13440 = !DILocation(line: 648, column: 3, scope: !13433)
!13441 = !DILocation(line: 649, column: 1, scope: !13427)
!13442 = distinct !DISubprogram(name: "set_bit", scope: !13340, file: !13340, line: 26, type: !13341, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13443 = !DILocalVariable(name: "nr", arg: 1, scope: !13444, file: !10278, line: 52, type: !998)
!13444 = distinct !DISubprogram(name: "arch_set_bit", scope: !10278, file: !10278, line: 52, type: !13341, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13445 = !DILocation(line: 52, column: 19, scope: !13444, inlinedAt: !13446)
!13446 = distinct !DILocation(line: 29, column: 2, scope: !13442)
!13447 = !DILocalVariable(name: "addr", arg: 2, scope: !13444, file: !10278, line: 52, type: !13343)
!13448 = !DILocation(line: 52, column: 47, scope: !13444, inlinedAt: !13446)
!13449 = !DILocation(line: 84, column: 74, scope: !13351, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 28, column: 2, scope: !13442)
!13451 = !DILocation(line: 84, column: 84, scope: !13351, inlinedAt: !13450)
!13452 = !DILocalVariable(name: "nr", arg: 1, scope: !13442, file: !13340, line: 26, type: !998)
!13453 = !DILocation(line: 26, column: 33, scope: !13442)
!13454 = !DILocalVariable(name: "addr", arg: 2, scope: !13442, file: !13340, line: 26, type: !13343)
!13455 = !DILocation(line: 26, column: 61, scope: !13442)
!13456 = !DILocation(line: 28, column: 26, scope: !13442)
!13457 = !DILocation(line: 28, column: 33, scope: !13442)
!13458 = !DILocation(line: 28, column: 31, scope: !13442)
!13459 = !DILocation(line: 86, column: 20, scope: !13351, inlinedAt: !13450)
!13460 = !DILocation(line: 86, column: 23, scope: !13351, inlinedAt: !13450)
!13461 = !DILocation(line: 86, column: 2, scope: !13351, inlinedAt: !13450)
!13462 = !DILocation(line: 87, column: 2, scope: !13351, inlinedAt: !13450)
!13463 = !DILocation(line: 29, column: 15, scope: !13442)
!13464 = !DILocation(line: 29, column: 19, scope: !13442)
!13465 = !DILocation(line: 54, column: 27, scope: !13466, inlinedAt: !13446)
!13466 = distinct !DILexicalBlock(scope: !13444, file: !10278, line: 54, column: 6)
!13467 = !DILocation(line: 54, column: 6, scope: !13466, inlinedAt: !13446)
!13468 = !DILocation(line: 54, column: 6, scope: !13444, inlinedAt: !13446)
!13469 = !DILocation(line: 56, column: 6, scope: !13470, inlinedAt: !13446)
!13470 = distinct !DILexicalBlock(scope: !13466, file: !10278, line: 54, column: 32)
!13471 = !DILocation(line: 57, column: 12, scope: !13470, inlinedAt: !13446)
!13472 = !DILocation(line: 55, column: 3, scope: !13470, inlinedAt: !13446)
!13473 = !{i32 -2147021335}
!13474 = !DILocation(line: 59, column: 2, scope: !13470, inlinedAt: !13446)
!13475 = !DILocation(line: 61, column: 8, scope: !13476, inlinedAt: !13446)
!13476 = distinct !DILexicalBlock(scope: !13466, file: !10278, line: 59, column: 9)
!13477 = !DILocation(line: 61, column: 32, scope: !13476, inlinedAt: !13446)
!13478 = !DILocation(line: 60, column: 3, scope: !13476, inlinedAt: !13446)
!13479 = !{i32 -2147021203}
!13480 = !DILocation(line: 30, column: 1, scope: !13442)
!13481 = distinct !DISubprogram(name: "kasan_check_write", scope: !11899, file: !11899, line: 38, type: !11900, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13482 = !DILocalVariable(name: "p", arg: 1, scope: !13481, file: !11899, line: 38, type: !8685)
!13483 = !DILocation(line: 38, column: 59, scope: !13481)
!13484 = !DILocalVariable(name: "size", arg: 2, scope: !13481, file: !11899, line: 38, type: !7)
!13485 = !DILocation(line: 38, column: 75, scope: !13481)
!13486 = !DILocation(line: 40, column: 2, scope: !13481)
!13487 = distinct !DISubprogram(name: "sync_mode", scope: !3, file: !3, line: 4233, type: !8337, scopeLine: 4234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13488 = !DILocalVariable(name: "info", arg: 1, scope: !13487, file: !3, line: 4233, type: !7530)
!13489 = !DILocation(line: 4233, column: 41, scope: !13487)
!13490 = !DILocalVariable(name: "val", scope: !13487, file: !3, line: 4235, type: !476)
!13491 = !DILocation(line: 4235, column: 17, scope: !13487)
!13492 = !DILocation(line: 4237, column: 2, scope: !13487)
!13493 = !DILocation(line: 4238, column: 10, scope: !13487)
!13494 = !DILocation(line: 4238, column: 2, scope: !13487)
!13495 = !DILocation(line: 4239, column: 10, scope: !13487)
!13496 = !DILocation(line: 4239, column: 2, scope: !13487)
!13497 = !DILocation(line: 4261, column: 6, scope: !13487)
!13498 = !DILocation(line: 4263, column: 9, scope: !13487)
!13499 = !DILocation(line: 4263, column: 15, scope: !13487)
!13500 = !DILocation(line: 4263, column: 22, scope: !13487)
!13501 = !DILocation(line: 4263, column: 2, scope: !13487)
!13502 = !DILocation(line: 4265, column: 7, scope: !13503)
!13503 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4263, column: 28)
!13504 = !DILocation(line: 4266, column: 3, scope: !13503)
!13505 = !DILocation(line: 4267, column: 31, scope: !13503)
!13506 = !DILocation(line: 4267, column: 49, scope: !13503)
!13507 = !DILocation(line: 4268, column: 31, scope: !13503)
!13508 = !DILocation(line: 4268, column: 41, scope: !13503)
!13509 = !DILocation(line: 4269, column: 31, scope: !13503)
!13510 = !DILocation(line: 4269, column: 41, scope: !13503)
!13511 = !DILocation(line: 4271, column: 6, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4271, column: 6)
!13513 = !DILocation(line: 4271, column: 12, scope: !13512)
!13514 = !DILocation(line: 4271, column: 20, scope: !13512)
!13515 = !DILocation(line: 4271, column: 6, scope: !13487)
!13516 = !DILocation(line: 4272, column: 7, scope: !13512)
!13517 = !DILocation(line: 4272, column: 3, scope: !13512)
!13518 = !DILocation(line: 4274, column: 9, scope: !13487)
!13519 = !DILocation(line: 4274, column: 15, scope: !13487)
!13520 = !DILocation(line: 4274, column: 22, scope: !13487)
!13521 = !DILocation(line: 4274, column: 2, scope: !13487)
!13522 = !DILocation(line: 4276, column: 40, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4275, column: 2)
!13524 = !DILocation(line: 4276, column: 50, scope: !13523)
!13525 = !DILocation(line: 4277, column: 40, scope: !13523)
!13526 = !DILocation(line: 4277, column: 50, scope: !13523)
!13527 = !DILocation(line: 4278, column: 40, scope: !13523)
!13528 = !DILocation(line: 4278, column: 58, scope: !13523)
!13529 = !DILocation(line: 4279, column: 40, scope: !13523)
!13530 = !DILocation(line: 4279, column: 50, scope: !13523)
!13531 = !DILocation(line: 4280, column: 40, scope: !13523)
!13532 = !DILocation(line: 4280, column: 58, scope: !13523)
!13533 = !DILocation(line: 4281, column: 40, scope: !13523)
!13534 = !DILocation(line: 4281, column: 58, scope: !13523)
!13535 = !DILocation(line: 4282, column: 45, scope: !13523)
!13536 = !DILocation(line: 4282, column: 71, scope: !13523)
!13537 = !DILocation(line: 4285, column: 10, scope: !13487)
!13538 = !DILocation(line: 4285, column: 16, scope: !13487)
!13539 = !DILocation(line: 4285, column: 23, scope: !13487)
!13540 = !DILocation(line: 4285, column: 32, scope: !13487)
!13541 = !DILocation(line: 4285, column: 2, scope: !13487)
!13542 = !DILocation(line: 4287, column: 30, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4286, column: 2)
!13544 = !DILocation(line: 4287, column: 39, scope: !13543)
!13545 = !DILocation(line: 4288, column: 30, scope: !13543)
!13546 = !DILocation(line: 4288, column: 46, scope: !13543)
!13547 = !DILocation(line: 4291, column: 6, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4291, column: 6)
!13549 = !DILocation(line: 4291, column: 12, scope: !13548)
!13550 = !DILocation(line: 4291, column: 19, scope: !13548)
!13551 = !DILocation(line: 4291, column: 28, scope: !13548)
!13552 = !DILocation(line: 4291, column: 6, scope: !13487)
!13553 = !DILocation(line: 4292, column: 7, scope: !13548)
!13554 = !DILocation(line: 4292, column: 3, scope: !13548)
!13555 = !DILocation(line: 4294, column: 10, scope: !13487)
!13556 = !DILocation(line: 4294, column: 16, scope: !13487)
!13557 = !DILocation(line: 4294, column: 23, scope: !13487)
!13558 = !DILocation(line: 4294, column: 2, scope: !13487)
!13559 = !DILocation(line: 4296, column: 40, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4295, column: 2)
!13561 = !DILocation(line: 4296, column: 49, scope: !13560)
!13562 = !DILocation(line: 4297, column: 40, scope: !13560)
!13563 = !DILocation(line: 4297, column: 49, scope: !13560)
!13564 = !DILocation(line: 4298, column: 40, scope: !13560)
!13565 = !DILocation(line: 4298, column: 56, scope: !13560)
!13566 = !DILocation(line: 4301, column: 6, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4301, column: 6)
!13568 = !DILocation(line: 4301, column: 12, scope: !13567)
!13569 = !DILocation(line: 4301, column: 19, scope: !13567)
!13570 = !DILocation(line: 4301, column: 25, scope: !13567)
!13571 = !DILocation(line: 4301, column: 6, scope: !13487)
!13572 = !DILocation(line: 4302, column: 7, scope: !13567)
!13573 = !DILocation(line: 4302, column: 3, scope: !13567)
!13574 = !DILocation(line: 4304, column: 11, scope: !13487)
!13575 = !DILocation(line: 4304, column: 22, scope: !13487)
!13576 = !DILocation(line: 4304, column: 2, scope: !13487)
!13577 = !DILocation(line: 4308, column: 10, scope: !13487)
!13578 = !DILocation(line: 4308, column: 16, scope: !13487)
!13579 = !DILocation(line: 4308, column: 23, scope: !13487)
!13580 = !DILocation(line: 4308, column: 2, scope: !13487)
!13581 = !DILocation(line: 4310, column: 40, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4309, column: 2)
!13583 = !DILocation(line: 4310, column: 48, scope: !13582)
!13584 = !DILocation(line: 4311, column: 40, scope: !13582)
!13585 = !DILocation(line: 4311, column: 48, scope: !13582)
!13586 = !DILocation(line: 4312, column: 40, scope: !13582)
!13587 = !DILocation(line: 4312, column: 48, scope: !13582)
!13588 = !DILocation(line: 4313, column: 40, scope: !13582)
!13589 = !DILocation(line: 4313, column: 48, scope: !13582)
!13590 = !DILocation(line: 4314, column: 40, scope: !13582)
!13591 = !DILocation(line: 4314, column: 48, scope: !13582)
!13592 = !DILocation(line: 4315, column: 40, scope: !13582)
!13593 = !DILocation(line: 4315, column: 48, scope: !13582)
!13594 = !DILocation(line: 4317, column: 10, scope: !13487)
!13595 = !DILocation(line: 4317, column: 36, scope: !13487)
!13596 = !DILocation(line: 4317, column: 21, scope: !13487)
!13597 = !DILocation(line: 4317, column: 2, scope: !13487)
!13598 = !DILocation(line: 4336, column: 6, scope: !13487)
!13599 = !DILocation(line: 4338, column: 9, scope: !13487)
!13600 = !DILocation(line: 4338, column: 15, scope: !13487)
!13601 = !DILocation(line: 4338, column: 22, scope: !13487)
!13602 = !DILocation(line: 4338, column: 2, scope: !13487)
!13603 = !DILocation(line: 4340, column: 7, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4338, column: 28)
!13605 = !DILocation(line: 4341, column: 3, scope: !13604)
!13606 = !DILocation(line: 4342, column: 31, scope: !13604)
!13607 = !DILocation(line: 4342, column: 49, scope: !13604)
!13608 = !DILocation(line: 4343, column: 31, scope: !13604)
!13609 = !DILocation(line: 4343, column: 41, scope: !13604)
!13610 = !DILocation(line: 4344, column: 31, scope: !13604)
!13611 = !DILocation(line: 4344, column: 41, scope: !13604)
!13612 = !DILocation(line: 4347, column: 9, scope: !13487)
!13613 = !DILocation(line: 4347, column: 15, scope: !13487)
!13614 = !DILocation(line: 4347, column: 22, scope: !13487)
!13615 = !DILocation(line: 4347, column: 2, scope: !13487)
!13616 = !DILocation(line: 4349, column: 40, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4348, column: 2)
!13618 = !DILocation(line: 4349, column: 50, scope: !13617)
!13619 = !DILocation(line: 4350, column: 40, scope: !13617)
!13620 = !DILocation(line: 4350, column: 50, scope: !13617)
!13621 = !DILocation(line: 4351, column: 40, scope: !13617)
!13622 = !DILocation(line: 4351, column: 58, scope: !13617)
!13623 = !DILocation(line: 4352, column: 40, scope: !13617)
!13624 = !DILocation(line: 4352, column: 50, scope: !13617)
!13625 = !DILocation(line: 4353, column: 40, scope: !13617)
!13626 = !DILocation(line: 4353, column: 58, scope: !13617)
!13627 = !DILocation(line: 4354, column: 40, scope: !13617)
!13628 = !DILocation(line: 4354, column: 58, scope: !13617)
!13629 = !DILocation(line: 4355, column: 45, scope: !13617)
!13630 = !DILocation(line: 4355, column: 71, scope: !13617)
!13631 = !DILocation(line: 4358, column: 10, scope: !13487)
!13632 = !DILocation(line: 4358, column: 16, scope: !13487)
!13633 = !DILocation(line: 4358, column: 23, scope: !13487)
!13634 = !DILocation(line: 4358, column: 32, scope: !13487)
!13635 = !DILocation(line: 4358, column: 2, scope: !13487)
!13636 = !DILocation(line: 4360, column: 30, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4359, column: 2)
!13638 = !DILocation(line: 4360, column: 39, scope: !13637)
!13639 = !DILocation(line: 4361, column: 30, scope: !13637)
!13640 = !DILocation(line: 4361, column: 46, scope: !13637)
!13641 = !DILocation(line: 4364, column: 6, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4364, column: 6)
!13643 = !DILocation(line: 4364, column: 12, scope: !13642)
!13644 = !DILocation(line: 4364, column: 19, scope: !13642)
!13645 = !DILocation(line: 4364, column: 25, scope: !13642)
!13646 = !DILocation(line: 4364, column: 6, scope: !13487)
!13647 = !DILocation(line: 4365, column: 7, scope: !13642)
!13648 = !DILocation(line: 4365, column: 3, scope: !13642)
!13649 = !DILocation(line: 4367, column: 11, scope: !13487)
!13650 = !DILocation(line: 4367, column: 22, scope: !13487)
!13651 = !DILocation(line: 4367, column: 2, scope: !13487)
!13652 = !DILocation(line: 4376, column: 6, scope: !13487)
!13653 = !DILocation(line: 4378, column: 6, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4378, column: 6)
!13655 = !DILocation(line: 4378, column: 12, scope: !13654)
!13656 = !DILocation(line: 4378, column: 19, scope: !13654)
!13657 = !DILocation(line: 4378, column: 25, scope: !13654)
!13658 = !DILocation(line: 4378, column: 6, scope: !13487)
!13659 = !DILocation(line: 4383, column: 7, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13661, file: !3, line: 4383, column: 7)
!13661 = distinct !DILexicalBlock(scope: !13654, file: !3, line: 4379, column: 2)
!13662 = !DILocation(line: 4383, column: 13, scope: !13660)
!13663 = !DILocation(line: 4383, column: 20, scope: !13660)
!13664 = !DILocation(line: 4383, column: 26, scope: !13660)
!13665 = !DILocation(line: 4383, column: 7, scope: !13661)
!13666 = !DILocation(line: 4384, column: 8, scope: !13660)
!13667 = !DILocation(line: 4384, column: 4, scope: !13660)
!13668 = !DILocation(line: 4386, column: 8, scope: !13660)
!13669 = !DILocation(line: 4387, column: 2, scope: !13661)
!13670 = !DILocation(line: 4388, column: 11, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13654, file: !3, line: 4388, column: 11)
!13672 = !DILocation(line: 4388, column: 17, scope: !13671)
!13673 = !DILocation(line: 4388, column: 24, scope: !13671)
!13674 = !DILocation(line: 4388, column: 30, scope: !13671)
!13675 = !DILocation(line: 4388, column: 11, scope: !13654)
!13676 = !DILocation(line: 4389, column: 7, scope: !13671)
!13677 = !DILocation(line: 4389, column: 3, scope: !13671)
!13678 = !DILocation(line: 4390, column: 11, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13671, file: !3, line: 4390, column: 11)
!13680 = !DILocation(line: 4390, column: 17, scope: !13679)
!13681 = !DILocation(line: 4390, column: 24, scope: !13679)
!13682 = !DILocation(line: 4390, column: 30, scope: !13679)
!13683 = !DILocation(line: 4390, column: 11, scope: !13671)
!13684 = !DILocation(line: 4391, column: 7, scope: !13679)
!13685 = !DILocation(line: 4391, column: 3, scope: !13679)
!13686 = !DILocation(line: 4393, column: 6, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4393, column: 6)
!13688 = !DILocation(line: 4393, column: 12, scope: !13687)
!13689 = !DILocation(line: 4393, column: 19, scope: !13687)
!13690 = !DILocation(line: 4393, column: 25, scope: !13687)
!13691 = !DILocation(line: 4393, column: 6, scope: !13487)
!13692 = !DILocation(line: 4394, column: 7, scope: !13687)
!13693 = !DILocation(line: 4394, column: 3, scope: !13687)
!13694 = !DILocation(line: 4395, column: 11, scope: !13695)
!13695 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 4395, column: 11)
!13696 = !DILocation(line: 4395, column: 17, scope: !13695)
!13697 = !DILocation(line: 4395, column: 24, scope: !13695)
!13698 = !DILocation(line: 4395, column: 30, scope: !13695)
!13699 = !DILocation(line: 4395, column: 11, scope: !13687)
!13700 = !DILocation(line: 4396, column: 7, scope: !13695)
!13701 = !DILocation(line: 4396, column: 3, scope: !13695)
!13702 = !DILocation(line: 4397, column: 11, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13695, file: !3, line: 4397, column: 11)
!13704 = !DILocation(line: 4397, column: 17, scope: !13703)
!13705 = !DILocation(line: 4397, column: 24, scope: !13703)
!13706 = !DILocation(line: 4397, column: 30, scope: !13703)
!13707 = !DILocation(line: 4397, column: 11, scope: !13695)
!13708 = !DILocation(line: 4398, column: 7, scope: !13703)
!13709 = !DILocation(line: 4398, column: 3, scope: !13703)
!13710 = !DILocation(line: 4400, column: 6, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4400, column: 6)
!13712 = !DILocation(line: 4400, column: 12, scope: !13711)
!13713 = !DILocation(line: 4400, column: 19, scope: !13711)
!13714 = !DILocation(line: 4400, column: 6, scope: !13487)
!13715 = !DILocation(line: 4401, column: 7, scope: !13711)
!13716 = !DILocation(line: 4401, column: 3, scope: !13711)
!13717 = !DILocation(line: 4403, column: 10, scope: !13487)
!13718 = !DILocation(line: 4403, column: 36, scope: !13487)
!13719 = !DILocation(line: 4403, column: 21, scope: !13487)
!13720 = !DILocation(line: 4403, column: 2, scope: !13487)
!13721 = !DILocation(line: 4405, column: 6, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4405, column: 6)
!13723 = !DILocation(line: 4405, column: 12, scope: !13722)
!13724 = !DILocation(line: 4405, column: 19, scope: !13722)
!13725 = !DILocation(line: 4405, column: 25, scope: !13722)
!13726 = !DILocation(line: 4405, column: 6, scope: !13487)
!13727 = !DILocation(line: 4408, column: 10, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13722, file: !3, line: 4406, column: 2)
!13729 = !DILocation(line: 4408, column: 16, scope: !13728)
!13730 = !DILocation(line: 4408, column: 23, scope: !13728)
!13731 = !DILocation(line: 4408, column: 3, scope: !13728)
!13732 = !DILocation(line: 4412, column: 8, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13728, file: !3, line: 4409, column: 3)
!13734 = !DILocation(line: 4412, column: 16, scope: !13733)
!13735 = !DILocation(line: 4415, column: 8, scope: !13733)
!13736 = !DILocation(line: 4415, column: 23, scope: !13733)
!13737 = !DILocation(line: 4416, column: 16, scope: !13733)
!13738 = !DILocation(line: 4417, column: 3, scope: !13733)
!13739 = !DILocation(line: 4418, column: 12, scope: !13728)
!13740 = !DILocation(line: 4418, column: 49, scope: !13728)
!13741 = !DILocation(line: 4418, column: 40, scope: !13728)
!13742 = !DILocation(line: 4418, column: 62, scope: !13728)
!13743 = !DILocation(line: 4418, column: 60, scope: !13728)
!13744 = !DILocation(line: 4418, column: 23, scope: !13728)
!13745 = !DILocation(line: 4418, column: 3, scope: !13728)
!13746 = !DILocation(line: 4421, column: 12, scope: !13728)
!13747 = !DILocation(line: 4421, column: 18, scope: !13728)
!13748 = !DILocation(line: 4421, column: 24, scope: !13728)
!13749 = !DILocation(line: 4421, column: 31, scope: !13728)
!13750 = !DILocation(line: 4421, column: 43, scope: !13728)
!13751 = !DILocation(line: 4421, column: 3, scope: !13728)
!13752 = !DILocation(line: 4422, column: 2, scope: !13728)
!13753 = !DILocation(line: 4424, column: 12, scope: !13722)
!13754 = !DILocation(line: 4424, column: 18, scope: !13722)
!13755 = !DILocation(line: 4424, column: 24, scope: !13722)
!13756 = !DILocation(line: 4424, column: 31, scope: !13722)
!13757 = !DILocation(line: 4424, column: 3, scope: !13722)
!13758 = !DILocation(line: 4426, column: 14, scope: !13487)
!13759 = !DILocation(line: 4426, column: 2, scope: !13487)
!13760 = !DILocation(line: 4428, column: 14, scope: !13487)
!13761 = !DILocation(line: 4428, column: 2, scope: !13487)
!13762 = !DILocation(line: 4449, column: 11, scope: !13487)
!13763 = !DILocation(line: 4449, column: 2, scope: !13487)
!13764 = !DILocation(line: 4451, column: 6, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 4451, column: 6)
!13766 = !DILocation(line: 4451, column: 12, scope: !13765)
!13767 = !DILocation(line: 4451, column: 19, scope: !13765)
!13768 = !DILocation(line: 4451, column: 6, scope: !13487)
!13769 = !DILocation(line: 4452, column: 19, scope: !13765)
!13770 = !DILocation(line: 4452, column: 3, scope: !13765)
!13771 = !DILocation(line: 4453, column: 1, scope: !13487)
!13772 = distinct !DISubprogram(name: "async_mode", scope: !3, file: !3, line: 4092, type: !8337, scopeLine: 4093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13773 = !DILocalVariable(name: "info", arg: 1, scope: !13772, file: !3, line: 4092, type: !7530)
!13774 = !DILocation(line: 4092, column: 42, scope: !13772)
!13775 = !DILocalVariable(name: "val", scope: !13772, file: !3, line: 4094, type: !476)
!13776 = !DILocation(line: 4094, column: 19, scope: !13772)
!13777 = !DILocation(line: 4096, column: 2, scope: !13772)
!13778 = !DILocation(line: 4097, column: 10, scope: !13772)
!13779 = !DILocation(line: 4097, column: 2, scope: !13772)
!13780 = !DILocation(line: 4098, column: 10, scope: !13772)
!13781 = !DILocation(line: 4098, column: 2, scope: !13772)
!13782 = !DILocation(line: 4118, column: 6, scope: !13772)
!13783 = !DILocation(line: 4120, column: 6, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4120, column: 6)
!13785 = !DILocation(line: 4120, column: 12, scope: !13784)
!13786 = !DILocation(line: 4120, column: 20, scope: !13784)
!13787 = !DILocation(line: 4120, column: 6, scope: !13772)
!13788 = !DILocation(line: 4121, column: 7, scope: !13784)
!13789 = !DILocation(line: 4121, column: 3, scope: !13784)
!13790 = !DILocation(line: 4123, column: 6, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4123, column: 6)
!13792 = !DILocation(line: 4123, column: 12, scope: !13791)
!13793 = !DILocation(line: 4123, column: 19, scope: !13791)
!13794 = !DILocation(line: 4123, column: 26, scope: !13791)
!13795 = !DILocation(line: 4123, column: 6, scope: !13772)
!13796 = !DILocation(line: 4124, column: 7, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 4123, column: 48)
!13798 = !DILocation(line: 4125, column: 7, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13797, file: !3, line: 4125, column: 7)
!13800 = !DILocation(line: 4125, column: 13, scope: !13799)
!13801 = !DILocation(line: 4125, column: 20, scope: !13799)
!13802 = !DILocation(line: 4125, column: 27, scope: !13799)
!13803 = !DILocation(line: 4125, column: 7, scope: !13797)
!13804 = !DILocation(line: 4126, column: 8, scope: !13799)
!13805 = !DILocation(line: 4126, column: 4, scope: !13799)
!13806 = !DILocation(line: 4127, column: 2, scope: !13797)
!13807 = !DILocation(line: 4129, column: 10, scope: !13772)
!13808 = !DILocation(line: 4129, column: 16, scope: !13772)
!13809 = !DILocation(line: 4129, column: 23, scope: !13772)
!13810 = !DILocation(line: 4129, column: 2, scope: !13772)
!13811 = !DILocation(line: 4131, column: 14, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4130, column: 2)
!13813 = !DILocation(line: 4131, column: 23, scope: !13812)
!13814 = !DILocation(line: 4132, column: 14, scope: !13812)
!13815 = !DILocation(line: 4132, column: 23, scope: !13812)
!13816 = !DILocation(line: 4133, column: 14, scope: !13812)
!13817 = !DILocation(line: 4133, column: 30, scope: !13812)
!13818 = !DILocation(line: 4136, column: 6, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4136, column: 6)
!13820 = !DILocation(line: 4136, column: 12, scope: !13819)
!13821 = !DILocation(line: 4136, column: 19, scope: !13819)
!13822 = !DILocation(line: 4136, column: 29, scope: !13819)
!13823 = !DILocation(line: 4136, column: 6, scope: !13772)
!13824 = !DILocation(line: 4137, column: 7, scope: !13819)
!13825 = !DILocation(line: 4137, column: 3, scope: !13819)
!13826 = !DILocation(line: 4139, column: 6, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4139, column: 6)
!13828 = !DILocation(line: 4139, column: 12, scope: !13827)
!13829 = !DILocation(line: 4139, column: 19, scope: !13827)
!13830 = !DILocation(line: 4139, column: 25, scope: !13827)
!13831 = !DILocation(line: 4139, column: 6, scope: !13772)
!13832 = !DILocation(line: 4140, column: 7, scope: !13827)
!13833 = !DILocation(line: 4140, column: 3, scope: !13827)
!13834 = !DILocation(line: 4142, column: 11, scope: !13772)
!13835 = !DILocation(line: 4142, column: 22, scope: !13772)
!13836 = !DILocation(line: 4142, column: 2, scope: !13772)
!13837 = !DILocation(line: 4161, column: 6, scope: !13772)
!13838 = !DILocation(line: 4163, column: 6, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4163, column: 6)
!13840 = !DILocation(line: 4163, column: 12, scope: !13839)
!13841 = !DILocation(line: 4163, column: 19, scope: !13839)
!13842 = !DILocation(line: 4163, column: 26, scope: !13839)
!13843 = !DILocation(line: 4163, column: 6, scope: !13772)
!13844 = !DILocation(line: 4164, column: 7, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 4163, column: 48)
!13846 = !DILocation(line: 4165, column: 7, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 4165, column: 7)
!13848 = !DILocation(line: 4165, column: 13, scope: !13847)
!13849 = !DILocation(line: 4165, column: 20, scope: !13847)
!13850 = !DILocation(line: 4165, column: 27, scope: !13847)
!13851 = !DILocation(line: 4165, column: 7, scope: !13845)
!13852 = !DILocation(line: 4166, column: 8, scope: !13847)
!13853 = !DILocation(line: 4166, column: 4, scope: !13847)
!13854 = !DILocation(line: 4167, column: 2, scope: !13845)
!13855 = !DILocation(line: 4169, column: 10, scope: !13772)
!13856 = !DILocation(line: 4169, column: 16, scope: !13772)
!13857 = !DILocation(line: 4169, column: 23, scope: !13772)
!13858 = !DILocation(line: 4169, column: 2, scope: !13772)
!13859 = !DILocation(line: 4171, column: 14, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4170, column: 2)
!13861 = !DILocation(line: 4171, column: 23, scope: !13860)
!13862 = !DILocation(line: 4172, column: 14, scope: !13860)
!13863 = !DILocation(line: 4172, column: 23, scope: !13860)
!13864 = !DILocation(line: 4173, column: 14, scope: !13860)
!13865 = !DILocation(line: 4173, column: 30, scope: !13860)
!13866 = !DILocation(line: 4176, column: 6, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4176, column: 6)
!13868 = !DILocation(line: 4176, column: 12, scope: !13867)
!13869 = !DILocation(line: 4176, column: 19, scope: !13867)
!13870 = !DILocation(line: 4176, column: 25, scope: !13867)
!13871 = !DILocation(line: 4176, column: 6, scope: !13772)
!13872 = !DILocation(line: 4177, column: 7, scope: !13867)
!13873 = !DILocation(line: 4177, column: 3, scope: !13867)
!13874 = !DILocation(line: 4179, column: 11, scope: !13772)
!13875 = !DILocation(line: 4179, column: 22, scope: !13772)
!13876 = !DILocation(line: 4179, column: 2, scope: !13772)
!13877 = !DILocation(line: 4190, column: 10, scope: !13772)
!13878 = !DILocation(line: 4190, column: 2, scope: !13772)
!13879 = !DILocation(line: 4192, column: 14, scope: !13772)
!13880 = !DILocation(line: 4192, column: 2, scope: !13772)
!13881 = !DILocation(line: 4213, column: 6, scope: !13772)
!13882 = !DILocation(line: 4215, column: 16, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4215, column: 6)
!13884 = !DILocation(line: 4215, column: 7, scope: !13883)
!13885 = !DILocation(line: 4215, column: 27, scope: !13883)
!13886 = !DILocation(line: 4215, column: 35, scope: !13883)
!13887 = !DILocation(line: 4215, column: 38, scope: !13883)
!13888 = !DILocation(line: 4215, column: 44, scope: !13883)
!13889 = !DILocation(line: 4215, column: 51, scope: !13883)
!13890 = !DILocation(line: 4215, column: 61, scope: !13883)
!13891 = !DILocation(line: 4216, column: 8, scope: !13883)
!13892 = !DILocation(line: 4216, column: 14, scope: !13883)
!13893 = !DILocation(line: 4216, column: 28, scope: !13883)
!13894 = !DILocation(line: 4216, column: 34, scope: !13883)
!13895 = !DILocation(line: 4216, column: 41, scope: !13883)
!13896 = !DILocation(line: 4216, column: 51, scope: !13883)
!13897 = !DILocation(line: 4216, column: 25, scope: !13883)
!13898 = !DILocation(line: 4216, column: 58, scope: !13883)
!13899 = !DILocation(line: 4217, column: 8, scope: !13883)
!13900 = !DILocation(line: 4217, column: 14, scope: !13883)
!13901 = !DILocation(line: 4217, column: 28, scope: !13883)
!13902 = !DILocation(line: 4217, column: 34, scope: !13883)
!13903 = !DILocation(line: 4217, column: 41, scope: !13883)
!13904 = !DILocation(line: 4217, column: 51, scope: !13883)
!13905 = !DILocation(line: 4217, column: 25, scope: !13883)
!13906 = !DILocation(line: 4215, column: 6, scope: !13772)
!13907 = !DILocation(line: 4219, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13883, file: !3, line: 4217, column: 60)
!13909 = !DILocation(line: 4220, column: 12, scope: !13908)
!13910 = !DILocation(line: 4220, column: 18, scope: !13908)
!13911 = !DILocation(line: 4220, column: 24, scope: !13908)
!13912 = !DILocation(line: 4220, column: 31, scope: !13908)
!13913 = !DILocation(line: 4220, column: 41, scope: !13908)
!13914 = !DILocation(line: 4220, column: 3, scope: !13908)
!13915 = !DILocation(line: 4221, column: 2, scope: !13908)
!13916 = !DILocation(line: 4223, column: 12, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13883, file: !3, line: 4221, column: 9)
!13918 = !DILocation(line: 4223, column: 18, scope: !13917)
!13919 = !DILocation(line: 4223, column: 24, scope: !13917)
!13920 = !DILocation(line: 4223, column: 31, scope: !13917)
!13921 = !DILocation(line: 4223, column: 41, scope: !13917)
!13922 = !DILocation(line: 4223, column: 3, scope: !13917)
!13923 = !DILocation(line: 4225, column: 11, scope: !13772)
!13924 = !DILocation(line: 4225, column: 22, scope: !13772)
!13925 = !DILocation(line: 4225, column: 2, scope: !13772)
!13926 = !DILocation(line: 4227, column: 2, scope: !13772)
!13927 = !DILocation(line: 4229, column: 6, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 4229, column: 6)
!13929 = !DILocation(line: 4229, column: 12, scope: !13928)
!13930 = !DILocation(line: 4229, column: 19, scope: !13928)
!13931 = !DILocation(line: 4229, column: 6, scope: !13772)
!13932 = !DILocation(line: 4230, column: 19, scope: !13928)
!13933 = !DILocation(line: 4230, column: 3, scope: !13928)
!13934 = !DILocation(line: 4231, column: 1, scope: !13772)
!13935 = distinct !DISubprogram(name: "set_rate", scope: !3, file: !3, line: 3920, type: !13936, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13936 = !DISubroutineType(types: !13937)
!13937 = !{null, !7530, !987}
!13938 = !DILocalVariable(name: "info", arg: 1, scope: !13935, file: !3, line: 3920, type: !7530)
!13939 = !DILocation(line: 3920, column: 40, scope: !13935)
!13940 = !DILocalVariable(name: "rate", arg: 2, scope: !13935, file: !3, line: 3920, type: !987)
!13941 = !DILocation(line: 3920, column: 50, scope: !13935)
!13942 = !DILocalVariable(name: "div", scope: !13935, file: !3, line: 3922, type: !7)
!13943 = !DILocation(line: 3922, column: 15, scope: !13935)
!13944 = !DILocalVariable(name: "osc", scope: !13935, file: !3, line: 3923, type: !7)
!13945 = !DILocation(line: 3923, column: 15, scope: !13935)
!13946 = !DILocation(line: 3923, column: 21, scope: !13935)
!13947 = !DILocation(line: 3923, column: 27, scope: !13935)
!13948 = !DILocation(line: 3931, column: 6, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13935, file: !3, line: 3931, column: 6)
!13950 = !DILocation(line: 3931, column: 6, scope: !13935)
!13951 = !DILocation(line: 3932, column: 9, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13949, file: !3, line: 3931, column: 12)
!13953 = !DILocation(line: 3932, column: 13, scope: !13952)
!13954 = !DILocation(line: 3932, column: 12, scope: !13952)
!13955 = !DILocation(line: 3932, column: 7, scope: !13952)
!13956 = !DILocation(line: 3933, column: 9, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 3933, column: 7)
!13958 = !DILocation(line: 3933, column: 15, scope: !13957)
!13959 = !DILocation(line: 3933, column: 13, scope: !13957)
!13960 = !DILocation(line: 3933, column: 21, scope: !13957)
!13961 = !DILocation(line: 3933, column: 24, scope: !13957)
!13962 = !DILocation(line: 3933, column: 7, scope: !13952)
!13963 = !DILocation(line: 3934, column: 7, scope: !13957)
!13964 = !DILocation(line: 3934, column: 4, scope: !13957)
!13965 = !DILocation(line: 3935, column: 12, scope: !13952)
!13966 = !DILocation(line: 3935, column: 39, scope: !13952)
!13967 = !DILocation(line: 3935, column: 23, scope: !13952)
!13968 = !DILocation(line: 3935, column: 3, scope: !13952)
!13969 = !DILocation(line: 3936, column: 2, scope: !13952)
!13970 = !DILocation(line: 3937, column: 1, scope: !13935)
!13971 = distinct !DISubprogram(name: "tx_set_idle", scope: !3, file: !3, line: 4458, type: !8337, scopeLine: 4459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!13972 = !DILocalVariable(name: "info", arg: 1, scope: !13971, file: !3, line: 4458, type: !7530)
!13973 = !DILocation(line: 4458, column: 43, scope: !13971)
!13974 = !DILocalVariable(name: "val", scope: !13971, file: !3, line: 4460, type: !482)
!13975 = !DILocation(line: 4460, column: 16, scope: !13971)
!13976 = !DILocalVariable(name: "tcr", scope: !13971, file: !3, line: 4461, type: !476)
!13977 = !DILocation(line: 4461, column: 17, scope: !13971)
!13978 = !DILocation(line: 4466, column: 17, scope: !13971)
!13979 = !DILocation(line: 4466, column: 8, scope: !13971)
!13980 = !DILocation(line: 4466, column: 6, scope: !13971)
!13981 = !DILocation(line: 4467, column: 6, scope: !13982)
!13982 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 4467, column: 6)
!13983 = !DILocation(line: 4467, column: 12, scope: !13982)
!13984 = !DILocation(line: 4467, column: 22, scope: !13982)
!13985 = !DILocation(line: 4467, column: 6, scope: !13971)
!13986 = !DILocation(line: 4469, column: 10, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 4467, column: 47)
!13988 = !DILocation(line: 4469, column: 14, scope: !13987)
!13989 = !DILocation(line: 4469, column: 32, scope: !13987)
!13990 = !DILocation(line: 4469, column: 9, scope: !13987)
!13991 = !DILocation(line: 4469, column: 7, scope: !13987)
!13992 = !DILocation(line: 4471, column: 11, scope: !13987)
!13993 = !DILocation(line: 4471, column: 39, scope: !13987)
!13994 = !DILocation(line: 4471, column: 45, scope: !13987)
!13995 = !DILocation(line: 4471, column: 55, scope: !13987)
!13996 = !DILocation(line: 4471, column: 61, scope: !13987)
!13997 = !DILocation(line: 4471, column: 22, scope: !13987)
!13998 = !DILocation(line: 4471, column: 3, scope: !13987)
!13999 = !DILocation(line: 4472, column: 2, scope: !13987)
!14000 = !DILocation(line: 4472, column: 15, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !13982, file: !3, line: 4472, column: 13)
!14002 = !DILocation(line: 4472, column: 19, scope: !14001)
!14003 = !DILocation(line: 4472, column: 13, scope: !13982)
!14004 = !DILocation(line: 4474, column: 7, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14001, file: !3, line: 4472, column: 28)
!14006 = !DILocation(line: 4475, column: 2, scope: !14005)
!14007 = !DILocation(line: 4476, column: 11, scope: !13971)
!14008 = !DILocation(line: 4476, column: 22, scope: !13971)
!14009 = !DILocation(line: 4476, column: 2, scope: !13971)
!14010 = !DILocation(line: 4478, column: 6, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 4478, column: 6)
!14012 = !DILocation(line: 4478, column: 12, scope: !14011)
!14013 = !DILocation(line: 4478, column: 22, scope: !14011)
!14014 = !DILocation(line: 4478, column: 6, scope: !13971)
!14015 = !DILocation(line: 4480, column: 25, scope: !14016)
!14016 = distinct !DILexicalBlock(scope: !14011, file: !3, line: 4478, column: 72)
!14017 = !DILocation(line: 4480, column: 31, scope: !14016)
!14018 = !DILocation(line: 4480, column: 41, scope: !14016)
!14019 = !DILocation(line: 4480, column: 9, scope: !14016)
!14020 = !DILocation(line: 4480, column: 7, scope: !14016)
!14021 = !DILocation(line: 4481, column: 2, scope: !14016)
!14022 = !DILocation(line: 4483, column: 10, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14011, file: !3, line: 4481, column: 9)
!14024 = !DILocation(line: 4483, column: 16, scope: !14023)
!14025 = !DILocation(line: 4483, column: 3, scope: !14023)
!14026 = !DILocation(line: 4485, column: 40, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14023, file: !3, line: 4484, column: 3)
!14028 = !DILocation(line: 4485, column: 48, scope: !14027)
!14029 = !DILocation(line: 4487, column: 40, scope: !14027)
!14030 = !DILocation(line: 4487, column: 48, scope: !14027)
!14031 = !DILocation(line: 4489, column: 40, scope: !14027)
!14032 = !DILocation(line: 4489, column: 48, scope: !14027)
!14033 = !DILocation(line: 4490, column: 40, scope: !14027)
!14034 = !DILocation(line: 4491, column: 3, scope: !14027)
!14035 = !DILocation(line: 4494, column: 10, scope: !13971)
!14036 = !DILocation(line: 4494, column: 21, scope: !13971)
!14037 = !DILocation(line: 4494, column: 2, scope: !13971)
!14038 = !DILocation(line: 4495, column: 1, scope: !13971)
!14039 = distinct !DISubprogram(name: "msc_set_vcr", scope: !3, file: !3, line: 4520, type: !8337, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14040 = !DILocalVariable(name: "info", arg: 1, scope: !14039, file: !3, line: 4520, type: !7530)
!14041 = !DILocation(line: 4520, column: 43, scope: !14039)
!14042 = !DILocalVariable(name: "val", scope: !14039, file: !3, line: 4522, type: !482)
!14043 = !DILocation(line: 4522, column: 16, scope: !14039)
!14044 = !DILocation(line: 4533, column: 9, scope: !14039)
!14045 = !DILocation(line: 4533, column: 15, scope: !14039)
!14046 = !DILocation(line: 4533, column: 23, scope: !14039)
!14047 = !DILocation(line: 4533, column: 2, scope: !14039)
!14048 = !DILocation(line: 4536, column: 7, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4534, column: 2)
!14050 = !DILocation(line: 4537, column: 3, scope: !14049)
!14051 = !DILocation(line: 4539, column: 7, scope: !14049)
!14052 = !DILocation(line: 4540, column: 3, scope: !14049)
!14053 = !DILocation(line: 4542, column: 7, scope: !14049)
!14054 = !DILocation(line: 4543, column: 3, scope: !14049)
!14055 = !DILocation(line: 4546, column: 6, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4546, column: 6)
!14057 = !DILocation(line: 4546, column: 12, scope: !14056)
!14058 = !DILocation(line: 4546, column: 20, scope: !14056)
!14059 = !DILocation(line: 4546, column: 6, scope: !14039)
!14060 = !DILocation(line: 4547, column: 7, scope: !14056)
!14061 = !DILocation(line: 4547, column: 3, scope: !14056)
!14062 = !DILocation(line: 4548, column: 6, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4548, column: 6)
!14064 = !DILocation(line: 4548, column: 12, scope: !14063)
!14065 = !DILocation(line: 4548, column: 20, scope: !14063)
!14066 = !DILocation(line: 4548, column: 6, scope: !14039)
!14067 = !DILocation(line: 4549, column: 7, scope: !14063)
!14068 = !DILocation(line: 4549, column: 3, scope: !14063)
!14069 = !DILocation(line: 4550, column: 6, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4550, column: 6)
!14071 = !DILocation(line: 4550, column: 12, scope: !14070)
!14072 = !DILocation(line: 4550, column: 20, scope: !14070)
!14073 = !DILocation(line: 4550, column: 6, scope: !14039)
!14074 = !DILocation(line: 4551, column: 7, scope: !14070)
!14075 = !DILocation(line: 4551, column: 3, scope: !14070)
!14076 = !DILocation(line: 4552, column: 6, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4552, column: 6)
!14078 = !DILocation(line: 4552, column: 12, scope: !14077)
!14079 = !DILocation(line: 4552, column: 20, scope: !14077)
!14080 = !DILocation(line: 4552, column: 6, scope: !14039)
!14081 = !DILocation(line: 4553, column: 7, scope: !14077)
!14082 = !DILocation(line: 4553, column: 3, scope: !14077)
!14083 = !DILocation(line: 4554, column: 6, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 4554, column: 6)
!14085 = !DILocation(line: 4554, column: 12, scope: !14084)
!14086 = !DILocation(line: 4554, column: 20, scope: !14084)
!14087 = !DILocation(line: 4554, column: 6, scope: !14039)
!14088 = !DILocation(line: 4555, column: 7, scope: !14084)
!14089 = !DILocation(line: 4555, column: 3, scope: !14084)
!14090 = !DILocation(line: 4556, column: 10, scope: !14039)
!14091 = !DILocation(line: 4556, column: 21, scope: !14039)
!14092 = !DILocation(line: 4556, column: 2, scope: !14039)
!14093 = !DILocation(line: 4557, column: 1, scope: !14039)
!14094 = distinct !DISubprogram(name: "enable_loopback", scope: !3, file: !3, line: 3893, type: !8337, scopeLine: 3894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14095 = !DILocalVariable(name: "info", arg: 1, scope: !14094, file: !3, line: 3893, type: !7530)
!14096 = !DILocation(line: 3893, column: 47, scope: !14094)
!14097 = !DILocation(line: 3896, column: 11, scope: !14094)
!14098 = !DILocation(line: 3896, column: 48, scope: !14094)
!14099 = !DILocation(line: 3896, column: 39, scope: !14094)
!14100 = !DILocation(line: 3896, column: 59, scope: !14094)
!14101 = !DILocation(line: 3896, column: 22, scope: !14094)
!14102 = !DILocation(line: 3896, column: 2, scope: !14094)
!14103 = !DILocation(line: 3898, column: 6, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14094, file: !3, line: 3898, column: 6)
!14105 = !DILocation(line: 3898, column: 12, scope: !14104)
!14106 = !DILocation(line: 3898, column: 19, scope: !14104)
!14107 = !DILocation(line: 3898, column: 24, scope: !14104)
!14108 = !DILocation(line: 3898, column: 6, scope: !14094)
!14109 = !DILocation(line: 3907, column: 11, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14104, file: !3, line: 3898, column: 44)
!14111 = !DILocation(line: 3907, column: 3, scope: !14110)
!14112 = !DILocation(line: 3910, column: 7, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14110, file: !3, line: 3910, column: 7)
!14114 = !DILocation(line: 3910, column: 13, scope: !14113)
!14115 = !DILocation(line: 3910, column: 20, scope: !14113)
!14116 = !DILocation(line: 3910, column: 7, scope: !14110)
!14117 = !DILocation(line: 3911, column: 13, scope: !14113)
!14118 = !DILocation(line: 3911, column: 19, scope: !14113)
!14119 = !DILocation(line: 3911, column: 25, scope: !14113)
!14120 = !DILocation(line: 3911, column: 32, scope: !14113)
!14121 = !DILocation(line: 3911, column: 4, scope: !14113)
!14122 = !DILocation(line: 3913, column: 13, scope: !14113)
!14123 = !DILocation(line: 3913, column: 4, scope: !14113)
!14124 = !DILocation(line: 3914, column: 2, scope: !14110)
!14125 = !DILocation(line: 3915, column: 1, scope: !14094)
!14126 = distinct !DISubprogram(name: "netif_stop_queue", scope: !31, file: !31, line: 3336, type: !406, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14127 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !14128, file: !31, line: 3324, type: !7315)
!14128 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !31, file: !31, line: 3324, type: !13147, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14129 = !DILocation(line: 3324, column: 70, scope: !14128, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 3338, column: 2, scope: !14126)
!14131 = !DILocalVariable(name: "dev", arg: 1, scope: !14126, file: !31, line: 3336, type: !290)
!14132 = !DILocation(line: 3336, column: 56, scope: !14126)
!14133 = !DILocation(line: 3338, column: 42, scope: !14126)
!14134 = !DILocation(line: 3338, column: 22, scope: !14126)
!14135 = !DILocation(line: 3326, column: 35, scope: !14128, inlinedAt: !14130)
!14136 = !DILocation(line: 3326, column: 46, scope: !14128, inlinedAt: !14130)
!14137 = !DILocation(line: 3326, column: 2, scope: !14128, inlinedAt: !14130)
!14138 = !DILocation(line: 3339, column: 1, scope: !14126)
!14139 = distinct !DISubprogram(name: "shutdown", scope: !3, file: !3, line: 2426, type: !8337, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14140 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !14141)
!14141 = distinct !DILocation(line: 2460, column: 2, scope: !14139)
!14142 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !14141)
!14143 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 2446, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14146, file: !3, line: 2446, column: 2)
!14146 = distinct !DILexicalBlock(scope: !14147, file: !3, line: 2446, column: 2)
!14147 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 2446, column: 2)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 2446, column: 2)
!14149 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2446, column: 2)
!14150 = !DILocalVariable(name: "info", arg: 1, scope: !14139, file: !3, line: 2426, type: !7530)
!14151 = !DILocation(line: 2426, column: 40, scope: !14139)
!14152 = !DILocalVariable(name: "flags", scope: !14139, file: !3, line: 2428, type: !312)
!14153 = !DILocation(line: 2428, column: 16, scope: !14139)
!14154 = !DILocation(line: 2430, column: 29, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2430, column: 6)
!14156 = !DILocation(line: 2430, column: 35, scope: !14155)
!14157 = !DILocation(line: 2430, column: 7, scope: !14155)
!14158 = !DILocation(line: 2430, column: 6, scope: !14139)
!14159 = !DILocation(line: 2431, column: 3, scope: !14155)
!14160 = !DILocation(line: 2433, column: 2, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2433, column: 2)
!14162 = !DILocation(line: 2433, column: 2, scope: !14139)
!14163 = !DILocation(line: 2437, column: 2, scope: !14139)
!14164 = !DILocation(line: 2438, column: 2, scope: !14139)
!14165 = !DILocation(line: 2440, column: 2, scope: !14139)
!14166 = !DILocation(line: 2441, column: 2, scope: !14139)
!14167 = !DILocation(line: 2443, column: 8, scope: !14139)
!14168 = !DILocation(line: 2443, column: 14, scope: !14139)
!14169 = !DILocation(line: 2443, column: 2, scope: !14139)
!14170 = !DILocation(line: 2444, column: 2, scope: !14139)
!14171 = !DILocation(line: 2444, column: 8, scope: !14139)
!14172 = !DILocation(line: 2444, column: 15, scope: !14139)
!14173 = !DILocation(line: 2446, column: 2, scope: !14139)
!14174 = !DILocation(line: 2446, column: 2, scope: !14149)
!14175 = !DILocalVariable(name: "__dummy", scope: !14176, file: !3, line: 2446, type: !312)
!14176 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 2446, column: 2)
!14177 = !DILocation(line: 2446, column: 2, scope: !14176)
!14178 = !DILocalVariable(name: "__dummy2", scope: !14176, file: !3, line: 2446, type: !312)
!14179 = !DILocation(line: 2446, column: 2, scope: !14148)
!14180 = !DILocation(line: 2446, column: 2, scope: !14147)
!14181 = !DILocation(line: 2446, column: 2, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14147, file: !3, line: 2446, column: 2)
!14183 = !DILocalVariable(name: "__dummy", scope: !14184, file: !3, line: 2446, type: !312)
!14184 = distinct !DILexicalBlock(scope: !14185, file: !3, line: 2446, column: 2)
!14185 = distinct !DILexicalBlock(scope: !14182, file: !3, line: 2446, column: 2)
!14186 = !DILocation(line: 2446, column: 2, scope: !14184)
!14187 = !DILocalVariable(name: "__dummy2", scope: !14184, file: !3, line: 2446, type: !312)
!14188 = !DILocation(line: 2446, column: 2, scope: !14185)
!14189 = !DILocation(line: 2446, column: 2, scope: !14146)
!14190 = !{i32 -2139535484}
!14191 = !DILocation(line: 2446, column: 2, scope: !14145)
!14192 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !14144)
!14193 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !14144)
!14194 = !DILocation(line: 2448, column: 10, scope: !14139)
!14195 = !DILocation(line: 2448, column: 2, scope: !14139)
!14196 = !DILocation(line: 2449, column: 10, scope: !14139)
!14197 = !DILocation(line: 2449, column: 2, scope: !14139)
!14198 = !DILocation(line: 2451, column: 2, scope: !14139)
!14199 = !DILocation(line: 2453, column: 8, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2453, column: 7)
!14201 = !DILocation(line: 2453, column: 14, scope: !14200)
!14202 = !DILocation(line: 2453, column: 19, scope: !14200)
!14203 = !DILocation(line: 2453, column: 23, scope: !14200)
!14204 = !DILocation(line: 2453, column: 26, scope: !14200)
!14205 = !DILocation(line: 2453, column: 32, scope: !14200)
!14206 = !DILocation(line: 2453, column: 37, scope: !14200)
!14207 = !DILocation(line: 2453, column: 42, scope: !14200)
!14208 = !DILocation(line: 2453, column: 50, scope: !14200)
!14209 = !DILocation(line: 2453, column: 58, scope: !14200)
!14210 = !DILocation(line: 2453, column: 7, scope: !14139)
!14211 = !DILocation(line: 2454, column: 3, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 2453, column: 67)
!14213 = !DILocation(line: 2454, column: 9, scope: !14212)
!14214 = !DILocation(line: 2454, column: 17, scope: !14212)
!14215 = !DILocation(line: 2455, column: 15, scope: !14212)
!14216 = !DILocation(line: 2455, column: 3, scope: !14212)
!14217 = !DILocation(line: 2456, column: 2, scope: !14212)
!14218 = !DILocation(line: 2458, column: 19, scope: !14139)
!14219 = !DILocation(line: 2458, column: 25, scope: !14139)
!14220 = !DILocation(line: 2458, column: 2, scope: !14139)
!14221 = !DILocation(line: 2460, column: 26, scope: !14139)
!14222 = !DILocation(line: 2460, column: 32, scope: !14139)
!14223 = !DILocation(line: 2460, column: 37, scope: !14139)
!14224 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !14141)
!14225 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !14141)
!14226 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !14141)
!14227 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !14141)
!14228 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !14141)
!14229 = !DILocation(line: 2462, column: 6, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2462, column: 6)
!14231 = !DILocation(line: 2462, column: 12, scope: !14230)
!14232 = !DILocation(line: 2462, column: 17, scope: !14230)
!14233 = !DILocation(line: 2462, column: 6, scope: !14139)
!14234 = !DILocation(line: 2463, column: 26, scope: !14230)
!14235 = !DILocation(line: 2463, column: 32, scope: !14230)
!14236 = !DILocation(line: 2463, column: 37, scope: !14230)
!14237 = !DILocation(line: 2463, column: 42, scope: !14230)
!14238 = !DILocation(line: 2463, column: 3, scope: !14230)
!14239 = !DILocation(line: 2465, column: 28, scope: !14139)
!14240 = !DILocation(line: 2465, column: 34, scope: !14139)
!14241 = !DILocation(line: 2465, column: 2, scope: !14139)
!14242 = !DILocation(line: 2466, column: 1, scope: !14139)
!14243 = distinct !DISubprogram(name: "module_put", scope: !12776, file: !12776, line: 756, type: !14244, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{null, !980}
!14246 = !DILocalVariable(name: "module", arg: 1, scope: !14243, file: !12776, line: 756, type: !980)
!14247 = !DILocation(line: 756, column: 46, scope: !14243)
!14248 = !DILocation(line: 758, column: 1, scope: !14243)
!14249 = distinct !DISubprogram(name: "flush_cond_wait", scope: !3, file: !3, line: 3018, type: !14250, scopeLine: 3019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14250 = !DISubroutineType(types: !14251)
!14251 = !{null, !14252}
!14252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7857, size: 64)
!14253 = !DILocalVariable(name: "head", arg: 1, scope: !14249, file: !3, line: 3018, type: !14252)
!14254 = !DILocation(line: 3018, column: 48, scope: !14249)
!14255 = !DILocation(line: 3020, column: 2, scope: !14249)
!14256 = !DILocation(line: 3020, column: 10, scope: !14249)
!14257 = !DILocation(line: 3020, column: 9, scope: !14249)
!14258 = !DILocation(line: 3020, column: 15, scope: !14249)
!14259 = !DILocation(line: 3021, column: 3, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 3020, column: 24)
!14261 = !DILocation(line: 3022, column: 13, scope: !14260)
!14262 = !DILocation(line: 3022, column: 12, scope: !14260)
!14263 = !DILocation(line: 3022, column: 20, scope: !14260)
!14264 = !DILocation(line: 3022, column: 4, scope: !14260)
!14265 = !DILocation(line: 3022, column: 9, scope: !14260)
!14266 = distinct !{!14266, !14255, !14267}
!14267 = !DILocation(line: 3023, column: 2, scope: !14249)
!14268 = !DILocation(line: 3024, column: 1, scope: !14249)
!14269 = distinct !DISubprogram(name: "copy_overflow", scope: !12404, file: !12404, line: 132, type: !14270, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14270 = !DISubroutineType(types: !14271)
!14271 = !{null, !32, !312}
!14272 = !DILocalVariable(name: "size", arg: 1, scope: !14269, file: !12404, line: 132, type: !32)
!14273 = !DILocation(line: 132, column: 38, scope: !14269)
!14274 = !DILocalVariable(name: "count", arg: 2, scope: !14269, file: !12404, line: 132, type: !312)
!14275 = !DILocation(line: 132, column: 58, scope: !14269)
!14276 = !DILocalVariable(name: "__ret_warn_on", scope: !14277, file: !12404, line: 134, type: !32)
!14277 = distinct !DILexicalBlock(scope: !14269, file: !12404, line: 134, column: 2)
!14278 = !DILocation(line: 134, column: 2, scope: !14277)
!14279 = !DILocation(line: 134, column: 2, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14277, file: !12404, line: 134, column: 2)
!14281 = !DILocation(line: 134, column: 2, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14280, file: !12404, line: 134, column: 2)
!14283 = !DILocation(line: 134, column: 2, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !14282, file: !12404, line: 134, column: 2)
!14285 = !DILocation(line: 134, column: 2, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14282, file: !12404, line: 134, column: 2)
!14287 = !DILocation(line: 134, column: 2, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14286, file: !12404, line: 134, column: 2)
!14289 = !DILocation(line: 134, column: 2, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14286, file: !12404, line: 134, column: 2)
!14291 = !{i32 -2145427770, i32 -2145427741, i32 -2145427695, i32 -2145427637, i32 -2145427583, i32 -2145427529, i32 -2145427474, i32 -2145427443}
!14292 = !DILocation(line: 134, column: 2, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14286, file: !12404, line: 134, column: 2)
!14294 = !{i32 -2145427023, i32 -2145427016, i32 -2145426964, i32 -2145426933, i32 -2145426903}
!14295 = !DILocation(line: 134, column: 2, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14286, file: !12404, line: 134, column: 2)
!14297 = !DILocation(line: 134, column: 2, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14282, file: !12404, line: 134, column: 2)
!14299 = !DILocation(line: 135, column: 1, scope: !14269)
!14300 = distinct !DISubprogram(name: "check_object_size", scope: !12404, file: !12404, line: 122, type: !14301, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14301 = !DISubroutineType(types: !14302)
!14302 = !{null, !3276, !312, !771}
!14303 = !DILocalVariable(name: "ptr", arg: 1, scope: !14300, file: !12404, line: 122, type: !3276)
!14304 = !DILocation(line: 122, column: 50, scope: !14300)
!14305 = !DILocalVariable(name: "n", arg: 2, scope: !14300, file: !12404, line: 122, type: !312)
!14306 = !DILocation(line: 122, column: 69, scope: !14300)
!14307 = !DILocalVariable(name: "to_user", arg: 3, scope: !14300, file: !12404, line: 123, type: !771)
!14308 = !DILocation(line: 123, column: 15, scope: !14300)
!14309 = !DILocation(line: 124, column: 3, scope: !14300)
!14310 = distinct !DISubprogram(name: "tx_load", scope: !3, file: !3, line: 4861, type: !14311, scopeLine: 4862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!771, !7530, !292, !7}
!14313 = !DILocalVariable(name: "info", arg: 1, scope: !14310, file: !3, line: 4861, type: !7530)
!14314 = !DILocation(line: 4861, column: 39, scope: !14310)
!14315 = !DILocalVariable(name: "buf", arg: 2, scope: !14310, file: !3, line: 4861, type: !292)
!14316 = !DILocation(line: 4861, column: 57, scope: !14310)
!14317 = !DILocalVariable(name: "size", arg: 3, scope: !14310, file: !3, line: 4861, type: !7)
!14318 = !DILocation(line: 4861, column: 75, scope: !14310)
!14319 = !DILocalVariable(name: "count", scope: !14310, file: !3, line: 4863, type: !476)
!14320 = !DILocation(line: 4863, column: 17, scope: !14310)
!14321 = !DILocalVariable(name: "i", scope: !14310, file: !3, line: 4864, type: !7)
!14322 = !DILocation(line: 4864, column: 15, scope: !14310)
!14323 = !DILocalVariable(name: "d", scope: !14310, file: !3, line: 4865, type: !7944)
!14324 = !DILocation(line: 4865, column: 20, scope: !14310)
!14325 = !DILocation(line: 4868, column: 6, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14310, file: !3, line: 4868, column: 6)
!14327 = !DILocation(line: 4868, column: 55, scope: !14326)
!14328 = !DILocation(line: 4868, column: 39, scope: !14326)
!14329 = !DILocation(line: 4868, column: 37, scope: !14326)
!14330 = !DILocation(line: 4868, column: 6, scope: !14310)
!14331 = !DILocation(line: 4869, column: 3, scope: !14326)
!14332 = !DILocation(line: 4871, column: 2, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14310, file: !3, line: 4871, column: 2)
!14334 = !DILocation(line: 4871, column: 2, scope: !14310)
!14335 = !DILocation(line: 4884, column: 25, scope: !14310)
!14336 = !DILocation(line: 4884, column: 31, scope: !14310)
!14337 = !DILocation(line: 4884, column: 23, scope: !14310)
!14338 = !DILocation(line: 4884, column: 2, scope: !14310)
!14339 = !DILocation(line: 4884, column: 8, scope: !14310)
!14340 = !DILocation(line: 4884, column: 19, scope: !14310)
!14341 = !DILocation(line: 4886, column: 2, scope: !14310)
!14342 = !DILocation(line: 4886, column: 9, scope: !14310)
!14343 = !DILocation(line: 4887, column: 8, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14310, file: !3, line: 4886, column: 15)
!14345 = !DILocation(line: 4887, column: 14, scope: !14344)
!14346 = !DILocation(line: 4887, column: 20, scope: !14344)
!14347 = !DILocation(line: 4887, column: 5, scope: !14344)
!14348 = !DILocation(line: 4889, column: 29, scope: !14344)
!14349 = !DILocation(line: 4889, column: 34, scope: !14344)
!14350 = !DILocation(line: 4889, column: 28, scope: !14344)
!14351 = !DILocation(line: 4889, column: 63, scope: !14344)
!14352 = !DILocation(line: 4889, column: 11, scope: !14344)
!14353 = !DILocation(line: 4889, column: 9, scope: !14344)
!14354 = !DILocation(line: 4890, column: 10, scope: !14344)
!14355 = !DILocation(line: 4890, column: 13, scope: !14344)
!14356 = !DILocation(line: 4890, column: 18, scope: !14344)
!14357 = !DILocation(line: 4890, column: 23, scope: !14344)
!14358 = !DILocation(line: 4890, column: 3, scope: !14344)
!14359 = !DILocation(line: 4892, column: 11, scope: !14344)
!14360 = !DILocation(line: 4892, column: 8, scope: !14344)
!14361 = !DILocation(line: 4893, column: 11, scope: !14344)
!14362 = !DILocation(line: 4893, column: 8, scope: !14344)
!14363 = !DILocation(line: 4899, column: 9, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 4899, column: 7)
!14365 = !DILocation(line: 4899, column: 14, scope: !14364)
!14366 = !DILocation(line: 4899, column: 17, scope: !14364)
!14367 = !DILocation(line: 4899, column: 23, scope: !14364)
!14368 = !DILocation(line: 4899, column: 30, scope: !14364)
!14369 = !DILocation(line: 4899, column: 35, scope: !14364)
!14370 = !DILocation(line: 4899, column: 54, scope: !14364)
!14371 = !DILocation(line: 4900, column: 7, scope: !14364)
!14372 = !DILocation(line: 4900, column: 13, scope: !14364)
!14373 = !DILocation(line: 4900, column: 20, scope: !14364)
!14374 = !DILocation(line: 4900, column: 25, scope: !14364)
!14375 = !DILocation(line: 4899, column: 7, scope: !14344)
!14376 = !DILocation(line: 4901, column: 4, scope: !14364)
!14377 = !DILocation(line: 4903, column: 4, scope: !14364)
!14378 = !DILocation(line: 4906, column: 7, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 4906, column: 7)
!14380 = !DILocation(line: 4906, column: 12, scope: !14379)
!14381 = !DILocation(line: 4906, column: 18, scope: !14379)
!14382 = !DILocation(line: 4906, column: 9, scope: !14379)
!14383 = !DILocation(line: 4906, column: 7, scope: !14344)
!14384 = !DILocation(line: 4907, column: 4, scope: !14379)
!14385 = !DILocation(line: 4908, column: 18, scope: !14344)
!14386 = !DILocation(line: 4908, column: 3, scope: !14344)
!14387 = !DILocation(line: 4908, column: 6, scope: !14344)
!14388 = !DILocation(line: 4908, column: 16, scope: !14344)
!14389 = !DILocation(line: 4910, column: 7, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14344, file: !3, line: 4910, column: 7)
!14391 = !DILocation(line: 4910, column: 14, scope: !14390)
!14392 = !DILocation(line: 4910, column: 20, scope: !14390)
!14393 = !DILocation(line: 4910, column: 11, scope: !14390)
!14394 = !DILocation(line: 4910, column: 7, scope: !14344)
!14395 = !DILocation(line: 4911, column: 6, scope: !14390)
!14396 = !DILocation(line: 4911, column: 4, scope: !14390)
!14397 = distinct !{!14397, !14341, !14398}
!14398 = !DILocation(line: 4912, column: 2, scope: !14310)
!14399 = !DILocation(line: 4914, column: 23, scope: !14310)
!14400 = !DILocation(line: 4914, column: 2, scope: !14310)
!14401 = !DILocation(line: 4914, column: 8, scope: !14310)
!14402 = !DILocation(line: 4914, column: 21, scope: !14310)
!14403 = !DILocation(line: 4917, column: 7, scope: !14310)
!14404 = !DILocation(line: 4917, column: 13, scope: !14310)
!14405 = !DILocation(line: 4917, column: 19, scope: !14310)
!14406 = !DILocation(line: 4917, column: 25, scope: !14310)
!14407 = !DILocation(line: 4917, column: 4, scope: !14310)
!14408 = !DILocation(line: 4918, column: 2, scope: !14310)
!14409 = !DILocation(line: 4921, column: 7, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14310, file: !3, line: 4921, column: 6)
!14411 = !DILocation(line: 4921, column: 13, scope: !14410)
!14412 = !DILocation(line: 4921, column: 6, scope: !14310)
!14413 = !DILocation(line: 4922, column: 12, scope: !14410)
!14414 = !DILocation(line: 4922, column: 3, scope: !14410)
!14415 = !DILocation(line: 4923, column: 18, scope: !14310)
!14416 = !DILocation(line: 4923, column: 2, scope: !14310)
!14417 = !DILocation(line: 4925, column: 2, scope: !14310)
!14418 = !DILocation(line: 4926, column: 1, scope: !14310)
!14419 = distinct !DISubprogram(name: "consume_skb", scope: !417, file: !417, line: 1063, type: !469, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14420 = !DILocalVariable(name: "skb", arg: 1, scope: !14419, file: !417, line: 1063, type: !415)
!14421 = !DILocation(line: 1063, column: 48, scope: !14419)
!14422 = !DILocation(line: 1065, column: 19, scope: !14419)
!14423 = !DILocation(line: 1065, column: 9, scope: !14419)
!14424 = !DILocation(line: 1065, column: 2, scope: !14419)
!14425 = distinct !DISubprogram(name: "free_tbuf_count", scope: !3, file: !3, line: 4786, type: !14426, scopeLine: 4787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14426 = !DISubroutineType(types: !14427)
!14427 = !{!7, !7530}
!14428 = !DILocalVariable(name: "info", arg: 1, scope: !14425, file: !3, line: 4786, type: !7530)
!14429 = !DILocation(line: 4786, column: 55, scope: !14425)
!14430 = !DILocalVariable(name: "count", scope: !14425, file: !3, line: 4788, type: !7)
!14431 = !DILocation(line: 4788, column: 15, scope: !14425)
!14432 = !DILocalVariable(name: "i", scope: !14425, file: !3, line: 4789, type: !7)
!14433 = !DILocation(line: 4789, column: 15, scope: !14425)
!14434 = !DILocation(line: 4789, column: 19, scope: !14425)
!14435 = !DILocation(line: 4789, column: 25, scope: !14425)
!14436 = !DILocation(line: 4791, column: 2, scope: !14425)
!14437 = !DILocation(line: 4793, column: 7, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 4793, column: 7)
!14439 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 4792, column: 2)
!14440 = !DILocation(line: 4793, column: 7, scope: !14439)
!14441 = !DILocation(line: 4794, column: 4, scope: !14438)
!14442 = !DILocation(line: 4795, column: 3, scope: !14439)
!14443 = !DILocation(line: 4796, column: 7, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 4796, column: 7)
!14445 = !DILocation(line: 4796, column: 14, scope: !14444)
!14446 = !DILocation(line: 4796, column: 20, scope: !14444)
!14447 = !DILocation(line: 4796, column: 11, scope: !14444)
!14448 = !DILocation(line: 4796, column: 7, scope: !14439)
!14449 = !DILocation(line: 4797, column: 5, scope: !14444)
!14450 = !DILocation(line: 4797, column: 4, scope: !14444)
!14451 = !DILocation(line: 4798, column: 2, scope: !14439)
!14452 = !DILocation(line: 4798, column: 11, scope: !14425)
!14453 = !DILocation(line: 4798, column: 16, scope: !14425)
!14454 = !DILocation(line: 4798, column: 22, scope: !14425)
!14455 = !DILocation(line: 4798, column: 13, scope: !14425)
!14456 = distinct !{!14456, !14436, !14457}
!14457 = !DILocation(line: 4798, column: 34, scope: !14425)
!14458 = !DILocation(line: 4801, column: 6, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 4801, column: 6)
!14460 = !DILocation(line: 4801, column: 12, scope: !14459)
!14461 = !DILocation(line: 4801, column: 25, scope: !14459)
!14462 = !DILocation(line: 4801, column: 16, scope: !14459)
!14463 = !DILocation(line: 4801, column: 38, scope: !14459)
!14464 = !DILocation(line: 4801, column: 6, scope: !14425)
!14465 = !DILocation(line: 4802, column: 3, scope: !14459)
!14466 = !DILocation(line: 4804, column: 9, scope: !14425)
!14467 = !DILocation(line: 4804, column: 2, scope: !14425)
!14468 = distinct !DISubprogram(name: "tx_start", scope: !3, file: !3, line: 4008, type: !8337, scopeLine: 4009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14469 = !DILocalVariable(name: "info", arg: 1, scope: !14468, file: !3, line: 4008, type: !7530)
!14470 = !DILocation(line: 4008, column: 40, scope: !14468)
!14471 = !DILocation(line: 4010, column: 7, scope: !14472)
!14472 = distinct !DILexicalBlock(scope: !14468, file: !3, line: 4010, column: 6)
!14473 = !DILocation(line: 4010, column: 13, scope: !14472)
!14474 = !DILocation(line: 4010, column: 6, scope: !14468)
!14475 = !DILocation(line: 4011, column: 12, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14472, file: !3, line: 4010, column: 25)
!14477 = !DILocation(line: 4012, column: 32, scope: !14476)
!14478 = !DILocation(line: 4012, column: 23, scope: !14476)
!14479 = !DILocation(line: 4012, column: 43, scope: !14476)
!14480 = !DILocation(line: 4012, column: 51, scope: !14476)
!14481 = !DILocation(line: 4012, column: 5, scope: !14476)
!14482 = !DILocation(line: 4011, column: 3, scope: !14476)
!14483 = !DILocation(line: 4013, column: 3, scope: !14476)
!14484 = !DILocation(line: 4013, column: 9, scope: !14476)
!14485 = !DILocation(line: 4013, column: 20, scope: !14476)
!14486 = !DILocation(line: 4014, column: 2, scope: !14476)
!14487 = !DILocation(line: 4016, column: 6, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !14468, file: !3, line: 4016, column: 6)
!14489 = !DILocation(line: 4016, column: 6, scope: !14468)
!14490 = !DILocation(line: 4017, column: 3, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14488, file: !3, line: 4016, column: 49)
!14492 = !DILocation(line: 4017, column: 9, scope: !14491)
!14493 = !DILocation(line: 4017, column: 29, scope: !14491)
!14494 = !DILocation(line: 4019, column: 7, scope: !14495)
!14495 = distinct !DILexicalBlock(scope: !14491, file: !3, line: 4019, column: 7)
!14496 = !DILocation(line: 4019, column: 13, scope: !14495)
!14497 = !DILocation(line: 4019, column: 20, scope: !14495)
!14498 = !DILocation(line: 4019, column: 25, scope: !14495)
!14499 = !DILocation(line: 4019, column: 7, scope: !14491)
!14500 = !DILocation(line: 4020, column: 8, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 4020, column: 8)
!14502 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 4019, column: 45)
!14503 = !DILocation(line: 4020, column: 14, scope: !14501)
!14504 = !DILocation(line: 4020, column: 21, scope: !14501)
!14505 = !DILocation(line: 4020, column: 27, scope: !14501)
!14506 = !DILocation(line: 4020, column: 8, scope: !14502)
!14507 = !DILocation(line: 4021, column: 17, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14501, file: !3, line: 4020, column: 49)
!14509 = !DILocation(line: 4021, column: 5, scope: !14508)
!14510 = !DILocation(line: 4022, column: 11, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 4022, column: 9)
!14512 = !DILocation(line: 4022, column: 17, scope: !14511)
!14513 = !DILocation(line: 4022, column: 25, scope: !14511)
!14514 = !DILocation(line: 4022, column: 9, scope: !14508)
!14515 = !DILocation(line: 4023, column: 6, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14511, file: !3, line: 4022, column: 46)
!14517 = !DILocation(line: 4023, column: 12, scope: !14516)
!14518 = !DILocation(line: 4023, column: 20, scope: !14516)
!14519 = !DILocation(line: 4024, column: 18, scope: !14516)
!14520 = !DILocation(line: 4024, column: 6, scope: !14516)
!14521 = !DILocation(line: 4025, column: 6, scope: !14516)
!14522 = !DILocation(line: 4025, column: 12, scope: !14516)
!14523 = !DILocation(line: 4025, column: 32, scope: !14516)
!14524 = !DILocation(line: 4026, column: 5, scope: !14516)
!14525 = !DILocation(line: 4027, column: 4, scope: !14508)
!14526 = !DILocation(line: 4029, column: 4, scope: !14502)
!14527 = !DILocation(line: 4030, column: 4, scope: !14502)
!14528 = !DILocation(line: 4032, column: 13, scope: !14502)
!14529 = !DILocation(line: 4032, column: 4, scope: !14502)
!14530 = !DILocation(line: 4033, column: 3, scope: !14502)
!14531 = !DILocation(line: 4034, column: 4, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 4033, column: 10)
!14533 = !DILocation(line: 4035, column: 4, scope: !14532)
!14534 = !DILocation(line: 4037, column: 13, scope: !14532)
!14535 = !DILocation(line: 4037, column: 4, scope: !14532)
!14536 = !DILocation(line: 4040, column: 12, scope: !14491)
!14537 = !DILocation(line: 4040, column: 25, scope: !14491)
!14538 = !DILocation(line: 4040, column: 31, scope: !14491)
!14539 = !DILocation(line: 4040, column: 37, scope: !14491)
!14540 = !DILocation(line: 4040, column: 43, scope: !14491)
!14541 = !DILocation(line: 4040, column: 55, scope: !14491)
!14542 = !DILocation(line: 4040, column: 3, scope: !14491)
!14543 = !DILocation(line: 4041, column: 12, scope: !14491)
!14544 = !DILocation(line: 4041, column: 3, scope: !14491)
!14545 = !DILocation(line: 4042, column: 3, scope: !14491)
!14546 = !DILocation(line: 4042, column: 9, scope: !14491)
!14547 = !DILocation(line: 4042, column: 19, scope: !14491)
!14548 = !DILocation(line: 4043, column: 2, scope: !14491)
!14549 = !DILocation(line: 4044, column: 1, scope: !14468)
!14550 = distinct !DISubprogram(name: "update_tx_timer", scope: !3, file: !3, line: 800, type: !8337, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14551 = !DILocalVariable(name: "m", arg: 1, scope: !14552, file: !14553, line: 363, type: !6117)
!14552 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !14553, file: !14553, line: 363, type: !14554, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14553 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!14554 = !DISubroutineType(types: !14555)
!14555 = !{!312, !6117}
!14556 = !DILocation(line: 363, column: 74, scope: !14552, inlinedAt: !14557)
!14557 = distinct !DILocation(line: 808, column: 40, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !3, line: 806, column: 43)
!14559 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 806, column: 6)
!14560 = !DILocalVariable(name: "info", arg: 1, scope: !14550, file: !3, line: 800, type: !7530)
!14561 = !DILocation(line: 800, column: 47, scope: !14550)
!14562 = !DILocation(line: 806, column: 6, scope: !14559)
!14563 = !DILocation(line: 806, column: 12, scope: !14559)
!14564 = !DILocation(line: 806, column: 19, scope: !14559)
!14565 = !DILocation(line: 806, column: 24, scope: !14559)
!14566 = !DILocation(line: 806, column: 6, scope: !14550)
!14567 = !DILocalVariable(name: "timeout", scope: !14558, file: !3, line: 807, type: !32)
!14568 = !DILocation(line: 807, column: 7, scope: !14558)
!14569 = !DILocation(line: 807, column: 30, scope: !14558)
!14570 = !DILocation(line: 807, column: 19, scope: !14558)
!14571 = !DILocation(line: 807, column: 36, scope: !14558)
!14572 = !DILocation(line: 807, column: 41, scope: !14558)
!14573 = !DILocation(line: 808, column: 14, scope: !14558)
!14574 = !DILocation(line: 808, column: 20, scope: !14558)
!14575 = !DILocation(line: 808, column: 30, scope: !14558)
!14576 = !DILocation(line: 808, column: 57, scope: !14558)
!14577 = !DILocation(line: 365, column: 27, scope: !14578, inlinedAt: !14557)
!14578 = distinct !DILexicalBlock(scope: !14552, file: !14553, line: 365, column: 6)
!14579 = !DILocation(line: 365, column: 6, scope: !14578, inlinedAt: !14557)
!14580 = !DILocation(line: 365, column: 6, scope: !14552, inlinedAt: !14557)
!14581 = !DILocation(line: 366, column: 12, scope: !14582, inlinedAt: !14557)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !14553, line: 366, column: 7)
!14583 = distinct !DILexicalBlock(scope: !14578, file: !14553, line: 365, column: 31)
!14584 = !DILocation(line: 366, column: 14, scope: !14582, inlinedAt: !14557)
!14585 = !DILocation(line: 366, column: 7, scope: !14583, inlinedAt: !14557)
!14586 = !DILocation(line: 367, column: 4, scope: !14582, inlinedAt: !14557)
!14587 = !DILocation(line: 368, column: 28, scope: !14583, inlinedAt: !14557)
!14588 = !DILocation(line: 368, column: 10, scope: !14583, inlinedAt: !14557)
!14589 = !DILocation(line: 368, column: 3, scope: !14583, inlinedAt: !14557)
!14590 = !DILocation(line: 370, column: 29, scope: !14591, inlinedAt: !14557)
!14591 = distinct !DILexicalBlock(scope: !14578, file: !14553, line: 369, column: 9)
!14592 = !DILocation(line: 370, column: 10, scope: !14591, inlinedAt: !14557)
!14593 = !DILocation(line: 370, column: 3, scope: !14591, inlinedAt: !14557)
!14594 = !DILocation(line: 372, column: 1, scope: !14552, inlinedAt: !14557)
!14595 = !DILocation(line: 808, column: 38, scope: !14558)
!14596 = !DILocation(line: 808, column: 3, scope: !14558)
!14597 = !DILocation(line: 809, column: 2, scope: !14558)
!14598 = !DILocation(line: 810, column: 1, scope: !14550)
!14599 = distinct !DISubprogram(name: "tbuf_bytes", scope: !3, file: !3, line: 4811, type: !14426, scopeLine: 4812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14600 = !DILocalVariable(name: "info", arg: 1, scope: !14599, file: !3, line: 4811, type: !7530)
!14601 = !DILocation(line: 4811, column: 50, scope: !14599)
!14602 = !DILocalVariable(name: "total_count", scope: !14599, file: !3, line: 4813, type: !7)
!14603 = !DILocation(line: 4813, column: 15, scope: !14599)
!14604 = !DILocalVariable(name: "i", scope: !14599, file: !3, line: 4814, type: !7)
!14605 = !DILocation(line: 4814, column: 15, scope: !14599)
!14606 = !DILocation(line: 4814, column: 19, scope: !14599)
!14607 = !DILocation(line: 4814, column: 25, scope: !14599)
!14608 = !DILocalVariable(name: "reg_value", scope: !14599, file: !3, line: 4815, type: !7)
!14609 = !DILocation(line: 4815, column: 15, scope: !14599)
!14610 = !DILocalVariable(name: "count", scope: !14599, file: !3, line: 4816, type: !7)
!14611 = !DILocation(line: 4816, column: 15, scope: !14599)
!14612 = !DILocalVariable(name: "active_buf_count", scope: !14599, file: !3, line: 4817, type: !7)
!14613 = !DILocation(line: 4817, column: 15, scope: !14599)
!14614 = !DILocation(line: 4830, column: 2, scope: !14599)
!14615 = !DILocation(line: 4831, column: 11, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4830, column: 5)
!14617 = !DILocation(line: 4831, column: 9, scope: !14616)
!14618 = !DILocation(line: 4832, column: 7, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 4832, column: 7)
!14620 = !DILocation(line: 4832, column: 7, scope: !14616)
!14621 = !DILocation(line: 4833, column: 19, scope: !14619)
!14622 = !DILocation(line: 4833, column: 16, scope: !14619)
!14623 = !DILocation(line: 4833, column: 4, scope: !14619)
!14624 = !DILocation(line: 4834, column: 13, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 4834, column: 12)
!14626 = !DILocation(line: 4834, column: 12, scope: !14619)
!14627 = !DILocation(line: 4835, column: 23, scope: !14625)
!14628 = !DILocation(line: 4835, column: 29, scope: !14625)
!14629 = !DILocation(line: 4835, column: 35, scope: !14625)
!14630 = !DILocation(line: 4835, column: 38, scope: !14625)
!14631 = !DILocation(line: 4835, column: 21, scope: !14625)
!14632 = !DILocation(line: 4835, column: 4, scope: !14625)
!14633 = !DILocation(line: 4836, column: 7, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 4836, column: 7)
!14635 = !DILocation(line: 4836, column: 14, scope: !14634)
!14636 = !DILocation(line: 4836, column: 20, scope: !14634)
!14637 = !DILocation(line: 4836, column: 11, scope: !14634)
!14638 = !DILocation(line: 4836, column: 7, scope: !14616)
!14639 = !DILocation(line: 4837, column: 6, scope: !14634)
!14640 = !DILocation(line: 4837, column: 4, scope: !14634)
!14641 = !DILocation(line: 4838, column: 2, scope: !14616)
!14642 = !DILocation(line: 4838, column: 11, scope: !14599)
!14643 = !DILocation(line: 4838, column: 16, scope: !14599)
!14644 = !DILocation(line: 4838, column: 22, scope: !14599)
!14645 = !DILocation(line: 4838, column: 13, scope: !14599)
!14646 = distinct !{!14646, !14614, !14647}
!14647 = !DILocation(line: 4838, column: 34, scope: !14599)
!14648 = !DILocation(line: 4841, column: 23, scope: !14599)
!14649 = !DILocation(line: 4841, column: 14, scope: !14599)
!14650 = !DILocation(line: 4841, column: 12, scope: !14599)
!14651 = !DILocation(line: 4844, column: 6, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4844, column: 6)
!14653 = !DILocation(line: 4844, column: 16, scope: !14652)
!14654 = !DILocation(line: 4844, column: 6, scope: !14599)
!14655 = !DILocation(line: 4845, column: 18, scope: !14652)
!14656 = !DILocation(line: 4845, column: 15, scope: !14652)
!14657 = !DILocation(line: 4845, column: 3, scope: !14652)
!14658 = !DILocation(line: 4848, column: 18, scope: !14599)
!14659 = !DILocation(line: 4848, column: 28, scope: !14599)
!14660 = !DILocation(line: 4848, column: 34, scope: !14599)
!14661 = !DILocation(line: 4848, column: 14, scope: !14599)
!14662 = !DILocation(line: 4851, column: 6, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14599, file: !3, line: 4851, column: 6)
!14664 = !DILocation(line: 4851, column: 12, scope: !14663)
!14665 = !DILocation(line: 4851, column: 6, scope: !14599)
!14666 = !DILocation(line: 4852, column: 14, scope: !14663)
!14667 = !DILocation(line: 4852, column: 3, scope: !14663)
!14668 = !DILocation(line: 4854, column: 9, scope: !14599)
!14669 = !DILocation(line: 4854, column: 2, scope: !14599)
!14670 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !14553, file: !14553, line: 308, type: !14554, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14671 = !DILocalVariable(name: "m", arg: 1, scope: !14670, file: !14553, line: 308, type: !6117)
!14672 = !DILocation(line: 308, column: 66, scope: !14670)
!14673 = !DILocation(line: 310, column: 10, scope: !14670)
!14674 = !DILocation(line: 310, column: 12, scope: !14670)
!14675 = !DILocation(line: 310, column: 34, scope: !14670)
!14676 = !DILocation(line: 310, column: 39, scope: !14670)
!14677 = !DILocation(line: 310, column: 2, scope: !14670)
!14678 = distinct !DISubprogram(name: "alloc_desc", scope: !3, file: !3, line: 3335, type: !8119, scopeLine: 3336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14679 = !DILocalVariable(name: "info", arg: 1, scope: !14678, file: !3, line: 3335, type: !7530)
!14680 = !DILocation(line: 3335, column: 41, scope: !14678)
!14681 = !DILocalVariable(name: "i", scope: !14678, file: !3, line: 3337, type: !7)
!14682 = !DILocation(line: 3337, column: 15, scope: !14678)
!14683 = !DILocalVariable(name: "pbufs", scope: !14678, file: !3, line: 3338, type: !7)
!14684 = !DILocation(line: 3338, column: 15, scope: !14678)
!14685 = !DILocation(line: 3341, column: 35, scope: !14678)
!14686 = !DILocation(line: 3341, column: 41, scope: !14678)
!14687 = !DILocation(line: 3341, column: 47, scope: !14678)
!14688 = !DILocation(line: 3342, column: 7, scope: !14678)
!14689 = !DILocation(line: 3342, column: 13, scope: !14678)
!14690 = !DILocation(line: 3341, column: 15, scope: !14678)
!14691 = !DILocation(line: 3341, column: 2, scope: !14678)
!14692 = !DILocation(line: 3341, column: 8, scope: !14678)
!14693 = !DILocation(line: 3341, column: 13, scope: !14678)
!14694 = !DILocation(line: 3343, column: 6, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 3343, column: 6)
!14696 = !DILocation(line: 3343, column: 12, scope: !14695)
!14697 = !DILocation(line: 3343, column: 17, scope: !14695)
!14698 = !DILocation(line: 3343, column: 6, scope: !14678)
!14699 = !DILocation(line: 3344, column: 3, scope: !14695)
!14700 = !DILocation(line: 3346, column: 35, scope: !14678)
!14701 = !DILocation(line: 3346, column: 41, scope: !14678)
!14702 = !DILocation(line: 3346, column: 16, scope: !14678)
!14703 = !DILocation(line: 3346, column: 2, scope: !14678)
!14704 = !DILocation(line: 3346, column: 8, scope: !14678)
!14705 = !DILocation(line: 3346, column: 14, scope: !14678)
!14706 = !DILocation(line: 3347, column: 36, scope: !14678)
!14707 = !DILocation(line: 3347, column: 42, scope: !14678)
!14708 = !DILocation(line: 3347, column: 17, scope: !14678)
!14709 = !DILocation(line: 3347, column: 50, scope: !14678)
!14710 = !DILocation(line: 3347, column: 56, scope: !14678)
!14711 = !DILocation(line: 3347, column: 48, scope: !14678)
!14712 = !DILocation(line: 3347, column: 2, scope: !14678)
!14713 = !DILocation(line: 3347, column: 8, scope: !14678)
!14714 = !DILocation(line: 3347, column: 14, scope: !14678)
!14715 = !DILocation(line: 3349, column: 24, scope: !14678)
!14716 = !DILocation(line: 3349, column: 30, scope: !14678)
!14717 = !DILocation(line: 3349, column: 10, scope: !14678)
!14718 = !DILocation(line: 3349, column: 8, scope: !14678)
!14719 = !DILocation(line: 3355, column: 8, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 3355, column: 2)
!14721 = !DILocation(line: 3355, column: 7, scope: !14720)
!14722 = !DILocation(line: 3355, column: 12, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14720, file: !3, line: 3355, column: 2)
!14724 = !DILocation(line: 3355, column: 16, scope: !14723)
!14725 = !DILocation(line: 3355, column: 22, scope: !14723)
!14726 = !DILocation(line: 3355, column: 14, scope: !14723)
!14727 = !DILocation(line: 3355, column: 2, scope: !14720)
!14728 = !DILocation(line: 3357, column: 26, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 3355, column: 39)
!14730 = !DILocation(line: 3357, column: 35, scope: !14729)
!14731 = !DILocation(line: 3357, column: 37, scope: !14729)
!14732 = !DILocation(line: 3357, column: 32, scope: !14729)
!14733 = !DILocation(line: 3357, column: 3, scope: !14729)
!14734 = !DILocation(line: 3357, column: 9, scope: !14729)
!14735 = !DILocation(line: 3357, column: 15, scope: !14729)
!14736 = !DILocation(line: 3357, column: 18, scope: !14729)
!14737 = !DILocation(line: 3357, column: 24, scope: !14729)
!14738 = !DILocation(line: 3360, column: 7, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14729, file: !3, line: 3360, column: 7)
!14740 = !DILocation(line: 3360, column: 12, scope: !14739)
!14741 = !DILocation(line: 3360, column: 18, scope: !14739)
!14742 = !DILocation(line: 3360, column: 29, scope: !14739)
!14743 = !DILocation(line: 3360, column: 9, scope: !14739)
!14744 = !DILocation(line: 3360, column: 7, scope: !14729)
!14745 = !DILocation(line: 3361, column: 26, scope: !14739)
!14746 = !DILocation(line: 3361, column: 4, scope: !14739)
!14747 = !DILocation(line: 3361, column: 10, scope: !14739)
!14748 = !DILocation(line: 3361, column: 16, scope: !14739)
!14749 = !DILocation(line: 3361, column: 19, scope: !14739)
!14750 = !DILocation(line: 3361, column: 24, scope: !14739)
!14751 = !DILocation(line: 3363, column: 26, scope: !14739)
!14752 = !DILocation(line: 3363, column: 4, scope: !14739)
!14753 = !DILocation(line: 3363, column: 10, scope: !14739)
!14754 = !DILocation(line: 3363, column: 16, scope: !14739)
!14755 = !DILocation(line: 3363, column: 19, scope: !14739)
!14756 = !DILocation(line: 3363, column: 24, scope: !14739)
!14757 = !DILocation(line: 3364, column: 3, scope: !14729)
!14758 = !DILocation(line: 3365, column: 2, scope: !14729)
!14759 = !DILocation(line: 3355, column: 35, scope: !14723)
!14760 = !DILocation(line: 3355, column: 2, scope: !14723)
!14761 = distinct !{!14761, !14727, !14762}
!14762 = !DILocation(line: 3365, column: 2, scope: !14720)
!14763 = !DILocation(line: 3367, column: 8, scope: !14764)
!14764 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 3367, column: 2)
!14765 = !DILocation(line: 3367, column: 7, scope: !14764)
!14766 = !DILocation(line: 3367, column: 12, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14764, file: !3, line: 3367, column: 2)
!14768 = !DILocation(line: 3367, column: 16, scope: !14767)
!14769 = !DILocation(line: 3367, column: 22, scope: !14767)
!14770 = !DILocation(line: 3367, column: 14, scope: !14767)
!14771 = !DILocation(line: 3367, column: 2, scope: !14764)
!14772 = !DILocation(line: 3369, column: 26, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14767, file: !3, line: 3367, column: 39)
!14774 = !DILocation(line: 3369, column: 36, scope: !14773)
!14775 = !DILocation(line: 3369, column: 42, scope: !14773)
!14776 = !DILocation(line: 3369, column: 55, scope: !14773)
!14777 = !DILocation(line: 3369, column: 53, scope: !14773)
!14778 = !DILocation(line: 3369, column: 35, scope: !14773)
!14779 = !DILocation(line: 3369, column: 58, scope: !14773)
!14780 = !DILocation(line: 3369, column: 32, scope: !14773)
!14781 = !DILocation(line: 3369, column: 3, scope: !14773)
!14782 = !DILocation(line: 3369, column: 9, scope: !14773)
!14783 = !DILocation(line: 3369, column: 15, scope: !14773)
!14784 = !DILocation(line: 3369, column: 18, scope: !14773)
!14785 = !DILocation(line: 3369, column: 24, scope: !14773)
!14786 = !DILocation(line: 3372, column: 7, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14773, file: !3, line: 3372, column: 7)
!14788 = !DILocation(line: 3372, column: 12, scope: !14787)
!14789 = !DILocation(line: 3372, column: 18, scope: !14787)
!14790 = !DILocation(line: 3372, column: 29, scope: !14787)
!14791 = !DILocation(line: 3372, column: 9, scope: !14787)
!14792 = !DILocation(line: 3372, column: 7, scope: !14773)
!14793 = !DILocation(line: 3373, column: 26, scope: !14787)
!14794 = !DILocation(line: 3373, column: 4, scope: !14787)
!14795 = !DILocation(line: 3373, column: 10, scope: !14787)
!14796 = !DILocation(line: 3373, column: 16, scope: !14787)
!14797 = !DILocation(line: 3373, column: 19, scope: !14787)
!14798 = !DILocation(line: 3373, column: 24, scope: !14787)
!14799 = !DILocation(line: 3375, column: 26, scope: !14787)
!14800 = !DILocation(line: 3375, column: 4, scope: !14787)
!14801 = !DILocation(line: 3375, column: 10, scope: !14787)
!14802 = !DILocation(line: 3375, column: 16, scope: !14787)
!14803 = !DILocation(line: 3375, column: 19, scope: !14787)
!14804 = !DILocation(line: 3375, column: 24, scope: !14787)
!14805 = !DILocation(line: 3376, column: 2, scope: !14773)
!14806 = !DILocation(line: 3367, column: 35, scope: !14767)
!14807 = !DILocation(line: 3367, column: 2, scope: !14767)
!14808 = distinct !{!14808, !14771, !14809}
!14809 = !DILocation(line: 3376, column: 2, scope: !14764)
!14810 = !DILocation(line: 3378, column: 2, scope: !14678)
!14811 = !DILocation(line: 3379, column: 1, scope: !14678)
!14812 = distinct !DISubprogram(name: "alloc_bufs", scope: !3, file: !3, line: 3392, type: !14813, scopeLine: 3393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14813 = !DISubroutineType(types: !14814)
!14814 = !{!32, !7530, !7944, !32}
!14815 = !DILocalVariable(name: "info", arg: 1, scope: !14812, file: !3, line: 3392, type: !7530)
!14816 = !DILocation(line: 3392, column: 41, scope: !14812)
!14817 = !DILocalVariable(name: "bufs", arg: 2, scope: !14812, file: !3, line: 3392, type: !7944)
!14818 = !DILocation(line: 3392, column: 65, scope: !14812)
!14819 = !DILocalVariable(name: "count", arg: 3, scope: !14812, file: !3, line: 3392, type: !32)
!14820 = !DILocation(line: 3392, column: 75, scope: !14812)
!14821 = !DILocalVariable(name: "i", scope: !14812, file: !3, line: 3394, type: !32)
!14822 = !DILocation(line: 3394, column: 6, scope: !14812)
!14823 = !DILocation(line: 3395, column: 8, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14812, file: !3, line: 3395, column: 2)
!14825 = !DILocation(line: 3395, column: 7, scope: !14824)
!14826 = !DILocation(line: 3395, column: 12, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14824, file: !3, line: 3395, column: 2)
!14828 = !DILocation(line: 3395, column: 16, scope: !14827)
!14829 = !DILocation(line: 3395, column: 14, scope: !14827)
!14830 = !DILocation(line: 3395, column: 2, scope: !14824)
!14831 = !DILocation(line: 3396, column: 37, scope: !14832)
!14832 = distinct !DILexicalBlock(scope: !14827, file: !3, line: 3395, column: 28)
!14833 = !DILocation(line: 3396, column: 43, scope: !14832)
!14834 = !DILocation(line: 3396, column: 49, scope: !14832)
!14835 = !DILocation(line: 3397, column: 9, scope: !14832)
!14836 = !DILocation(line: 3397, column: 14, scope: !14832)
!14837 = !DILocation(line: 3397, column: 17, scope: !14832)
!14838 = !DILocation(line: 3396, column: 17, scope: !14832)
!14839 = !DILocation(line: 3396, column: 3, scope: !14832)
!14840 = !DILocation(line: 3396, column: 8, scope: !14832)
!14841 = !DILocation(line: 3396, column: 11, scope: !14832)
!14842 = !DILocation(line: 3396, column: 15, scope: !14832)
!14843 = !DILocation(line: 3398, column: 8, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14832, file: !3, line: 3398, column: 7)
!14845 = !DILocation(line: 3398, column: 13, scope: !14844)
!14846 = !DILocation(line: 3398, column: 16, scope: !14844)
!14847 = !DILocation(line: 3398, column: 7, scope: !14832)
!14848 = !DILocation(line: 3399, column: 4, scope: !14844)
!14849 = !DILocation(line: 3400, column: 19, scope: !14832)
!14850 = !DILocation(line: 3400, column: 3, scope: !14832)
!14851 = !DILocation(line: 3400, column: 8, scope: !14832)
!14852 = !DILocation(line: 3400, column: 11, scope: !14832)
!14853 = !DILocation(line: 3400, column: 17, scope: !14832)
!14854 = !DILocation(line: 3401, column: 2, scope: !14832)
!14855 = !DILocation(line: 3395, column: 24, scope: !14827)
!14856 = !DILocation(line: 3395, column: 2, scope: !14827)
!14857 = distinct !{!14857, !14830, !14858}
!14858 = !DILocation(line: 3401, column: 2, scope: !14824)
!14859 = !DILocation(line: 3402, column: 2, scope: !14812)
!14860 = !DILocation(line: 3403, column: 1, scope: !14812)
!14861 = distinct !DISubprogram(name: "alloc_tmp_rbuf", scope: !3, file: !3, line: 3309, type: !8119, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!14862 = !DILocation(line: 445, column: 72, scope: !9737, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 552, column: 10, scope: !9742, inlinedAt: !14864)
!14864 = distinct !DILocation(line: 3311, column: 19, scope: !14861)
!14865 = !DILocation(line: 446, column: 9, scope: !9737, inlinedAt: !14863)
!14866 = !DILocation(line: 446, column: 23, scope: !9737, inlinedAt: !14863)
!14867 = !DILocation(line: 448, column: 8, scope: !9737, inlinedAt: !14863)
!14868 = !DILocation(line: 318, column: 67, scope: !9753, inlinedAt: !14869)
!14869 = distinct !DILocation(line: 553, column: 20, scope: !9742, inlinedAt: !14864)
!14870 = !DILocation(line: 346, column: 58, scope: !9759, inlinedAt: !14871)
!14871 = distinct !DILocation(line: 547, column: 11, scope: !9742, inlinedAt: !14864)
!14872 = !DILocation(line: 472, column: 28, scope: !9765, inlinedAt: !14873)
!14873 = distinct !DILocation(line: 481, column: 9, scope: !9770, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 545, column: 11, scope: !9772, inlinedAt: !14864)
!14875 = !DILocation(line: 472, column: 40, scope: !9765, inlinedAt: !14873)
!14876 = !DILocation(line: 472, column: 60, scope: !9765, inlinedAt: !14873)
!14877 = !DILocation(line: 478, column: 51, scope: !9770, inlinedAt: !14874)
!14878 = !DILocation(line: 478, column: 63, scope: !9770, inlinedAt: !14874)
!14879 = !DILocation(line: 480, column: 15, scope: !9770, inlinedAt: !14874)
!14880 = !DILocation(line: 538, column: 45, scope: !9744, inlinedAt: !14864)
!14881 = !DILocation(line: 538, column: 57, scope: !9744, inlinedAt: !14864)
!14882 = !DILocation(line: 542, column: 16, scope: !9742, inlinedAt: !14864)
!14883 = !DILocalVariable(name: "info", arg: 1, scope: !14861, file: !3, line: 3309, type: !7530)
!14884 = !DILocation(line: 3309, column: 45, scope: !14861)
!14885 = !DILocation(line: 3311, column: 27, scope: !14861)
!14886 = !DILocation(line: 3311, column: 33, scope: !14861)
!14887 = !DILocation(line: 3311, column: 48, scope: !14861)
!14888 = !DILocation(line: 540, column: 27, scope: !9743, inlinedAt: !14864)
!14889 = !DILocation(line: 540, column: 6, scope: !9743, inlinedAt: !14864)
!14890 = !DILocation(line: 540, column: 6, scope: !9744, inlinedAt: !14864)
!14891 = !DILocation(line: 544, column: 7, scope: !9772, inlinedAt: !14864)
!14892 = !DILocation(line: 544, column: 12, scope: !9772, inlinedAt: !14864)
!14893 = !DILocation(line: 544, column: 7, scope: !9742, inlinedAt: !14864)
!14894 = !DILocation(line: 545, column: 25, scope: !9772, inlinedAt: !14864)
!14895 = !DILocation(line: 545, column: 31, scope: !9772, inlinedAt: !14864)
!14896 = !DILocation(line: 480, column: 33, scope: !9770, inlinedAt: !14874)
!14897 = !DILocation(line: 480, column: 23, scope: !9770, inlinedAt: !14874)
!14898 = !DILocation(line: 481, column: 29, scope: !9770, inlinedAt: !14874)
!14899 = !DILocation(line: 481, column: 35, scope: !9770, inlinedAt: !14874)
!14900 = !DILocation(line: 481, column: 42, scope: !9770, inlinedAt: !14874)
!14901 = !DILocation(line: 474, column: 23, scope: !9765, inlinedAt: !14873)
!14902 = !DILocation(line: 474, column: 29, scope: !9765, inlinedAt: !14873)
!14903 = !DILocation(line: 474, column: 36, scope: !9765, inlinedAt: !14873)
!14904 = !DILocation(line: 474, column: 9, scope: !9765, inlinedAt: !14873)
!14905 = !DILocation(line: 545, column: 4, scope: !9772, inlinedAt: !14864)
!14906 = !DILocation(line: 547, column: 25, scope: !9742, inlinedAt: !14864)
!14907 = !DILocation(line: 348, column: 7, scope: !9816, inlinedAt: !14871)
!14908 = !DILocation(line: 348, column: 6, scope: !9759, inlinedAt: !14871)
!14909 = !DILocation(line: 349, column: 3, scope: !9816, inlinedAt: !14871)
!14910 = !DILocation(line: 351, column: 6, scope: !9820, inlinedAt: !14871)
!14911 = !DILocation(line: 351, column: 11, scope: !9820, inlinedAt: !14871)
!14912 = !DILocation(line: 351, column: 6, scope: !9759, inlinedAt: !14871)
!14913 = !DILocation(line: 352, column: 3, scope: !9820, inlinedAt: !14871)
!14914 = !DILocation(line: 354, column: 32, scope: !9825, inlinedAt: !14871)
!14915 = !DILocation(line: 354, column: 37, scope: !9825, inlinedAt: !14871)
!14916 = !DILocation(line: 354, column: 42, scope: !9825, inlinedAt: !14871)
!14917 = !DILocation(line: 354, column: 45, scope: !9825, inlinedAt: !14871)
!14918 = !DILocation(line: 354, column: 50, scope: !9825, inlinedAt: !14871)
!14919 = !DILocation(line: 354, column: 6, scope: !9759, inlinedAt: !14871)
!14920 = !DILocation(line: 355, column: 3, scope: !9825, inlinedAt: !14871)
!14921 = !DILocation(line: 356, column: 32, scope: !9833, inlinedAt: !14871)
!14922 = !DILocation(line: 356, column: 37, scope: !9833, inlinedAt: !14871)
!14923 = !DILocation(line: 356, column: 43, scope: !9833, inlinedAt: !14871)
!14924 = !DILocation(line: 356, column: 46, scope: !9833, inlinedAt: !14871)
!14925 = !DILocation(line: 356, column: 51, scope: !9833, inlinedAt: !14871)
!14926 = !DILocation(line: 356, column: 6, scope: !9759, inlinedAt: !14871)
!14927 = !DILocation(line: 357, column: 3, scope: !9833, inlinedAt: !14871)
!14928 = !DILocation(line: 358, column: 6, scope: !9841, inlinedAt: !14871)
!14929 = !DILocation(line: 358, column: 11, scope: !9841, inlinedAt: !14871)
!14930 = !DILocation(line: 358, column: 6, scope: !9759, inlinedAt: !14871)
!14931 = !DILocation(line: 358, column: 26, scope: !9841, inlinedAt: !14871)
!14932 = !DILocation(line: 359, column: 6, scope: !9846, inlinedAt: !14871)
!14933 = !DILocation(line: 359, column: 11, scope: !9846, inlinedAt: !14871)
!14934 = !DILocation(line: 359, column: 6, scope: !9759, inlinedAt: !14871)
!14935 = !DILocation(line: 359, column: 26, scope: !9846, inlinedAt: !14871)
!14936 = !DILocation(line: 360, column: 6, scope: !9851, inlinedAt: !14871)
!14937 = !DILocation(line: 360, column: 11, scope: !9851, inlinedAt: !14871)
!14938 = !DILocation(line: 360, column: 6, scope: !9759, inlinedAt: !14871)
!14939 = !DILocation(line: 360, column: 26, scope: !9851, inlinedAt: !14871)
!14940 = !DILocation(line: 361, column: 6, scope: !9856, inlinedAt: !14871)
!14941 = !DILocation(line: 361, column: 11, scope: !9856, inlinedAt: !14871)
!14942 = !DILocation(line: 361, column: 6, scope: !9759, inlinedAt: !14871)
!14943 = !DILocation(line: 361, column: 26, scope: !9856, inlinedAt: !14871)
!14944 = !DILocation(line: 362, column: 6, scope: !9861, inlinedAt: !14871)
!14945 = !DILocation(line: 362, column: 11, scope: !9861, inlinedAt: !14871)
!14946 = !DILocation(line: 362, column: 6, scope: !9759, inlinedAt: !14871)
!14947 = !DILocation(line: 362, column: 26, scope: !9861, inlinedAt: !14871)
!14948 = !DILocation(line: 363, column: 6, scope: !9866, inlinedAt: !14871)
!14949 = !DILocation(line: 363, column: 11, scope: !9866, inlinedAt: !14871)
!14950 = !DILocation(line: 363, column: 6, scope: !9759, inlinedAt: !14871)
!14951 = !DILocation(line: 363, column: 26, scope: !9866, inlinedAt: !14871)
!14952 = !DILocation(line: 364, column: 6, scope: !9871, inlinedAt: !14871)
!14953 = !DILocation(line: 364, column: 11, scope: !9871, inlinedAt: !14871)
!14954 = !DILocation(line: 364, column: 6, scope: !9759, inlinedAt: !14871)
!14955 = !DILocation(line: 364, column: 26, scope: !9871, inlinedAt: !14871)
!14956 = !DILocation(line: 365, column: 6, scope: !9876, inlinedAt: !14871)
!14957 = !DILocation(line: 365, column: 11, scope: !9876, inlinedAt: !14871)
!14958 = !DILocation(line: 365, column: 6, scope: !9759, inlinedAt: !14871)
!14959 = !DILocation(line: 365, column: 26, scope: !9876, inlinedAt: !14871)
!14960 = !DILocation(line: 366, column: 6, scope: !9881, inlinedAt: !14871)
!14961 = !DILocation(line: 366, column: 11, scope: !9881, inlinedAt: !14871)
!14962 = !DILocation(line: 366, column: 6, scope: !9759, inlinedAt: !14871)
!14963 = !DILocation(line: 366, column: 26, scope: !9881, inlinedAt: !14871)
!14964 = !DILocation(line: 367, column: 6, scope: !9886, inlinedAt: !14871)
!14965 = !DILocation(line: 367, column: 11, scope: !9886, inlinedAt: !14871)
!14966 = !DILocation(line: 367, column: 6, scope: !9759, inlinedAt: !14871)
!14967 = !DILocation(line: 367, column: 26, scope: !9886, inlinedAt: !14871)
!14968 = !DILocation(line: 368, column: 6, scope: !9891, inlinedAt: !14871)
!14969 = !DILocation(line: 368, column: 11, scope: !9891, inlinedAt: !14871)
!14970 = !DILocation(line: 368, column: 6, scope: !9759, inlinedAt: !14871)
!14971 = !DILocation(line: 368, column: 26, scope: !9891, inlinedAt: !14871)
!14972 = !DILocation(line: 369, column: 6, scope: !9896, inlinedAt: !14871)
!14973 = !DILocation(line: 369, column: 11, scope: !9896, inlinedAt: !14871)
!14974 = !DILocation(line: 369, column: 6, scope: !9759, inlinedAt: !14871)
!14975 = !DILocation(line: 369, column: 26, scope: !9896, inlinedAt: !14871)
!14976 = !DILocation(line: 370, column: 6, scope: !9901, inlinedAt: !14871)
!14977 = !DILocation(line: 370, column: 11, scope: !9901, inlinedAt: !14871)
!14978 = !DILocation(line: 370, column: 6, scope: !9759, inlinedAt: !14871)
!14979 = !DILocation(line: 370, column: 26, scope: !9901, inlinedAt: !14871)
!14980 = !DILocation(line: 371, column: 6, scope: !9906, inlinedAt: !14871)
!14981 = !DILocation(line: 371, column: 11, scope: !9906, inlinedAt: !14871)
!14982 = !DILocation(line: 371, column: 6, scope: !9759, inlinedAt: !14871)
!14983 = !DILocation(line: 371, column: 26, scope: !9906, inlinedAt: !14871)
!14984 = !DILocation(line: 372, column: 6, scope: !9911, inlinedAt: !14871)
!14985 = !DILocation(line: 372, column: 11, scope: !9911, inlinedAt: !14871)
!14986 = !DILocation(line: 372, column: 6, scope: !9759, inlinedAt: !14871)
!14987 = !DILocation(line: 372, column: 26, scope: !9911, inlinedAt: !14871)
!14988 = !DILocation(line: 373, column: 6, scope: !9916, inlinedAt: !14871)
!14989 = !DILocation(line: 373, column: 11, scope: !9916, inlinedAt: !14871)
!14990 = !DILocation(line: 373, column: 6, scope: !9759, inlinedAt: !14871)
!14991 = !DILocation(line: 373, column: 26, scope: !9916, inlinedAt: !14871)
!14992 = !DILocation(line: 374, column: 6, scope: !9921, inlinedAt: !14871)
!14993 = !DILocation(line: 374, column: 11, scope: !9921, inlinedAt: !14871)
!14994 = !DILocation(line: 374, column: 6, scope: !9759, inlinedAt: !14871)
!14995 = !DILocation(line: 374, column: 26, scope: !9921, inlinedAt: !14871)
!14996 = !DILocation(line: 375, column: 6, scope: !9926, inlinedAt: !14871)
!14997 = !DILocation(line: 375, column: 11, scope: !9926, inlinedAt: !14871)
!14998 = !DILocation(line: 375, column: 6, scope: !9759, inlinedAt: !14871)
!14999 = !DILocation(line: 375, column: 27, scope: !9926, inlinedAt: !14871)
!15000 = !DILocation(line: 376, column: 6, scope: !9931, inlinedAt: !14871)
!15001 = !DILocation(line: 376, column: 11, scope: !9931, inlinedAt: !14871)
!15002 = !DILocation(line: 376, column: 6, scope: !9759, inlinedAt: !14871)
!15003 = !DILocation(line: 376, column: 32, scope: !9931, inlinedAt: !14871)
!15004 = !DILocation(line: 377, column: 6, scope: !9936, inlinedAt: !14871)
!15005 = !DILocation(line: 377, column: 11, scope: !9936, inlinedAt: !14871)
!15006 = !DILocation(line: 377, column: 6, scope: !9759, inlinedAt: !14871)
!15007 = !DILocation(line: 377, column: 32, scope: !9936, inlinedAt: !14871)
!15008 = !DILocation(line: 378, column: 6, scope: !9941, inlinedAt: !14871)
!15009 = !DILocation(line: 378, column: 11, scope: !9941, inlinedAt: !14871)
!15010 = !DILocation(line: 378, column: 6, scope: !9759, inlinedAt: !14871)
!15011 = !DILocation(line: 378, column: 32, scope: !9941, inlinedAt: !14871)
!15012 = !DILocation(line: 379, column: 6, scope: !9946, inlinedAt: !14871)
!15013 = !DILocation(line: 379, column: 11, scope: !9946, inlinedAt: !14871)
!15014 = !DILocation(line: 379, column: 6, scope: !9759, inlinedAt: !14871)
!15015 = !DILocation(line: 379, column: 33, scope: !9946, inlinedAt: !14871)
!15016 = !DILocation(line: 380, column: 6, scope: !9951, inlinedAt: !14871)
!15017 = !DILocation(line: 380, column: 11, scope: !9951, inlinedAt: !14871)
!15018 = !DILocation(line: 380, column: 6, scope: !9759, inlinedAt: !14871)
!15019 = !DILocation(line: 380, column: 33, scope: !9951, inlinedAt: !14871)
!15020 = !DILocation(line: 381, column: 6, scope: !9956, inlinedAt: !14871)
!15021 = !DILocation(line: 381, column: 11, scope: !9956, inlinedAt: !14871)
!15022 = !DILocation(line: 381, column: 6, scope: !9759, inlinedAt: !14871)
!15023 = !DILocation(line: 381, column: 33, scope: !9956, inlinedAt: !14871)
!15024 = !DILocation(line: 382, column: 2, scope: !9961, inlinedAt: !14871)
!15025 = !DILocation(line: 382, column: 2, scope: !9965, inlinedAt: !14871)
!15026 = !DILocation(line: 382, column: 2, scope: !9966, inlinedAt: !14871)
!15027 = !DILocation(line: 386, column: 1, scope: !9759, inlinedAt: !14871)
!15028 = !DILocation(line: 547, column: 9, scope: !9742, inlinedAt: !14864)
!15029 = !DILocation(line: 549, column: 8, scope: !9972, inlinedAt: !14864)
!15030 = !DILocation(line: 549, column: 7, scope: !9742, inlinedAt: !14864)
!15031 = !DILocation(line: 550, column: 4, scope: !9972, inlinedAt: !14864)
!15032 = !DILocation(line: 553, column: 33, scope: !9742, inlinedAt: !14864)
!15033 = !DILocation(line: 325, column: 6, scope: !9977, inlinedAt: !14869)
!15034 = !DILocation(line: 325, column: 6, scope: !9753, inlinedAt: !14869)
!15035 = !DILocation(line: 326, column: 3, scope: !9977, inlinedAt: !14869)
!15036 = !DILocation(line: 332, column: 9, scope: !9753, inlinedAt: !14869)
!15037 = !DILocation(line: 332, column: 15, scope: !9753, inlinedAt: !14869)
!15038 = !DILocation(line: 332, column: 2, scope: !9753, inlinedAt: !14869)
!15039 = !DILocation(line: 336, column: 1, scope: !9753, inlinedAt: !14869)
!15040 = !DILocation(line: 553, column: 5, scope: !9742, inlinedAt: !14864)
!15041 = !DILocation(line: 553, column: 41, scope: !9742, inlinedAt: !14864)
!15042 = !DILocation(line: 554, column: 5, scope: !9742, inlinedAt: !14864)
!15043 = !DILocation(line: 554, column: 12, scope: !9742, inlinedAt: !14864)
!15044 = !DILocation(line: 448, column: 31, scope: !9737, inlinedAt: !14863)
!15045 = !DILocation(line: 448, column: 34, scope: !9737, inlinedAt: !14863)
!15046 = !DILocation(line: 448, column: 14, scope: !9737, inlinedAt: !14863)
!15047 = !DILocation(line: 450, column: 22, scope: !9737, inlinedAt: !14863)
!15048 = !DILocation(line: 450, column: 25, scope: !9737, inlinedAt: !14863)
!15049 = !DILocation(line: 450, column: 30, scope: !9737, inlinedAt: !14863)
!15050 = !DILocation(line: 450, column: 36, scope: !9737, inlinedAt: !14863)
!15051 = !DILocation(line: 450, column: 8, scope: !9737, inlinedAt: !14863)
!15052 = !DILocation(line: 450, column: 6, scope: !9737, inlinedAt: !14863)
!15053 = !DILocation(line: 451, column: 9, scope: !9737, inlinedAt: !14863)
!15054 = !DILocation(line: 552, column: 3, scope: !9742, inlinedAt: !14864)
!15055 = !DILocation(line: 557, column: 19, scope: !9744, inlinedAt: !14864)
!15056 = !DILocation(line: 557, column: 25, scope: !9744, inlinedAt: !14864)
!15057 = !DILocation(line: 557, column: 9, scope: !9744, inlinedAt: !14864)
!15058 = !DILocation(line: 557, column: 2, scope: !9744, inlinedAt: !14864)
!15059 = !DILocation(line: 558, column: 1, scope: !9744, inlinedAt: !14864)
!15060 = !DILocation(line: 3311, column: 2, scope: !14861)
!15061 = !DILocation(line: 3311, column: 8, scope: !14861)
!15062 = !DILocation(line: 3311, column: 17, scope: !14861)
!15063 = !DILocation(line: 3312, column: 6, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 3312, column: 6)
!15065 = !DILocation(line: 3312, column: 12, scope: !15064)
!15066 = !DILocation(line: 3312, column: 21, scope: !15064)
!15067 = !DILocation(line: 3312, column: 6, scope: !14861)
!15068 = !DILocation(line: 3313, column: 3, scope: !15064)
!15069 = !DILocation(line: 3315, column: 27, scope: !14861)
!15070 = !DILocation(line: 3315, column: 33, scope: !14861)
!15071 = !DILocation(line: 3315, column: 48, scope: !14861)
!15072 = !DILocation(line: 3315, column: 19, scope: !14861)
!15073 = !DILocation(line: 3315, column: 2, scope: !14861)
!15074 = !DILocation(line: 3315, column: 8, scope: !14861)
!15075 = !DILocation(line: 3315, column: 17, scope: !14861)
!15076 = !DILocation(line: 3316, column: 7, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 3316, column: 6)
!15078 = !DILocation(line: 3316, column: 13, scope: !15077)
!15079 = !DILocation(line: 3316, column: 6, scope: !14861)
!15080 = !DILocation(line: 3317, column: 9, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15077, file: !3, line: 3316, column: 23)
!15082 = !DILocation(line: 3317, column: 15, scope: !15081)
!15083 = !DILocation(line: 3317, column: 3, scope: !15081)
!15084 = !DILocation(line: 3318, column: 3, scope: !15081)
!15085 = !DILocation(line: 3318, column: 9, scope: !15081)
!15086 = !DILocation(line: 3318, column: 18, scope: !15081)
!15087 = !DILocation(line: 3319, column: 3, scope: !15081)
!15088 = !DILocation(line: 3321, column: 2, scope: !14861)
!15089 = !DILocation(line: 3322, column: 1, scope: !14861)
!15090 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !8858, file: !8858, line: 392, type: !15091, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15091 = !DISubroutineType(types: !15092)
!15092 = !{!591, !3767, !1039, !15093, !1742}
!15093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!15094 = !DILocalVariable(name: "dev", arg: 1, scope: !15090, file: !8858, line: 392, type: !3767)
!15095 = !DILocation(line: 392, column: 55, scope: !15090)
!15096 = !DILocalVariable(name: "size", arg: 2, scope: !15090, file: !8858, line: 392, type: !1039)
!15097 = !DILocation(line: 392, column: 67, scope: !15090)
!15098 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !15090, file: !8858, line: 393, type: !15093)
!15099 = !DILocation(line: 393, column: 15, scope: !15090)
!15100 = !DILocalVariable(name: "gfp", arg: 4, scope: !15090, file: !8858, line: 393, type: !1742)
!15101 = !DILocation(line: 393, column: 33, scope: !15090)
!15102 = !DILocation(line: 396, column: 25, scope: !15090)
!15103 = !DILocation(line: 396, column: 30, scope: !15090)
!15104 = !DILocation(line: 396, column: 36, scope: !15090)
!15105 = !DILocation(line: 396, column: 48, scope: !15090)
!15106 = !DILocation(line: 397, column: 5, scope: !15090)
!15107 = !DILocation(line: 397, column: 9, scope: !15090)
!15108 = !DILocation(line: 397, column: 4, scope: !15090)
!15109 = !DILocation(line: 396, column: 9, scope: !15090)
!15110 = !DILocation(line: 396, column: 2, scope: !15090)
!15111 = distinct !DISubprogram(name: "isr_serial", scope: !3, file: !3, line: 2120, type: !8337, scopeLine: 2121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15112 = !DILocalVariable(name: "info", arg: 1, scope: !15111, file: !3, line: 2120, type: !7530)
!15113 = !DILocation(line: 2120, column: 42, scope: !15111)
!15114 = !DILocalVariable(name: "status", scope: !15111, file: !3, line: 2122, type: !476)
!15115 = !DILocation(line: 2122, column: 17, scope: !15111)
!15116 = !DILocation(line: 2122, column: 35, scope: !15111)
!15117 = !DILocation(line: 2122, column: 26, scope: !15111)
!15118 = !DILocation(line: 2124, column: 2, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2124, column: 2)
!15120 = !DILocation(line: 2124, column: 2, scope: !15111)
!15121 = !DILocation(line: 2126, column: 11, scope: !15111)
!15122 = !DILocation(line: 2126, column: 22, scope: !15111)
!15123 = !DILocation(line: 2126, column: 2, scope: !15111)
!15124 = !DILocation(line: 2128, column: 2, scope: !15111)
!15125 = !DILocation(line: 2128, column: 8, scope: !15111)
!15126 = !DILocation(line: 2128, column: 21, scope: !15111)
!15127 = !DILocation(line: 2130, column: 6, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2130, column: 6)
!15129 = !DILocation(line: 2130, column: 12, scope: !15128)
!15130 = !DILocation(line: 2130, column: 19, scope: !15128)
!15131 = !DILocation(line: 2130, column: 24, scope: !15128)
!15132 = !DILocation(line: 2130, column: 6, scope: !15111)
!15133 = !DILocation(line: 2131, column: 7, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15135, file: !3, line: 2131, column: 7)
!15135 = distinct !DILexicalBlock(scope: !15128, file: !3, line: 2130, column: 44)
!15136 = !DILocation(line: 2131, column: 14, scope: !15134)
!15137 = !DILocation(line: 2131, column: 7, scope: !15135)
!15138 = !DILocation(line: 2132, column: 8, scope: !15139)
!15139 = distinct !DILexicalBlock(scope: !15140, file: !3, line: 2132, column: 8)
!15140 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 2131, column: 28)
!15141 = !DILocation(line: 2132, column: 14, scope: !15139)
!15142 = !DILocation(line: 2132, column: 8, scope: !15140)
!15143 = !DILocation(line: 2133, column: 15, scope: !15139)
!15144 = !DILocation(line: 2133, column: 21, scope: !15139)
!15145 = !DILocation(line: 2133, column: 5, scope: !15139)
!15146 = !DILocation(line: 2134, column: 3, scope: !15140)
!15147 = !DILocation(line: 2135, column: 7, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15135, file: !3, line: 2135, column: 7)
!15149 = !DILocation(line: 2135, column: 13, scope: !15148)
!15150 = !DILocation(line: 2135, column: 20, scope: !15148)
!15151 = !DILocation(line: 2135, column: 24, scope: !15148)
!15152 = !DILocation(line: 2135, column: 31, scope: !15148)
!15153 = !DILocation(line: 2135, column: 7, scope: !15135)
!15154 = !DILocation(line: 2136, column: 15, scope: !15148)
!15155 = !DILocation(line: 2136, column: 4, scope: !15148)
!15156 = !DILocation(line: 2137, column: 8, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15135, file: !3, line: 2137, column: 7)
!15158 = !DILocation(line: 2137, column: 15, scope: !15157)
!15159 = !DILocation(line: 2137, column: 30, scope: !15157)
!15160 = !DILocation(line: 2137, column: 34, scope: !15157)
!15161 = !DILocation(line: 2137, column: 41, scope: !15157)
!15162 = !DILocation(line: 2137, column: 7, scope: !15135)
!15163 = !DILocation(line: 2138, column: 4, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15157, file: !3, line: 2137, column: 53)
!15165 = !DILocation(line: 2138, column: 10, scope: !15164)
!15166 = !DILocation(line: 2138, column: 17, scope: !15164)
!15167 = !DILocation(line: 2138, column: 20, scope: !15164)
!15168 = !DILocation(line: 2140, column: 8, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 2140, column: 8)
!15170 = !DILocation(line: 2140, column: 14, scope: !15169)
!15171 = !DILocation(line: 2140, column: 19, scope: !15169)
!15172 = !DILocation(line: 2140, column: 8, scope: !15164)
!15173 = !DILocation(line: 2141, column: 11, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15175, file: !3, line: 2141, column: 9)
!15175 = distinct !DILexicalBlock(scope: !15169, file: !3, line: 2140, column: 24)
!15176 = !DILocation(line: 2141, column: 20, scope: !15174)
!15177 = !DILocation(line: 2141, column: 26, scope: !15174)
!15178 = !DILocation(line: 2141, column: 18, scope: !15174)
!15179 = !DILocation(line: 2141, column: 9, scope: !15175)
!15180 = !DILocation(line: 2142, column: 10, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15182, file: !3, line: 2142, column: 10)
!15182 = distinct !DILexicalBlock(scope: !15174, file: !3, line: 2141, column: 47)
!15183 = !DILocation(line: 2142, column: 16, scope: !15181)
!15184 = !DILocation(line: 2142, column: 33, scope: !15181)
!15185 = !DILocation(line: 2142, column: 10, scope: !15182)
!15186 = !DILocation(line: 2143, column: 29, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15181, file: !3, line: 2142, column: 47)
!15188 = !DILocation(line: 2143, column: 35, scope: !15187)
!15189 = !DILocation(line: 2143, column: 7, scope: !15187)
!15190 = !DILocation(line: 2144, column: 11, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15187, file: !3, line: 2144, column: 11)
!15192 = !DILocation(line: 2144, column: 17, scope: !15191)
!15193 = !DILocation(line: 2144, column: 22, scope: !15191)
!15194 = !DILocation(line: 2144, column: 28, scope: !15191)
!15195 = !DILocation(line: 2144, column: 11, scope: !15187)
!15196 = !DILocation(line: 2145, column: 15, scope: !15191)
!15197 = !DILocation(line: 2145, column: 21, scope: !15191)
!15198 = !DILocation(line: 2145, column: 26, scope: !15191)
!15199 = !DILocation(line: 2145, column: 8, scope: !15191)
!15200 = !DILocation(line: 2146, column: 6, scope: !15187)
!15201 = !DILocation(line: 2147, column: 5, scope: !15182)
!15202 = !DILocation(line: 2148, column: 4, scope: !15175)
!15203 = !DILocation(line: 2149, column: 3, scope: !15164)
!15204 = !DILocation(line: 2150, column: 2, scope: !15135)
!15205 = !DILocation(line: 2151, column: 7, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 2151, column: 7)
!15207 = distinct !DILexicalBlock(scope: !15128, file: !3, line: 2150, column: 9)
!15208 = !DILocation(line: 2151, column: 14, scope: !15206)
!15209 = !DILocation(line: 2151, column: 7, scope: !15207)
!15210 = !DILocation(line: 2152, column: 14, scope: !15206)
!15211 = !DILocation(line: 2152, column: 20, scope: !15206)
!15212 = !DILocation(line: 2152, column: 4, scope: !15206)
!15213 = !DILocation(line: 2153, column: 7, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 2153, column: 7)
!15215 = !DILocation(line: 2153, column: 13, scope: !15214)
!15216 = !DILocation(line: 2153, column: 20, scope: !15214)
!15217 = !DILocation(line: 2153, column: 24, scope: !15214)
!15218 = !DILocation(line: 2153, column: 31, scope: !15214)
!15219 = !DILocation(line: 2153, column: 7, scope: !15207)
!15220 = !DILocation(line: 2154, column: 15, scope: !15214)
!15221 = !DILocation(line: 2154, column: 4, scope: !15214)
!15222 = !DILocation(line: 2155, column: 7, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 2155, column: 7)
!15224 = !DILocation(line: 2155, column: 14, scope: !15223)
!15225 = !DILocation(line: 2155, column: 7, scope: !15207)
!15226 = !DILocation(line: 2156, column: 8, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 2156, column: 8)
!15228 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 2155, column: 28)
!15229 = !DILocation(line: 2156, column: 15, scope: !15227)
!15230 = !DILocation(line: 2156, column: 8, scope: !15228)
!15231 = !DILocation(line: 2157, column: 5, scope: !15227)
!15232 = !DILocation(line: 2157, column: 11, scope: !15227)
!15233 = !DILocation(line: 2157, column: 18, scope: !15227)
!15234 = !DILocation(line: 2157, column: 24, scope: !15227)
!15235 = !DILocation(line: 2159, column: 5, scope: !15227)
!15236 = !DILocation(line: 2159, column: 11, scope: !15227)
!15237 = !DILocation(line: 2159, column: 18, scope: !15227)
!15238 = !DILocation(line: 2159, column: 26, scope: !15227)
!15239 = !DILocation(line: 2160, column: 4, scope: !15228)
!15240 = !DILocation(line: 2161, column: 3, scope: !15228)
!15241 = !DILocation(line: 2163, column: 7, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 2163, column: 7)
!15243 = !DILocation(line: 2163, column: 14, scope: !15242)
!15244 = !DILocation(line: 2163, column: 7, scope: !15207)
!15245 = !DILocation(line: 2164, column: 13, scope: !15242)
!15246 = !DILocation(line: 2164, column: 4, scope: !15242)
!15247 = !DILocation(line: 2167, column: 6, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2167, column: 6)
!15249 = !DILocation(line: 2167, column: 13, scope: !15248)
!15250 = !DILocation(line: 2167, column: 6, scope: !15111)
!15251 = !DILocation(line: 2168, column: 14, scope: !15248)
!15252 = !DILocation(line: 2168, column: 20, scope: !15248)
!15253 = !DILocation(line: 2168, column: 3, scope: !15248)
!15254 = !DILocation(line: 2169, column: 6, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2169, column: 6)
!15256 = !DILocation(line: 2169, column: 13, scope: !15255)
!15257 = !DILocation(line: 2169, column: 6, scope: !15111)
!15258 = !DILocation(line: 2170, column: 14, scope: !15255)
!15259 = !DILocation(line: 2170, column: 20, scope: !15255)
!15260 = !DILocation(line: 2170, column: 3, scope: !15255)
!15261 = !DILocation(line: 2171, column: 6, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2171, column: 6)
!15263 = !DILocation(line: 2171, column: 13, scope: !15262)
!15264 = !DILocation(line: 2171, column: 6, scope: !15111)
!15265 = !DILocation(line: 2172, column: 14, scope: !15262)
!15266 = !DILocation(line: 2172, column: 20, scope: !15262)
!15267 = !DILocation(line: 2172, column: 3, scope: !15262)
!15268 = !DILocation(line: 2173, column: 6, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15111, file: !3, line: 2173, column: 6)
!15270 = !DILocation(line: 2173, column: 13, scope: !15269)
!15271 = !DILocation(line: 2173, column: 6, scope: !15111)
!15272 = !DILocation(line: 2174, column: 13, scope: !15269)
!15273 = !DILocation(line: 2174, column: 19, scope: !15269)
!15274 = !DILocation(line: 2174, column: 3, scope: !15269)
!15275 = !DILocation(line: 2175, column: 1, scope: !15111)
!15276 = distinct !DISubprogram(name: "isr_rdma", scope: !3, file: !3, line: 2177, type: !8337, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15277 = !DILocalVariable(name: "info", arg: 1, scope: !15276, file: !3, line: 2177, type: !7530)
!15278 = !DILocation(line: 2177, column: 40, scope: !15276)
!15279 = !DILocalVariable(name: "status", scope: !15276, file: !3, line: 2179, type: !7)
!15280 = !DILocation(line: 2179, column: 15, scope: !15276)
!15281 = !DILocation(line: 2179, column: 33, scope: !15276)
!15282 = !DILocation(line: 2179, column: 24, scope: !15276)
!15283 = !DILocation(line: 2181, column: 2, scope: !15284)
!15284 = distinct !DILexicalBlock(scope: !15276, file: !3, line: 2181, column: 2)
!15285 = !DILocation(line: 2181, column: 2, scope: !15276)
!15286 = !DILocation(line: 2194, column: 11, scope: !15276)
!15287 = !DILocation(line: 2194, column: 24, scope: !15276)
!15288 = !DILocation(line: 2194, column: 2, scope: !15276)
!15289 = !DILocation(line: 2196, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15276, file: !3, line: 2196, column: 6)
!15291 = !DILocation(line: 2196, column: 13, scope: !15290)
!15292 = !DILocation(line: 2196, column: 6, scope: !15276)
!15293 = !DILocation(line: 2197, column: 3, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 2197, column: 3)
!15295 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 2196, column: 30)
!15296 = !DILocation(line: 2197, column: 3, scope: !15295)
!15297 = !DILocation(line: 2198, column: 3, scope: !15295)
!15298 = !DILocation(line: 2198, column: 9, scope: !15295)
!15299 = !DILocation(line: 2198, column: 20, scope: !15295)
!15300 = !DILocation(line: 2199, column: 2, scope: !15295)
!15301 = !DILocation(line: 2200, column: 2, scope: !15276)
!15302 = !DILocation(line: 2200, column: 8, scope: !15276)
!15303 = !DILocation(line: 2200, column: 19, scope: !15276)
!15304 = !DILocation(line: 2201, column: 1, scope: !15276)
!15305 = distinct !DISubprogram(name: "isr_tdma", scope: !3, file: !3, line: 2203, type: !8337, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15306 = !DILocalVariable(name: "info", arg: 1, scope: !15305, file: !3, line: 2203, type: !7530)
!15307 = !DILocation(line: 2203, column: 40, scope: !15305)
!15308 = !DILocalVariable(name: "status", scope: !15305, file: !3, line: 2205, type: !7)
!15309 = !DILocation(line: 2205, column: 15, scope: !15305)
!15310 = !DILocation(line: 2205, column: 33, scope: !15305)
!15311 = !DILocation(line: 2205, column: 24, scope: !15305)
!15312 = !DILocation(line: 2207, column: 2, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 2207, column: 2)
!15314 = !DILocation(line: 2207, column: 2, scope: !15305)
!15315 = !DILocation(line: 2219, column: 11, scope: !15305)
!15316 = !DILocation(line: 2219, column: 24, scope: !15305)
!15317 = !DILocation(line: 2219, column: 2, scope: !15305)
!15318 = !DILocation(line: 2221, column: 6, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 2221, column: 6)
!15320 = !DILocation(line: 2221, column: 13, scope: !15319)
!15321 = !DILocation(line: 2221, column: 6, scope: !15305)
!15322 = !DILocation(line: 2224, column: 3, scope: !15323)
!15323 = distinct !DILexicalBlock(scope: !15319, file: !3, line: 2221, column: 37)
!15324 = !DILocation(line: 2224, column: 9, scope: !15323)
!15325 = !DILocation(line: 2224, column: 20, scope: !15323)
!15326 = !DILocation(line: 2225, column: 2, scope: !15323)
!15327 = !DILocation(line: 2226, column: 1, scope: !15305)
!15328 = distinct !DISubprogram(name: "isr_gpio", scope: !3, file: !3, line: 2308, type: !11473, scopeLine: 2309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15329 = !DILocalVariable(name: "info", arg: 1, scope: !15328, file: !3, line: 2308, type: !7530)
!15330 = !DILocation(line: 2308, column: 40, scope: !15328)
!15331 = !DILocalVariable(name: "changed", arg: 2, scope: !15328, file: !3, line: 2308, type: !7)
!15332 = !DILocation(line: 2308, column: 59, scope: !15328)
!15333 = !DILocalVariable(name: "state", arg: 3, scope: !15328, file: !3, line: 2308, type: !7)
!15334 = !DILocation(line: 2308, column: 81, scope: !15328)
!15335 = !DILocalVariable(name: "w", scope: !15328, file: !3, line: 2310, type: !7857)
!15336 = !DILocation(line: 2310, column: 20, scope: !15328)
!15337 = !DILocalVariable(name: "prev", scope: !15328, file: !3, line: 2310, type: !7857)
!15338 = !DILocation(line: 2310, column: 24, scope: !15328)
!15339 = !DILocation(line: 2313, column: 11, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15328, file: !3, line: 2313, column: 2)
!15341 = !DILocation(line: 2313, column: 17, scope: !15340)
!15342 = !DILocation(line: 2313, column: 9, scope: !15340)
!15343 = !DILocation(line: 2313, column: 35, scope: !15340)
!15344 = !DILocation(line: 2313, column: 7, scope: !15340)
!15345 = !DILocation(line: 2313, column: 44, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15340, file: !3, line: 2313, column: 2)
!15347 = !DILocation(line: 2313, column: 46, scope: !15346)
!15348 = !DILocation(line: 2313, column: 2, scope: !15340)
!15349 = !DILocation(line: 2314, column: 7, scope: !15350)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 2314, column: 7)
!15351 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 2313, column: 69)
!15352 = !DILocation(line: 2314, column: 10, scope: !15350)
!15353 = !DILocation(line: 2314, column: 17, scope: !15350)
!15354 = !DILocation(line: 2314, column: 15, scope: !15350)
!15355 = !DILocation(line: 2314, column: 7, scope: !15351)
!15356 = !DILocation(line: 2315, column: 14, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 2314, column: 26)
!15358 = !DILocation(line: 2315, column: 4, scope: !15357)
!15359 = !DILocation(line: 2315, column: 7, scope: !15357)
!15360 = !DILocation(line: 2315, column: 12, scope: !15357)
!15361 = !DILocation(line: 2316, column: 4, scope: !15357)
!15362 = !DILocation(line: 2317, column: 8, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15357, file: !3, line: 2317, column: 8)
!15364 = !DILocation(line: 2317, column: 13, scope: !15363)
!15365 = !DILocation(line: 2317, column: 8, scope: !15357)
!15366 = !DILocation(line: 2318, column: 18, scope: !15363)
!15367 = !DILocation(line: 2318, column: 21, scope: !15363)
!15368 = !DILocation(line: 2318, column: 5, scope: !15363)
!15369 = !DILocation(line: 2318, column: 11, scope: !15363)
!15370 = !DILocation(line: 2318, column: 16, scope: !15363)
!15371 = !DILocation(line: 2320, column: 25, scope: !15363)
!15372 = !DILocation(line: 2320, column: 28, scope: !15363)
!15373 = !DILocation(line: 2320, column: 5, scope: !15363)
!15374 = !DILocation(line: 2320, column: 11, scope: !15363)
!15375 = !DILocation(line: 2320, column: 23, scope: !15363)
!15376 = !DILocation(line: 2321, column: 3, scope: !15357)
!15377 = !DILocation(line: 2322, column: 11, scope: !15350)
!15378 = !DILocation(line: 2322, column: 9, scope: !15350)
!15379 = !DILocation(line: 2323, column: 2, scope: !15351)
!15380 = !DILocation(line: 2313, column: 60, scope: !15346)
!15381 = !DILocation(line: 2313, column: 63, scope: !15346)
!15382 = !DILocation(line: 2313, column: 58, scope: !15346)
!15383 = !DILocation(line: 2313, column: 2, scope: !15346)
!15384 = distinct !{!15384, !15348, !15385}
!15385 = !DILocation(line: 2323, column: 2, scope: !15340)
!15386 = !DILocation(line: 2324, column: 1, scope: !15328)
!15387 = distinct !DISubprogram(name: "schedule_work", scope: !2765, file: !2765, line: 566, type: !15388, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15388 = !DISubroutineType(types: !15389)
!15389 = !{!771, !2774}
!15390 = !DILocalVariable(name: "work", arg: 1, scope: !15387, file: !2765, line: 566, type: !2774)
!15391 = !DILocation(line: 566, column: 54, scope: !15387)
!15392 = !DILocation(line: 568, column: 20, scope: !15387)
!15393 = !DILocation(line: 568, column: 31, scope: !15387)
!15394 = !DILocation(line: 568, column: 9, scope: !15387)
!15395 = !DILocation(line: 568, column: 2, scope: !15387)
!15396 = distinct !DISubprogram(name: "isr_txeom", scope: !3, file: !3, line: 2258, type: !15397, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15397 = !DISubroutineType(types: !15398)
!15398 = !{null, !7530, !476}
!15399 = !DILocalVariable(name: "info", arg: 1, scope: !15396, file: !3, line: 2258, type: !7530)
!15400 = !DILocation(line: 2258, column: 41, scope: !15396)
!15401 = !DILocalVariable(name: "status", arg: 2, scope: !15396, file: !3, line: 2258, type: !476)
!15402 = !DILocation(line: 2258, column: 62, scope: !15396)
!15403 = !DILocation(line: 2260, column: 2, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15396, file: !3, line: 2260, column: 2)
!15405 = !DILocation(line: 2260, column: 2, scope: !15396)
!15406 = !DILocation(line: 2262, column: 2, scope: !15396)
!15407 = !DILocation(line: 2263, column: 13, scope: !15396)
!15408 = !DILocation(line: 2263, column: 2, scope: !15396)
!15409 = !DILocation(line: 2264, column: 6, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15396, file: !3, line: 2264, column: 6)
!15411 = !DILocation(line: 2264, column: 13, scope: !15410)
!15412 = !DILocation(line: 2264, column: 6, scope: !15396)
!15413 = !DILocalVariable(name: "val", scope: !15414, file: !3, line: 2265, type: !476)
!15414 = distinct !DILexicalBlock(scope: !15410, file: !3, line: 2264, column: 28)
!15415 = !DILocation(line: 2265, column: 18, scope: !15414)
!15416 = !DILocation(line: 2265, column: 33, scope: !15414)
!15417 = !DILocation(line: 2265, column: 24, scope: !15414)
!15418 = !DILocation(line: 2266, column: 12, scope: !15414)
!15419 = !DILocation(line: 2266, column: 40, scope: !15414)
!15420 = !DILocation(line: 2266, column: 44, scope: !15414)
!15421 = !DILocation(line: 2266, column: 23, scope: !15414)
!15422 = !DILocation(line: 2266, column: 3, scope: !15414)
!15423 = !DILocation(line: 2267, column: 12, scope: !15414)
!15424 = !DILocation(line: 2267, column: 23, scope: !15414)
!15425 = !DILocation(line: 2267, column: 3, scope: !15414)
!15426 = !DILocation(line: 2268, column: 2, scope: !15414)
!15427 = !DILocation(line: 2270, column: 6, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15396, file: !3, line: 2270, column: 6)
!15429 = !DILocation(line: 2270, column: 12, scope: !15428)
!15430 = !DILocation(line: 2270, column: 6, scope: !15396)
!15431 = !DILocation(line: 2271, column: 7, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 2271, column: 7)
!15433 = distinct !DILexicalBlock(scope: !15428, file: !3, line: 2270, column: 23)
!15434 = !DILocation(line: 2271, column: 13, scope: !15432)
!15435 = !DILocation(line: 2271, column: 20, scope: !15432)
!15436 = !DILocation(line: 2271, column: 25, scope: !15432)
!15437 = !DILocation(line: 2271, column: 7, scope: !15433)
!15438 = !DILocation(line: 2272, column: 8, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15440, file: !3, line: 2272, column: 8)
!15440 = distinct !DILexicalBlock(scope: !15432, file: !3, line: 2271, column: 45)
!15441 = !DILocation(line: 2272, column: 15, scope: !15439)
!15442 = !DILocation(line: 2272, column: 8, scope: !15440)
!15443 = !DILocation(line: 2273, column: 5, scope: !15439)
!15444 = !DILocation(line: 2273, column: 11, scope: !15439)
!15445 = !DILocation(line: 2273, column: 18, scope: !15439)
!15446 = !DILocation(line: 2273, column: 25, scope: !15439)
!15447 = !DILocation(line: 2274, column: 13, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15439, file: !3, line: 2274, column: 13)
!15449 = !DILocation(line: 2274, column: 20, scope: !15448)
!15450 = !DILocation(line: 2274, column: 13, scope: !15439)
!15451 = !DILocation(line: 2275, column: 5, scope: !15448)
!15452 = !DILocation(line: 2275, column: 11, scope: !15448)
!15453 = !DILocation(line: 2275, column: 18, scope: !15448)
!15454 = !DILocation(line: 2275, column: 22, scope: !15448)
!15455 = !DILocation(line: 2276, column: 3, scope: !15440)
!15456 = !DILocation(line: 2278, column: 20, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 2278, column: 7)
!15458 = !DILocation(line: 2278, column: 7, scope: !15457)
!15459 = !DILocation(line: 2278, column: 7, scope: !15433)
!15460 = !DILocation(line: 2279, column: 13, scope: !15461)
!15461 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 2278, column: 27)
!15462 = !DILocation(line: 2279, column: 4, scope: !15461)
!15463 = !DILocation(line: 2280, column: 20, scope: !15461)
!15464 = !DILocation(line: 2280, column: 4, scope: !15461)
!15465 = !DILocation(line: 2281, column: 4, scope: !15461)
!15466 = !DILocation(line: 2283, column: 3, scope: !15433)
!15467 = !DILocation(line: 2283, column: 9, scope: !15433)
!15468 = !DILocation(line: 2283, column: 19, scope: !15433)
!15469 = !DILocation(line: 2285, column: 14, scope: !15433)
!15470 = !DILocation(line: 2285, column: 20, scope: !15433)
!15471 = !DILocation(line: 2285, column: 3, scope: !15433)
!15472 = !DILocation(line: 2287, column: 7, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 2287, column: 7)
!15474 = !DILocation(line: 2287, column: 13, scope: !15473)
!15475 = !DILocation(line: 2287, column: 20, scope: !15473)
!15476 = !DILocation(line: 2287, column: 25, scope: !15473)
!15477 = !DILocation(line: 2287, column: 44, scope: !15473)
!15478 = !DILocation(line: 2287, column: 47, scope: !15473)
!15479 = !DILocation(line: 2287, column: 53, scope: !15473)
!15480 = !DILocation(line: 2287, column: 7, scope: !15433)
!15481 = !DILocation(line: 2288, column: 4, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 2287, column: 74)
!15483 = !DILocation(line: 2288, column: 10, scope: !15482)
!15484 = !DILocation(line: 2288, column: 18, scope: !15482)
!15485 = !DILocation(line: 2289, column: 4, scope: !15482)
!15486 = !DILocation(line: 2289, column: 10, scope: !15482)
!15487 = !DILocation(line: 2289, column: 30, scope: !15482)
!15488 = !DILocation(line: 2290, column: 16, scope: !15482)
!15489 = !DILocation(line: 2290, column: 4, scope: !15482)
!15490 = !DILocation(line: 2291, column: 3, scope: !15482)
!15491 = !DILocation(line: 2294, column: 7, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15433, file: !3, line: 2294, column: 7)
!15493 = !DILocation(line: 2294, column: 13, scope: !15492)
!15494 = !DILocation(line: 2294, column: 7, scope: !15433)
!15495 = !DILocation(line: 2295, column: 20, scope: !15492)
!15496 = !DILocation(line: 2295, column: 4, scope: !15492)
!15497 = !DILocation(line: 2299, column: 8, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15499, file: !3, line: 2299, column: 8)
!15499 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 2298, column: 3)
!15500 = !DILocation(line: 2299, column: 14, scope: !15498)
!15501 = !DILocation(line: 2299, column: 19, scope: !15498)
!15502 = !DILocation(line: 2299, column: 23, scope: !15498)
!15503 = !DILocation(line: 2299, column: 27, scope: !15498)
!15504 = !DILocation(line: 2299, column: 33, scope: !15498)
!15505 = !DILocation(line: 2299, column: 38, scope: !15498)
!15506 = !DILocation(line: 2299, column: 43, scope: !15498)
!15507 = !DILocation(line: 2299, column: 51, scope: !15498)
!15508 = !DILocation(line: 2299, column: 54, scope: !15498)
!15509 = !DILocation(line: 2299, column: 60, scope: !15498)
!15510 = !DILocation(line: 2299, column: 65, scope: !15498)
!15511 = !DILocation(line: 2299, column: 70, scope: !15498)
!15512 = !DILocation(line: 2299, column: 8, scope: !15499)
!15513 = !DILocation(line: 2300, column: 13, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 2299, column: 83)
!15515 = !DILocation(line: 2300, column: 5, scope: !15514)
!15516 = !DILocation(line: 2301, column: 5, scope: !15514)
!15517 = !DILocation(line: 2303, column: 4, scope: !15499)
!15518 = !DILocation(line: 2303, column: 10, scope: !15499)
!15519 = !DILocation(line: 2303, column: 21, scope: !15499)
!15520 = !DILocation(line: 2305, column: 2, scope: !15433)
!15521 = !DILocation(line: 2306, column: 1, scope: !15396)
!15522 = distinct !DISubprogram(name: "isr_rxdata", scope: !3, file: !3, line: 2086, type: !8337, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15523 = !DILocalVariable(name: "info", arg: 1, scope: !15522, file: !3, line: 2086, type: !7530)
!15524 = !DILocation(line: 2086, column: 42, scope: !15522)
!15525 = !DILocalVariable(name: "count", scope: !15522, file: !3, line: 2088, type: !7)
!15526 = !DILocation(line: 2088, column: 15, scope: !15522)
!15527 = !DILocation(line: 2088, column: 23, scope: !15522)
!15528 = !DILocation(line: 2088, column: 29, scope: !15522)
!15529 = !DILocalVariable(name: "i", scope: !15522, file: !3, line: 2089, type: !7)
!15530 = !DILocation(line: 2089, column: 15, scope: !15522)
!15531 = !DILocation(line: 2089, column: 19, scope: !15522)
!15532 = !DILocation(line: 2089, column: 25, scope: !15522)
!15533 = !DILocalVariable(name: "reg", scope: !15522, file: !3, line: 2090, type: !476)
!15534 = !DILocation(line: 2090, column: 17, scope: !15522)
!15535 = !DILocation(line: 2092, column: 2, scope: !15522)
!15536 = !DILocation(line: 2092, column: 18, scope: !15522)
!15537 = !DILocation(line: 2092, column: 9, scope: !15522)
!15538 = !DILocation(line: 2092, column: 29, scope: !15522)
!15539 = !DILocation(line: 2093, column: 18, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15522, file: !3, line: 2092, column: 43)
!15541 = !DILocation(line: 2093, column: 9, scope: !15540)
!15542 = !DILocation(line: 2093, column: 7, scope: !15540)
!15543 = !DILocation(line: 2094, column: 3, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 2094, column: 3)
!15545 = !DILocation(line: 2094, column: 3, scope: !15540)
!15546 = !DILocation(line: 2095, column: 7, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 2095, column: 7)
!15548 = !DILocation(line: 2095, column: 7, scope: !15540)
!15549 = !DILocation(line: 2097, column: 12, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15547, file: !3, line: 2095, column: 38)
!15551 = !DILocation(line: 2097, column: 4, scope: !15550)
!15552 = !DILocation(line: 2098, column: 4, scope: !15550)
!15553 = !DILocation(line: 2098, column: 10, scope: !15550)
!15554 = !DILocation(line: 2098, column: 21, scope: !15550)
!15555 = !DILocation(line: 2099, column: 4, scope: !15550)
!15556 = distinct !{!15556, !15535, !15557}
!15557 = !DILocation(line: 2114, column: 2, scope: !15522)
!15558 = !DILocation(line: 2101, column: 48, scope: !15540)
!15559 = !DILocation(line: 2101, column: 33, scope: !15540)
!15560 = !DILocation(line: 2101, column: 3, scope: !15540)
!15561 = !DILocation(line: 2101, column: 9, scope: !15540)
!15562 = !DILocation(line: 2101, column: 15, scope: !15540)
!15563 = !DILocation(line: 2101, column: 18, scope: !15540)
!15564 = !DILocation(line: 2101, column: 27, scope: !15540)
!15565 = !DILocation(line: 2101, column: 31, scope: !15540)
!15566 = !DILocation(line: 2103, column: 7, scope: !15567)
!15567 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 2103, column: 7)
!15568 = !DILocation(line: 2103, column: 13, scope: !15567)
!15569 = !DILocation(line: 2103, column: 20, scope: !15567)
!15570 = !DILocation(line: 2103, column: 25, scope: !15567)
!15571 = !DILocation(line: 2103, column: 7, scope: !15540)
!15572 = !DILocation(line: 2104, column: 50, scope: !15567)
!15573 = !DILocation(line: 2104, column: 54, scope: !15567)
!15574 = !DILocation(line: 2104, column: 34, scope: !15567)
!15575 = !DILocation(line: 2104, column: 4, scope: !15567)
!15576 = !DILocation(line: 2104, column: 10, scope: !15567)
!15577 = !DILocation(line: 2104, column: 16, scope: !15567)
!15578 = !DILocation(line: 2104, column: 19, scope: !15567)
!15579 = !DILocation(line: 2104, column: 28, scope: !15567)
!15580 = !DILocation(line: 2104, column: 32, scope: !15567)
!15581 = !DILocation(line: 2105, column: 7, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15540, file: !3, line: 2105, column: 7)
!15583 = !DILocation(line: 2105, column: 16, scope: !15582)
!15584 = !DILocation(line: 2105, column: 22, scope: !15582)
!15585 = !DILocation(line: 2105, column: 13, scope: !15582)
!15586 = !DILocation(line: 2105, column: 38, scope: !15582)
!15587 = !DILocation(line: 2105, column: 42, scope: !15582)
!15588 = !DILocation(line: 2105, column: 46, scope: !15582)
!15589 = !DILocation(line: 2105, column: 7, scope: !15540)
!15590 = !DILocation(line: 2107, column: 4, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 2105, column: 56)
!15592 = !DILocation(line: 2108, column: 4, scope: !15591)
!15593 = !DILocation(line: 2109, column: 34, scope: !15591)
!15594 = !DILocation(line: 2109, column: 4, scope: !15591)
!15595 = !DILocation(line: 2109, column: 10, scope: !15591)
!15596 = !DILocation(line: 2109, column: 26, scope: !15591)
!15597 = !DILocation(line: 2110, column: 8, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15591, file: !3, line: 2110, column: 8)
!15599 = !DILocation(line: 2110, column: 15, scope: !15598)
!15600 = !DILocation(line: 2110, column: 21, scope: !15598)
!15601 = !DILocation(line: 2110, column: 12, scope: !15598)
!15602 = !DILocation(line: 2110, column: 8, scope: !15591)
!15603 = !DILocation(line: 2111, column: 7, scope: !15598)
!15604 = !DILocation(line: 2111, column: 5, scope: !15598)
!15605 = !DILocation(line: 2112, column: 4, scope: !15591)
!15606 = !DILocation(line: 2112, column: 10, scope: !15591)
!15607 = !DILocation(line: 2112, column: 21, scope: !15591)
!15608 = !DILocation(line: 2113, column: 3, scope: !15591)
!15609 = !DILocation(line: 2116, column: 26, scope: !15522)
!15610 = !DILocation(line: 2116, column: 2, scope: !15522)
!15611 = !DILocation(line: 2116, column: 8, scope: !15522)
!15612 = !DILocation(line: 2116, column: 24, scope: !15522)
!15613 = !DILocation(line: 2117, column: 26, scope: !15522)
!15614 = !DILocation(line: 2117, column: 2, scope: !15522)
!15615 = !DILocation(line: 2117, column: 8, scope: !15522)
!15616 = !DILocation(line: 2117, column: 24, scope: !15522)
!15617 = !DILocation(line: 2118, column: 1, scope: !15522)
!15618 = distinct !DISubprogram(name: "dsr_change", scope: !3, file: !3, line: 1974, type: !15397, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15619 = !DILocalVariable(name: "info", arg: 1, scope: !15618, file: !3, line: 1974, type: !7530)
!15620 = !DILocation(line: 1974, column: 42, scope: !15618)
!15621 = !DILocalVariable(name: "status", arg: 2, scope: !15618, file: !3, line: 1974, type: !476)
!15622 = !DILocation(line: 1974, column: 63, scope: !15618)
!15623 = !DILocation(line: 1976, column: 6, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 1976, column: 6)
!15625 = !DILocation(line: 1976, column: 13, scope: !15624)
!15626 = !DILocation(line: 1976, column: 6, scope: !15618)
!15627 = !DILocation(line: 1977, column: 3, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 1976, column: 21)
!15629 = !DILocation(line: 1977, column: 9, scope: !15628)
!15630 = !DILocation(line: 1977, column: 17, scope: !15628)
!15631 = !DILocation(line: 1978, column: 3, scope: !15628)
!15632 = !DILocation(line: 1978, column: 9, scope: !15628)
!15633 = !DILocation(line: 1978, column: 29, scope: !15628)
!15634 = !DILocation(line: 1978, column: 35, scope: !15628)
!15635 = !DILocation(line: 1979, column: 2, scope: !15628)
!15636 = !DILocation(line: 1980, column: 3, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 1979, column: 9)
!15638 = !DILocation(line: 1980, column: 9, scope: !15637)
!15639 = !DILocation(line: 1980, column: 17, scope: !15637)
!15640 = !DILocation(line: 1981, column: 3, scope: !15637)
!15641 = !DILocation(line: 1981, column: 9, scope: !15637)
!15642 = !DILocation(line: 1981, column: 29, scope: !15637)
!15643 = !DILocation(line: 1981, column: 37, scope: !15637)
!15644 = !DILocation(line: 1983, column: 2, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 1983, column: 2)
!15646 = !DILocation(line: 1983, column: 2, scope: !15618)
!15647 = !DILocation(line: 1984, column: 7, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 1984, column: 6)
!15649 = !DILocation(line: 1984, column: 13, scope: !15648)
!15650 = !DILocation(line: 1984, column: 26, scope: !15648)
!15651 = !DILocation(line: 1984, column: 29, scope: !15648)
!15652 = !DILocation(line: 1984, column: 6, scope: !15618)
!15653 = !DILocation(line: 1985, column: 3, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15648, file: !3, line: 1984, column: 55)
!15655 = !DILocation(line: 1986, column: 3, scope: !15654)
!15656 = !DILocation(line: 1988, column: 2, scope: !15618)
!15657 = !DILocation(line: 1988, column: 8, scope: !15618)
!15658 = !DILocation(line: 1988, column: 15, scope: !15618)
!15659 = !DILocation(line: 1988, column: 18, scope: !15618)
!15660 = !DILocation(line: 1989, column: 2, scope: !15618)
!15661 = !DILocation(line: 1990, column: 2, scope: !15618)
!15662 = !DILocation(line: 1991, column: 2, scope: !15618)
!15663 = !DILocation(line: 1991, column: 8, scope: !15618)
!15664 = !DILocation(line: 1991, column: 19, scope: !15618)
!15665 = !DILocation(line: 1992, column: 1, scope: !15618)
!15666 = distinct !DISubprogram(name: "cts_change", scope: !3, file: !3, line: 1994, type: !15397, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15667 = !DILocalVariable(name: "info", arg: 1, scope: !15666, file: !3, line: 1994, type: !7530)
!15668 = !DILocation(line: 1994, column: 42, scope: !15666)
!15669 = !DILocalVariable(name: "status", arg: 2, scope: !15666, file: !3, line: 1994, type: !476)
!15670 = !DILocation(line: 1994, column: 63, scope: !15666)
!15671 = !DILocation(line: 1996, column: 6, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 1996, column: 6)
!15673 = !DILocation(line: 1996, column: 13, scope: !15672)
!15674 = !DILocation(line: 1996, column: 6, scope: !15666)
!15675 = !DILocation(line: 1997, column: 3, scope: !15676)
!15676 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 1996, column: 21)
!15677 = !DILocation(line: 1997, column: 9, scope: !15676)
!15678 = !DILocation(line: 1997, column: 17, scope: !15676)
!15679 = !DILocation(line: 1998, column: 3, scope: !15676)
!15680 = !DILocation(line: 1998, column: 9, scope: !15676)
!15681 = !DILocation(line: 1998, column: 29, scope: !15676)
!15682 = !DILocation(line: 1998, column: 35, scope: !15676)
!15683 = !DILocation(line: 1999, column: 2, scope: !15676)
!15684 = !DILocation(line: 2000, column: 3, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 1999, column: 9)
!15686 = !DILocation(line: 2000, column: 9, scope: !15685)
!15687 = !DILocation(line: 2000, column: 17, scope: !15685)
!15688 = !DILocation(line: 2001, column: 3, scope: !15685)
!15689 = !DILocation(line: 2001, column: 9, scope: !15685)
!15690 = !DILocation(line: 2001, column: 29, scope: !15685)
!15691 = !DILocation(line: 2001, column: 37, scope: !15685)
!15692 = !DILocation(line: 2003, column: 2, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 2003, column: 2)
!15694 = !DILocation(line: 2003, column: 2, scope: !15666)
!15695 = !DILocation(line: 2004, column: 7, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 2004, column: 6)
!15697 = !DILocation(line: 2004, column: 13, scope: !15696)
!15698 = !DILocation(line: 2004, column: 26, scope: !15696)
!15699 = !DILocation(line: 2004, column: 29, scope: !15696)
!15700 = !DILocation(line: 2004, column: 6, scope: !15666)
!15701 = !DILocation(line: 2005, column: 3, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15696, file: !3, line: 2004, column: 55)
!15703 = !DILocation(line: 2006, column: 3, scope: !15702)
!15704 = !DILocation(line: 2008, column: 2, scope: !15666)
!15705 = !DILocation(line: 2008, column: 8, scope: !15666)
!15706 = !DILocation(line: 2008, column: 15, scope: !15666)
!15707 = !DILocation(line: 2008, column: 18, scope: !15666)
!15708 = !DILocation(line: 2009, column: 2, scope: !15666)
!15709 = !DILocation(line: 2010, column: 2, scope: !15666)
!15710 = !DILocation(line: 2011, column: 2, scope: !15666)
!15711 = !DILocation(line: 2011, column: 8, scope: !15666)
!15712 = !DILocation(line: 2011, column: 19, scope: !15666)
!15713 = !DILocation(line: 2013, column: 28, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15666, file: !3, line: 2013, column: 6)
!15715 = !DILocation(line: 2013, column: 34, scope: !15714)
!15716 = !DILocation(line: 2013, column: 6, scope: !15714)
!15717 = !DILocation(line: 2013, column: 6, scope: !15666)
!15718 = !DILocation(line: 2014, column: 7, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15720, file: !3, line: 2014, column: 7)
!15720 = distinct !DILexicalBlock(scope: !15714, file: !3, line: 2013, column: 41)
!15721 = !DILocation(line: 2014, column: 13, scope: !15719)
!15722 = !DILocation(line: 2014, column: 18, scope: !15719)
!15723 = !DILocation(line: 2014, column: 7, scope: !15720)
!15724 = !DILocation(line: 2015, column: 8, scope: !15725)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 2015, column: 8)
!15726 = distinct !DILexicalBlock(scope: !15719, file: !3, line: 2014, column: 23)
!15727 = !DILocation(line: 2015, column: 14, scope: !15725)
!15728 = !DILocation(line: 2015, column: 19, scope: !15725)
!15729 = !DILocation(line: 2015, column: 24, scope: !15725)
!15730 = !DILocation(line: 2015, column: 8, scope: !15726)
!15731 = !DILocation(line: 2016, column: 9, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 2016, column: 9)
!15733 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 2015, column: 36)
!15734 = !DILocation(line: 2016, column: 15, scope: !15732)
!15735 = !DILocation(line: 2016, column: 23, scope: !15732)
!15736 = !DILocation(line: 2016, column: 9, scope: !15733)
!15737 = !DILocation(line: 2017, column: 7, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15732, file: !3, line: 2016, column: 43)
!15739 = !DILocation(line: 2017, column: 13, scope: !15738)
!15740 = !DILocation(line: 2017, column: 18, scope: !15738)
!15741 = !DILocation(line: 2017, column: 23, scope: !15738)
!15742 = !DILocation(line: 2017, column: 34, scope: !15738)
!15743 = !DILocation(line: 2018, column: 6, scope: !15738)
!15744 = !DILocation(line: 2018, column: 12, scope: !15738)
!15745 = !DILocation(line: 2018, column: 23, scope: !15738)
!15746 = !DILocation(line: 2019, column: 6, scope: !15738)
!15747 = !DILocation(line: 2021, column: 4, scope: !15733)
!15748 = !DILocation(line: 2022, column: 11, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !3, line: 2022, column: 9)
!15750 = distinct !DILexicalBlock(scope: !15725, file: !3, line: 2021, column: 11)
!15751 = !DILocation(line: 2022, column: 17, scope: !15749)
!15752 = !DILocation(line: 2022, column: 25, scope: !15749)
!15753 = !DILocation(line: 2022, column: 9, scope: !15750)
!15754 = !DILocation(line: 2023, column: 7, scope: !15749)
!15755 = !DILocation(line: 2023, column: 13, scope: !15749)
!15756 = !DILocation(line: 2023, column: 18, scope: !15749)
!15757 = !DILocation(line: 2023, column: 23, scope: !15749)
!15758 = !DILocation(line: 2023, column: 34, scope: !15749)
!15759 = !DILocation(line: 2025, column: 3, scope: !15726)
!15760 = !DILocation(line: 2026, column: 2, scope: !15720)
!15761 = !DILocation(line: 2027, column: 1, scope: !15666)
!15762 = distinct !DISubprogram(name: "dcd_change", scope: !3, file: !3, line: 2029, type: !15397, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15763 = !DILocalVariable(name: "info", arg: 1, scope: !15762, file: !3, line: 2029, type: !7530)
!15764 = !DILocation(line: 2029, column: 42, scope: !15762)
!15765 = !DILocalVariable(name: "status", arg: 2, scope: !15762, file: !3, line: 2029, type: !476)
!15766 = !DILocation(line: 2029, column: 63, scope: !15762)
!15767 = !DILocation(line: 2031, column: 6, scope: !15768)
!15768 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 2031, column: 6)
!15769 = !DILocation(line: 2031, column: 13, scope: !15768)
!15770 = !DILocation(line: 2031, column: 6, scope: !15762)
!15771 = !DILocation(line: 2032, column: 3, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15768, file: !3, line: 2031, column: 21)
!15773 = !DILocation(line: 2032, column: 9, scope: !15772)
!15774 = !DILocation(line: 2032, column: 17, scope: !15772)
!15775 = !DILocation(line: 2033, column: 3, scope: !15772)
!15776 = !DILocation(line: 2033, column: 9, scope: !15772)
!15777 = !DILocation(line: 2033, column: 29, scope: !15772)
!15778 = !DILocation(line: 2033, column: 35, scope: !15772)
!15779 = !DILocation(line: 2034, column: 2, scope: !15772)
!15780 = !DILocation(line: 2035, column: 3, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15768, file: !3, line: 2034, column: 9)
!15782 = !DILocation(line: 2035, column: 9, scope: !15781)
!15783 = !DILocation(line: 2035, column: 17, scope: !15781)
!15784 = !DILocation(line: 2036, column: 3, scope: !15781)
!15785 = !DILocation(line: 2036, column: 9, scope: !15781)
!15786 = !DILocation(line: 2036, column: 29, scope: !15781)
!15787 = !DILocation(line: 2036, column: 37, scope: !15781)
!15788 = !DILocation(line: 2038, column: 2, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 2038, column: 2)
!15790 = !DILocation(line: 2038, column: 2, scope: !15762)
!15791 = !DILocation(line: 2039, column: 7, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 2039, column: 6)
!15793 = !DILocation(line: 2039, column: 13, scope: !15792)
!15794 = !DILocation(line: 2039, column: 26, scope: !15792)
!15795 = !DILocation(line: 2039, column: 29, scope: !15792)
!15796 = !DILocation(line: 2039, column: 6, scope: !15762)
!15797 = !DILocation(line: 2040, column: 3, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15792, file: !3, line: 2039, column: 55)
!15799 = !DILocation(line: 2041, column: 3, scope: !15798)
!15800 = !DILocation(line: 2043, column: 2, scope: !15762)
!15801 = !DILocation(line: 2043, column: 8, scope: !15762)
!15802 = !DILocation(line: 2043, column: 15, scope: !15762)
!15803 = !DILocation(line: 2043, column: 18, scope: !15762)
!15804 = !DILocation(line: 2045, column: 6, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 2045, column: 6)
!15806 = !DILocation(line: 2045, column: 12, scope: !15805)
!15807 = !DILocation(line: 2045, column: 6, scope: !15762)
!15808 = !DILocation(line: 2046, column: 7, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15810, file: !3, line: 2046, column: 7)
!15810 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 2045, column: 22)
!15811 = !DILocation(line: 2046, column: 13, scope: !15809)
!15812 = !DILocation(line: 2046, column: 21, scope: !15809)
!15813 = !DILocation(line: 2046, column: 7, scope: !15810)
!15814 = !DILocation(line: 2047, column: 21, scope: !15809)
!15815 = !DILocation(line: 2047, column: 27, scope: !15809)
!15816 = !DILocation(line: 2047, column: 4, scope: !15809)
!15817 = !DILocation(line: 2049, column: 22, scope: !15809)
!15818 = !DILocation(line: 2049, column: 28, scope: !15809)
!15819 = !DILocation(line: 2049, column: 4, scope: !15809)
!15820 = !DILocation(line: 2050, column: 2, scope: !15810)
!15821 = !DILocation(line: 2052, column: 2, scope: !15762)
!15822 = !DILocation(line: 2053, column: 2, scope: !15762)
!15823 = !DILocation(line: 2054, column: 2, scope: !15762)
!15824 = !DILocation(line: 2054, column: 8, scope: !15762)
!15825 = !DILocation(line: 2054, column: 19, scope: !15762)
!15826 = !DILocation(line: 2056, column: 30, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 2056, column: 6)
!15828 = !DILocation(line: 2056, column: 36, scope: !15827)
!15829 = !DILocation(line: 2056, column: 6, scope: !15827)
!15830 = !DILocation(line: 2056, column: 6, scope: !15762)
!15831 = !DILocation(line: 2057, column: 7, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !3, line: 2057, column: 7)
!15833 = distinct !DILexicalBlock(scope: !15827, file: !3, line: 2056, column: 43)
!15834 = !DILocation(line: 2057, column: 13, scope: !15832)
!15835 = !DILocation(line: 2057, column: 21, scope: !15832)
!15836 = !DILocation(line: 2057, column: 7, scope: !15833)
!15837 = !DILocation(line: 2058, column: 4, scope: !15832)
!15838 = !DILocation(line: 2060, column: 8, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !3, line: 2060, column: 8)
!15840 = distinct !DILexicalBlock(scope: !15832, file: !3, line: 2059, column: 8)
!15841 = !DILocation(line: 2060, column: 14, scope: !15839)
!15842 = !DILocation(line: 2060, column: 19, scope: !15839)
!15843 = !DILocation(line: 2060, column: 8, scope: !15840)
!15844 = !DILocation(line: 2061, column: 16, scope: !15839)
!15845 = !DILocation(line: 2061, column: 22, scope: !15839)
!15846 = !DILocation(line: 2061, column: 27, scope: !15839)
!15847 = !DILocation(line: 2061, column: 5, scope: !15839)
!15848 = !DILocation(line: 2063, column: 2, scope: !15833)
!15849 = !DILocation(line: 2064, column: 1, scope: !15762)
!15850 = distinct !DISubprogram(name: "ri_change", scope: !3, file: !3, line: 2066, type: !15397, scopeLine: 2067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15851 = !DILocalVariable(name: "info", arg: 1, scope: !15850, file: !3, line: 2066, type: !7530)
!15852 = !DILocation(line: 2066, column: 41, scope: !15850)
!15853 = !DILocalVariable(name: "status", arg: 2, scope: !15850, file: !3, line: 2066, type: !476)
!15854 = !DILocation(line: 2066, column: 62, scope: !15850)
!15855 = !DILocation(line: 2068, column: 6, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15850, file: !3, line: 2068, column: 6)
!15857 = !DILocation(line: 2068, column: 13, scope: !15856)
!15858 = !DILocation(line: 2068, column: 6, scope: !15850)
!15859 = !DILocation(line: 2069, column: 3, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15856, file: !3, line: 2068, column: 21)
!15861 = !DILocation(line: 2069, column: 9, scope: !15860)
!15862 = !DILocation(line: 2069, column: 17, scope: !15860)
!15863 = !DILocation(line: 2070, column: 3, scope: !15860)
!15864 = !DILocation(line: 2070, column: 9, scope: !15860)
!15865 = !DILocation(line: 2070, column: 29, scope: !15860)
!15866 = !DILocation(line: 2070, column: 34, scope: !15860)
!15867 = !DILocation(line: 2071, column: 2, scope: !15860)
!15868 = !DILocation(line: 2072, column: 3, scope: !15869)
!15869 = distinct !DILexicalBlock(scope: !15856, file: !3, line: 2071, column: 9)
!15870 = !DILocation(line: 2072, column: 9, scope: !15869)
!15871 = !DILocation(line: 2072, column: 17, scope: !15869)
!15872 = !DILocation(line: 2073, column: 3, scope: !15869)
!15873 = !DILocation(line: 2073, column: 9, scope: !15869)
!15874 = !DILocation(line: 2073, column: 29, scope: !15869)
!15875 = !DILocation(line: 2073, column: 36, scope: !15869)
!15876 = !DILocation(line: 2075, column: 2, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15850, file: !3, line: 2075, column: 2)
!15878 = !DILocation(line: 2075, column: 2, scope: !15850)
!15879 = !DILocation(line: 2076, column: 7, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15850, file: !3, line: 2076, column: 6)
!15881 = !DILocation(line: 2076, column: 13, scope: !15880)
!15882 = !DILocation(line: 2076, column: 25, scope: !15880)
!15883 = !DILocation(line: 2076, column: 28, scope: !15880)
!15884 = !DILocation(line: 2076, column: 6, scope: !15850)
!15885 = !DILocation(line: 2077, column: 3, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15880, file: !3, line: 2076, column: 54)
!15887 = !DILocation(line: 2078, column: 3, scope: !15886)
!15888 = !DILocation(line: 2080, column: 2, scope: !15850)
!15889 = !DILocation(line: 2080, column: 8, scope: !15850)
!15890 = !DILocation(line: 2080, column: 15, scope: !15850)
!15891 = !DILocation(line: 2080, column: 18, scope: !15850)
!15892 = !DILocation(line: 2081, column: 2, scope: !15850)
!15893 = !DILocation(line: 2082, column: 2, scope: !15850)
!15894 = !DILocation(line: 2083, column: 2, scope: !15850)
!15895 = !DILocation(line: 2083, column: 8, scope: !15850)
!15896 = !DILocation(line: 2083, column: 19, scope: !15850)
!15897 = !DILocation(line: 2084, column: 1, scope: !15850)
!15898 = distinct !DISubprogram(name: "unsent_tbufs", scope: !3, file: !3, line: 2234, type: !10822, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15899 = !DILocalVariable(name: "info", arg: 1, scope: !15898, file: !3, line: 2234, type: !7530)
!15900 = !DILocation(line: 2234, column: 44, scope: !15898)
!15901 = !DILocalVariable(name: "i", scope: !15898, file: !3, line: 2236, type: !7)
!15902 = !DILocation(line: 2236, column: 15, scope: !15898)
!15903 = !DILocation(line: 2236, column: 19, scope: !15898)
!15904 = !DILocation(line: 2236, column: 25, scope: !15898)
!15905 = !DILocalVariable(name: "rc", scope: !15898, file: !3, line: 2237, type: !771)
!15906 = !DILocation(line: 2237, column: 7, scope: !15898)
!15907 = !DILocation(line: 2244, column: 2, scope: !15898)
!15908 = !DILocation(line: 2245, column: 7, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 2245, column: 7)
!15910 = distinct !DILexicalBlock(scope: !15898, file: !3, line: 2244, column: 5)
!15911 = !DILocation(line: 2245, column: 7, scope: !15910)
!15912 = !DILocation(line: 2246, column: 5, scope: !15909)
!15913 = !DILocation(line: 2246, column: 4, scope: !15909)
!15914 = !DILocation(line: 2248, column: 8, scope: !15909)
!15915 = !DILocation(line: 2248, column: 14, scope: !15909)
!15916 = !DILocation(line: 2248, column: 25, scope: !15909)
!15917 = !DILocation(line: 2248, column: 6, scope: !15909)
!15918 = !DILocation(line: 2249, column: 8, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15910, file: !3, line: 2249, column: 7)
!15920 = !DILocation(line: 2249, column: 7, scope: !15910)
!15921 = !DILocation(line: 2250, column: 4, scope: !15919)
!15922 = !DILocation(line: 2251, column: 22, scope: !15910)
!15923 = !DILocation(line: 2251, column: 3, scope: !15910)
!15924 = !DILocation(line: 2251, column: 9, scope: !15910)
!15925 = !DILocation(line: 2251, column: 20, scope: !15910)
!15926 = !DILocation(line: 2252, column: 6, scope: !15910)
!15927 = !DILocation(line: 2253, column: 2, scope: !15910)
!15928 = !DILocation(line: 2253, column: 11, scope: !15898)
!15929 = !DILocation(line: 2253, column: 16, scope: !15898)
!15930 = !DILocation(line: 2253, column: 22, scope: !15898)
!15931 = !DILocation(line: 2253, column: 13, scope: !15898)
!15932 = distinct !{!15932, !15907, !15933}
!15933 = !DILocation(line: 2253, column: 34, scope: !15898)
!15934 = !DILocation(line: 2255, column: 9, scope: !15898)
!15935 = !DILocation(line: 2255, column: 2, scope: !15898)
!15936 = distinct !DISubprogram(name: "tty_port_cts_enabled", scope: !3762, file: !3762, line: 612, type: !13160, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15937 = !DILocalVariable(name: "port", arg: 1, scope: !15936, file: !3762, line: 612, type: !4766)
!15938 = !DILocation(line: 612, column: 58, scope: !15936)
!15939 = !DILocation(line: 614, column: 38, scope: !15936)
!15940 = !DILocation(line: 614, column: 44, scope: !15936)
!15941 = !DILocation(line: 614, column: 9, scope: !15936)
!15942 = !DILocation(line: 614, column: 2, scope: !15936)
!15943 = distinct !DISubprogram(name: "tty_port_check_carrier", scope: !3762, file: !3762, line: 638, type: !13160, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15944 = !DILocalVariable(name: "port", arg: 1, scope: !15943, file: !3762, line: 638, type: !4766)
!15945 = !DILocation(line: 638, column: 60, scope: !15943)
!15946 = !DILocation(line: 640, column: 38, scope: !15943)
!15947 = !DILocation(line: 640, column: 44, scope: !15943)
!15948 = !DILocation(line: 640, column: 9, scope: !15943)
!15949 = !DILocation(line: 640, column: 2, scope: !15943)
!15950 = distinct !DISubprogram(name: "queue_work", scope: !2765, file: !2765, line: 504, type: !15951, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!15951 = !DISubroutineType(types: !15952)
!15952 = !{!771, !6083, !2774}
!15953 = !DILocalVariable(name: "wq", arg: 1, scope: !15950, file: !2765, line: 504, type: !6083)
!15954 = !DILocation(line: 504, column: 56, scope: !15950)
!15955 = !DILocalVariable(name: "work", arg: 2, scope: !15950, file: !2765, line: 505, type: !2774)
!15956 = !DILocation(line: 505, column: 30, scope: !15950)
!15957 = !DILocation(line: 507, column: 41, scope: !15950)
!15958 = !DILocation(line: 507, column: 45, scope: !15950)
!15959 = !DILocation(line: 507, column: 9, scope: !15950)
!15960 = !DILocation(line: 507, column: 2, scope: !15950)
!15961 = !DILocalVariable(name: "info", arg: 1, scope: !8118, file: !3, line: 4928, type: !7530)
!15962 = !DILocation(line: 4928, column: 44, scope: !8118)
!15963 = !DILocalVariable(name: "i", scope: !8118, file: !3, line: 4933, type: !7)
!15964 = !DILocation(line: 4933, column: 15, scope: !8118)
!15965 = !DILocalVariable(name: "rc", scope: !8118, file: !3, line: 4934, type: !32)
!15966 = !DILocation(line: 4934, column: 6, scope: !8118)
!15967 = !DILocation(line: 4936, column: 8, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 4936, column: 2)
!15969 = !DILocation(line: 4936, column: 7, scope: !15968)
!15970 = !DILocation(line: 4936, column: 13, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 4936, column: 2)
!15972 = !DILocation(line: 4936, column: 17, scope: !15971)
!15973 = !DILocation(line: 4936, column: 15, scope: !15971)
!15974 = !DILocation(line: 4936, column: 2, scope: !15968)
!15975 = !DILocation(line: 4937, column: 12, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15971, file: !3, line: 4936, column: 30)
!15977 = !DILocation(line: 4937, column: 32, scope: !15976)
!15978 = !DILocation(line: 4937, column: 23, scope: !15976)
!15979 = !DILocation(line: 4937, column: 3, scope: !15976)
!15980 = !DILocation(line: 4938, column: 12, scope: !15976)
!15981 = !DILocation(line: 4938, column: 33, scope: !15976)
!15982 = !DILocation(line: 4938, column: 34, scope: !15976)
!15983 = !DILocation(line: 4938, column: 38, scope: !15976)
!15984 = !DILocation(line: 4938, column: 37, scope: !15976)
!15985 = !DILocation(line: 4938, column: 23, scope: !15976)
!15986 = !DILocation(line: 4938, column: 3, scope: !15976)
!15987 = !DILocation(line: 4939, column: 17, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15976, file: !3, line: 4939, column: 7)
!15989 = !DILocation(line: 4939, column: 8, scope: !15988)
!15990 = !DILocation(line: 4939, column: 40, scope: !15988)
!15991 = !DILocation(line: 4939, column: 31, scope: !15988)
!15992 = !DILocation(line: 4939, column: 28, scope: !15988)
!15993 = !DILocation(line: 4939, column: 44, scope: !15988)
!15994 = !DILocation(line: 4940, column: 17, scope: !15988)
!15995 = !DILocation(line: 4940, column: 8, scope: !15988)
!15996 = !DILocation(line: 4940, column: 41, scope: !15988)
!15997 = !DILocation(line: 4940, column: 42, scope: !15988)
!15998 = !DILocation(line: 4940, column: 46, scope: !15988)
!15999 = !DILocation(line: 4940, column: 45, scope: !15988)
!16000 = !DILocation(line: 4940, column: 31, scope: !15988)
!16001 = !DILocation(line: 4940, column: 28, scope: !15988)
!16002 = !DILocation(line: 4939, column: 7, scope: !15976)
!16003 = !DILocation(line: 4941, column: 7, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15988, file: !3, line: 4940, column: 55)
!16005 = !DILocation(line: 4942, column: 4, scope: !16004)
!16006 = !DILocation(line: 4944, column: 2, scope: !15976)
!16007 = !DILocation(line: 4936, column: 26, scope: !15971)
!16008 = !DILocation(line: 4936, column: 2, scope: !15971)
!16009 = distinct !{!16009, !15974, !16010}
!16010 = !DILocation(line: 4944, column: 2, scope: !15968)
!16011 = !DILocation(line: 4945, column: 33, scope: !8118)
!16012 = !DILocation(line: 4945, column: 24, scope: !8118)
!16013 = !DILocation(line: 4945, column: 44, scope: !8118)
!16014 = !DILocation(line: 4945, column: 23, scope: !8118)
!16015 = !DILocation(line: 4945, column: 2, scope: !8118)
!16016 = !DILocation(line: 4945, column: 8, scope: !8118)
!16017 = !DILocation(line: 4945, column: 21, scope: !8118)
!16018 = !DILocation(line: 4946, column: 21, scope: !8118)
!16019 = !DILocation(line: 4946, column: 2, scope: !8118)
!16020 = !DILocation(line: 4946, column: 8, scope: !8118)
!16021 = !DILocation(line: 4946, column: 19, scope: !8118)
!16022 = !DILocation(line: 4947, column: 9, scope: !8118)
!16023 = !DILocation(line: 4947, column: 2, scope: !8118)
!16024 = distinct !DISubprogram(name: "irq_test", scope: !3, file: !3, line: 4950, type: !8119, scopeLine: 4951, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16025 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16026)
!16026 = distinct !DILocation(line: 4981, column: 2, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16028, file: !3, line: 4981, column: 2)
!16028 = distinct !DILexicalBlock(scope: !16029, file: !3, line: 4981, column: 2)
!16029 = distinct !DILexicalBlock(scope: !16030, file: !3, line: 4981, column: 2)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !3, line: 4981, column: 2)
!16031 = distinct !DILexicalBlock(scope: !16024, file: !3, line: 4981, column: 2)
!16032 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16033)
!16033 = distinct !DILocation(line: 4975, column: 2, scope: !16024)
!16034 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16033)
!16035 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16036)
!16036 = distinct !DILocation(line: 4983, column: 2, scope: !16024)
!16037 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16036)
!16038 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16039)
!16039 = distinct !DILocation(line: 4960, column: 2, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16041, file: !3, line: 4960, column: 2)
!16041 = distinct !DILexicalBlock(scope: !16042, file: !3, line: 4960, column: 2)
!16042 = distinct !DILexicalBlock(scope: !16043, file: !3, line: 4960, column: 2)
!16043 = distinct !DILexicalBlock(scope: !16044, file: !3, line: 4960, column: 2)
!16044 = distinct !DILexicalBlock(scope: !16024, file: !3, line: 4960, column: 2)
!16045 = !DILocalVariable(name: "info", arg: 1, scope: !16024, file: !3, line: 4950, type: !7530)
!16046 = !DILocation(line: 4950, column: 39, scope: !16024)
!16047 = !DILocalVariable(name: "timeout", scope: !16024, file: !3, line: 4952, type: !312)
!16048 = !DILocation(line: 4952, column: 16, scope: !16024)
!16049 = !DILocalVariable(name: "flags", scope: !16024, file: !3, line: 4953, type: !312)
!16050 = !DILocation(line: 4953, column: 16, scope: !16024)
!16051 = !DILocalVariable(name: "oldtty", scope: !16024, file: !3, line: 4954, type: !3760)
!16052 = !DILocation(line: 4954, column: 21, scope: !16024)
!16053 = !DILocation(line: 4954, column: 30, scope: !16024)
!16054 = !DILocation(line: 4954, column: 36, scope: !16024)
!16055 = !DILocation(line: 4954, column: 41, scope: !16024)
!16056 = !DILocalVariable(name: "speed", scope: !16024, file: !3, line: 4955, type: !987)
!16057 = !DILocation(line: 4955, column: 6, scope: !16024)
!16058 = !DILocation(line: 4955, column: 14, scope: !16024)
!16059 = !DILocation(line: 4955, column: 20, scope: !16024)
!16060 = !DILocation(line: 4955, column: 27, scope: !16024)
!16061 = !DILocation(line: 4957, column: 2, scope: !16024)
!16062 = !DILocation(line: 4957, column: 8, scope: !16024)
!16063 = !DILocation(line: 4957, column: 15, scope: !16024)
!16064 = !DILocation(line: 4957, column: 25, scope: !16024)
!16065 = !DILocation(line: 4958, column: 2, scope: !16024)
!16066 = !DILocation(line: 4958, column: 8, scope: !16024)
!16067 = !DILocation(line: 4958, column: 13, scope: !16024)
!16068 = !DILocation(line: 4958, column: 17, scope: !16024)
!16069 = !DILocation(line: 4960, column: 2, scope: !16024)
!16070 = !DILocation(line: 4960, column: 2, scope: !16044)
!16071 = !DILocalVariable(name: "__dummy", scope: !16072, file: !3, line: 4960, type: !312)
!16072 = distinct !DILexicalBlock(scope: !16043, file: !3, line: 4960, column: 2)
!16073 = !DILocation(line: 4960, column: 2, scope: !16072)
!16074 = !DILocalVariable(name: "__dummy2", scope: !16072, file: !3, line: 4960, type: !312)
!16075 = !DILocation(line: 4960, column: 2, scope: !16043)
!16076 = !DILocation(line: 4960, column: 2, scope: !16042)
!16077 = !DILocation(line: 4960, column: 2, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16042, file: !3, line: 4960, column: 2)
!16079 = !DILocalVariable(name: "__dummy", scope: !16080, file: !3, line: 4960, type: !312)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !3, line: 4960, column: 2)
!16081 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 4960, column: 2)
!16082 = !DILocation(line: 4960, column: 2, scope: !16080)
!16083 = !DILocalVariable(name: "__dummy2", scope: !16080, file: !3, line: 4960, type: !312)
!16084 = !DILocation(line: 4960, column: 2, scope: !16081)
!16085 = !DILocation(line: 4960, column: 2, scope: !16041)
!16086 = !{i32 -2139456479}
!16087 = !DILocation(line: 4960, column: 2, scope: !16040)
!16088 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16039)
!16089 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16039)
!16090 = !DILocation(line: 4961, column: 13, scope: !16024)
!16091 = !DILocation(line: 4961, column: 2, scope: !16024)
!16092 = !DILocation(line: 4962, column: 2, scope: !16024)
!16093 = !DILocation(line: 4965, column: 11, scope: !16024)
!16094 = !DILocation(line: 4966, column: 29, scope: !16024)
!16095 = !DILocation(line: 4966, column: 20, scope: !16024)
!16096 = !DILocation(line: 4966, column: 40, scope: !16024)
!16097 = !DILocation(line: 4966, column: 3, scope: !16024)
!16098 = !DILocation(line: 4965, column: 2, scope: !16024)
!16099 = !DILocation(line: 4969, column: 11, scope: !16024)
!16100 = !DILocation(line: 4969, column: 2, scope: !16024)
!16101 = !DILocation(line: 4972, column: 2, scope: !16024)
!16102 = !DILocation(line: 4972, column: 8, scope: !16024)
!16103 = !DILocation(line: 4972, column: 19, scope: !16024)
!16104 = !DILocation(line: 4973, column: 2, scope: !16024)
!16105 = !DILocation(line: 4973, column: 8, scope: !16024)
!16106 = !DILocation(line: 4973, column: 21, scope: !16024)
!16107 = !DILocation(line: 4975, column: 26, scope: !16024)
!16108 = !DILocation(line: 4975, column: 32, scope: !16024)
!16109 = !DILocation(line: 4975, column: 38, scope: !16024)
!16110 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16033)
!16111 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16033)
!16112 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16033)
!16113 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16033)
!16114 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16033)
!16115 = !DILocation(line: 4977, column: 9, scope: !16024)
!16116 = !DILocation(line: 4978, column: 2, scope: !16024)
!16117 = !DILocation(line: 4978, column: 15, scope: !16024)
!16118 = !DILocation(line: 4978, column: 18, scope: !16024)
!16119 = !DILocation(line: 4978, column: 22, scope: !16024)
!16120 = !DILocation(line: 4978, column: 28, scope: !16024)
!16121 = !DILocation(line: 4978, column: 21, scope: !16024)
!16122 = !DILocation(line: 0, scope: !16024)
!16123 = !DILocation(line: 4979, column: 3, scope: !16024)
!16124 = distinct !{!16124, !16116, !16125}
!16125 = !DILocation(line: 4979, column: 26, scope: !16024)
!16126 = !DILocation(line: 4981, column: 2, scope: !16024)
!16127 = !DILocation(line: 4981, column: 2, scope: !16031)
!16128 = !DILocalVariable(name: "__dummy", scope: !16129, file: !3, line: 4981, type: !312)
!16129 = distinct !DILexicalBlock(scope: !16030, file: !3, line: 4981, column: 2)
!16130 = !DILocation(line: 4981, column: 2, scope: !16129)
!16131 = !DILocalVariable(name: "__dummy2", scope: !16129, file: !3, line: 4981, type: !312)
!16132 = !DILocation(line: 4981, column: 2, scope: !16030)
!16133 = !DILocation(line: 4981, column: 2, scope: !16029)
!16134 = !DILocation(line: 4981, column: 2, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16029, file: !3, line: 4981, column: 2)
!16136 = !DILocalVariable(name: "__dummy", scope: !16137, file: !3, line: 4981, type: !312)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !3, line: 4981, column: 2)
!16138 = distinct !DILexicalBlock(scope: !16135, file: !3, line: 4981, column: 2)
!16139 = !DILocation(line: 4981, column: 2, scope: !16137)
!16140 = !DILocalVariable(name: "__dummy2", scope: !16137, file: !3, line: 4981, type: !312)
!16141 = !DILocation(line: 4981, column: 2, scope: !16138)
!16142 = !DILocation(line: 4981, column: 2, scope: !16028)
!16143 = !{i32 -2139455324}
!16144 = !DILocation(line: 4981, column: 2, scope: !16027)
!16145 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16026)
!16146 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16026)
!16147 = !DILocation(line: 4982, column: 13, scope: !16024)
!16148 = !DILocation(line: 4982, column: 2, scope: !16024)
!16149 = !DILocation(line: 4983, column: 26, scope: !16024)
!16150 = !DILocation(line: 4983, column: 32, scope: !16024)
!16151 = !DILocation(line: 4983, column: 37, scope: !16024)
!16152 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16036)
!16153 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16036)
!16154 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16036)
!16155 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16036)
!16156 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16036)
!16157 = !DILocation(line: 4985, column: 27, scope: !16024)
!16158 = !DILocation(line: 4985, column: 2, scope: !16024)
!16159 = !DILocation(line: 4985, column: 8, scope: !16024)
!16160 = !DILocation(line: 4985, column: 15, scope: !16024)
!16161 = !DILocation(line: 4985, column: 25, scope: !16024)
!16162 = !DILocation(line: 4986, column: 19, scope: !16024)
!16163 = !DILocation(line: 4986, column: 2, scope: !16024)
!16164 = !DILocation(line: 4986, column: 8, scope: !16024)
!16165 = !DILocation(line: 4986, column: 13, scope: !16024)
!16166 = !DILocation(line: 4986, column: 17, scope: !16024)
!16167 = !DILocation(line: 4988, column: 21, scope: !16024)
!16168 = !DILocation(line: 4988, column: 27, scope: !16024)
!16169 = !DILocation(line: 4988, column: 2, scope: !16024)
!16170 = !DILocation(line: 4988, column: 8, scope: !16024)
!16171 = !DILocation(line: 4988, column: 19, scope: !16024)
!16172 = !DILocation(line: 4989, column: 9, scope: !16024)
!16173 = !DILocation(line: 4989, column: 15, scope: !16024)
!16174 = !DILocation(line: 4989, column: 2, scope: !16024)
!16175 = distinct !DISubprogram(name: "loopback_test", scope: !3, file: !3, line: 5016, type: !8119, scopeLine: 5017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16176 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 5065, column: 2, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16179, file: !3, line: 5065, column: 2)
!16179 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 5065, column: 2)
!16180 = distinct !DILexicalBlock(scope: !16181, file: !3, line: 5065, column: 2)
!16181 = distinct !DILexicalBlock(scope: !16182, file: !3, line: 5065, column: 2)
!16182 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 5065, column: 2)
!16183 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16184)
!16184 = distinct !DILocation(line: 5048, column: 2, scope: !16175)
!16185 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16184)
!16186 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16187)
!16187 = distinct !DILocation(line: 5067, column: 2, scope: !16175)
!16188 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16187)
!16189 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16190)
!16190 = distinct !DILocation(line: 5044, column: 2, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16192, file: !3, line: 5044, column: 2)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 5044, column: 2)
!16193 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 5044, column: 2)
!16194 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 5044, column: 2)
!16195 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 5044, column: 2)
!16196 = !DILocalVariable(name: "info", arg: 1, scope: !16175, file: !3, line: 5016, type: !7530)
!16197 = !DILocation(line: 5016, column: 44, scope: !16175)
!16198 = !DILocalVariable(name: "timeout", scope: !16175, file: !3, line: 5020, type: !312)
!16199 = !DILocation(line: 5020, column: 16, scope: !16175)
!16200 = !DILocalVariable(name: "count", scope: !16175, file: !3, line: 5021, type: !581)
!16201 = !DILocation(line: 5021, column: 6, scope: !16175)
!16202 = !DILocalVariable(name: "buf", scope: !16175, file: !3, line: 5022, type: !16203)
!16203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 160, elements: !900)
!16204 = !DILocation(line: 5022, column: 16, scope: !16175)
!16205 = !DILocalVariable(name: "rc", scope: !16175, file: !3, line: 5023, type: !32)
!16206 = !DILocation(line: 5023, column: 6, scope: !16175)
!16207 = !DILocalVariable(name: "flags", scope: !16175, file: !3, line: 5024, type: !312)
!16208 = !DILocation(line: 5024, column: 16, scope: !16175)
!16209 = !DILocalVariable(name: "oldtty", scope: !16175, file: !3, line: 5026, type: !3760)
!16210 = !DILocation(line: 5026, column: 21, scope: !16175)
!16211 = !DILocation(line: 5026, column: 30, scope: !16175)
!16212 = !DILocation(line: 5026, column: 36, scope: !16175)
!16213 = !DILocation(line: 5026, column: 41, scope: !16175)
!16214 = !DILocalVariable(name: "params", scope: !16175, file: !3, line: 5027, type: !7891)
!16215 = !DILocation(line: 5027, column: 14, scope: !16175)
!16216 = !DILocation(line: 5029, column: 2, scope: !16175)
!16217 = !DILocation(line: 5029, column: 19, scope: !16175)
!16218 = !DILocation(line: 5029, column: 25, scope: !16175)
!16219 = !DILocation(line: 5031, column: 2, scope: !16175)
!16220 = !DILocation(line: 5031, column: 8, scope: !16175)
!16221 = !DILocation(line: 5031, column: 15, scope: !16175)
!16222 = !DILocation(line: 5031, column: 20, scope: !16175)
!16223 = !DILocation(line: 5032, column: 2, scope: !16175)
!16224 = !DILocation(line: 5032, column: 8, scope: !16175)
!16225 = !DILocation(line: 5032, column: 15, scope: !16175)
!16226 = !DILocation(line: 5032, column: 25, scope: !16175)
!16227 = !DILocation(line: 5033, column: 2, scope: !16175)
!16228 = !DILocation(line: 5033, column: 8, scope: !16175)
!16229 = !DILocation(line: 5033, column: 15, scope: !16175)
!16230 = !DILocation(line: 5033, column: 24, scope: !16175)
!16231 = !DILocation(line: 5034, column: 2, scope: !16175)
!16232 = !DILocation(line: 5034, column: 8, scope: !16175)
!16233 = !DILocation(line: 5034, column: 13, scope: !16175)
!16234 = !DILocation(line: 5034, column: 17, scope: !16175)
!16235 = !DILocation(line: 5037, column: 13, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 5037, column: 2)
!16237 = !DILocation(line: 5037, column: 7, scope: !16236)
!16238 = !DILocation(line: 5037, column: 18, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 5037, column: 2)
!16240 = !DILocation(line: 5037, column: 24, scope: !16239)
!16241 = !DILocation(line: 5037, column: 2, scope: !16236)
!16242 = !DILocation(line: 5038, column: 31, scope: !16239)
!16243 = !DILocation(line: 5038, column: 16, scope: !16239)
!16244 = !DILocation(line: 5038, column: 7, scope: !16239)
!16245 = !DILocation(line: 5038, column: 3, scope: !16239)
!16246 = !DILocation(line: 5038, column: 14, scope: !16239)
!16247 = !DILocation(line: 5037, column: 41, scope: !16239)
!16248 = !DILocation(line: 5037, column: 2, scope: !16239)
!16249 = distinct !{!16249, !16241, !16250}
!16250 = !DILocation(line: 5038, column: 31, scope: !16236)
!16251 = !DILocation(line: 5040, column: 2, scope: !16175)
!16252 = !DILocation(line: 5040, column: 8, scope: !16175)
!16253 = !DILocation(line: 5040, column: 23, scope: !16175)
!16254 = !DILocation(line: 5041, column: 9, scope: !16175)
!16255 = !DILocation(line: 5041, column: 15, scope: !16175)
!16256 = !DILocation(line: 5041, column: 2, scope: !16175)
!16257 = !DILocation(line: 5044, column: 2, scope: !16175)
!16258 = !DILocation(line: 5044, column: 2, scope: !16195)
!16259 = !DILocalVariable(name: "__dummy", scope: !16260, file: !3, line: 5044, type: !312)
!16260 = distinct !DILexicalBlock(scope: !16194, file: !3, line: 5044, column: 2)
!16261 = !DILocation(line: 5044, column: 2, scope: !16260)
!16262 = !DILocalVariable(name: "__dummy2", scope: !16260, file: !3, line: 5044, type: !312)
!16263 = !DILocation(line: 5044, column: 2, scope: !16194)
!16264 = !DILocation(line: 5044, column: 2, scope: !16193)
!16265 = !DILocation(line: 5044, column: 2, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16193, file: !3, line: 5044, column: 2)
!16267 = !DILocalVariable(name: "__dummy", scope: !16268, file: !3, line: 5044, type: !312)
!16268 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 5044, column: 2)
!16269 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 5044, column: 2)
!16270 = !DILocation(line: 5044, column: 2, scope: !16268)
!16271 = !DILocalVariable(name: "__dummy2", scope: !16268, file: !3, line: 5044, type: !312)
!16272 = !DILocation(line: 5044, column: 2, scope: !16269)
!16273 = !DILocation(line: 5044, column: 2, scope: !16192)
!16274 = !{i32 -2139453895}
!16275 = !DILocation(line: 5044, column: 2, scope: !16191)
!16276 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16190)
!16277 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16190)
!16278 = !DILocation(line: 5045, column: 13, scope: !16175)
!16279 = !DILocation(line: 5045, column: 2, scope: !16175)
!16280 = !DILocation(line: 5046, column: 11, scope: !16175)
!16281 = !DILocation(line: 5046, column: 2, scope: !16175)
!16282 = !DILocation(line: 5047, column: 10, scope: !16175)
!16283 = !DILocation(line: 5047, column: 16, scope: !16175)
!16284 = !DILocation(line: 5047, column: 21, scope: !16175)
!16285 = !DILocation(line: 5047, column: 2, scope: !16175)
!16286 = !DILocation(line: 5048, column: 26, scope: !16175)
!16287 = !DILocation(line: 5048, column: 32, scope: !16175)
!16288 = !DILocation(line: 5048, column: 38, scope: !16175)
!16289 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16184)
!16290 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16184)
!16291 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16184)
!16292 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16184)
!16293 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16184)
!16294 = !DILocation(line: 5051, column: 15, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 5051, column: 2)
!16296 = !DILocation(line: 5051, column: 7, scope: !16295)
!16297 = !DILocation(line: 5051, column: 22, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16295, file: !3, line: 5051, column: 2)
!16299 = !DILocation(line: 5051, column: 2, scope: !16295)
!16300 = !DILocation(line: 5052, column: 3, scope: !16301)
!16301 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 5051, column: 42)
!16302 = !DILocation(line: 5053, column: 24, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16301, file: !3, line: 5053, column: 7)
!16304 = !DILocation(line: 5053, column: 7, scope: !16303)
!16305 = !DILocation(line: 5053, column: 7, scope: !16301)
!16306 = !DILocation(line: 5054, column: 7, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16303, file: !3, line: 5053, column: 31)
!16308 = !DILocation(line: 5055, column: 4, scope: !16307)
!16309 = !DILocation(line: 5057, column: 2, scope: !16301)
!16310 = !DILocation(line: 5051, column: 31, scope: !16298)
!16311 = !DILocation(line: 5051, column: 2, scope: !16298)
!16312 = distinct !{!16312, !16299, !16313}
!16313 = !DILocation(line: 5057, column: 2, scope: !16295)
!16314 = !DILocation(line: 5060, column: 7, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16175, file: !3, line: 5060, column: 6)
!16316 = !DILocation(line: 5060, column: 10, scope: !16315)
!16317 = !DILocation(line: 5060, column: 14, scope: !16315)
!16318 = !DILocation(line: 5060, column: 20, scope: !16315)
!16319 = !DILocation(line: 5060, column: 38, scope: !16315)
!16320 = !DILocation(line: 5060, column: 35, scope: !16315)
!16321 = !DILocation(line: 5060, column: 44, scope: !16315)
!16322 = !DILocation(line: 5061, column: 12, scope: !16315)
!16323 = !DILocation(line: 5061, column: 17, scope: !16315)
!16324 = !DILocation(line: 5061, column: 23, scope: !16315)
!16325 = !DILocation(line: 5061, column: 33, scope: !16315)
!16326 = !DILocation(line: 5061, column: 5, scope: !16315)
!16327 = !DILocation(line: 5060, column: 6, scope: !16175)
!16328 = !DILocation(line: 5062, column: 6, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 5061, column: 42)
!16330 = !DILocation(line: 5063, column: 2, scope: !16329)
!16331 = !DILocation(line: 5065, column: 2, scope: !16175)
!16332 = !DILocation(line: 5065, column: 2, scope: !16182)
!16333 = !DILocalVariable(name: "__dummy", scope: !16334, file: !3, line: 5065, type: !312)
!16334 = distinct !DILexicalBlock(scope: !16181, file: !3, line: 5065, column: 2)
!16335 = !DILocation(line: 5065, column: 2, scope: !16334)
!16336 = !DILocalVariable(name: "__dummy2", scope: !16334, file: !3, line: 5065, type: !312)
!16337 = !DILocation(line: 5065, column: 2, scope: !16181)
!16338 = !DILocation(line: 5065, column: 2, scope: !16180)
!16339 = !DILocation(line: 5065, column: 2, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 5065, column: 2)
!16341 = !DILocalVariable(name: "__dummy", scope: !16342, file: !3, line: 5065, type: !312)
!16342 = distinct !DILexicalBlock(scope: !16343, file: !3, line: 5065, column: 2)
!16343 = distinct !DILexicalBlock(scope: !16340, file: !3, line: 5065, column: 2)
!16344 = !DILocation(line: 5065, column: 2, scope: !16342)
!16345 = !DILocalVariable(name: "__dummy2", scope: !16342, file: !3, line: 5065, type: !312)
!16346 = !DILocation(line: 5065, column: 2, scope: !16343)
!16347 = !DILocation(line: 5065, column: 2, scope: !16179)
!16348 = !{i32 -2139452873}
!16349 = !DILocation(line: 5065, column: 2, scope: !16178)
!16350 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16177)
!16351 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16177)
!16352 = !DILocation(line: 5066, column: 16, scope: !16175)
!16353 = !DILocation(line: 5066, column: 2, scope: !16175)
!16354 = !DILocation(line: 5067, column: 26, scope: !16175)
!16355 = !DILocation(line: 5067, column: 32, scope: !16175)
!16356 = !DILocation(line: 5067, column: 37, scope: !16175)
!16357 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16187)
!16358 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16187)
!16359 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16187)
!16360 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16187)
!16361 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16187)
!16362 = !DILocation(line: 5069, column: 10, scope: !16175)
!16363 = !DILocation(line: 5069, column: 16, scope: !16175)
!16364 = !DILocation(line: 5069, column: 2, scope: !16175)
!16365 = !DILocation(line: 5070, column: 19, scope: !16175)
!16366 = !DILocation(line: 5070, column: 2, scope: !16175)
!16367 = !DILocation(line: 5070, column: 8, scope: !16175)
!16368 = !DILocation(line: 5070, column: 13, scope: !16175)
!16369 = !DILocation(line: 5070, column: 17, scope: !16175)
!16370 = !DILocation(line: 5072, column: 21, scope: !16175)
!16371 = !DILocation(line: 5072, column: 2, scope: !16175)
!16372 = !DILocation(line: 5072, column: 8, scope: !16175)
!16373 = !DILocation(line: 5072, column: 19, scope: !16175)
!16374 = !DILocation(line: 5073, column: 9, scope: !16175)
!16375 = !DILocation(line: 5073, column: 2, scope: !16175)
!16376 = distinct !DISubprogram(name: "loopback_test_rx", scope: !3, file: !3, line: 4992, type: !8119, scopeLine: 4993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16377 = !DILocalVariable(name: "info", arg: 1, scope: !16376, file: !3, line: 4992, type: !7530)
!16378 = !DILocation(line: 4992, column: 47, scope: !16376)
!16379 = !DILocalVariable(name: "src", scope: !16376, file: !3, line: 4994, type: !564)
!16380 = !DILocation(line: 4994, column: 17, scope: !16376)
!16381 = !DILocalVariable(name: "dest", scope: !16376, file: !3, line: 4994, type: !564)
!16382 = !DILocation(line: 4994, column: 23, scope: !16376)
!16383 = !DILocalVariable(name: "count", scope: !16376, file: !3, line: 4995, type: !32)
!16384 = !DILocation(line: 4995, column: 6, scope: !16376)
!16385 = !DILocation(line: 4997, column: 6, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16376, file: !3, line: 4997, column: 6)
!16387 = !DILocation(line: 4997, column: 6, scope: !16376)
!16388 = !DILocation(line: 4998, column: 11, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16386, file: !3, line: 4997, column: 37)
!16390 = !DILocation(line: 4998, column: 9, scope: !16389)
!16391 = !DILocation(line: 4999, column: 11, scope: !16389)
!16392 = !DILocation(line: 4999, column: 17, scope: !16389)
!16393 = !DILocation(line: 4999, column: 26, scope: !16389)
!16394 = !DILocation(line: 4999, column: 9, scope: !16389)
!16395 = !DILocation(line: 5000, column: 11, scope: !16389)
!16396 = !DILocation(line: 5000, column: 17, scope: !16389)
!16397 = !DILocation(line: 5000, column: 9, scope: !16389)
!16398 = !DILocation(line: 5002, column: 3, scope: !16389)
!16399 = !DILocation(line: 5002, column: 10, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16401, file: !3, line: 5002, column: 3)
!16401 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 5002, column: 3)
!16402 = !DILocation(line: 5002, column: 3, scope: !16401)
!16403 = !DILocation(line: 5004, column: 12, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16405, file: !3, line: 5004, column: 8)
!16405 = distinct !DILexicalBlock(scope: !16400, file: !3, line: 5002, column: 36)
!16406 = !DILocation(line: 5004, column: 15, scope: !16404)
!16407 = !DILocation(line: 5004, column: 10, scope: !16404)
!16408 = !DILocation(line: 5004, column: 19, scope: !16404)
!16409 = !DILocation(line: 5004, column: 8, scope: !16405)
!16410 = !DILocation(line: 5005, column: 14, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16404, file: !3, line: 5004, column: 37)
!16412 = !DILocation(line: 5005, column: 13, scope: !16411)
!16413 = !DILocation(line: 5005, column: 6, scope: !16411)
!16414 = !DILocation(line: 5005, column: 11, scope: !16411)
!16415 = !DILocation(line: 5006, column: 9, scope: !16411)
!16416 = !DILocation(line: 5007, column: 5, scope: !16411)
!16417 = !DILocation(line: 5007, column: 11, scope: !16411)
!16418 = !DILocation(line: 5007, column: 25, scope: !16411)
!16419 = !DILocation(line: 5008, column: 4, scope: !16411)
!16420 = !DILocation(line: 5009, column: 3, scope: !16405)
!16421 = !DILocation(line: 5002, column: 23, scope: !16400)
!16422 = !DILocation(line: 5002, column: 31, scope: !16400)
!16423 = !DILocation(line: 5002, column: 3, scope: !16400)
!16424 = distinct !{!16424, !16402, !16425}
!16425 = !DILocation(line: 5009, column: 3, scope: !16401)
!16426 = !DILocation(line: 5010, column: 3, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16389, file: !3, line: 5010, column: 3)
!16428 = !DILocation(line: 5010, column: 3, scope: !16389)
!16429 = !DILocation(line: 5011, column: 3, scope: !16389)
!16430 = !DILocation(line: 5013, column: 2, scope: !16376)
!16431 = !DILocation(line: 5014, column: 1, scope: !16376)
!16432 = distinct !DISubprogram(name: "reset_adapter", scope: !3, file: !3, line: 4083, type: !8337, scopeLine: 4084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16433 = !DILocalVariable(name: "info", arg: 1, scope: !16432, file: !3, line: 4083, type: !7530)
!16434 = !DILocation(line: 4083, column: 45, scope: !16432)
!16435 = !DILocalVariable(name: "i", scope: !16432, file: !3, line: 4085, type: !32)
!16436 = !DILocation(line: 4085, column: 6, scope: !16432)
!16437 = !DILocation(line: 4086, column: 8, scope: !16438)
!16438 = distinct !DILexicalBlock(scope: !16432, file: !3, line: 4086, column: 2)
!16439 = !DILocation(line: 4086, column: 7, scope: !16438)
!16440 = !DILocation(line: 4086, column: 12, scope: !16441)
!16441 = distinct !DILexicalBlock(scope: !16438, file: !3, line: 4086, column: 2)
!16442 = !DILocation(line: 4086, column: 16, scope: !16441)
!16443 = !DILocation(line: 4086, column: 22, scope: !16441)
!16444 = !DILocation(line: 4086, column: 14, scope: !16441)
!16445 = !DILocation(line: 4086, column: 2, scope: !16438)
!16446 = !DILocation(line: 4087, column: 7, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16448, file: !3, line: 4087, column: 7)
!16448 = distinct !DILexicalBlock(scope: !16441, file: !3, line: 4086, column: 39)
!16449 = !DILocation(line: 4087, column: 13, scope: !16447)
!16450 = !DILocation(line: 4087, column: 24, scope: !16447)
!16451 = !DILocation(line: 4087, column: 7, scope: !16448)
!16452 = !DILocation(line: 4088, column: 15, scope: !16447)
!16453 = !DILocation(line: 4088, column: 21, scope: !16447)
!16454 = !DILocation(line: 4088, column: 32, scope: !16447)
!16455 = !DILocation(line: 4088, column: 4, scope: !16447)
!16456 = !DILocation(line: 4089, column: 2, scope: !16448)
!16457 = !DILocation(line: 4086, column: 34, scope: !16441)
!16458 = !DILocation(line: 4086, column: 2, scope: !16441)
!16459 = distinct !{!16459, !16445, !16460}
!16460 = !DILocation(line: 4089, column: 2, scope: !16438)
!16461 = !DILocation(line: 4090, column: 1, scope: !16432)
!16462 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !4515, file: !4515, line: 355, type: !16463, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16463 = !DISubroutineType(types: !16464)
!16464 = !{!4513, !7}
!16465 = !DILocalVariable(name: "lines", arg: 1, scope: !16462, file: !4515, line: 355, type: !7)
!16466 = !DILocation(line: 355, column: 64, scope: !16462)
!16467 = !DILocalVariable(name: "ret", scope: !16462, file: !4515, line: 357, type: !4513)
!16468 = !DILocation(line: 357, column: 21, scope: !16462)
!16469 = !DILocation(line: 357, column: 27, scope: !16462)
!16470 = !DILocation(line: 358, column: 13, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16462, file: !4515, line: 358, column: 6)
!16472 = !DILocation(line: 358, column: 6, scope: !16471)
!16473 = !DILocation(line: 358, column: 6, scope: !16462)
!16474 = !DILocation(line: 359, column: 3, scope: !16471)
!16475 = !DILocation(line: 360, column: 9, scope: !16462)
!16476 = !DILocation(line: 360, column: 2, scope: !16462)
!16477 = !DILocation(line: 361, column: 1, scope: !16462)
!16478 = distinct !DISubprogram(name: "IS_ERR", scope: !16479, file: !16479, line: 34, type: !16480, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16479 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!16480 = !DISubroutineType(types: !16481)
!16481 = !{!771, !3276}
!16482 = !DILocalVariable(name: "ptr", arg: 1, scope: !16478, file: !16479, line: 34, type: !3276)
!16483 = !DILocation(line: 34, column: 60, scope: !16478)
!16484 = !DILocation(line: 36, column: 9, scope: !16478)
!16485 = !DILocation(line: 36, column: 2, scope: !16478)
!16486 = distinct !DISubprogram(name: "open", scope: !3, file: !3, line: 647, type: !4873, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16487 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 685, column: 2, scope: !16486)
!16489 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16488)
!16490 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 680, column: 3, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16493, file: !3, line: 678, column: 22)
!16493 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 678, column: 6)
!16494 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16491)
!16495 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16496)
!16496 = distinct !DILocation(line: 677, column: 2, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !3, line: 677, column: 2)
!16498 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 677, column: 2)
!16499 = distinct !DILexicalBlock(scope: !16500, file: !3, line: 677, column: 2)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !3, line: 677, column: 2)
!16501 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 677, column: 2)
!16502 = !DILocalVariable(name: "tty", arg: 1, scope: !16486, file: !3, line: 647, type: !3760)
!16503 = !DILocation(line: 647, column: 36, scope: !16486)
!16504 = !DILocalVariable(name: "filp", arg: 2, scope: !16486, file: !3, line: 647, type: !1315)
!16505 = !DILocation(line: 647, column: 54, scope: !16486)
!16506 = !DILocalVariable(name: "info", scope: !16486, file: !3, line: 649, type: !7530)
!16507 = !DILocation(line: 649, column: 20, scope: !16486)
!16508 = !DILocalVariable(name: "retval", scope: !16486, file: !3, line: 650, type: !32)
!16509 = !DILocation(line: 650, column: 6, scope: !16486)
!16510 = !DILocalVariable(name: "line", scope: !16486, file: !3, line: 650, type: !32)
!16511 = !DILocation(line: 650, column: 14, scope: !16486)
!16512 = !DILocalVariable(name: "flags", scope: !16486, file: !3, line: 651, type: !312)
!16513 = !DILocation(line: 651, column: 16, scope: !16486)
!16514 = !DILocation(line: 653, column: 9, scope: !16486)
!16515 = !DILocation(line: 653, column: 14, scope: !16486)
!16516 = !DILocation(line: 653, column: 7, scope: !16486)
!16517 = !DILocation(line: 654, column: 6, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 654, column: 6)
!16519 = !DILocation(line: 654, column: 14, scope: !16518)
!16520 = !DILocation(line: 654, column: 11, scope: !16518)
!16521 = !DILocation(line: 654, column: 6, scope: !16486)
!16522 = !DILocation(line: 655, column: 3, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16524, file: !3, line: 655, column: 3)
!16524 = distinct !DILexicalBlock(scope: !16518, file: !3, line: 654, column: 33)
!16525 = !DILocation(line: 655, column: 3, scope: !16524)
!16526 = !DILocation(line: 656, column: 3, scope: !16524)
!16527 = !DILocation(line: 659, column: 9, scope: !16486)
!16528 = !DILocation(line: 659, column: 7, scope: !16486)
!16529 = !DILocation(line: 660, column: 2, scope: !16486)
!16530 = !DILocation(line: 660, column: 8, scope: !16486)
!16531 = !DILocation(line: 660, column: 13, scope: !16486)
!16532 = !DILocation(line: 660, column: 16, scope: !16486)
!16533 = !DILocation(line: 660, column: 22, scope: !16486)
!16534 = !DILocation(line: 660, column: 30, scope: !16486)
!16535 = !DILocation(line: 660, column: 27, scope: !16486)
!16536 = !DILocation(line: 0, scope: !16486)
!16537 = !DILocation(line: 661, column: 10, scope: !16486)
!16538 = !DILocation(line: 661, column: 16, scope: !16486)
!16539 = !DILocation(line: 661, column: 8, scope: !16486)
!16540 = distinct !{!16540, !16529, !16538}
!16541 = !DILocation(line: 662, column: 19, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 662, column: 6)
!16543 = !DILocation(line: 662, column: 25, scope: !16542)
!16544 = !DILocation(line: 662, column: 30, scope: !16542)
!16545 = !DILocation(line: 662, column: 6, scope: !16542)
!16546 = !DILocation(line: 662, column: 6, scope: !16486)
!16547 = !DILocation(line: 663, column: 3, scope: !16542)
!16548 = !DILocation(line: 664, column: 6, scope: !16549)
!16549 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 664, column: 6)
!16550 = !DILocation(line: 664, column: 12, scope: !16549)
!16551 = !DILocation(line: 664, column: 6, scope: !16486)
!16552 = !DILocation(line: 665, column: 3, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !3, line: 665, column: 3)
!16554 = distinct !DILexicalBlock(scope: !16549, file: !3, line: 664, column: 24)
!16555 = !DILocation(line: 665, column: 3, scope: !16554)
!16556 = !DILocation(line: 666, column: 3, scope: !16554)
!16557 = !DILocation(line: 669, column: 21, scope: !16486)
!16558 = !DILocation(line: 669, column: 2, scope: !16486)
!16559 = !DILocation(line: 669, column: 7, scope: !16486)
!16560 = !DILocation(line: 669, column: 19, scope: !16486)
!16561 = !DILocation(line: 670, column: 19, scope: !16486)
!16562 = !DILocation(line: 670, column: 2, scope: !16486)
!16563 = !DILocation(line: 670, column: 8, scope: !16486)
!16564 = !DILocation(line: 670, column: 13, scope: !16486)
!16565 = !DILocation(line: 670, column: 17, scope: !16486)
!16566 = !DILocation(line: 672, column: 2, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 672, column: 2)
!16568 = !DILocation(line: 672, column: 2, scope: !16486)
!16569 = !DILocation(line: 674, column: 14, scope: !16486)
!16570 = !DILocation(line: 674, column: 20, scope: !16486)
!16571 = !DILocation(line: 674, column: 25, scope: !16486)
!16572 = !DILocation(line: 674, column: 2, scope: !16486)
!16573 = !DILocation(line: 675, column: 28, scope: !16486)
!16574 = !DILocation(line: 675, column: 34, scope: !16486)
!16575 = !DILocation(line: 675, column: 39, scope: !16486)
!16576 = !DILocation(line: 675, column: 45, scope: !16486)
!16577 = !DILocation(line: 675, column: 27, scope: !16486)
!16578 = !DILocation(line: 675, column: 2, scope: !16486)
!16579 = !DILocation(line: 675, column: 8, scope: !16486)
!16580 = !DILocation(line: 675, column: 13, scope: !16486)
!16581 = !DILocation(line: 675, column: 25, scope: !16486)
!16582 = !DILocation(line: 677, column: 2, scope: !16486)
!16583 = !DILocation(line: 677, column: 2, scope: !16501)
!16584 = !DILocalVariable(name: "__dummy", scope: !16585, file: !3, line: 677, type: !312)
!16585 = distinct !DILexicalBlock(scope: !16500, file: !3, line: 677, column: 2)
!16586 = !DILocation(line: 677, column: 2, scope: !16585)
!16587 = !DILocalVariable(name: "__dummy2", scope: !16585, file: !3, line: 677, type: !312)
!16588 = !DILocation(line: 677, column: 2, scope: !16500)
!16589 = !DILocation(line: 677, column: 2, scope: !16499)
!16590 = !DILocation(line: 677, column: 2, scope: !16591)
!16591 = distinct !DILexicalBlock(scope: !16499, file: !3, line: 677, column: 2)
!16592 = !DILocalVariable(name: "__dummy", scope: !16593, file: !3, line: 677, type: !312)
!16593 = distinct !DILexicalBlock(scope: !16594, file: !3, line: 677, column: 2)
!16594 = distinct !DILexicalBlock(scope: !16591, file: !3, line: 677, column: 2)
!16595 = !DILocation(line: 677, column: 2, scope: !16593)
!16596 = !DILocalVariable(name: "__dummy2", scope: !16593, file: !3, line: 677, type: !312)
!16597 = !DILocation(line: 677, column: 2, scope: !16594)
!16598 = !DILocation(line: 677, column: 2, scope: !16498)
!16599 = !{i32 -2139583721}
!16600 = !DILocation(line: 677, column: 2, scope: !16497)
!16601 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16496)
!16602 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16496)
!16603 = !DILocation(line: 678, column: 6, scope: !16493)
!16604 = !DILocation(line: 678, column: 12, scope: !16493)
!16605 = !DILocation(line: 678, column: 6, scope: !16486)
!16606 = !DILocation(line: 679, column: 10, scope: !16492)
!16607 = !DILocation(line: 680, column: 27, scope: !16492)
!16608 = !DILocation(line: 680, column: 33, scope: !16492)
!16609 = !DILocation(line: 680, column: 42, scope: !16492)
!16610 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16491)
!16611 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16491)
!16612 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16491)
!16613 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16491)
!16614 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16491)
!16615 = !DILocation(line: 681, column: 17, scope: !16492)
!16616 = !DILocation(line: 681, column: 23, scope: !16492)
!16617 = !DILocation(line: 681, column: 28, scope: !16492)
!16618 = !DILocation(line: 681, column: 3, scope: !16492)
!16619 = !DILocation(line: 682, column: 3, scope: !16492)
!16620 = !DILocation(line: 684, column: 2, scope: !16486)
!16621 = !DILocation(line: 684, column: 8, scope: !16486)
!16622 = !DILocation(line: 684, column: 13, scope: !16486)
!16623 = !DILocation(line: 684, column: 18, scope: !16486)
!16624 = !DILocation(line: 685, column: 26, scope: !16486)
!16625 = !DILocation(line: 685, column: 32, scope: !16486)
!16626 = !DILocation(line: 685, column: 41, scope: !16486)
!16627 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16488)
!16628 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16488)
!16629 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16488)
!16630 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16488)
!16631 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16488)
!16632 = !DILocation(line: 687, column: 6, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 687, column: 6)
!16634 = !DILocation(line: 687, column: 12, scope: !16633)
!16635 = !DILocation(line: 687, column: 17, scope: !16633)
!16636 = !DILocation(line: 687, column: 23, scope: !16633)
!16637 = !DILocation(line: 687, column: 6, scope: !16486)
!16638 = !DILocation(line: 689, column: 20, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 687, column: 29)
!16640 = !DILocation(line: 689, column: 12, scope: !16639)
!16641 = !DILocation(line: 689, column: 10, scope: !16639)
!16642 = !DILocation(line: 690, column: 7, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16639, file: !3, line: 690, column: 7)
!16644 = !DILocation(line: 690, column: 14, scope: !16643)
!16645 = !DILocation(line: 690, column: 7, scope: !16639)
!16646 = !DILocation(line: 691, column: 18, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16643, file: !3, line: 690, column: 19)
!16648 = !DILocation(line: 691, column: 24, scope: !16647)
!16649 = !DILocation(line: 691, column: 29, scope: !16647)
!16650 = !DILocation(line: 691, column: 4, scope: !16647)
!16651 = !DILocation(line: 692, column: 4, scope: !16647)
!16652 = !DILocation(line: 694, column: 2, scope: !16639)
!16653 = !DILocation(line: 695, column: 16, scope: !16486)
!16654 = !DILocation(line: 695, column: 22, scope: !16486)
!16655 = !DILocation(line: 695, column: 27, scope: !16486)
!16656 = !DILocation(line: 695, column: 2, scope: !16486)
!16657 = !DILocation(line: 696, column: 27, scope: !16486)
!16658 = !DILocation(line: 696, column: 32, scope: !16486)
!16659 = !DILocation(line: 696, column: 38, scope: !16486)
!16660 = !DILocation(line: 696, column: 11, scope: !16486)
!16661 = !DILocation(line: 696, column: 9, scope: !16486)
!16662 = !DILocation(line: 697, column: 6, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 697, column: 6)
!16664 = !DILocation(line: 697, column: 6, scope: !16486)
!16665 = !DILocation(line: 698, column: 3, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !3, line: 698, column: 3)
!16667 = distinct !DILexicalBlock(scope: !16663, file: !3, line: 697, column: 14)
!16668 = !DILocation(line: 698, column: 3, scope: !16667)
!16669 = !DILocation(line: 699, column: 3, scope: !16667)
!16670 = !DILocation(line: 702, column: 9, scope: !16486)
!16671 = !DILocation(line: 702, column: 2, scope: !16486)
!16672 = !DILabel(scope: !16486, name: "cleanup", file: !3, line: 704)
!16673 = !DILocation(line: 704, column: 1, scope: !16486)
!16674 = !DILocation(line: 705, column: 6, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 705, column: 6)
!16676 = !DILocation(line: 705, column: 6, scope: !16486)
!16677 = !DILocation(line: 706, column: 7, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 706, column: 7)
!16679 = distinct !DILexicalBlock(scope: !16675, file: !3, line: 705, column: 14)
!16680 = !DILocation(line: 706, column: 12, scope: !16678)
!16681 = !DILocation(line: 706, column: 18, scope: !16678)
!16682 = !DILocation(line: 706, column: 7, scope: !16679)
!16683 = !DILocation(line: 707, column: 4, scope: !16678)
!16684 = !DILocation(line: 707, column: 10, scope: !16678)
!16685 = !DILocation(line: 707, column: 15, scope: !16678)
!16686 = !DILocation(line: 707, column: 19, scope: !16678)
!16687 = !DILocation(line: 708, column: 6, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16679, file: !3, line: 708, column: 6)
!16689 = !DILocation(line: 708, column: 12, scope: !16688)
!16690 = !DILocation(line: 708, column: 17, scope: !16688)
!16691 = !DILocation(line: 708, column: 6, scope: !16679)
!16692 = !DILocation(line: 709, column: 4, scope: !16688)
!16693 = !DILocation(line: 709, column: 10, scope: !16688)
!16694 = !DILocation(line: 709, column: 15, scope: !16688)
!16695 = !DILocation(line: 709, column: 20, scope: !16688)
!16696 = !DILocation(line: 710, column: 2, scope: !16679)
!16697 = !DILocation(line: 712, column: 2, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16486, file: !3, line: 712, column: 2)
!16699 = !DILocation(line: 712, column: 2, scope: !16486)
!16700 = !DILocation(line: 713, column: 9, scope: !16486)
!16701 = !DILocation(line: 713, column: 2, scope: !16486)
!16702 = !DILocation(line: 714, column: 1, scope: !16486)
!16703 = distinct !DISubprogram(name: "close", scope: !3, file: !3, line: 716, type: !4877, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16704 = !DILocalVariable(name: "tty", arg: 1, scope: !16703, file: !3, line: 716, type: !3760)
!16705 = !DILocation(line: 716, column: 38, scope: !16703)
!16706 = !DILocalVariable(name: "filp", arg: 2, scope: !16703, file: !3, line: 716, type: !1315)
!16707 = !DILocation(line: 716, column: 56, scope: !16703)
!16708 = !DILocalVariable(name: "info", scope: !16703, file: !3, line: 718, type: !7530)
!16709 = !DILocation(line: 718, column: 20, scope: !16703)
!16710 = !DILocation(line: 718, column: 27, scope: !16703)
!16711 = !DILocation(line: 718, column: 32, scope: !16703)
!16712 = !DILocation(line: 720, column: 19, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 720, column: 6)
!16714 = !DILocation(line: 720, column: 25, scope: !16713)
!16715 = !DILocation(line: 720, column: 30, scope: !16713)
!16716 = !DILocation(line: 720, column: 6, scope: !16713)
!16717 = !DILocation(line: 720, column: 6, scope: !16703)
!16718 = !DILocation(line: 721, column: 3, scope: !16713)
!16719 = !DILocation(line: 722, column: 2, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 722, column: 2)
!16721 = !DILocation(line: 722, column: 2, scope: !16703)
!16722 = !DILocation(line: 724, column: 28, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 724, column: 6)
!16724 = !DILocation(line: 724, column: 34, scope: !16723)
!16725 = !DILocation(line: 724, column: 40, scope: !16723)
!16726 = !DILocation(line: 724, column: 45, scope: !16723)
!16727 = !DILocation(line: 724, column: 6, scope: !16723)
!16728 = !DILocation(line: 724, column: 51, scope: !16723)
!16729 = !DILocation(line: 724, column: 6, scope: !16703)
!16730 = !DILocation(line: 725, column: 3, scope: !16723)
!16731 = !DILocation(line: 727, column: 14, scope: !16703)
!16732 = !DILocation(line: 727, column: 20, scope: !16703)
!16733 = !DILocation(line: 727, column: 25, scope: !16703)
!16734 = !DILocation(line: 727, column: 2, scope: !16703)
!16735 = !DILocation(line: 728, column: 28, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 728, column: 6)
!16737 = !DILocation(line: 728, column: 34, scope: !16736)
!16738 = !DILocation(line: 728, column: 6, scope: !16736)
!16739 = !DILocation(line: 728, column: 6, scope: !16703)
!16740 = !DILocation(line: 729, column: 20, scope: !16736)
!16741 = !DILocation(line: 729, column: 25, scope: !16736)
!16742 = !DILocation(line: 729, column: 31, scope: !16736)
!16743 = !DILocation(line: 729, column: 4, scope: !16736)
!16744 = !DILocation(line: 730, column: 15, scope: !16703)
!16745 = !DILocation(line: 730, column: 2, scope: !16703)
!16746 = !DILocation(line: 731, column: 18, scope: !16703)
!16747 = !DILocation(line: 731, column: 2, scope: !16703)
!16748 = !DILocation(line: 733, column: 11, scope: !16703)
!16749 = !DILocation(line: 733, column: 2, scope: !16703)
!16750 = !DILocation(line: 734, column: 16, scope: !16703)
!16751 = !DILocation(line: 734, column: 22, scope: !16703)
!16752 = !DILocation(line: 734, column: 27, scope: !16703)
!16753 = !DILocation(line: 734, column: 2, scope: !16703)
!16754 = !DILocation(line: 736, column: 22, scope: !16703)
!16755 = !DILocation(line: 736, column: 28, scope: !16703)
!16756 = !DILocation(line: 736, column: 34, scope: !16703)
!16757 = !DILocation(line: 736, column: 2, scope: !16703)
!16758 = !DILocation(line: 737, column: 2, scope: !16703)
!16759 = !DILocation(line: 737, column: 8, scope: !16703)
!16760 = !DILocation(line: 737, column: 13, scope: !16703)
!16761 = !DILocation(line: 737, column: 17, scope: !16703)
!16762 = !DILabel(scope: !16703, name: "cleanup", file: !3, line: 738)
!16763 = !DILocation(line: 738, column: 1, scope: !16703)
!16764 = !DILocation(line: 739, column: 2, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 739, column: 2)
!16766 = !DILocation(line: 739, column: 2, scope: !16703)
!16767 = !DILocation(line: 740, column: 1, scope: !16703)
!16768 = distinct !DISubprogram(name: "write", scope: !3, file: !3, line: 812, type: !4886, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16769 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 843, column: 2, scope: !16768)
!16771 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16770)
!16772 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16773)
!16773 = distinct !DILocation(line: 830, column: 2, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 830, column: 2)
!16775 = distinct !DILexicalBlock(scope: !16776, file: !3, line: 830, column: 2)
!16776 = distinct !DILexicalBlock(scope: !16777, file: !3, line: 830, column: 2)
!16777 = distinct !DILexicalBlock(scope: !16778, file: !3, line: 830, column: 2)
!16778 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 830, column: 2)
!16779 = !DILocalVariable(name: "tty", arg: 1, scope: !16768, file: !3, line: 812, type: !3760)
!16780 = !DILocation(line: 812, column: 37, scope: !16768)
!16781 = !DILocalVariable(name: "buf", arg: 2, scope: !16768, file: !3, line: 813, type: !946)
!16782 = !DILocation(line: 813, column: 25, scope: !16768)
!16783 = !DILocalVariable(name: "count", arg: 3, scope: !16768, file: !3, line: 813, type: !32)
!16784 = !DILocation(line: 813, column: 34, scope: !16768)
!16785 = !DILocalVariable(name: "ret", scope: !16768, file: !3, line: 815, type: !32)
!16786 = !DILocation(line: 815, column: 6, scope: !16768)
!16787 = !DILocalVariable(name: "info", scope: !16768, file: !3, line: 816, type: !7530)
!16788 = !DILocation(line: 816, column: 20, scope: !16768)
!16789 = !DILocation(line: 816, column: 27, scope: !16768)
!16790 = !DILocation(line: 816, column: 32, scope: !16768)
!16791 = !DILocalVariable(name: "flags", scope: !16768, file: !3, line: 817, type: !312)
!16792 = !DILocation(line: 817, column: 16, scope: !16768)
!16793 = !DILocation(line: 819, column: 19, scope: !16794)
!16794 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 819, column: 6)
!16795 = !DILocation(line: 819, column: 25, scope: !16794)
!16796 = !DILocation(line: 819, column: 30, scope: !16794)
!16797 = !DILocation(line: 819, column: 6, scope: !16794)
!16798 = !DILocation(line: 819, column: 6, scope: !16768)
!16799 = !DILocation(line: 820, column: 3, scope: !16794)
!16800 = !DILocation(line: 822, column: 2, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 822, column: 2)
!16802 = !DILocation(line: 822, column: 2, scope: !16768)
!16803 = !DILocation(line: 824, column: 7, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 824, column: 6)
!16805 = !DILocation(line: 824, column: 13, scope: !16804)
!16806 = !DILocation(line: 824, column: 20, scope: !16804)
!16807 = !DILocation(line: 824, column: 24, scope: !16804)
!16808 = !DILocation(line: 824, column: 32, scope: !16804)
!16809 = !DILocation(line: 824, column: 38, scope: !16804)
!16810 = !DILocation(line: 824, column: 30, scope: !16804)
!16811 = !DILocation(line: 824, column: 6, scope: !16768)
!16812 = !DILocation(line: 825, column: 3, scope: !16804)
!16813 = !DILocation(line: 827, column: 7, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 827, column: 6)
!16815 = !DILocation(line: 827, column: 13, scope: !16814)
!16816 = !DILocation(line: 827, column: 16, scope: !16814)
!16817 = !DILocation(line: 827, column: 21, scope: !16814)
!16818 = !DILocation(line: 827, column: 29, scope: !16814)
!16819 = !DILocation(line: 827, column: 32, scope: !16814)
!16820 = !DILocation(line: 827, column: 37, scope: !16814)
!16821 = !DILocation(line: 827, column: 6, scope: !16768)
!16822 = !DILocation(line: 828, column: 3, scope: !16814)
!16823 = !DILocation(line: 830, column: 2, scope: !16768)
!16824 = !DILocation(line: 830, column: 2, scope: !16778)
!16825 = !DILocalVariable(name: "__dummy", scope: !16826, file: !3, line: 830, type: !312)
!16826 = distinct !DILexicalBlock(scope: !16777, file: !3, line: 830, column: 2)
!16827 = !DILocation(line: 830, column: 2, scope: !16826)
!16828 = !DILocalVariable(name: "__dummy2", scope: !16826, file: !3, line: 830, type: !312)
!16829 = !DILocation(line: 830, column: 2, scope: !16777)
!16830 = !DILocation(line: 830, column: 2, scope: !16776)
!16831 = !DILocation(line: 830, column: 2, scope: !16832)
!16832 = distinct !DILexicalBlock(scope: !16776, file: !3, line: 830, column: 2)
!16833 = !DILocalVariable(name: "__dummy", scope: !16834, file: !3, line: 830, type: !312)
!16834 = distinct !DILexicalBlock(scope: !16835, file: !3, line: 830, column: 2)
!16835 = distinct !DILexicalBlock(scope: !16832, file: !3, line: 830, column: 2)
!16836 = !DILocation(line: 830, column: 2, scope: !16834)
!16837 = !DILocalVariable(name: "__dummy2", scope: !16834, file: !3, line: 830, type: !312)
!16838 = !DILocation(line: 830, column: 2, scope: !16835)
!16839 = !DILocation(line: 830, column: 2, scope: !16775)
!16840 = !{i32 -2139578364}
!16841 = !DILocation(line: 830, column: 2, scope: !16774)
!16842 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16773)
!16843 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16773)
!16844 = !DILocation(line: 832, column: 6, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 832, column: 6)
!16846 = !DILocation(line: 832, column: 12, scope: !16845)
!16847 = !DILocation(line: 832, column: 6, scope: !16768)
!16848 = !DILocation(line: 834, column: 16, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16850, file: !3, line: 834, column: 7)
!16850 = distinct !DILexicalBlock(scope: !16845, file: !3, line: 832, column: 22)
!16851 = !DILocation(line: 834, column: 22, scope: !16849)
!16852 = !DILocation(line: 834, column: 28, scope: !16849)
!16853 = !DILocation(line: 834, column: 36, scope: !16849)
!16854 = !DILocation(line: 834, column: 42, scope: !16849)
!16855 = !DILocation(line: 834, column: 8, scope: !16849)
!16856 = !DILocation(line: 834, column: 7, scope: !16850)
!16857 = !DILocation(line: 835, column: 4, scope: !16849)
!16858 = !DILocation(line: 836, column: 3, scope: !16850)
!16859 = !DILocation(line: 836, column: 9, scope: !16850)
!16860 = !DILocation(line: 836, column: 18, scope: !16850)
!16861 = !DILocation(line: 837, column: 2, scope: !16850)
!16862 = !DILocation(line: 839, column: 14, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 839, column: 6)
!16864 = !DILocation(line: 839, column: 20, scope: !16863)
!16865 = !DILocation(line: 839, column: 25, scope: !16863)
!16866 = !DILocation(line: 839, column: 6, scope: !16863)
!16867 = !DILocation(line: 839, column: 6, scope: !16768)
!16868 = !DILocation(line: 840, column: 9, scope: !16863)
!16869 = !DILocation(line: 840, column: 7, scope: !16863)
!16870 = !DILocation(line: 840, column: 3, scope: !16863)
!16871 = !DILocation(line: 839, column: 30, scope: !16863)
!16872 = !DILabel(scope: !16768, name: "cleanup", file: !3, line: 842)
!16873 = !DILocation(line: 842, column: 1, scope: !16768)
!16874 = !DILocation(line: 843, column: 26, scope: !16768)
!16875 = !DILocation(line: 843, column: 32, scope: !16768)
!16876 = !DILocation(line: 843, column: 38, scope: !16768)
!16877 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16770)
!16878 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16770)
!16879 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16770)
!16880 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16770)
!16881 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16770)
!16882 = !DILocation(line: 844, column: 2, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 844, column: 2)
!16884 = !DILocation(line: 844, column: 2, scope: !16768)
!16885 = !DILocation(line: 845, column: 9, scope: !16768)
!16886 = !DILocation(line: 845, column: 2, scope: !16768)
!16887 = !DILocation(line: 846, column: 1, scope: !16768)
!16888 = distinct !DISubprogram(name: "put_char", scope: !3, file: !3, line: 848, type: !4890, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16889 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16890)
!16890 = distinct !DILocation(line: 864, column: 2, scope: !16888)
!16891 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16890)
!16892 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 859, column: 2, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16895, file: !3, line: 859, column: 2)
!16895 = distinct !DILexicalBlock(scope: !16896, file: !3, line: 859, column: 2)
!16896 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 859, column: 2)
!16897 = distinct !DILexicalBlock(scope: !16898, file: !3, line: 859, column: 2)
!16898 = distinct !DILexicalBlock(scope: !16888, file: !3, line: 859, column: 2)
!16899 = !DILocalVariable(name: "tty", arg: 1, scope: !16888, file: !3, line: 848, type: !3760)
!16900 = !DILocation(line: 848, column: 40, scope: !16888)
!16901 = !DILocalVariable(name: "ch", arg: 2, scope: !16888, file: !3, line: 848, type: !482)
!16902 = !DILocation(line: 848, column: 59, scope: !16888)
!16903 = !DILocalVariable(name: "info", scope: !16888, file: !3, line: 850, type: !7530)
!16904 = !DILocation(line: 850, column: 20, scope: !16888)
!16905 = !DILocation(line: 850, column: 27, scope: !16888)
!16906 = !DILocation(line: 850, column: 32, scope: !16888)
!16907 = !DILocalVariable(name: "flags", scope: !16888, file: !3, line: 851, type: !312)
!16908 = !DILocation(line: 851, column: 16, scope: !16888)
!16909 = !DILocalVariable(name: "ret", scope: !16888, file: !3, line: 852, type: !32)
!16910 = !DILocation(line: 852, column: 6, scope: !16888)
!16911 = !DILocation(line: 854, column: 19, scope: !16912)
!16912 = distinct !DILexicalBlock(scope: !16888, file: !3, line: 854, column: 6)
!16913 = !DILocation(line: 854, column: 25, scope: !16912)
!16914 = !DILocation(line: 854, column: 30, scope: !16912)
!16915 = !DILocation(line: 854, column: 6, scope: !16912)
!16916 = !DILocation(line: 854, column: 6, scope: !16888)
!16917 = !DILocation(line: 855, column: 3, scope: !16912)
!16918 = !DILocation(line: 856, column: 2, scope: !16919)
!16919 = distinct !DILexicalBlock(scope: !16888, file: !3, line: 856, column: 2)
!16920 = !DILocation(line: 856, column: 2, scope: !16888)
!16921 = !DILocation(line: 857, column: 7, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16888, file: !3, line: 857, column: 6)
!16923 = !DILocation(line: 857, column: 13, scope: !16922)
!16924 = !DILocation(line: 857, column: 6, scope: !16888)
!16925 = !DILocation(line: 858, column: 3, scope: !16922)
!16926 = !DILocation(line: 859, column: 2, scope: !16888)
!16927 = !DILocation(line: 859, column: 2, scope: !16898)
!16928 = !DILocalVariable(name: "__dummy", scope: !16929, file: !3, line: 859, type: !312)
!16929 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 859, column: 2)
!16930 = !DILocation(line: 859, column: 2, scope: !16929)
!16931 = !DILocalVariable(name: "__dummy2", scope: !16929, file: !3, line: 859, type: !312)
!16932 = !DILocation(line: 859, column: 2, scope: !16897)
!16933 = !DILocation(line: 859, column: 2, scope: !16896)
!16934 = !DILocation(line: 859, column: 2, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16896, file: !3, line: 859, column: 2)
!16936 = !DILocalVariable(name: "__dummy", scope: !16937, file: !3, line: 859, type: !312)
!16937 = distinct !DILexicalBlock(scope: !16938, file: !3, line: 859, column: 2)
!16938 = distinct !DILexicalBlock(scope: !16935, file: !3, line: 859, column: 2)
!16939 = !DILocation(line: 859, column: 2, scope: !16937)
!16940 = !DILocalVariable(name: "__dummy2", scope: !16937, file: !3, line: 859, type: !312)
!16941 = !DILocation(line: 859, column: 2, scope: !16938)
!16942 = !DILocation(line: 859, column: 2, scope: !16895)
!16943 = !{i32 -2139577155}
!16944 = !DILocation(line: 859, column: 2, scope: !16894)
!16945 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16893)
!16946 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16893)
!16947 = !DILocation(line: 860, column: 6, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16888, file: !3, line: 860, column: 6)
!16949 = !DILocation(line: 860, column: 12, scope: !16948)
!16950 = !DILocation(line: 860, column: 23, scope: !16948)
!16951 = !DILocation(line: 860, column: 29, scope: !16948)
!16952 = !DILocation(line: 860, column: 21, scope: !16948)
!16953 = !DILocation(line: 860, column: 6, scope: !16888)
!16954 = !DILocation(line: 861, column: 36, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16948, file: !3, line: 860, column: 45)
!16956 = !DILocation(line: 861, column: 3, scope: !16955)
!16957 = !DILocation(line: 861, column: 9, scope: !16955)
!16958 = !DILocation(line: 861, column: 16, scope: !16955)
!16959 = !DILocation(line: 861, column: 22, scope: !16955)
!16960 = !DILocation(line: 861, column: 30, scope: !16955)
!16961 = !DILocation(line: 861, column: 34, scope: !16955)
!16962 = !DILocation(line: 862, column: 7, scope: !16955)
!16963 = !DILocation(line: 863, column: 2, scope: !16955)
!16964 = !DILocation(line: 864, column: 26, scope: !16888)
!16965 = !DILocation(line: 864, column: 32, scope: !16888)
!16966 = !DILocation(line: 864, column: 37, scope: !16888)
!16967 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16890)
!16968 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16890)
!16969 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16890)
!16970 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16890)
!16971 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16890)
!16972 = !DILocation(line: 865, column: 9, scope: !16888)
!16973 = !DILocation(line: 865, column: 2, scope: !16888)
!16974 = !DILocation(line: 866, column: 1, scope: !16888)
!16975 = distinct !DISubprogram(name: "flush_chars", scope: !3, file: !3, line: 939, type: !4881, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!16976 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !16977)
!16977 = distinct !DILocation(line: 957, column: 2, scope: !16975)
!16978 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !16977)
!16979 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !16980)
!16980 = distinct !DILocation(line: 954, column: 2, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16982, file: !3, line: 954, column: 2)
!16982 = distinct !DILexicalBlock(scope: !16983, file: !3, line: 954, column: 2)
!16983 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 954, column: 2)
!16984 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 954, column: 2)
!16985 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 954, column: 2)
!16986 = !DILocalVariable(name: "tty", arg: 1, scope: !16975, file: !3, line: 939, type: !3760)
!16987 = !DILocation(line: 939, column: 44, scope: !16975)
!16988 = !DILocalVariable(name: "info", scope: !16975, file: !3, line: 941, type: !7530)
!16989 = !DILocation(line: 941, column: 20, scope: !16975)
!16990 = !DILocation(line: 941, column: 27, scope: !16975)
!16991 = !DILocation(line: 941, column: 32, scope: !16975)
!16992 = !DILocalVariable(name: "flags", scope: !16975, file: !3, line: 942, type: !312)
!16993 = !DILocation(line: 942, column: 16, scope: !16975)
!16994 = !DILocation(line: 944, column: 19, scope: !16995)
!16995 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 944, column: 6)
!16996 = !DILocation(line: 944, column: 25, scope: !16995)
!16997 = !DILocation(line: 944, column: 30, scope: !16995)
!16998 = !DILocation(line: 944, column: 6, scope: !16995)
!16999 = !DILocation(line: 944, column: 6, scope: !16975)
!17000 = !DILocation(line: 945, column: 3, scope: !16995)
!17001 = !DILocation(line: 946, column: 2, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 946, column: 2)
!17003 = !DILocation(line: 946, column: 2, scope: !16975)
!17004 = !DILocation(line: 948, column: 6, scope: !17005)
!17005 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 948, column: 6)
!17006 = !DILocation(line: 948, column: 12, scope: !17005)
!17007 = !DILocation(line: 948, column: 21, scope: !17005)
!17008 = !DILocation(line: 948, column: 26, scope: !17005)
!17009 = !DILocation(line: 948, column: 29, scope: !17005)
!17010 = !DILocation(line: 948, column: 34, scope: !17005)
!17011 = !DILocation(line: 948, column: 42, scope: !17005)
!17012 = !DILocation(line: 949, column: 6, scope: !17005)
!17013 = !DILocation(line: 949, column: 11, scope: !17005)
!17014 = !DILocation(line: 949, column: 22, scope: !17005)
!17015 = !DILocation(line: 949, column: 26, scope: !17005)
!17016 = !DILocation(line: 949, column: 32, scope: !17005)
!17017 = !DILocation(line: 948, column: 6, scope: !16975)
!17018 = !DILocation(line: 950, column: 3, scope: !17005)
!17019 = !DILocation(line: 952, column: 2, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 952, column: 2)
!17021 = !DILocation(line: 952, column: 2, scope: !16975)
!17022 = !DILocation(line: 954, column: 2, scope: !16975)
!17023 = !DILocation(line: 954, column: 2, scope: !16985)
!17024 = !DILocalVariable(name: "__dummy", scope: !17025, file: !3, line: 954, type: !312)
!17025 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 954, column: 2)
!17026 = !DILocation(line: 954, column: 2, scope: !17025)
!17027 = !DILocalVariable(name: "__dummy2", scope: !17025, file: !3, line: 954, type: !312)
!17028 = !DILocation(line: 954, column: 2, scope: !16984)
!17029 = !DILocation(line: 954, column: 2, scope: !16983)
!17030 = !DILocation(line: 954, column: 2, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !16983, file: !3, line: 954, column: 2)
!17032 = !DILocalVariable(name: "__dummy", scope: !17033, file: !3, line: 954, type: !312)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !3, line: 954, column: 2)
!17034 = distinct !DILexicalBlock(scope: !17031, file: !3, line: 954, column: 2)
!17035 = !DILocation(line: 954, column: 2, scope: !17033)
!17036 = !DILocalVariable(name: "__dummy2", scope: !17033, file: !3, line: 954, type: !312)
!17037 = !DILocation(line: 954, column: 2, scope: !17034)
!17038 = !DILocation(line: 954, column: 2, scope: !16982)
!17039 = !{i32 -2139572152}
!17040 = !DILocation(line: 954, column: 2, scope: !16981)
!17041 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !16980)
!17042 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !16980)
!17043 = !DILocation(line: 955, column: 6, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !16975, file: !3, line: 955, column: 6)
!17045 = !DILocation(line: 955, column: 12, scope: !17044)
!17046 = !DILocation(line: 955, column: 21, scope: !17044)
!17047 = !DILocation(line: 955, column: 32, scope: !17044)
!17048 = !DILocation(line: 955, column: 38, scope: !17044)
!17049 = !DILocation(line: 955, column: 44, scope: !17044)
!17050 = !DILocation(line: 955, column: 52, scope: !17044)
!17051 = !DILocation(line: 955, column: 58, scope: !17044)
!17052 = !DILocation(line: 955, column: 24, scope: !17044)
!17053 = !DILocation(line: 955, column: 6, scope: !16975)
!17054 = !DILocation(line: 956, column: 3, scope: !17044)
!17055 = !DILocation(line: 956, column: 9, scope: !17044)
!17056 = !DILocation(line: 956, column: 18, scope: !17044)
!17057 = !DILocation(line: 957, column: 26, scope: !16975)
!17058 = !DILocation(line: 957, column: 32, scope: !16975)
!17059 = !DILocation(line: 957, column: 37, scope: !16975)
!17060 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !16977)
!17061 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !16977)
!17062 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !16977)
!17063 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !16977)
!17064 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !16977)
!17065 = !DILocation(line: 958, column: 1, scope: !16975)
!17066 = distinct !DISubprogram(name: "write_room", scope: !3, file: !3, line: 927, type: !4895, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17067 = !DILocalVariable(name: "tty", arg: 1, scope: !17066, file: !3, line: 927, type: !3760)
!17068 = !DILocation(line: 927, column: 42, scope: !17066)
!17069 = !DILocalVariable(name: "info", scope: !17066, file: !3, line: 929, type: !7530)
!17070 = !DILocation(line: 929, column: 20, scope: !17066)
!17071 = !DILocation(line: 929, column: 27, scope: !17066)
!17072 = !DILocation(line: 929, column: 32, scope: !17066)
!17073 = !DILocalVariable(name: "ret", scope: !17066, file: !3, line: 930, type: !32)
!17074 = !DILocation(line: 930, column: 6, scope: !17066)
!17075 = !DILocation(line: 932, column: 19, scope: !17076)
!17076 = distinct !DILexicalBlock(scope: !17066, file: !3, line: 932, column: 6)
!17077 = !DILocation(line: 932, column: 25, scope: !17076)
!17078 = !DILocation(line: 932, column: 30, scope: !17076)
!17079 = !DILocation(line: 932, column: 6, scope: !17076)
!17080 = !DILocation(line: 932, column: 6, scope: !17066)
!17081 = !DILocation(line: 933, column: 3, scope: !17076)
!17082 = !DILocation(line: 934, column: 9, scope: !17066)
!17083 = !DILocation(line: 934, column: 15, scope: !17066)
!17084 = !DILocation(line: 934, column: 8, scope: !17066)
!17085 = !DILocation(line: 934, column: 6, scope: !17066)
!17086 = !DILocation(line: 935, column: 2, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17066, file: !3, line: 935, column: 2)
!17088 = !DILocation(line: 935, column: 2, scope: !17066)
!17089 = !DILocation(line: 936, column: 9, scope: !17066)
!17090 = !DILocation(line: 936, column: 2, scope: !17066)
!17091 = !DILocation(line: 937, column: 1, scope: !17066)
!17092 = distinct !DISubprogram(name: "chars_in_buffer", scope: !3, file: !3, line: 1313, type: !4895, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17093 = !DILocalVariable(name: "tty", arg: 1, scope: !17092, file: !3, line: 1313, type: !3760)
!17094 = !DILocation(line: 1313, column: 47, scope: !17092)
!17095 = !DILocalVariable(name: "info", scope: !17092, file: !3, line: 1315, type: !7530)
!17096 = !DILocation(line: 1315, column: 20, scope: !17092)
!17097 = !DILocation(line: 1315, column: 27, scope: !17092)
!17098 = !DILocation(line: 1315, column: 32, scope: !17092)
!17099 = !DILocalVariable(name: "count", scope: !17092, file: !3, line: 1316, type: !32)
!17100 = !DILocation(line: 1316, column: 6, scope: !17092)
!17101 = !DILocation(line: 1317, column: 19, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17092, file: !3, line: 1317, column: 6)
!17103 = !DILocation(line: 1317, column: 25, scope: !17102)
!17104 = !DILocation(line: 1317, column: 30, scope: !17102)
!17105 = !DILocation(line: 1317, column: 6, scope: !17102)
!17106 = !DILocation(line: 1317, column: 6, scope: !17092)
!17107 = !DILocation(line: 1318, column: 3, scope: !17102)
!17108 = !DILocation(line: 1319, column: 21, scope: !17092)
!17109 = !DILocation(line: 1319, column: 10, scope: !17092)
!17110 = !DILocation(line: 1319, column: 8, scope: !17092)
!17111 = !DILocation(line: 1320, column: 2, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17092, file: !3, line: 1320, column: 2)
!17113 = !DILocation(line: 1320, column: 2, scope: !17092)
!17114 = !DILocation(line: 1321, column: 9, scope: !17092)
!17115 = !DILocation(line: 1321, column: 2, scope: !17092)
!17116 = !DILocation(line: 1322, column: 1, scope: !17092)
!17117 = distinct !DISubprogram(name: "ioctl", scope: !3, file: !3, line: 1021, type: !4900, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17118 = !DILocalVariable(name: "tty", arg: 1, scope: !17117, file: !3, line: 1021, type: !3760)
!17119 = !DILocation(line: 1021, column: 37, scope: !17117)
!17120 = !DILocalVariable(name: "cmd", arg: 2, scope: !17117, file: !3, line: 1022, type: !7)
!17121 = !DILocation(line: 1022, column: 17, scope: !17117)
!17122 = !DILocalVariable(name: "arg", arg: 3, scope: !17117, file: !3, line: 1022, type: !312)
!17123 = !DILocation(line: 1022, column: 36, scope: !17117)
!17124 = !DILocalVariable(name: "info", scope: !17117, file: !3, line: 1024, type: !7530)
!17125 = !DILocation(line: 1024, column: 20, scope: !17117)
!17126 = !DILocation(line: 1024, column: 27, scope: !17117)
!17127 = !DILocation(line: 1024, column: 32, scope: !17117)
!17128 = !DILocalVariable(name: "argp", scope: !17117, file: !3, line: 1025, type: !591)
!17129 = !DILocation(line: 1025, column: 15, scope: !17117)
!17130 = !DILocation(line: 1025, column: 37, scope: !17117)
!17131 = !DILocation(line: 1025, column: 22, scope: !17117)
!17132 = !DILocalVariable(name: "ret", scope: !17117, file: !3, line: 1026, type: !32)
!17133 = !DILocation(line: 1026, column: 6, scope: !17117)
!17134 = !DILocation(line: 1028, column: 19, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17117, file: !3, line: 1028, column: 6)
!17136 = !DILocation(line: 1028, column: 25, scope: !17135)
!17137 = !DILocation(line: 1028, column: 30, scope: !17135)
!17138 = !DILocation(line: 1028, column: 6, scope: !17135)
!17139 = !DILocation(line: 1028, column: 6, scope: !17117)
!17140 = !DILocation(line: 1029, column: 3, scope: !17135)
!17141 = !DILocation(line: 1030, column: 2, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17117, file: !3, line: 1030, column: 2)
!17143 = !DILocation(line: 1030, column: 2, scope: !17117)
!17144 = !DILocation(line: 1032, column: 6, scope: !17145)
!17145 = distinct !DILexicalBlock(scope: !17117, file: !3, line: 1032, column: 6)
!17146 = !DILocation(line: 1032, column: 10, scope: !17145)
!17147 = !DILocation(line: 1032, column: 6, scope: !17117)
!17148 = !DILocation(line: 1033, column: 20, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17150, file: !3, line: 1033, column: 7)
!17150 = distinct !DILexicalBlock(scope: !17145, file: !3, line: 1032, column: 25)
!17151 = !DILocation(line: 1033, column: 7, scope: !17149)
!17152 = !DILocation(line: 1033, column: 7, scope: !17150)
!17153 = !DILocation(line: 1034, column: 7, scope: !17149)
!17154 = !DILocation(line: 1035, column: 2, scope: !17150)
!17155 = !DILocation(line: 1037, column: 10, scope: !17117)
!17156 = !DILocation(line: 1037, column: 2, scope: !17117)
!17157 = !DILocation(line: 1039, column: 26, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17117, file: !3, line: 1037, column: 15)
!17159 = !DILocation(line: 1039, column: 32, scope: !17158)
!17160 = !DILocation(line: 1039, column: 10, scope: !17158)
!17161 = !DILocation(line: 1039, column: 3, scope: !17158)
!17162 = !DILocation(line: 1041, column: 27, scope: !17158)
!17163 = !DILocation(line: 1041, column: 37, scope: !17158)
!17164 = !DILocation(line: 1041, column: 32, scope: !17158)
!17165 = !DILocation(line: 1041, column: 10, scope: !17158)
!17166 = !DILocation(line: 1041, column: 3, scope: !17158)
!17167 = !DILocation(line: 1043, column: 19, scope: !17158)
!17168 = !DILocation(line: 1043, column: 25, scope: !17158)
!17169 = !DILocation(line: 1043, column: 10, scope: !17158)
!17170 = !DILocation(line: 1043, column: 3, scope: !17158)
!17171 = !DILocation(line: 1045, column: 19, scope: !17158)
!17172 = !DILocation(line: 1045, column: 25, scope: !17158)
!17173 = !DILocation(line: 1045, column: 10, scope: !17158)
!17174 = !DILocation(line: 1045, column: 3, scope: !17158)
!17175 = !DILocation(line: 1047, column: 20, scope: !17158)
!17176 = !DILocation(line: 1047, column: 26, scope: !17158)
!17177 = !DILocation(line: 1047, column: 10, scope: !17158)
!17178 = !DILocation(line: 1047, column: 3, scope: !17158)
!17179 = !DILocation(line: 1049, column: 20, scope: !17158)
!17180 = !DILocation(line: 1049, column: 26, scope: !17158)
!17181 = !DILocation(line: 1049, column: 10, scope: !17158)
!17182 = !DILocation(line: 1049, column: 3, scope: !17158)
!17183 = !DILocation(line: 1051, column: 20, scope: !17158)
!17184 = !DILocation(line: 1051, column: 31, scope: !17158)
!17185 = !DILocation(line: 1051, column: 26, scope: !17158)
!17186 = !DILocation(line: 1051, column: 10, scope: !17158)
!17187 = !DILocation(line: 1051, column: 3, scope: !17158)
!17188 = !DILocation(line: 1053, column: 20, scope: !17158)
!17189 = !DILocation(line: 1053, column: 26, scope: !17158)
!17190 = !DILocation(line: 1053, column: 10, scope: !17158)
!17191 = !DILocation(line: 1053, column: 3, scope: !17158)
!17192 = !DILocation(line: 1055, column: 20, scope: !17158)
!17193 = !DILocation(line: 1055, column: 31, scope: !17158)
!17194 = !DILocation(line: 1055, column: 26, scope: !17158)
!17195 = !DILocation(line: 1055, column: 10, scope: !17158)
!17196 = !DILocation(line: 1055, column: 3, scope: !17158)
!17197 = !DILocation(line: 1057, column: 14, scope: !17117)
!17198 = !DILocation(line: 1057, column: 20, scope: !17117)
!17199 = !DILocation(line: 1057, column: 25, scope: !17117)
!17200 = !DILocation(line: 1057, column: 2, scope: !17117)
!17201 = !DILocation(line: 1058, column: 10, scope: !17117)
!17202 = !DILocation(line: 1058, column: 2, scope: !17117)
!17203 = !DILocation(line: 1060, column: 20, scope: !17204)
!17204 = distinct !DILexicalBlock(scope: !17117, file: !3, line: 1058, column: 15)
!17205 = !DILocation(line: 1060, column: 26, scope: !17204)
!17206 = !DILocation(line: 1060, column: 9, scope: !17204)
!17207 = !DILocation(line: 1060, column: 7, scope: !17204)
!17208 = !DILocation(line: 1061, column: 3, scope: !17204)
!17209 = !DILocation(line: 1063, column: 20, scope: !17204)
!17210 = !DILocation(line: 1063, column: 26, scope: !17204)
!17211 = !DILocation(line: 1063, column: 9, scope: !17204)
!17212 = !DILocation(line: 1063, column: 7, scope: !17204)
!17213 = !DILocation(line: 1064, column: 3, scope: !17204)
!17214 = !DILocation(line: 1066, column: 20, scope: !17204)
!17215 = !DILocation(line: 1066, column: 26, scope: !17204)
!17216 = !DILocation(line: 1066, column: 9, scope: !17204)
!17217 = !DILocation(line: 1066, column: 7, scope: !17204)
!17218 = !DILocation(line: 1067, column: 3, scope: !17204)
!17219 = !DILocation(line: 1069, column: 20, scope: !17204)
!17220 = !DILocation(line: 1069, column: 31, scope: !17204)
!17221 = !DILocation(line: 1069, column: 26, scope: !17204)
!17222 = !DILocation(line: 1069, column: 9, scope: !17204)
!17223 = !DILocation(line: 1069, column: 7, scope: !17204)
!17224 = !DILocation(line: 1070, column: 3, scope: !17204)
!17225 = !DILocation(line: 1072, column: 19, scope: !17204)
!17226 = !DILocation(line: 1072, column: 30, scope: !17204)
!17227 = !DILocation(line: 1072, column: 25, scope: !17204)
!17228 = !DILocation(line: 1072, column: 9, scope: !17204)
!17229 = !DILocation(line: 1072, column: 7, scope: !17204)
!17230 = !DILocation(line: 1073, column: 3, scope: !17204)
!17231 = !DILocation(line: 1075, column: 19, scope: !17204)
!17232 = !DILocation(line: 1075, column: 30, scope: !17204)
!17233 = !DILocation(line: 1075, column: 25, scope: !17204)
!17234 = !DILocation(line: 1075, column: 9, scope: !17204)
!17235 = !DILocation(line: 1075, column: 7, scope: !17204)
!17236 = !DILocation(line: 1076, column: 3, scope: !17204)
!17237 = !DILocation(line: 1078, column: 18, scope: !17204)
!17238 = !DILocation(line: 1078, column: 9, scope: !17204)
!17239 = !DILocation(line: 1078, column: 7, scope: !17204)
!17240 = !DILocation(line: 1079, column: 3, scope: !17204)
!17241 = !DILocation(line: 1081, column: 19, scope: !17204)
!17242 = !DILocation(line: 1081, column: 25, scope: !17204)
!17243 = !DILocation(line: 1081, column: 9, scope: !17204)
!17244 = !DILocation(line: 1081, column: 7, scope: !17204)
!17245 = !DILocation(line: 1082, column: 3, scope: !17204)
!17246 = !DILocation(line: 1084, column: 23, scope: !17204)
!17247 = !DILocation(line: 1084, column: 29, scope: !17204)
!17248 = !DILocation(line: 1084, column: 9, scope: !17204)
!17249 = !DILocation(line: 1084, column: 7, scope: !17204)
!17250 = !DILocation(line: 1085, column: 3, scope: !17204)
!17251 = !DILocation(line: 1087, column: 23, scope: !17204)
!17252 = !DILocation(line: 1087, column: 33, scope: !17204)
!17253 = !DILocation(line: 1087, column: 28, scope: !17204)
!17254 = !DILocation(line: 1087, column: 9, scope: !17204)
!17255 = !DILocation(line: 1087, column: 7, scope: !17204)
!17256 = !DILocation(line: 1088, column: 3, scope: !17204)
!17257 = !DILocation(line: 1090, column: 7, scope: !17204)
!17258 = !DILocation(line: 1091, column: 2, scope: !17204)
!17259 = !DILocation(line: 1092, column: 16, scope: !17117)
!17260 = !DILocation(line: 1092, column: 22, scope: !17117)
!17261 = !DILocation(line: 1092, column: 27, scope: !17117)
!17262 = !DILocation(line: 1092, column: 2, scope: !17117)
!17263 = !DILocation(line: 1093, column: 9, scope: !17117)
!17264 = !DILocation(line: 1093, column: 2, scope: !17117)
!17265 = !DILocation(line: 1094, column: 1, scope: !17117)
!17266 = distinct !DISubprogram(name: "set_termios", scope: !3, file: !3, line: 766, type: !4908, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17267 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17268)
!17268 = distinct !DILocation(line: 790, column: 3, scope: !17269)
!17269 = distinct !DILexicalBlock(scope: !17270, file: !3, line: 784, column: 54)
!17270 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 784, column: 6)
!17271 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17268)
!17272 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17273)
!17273 = distinct !DILocation(line: 788, column: 3, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17275, file: !3, line: 788, column: 3)
!17275 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 788, column: 3)
!17276 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 788, column: 3)
!17277 = distinct !DILexicalBlock(scope: !17278, file: !3, line: 788, column: 3)
!17278 = distinct !DILexicalBlock(scope: !17269, file: !3, line: 788, column: 3)
!17279 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 780, column: 3, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17282, file: !3, line: 776, column: 54)
!17282 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 776, column: 6)
!17283 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17280)
!17284 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17285)
!17285 = distinct !DILocation(line: 778, column: 3, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17287, file: !3, line: 778, column: 3)
!17287 = distinct !DILexicalBlock(scope: !17288, file: !3, line: 778, column: 3)
!17288 = distinct !DILexicalBlock(scope: !17289, file: !3, line: 778, column: 3)
!17289 = distinct !DILexicalBlock(scope: !17290, file: !3, line: 778, column: 3)
!17290 = distinct !DILexicalBlock(scope: !17281, file: !3, line: 778, column: 3)
!17291 = !DILocalVariable(name: "tty", arg: 1, scope: !17266, file: !3, line: 766, type: !3760)
!17292 = !DILocation(line: 766, column: 44, scope: !17266)
!17293 = !DILocalVariable(name: "old_termios", arg: 2, scope: !17266, file: !3, line: 766, type: !4852)
!17294 = !DILocation(line: 766, column: 66, scope: !17266)
!17295 = !DILocalVariable(name: "info", scope: !17266, file: !3, line: 768, type: !7530)
!17296 = !DILocation(line: 768, column: 20, scope: !17266)
!17297 = !DILocation(line: 768, column: 27, scope: !17266)
!17298 = !DILocation(line: 768, column: 32, scope: !17266)
!17299 = !DILocalVariable(name: "flags", scope: !17266, file: !3, line: 769, type: !312)
!17300 = !DILocation(line: 769, column: 16, scope: !17266)
!17301 = !DILocation(line: 771, column: 2, scope: !17302)
!17302 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 771, column: 2)
!17303 = !DILocation(line: 771, column: 2, scope: !17266)
!17304 = !DILocation(line: 773, column: 16, scope: !17266)
!17305 = !DILocation(line: 773, column: 2, scope: !17266)
!17306 = !DILocation(line: 776, column: 7, scope: !17282)
!17307 = !DILocation(line: 776, column: 20, scope: !17282)
!17308 = !DILocation(line: 776, column: 28, scope: !17282)
!17309 = !DILocation(line: 776, column: 37, scope: !17282)
!17310 = !DILocation(line: 776, column: 41, scope: !17282)
!17311 = !DILocation(line: 776, column: 6, scope: !17266)
!17312 = !DILocation(line: 777, column: 3, scope: !17281)
!17313 = !DILocation(line: 777, column: 9, scope: !17281)
!17314 = !DILocation(line: 777, column: 17, scope: !17281)
!17315 = !DILocation(line: 778, column: 3, scope: !17281)
!17316 = !DILocation(line: 778, column: 3, scope: !17290)
!17317 = !DILocalVariable(name: "__dummy", scope: !17318, file: !3, line: 778, type: !312)
!17318 = distinct !DILexicalBlock(scope: !17289, file: !3, line: 778, column: 3)
!17319 = !DILocation(line: 778, column: 3, scope: !17318)
!17320 = !DILocalVariable(name: "__dummy2", scope: !17318, file: !3, line: 778, type: !312)
!17321 = !DILocation(line: 778, column: 3, scope: !17289)
!17322 = !DILocation(line: 778, column: 3, scope: !17288)
!17323 = !DILocation(line: 778, column: 3, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !17288, file: !3, line: 778, column: 3)
!17325 = !DILocalVariable(name: "__dummy", scope: !17326, file: !3, line: 778, type: !312)
!17326 = distinct !DILexicalBlock(scope: !17327, file: !3, line: 778, column: 3)
!17327 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 778, column: 3)
!17328 = !DILocation(line: 778, column: 3, scope: !17326)
!17329 = !DILocalVariable(name: "__dummy2", scope: !17326, file: !3, line: 778, type: !312)
!17330 = !DILocation(line: 778, column: 3, scope: !17327)
!17331 = !DILocation(line: 778, column: 3, scope: !17287)
!17332 = !{i32 -2139580806}
!17333 = !DILocation(line: 778, column: 3, scope: !17286)
!17334 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17285)
!17335 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17285)
!17336 = !DILocation(line: 779, column: 15, scope: !17281)
!17337 = !DILocation(line: 779, column: 3, scope: !17281)
!17338 = !DILocation(line: 780, column: 27, scope: !17281)
!17339 = !DILocation(line: 780, column: 33, scope: !17281)
!17340 = !DILocation(line: 780, column: 38, scope: !17281)
!17341 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17280)
!17342 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17280)
!17343 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17280)
!17344 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17280)
!17345 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17280)
!17346 = !DILocation(line: 781, column: 2, scope: !17281)
!17347 = !DILocation(line: 784, column: 8, scope: !17270)
!17348 = !DILocation(line: 784, column: 21, scope: !17270)
!17349 = !DILocation(line: 784, column: 29, scope: !17270)
!17350 = !DILocation(line: 784, column: 38, scope: !17270)
!17351 = !DILocation(line: 784, column: 41, scope: !17270)
!17352 = !DILocation(line: 784, column: 6, scope: !17266)
!17353 = !DILocation(line: 785, column: 3, scope: !17269)
!17354 = !DILocation(line: 785, column: 9, scope: !17269)
!17355 = !DILocation(line: 785, column: 17, scope: !17269)
!17356 = !DILocation(line: 786, column: 8, scope: !17357)
!17357 = distinct !DILexicalBlock(scope: !17269, file: !3, line: 786, column: 7)
!17358 = !DILocation(line: 786, column: 23, scope: !17357)
!17359 = !DILocation(line: 786, column: 41, scope: !17357)
!17360 = !DILocation(line: 786, column: 27, scope: !17357)
!17361 = !DILocation(line: 786, column: 7, scope: !17269)
!17362 = !DILocation(line: 787, column: 4, scope: !17357)
!17363 = !DILocation(line: 787, column: 10, scope: !17357)
!17364 = !DILocation(line: 787, column: 18, scope: !17357)
!17365 = !DILocation(line: 788, column: 3, scope: !17269)
!17366 = !DILocation(line: 788, column: 3, scope: !17278)
!17367 = !DILocalVariable(name: "__dummy", scope: !17368, file: !3, line: 788, type: !312)
!17368 = distinct !DILexicalBlock(scope: !17277, file: !3, line: 788, column: 3)
!17369 = !DILocation(line: 788, column: 3, scope: !17368)
!17370 = !DILocalVariable(name: "__dummy2", scope: !17368, file: !3, line: 788, type: !312)
!17371 = !DILocation(line: 788, column: 3, scope: !17277)
!17372 = !DILocation(line: 788, column: 3, scope: !17276)
!17373 = !DILocation(line: 788, column: 3, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 788, column: 3)
!17375 = !DILocalVariable(name: "__dummy", scope: !17376, file: !3, line: 788, type: !312)
!17376 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 788, column: 3)
!17377 = distinct !DILexicalBlock(scope: !17374, file: !3, line: 788, column: 3)
!17378 = !DILocation(line: 788, column: 3, scope: !17376)
!17379 = !DILocalVariable(name: "__dummy2", scope: !17376, file: !3, line: 788, type: !312)
!17380 = !DILocation(line: 788, column: 3, scope: !17377)
!17381 = !DILocation(line: 788, column: 3, scope: !17275)
!17382 = !{i32 -2139579595}
!17383 = !DILocation(line: 788, column: 3, scope: !17274)
!17384 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17273)
!17385 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17273)
!17386 = !DILocation(line: 789, column: 16, scope: !17269)
!17387 = !DILocation(line: 789, column: 4, scope: !17269)
!17388 = !DILocation(line: 790, column: 27, scope: !17269)
!17389 = !DILocation(line: 790, column: 33, scope: !17269)
!17390 = !DILocation(line: 790, column: 38, scope: !17269)
!17391 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17268)
!17392 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17268)
!17393 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17268)
!17394 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17268)
!17395 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17268)
!17396 = !DILocation(line: 791, column: 2, scope: !17269)
!17397 = !DILocation(line: 794, column: 7, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 794, column: 6)
!17399 = !DILocation(line: 794, column: 20, scope: !17398)
!17400 = !DILocation(line: 794, column: 28, scope: !17398)
!17401 = !DILocation(line: 794, column: 39, scope: !17398)
!17402 = !DILocation(line: 794, column: 43, scope: !17398)
!17403 = !DILocation(line: 794, column: 6, scope: !17266)
!17404 = !DILocation(line: 795, column: 3, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17398, file: !3, line: 794, column: 59)
!17406 = !DILocation(line: 795, column: 8, scope: !17405)
!17407 = !DILocation(line: 795, column: 19, scope: !17405)
!17408 = !DILocation(line: 796, column: 14, scope: !17405)
!17409 = !DILocation(line: 796, column: 3, scope: !17405)
!17410 = !DILocation(line: 797, column: 2, scope: !17405)
!17411 = !DILocation(line: 798, column: 1, scope: !17266)
!17412 = distinct !DISubprogram(name: "throttle", scope: !3, file: !3, line: 1327, type: !4881, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17413 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17414)
!17414 = distinct !DILocation(line: 1341, column: 3, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17416, file: !3, line: 1337, column: 22)
!17416 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1337, column: 6)
!17417 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17414)
!17418 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17419)
!17419 = distinct !DILocation(line: 1338, column: 3, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17421, file: !3, line: 1338, column: 3)
!17421 = distinct !DILexicalBlock(scope: !17422, file: !3, line: 1338, column: 3)
!17422 = distinct !DILexicalBlock(scope: !17423, file: !3, line: 1338, column: 3)
!17423 = distinct !DILexicalBlock(scope: !17424, file: !3, line: 1338, column: 3)
!17424 = distinct !DILexicalBlock(scope: !17415, file: !3, line: 1338, column: 3)
!17425 = !DILocalVariable(name: "tty", arg: 1, scope: !17412, file: !3, line: 1327, type: !3760)
!17426 = !DILocation(line: 1327, column: 42, scope: !17412)
!17427 = !DILocalVariable(name: "info", scope: !17412, file: !3, line: 1329, type: !7530)
!17428 = !DILocation(line: 1329, column: 20, scope: !17412)
!17429 = !DILocation(line: 1329, column: 27, scope: !17412)
!17430 = !DILocation(line: 1329, column: 32, scope: !17412)
!17431 = !DILocalVariable(name: "flags", scope: !17412, file: !3, line: 1330, type: !312)
!17432 = !DILocation(line: 1330, column: 16, scope: !17412)
!17433 = !DILocation(line: 1332, column: 19, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1332, column: 6)
!17435 = !DILocation(line: 1332, column: 25, scope: !17434)
!17436 = !DILocation(line: 1332, column: 30, scope: !17434)
!17437 = !DILocation(line: 1332, column: 6, scope: !17434)
!17438 = !DILocation(line: 1332, column: 6, scope: !17412)
!17439 = !DILocation(line: 1333, column: 3, scope: !17434)
!17440 = !DILocation(line: 1334, column: 2, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1334, column: 2)
!17442 = !DILocation(line: 1334, column: 2, scope: !17412)
!17443 = !DILocation(line: 1335, column: 6, scope: !17444)
!17444 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1335, column: 6)
!17445 = !DILocation(line: 1335, column: 6, scope: !17412)
!17446 = !DILocation(line: 1336, column: 14, scope: !17444)
!17447 = !DILocation(line: 1336, column: 19, scope: !17444)
!17448 = !DILocation(line: 1336, column: 3, scope: !17444)
!17449 = !DILocation(line: 1337, column: 6, scope: !17416)
!17450 = !DILocation(line: 1337, column: 6, scope: !17412)
!17451 = !DILocation(line: 1338, column: 3, scope: !17415)
!17452 = !DILocation(line: 1338, column: 3, scope: !17424)
!17453 = !DILocalVariable(name: "__dummy", scope: !17454, file: !3, line: 1338, type: !312)
!17454 = distinct !DILexicalBlock(scope: !17423, file: !3, line: 1338, column: 3)
!17455 = !DILocation(line: 1338, column: 3, scope: !17454)
!17456 = !DILocalVariable(name: "__dummy2", scope: !17454, file: !3, line: 1338, type: !312)
!17457 = !DILocation(line: 1338, column: 3, scope: !17423)
!17458 = !DILocation(line: 1338, column: 3, scope: !17422)
!17459 = !DILocation(line: 1338, column: 3, scope: !17460)
!17460 = distinct !DILexicalBlock(scope: !17422, file: !3, line: 1338, column: 3)
!17461 = !DILocalVariable(name: "__dummy", scope: !17462, file: !3, line: 1338, type: !312)
!17462 = distinct !DILexicalBlock(scope: !17463, file: !3, line: 1338, column: 3)
!17463 = distinct !DILexicalBlock(scope: !17460, file: !3, line: 1338, column: 3)
!17464 = !DILocation(line: 1338, column: 3, scope: !17462)
!17465 = !DILocalVariable(name: "__dummy2", scope: !17462, file: !3, line: 1338, type: !312)
!17466 = !DILocation(line: 1338, column: 3, scope: !17463)
!17467 = !DILocation(line: 1338, column: 3, scope: !17421)
!17468 = !{i32 -2139555187}
!17469 = !DILocation(line: 1338, column: 3, scope: !17420)
!17470 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17419)
!17471 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17419)
!17472 = !DILocation(line: 1339, column: 3, scope: !17415)
!17473 = !DILocation(line: 1339, column: 9, scope: !17415)
!17474 = !DILocation(line: 1339, column: 17, scope: !17415)
!17475 = !DILocation(line: 1340, column: 15, scope: !17415)
!17476 = !DILocation(line: 1340, column: 3, scope: !17415)
!17477 = !DILocation(line: 1341, column: 27, scope: !17415)
!17478 = !DILocation(line: 1341, column: 33, scope: !17415)
!17479 = !DILocation(line: 1341, column: 38, scope: !17415)
!17480 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17414)
!17481 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17414)
!17482 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17414)
!17483 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17414)
!17484 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17414)
!17485 = !DILocation(line: 1342, column: 2, scope: !17415)
!17486 = !DILocation(line: 1343, column: 1, scope: !17412)
!17487 = distinct !DISubprogram(name: "unthrottle", scope: !3, file: !3, line: 1348, type: !4881, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17488 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17489)
!17489 = distinct !DILocation(line: 1366, column: 3, scope: !17490)
!17490 = distinct !DILexicalBlock(scope: !17491, file: !3, line: 1362, column: 22)
!17491 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 1362, column: 6)
!17492 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17489)
!17493 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17494)
!17494 = distinct !DILocation(line: 1363, column: 3, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 1363, column: 3)
!17496 = distinct !DILexicalBlock(scope: !17497, file: !3, line: 1363, column: 3)
!17497 = distinct !DILexicalBlock(scope: !17498, file: !3, line: 1363, column: 3)
!17498 = distinct !DILexicalBlock(scope: !17499, file: !3, line: 1363, column: 3)
!17499 = distinct !DILexicalBlock(scope: !17490, file: !3, line: 1363, column: 3)
!17500 = !DILocalVariable(name: "tty", arg: 1, scope: !17487, file: !3, line: 1348, type: !3760)
!17501 = !DILocation(line: 1348, column: 44, scope: !17487)
!17502 = !DILocalVariable(name: "info", scope: !17487, file: !3, line: 1350, type: !7530)
!17503 = !DILocation(line: 1350, column: 20, scope: !17487)
!17504 = !DILocation(line: 1350, column: 27, scope: !17487)
!17505 = !DILocation(line: 1350, column: 32, scope: !17487)
!17506 = !DILocalVariable(name: "flags", scope: !17487, file: !3, line: 1351, type: !312)
!17507 = !DILocation(line: 1351, column: 16, scope: !17487)
!17508 = !DILocation(line: 1353, column: 19, scope: !17509)
!17509 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 1353, column: 6)
!17510 = !DILocation(line: 1353, column: 25, scope: !17509)
!17511 = !DILocation(line: 1353, column: 30, scope: !17509)
!17512 = !DILocation(line: 1353, column: 6, scope: !17509)
!17513 = !DILocation(line: 1353, column: 6, scope: !17487)
!17514 = !DILocation(line: 1354, column: 3, scope: !17509)
!17515 = !DILocation(line: 1355, column: 2, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 1355, column: 2)
!17517 = !DILocation(line: 1355, column: 2, scope: !17487)
!17518 = !DILocation(line: 1356, column: 6, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17487, file: !3, line: 1356, column: 6)
!17520 = !DILocation(line: 1356, column: 6, scope: !17487)
!17521 = !DILocation(line: 1357, column: 7, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17523, file: !3, line: 1357, column: 7)
!17523 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 1356, column: 20)
!17524 = !DILocation(line: 1357, column: 13, scope: !17522)
!17525 = !DILocation(line: 1357, column: 7, scope: !17523)
!17526 = !DILocation(line: 1358, column: 4, scope: !17522)
!17527 = !DILocation(line: 1358, column: 10, scope: !17522)
!17528 = !DILocation(line: 1358, column: 17, scope: !17522)
!17529 = !DILocation(line: 1360, column: 15, scope: !17522)
!17530 = !DILocation(line: 1360, column: 20, scope: !17522)
!17531 = !DILocation(line: 1360, column: 4, scope: !17522)
!17532 = !DILocation(line: 1361, column: 2, scope: !17523)
!17533 = !DILocation(line: 1362, column: 6, scope: !17491)
!17534 = !DILocation(line: 1362, column: 6, scope: !17487)
!17535 = !DILocation(line: 1363, column: 3, scope: !17490)
!17536 = !DILocation(line: 1363, column: 3, scope: !17499)
!17537 = !DILocalVariable(name: "__dummy", scope: !17538, file: !3, line: 1363, type: !312)
!17538 = distinct !DILexicalBlock(scope: !17498, file: !3, line: 1363, column: 3)
!17539 = !DILocation(line: 1363, column: 3, scope: !17538)
!17540 = !DILocalVariable(name: "__dummy2", scope: !17538, file: !3, line: 1363, type: !312)
!17541 = !DILocation(line: 1363, column: 3, scope: !17498)
!17542 = !DILocation(line: 1363, column: 3, scope: !17497)
!17543 = !DILocation(line: 1363, column: 3, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17497, file: !3, line: 1363, column: 3)
!17545 = !DILocalVariable(name: "__dummy", scope: !17546, file: !3, line: 1363, type: !312)
!17546 = distinct !DILexicalBlock(scope: !17547, file: !3, line: 1363, column: 3)
!17547 = distinct !DILexicalBlock(scope: !17544, file: !3, line: 1363, column: 3)
!17548 = !DILocation(line: 1363, column: 3, scope: !17546)
!17549 = !DILocalVariable(name: "__dummy2", scope: !17546, file: !3, line: 1363, type: !312)
!17550 = !DILocation(line: 1363, column: 3, scope: !17547)
!17551 = !DILocation(line: 1363, column: 3, scope: !17496)
!17552 = !{i32 -2139553864}
!17553 = !DILocation(line: 1363, column: 3, scope: !17495)
!17554 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17494)
!17555 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17494)
!17556 = !DILocation(line: 1364, column: 3, scope: !17490)
!17557 = !DILocation(line: 1364, column: 9, scope: !17490)
!17558 = !DILocation(line: 1364, column: 17, scope: !17490)
!17559 = !DILocation(line: 1365, column: 15, scope: !17490)
!17560 = !DILocation(line: 1365, column: 3, scope: !17490)
!17561 = !DILocation(line: 1366, column: 27, scope: !17490)
!17562 = !DILocation(line: 1366, column: 33, scope: !17490)
!17563 = !DILocation(line: 1366, column: 38, scope: !17490)
!17564 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17489)
!17565 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17489)
!17566 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17489)
!17567 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17489)
!17568 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17489)
!17569 = !DILocation(line: 1367, column: 2, scope: !17490)
!17570 = !DILocation(line: 1368, column: 1, scope: !17487)
!17571 = distinct !DISubprogram(name: "tx_hold", scope: !3, file: !3, line: 979, type: !4881, scopeLine: 980, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17572 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17573)
!17573 = distinct !DILocation(line: 990, column: 2, scope: !17571)
!17574 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17573)
!17575 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17576)
!17576 = distinct !DILocation(line: 987, column: 2, scope: !17577)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !3, line: 987, column: 2)
!17578 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 987, column: 2)
!17579 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 987, column: 2)
!17580 = distinct !DILexicalBlock(scope: !17581, file: !3, line: 987, column: 2)
!17581 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 987, column: 2)
!17582 = !DILocalVariable(name: "tty", arg: 1, scope: !17571, file: !3, line: 979, type: !3760)
!17583 = !DILocation(line: 979, column: 40, scope: !17571)
!17584 = !DILocalVariable(name: "info", scope: !17571, file: !3, line: 981, type: !7530)
!17585 = !DILocation(line: 981, column: 20, scope: !17571)
!17586 = !DILocation(line: 981, column: 27, scope: !17571)
!17587 = !DILocation(line: 981, column: 32, scope: !17571)
!17588 = !DILocalVariable(name: "flags", scope: !17571, file: !3, line: 982, type: !312)
!17589 = !DILocation(line: 982, column: 16, scope: !17571)
!17590 = !DILocation(line: 984, column: 19, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 984, column: 6)
!17592 = !DILocation(line: 984, column: 25, scope: !17591)
!17593 = !DILocation(line: 984, column: 30, scope: !17591)
!17594 = !DILocation(line: 984, column: 6, scope: !17591)
!17595 = !DILocation(line: 984, column: 6, scope: !17571)
!17596 = !DILocation(line: 985, column: 3, scope: !17591)
!17597 = !DILocation(line: 986, column: 2, scope: !17598)
!17598 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 986, column: 2)
!17599 = !DILocation(line: 986, column: 2, scope: !17571)
!17600 = !DILocation(line: 987, column: 2, scope: !17571)
!17601 = !DILocation(line: 987, column: 2, scope: !17581)
!17602 = !DILocalVariable(name: "__dummy", scope: !17603, file: !3, line: 987, type: !312)
!17603 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 987, column: 2)
!17604 = !DILocation(line: 987, column: 2, scope: !17603)
!17605 = !DILocalVariable(name: "__dummy2", scope: !17603, file: !3, line: 987, type: !312)
!17606 = !DILocation(line: 987, column: 2, scope: !17580)
!17607 = !DILocation(line: 987, column: 2, scope: !17579)
!17608 = !DILocation(line: 987, column: 2, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 987, column: 2)
!17610 = !DILocalVariable(name: "__dummy", scope: !17611, file: !3, line: 987, type: !312)
!17611 = distinct !DILexicalBlock(scope: !17612, file: !3, line: 987, column: 2)
!17612 = distinct !DILexicalBlock(scope: !17609, file: !3, line: 987, column: 2)
!17613 = !DILocation(line: 987, column: 2, scope: !17611)
!17614 = !DILocalVariable(name: "__dummy2", scope: !17611, file: !3, line: 987, type: !312)
!17615 = !DILocation(line: 987, column: 2, scope: !17612)
!17616 = !DILocation(line: 987, column: 2, scope: !17578)
!17617 = !{i32 -2139569937}
!17618 = !DILocation(line: 987, column: 2, scope: !17577)
!17619 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17576)
!17620 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17576)
!17621 = !DILocation(line: 988, column: 6, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17571, file: !3, line: 988, column: 6)
!17623 = !DILocation(line: 988, column: 12, scope: !17622)
!17624 = !DILocation(line: 988, column: 23, scope: !17622)
!17625 = !DILocation(line: 988, column: 26, scope: !17622)
!17626 = !DILocation(line: 988, column: 32, scope: !17622)
!17627 = !DILocation(line: 988, column: 39, scope: !17622)
!17628 = !DILocation(line: 988, column: 44, scope: !17622)
!17629 = !DILocation(line: 988, column: 6, scope: !17571)
!17630 = !DILocation(line: 989, column: 12, scope: !17622)
!17631 = !DILocation(line: 989, column: 4, scope: !17622)
!17632 = !DILocation(line: 990, column: 26, scope: !17571)
!17633 = !DILocation(line: 990, column: 32, scope: !17571)
!17634 = !DILocation(line: 990, column: 37, scope: !17571)
!17635 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17573)
!17636 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17573)
!17637 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17573)
!17638 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17573)
!17639 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17573)
!17640 = !DILocation(line: 991, column: 1, scope: !17571)
!17641 = distinct !DISubprogram(name: "tx_release", scope: !3, file: !3, line: 996, type: !4881, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17642 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17643)
!17643 = distinct !DILocation(line: 1007, column: 2, scope: !17641)
!17644 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17643)
!17645 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17646)
!17646 = distinct !DILocation(line: 1004, column: 2, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17648, file: !3, line: 1004, column: 2)
!17648 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 1004, column: 2)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !3, line: 1004, column: 2)
!17650 = distinct !DILexicalBlock(scope: !17651, file: !3, line: 1004, column: 2)
!17651 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1004, column: 2)
!17652 = !DILocalVariable(name: "tty", arg: 1, scope: !17641, file: !3, line: 996, type: !3760)
!17653 = !DILocation(line: 996, column: 43, scope: !17641)
!17654 = !DILocalVariable(name: "info", scope: !17641, file: !3, line: 998, type: !7530)
!17655 = !DILocation(line: 998, column: 20, scope: !17641)
!17656 = !DILocation(line: 998, column: 27, scope: !17641)
!17657 = !DILocation(line: 998, column: 32, scope: !17641)
!17658 = !DILocalVariable(name: "flags", scope: !17641, file: !3, line: 999, type: !312)
!17659 = !DILocation(line: 999, column: 16, scope: !17641)
!17660 = !DILocation(line: 1001, column: 19, scope: !17661)
!17661 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1001, column: 6)
!17662 = !DILocation(line: 1001, column: 25, scope: !17661)
!17663 = !DILocation(line: 1001, column: 30, scope: !17661)
!17664 = !DILocation(line: 1001, column: 6, scope: !17661)
!17665 = !DILocation(line: 1001, column: 6, scope: !17641)
!17666 = !DILocation(line: 1002, column: 3, scope: !17661)
!17667 = !DILocation(line: 1003, column: 2, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1003, column: 2)
!17669 = !DILocation(line: 1003, column: 2, scope: !17641)
!17670 = !DILocation(line: 1004, column: 2, scope: !17641)
!17671 = !DILocation(line: 1004, column: 2, scope: !17651)
!17672 = !DILocalVariable(name: "__dummy", scope: !17673, file: !3, line: 1004, type: !312)
!17673 = distinct !DILexicalBlock(scope: !17650, file: !3, line: 1004, column: 2)
!17674 = !DILocation(line: 1004, column: 2, scope: !17673)
!17675 = !DILocalVariable(name: "__dummy2", scope: !17673, file: !3, line: 1004, type: !312)
!17676 = !DILocation(line: 1004, column: 2, scope: !17650)
!17677 = !DILocation(line: 1004, column: 2, scope: !17649)
!17678 = !DILocation(line: 1004, column: 2, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 1004, column: 2)
!17680 = !DILocalVariable(name: "__dummy", scope: !17681, file: !3, line: 1004, type: !312)
!17681 = distinct !DILexicalBlock(scope: !17682, file: !3, line: 1004, column: 2)
!17682 = distinct !DILexicalBlock(scope: !17679, file: !3, line: 1004, column: 2)
!17683 = !DILocation(line: 1004, column: 2, scope: !17681)
!17684 = !DILocalVariable(name: "__dummy2", scope: !17681, file: !3, line: 1004, type: !312)
!17685 = !DILocation(line: 1004, column: 2, scope: !17682)
!17686 = !DILocation(line: 1004, column: 2, scope: !17648)
!17687 = !{i32 -2139568827}
!17688 = !DILocation(line: 1004, column: 2, scope: !17647)
!17689 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17646)
!17690 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17646)
!17691 = !DILocation(line: 1005, column: 6, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17641, file: !3, line: 1005, column: 6)
!17693 = !DILocation(line: 1005, column: 12, scope: !17692)
!17694 = !DILocation(line: 1005, column: 21, scope: !17692)
!17695 = !DILocation(line: 1005, column: 32, scope: !17692)
!17696 = !DILocation(line: 1005, column: 38, scope: !17692)
!17697 = !DILocation(line: 1005, column: 44, scope: !17692)
!17698 = !DILocation(line: 1005, column: 52, scope: !17692)
!17699 = !DILocation(line: 1005, column: 58, scope: !17692)
!17700 = !DILocation(line: 1005, column: 24, scope: !17692)
!17701 = !DILocation(line: 1005, column: 6, scope: !17641)
!17702 = !DILocation(line: 1006, column: 3, scope: !17692)
!17703 = !DILocation(line: 1006, column: 9, scope: !17692)
!17704 = !DILocation(line: 1006, column: 18, scope: !17692)
!17705 = !DILocation(line: 1007, column: 26, scope: !17641)
!17706 = !DILocation(line: 1007, column: 32, scope: !17641)
!17707 = !DILocation(line: 1007, column: 38, scope: !17641)
!17708 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17643)
!17709 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17643)
!17710 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17643)
!17711 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17643)
!17712 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17643)
!17713 = !DILocation(line: 1008, column: 1, scope: !17641)
!17714 = distinct !DISubprogram(name: "hangup", scope: !3, file: !3, line: 742, type: !4881, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17715 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17716)
!17716 = distinct !DILocation(line: 759, column: 2, scope: !17714)
!17717 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17716)
!17718 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17719)
!17719 = distinct !DILocation(line: 756, column: 2, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17721, file: !3, line: 756, column: 2)
!17721 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 756, column: 2)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 756, column: 2)
!17723 = distinct !DILexicalBlock(scope: !17724, file: !3, line: 756, column: 2)
!17724 = distinct !DILexicalBlock(scope: !17714, file: !3, line: 756, column: 2)
!17725 = !DILocalVariable(name: "tty", arg: 1, scope: !17714, file: !3, line: 742, type: !3760)
!17726 = !DILocation(line: 742, column: 39, scope: !17714)
!17727 = !DILocalVariable(name: "info", scope: !17714, file: !3, line: 744, type: !7530)
!17728 = !DILocation(line: 744, column: 20, scope: !17714)
!17729 = !DILocation(line: 744, column: 27, scope: !17714)
!17730 = !DILocation(line: 744, column: 32, scope: !17714)
!17731 = !DILocalVariable(name: "flags", scope: !17714, file: !3, line: 745, type: !312)
!17732 = !DILocation(line: 745, column: 16, scope: !17714)
!17733 = !DILocation(line: 747, column: 19, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17714, file: !3, line: 747, column: 6)
!17735 = !DILocation(line: 747, column: 25, scope: !17734)
!17736 = !DILocation(line: 747, column: 30, scope: !17734)
!17737 = !DILocation(line: 747, column: 6, scope: !17734)
!17738 = !DILocation(line: 747, column: 6, scope: !17714)
!17739 = !DILocation(line: 748, column: 3, scope: !17734)
!17740 = !DILocation(line: 749, column: 2, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17714, file: !3, line: 749, column: 2)
!17742 = !DILocation(line: 749, column: 2, scope: !17714)
!17743 = !DILocation(line: 751, column: 15, scope: !17714)
!17744 = !DILocation(line: 751, column: 2, scope: !17714)
!17745 = !DILocation(line: 753, column: 14, scope: !17714)
!17746 = !DILocation(line: 753, column: 20, scope: !17714)
!17747 = !DILocation(line: 753, column: 25, scope: !17714)
!17748 = !DILocation(line: 753, column: 2, scope: !17714)
!17749 = !DILocation(line: 754, column: 11, scope: !17714)
!17750 = !DILocation(line: 754, column: 2, scope: !17714)
!17751 = !DILocation(line: 756, column: 2, scope: !17714)
!17752 = !DILocation(line: 756, column: 2, scope: !17724)
!17753 = !DILocalVariable(name: "__dummy", scope: !17754, file: !3, line: 756, type: !312)
!17754 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 756, column: 2)
!17755 = !DILocation(line: 756, column: 2, scope: !17754)
!17756 = !DILocalVariable(name: "__dummy2", scope: !17754, file: !3, line: 756, type: !312)
!17757 = !DILocation(line: 756, column: 2, scope: !17723)
!17758 = !DILocation(line: 756, column: 2, scope: !17722)
!17759 = !DILocation(line: 756, column: 2, scope: !17760)
!17760 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 756, column: 2)
!17761 = !DILocalVariable(name: "__dummy", scope: !17762, file: !3, line: 756, type: !312)
!17762 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 756, column: 2)
!17763 = distinct !DILexicalBlock(scope: !17760, file: !3, line: 756, column: 2)
!17764 = !DILocation(line: 756, column: 2, scope: !17762)
!17765 = !DILocalVariable(name: "__dummy2", scope: !17762, file: !3, line: 756, type: !312)
!17766 = !DILocation(line: 756, column: 2, scope: !17763)
!17767 = !DILocation(line: 756, column: 2, scope: !17721)
!17768 = !{i32 -2139582119}
!17769 = !DILocation(line: 756, column: 2, scope: !17720)
!17770 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17719)
!17771 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17719)
!17772 = !DILocation(line: 757, column: 2, scope: !17714)
!17773 = !DILocation(line: 757, column: 8, scope: !17714)
!17774 = !DILocation(line: 757, column: 13, scope: !17714)
!17775 = !DILocation(line: 757, column: 19, scope: !17714)
!17776 = !DILocation(line: 758, column: 2, scope: !17714)
!17777 = !DILocation(line: 758, column: 8, scope: !17714)
!17778 = !DILocation(line: 758, column: 13, scope: !17714)
!17779 = !DILocation(line: 758, column: 17, scope: !17714)
!17780 = !DILocation(line: 759, column: 26, scope: !17714)
!17781 = !DILocation(line: 759, column: 32, scope: !17714)
!17782 = !DILocation(line: 759, column: 37, scope: !17714)
!17783 = !DILocation(line: 759, column: 43, scope: !17714)
!17784 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17716)
!17785 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17716)
!17786 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17716)
!17787 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17716)
!17788 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17716)
!17789 = !DILocation(line: 760, column: 23, scope: !17714)
!17790 = !DILocation(line: 760, column: 29, scope: !17714)
!17791 = !DILocation(line: 760, column: 2, scope: !17714)
!17792 = !DILocation(line: 761, column: 16, scope: !17714)
!17793 = !DILocation(line: 761, column: 22, scope: !17714)
!17794 = !DILocation(line: 761, column: 27, scope: !17714)
!17795 = !DILocation(line: 761, column: 2, scope: !17714)
!17796 = !DILocation(line: 763, column: 2, scope: !17714)
!17797 = !DILocation(line: 764, column: 1, scope: !17714)
!17798 = distinct !DISubprogram(name: "set_break", scope: !3, file: !3, line: 1374, type: !4917, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17799 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 1391, column: 2, scope: !17798)
!17801 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17800)
!17802 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17803)
!17803 = distinct !DILocation(line: 1384, column: 2, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17805, file: !3, line: 1384, column: 2)
!17805 = distinct !DILexicalBlock(scope: !17806, file: !3, line: 1384, column: 2)
!17806 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 1384, column: 2)
!17807 = distinct !DILexicalBlock(scope: !17808, file: !3, line: 1384, column: 2)
!17808 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 1384, column: 2)
!17809 = !DILocalVariable(name: "tty", arg: 1, scope: !17798, file: !3, line: 1374, type: !3760)
!17810 = !DILocation(line: 1374, column: 41, scope: !17798)
!17811 = !DILocalVariable(name: "break_state", arg: 2, scope: !17798, file: !3, line: 1374, type: !32)
!17812 = !DILocation(line: 1374, column: 50, scope: !17798)
!17813 = !DILocalVariable(name: "info", scope: !17798, file: !3, line: 1376, type: !7530)
!17814 = !DILocation(line: 1376, column: 20, scope: !17798)
!17815 = !DILocation(line: 1376, column: 27, scope: !17798)
!17816 = !DILocation(line: 1376, column: 32, scope: !17798)
!17817 = !DILocalVariable(name: "value", scope: !17798, file: !3, line: 1377, type: !476)
!17818 = !DILocation(line: 1377, column: 17, scope: !17798)
!17819 = !DILocalVariable(name: "flags", scope: !17798, file: !3, line: 1378, type: !312)
!17820 = !DILocation(line: 1378, column: 16, scope: !17798)
!17821 = !DILocation(line: 1380, column: 19, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 1380, column: 6)
!17823 = !DILocation(line: 1380, column: 25, scope: !17822)
!17824 = !DILocation(line: 1380, column: 30, scope: !17822)
!17825 = !DILocation(line: 1380, column: 6, scope: !17822)
!17826 = !DILocation(line: 1380, column: 6, scope: !17798)
!17827 = !DILocation(line: 1381, column: 3, scope: !17822)
!17828 = !DILocation(line: 1382, column: 2, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 1382, column: 2)
!17830 = !DILocation(line: 1382, column: 2, scope: !17798)
!17831 = !DILocation(line: 1384, column: 2, scope: !17798)
!17832 = !DILocation(line: 1384, column: 2, scope: !17808)
!17833 = !DILocalVariable(name: "__dummy", scope: !17834, file: !3, line: 1384, type: !312)
!17834 = distinct !DILexicalBlock(scope: !17807, file: !3, line: 1384, column: 2)
!17835 = !DILocation(line: 1384, column: 2, scope: !17834)
!17836 = !DILocalVariable(name: "__dummy2", scope: !17834, file: !3, line: 1384, type: !312)
!17837 = !DILocation(line: 1384, column: 2, scope: !17807)
!17838 = !DILocation(line: 1384, column: 2, scope: !17806)
!17839 = !DILocation(line: 1384, column: 2, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17806, file: !3, line: 1384, column: 2)
!17841 = !DILocalVariable(name: "__dummy", scope: !17842, file: !3, line: 1384, type: !312)
!17842 = distinct !DILexicalBlock(scope: !17843, file: !3, line: 1384, column: 2)
!17843 = distinct !DILexicalBlock(scope: !17840, file: !3, line: 1384, column: 2)
!17844 = !DILocation(line: 1384, column: 2, scope: !17842)
!17845 = !DILocalVariable(name: "__dummy2", scope: !17842, file: !3, line: 1384, type: !312)
!17846 = !DILocation(line: 1384, column: 2, scope: !17843)
!17847 = !DILocation(line: 1384, column: 2, scope: !17805)
!17848 = !{i32 -2139552732}
!17849 = !DILocation(line: 1384, column: 2, scope: !17804)
!17850 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17803)
!17851 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17803)
!17852 = !DILocation(line: 1385, column: 19, scope: !17798)
!17853 = !DILocation(line: 1385, column: 10, scope: !17798)
!17854 = !DILocation(line: 1385, column: 8, scope: !17798)
!17855 = !DILocation(line: 1386, column: 7, scope: !17856)
!17856 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 1386, column: 7)
!17857 = !DILocation(line: 1386, column: 19, scope: !17856)
!17858 = !DILocation(line: 1386, column: 7, scope: !17798)
!17859 = !DILocation(line: 1387, column: 9, scope: !17856)
!17860 = !DILocation(line: 1387, column: 3, scope: !17856)
!17861 = !DILocation(line: 1389, column: 9, scope: !17856)
!17862 = !DILocation(line: 1390, column: 11, scope: !17798)
!17863 = !DILocation(line: 1390, column: 22, scope: !17798)
!17864 = !DILocation(line: 1390, column: 2, scope: !17798)
!17865 = !DILocation(line: 1391, column: 26, scope: !17798)
!17866 = !DILocation(line: 1391, column: 32, scope: !17798)
!17867 = !DILocation(line: 1391, column: 37, scope: !17798)
!17868 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17800)
!17869 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17800)
!17870 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17800)
!17871 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17800)
!17872 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17800)
!17873 = !DILocation(line: 1392, column: 2, scope: !17798)
!17874 = !DILocation(line: 1393, column: 1, scope: !17798)
!17875 = distinct !DISubprogram(name: "flush_buffer", scope: !3, file: !3, line: 960, type: !4881, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17876 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !17877)
!17877 = distinct !DILocation(line: 971, column: 2, scope: !17875)
!17878 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !17877)
!17879 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !17880)
!17880 = distinct !DILocation(line: 969, column: 2, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17882, file: !3, line: 969, column: 2)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !3, line: 969, column: 2)
!17883 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 969, column: 2)
!17884 = distinct !DILexicalBlock(scope: !17885, file: !3, line: 969, column: 2)
!17885 = distinct !DILexicalBlock(scope: !17875, file: !3, line: 969, column: 2)
!17886 = !DILocalVariable(name: "tty", arg: 1, scope: !17875, file: !3, line: 960, type: !3760)
!17887 = !DILocation(line: 960, column: 45, scope: !17875)
!17888 = !DILocalVariable(name: "info", scope: !17875, file: !3, line: 962, type: !7530)
!17889 = !DILocation(line: 962, column: 20, scope: !17875)
!17890 = !DILocation(line: 962, column: 27, scope: !17875)
!17891 = !DILocation(line: 962, column: 32, scope: !17875)
!17892 = !DILocalVariable(name: "flags", scope: !17875, file: !3, line: 963, type: !312)
!17893 = !DILocation(line: 963, column: 16, scope: !17875)
!17894 = !DILocation(line: 965, column: 19, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17875, file: !3, line: 965, column: 6)
!17896 = !DILocation(line: 965, column: 25, scope: !17895)
!17897 = !DILocation(line: 965, column: 30, scope: !17895)
!17898 = !DILocation(line: 965, column: 6, scope: !17895)
!17899 = !DILocation(line: 965, column: 6, scope: !17875)
!17900 = !DILocation(line: 966, column: 3, scope: !17895)
!17901 = !DILocation(line: 967, column: 2, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17875, file: !3, line: 967, column: 2)
!17903 = !DILocation(line: 967, column: 2, scope: !17875)
!17904 = !DILocation(line: 969, column: 2, scope: !17875)
!17905 = !DILocation(line: 969, column: 2, scope: !17885)
!17906 = !DILocalVariable(name: "__dummy", scope: !17907, file: !3, line: 969, type: !312)
!17907 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 969, column: 2)
!17908 = !DILocation(line: 969, column: 2, scope: !17907)
!17909 = !DILocalVariable(name: "__dummy2", scope: !17907, file: !3, line: 969, type: !312)
!17910 = !DILocation(line: 969, column: 2, scope: !17884)
!17911 = !DILocation(line: 969, column: 2, scope: !17883)
!17912 = !DILocation(line: 969, column: 2, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17883, file: !3, line: 969, column: 2)
!17914 = !DILocalVariable(name: "__dummy", scope: !17915, file: !3, line: 969, type: !312)
!17915 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 969, column: 2)
!17916 = distinct !DILexicalBlock(scope: !17913, file: !3, line: 969, column: 2)
!17917 = !DILocation(line: 969, column: 2, scope: !17915)
!17918 = !DILocalVariable(name: "__dummy2", scope: !17915, file: !3, line: 969, type: !312)
!17919 = !DILocation(line: 969, column: 2, scope: !17916)
!17920 = !DILocation(line: 969, column: 2, scope: !17882)
!17921 = !{i32 -2139571042}
!17922 = !DILocation(line: 969, column: 2, scope: !17881)
!17923 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !17880)
!17924 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !17880)
!17925 = !DILocation(line: 970, column: 2, scope: !17875)
!17926 = !DILocation(line: 970, column: 8, scope: !17875)
!17927 = !DILocation(line: 970, column: 17, scope: !17875)
!17928 = !DILocation(line: 971, column: 26, scope: !17875)
!17929 = !DILocation(line: 971, column: 32, scope: !17875)
!17930 = !DILocation(line: 971, column: 38, scope: !17875)
!17931 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !17877)
!17932 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !17877)
!17933 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !17877)
!17934 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !17877)
!17935 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !17877)
!17936 = !DILocation(line: 973, column: 13, scope: !17875)
!17937 = !DILocation(line: 973, column: 2, scope: !17875)
!17938 = !DILocation(line: 974, column: 1, scope: !17875)
!17939 = distinct !DISubprogram(name: "wait_until_sent", scope: !3, file: !3, line: 885, type: !4923, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17940 = !DILocalVariable(name: "pscr_ret__", scope: !17941, file: !17942, line: 15, type: !2326)
!17941 = distinct !DILexicalBlock(scope: !17943, file: !17942, line: 15, column: 9)
!17942 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!17943 = distinct !DISubprogram(name: "get_current", scope: !17942, file: !17942, line: 13, type: !17944, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!17944 = !DISubroutineType(types: !17945)
!17945 = !{!2326}
!17946 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !17947)
!17947 = distinct !DILocation(line: 918, column: 22, scope: !17948)
!17948 = distinct !DILexicalBlock(scope: !17949, file: !3, line: 918, column: 7)
!17949 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 916, column: 26)
!17950 = !DILocalVariable(name: "__vpp_verify", scope: !17951, file: !17942, line: 15, type: !3276)
!17951 = distinct !DILexicalBlock(scope: !17941, file: !17942, line: 15, column: 9)
!17952 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !17947)
!17953 = !DILocalVariable(name: "pfo_val__", scope: !17954, file: !17942, line: 15, type: !331)
!17954 = distinct !DILexicalBlock(scope: !17941, file: !17942, line: 15, column: 9)
!17955 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !17947)
!17956 = !DILocalVariable(name: "tty", arg: 1, scope: !17939, file: !3, line: 885, type: !3760)
!17957 = !DILocation(line: 885, column: 48, scope: !17939)
!17958 = !DILocalVariable(name: "timeout", arg: 2, scope: !17939, file: !3, line: 885, type: !32)
!17959 = !DILocation(line: 885, column: 57, scope: !17939)
!17960 = !DILocalVariable(name: "info", scope: !17939, file: !3, line: 887, type: !7530)
!17961 = !DILocation(line: 887, column: 20, scope: !17939)
!17962 = !DILocation(line: 887, column: 27, scope: !17939)
!17963 = !DILocation(line: 887, column: 32, scope: !17939)
!17964 = !DILocalVariable(name: "orig_jiffies", scope: !17939, file: !3, line: 888, type: !312)
!17965 = !DILocation(line: 888, column: 16, scope: !17939)
!17966 = !DILocalVariable(name: "char_time", scope: !17939, file: !3, line: 888, type: !312)
!17967 = !DILocation(line: 888, column: 30, scope: !17939)
!17968 = !DILocation(line: 890, column: 7, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 890, column: 6)
!17970 = !DILocation(line: 890, column: 6, scope: !17939)
!17971 = !DILocation(line: 891, column: 3, scope: !17969)
!17972 = !DILocation(line: 892, column: 19, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 892, column: 6)
!17974 = !DILocation(line: 892, column: 25, scope: !17973)
!17975 = !DILocation(line: 892, column: 30, scope: !17973)
!17976 = !DILocation(line: 892, column: 6, scope: !17973)
!17977 = !DILocation(line: 892, column: 6, scope: !17939)
!17978 = !DILocation(line: 893, column: 3, scope: !17973)
!17979 = !DILocation(line: 894, column: 2, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 894, column: 2)
!17981 = !DILocation(line: 894, column: 2, scope: !17939)
!17982 = !DILocation(line: 895, column: 29, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 895, column: 6)
!17984 = !DILocation(line: 895, column: 35, scope: !17983)
!17985 = !DILocation(line: 895, column: 7, scope: !17983)
!17986 = !DILocation(line: 895, column: 6, scope: !17939)
!17987 = !DILocation(line: 896, column: 3, scope: !17983)
!17988 = !DILocation(line: 898, column: 17, scope: !17939)
!17989 = !DILocation(line: 898, column: 15, scope: !17939)
!17990 = !DILocation(line: 906, column: 6, scope: !17991)
!17991 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 906, column: 6)
!17992 = !DILocation(line: 906, column: 12, scope: !17991)
!17993 = !DILocation(line: 906, column: 19, scope: !17991)
!17994 = !DILocation(line: 906, column: 6, scope: !17939)
!17995 = !DILocation(line: 907, column: 22, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17991, file: !3, line: 906, column: 30)
!17997 = !DILocation(line: 907, column: 28, scope: !17996)
!17998 = !DILocation(line: 907, column: 35, scope: !17996)
!17999 = !DILocation(line: 907, column: 20, scope: !17996)
!18000 = !DILocation(line: 908, column: 8, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17996, file: !3, line: 908, column: 7)
!18002 = !DILocation(line: 908, column: 7, scope: !17996)
!18003 = !DILocation(line: 909, column: 13, scope: !18001)
!18004 = !DILocation(line: 909, column: 4, scope: !18001)
!18005 = !DILocation(line: 910, column: 2, scope: !17996)
!18006 = !DILocation(line: 911, column: 13, scope: !17991)
!18007 = !DILocation(line: 913, column: 6, scope: !18008)
!18008 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 913, column: 6)
!18009 = !DILocation(line: 913, column: 6, scope: !17939)
!18010 = !DILocalVariable(name: "__UNIQUE_ID___x327", scope: !18011, file: !3, line: 914, type: !312)
!18011 = distinct !DILexicalBlock(scope: !18008, file: !3, line: 914, column: 15)
!18012 = !DILocation(line: 914, column: 15, scope: !18011)
!18013 = !DILocalVariable(name: "__UNIQUE_ID___y328", scope: !18011, file: !3, line: 914, type: !312)
!18014 = !DILocation(line: 914, column: 13, scope: !18008)
!18015 = !DILocation(line: 914, column: 3, scope: !18008)
!18016 = !DILocation(line: 916, column: 2, scope: !17939)
!18017 = !DILocation(line: 916, column: 9, scope: !17939)
!18018 = !DILocation(line: 916, column: 15, scope: !17939)
!18019 = !DILocation(line: 917, column: 41, scope: !17949)
!18020 = !DILocation(line: 917, column: 24, scope: !17949)
!18021 = !DILocation(line: 917, column: 3, scope: !17949)
!18022 = !{i32 -2146097925}
!18023 = !DILocation(line: 918, column: 7, scope: !17948)
!18024 = !DILocation(line: 918, column: 7, scope: !17949)
!18025 = !DILocation(line: 919, column: 4, scope: !17948)
!18026 = !DILocation(line: 920, column: 7, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !17949, file: !3, line: 920, column: 7)
!18028 = !DILocation(line: 920, column: 15, scope: !18027)
!18029 = !DILocation(line: 920, column: 18, scope: !18027)
!18030 = !DILocation(line: 920, column: 7, scope: !17949)
!18031 = !DILocation(line: 921, column: 4, scope: !18027)
!18032 = distinct !{!18032, !18016, !18033}
!18033 = !DILocation(line: 922, column: 2, scope: !17939)
!18034 = !DILabel(scope: !17939, name: "exit", file: !3, line: 923)
!18035 = !DILocation(line: 923, column: 1, scope: !17939)
!18036 = !DILocation(line: 924, column: 2, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 924, column: 2)
!18038 = !DILocation(line: 924, column: 2, scope: !17939)
!18039 = !DILocation(line: 925, column: 1, scope: !17939)
!18040 = distinct !DISubprogram(name: "send_xchar", scope: !3, file: !3, line: 868, type: !4927, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18041 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18042)
!18042 = distinct !DILocation(line: 881, column: 3, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18044, file: !3, line: 877, column: 10)
!18044 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 877, column: 6)
!18045 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18042)
!18046 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18047)
!18047 = distinct !DILocation(line: 878, column: 3, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18049, file: !3, line: 878, column: 3)
!18049 = distinct !DILexicalBlock(scope: !18050, file: !3, line: 878, column: 3)
!18050 = distinct !DILexicalBlock(scope: !18051, file: !3, line: 878, column: 3)
!18051 = distinct !DILexicalBlock(scope: !18052, file: !3, line: 878, column: 3)
!18052 = distinct !DILexicalBlock(scope: !18043, file: !3, line: 878, column: 3)
!18053 = !DILocalVariable(name: "tty", arg: 1, scope: !18040, file: !3, line: 868, type: !3760)
!18054 = !DILocation(line: 868, column: 43, scope: !18040)
!18055 = !DILocalVariable(name: "ch", arg: 2, scope: !18040, file: !3, line: 868, type: !268)
!18056 = !DILocation(line: 868, column: 53, scope: !18040)
!18057 = !DILocalVariable(name: "info", scope: !18040, file: !3, line: 870, type: !7530)
!18058 = !DILocation(line: 870, column: 20, scope: !18040)
!18059 = !DILocation(line: 870, column: 27, scope: !18040)
!18060 = !DILocation(line: 870, column: 32, scope: !18040)
!18061 = !DILocalVariable(name: "flags", scope: !18040, file: !3, line: 871, type: !312)
!18062 = !DILocation(line: 871, column: 16, scope: !18040)
!18063 = !DILocation(line: 873, column: 19, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 873, column: 6)
!18065 = !DILocation(line: 873, column: 25, scope: !18064)
!18066 = !DILocation(line: 873, column: 30, scope: !18064)
!18067 = !DILocation(line: 873, column: 6, scope: !18064)
!18068 = !DILocation(line: 873, column: 6, scope: !18040)
!18069 = !DILocation(line: 874, column: 3, scope: !18064)
!18070 = !DILocation(line: 875, column: 2, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18040, file: !3, line: 875, column: 2)
!18072 = !DILocation(line: 875, column: 2, scope: !18040)
!18073 = !DILocation(line: 876, column: 17, scope: !18040)
!18074 = !DILocation(line: 876, column: 2, scope: !18040)
!18075 = !DILocation(line: 876, column: 8, scope: !18040)
!18076 = !DILocation(line: 876, column: 15, scope: !18040)
!18077 = !DILocation(line: 877, column: 6, scope: !18044)
!18078 = !DILocation(line: 877, column: 6, scope: !18040)
!18079 = !DILocation(line: 878, column: 3, scope: !18043)
!18080 = !DILocation(line: 878, column: 3, scope: !18052)
!18081 = !DILocalVariable(name: "__dummy", scope: !18082, file: !3, line: 878, type: !312)
!18082 = distinct !DILexicalBlock(scope: !18051, file: !3, line: 878, column: 3)
!18083 = !DILocation(line: 878, column: 3, scope: !18082)
!18084 = !DILocalVariable(name: "__dummy2", scope: !18082, file: !3, line: 878, type: !312)
!18085 = !DILocation(line: 878, column: 3, scope: !18051)
!18086 = !DILocation(line: 878, column: 3, scope: !18050)
!18087 = !DILocation(line: 878, column: 3, scope: !18088)
!18088 = distinct !DILexicalBlock(scope: !18050, file: !3, line: 878, column: 3)
!18089 = !DILocalVariable(name: "__dummy", scope: !18090, file: !3, line: 878, type: !312)
!18090 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 878, column: 3)
!18091 = distinct !DILexicalBlock(scope: !18088, file: !3, line: 878, column: 3)
!18092 = !DILocation(line: 878, column: 3, scope: !18090)
!18093 = !DILocalVariable(name: "__dummy2", scope: !18090, file: !3, line: 878, type: !312)
!18094 = !DILocation(line: 878, column: 3, scope: !18091)
!18095 = !DILocation(line: 878, column: 3, scope: !18049)
!18096 = !{i32 -2139576039}
!18097 = !DILocation(line: 878, column: 3, scope: !18048)
!18098 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18047)
!18099 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18047)
!18100 = !DILocation(line: 879, column: 8, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18043, file: !3, line: 879, column: 7)
!18102 = !DILocation(line: 879, column: 14, scope: !18101)
!18103 = !DILocation(line: 879, column: 7, scope: !18043)
!18104 = !DILocation(line: 880, column: 14, scope: !18101)
!18105 = !DILocation(line: 880, column: 5, scope: !18101)
!18106 = !DILocation(line: 881, column: 27, scope: !18043)
!18107 = !DILocation(line: 881, column: 33, scope: !18043)
!18108 = !DILocation(line: 881, column: 38, scope: !18043)
!18109 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18042)
!18110 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18042)
!18111 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18042)
!18112 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18042)
!18113 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18042)
!18114 = !DILocation(line: 882, column: 2, scope: !18043)
!18115 = !DILocation(line: 883, column: 1, scope: !18040)
!18116 = distinct !DISubprogram(name: "tiocmget", scope: !3, file: !3, line: 3146, type: !4895, scopeLine: 3147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18117 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18118)
!18118 = distinct !DILocation(line: 3154, column: 2, scope: !18116)
!18119 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18118)
!18120 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18121)
!18121 = distinct !DILocation(line: 3152, column: 2, scope: !18122)
!18122 = distinct !DILexicalBlock(scope: !18123, file: !3, line: 3152, column: 2)
!18123 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3152, column: 2)
!18124 = distinct !DILexicalBlock(scope: !18125, file: !3, line: 3152, column: 2)
!18125 = distinct !DILexicalBlock(scope: !18126, file: !3, line: 3152, column: 2)
!18126 = distinct !DILexicalBlock(scope: !18116, file: !3, line: 3152, column: 2)
!18127 = !DILocalVariable(name: "tty", arg: 1, scope: !18116, file: !3, line: 3146, type: !3760)
!18128 = !DILocation(line: 3146, column: 40, scope: !18116)
!18129 = !DILocalVariable(name: "info", scope: !18116, file: !3, line: 3148, type: !7530)
!18130 = !DILocation(line: 3148, column: 20, scope: !18116)
!18131 = !DILocation(line: 3148, column: 27, scope: !18116)
!18132 = !DILocation(line: 3148, column: 32, scope: !18116)
!18133 = !DILocalVariable(name: "result", scope: !18116, file: !3, line: 3149, type: !7)
!18134 = !DILocation(line: 3149, column: 15, scope: !18116)
!18135 = !DILocalVariable(name: "flags", scope: !18116, file: !3, line: 3150, type: !312)
!18136 = !DILocation(line: 3150, column: 17, scope: !18116)
!18137 = !DILocation(line: 3152, column: 2, scope: !18116)
!18138 = !DILocation(line: 3152, column: 2, scope: !18126)
!18139 = !DILocalVariable(name: "__dummy", scope: !18140, file: !3, line: 3152, type: !312)
!18140 = distinct !DILexicalBlock(scope: !18125, file: !3, line: 3152, column: 2)
!18141 = !DILocation(line: 3152, column: 2, scope: !18140)
!18142 = !DILocalVariable(name: "__dummy2", scope: !18140, file: !3, line: 3152, type: !312)
!18143 = !DILocation(line: 3152, column: 2, scope: !18125)
!18144 = !DILocation(line: 3152, column: 2, scope: !18124)
!18145 = !DILocation(line: 3152, column: 2, scope: !18146)
!18146 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3152, column: 2)
!18147 = !DILocalVariable(name: "__dummy", scope: !18148, file: !3, line: 3152, type: !312)
!18148 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 3152, column: 2)
!18149 = distinct !DILexicalBlock(scope: !18146, file: !3, line: 3152, column: 2)
!18150 = !DILocation(line: 3152, column: 2, scope: !18148)
!18151 = !DILocalVariable(name: "__dummy2", scope: !18148, file: !3, line: 3152, type: !312)
!18152 = !DILocation(line: 3152, column: 2, scope: !18149)
!18153 = !DILocation(line: 3152, column: 2, scope: !18123)
!18154 = !{i32 -2139493462}
!18155 = !DILocation(line: 3152, column: 2, scope: !18122)
!18156 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18121)
!18157 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18121)
!18158 = !DILocation(line: 3153, column: 15, scope: !18116)
!18159 = !DILocation(line: 3153, column: 3, scope: !18116)
!18160 = !DILocation(line: 3154, column: 26, scope: !18116)
!18161 = !DILocation(line: 3154, column: 32, scope: !18116)
!18162 = !DILocation(line: 3154, column: 37, scope: !18116)
!18163 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18118)
!18164 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18118)
!18165 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18118)
!18166 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18118)
!18167 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18118)
!18168 = !DILocation(line: 3156, column: 13, scope: !18116)
!18169 = !DILocation(line: 3156, column: 19, scope: !18116)
!18170 = !DILocation(line: 3156, column: 27, scope: !18116)
!18171 = !DILocation(line: 3156, column: 12, scope: !18116)
!18172 = !DILocation(line: 3157, column: 5, scope: !18116)
!18173 = !DILocation(line: 3157, column: 11, scope: !18116)
!18174 = !DILocation(line: 3157, column: 19, scope: !18116)
!18175 = !DILocation(line: 3157, column: 4, scope: !18116)
!18176 = !DILocation(line: 3156, column: 62, scope: !18116)
!18177 = !DILocation(line: 3158, column: 5, scope: !18116)
!18178 = !DILocation(line: 3158, column: 11, scope: !18116)
!18179 = !DILocation(line: 3158, column: 19, scope: !18116)
!18180 = !DILocation(line: 3158, column: 4, scope: !18116)
!18181 = !DILocation(line: 3157, column: 54, scope: !18116)
!18182 = !DILocation(line: 3159, column: 5, scope: !18116)
!18183 = !DILocation(line: 3159, column: 11, scope: !18116)
!18184 = !DILocation(line: 3159, column: 19, scope: !18116)
!18185 = !DILocation(line: 3159, column: 4, scope: !18116)
!18186 = !DILocation(line: 3158, column: 54, scope: !18116)
!18187 = !DILocation(line: 3160, column: 5, scope: !18116)
!18188 = !DILocation(line: 3160, column: 11, scope: !18116)
!18189 = !DILocation(line: 3160, column: 19, scope: !18116)
!18190 = !DILocation(line: 3160, column: 4, scope: !18116)
!18191 = !DILocation(line: 3159, column: 54, scope: !18116)
!18192 = !DILocation(line: 3161, column: 5, scope: !18116)
!18193 = !DILocation(line: 3161, column: 11, scope: !18116)
!18194 = !DILocation(line: 3161, column: 19, scope: !18116)
!18195 = !DILocation(line: 3161, column: 4, scope: !18116)
!18196 = !DILocation(line: 3160, column: 54, scope: !18116)
!18197 = !DILocation(line: 3156, column: 9, scope: !18116)
!18198 = !DILocation(line: 3163, column: 2, scope: !18199)
!18199 = distinct !DILexicalBlock(scope: !18116, file: !3, line: 3163, column: 2)
!18200 = !DILocation(line: 3163, column: 2, scope: !18116)
!18201 = !DILocation(line: 3164, column: 9, scope: !18116)
!18202 = !DILocation(line: 3164, column: 2, scope: !18116)
!18203 = distinct !DISubprogram(name: "tiocmset", scope: !3, file: !3, line: 3174, type: !4932, scopeLine: 3176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18204 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18205)
!18205 = distinct !DILocation(line: 3193, column: 2, scope: !18203)
!18206 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18205)
!18207 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18208)
!18208 = distinct !DILocation(line: 3191, column: 2, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18210, file: !3, line: 3191, column: 2)
!18210 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 3191, column: 2)
!18211 = distinct !DILexicalBlock(scope: !18212, file: !3, line: 3191, column: 2)
!18212 = distinct !DILexicalBlock(scope: !18213, file: !3, line: 3191, column: 2)
!18213 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3191, column: 2)
!18214 = !DILocalVariable(name: "tty", arg: 1, scope: !18203, file: !3, line: 3174, type: !3760)
!18215 = !DILocation(line: 3174, column: 40, scope: !18203)
!18216 = !DILocalVariable(name: "set", arg: 2, scope: !18203, file: !3, line: 3175, type: !7)
!18217 = !DILocation(line: 3175, column: 20, scope: !18203)
!18218 = !DILocalVariable(name: "clear", arg: 3, scope: !18203, file: !3, line: 3175, type: !7)
!18219 = !DILocation(line: 3175, column: 38, scope: !18203)
!18220 = !DILocalVariable(name: "info", scope: !18203, file: !3, line: 3177, type: !7530)
!18221 = !DILocation(line: 3177, column: 20, scope: !18203)
!18222 = !DILocation(line: 3177, column: 27, scope: !18203)
!18223 = !DILocation(line: 3177, column: 32, scope: !18203)
!18224 = !DILocalVariable(name: "flags", scope: !18203, file: !3, line: 3178, type: !312)
!18225 = !DILocation(line: 3178, column: 17, scope: !18203)
!18226 = !DILocation(line: 3180, column: 2, scope: !18227)
!18227 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3180, column: 2)
!18228 = !DILocation(line: 3180, column: 2, scope: !18203)
!18229 = !DILocation(line: 3182, column: 6, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3182, column: 6)
!18231 = !DILocation(line: 3182, column: 10, scope: !18230)
!18232 = !DILocation(line: 3182, column: 6, scope: !18203)
!18233 = !DILocation(line: 3183, column: 3, scope: !18230)
!18234 = !DILocation(line: 3183, column: 9, scope: !18230)
!18235 = !DILocation(line: 3183, column: 17, scope: !18230)
!18236 = !DILocation(line: 3184, column: 6, scope: !18237)
!18237 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3184, column: 6)
!18238 = !DILocation(line: 3184, column: 10, scope: !18237)
!18239 = !DILocation(line: 3184, column: 6, scope: !18203)
!18240 = !DILocation(line: 3185, column: 3, scope: !18237)
!18241 = !DILocation(line: 3185, column: 9, scope: !18237)
!18242 = !DILocation(line: 3185, column: 17, scope: !18237)
!18243 = !DILocation(line: 3186, column: 6, scope: !18244)
!18244 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3186, column: 6)
!18245 = !DILocation(line: 3186, column: 12, scope: !18244)
!18246 = !DILocation(line: 3186, column: 6, scope: !18203)
!18247 = !DILocation(line: 3187, column: 3, scope: !18244)
!18248 = !DILocation(line: 3187, column: 9, scope: !18244)
!18249 = !DILocation(line: 3187, column: 17, scope: !18244)
!18250 = !DILocation(line: 3188, column: 6, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 3188, column: 6)
!18252 = !DILocation(line: 3188, column: 12, scope: !18251)
!18253 = !DILocation(line: 3188, column: 6, scope: !18203)
!18254 = !DILocation(line: 3189, column: 3, scope: !18251)
!18255 = !DILocation(line: 3189, column: 9, scope: !18251)
!18256 = !DILocation(line: 3189, column: 17, scope: !18251)
!18257 = !DILocation(line: 3191, column: 2, scope: !18203)
!18258 = !DILocation(line: 3191, column: 2, scope: !18213)
!18259 = !DILocalVariable(name: "__dummy", scope: !18260, file: !3, line: 3191, type: !312)
!18260 = distinct !DILexicalBlock(scope: !18212, file: !3, line: 3191, column: 2)
!18261 = !DILocation(line: 3191, column: 2, scope: !18260)
!18262 = !DILocalVariable(name: "__dummy2", scope: !18260, file: !3, line: 3191, type: !312)
!18263 = !DILocation(line: 3191, column: 2, scope: !18212)
!18264 = !DILocation(line: 3191, column: 2, scope: !18211)
!18265 = !DILocation(line: 3191, column: 2, scope: !18266)
!18266 = distinct !DILexicalBlock(scope: !18211, file: !3, line: 3191, column: 2)
!18267 = !DILocalVariable(name: "__dummy", scope: !18268, file: !3, line: 3191, type: !312)
!18268 = distinct !DILexicalBlock(scope: !18269, file: !3, line: 3191, column: 2)
!18269 = distinct !DILexicalBlock(scope: !18266, file: !3, line: 3191, column: 2)
!18270 = !DILocation(line: 3191, column: 2, scope: !18268)
!18271 = !DILocalVariable(name: "__dummy2", scope: !18268, file: !3, line: 3191, type: !312)
!18272 = !DILocation(line: 3191, column: 2, scope: !18269)
!18273 = !DILocation(line: 3191, column: 2, scope: !18210)
!18274 = !{i32 -2139492121}
!18275 = !DILocation(line: 3191, column: 2, scope: !18209)
!18276 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18208)
!18277 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18208)
!18278 = !DILocation(line: 3192, column: 14, scope: !18203)
!18279 = !DILocation(line: 3192, column: 2, scope: !18203)
!18280 = !DILocation(line: 3193, column: 26, scope: !18203)
!18281 = !DILocation(line: 3193, column: 32, scope: !18203)
!18282 = !DILocation(line: 3193, column: 37, scope: !18203)
!18283 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18205)
!18284 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18205)
!18285 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18205)
!18286 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18205)
!18287 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18205)
!18288 = !DILocation(line: 3194, column: 2, scope: !18203)
!18289 = distinct !DISubprogram(name: "get_icount", scope: !3, file: !3, line: 1096, type: !4961, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18290 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18291)
!18291 = distinct !DILocation(line: 1106, column: 2, scope: !18289)
!18292 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18291)
!18293 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18294)
!18294 = distinct !DILocation(line: 1104, column: 2, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18296, file: !3, line: 1104, column: 2)
!18296 = distinct !DILexicalBlock(scope: !18297, file: !3, line: 1104, column: 2)
!18297 = distinct !DILexicalBlock(scope: !18298, file: !3, line: 1104, column: 2)
!18298 = distinct !DILexicalBlock(scope: !18299, file: !3, line: 1104, column: 2)
!18299 = distinct !DILexicalBlock(scope: !18289, file: !3, line: 1104, column: 2)
!18300 = !DILocalVariable(name: "tty", arg: 1, scope: !18289, file: !3, line: 1096, type: !3760)
!18301 = !DILocation(line: 1096, column: 42, scope: !18289)
!18302 = !DILocalVariable(name: "icount", arg: 2, scope: !18289, file: !3, line: 1097, type: !4963)
!18303 = !DILocation(line: 1097, column: 36, scope: !18289)
!18304 = !DILocalVariable(name: "info", scope: !18289, file: !3, line: 1100, type: !7530)
!18305 = !DILocation(line: 1100, column: 20, scope: !18289)
!18306 = !DILocation(line: 1100, column: 27, scope: !18289)
!18307 = !DILocation(line: 1100, column: 32, scope: !18289)
!18308 = !DILocalVariable(name: "cnow", scope: !18289, file: !3, line: 1101, type: !7821)
!18309 = !DILocation(line: 1101, column: 21, scope: !18289)
!18310 = !DILocalVariable(name: "flags", scope: !18289, file: !3, line: 1102, type: !312)
!18311 = !DILocation(line: 1102, column: 16, scope: !18289)
!18312 = !DILocation(line: 1104, column: 2, scope: !18289)
!18313 = !DILocation(line: 1104, column: 2, scope: !18299)
!18314 = !DILocalVariable(name: "__dummy", scope: !18315, file: !3, line: 1104, type: !312)
!18315 = distinct !DILexicalBlock(scope: !18298, file: !3, line: 1104, column: 2)
!18316 = !DILocation(line: 1104, column: 2, scope: !18315)
!18317 = !DILocalVariable(name: "__dummy2", scope: !18315, file: !3, line: 1104, type: !312)
!18318 = !DILocation(line: 1104, column: 2, scope: !18298)
!18319 = !DILocation(line: 1104, column: 2, scope: !18297)
!18320 = !DILocation(line: 1104, column: 2, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18297, file: !3, line: 1104, column: 2)
!18322 = !DILocalVariable(name: "__dummy", scope: !18323, file: !3, line: 1104, type: !312)
!18323 = distinct !DILexicalBlock(scope: !18324, file: !3, line: 1104, column: 2)
!18324 = distinct !DILexicalBlock(scope: !18321, file: !3, line: 1104, column: 2)
!18325 = !DILocation(line: 1104, column: 2, scope: !18323)
!18326 = !DILocalVariable(name: "__dummy2", scope: !18323, file: !3, line: 1104, type: !312)
!18327 = !DILocation(line: 1104, column: 2, scope: !18324)
!18328 = !DILocation(line: 1104, column: 2, scope: !18296)
!18329 = !{i32 -2139557824}
!18330 = !DILocation(line: 1104, column: 2, scope: !18295)
!18331 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18294)
!18332 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18294)
!18333 = !DILocation(line: 1105, column: 9, scope: !18289)
!18334 = !DILocation(line: 1105, column: 15, scope: !18289)
!18335 = !DILocation(line: 1106, column: 26, scope: !18289)
!18336 = !DILocation(line: 1106, column: 32, scope: !18289)
!18337 = !DILocation(line: 1106, column: 37, scope: !18289)
!18338 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18291)
!18339 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18291)
!18340 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18291)
!18341 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18291)
!18342 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18291)
!18343 = !DILocation(line: 1108, column: 21, scope: !18289)
!18344 = !DILocation(line: 1108, column: 2, scope: !18289)
!18345 = !DILocation(line: 1108, column: 10, scope: !18289)
!18346 = !DILocation(line: 1108, column: 14, scope: !18289)
!18347 = !DILocation(line: 1109, column: 21, scope: !18289)
!18348 = !DILocation(line: 1109, column: 2, scope: !18289)
!18349 = !DILocation(line: 1109, column: 10, scope: !18289)
!18350 = !DILocation(line: 1109, column: 14, scope: !18289)
!18351 = !DILocation(line: 1110, column: 21, scope: !18289)
!18352 = !DILocation(line: 1110, column: 2, scope: !18289)
!18353 = !DILocation(line: 1110, column: 10, scope: !18289)
!18354 = !DILocation(line: 1110, column: 14, scope: !18289)
!18355 = !DILocation(line: 1111, column: 21, scope: !18289)
!18356 = !DILocation(line: 1111, column: 2, scope: !18289)
!18357 = !DILocation(line: 1111, column: 10, scope: !18289)
!18358 = !DILocation(line: 1111, column: 14, scope: !18289)
!18359 = !DILocation(line: 1112, column: 20, scope: !18289)
!18360 = !DILocation(line: 1112, column: 2, scope: !18289)
!18361 = !DILocation(line: 1112, column: 10, scope: !18289)
!18362 = !DILocation(line: 1112, column: 13, scope: !18289)
!18363 = !DILocation(line: 1113, column: 20, scope: !18289)
!18364 = !DILocation(line: 1113, column: 2, scope: !18289)
!18365 = !DILocation(line: 1113, column: 10, scope: !18289)
!18366 = !DILocation(line: 1113, column: 13, scope: !18289)
!18367 = !DILocation(line: 1114, column: 23, scope: !18289)
!18368 = !DILocation(line: 1114, column: 2, scope: !18289)
!18369 = !DILocation(line: 1114, column: 10, scope: !18289)
!18370 = !DILocation(line: 1114, column: 16, scope: !18289)
!18371 = !DILocation(line: 1115, column: 25, scope: !18289)
!18372 = !DILocation(line: 1115, column: 2, scope: !18289)
!18373 = !DILocation(line: 1115, column: 10, scope: !18289)
!18374 = !DILocation(line: 1115, column: 18, scope: !18289)
!18375 = !DILocation(line: 1116, column: 24, scope: !18289)
!18376 = !DILocation(line: 1116, column: 2, scope: !18289)
!18377 = !DILocation(line: 1116, column: 10, scope: !18289)
!18378 = !DILocation(line: 1116, column: 17, scope: !18289)
!18379 = !DILocation(line: 1117, column: 21, scope: !18289)
!18380 = !DILocation(line: 1117, column: 2, scope: !18289)
!18381 = !DILocation(line: 1117, column: 10, scope: !18289)
!18382 = !DILocation(line: 1117, column: 14, scope: !18289)
!18383 = !DILocation(line: 1118, column: 29, scope: !18289)
!18384 = !DILocation(line: 1118, column: 2, scope: !18289)
!18385 = !DILocation(line: 1118, column: 10, scope: !18289)
!18386 = !DILocation(line: 1118, column: 22, scope: !18289)
!18387 = !DILocation(line: 1120, column: 2, scope: !18289)
!18388 = distinct !DISubprogram(name: "synclink_gt_proc_show", scope: !3, file: !3, line: 1296, type: !1705, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18389 = !DILocalVariable(name: "m", arg: 1, scope: !18388, file: !3, line: 1296, type: !1653)
!18390 = !DILocation(line: 1296, column: 51, scope: !18388)
!18391 = !DILocalVariable(name: "v", arg: 2, scope: !18388, file: !3, line: 1296, type: !591)
!18392 = !DILocation(line: 1296, column: 60, scope: !18388)
!18393 = !DILocalVariable(name: "info", scope: !18388, file: !3, line: 1298, type: !7530)
!18394 = !DILocation(line: 1298, column: 20, scope: !18388)
!18395 = !DILocation(line: 1300, column: 11, scope: !18388)
!18396 = !DILocation(line: 1300, column: 2, scope: !18388)
!18397 = !DILocation(line: 1302, column: 9, scope: !18388)
!18398 = !DILocation(line: 1302, column: 7, scope: !18388)
!18399 = !DILocation(line: 1303, column: 2, scope: !18388)
!18400 = !DILocation(line: 1303, column: 9, scope: !18388)
!18401 = !DILocation(line: 1304, column: 13, scope: !18402)
!18402 = distinct !DILexicalBlock(scope: !18388, file: !3, line: 1303, column: 16)
!18403 = !DILocation(line: 1304, column: 16, scope: !18402)
!18404 = !DILocation(line: 1304, column: 3, scope: !18402)
!18405 = !DILocation(line: 1305, column: 10, scope: !18402)
!18406 = !DILocation(line: 1305, column: 16, scope: !18402)
!18407 = !DILocation(line: 1305, column: 8, scope: !18402)
!18408 = distinct !{!18408, !18399, !18409}
!18409 = !DILocation(line: 1306, column: 2, scope: !18388)
!18410 = !DILocation(line: 1307, column: 2, scope: !18388)
!18411 = distinct !DISubprogram(name: "sanity_check", scope: !3, file: !3, line: 605, type: !18412, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18412 = !DISubroutineType(types: !18413)
!18413 = !{!32, !7530, !1038, !292}
!18414 = !DILocalVariable(name: "info", arg: 1, scope: !18411, file: !3, line: 605, type: !7530)
!18415 = !DILocation(line: 605, column: 50, scope: !18411)
!18416 = !DILocalVariable(name: "devname", arg: 2, scope: !18411, file: !3, line: 605, type: !1038)
!18417 = !DILocation(line: 605, column: 62, scope: !18411)
!18418 = !DILocalVariable(name: "name", arg: 3, scope: !18411, file: !3, line: 605, type: !292)
!18419 = !DILocation(line: 605, column: 83, scope: !18411)
!18420 = !DILocation(line: 617, column: 7, scope: !18421)
!18421 = distinct !DILexicalBlock(scope: !18411, file: !3, line: 617, column: 6)
!18422 = !DILocation(line: 617, column: 6, scope: !18411)
!18423 = !DILocation(line: 618, column: 3, scope: !18421)
!18424 = !DILocation(line: 620, column: 2, scope: !18411)
!18425 = !DILocation(line: 621, column: 1, scope: !18411)
!18426 = distinct !DISubprogram(name: "block_til_ready", scope: !3, file: !3, line: 3226, type: !18427, scopeLine: 3228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18427 = !DISubroutineType(types: !18428)
!18428 = !{!32, !3760, !1315, !7530}
!18429 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18430)
!18430 = distinct !DILocation(line: 3289, column: 2, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 3289, column: 2)
!18432 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 3289, column: 2)
!18433 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3289, column: 2)
!18434 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18430)
!18435 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18430)
!18436 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18437)
!18437 = distinct !DILocation(line: 3278, column: 22, scope: !18438)
!18438 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3278, column: 7)
!18439 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3262, column: 12)
!18440 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18437)
!18441 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18437)
!18442 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18443)
!18443 = distinct !DILocation(line: 3266, column: 3, scope: !18444)
!18444 = distinct !DILexicalBlock(scope: !18445, file: !3, line: 3266, column: 3)
!18445 = distinct !DILexicalBlock(scope: !18446, file: !3, line: 3266, column: 3)
!18446 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3266, column: 3)
!18447 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18443)
!18448 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18443)
!18449 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18450)
!18450 = distinct !DILocation(line: 3259, column: 2, scope: !18426)
!18451 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18450)
!18452 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18453)
!18453 = distinct !DILocation(line: 3257, column: 2, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18455, file: !3, line: 3257, column: 2)
!18455 = distinct !DILexicalBlock(scope: !18456, file: !3, line: 3257, column: 2)
!18456 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 3257, column: 2)
!18457 = distinct !DILexicalBlock(scope: !18458, file: !3, line: 3257, column: 2)
!18458 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3257, column: 2)
!18459 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18460)
!18460 = distinct !DILocation(line: 3229, column: 2, scope: !18426)
!18461 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18460)
!18462 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18460)
!18463 = !DILocalVariable(name: "tty", arg: 1, scope: !18426, file: !3, line: 3226, type: !3760)
!18464 = !DILocation(line: 3226, column: 47, scope: !18426)
!18465 = !DILocalVariable(name: "filp", arg: 2, scope: !18426, file: !3, line: 3226, type: !1315)
!18466 = !DILocation(line: 3226, column: 65, scope: !18426)
!18467 = !DILocalVariable(name: "info", arg: 3, scope: !18426, file: !3, line: 3227, type: !7530)
!18468 = !DILocation(line: 3227, column: 25, scope: !18426)
!18469 = !DILocalVariable(name: "wait", scope: !18426, file: !3, line: 3229, type: !7864)
!18470 = !DILocation(line: 3229, column: 2, scope: !18426)
!18471 = !DILocalVariable(name: "retval", scope: !18426, file: !3, line: 3230, type: !32)
!18472 = !DILocation(line: 3230, column: 7, scope: !18426)
!18473 = !DILocalVariable(name: "do_clocal", scope: !18426, file: !3, line: 3231, type: !771)
!18474 = !DILocation(line: 3231, column: 8, scope: !18426)
!18475 = !DILocalVariable(name: "flags", scope: !18426, file: !3, line: 3232, type: !312)
!18476 = !DILocation(line: 3232, column: 16, scope: !18426)
!18477 = !DILocalVariable(name: "cd", scope: !18426, file: !3, line: 3233, type: !32)
!18478 = !DILocation(line: 3233, column: 7, scope: !18426)
!18479 = !DILocalVariable(name: "port", scope: !18426, file: !3, line: 3234, type: !4766)
!18480 = !DILocation(line: 3234, column: 19, scope: !18426)
!18481 = !DILocation(line: 3234, column: 27, scope: !18426)
!18482 = !DILocation(line: 3234, column: 33, scope: !18426)
!18483 = !DILocation(line: 3236, column: 2, scope: !18484)
!18484 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3236, column: 2)
!18485 = !DILocation(line: 3236, column: 2, scope: !18426)
!18486 = !DILocation(line: 3238, column: 6, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3238, column: 6)
!18488 = !DILocation(line: 3238, column: 12, scope: !18487)
!18489 = !DILocation(line: 3238, column: 20, scope: !18487)
!18490 = !DILocation(line: 3238, column: 33, scope: !18487)
!18491 = !DILocation(line: 3238, column: 49, scope: !18487)
!18492 = !DILocation(line: 3238, column: 36, scope: !18487)
!18493 = !DILocation(line: 3238, column: 6, scope: !18426)
!18494 = !DILocation(line: 3240, column: 23, scope: !18495)
!18495 = distinct !DILexicalBlock(scope: !18487, file: !3, line: 3238, column: 55)
!18496 = !DILocation(line: 3240, column: 3, scope: !18495)
!18497 = !DILocation(line: 3241, column: 3, scope: !18495)
!18498 = !DILocation(line: 3244, column: 6, scope: !18499)
!18499 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3244, column: 6)
!18500 = !DILocation(line: 3244, column: 6, scope: !18426)
!18501 = !DILocation(line: 3245, column: 13, scope: !18499)
!18502 = !DILocation(line: 3245, column: 3, scope: !18499)
!18503 = !DILocation(line: 3254, column: 9, scope: !18426)
!18504 = !DILocation(line: 3255, column: 18, scope: !18426)
!18505 = !DILocation(line: 3255, column: 24, scope: !18426)
!18506 = !DILocation(line: 3255, column: 2, scope: !18426)
!18507 = !DILocation(line: 3257, column: 2, scope: !18426)
!18508 = !DILocation(line: 3257, column: 2, scope: !18458)
!18509 = !DILocalVariable(name: "__dummy", scope: !18510, file: !3, line: 3257, type: !312)
!18510 = distinct !DILexicalBlock(scope: !18457, file: !3, line: 3257, column: 2)
!18511 = !DILocation(line: 3257, column: 2, scope: !18510)
!18512 = !DILocalVariable(name: "__dummy2", scope: !18510, file: !3, line: 3257, type: !312)
!18513 = !DILocation(line: 3257, column: 2, scope: !18457)
!18514 = !DILocation(line: 3257, column: 2, scope: !18456)
!18515 = !DILocation(line: 3257, column: 2, scope: !18516)
!18516 = distinct !DILexicalBlock(scope: !18456, file: !3, line: 3257, column: 2)
!18517 = !DILocalVariable(name: "__dummy", scope: !18518, file: !3, line: 3257, type: !312)
!18518 = distinct !DILexicalBlock(scope: !18519, file: !3, line: 3257, column: 2)
!18519 = distinct !DILexicalBlock(scope: !18516, file: !3, line: 3257, column: 2)
!18520 = !DILocation(line: 3257, column: 2, scope: !18518)
!18521 = !DILocalVariable(name: "__dummy2", scope: !18518, file: !3, line: 3257, type: !312)
!18522 = !DILocation(line: 3257, column: 2, scope: !18519)
!18523 = !DILocation(line: 3257, column: 2, scope: !18455)
!18524 = !{i32 -2139485733}
!18525 = !DILocation(line: 3257, column: 2, scope: !18454)
!18526 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18453)
!18527 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18453)
!18528 = !DILocation(line: 3258, column: 2, scope: !18426)
!18529 = !DILocation(line: 3258, column: 8, scope: !18426)
!18530 = !DILocation(line: 3258, column: 13, scope: !18426)
!18531 = !DILocation(line: 3259, column: 26, scope: !18426)
!18532 = !DILocation(line: 3259, column: 32, scope: !18426)
!18533 = !DILocation(line: 3259, column: 38, scope: !18426)
!18534 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18450)
!18535 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18450)
!18536 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18450)
!18537 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18450)
!18538 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18450)
!18539 = !DILocation(line: 3260, column: 2, scope: !18426)
!18540 = !DILocation(line: 3260, column: 8, scope: !18426)
!18541 = !DILocation(line: 3260, column: 20, scope: !18426)
!18542 = !DILocation(line: 3262, column: 2, scope: !18426)
!18543 = !DILocation(line: 3263, column: 7, scope: !18544)
!18544 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3263, column: 7)
!18545 = !DILocation(line: 3263, column: 19, scope: !18544)
!18546 = !DILocation(line: 3263, column: 43, scope: !18544)
!18547 = !DILocation(line: 3263, column: 22, scope: !18544)
!18548 = !DILocation(line: 3263, column: 7, scope: !18439)
!18549 = !DILocation(line: 3264, column: 27, scope: !18544)
!18550 = !DILocation(line: 3264, column: 4, scope: !18544)
!18551 = !DILocation(line: 3266, column: 3, scope: !18439)
!18552 = !DILocation(line: 3266, column: 3, scope: !18446)
!18553 = !DILocation(line: 3266, column: 3, scope: !18445)
!18554 = !DILocation(line: 3266, column: 3, scope: !18555)
!18555 = distinct !DILexicalBlock(scope: !18445, file: !3, line: 3266, column: 3)
!18556 = !DILocation(line: 3266, column: 3, scope: !18444)
!18557 = !{i32 -2139483881}
!18558 = !DILocation(line: 3268, column: 21, scope: !18559)
!18559 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3268, column: 7)
!18560 = !DILocation(line: 3268, column: 7, scope: !18559)
!18561 = !DILocation(line: 3268, column: 27, scope: !18559)
!18562 = !DILocation(line: 3268, column: 52, scope: !18559)
!18563 = !DILocation(line: 3268, column: 31, scope: !18559)
!18564 = !DILocation(line: 3268, column: 7, scope: !18439)
!18565 = !DILocation(line: 3269, column: 14, scope: !18566)
!18566 = distinct !DILexicalBlock(scope: !18559, file: !3, line: 3268, column: 59)
!18567 = !DILocation(line: 3269, column: 20, scope: !18566)
!18568 = !DILocation(line: 3269, column: 26, scope: !18566)
!18569 = !DILocation(line: 3269, column: 13, scope: !18566)
!18570 = !DILocation(line: 3269, column: 11, scope: !18566)
!18571 = !DILocation(line: 3271, column: 4, scope: !18566)
!18572 = !DILocation(line: 3274, column: 32, scope: !18439)
!18573 = !DILocation(line: 3274, column: 8, scope: !18439)
!18574 = !DILocation(line: 3274, column: 6, scope: !18439)
!18575 = !DILocation(line: 3275, column: 7, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3275, column: 7)
!18577 = !DILocation(line: 3275, column: 17, scope: !18576)
!18578 = !DILocation(line: 3275, column: 20, scope: !18576)
!18579 = !DILocation(line: 3275, column: 7, scope: !18439)
!18580 = !DILocation(line: 3276, column: 4, scope: !18576)
!18581 = !DILocation(line: 3278, column: 7, scope: !18438)
!18582 = !DILocation(line: 3278, column: 7, scope: !18439)
!18583 = !DILocation(line: 3279, column: 11, scope: !18584)
!18584 = distinct !DILexicalBlock(scope: !18438, file: !3, line: 3278, column: 32)
!18585 = !DILocation(line: 3280, column: 4, scope: !18584)
!18586 = !DILocation(line: 3283, column: 3, scope: !18587)
!18587 = distinct !DILexicalBlock(scope: !18439, file: !3, line: 3283, column: 3)
!18588 = !DILocation(line: 3283, column: 3, scope: !18439)
!18589 = !DILocation(line: 3284, column: 14, scope: !18439)
!18590 = !DILocation(line: 3284, column: 3, scope: !18439)
!18591 = !DILocation(line: 3285, column: 3, scope: !18439)
!18592 = !DILocation(line: 3286, column: 12, scope: !18439)
!18593 = !DILocation(line: 3286, column: 3, scope: !18439)
!18594 = distinct !{!18594, !18542, !18595}
!18595 = !DILocation(line: 3287, column: 2, scope: !18426)
!18596 = !DILocation(line: 3289, column: 2, scope: !18426)
!18597 = !DILocation(line: 3289, column: 2, scope: !18433)
!18598 = !DILocation(line: 3289, column: 2, scope: !18432)
!18599 = !DILocation(line: 3289, column: 2, scope: !18600)
!18600 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 3289, column: 2)
!18601 = !DILocation(line: 3289, column: 2, scope: !18431)
!18602 = !{i32 -2139482074}
!18603 = !DILocation(line: 3290, column: 21, scope: !18426)
!18604 = !DILocation(line: 3290, column: 27, scope: !18426)
!18605 = !DILocation(line: 3290, column: 2, scope: !18426)
!18606 = !DILocation(line: 3292, column: 21, scope: !18607)
!18607 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3292, column: 6)
!18608 = !DILocation(line: 3292, column: 7, scope: !18607)
!18609 = !DILocation(line: 3292, column: 6, scope: !18426)
!18610 = !DILocation(line: 3293, column: 3, scope: !18607)
!18611 = !DILocation(line: 3293, column: 9, scope: !18607)
!18612 = !DILocation(line: 3293, column: 14, scope: !18607)
!18613 = !DILocation(line: 3294, column: 2, scope: !18426)
!18614 = !DILocation(line: 3294, column: 8, scope: !18426)
!18615 = !DILocation(line: 3294, column: 20, scope: !18426)
!18616 = !DILocation(line: 3296, column: 7, scope: !18617)
!18617 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3296, column: 6)
!18618 = !DILocation(line: 3296, column: 6, scope: !18426)
!18619 = !DILocation(line: 3297, column: 23, scope: !18617)
!18620 = !DILocation(line: 3297, column: 3, scope: !18617)
!18621 = !DILocation(line: 3299, column: 2, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18426, file: !3, line: 3299, column: 2)
!18623 = !DILocation(line: 3299, column: 2, scope: !18426)
!18624 = !DILocation(line: 3300, column: 9, scope: !18426)
!18625 = !DILocation(line: 3300, column: 2, scope: !18426)
!18626 = !DILocation(line: 3301, column: 1, scope: !18426)
!18627 = distinct !DISubprogram(name: "tty_io_error", scope: !3762, file: !3762, line: 399, type: !18628, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18628 = !DISubroutineType(types: !18629)
!18629 = !{!771, !3760}
!18630 = !DILocalVariable(name: "tty", arg: 1, scope: !18627, file: !3762, line: 399, type: !3760)
!18631 = !DILocation(line: 399, column: 52, scope: !18627)
!18632 = !DILocation(line: 401, column: 33, scope: !18627)
!18633 = !DILocation(line: 401, column: 38, scope: !18627)
!18634 = !DILocation(line: 401, column: 9, scope: !18627)
!18635 = !DILocation(line: 401, column: 2, scope: !18627)
!18636 = distinct !DISubprogram(name: "tty_port_set_active", scope: !3762, file: !3762, line: 630, type: !13387, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18637 = !DILocalVariable(name: "port", arg: 1, scope: !18636, file: !3762, line: 630, type: !4766)
!18638 = !DILocation(line: 630, column: 57, scope: !18636)
!18639 = !DILocalVariable(name: "val", arg: 2, scope: !18636, file: !3762, line: 630, type: !771)
!18640 = !DILocation(line: 630, column: 68, scope: !18636)
!18641 = !DILocation(line: 632, column: 6, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18636, file: !3762, line: 632, column: 6)
!18643 = !DILocation(line: 632, column: 6, scope: !18636)
!18644 = !DILocation(line: 633, column: 29, scope: !18642)
!18645 = !DILocation(line: 633, column: 35, scope: !18642)
!18646 = !DILocation(line: 633, column: 3, scope: !18642)
!18647 = !DILocation(line: 635, column: 31, scope: !18642)
!18648 = !DILocation(line: 635, column: 37, scope: !18642)
!18649 = !DILocation(line: 635, column: 3, scope: !18642)
!18650 = !DILocation(line: 636, column: 1, scope: !18636)
!18651 = distinct !DISubprogram(name: "signal_pending", scope: !3708, file: !3708, line: 356, type: !18652, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18652 = !DISubroutineType(types: !18653)
!18653 = !{!32, !2326}
!18654 = !DILocalVariable(name: "p", arg: 1, scope: !18651, file: !3708, line: 356, type: !2326)
!18655 = !DILocation(line: 356, column: 54, scope: !18651)
!18656 = !DILocation(line: 358, column: 9, scope: !18651)
!18657 = !DILocation(line: 358, column: 2, scope: !18651)
!18658 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !2328, file: !2328, line: 1828, type: !18659, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18659 = !DISubroutineType(types: !18660)
!18660 = !{!32, !2326, !32}
!18661 = !DILocalVariable(name: "tsk", arg: 1, scope: !18658, file: !2328, line: 1828, type: !2326)
!18662 = !DILocation(line: 1828, column: 60, scope: !18658)
!18663 = !DILocalVariable(name: "flag", arg: 2, scope: !18658, file: !2328, line: 1828, type: !32)
!18664 = !DILocation(line: 1828, column: 69, scope: !18658)
!18665 = !DILocation(line: 1830, column: 46, scope: !18658)
!18666 = !DILocation(line: 1830, column: 29, scope: !18658)
!18667 = !DILocation(line: 1830, column: 52, scope: !18658)
!18668 = !DILocation(line: 1830, column: 9, scope: !18658)
!18669 = !DILocation(line: 1830, column: 2, scope: !18658)
!18670 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !12404, file: !12404, line: 82, type: !18671, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18671 = !DISubroutineType(types: !18672)
!18672 = !{!32, !18673, !32}
!18673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!18674 = !DILocalVariable(name: "ti", arg: 1, scope: !18670, file: !12404, line: 82, type: !18673)
!18675 = !DILocation(line: 82, column: 59, scope: !18670)
!18676 = !DILocalVariable(name: "flag", arg: 2, scope: !18670, file: !12404, line: 82, type: !32)
!18677 = !DILocation(line: 82, column: 67, scope: !18670)
!18678 = !DILocation(line: 84, column: 18, scope: !18670)
!18679 = !DILocation(line: 84, column: 42, scope: !18670)
!18680 = !DILocation(line: 84, column: 46, scope: !18670)
!18681 = !DILocation(line: 84, column: 9, scope: !18670)
!18682 = !DILocation(line: 84, column: 2, scope: !18670)
!18683 = distinct !DISubprogram(name: "task_thread_info", scope: !2328, file: !2328, line: 1729, type: !18684, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18684 = !DISubroutineType(types: !18685)
!18685 = !{!18673, !2326}
!18686 = !DILocalVariable(name: "task", arg: 1, scope: !18683, file: !2328, line: 1729, type: !2326)
!18687 = !DILocation(line: 1729, column: 72, scope: !18683)
!18688 = !DILocation(line: 1731, column: 10, scope: !18683)
!18689 = !DILocation(line: 1731, column: 16, scope: !18683)
!18690 = !DILocation(line: 1731, column: 2, scope: !18683)
!18691 = distinct !DISubprogram(name: "wait_mgsl_event", scope: !3, file: !3, line: 2716, type: !18692, scopeLine: 2717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!18692 = !DISubroutineType(types: !18693)
!18693 = !{!32, !7530, !1001}
!18694 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18695)
!18695 = distinct !DILocation(line: 2822, column: 3, scope: !18696)
!18696 = distinct !DILexicalBlock(scope: !18697, file: !3, line: 2815, column: 64)
!18697 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2815, column: 6)
!18698 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18695)
!18699 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18700)
!18700 = distinct !DILocation(line: 2816, column: 3, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18702, file: !3, line: 2816, column: 3)
!18702 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 2816, column: 3)
!18703 = distinct !DILexicalBlock(scope: !18704, file: !3, line: 2816, column: 3)
!18704 = distinct !DILexicalBlock(scope: !18705, file: !3, line: 2816, column: 3)
!18705 = distinct !DILexicalBlock(scope: !18696, file: !3, line: 2816, column: 3)
!18706 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18707)
!18707 = distinct !DILocation(line: 2812, column: 2, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18709, file: !3, line: 2812, column: 2)
!18709 = distinct !DILexicalBlock(scope: !18710, file: !3, line: 2812, column: 2)
!18710 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2812, column: 2)
!18711 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18707)
!18712 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18707)
!18713 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18714)
!18714 = distinct !DILocation(line: 2776, column: 3, scope: !18715)
!18715 = distinct !DILexicalBlock(scope: !18716, file: !3, line: 2764, column: 10)
!18716 = distinct !DILexicalBlock(scope: !18717, file: !3, line: 2764, column: 2)
!18717 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2764, column: 2)
!18718 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18714)
!18719 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18720)
!18720 = distinct !DILocation(line: 2775, column: 3, scope: !18721)
!18721 = distinct !DILexicalBlock(scope: !18722, file: !3, line: 2775, column: 3)
!18722 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 2775, column: 3)
!18723 = distinct !DILexicalBlock(scope: !18715, file: !3, line: 2775, column: 3)
!18724 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18720)
!18725 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18720)
!18726 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18727)
!18727 = distinct !DILocation(line: 2772, column: 3, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18729, file: !3, line: 2772, column: 3)
!18729 = distinct !DILexicalBlock(scope: !18730, file: !3, line: 2772, column: 3)
!18730 = distinct !DILexicalBlock(scope: !18731, file: !3, line: 2772, column: 3)
!18731 = distinct !DILexicalBlock(scope: !18732, file: !3, line: 2772, column: 3)
!18732 = distinct !DILexicalBlock(scope: !18715, file: !3, line: 2772, column: 3)
!18733 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18734)
!18734 = distinct !DILocation(line: 2766, column: 22, scope: !18735)
!18735 = distinct !DILexicalBlock(scope: !18715, file: !3, line: 2766, column: 7)
!18736 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18734)
!18737 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18734)
!18738 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18739)
!18739 = distinct !DILocation(line: 2762, column: 2, scope: !18691)
!18740 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18739)
!18741 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18742)
!18742 = distinct !DILocation(line: 2759, column: 2, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18744, file: !3, line: 2759, column: 2)
!18744 = distinct !DILexicalBlock(scope: !18745, file: !3, line: 2759, column: 2)
!18745 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2759, column: 2)
!18746 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18742)
!18747 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18742)
!18748 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !18749)
!18749 = distinct !DILocation(line: 2744, column: 3, scope: !18750)
!18750 = distinct !DILexicalBlock(scope: !18751, file: !3, line: 2743, column: 14)
!18751 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2743, column: 6)
!18752 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !18749)
!18753 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !18754)
!18754 = distinct !DILocation(line: 2732, column: 2, scope: !18755)
!18755 = distinct !DILexicalBlock(scope: !18756, file: !3, line: 2732, column: 2)
!18756 = distinct !DILexicalBlock(scope: !18757, file: !3, line: 2732, column: 2)
!18757 = distinct !DILexicalBlock(scope: !18758, file: !3, line: 2732, column: 2)
!18758 = distinct !DILexicalBlock(scope: !18759, file: !3, line: 2732, column: 2)
!18759 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2732, column: 2)
!18760 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !18761)
!18761 = distinct !DILocation(line: 2725, column: 2, scope: !18691)
!18762 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !18761)
!18763 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !18761)
!18764 = !DILocalVariable(name: "info", arg: 1, scope: !18691, file: !3, line: 2716, type: !7530)
!18765 = !DILocation(line: 2716, column: 46, scope: !18691)
!18766 = !DILocalVariable(name: "mask_ptr", arg: 2, scope: !18691, file: !3, line: 2716, type: !1001)
!18767 = !DILocation(line: 2716, column: 64, scope: !18691)
!18768 = !DILocalVariable(name: "flags", scope: !18691, file: !3, line: 2718, type: !312)
!18769 = !DILocation(line: 2718, column: 17, scope: !18691)
!18770 = !DILocalVariable(name: "s", scope: !18691, file: !3, line: 2719, type: !32)
!18771 = !DILocation(line: 2719, column: 6, scope: !18691)
!18772 = !DILocalVariable(name: "rc", scope: !18691, file: !3, line: 2720, type: !32)
!18773 = !DILocation(line: 2720, column: 6, scope: !18691)
!18774 = !DILocalVariable(name: "cprev", scope: !18691, file: !3, line: 2721, type: !7821)
!18775 = !DILocation(line: 2721, column: 21, scope: !18691)
!18776 = !DILocalVariable(name: "cnow", scope: !18691, file: !3, line: 2721, type: !7821)
!18777 = !DILocation(line: 2721, column: 28, scope: !18691)
!18778 = !DILocalVariable(name: "events", scope: !18691, file: !3, line: 2722, type: !32)
!18779 = !DILocation(line: 2722, column: 6, scope: !18691)
!18780 = !DILocalVariable(name: "mask", scope: !18691, file: !3, line: 2723, type: !32)
!18781 = !DILocation(line: 2723, column: 6, scope: !18691)
!18782 = !DILocalVariable(name: "oldsigs", scope: !18691, file: !3, line: 2724, type: !7926)
!18783 = !DILocation(line: 2724, column: 30, scope: !18691)
!18784 = !DILocalVariable(name: "newsigs", scope: !18691, file: !3, line: 2724, type: !7926)
!18785 = !DILocation(line: 2724, column: 39, scope: !18691)
!18786 = !DILocalVariable(name: "wait", scope: !18691, file: !3, line: 2725, type: !7864)
!18787 = !DILocation(line: 2725, column: 2, scope: !18691)
!18788 = !DILocation(line: 2727, column: 6, scope: !18789)
!18789 = distinct !DILexicalBlock(scope: !18790, file: !3, line: 2727, column: 6)
!18790 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2727, column: 6)
!18791 = !DILocalVariable(name: "__ret_gu", scope: !18792, file: !3, line: 2727, type: !32)
!18792 = distinct !DILexicalBlock(scope: !18789, file: !3, line: 2727, column: 6)
!18793 = !DILocation(line: 2727, column: 6, scope: !18792)
!18794 = !DILocalVariable(name: "__val_gu", scope: !18792, file: !3, line: 2727, type: !7)
!18795 = !{i32 -2139525895}
!18796 = !DILocation(line: 2727, column: 6, scope: !18790)
!18797 = !DILocation(line: 2727, column: 6, scope: !18691)
!18798 = !DILocation(line: 2728, column: 3, scope: !18790)
!18799 = !DILocation(line: 2730, column: 2, scope: !18800)
!18800 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2730, column: 2)
!18801 = !DILocation(line: 2730, column: 2, scope: !18691)
!18802 = !DILocation(line: 2732, column: 2, scope: !18691)
!18803 = !DILocation(line: 2732, column: 2, scope: !18759)
!18804 = !DILocalVariable(name: "__dummy", scope: !18805, file: !3, line: 2732, type: !312)
!18805 = distinct !DILexicalBlock(scope: !18758, file: !3, line: 2732, column: 2)
!18806 = !DILocation(line: 2732, column: 2, scope: !18805)
!18807 = !DILocalVariable(name: "__dummy2", scope: !18805, file: !3, line: 2732, type: !312)
!18808 = !DILocation(line: 2732, column: 2, scope: !18758)
!18809 = !DILocation(line: 2732, column: 2, scope: !18757)
!18810 = !DILocation(line: 2732, column: 2, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18757, file: !3, line: 2732, column: 2)
!18812 = !DILocalVariable(name: "__dummy", scope: !18813, file: !3, line: 2732, type: !312)
!18813 = distinct !DILexicalBlock(scope: !18814, file: !3, line: 2732, column: 2)
!18814 = distinct !DILexicalBlock(scope: !18811, file: !3, line: 2732, column: 2)
!18815 = !DILocation(line: 2732, column: 2, scope: !18813)
!18816 = !DILocalVariable(name: "__dummy2", scope: !18813, file: !3, line: 2732, type: !312)
!18817 = !DILocation(line: 2732, column: 2, scope: !18814)
!18818 = !DILocation(line: 2732, column: 2, scope: !18756)
!18819 = !{i32 -2139523370}
!18820 = !DILocation(line: 2732, column: 2, scope: !18755)
!18821 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18754)
!18822 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18754)
!18823 = !DILocation(line: 2735, column: 14, scope: !18691)
!18824 = !DILocation(line: 2735, column: 2, scope: !18691)
!18825 = !DILocation(line: 2736, column: 6, scope: !18691)
!18826 = !DILocation(line: 2736, column: 12, scope: !18691)
!18827 = !DILocation(line: 2736, column: 4, scope: !18691)
!18828 = !DILocation(line: 2738, column: 11, scope: !18691)
!18829 = !DILocation(line: 2739, column: 7, scope: !18691)
!18830 = !DILocation(line: 2739, column: 9, scope: !18691)
!18831 = !DILocation(line: 2739, column: 6, scope: !18691)
!18832 = !DILocation(line: 2740, column: 8, scope: !18691)
!18833 = !DILocation(line: 2740, column: 10, scope: !18691)
!18834 = !DILocation(line: 2740, column: 7, scope: !18691)
!18835 = !DILocation(line: 2739, column: 74, scope: !18691)
!18836 = !DILocation(line: 2741, column: 7, scope: !18691)
!18837 = !DILocation(line: 2741, column: 9, scope: !18691)
!18838 = !DILocation(line: 2741, column: 6, scope: !18691)
!18839 = !DILocation(line: 2740, column: 75, scope: !18691)
!18840 = !DILocation(line: 2742, column: 7, scope: !18691)
!18841 = !DILocation(line: 2742, column: 9, scope: !18691)
!18842 = !DILocation(line: 2742, column: 6, scope: !18691)
!18843 = !DILocation(line: 2741, column: 74, scope: !18691)
!18844 = !DILocation(line: 2738, column: 16, scope: !18691)
!18845 = !DILocation(line: 2738, column: 9, scope: !18691)
!18846 = !DILocation(line: 2743, column: 6, scope: !18751)
!18847 = !DILocation(line: 2743, column: 6, scope: !18691)
!18848 = !DILocation(line: 2744, column: 27, scope: !18750)
!18849 = !DILocation(line: 2744, column: 33, scope: !18750)
!18850 = !DILocation(line: 2744, column: 38, scope: !18750)
!18851 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18749)
!18852 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18749)
!18853 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18749)
!18854 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18749)
!18855 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18749)
!18856 = !DILocation(line: 2745, column: 3, scope: !18750)
!18857 = !DILocation(line: 2749, column: 10, scope: !18691)
!18858 = !DILocation(line: 2749, column: 16, scope: !18691)
!18859 = !DILocation(line: 2750, column: 12, scope: !18691)
!18860 = !DILocation(line: 2750, column: 18, scope: !18691)
!18861 = !DILocation(line: 2753, column: 6, scope: !18862)
!18862 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2753, column: 6)
!18863 = !DILocation(line: 2753, column: 11, scope: !18862)
!18864 = !DILocation(line: 2753, column: 6, scope: !18691)
!18865 = !DILocalVariable(name: "val", scope: !18866, file: !3, line: 2754, type: !476)
!18866 = distinct !DILexicalBlock(scope: !18862, file: !3, line: 2753, column: 62)
!18867 = !DILocation(line: 2754, column: 18, scope: !18866)
!18868 = !DILocation(line: 2754, column: 33, scope: !18866)
!18869 = !DILocation(line: 2754, column: 24, scope: !18866)
!18870 = !DILocation(line: 2755, column: 9, scope: !18871)
!18871 = distinct !DILexicalBlock(scope: !18866, file: !3, line: 2755, column: 7)
!18872 = !DILocation(line: 2755, column: 13, scope: !18871)
!18873 = !DILocation(line: 2755, column: 7, scope: !18866)
!18874 = !DILocation(line: 2756, column: 13, scope: !18871)
!18875 = !DILocation(line: 2756, column: 41, scope: !18871)
!18876 = !DILocation(line: 2756, column: 45, scope: !18871)
!18877 = !DILocation(line: 2756, column: 24, scope: !18871)
!18878 = !DILocation(line: 2756, column: 4, scope: !18871)
!18879 = !DILocation(line: 2757, column: 2, scope: !18866)
!18880 = !DILocation(line: 2759, column: 2, scope: !18691)
!18881 = !DILocation(line: 2759, column: 2, scope: !18745)
!18882 = !DILocation(line: 2759, column: 2, scope: !18744)
!18883 = !DILocation(line: 2759, column: 2, scope: !18884)
!18884 = distinct !DILexicalBlock(scope: !18744, file: !3, line: 2759, column: 2)
!18885 = !DILocation(line: 2759, column: 2, scope: !18743)
!18886 = !{i32 -2139521475}
!18887 = !DILocation(line: 2760, column: 18, scope: !18691)
!18888 = !DILocation(line: 2760, column: 24, scope: !18691)
!18889 = !DILocation(line: 2760, column: 2, scope: !18691)
!18890 = !DILocation(line: 2762, column: 26, scope: !18691)
!18891 = !DILocation(line: 2762, column: 32, scope: !18691)
!18892 = !DILocation(line: 2762, column: 37, scope: !18691)
!18893 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18739)
!18894 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18739)
!18895 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18739)
!18896 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18739)
!18897 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18739)
!18898 = !DILocation(line: 2764, column: 2, scope: !18691)
!18899 = !DILocation(line: 2765, column: 3, scope: !18715)
!18900 = !DILocation(line: 2766, column: 7, scope: !18735)
!18901 = !DILocation(line: 2766, column: 7, scope: !18715)
!18902 = !DILocation(line: 2767, column: 7, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18735, file: !3, line: 2766, column: 32)
!18904 = !DILocation(line: 2768, column: 4, scope: !18903)
!18905 = !DILocation(line: 2772, column: 3, scope: !18715)
!18906 = !DILocation(line: 2772, column: 3, scope: !18732)
!18907 = !DILocalVariable(name: "__dummy", scope: !18908, file: !3, line: 2772, type: !312)
!18908 = distinct !DILexicalBlock(scope: !18731, file: !3, line: 2772, column: 3)
!18909 = !DILocation(line: 2772, column: 3, scope: !18908)
!18910 = !DILocalVariable(name: "__dummy2", scope: !18908, file: !3, line: 2772, type: !312)
!18911 = !DILocation(line: 2772, column: 3, scope: !18731)
!18912 = !DILocation(line: 2772, column: 3, scope: !18730)
!18913 = !DILocation(line: 2772, column: 3, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18730, file: !3, line: 2772, column: 3)
!18915 = !DILocalVariable(name: "__dummy", scope: !18916, file: !3, line: 2772, type: !312)
!18916 = distinct !DILexicalBlock(scope: !18917, file: !3, line: 2772, column: 3)
!18917 = distinct !DILexicalBlock(scope: !18914, file: !3, line: 2772, column: 3)
!18918 = !DILocation(line: 2772, column: 3, scope: !18916)
!18919 = !DILocalVariable(name: "__dummy2", scope: !18916, file: !3, line: 2772, type: !312)
!18920 = !DILocation(line: 2772, column: 3, scope: !18917)
!18921 = !DILocation(line: 2772, column: 3, scope: !18729)
!18922 = !{i32 -2139520554}
!18923 = !DILocation(line: 2772, column: 3, scope: !18728)
!18924 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18727)
!18925 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18727)
!18926 = !DILocation(line: 2773, column: 10, scope: !18715)
!18927 = !DILocation(line: 2773, column: 16, scope: !18715)
!18928 = !DILocation(line: 2774, column: 13, scope: !18715)
!18929 = !DILocation(line: 2774, column: 19, scope: !18715)
!18930 = !DILocation(line: 2775, column: 3, scope: !18715)
!18931 = !DILocation(line: 2775, column: 3, scope: !18723)
!18932 = !DILocation(line: 2775, column: 3, scope: !18722)
!18933 = !DILocation(line: 2775, column: 3, scope: !18934)
!18934 = distinct !DILexicalBlock(scope: !18722, file: !3, line: 2775, column: 3)
!18935 = !DILocation(line: 2775, column: 3, scope: !18721)
!18936 = !{i32 -2139518783}
!18937 = !DILocation(line: 2776, column: 27, scope: !18715)
!18938 = !DILocation(line: 2776, column: 33, scope: !18715)
!18939 = !DILocation(line: 2776, column: 38, scope: !18715)
!18940 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18714)
!18941 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18714)
!18942 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18714)
!18943 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18714)
!18944 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18714)
!18945 = !DILocation(line: 2779, column: 15, scope: !18946)
!18946 = distinct !DILexicalBlock(scope: !18715, file: !3, line: 2779, column: 7)
!18947 = !DILocation(line: 2779, column: 35, scope: !18946)
!18948 = !DILocation(line: 2779, column: 24, scope: !18946)
!18949 = !DILocation(line: 2779, column: 44, scope: !18946)
!18950 = !DILocation(line: 2780, column: 15, scope: !18946)
!18951 = !DILocation(line: 2780, column: 35, scope: !18946)
!18952 = !DILocation(line: 2780, column: 24, scope: !18946)
!18953 = !DILocation(line: 2780, column: 44, scope: !18946)
!18954 = !DILocation(line: 2781, column: 15, scope: !18946)
!18955 = !DILocation(line: 2781, column: 35, scope: !18946)
!18956 = !DILocation(line: 2781, column: 24, scope: !18946)
!18957 = !DILocation(line: 2781, column: 44, scope: !18946)
!18958 = !DILocation(line: 2782, column: 15, scope: !18946)
!18959 = !DILocation(line: 2782, column: 35, scope: !18946)
!18960 = !DILocation(line: 2782, column: 24, scope: !18946)
!18961 = !DILocation(line: 2782, column: 44, scope: !18946)
!18962 = !DILocation(line: 2783, column: 15, scope: !18946)
!18963 = !DILocation(line: 2783, column: 35, scope: !18946)
!18964 = !DILocation(line: 2783, column: 24, scope: !18946)
!18965 = !DILocation(line: 2783, column: 44, scope: !18946)
!18966 = !DILocation(line: 2784, column: 15, scope: !18946)
!18967 = !DILocation(line: 2784, column: 35, scope: !18946)
!18968 = !DILocation(line: 2784, column: 24, scope: !18946)
!18969 = !DILocation(line: 2784, column: 44, scope: !18946)
!18970 = !DILocation(line: 2785, column: 15, scope: !18946)
!18971 = !DILocation(line: 2785, column: 35, scope: !18946)
!18972 = !DILocation(line: 2785, column: 24, scope: !18946)
!18973 = !DILocation(line: 2785, column: 44, scope: !18946)
!18974 = !DILocation(line: 2786, column: 15, scope: !18946)
!18975 = !DILocation(line: 2786, column: 35, scope: !18946)
!18976 = !DILocation(line: 2786, column: 24, scope: !18946)
!18977 = !DILocation(line: 2786, column: 44, scope: !18946)
!18978 = !DILocation(line: 2787, column: 12, scope: !18946)
!18979 = !DILocation(line: 2787, column: 33, scope: !18946)
!18980 = !DILocation(line: 2787, column: 24, scope: !18946)
!18981 = !DILocation(line: 2787, column: 44, scope: !18946)
!18982 = !DILocation(line: 2788, column: 12, scope: !18946)
!18983 = !DILocation(line: 2788, column: 33, scope: !18946)
!18984 = !DILocation(line: 2788, column: 24, scope: !18946)
!18985 = !DILocation(line: 2779, column: 7, scope: !18715)
!18986 = !DILocation(line: 2789, column: 7, scope: !18987)
!18987 = distinct !DILexicalBlock(scope: !18946, file: !3, line: 2788, column: 41)
!18988 = !DILocation(line: 2790, column: 4, scope: !18987)
!18989 = !DILocation(line: 2793, column: 12, scope: !18715)
!18990 = !DILocation(line: 2794, column: 15, scope: !18715)
!18991 = !DILocation(line: 2794, column: 35, scope: !18715)
!18992 = !DILocation(line: 2794, column: 24, scope: !18715)
!18993 = !DILocation(line: 2794, column: 7, scope: !18715)
!18994 = !DILocation(line: 2795, column: 15, scope: !18715)
!18995 = !DILocation(line: 2795, column: 35, scope: !18715)
!18996 = !DILocation(line: 2795, column: 24, scope: !18715)
!18997 = !DILocation(line: 2795, column: 7, scope: !18715)
!18998 = !DILocation(line: 2794, column: 71, scope: !18715)
!18999 = !DILocation(line: 2796, column: 15, scope: !18715)
!19000 = !DILocation(line: 2796, column: 35, scope: !18715)
!19001 = !DILocation(line: 2796, column: 24, scope: !18715)
!19002 = !DILocation(line: 2796, column: 7, scope: !18715)
!19003 = !DILocation(line: 2795, column: 71, scope: !18715)
!19004 = !DILocation(line: 2797, column: 15, scope: !18715)
!19005 = !DILocation(line: 2797, column: 35, scope: !18715)
!19006 = !DILocation(line: 2797, column: 24, scope: !18715)
!19007 = !DILocation(line: 2797, column: 7, scope: !18715)
!19008 = !DILocation(line: 2796, column: 71, scope: !18715)
!19009 = !DILocation(line: 2798, column: 15, scope: !18715)
!19010 = !DILocation(line: 2798, column: 35, scope: !18715)
!19011 = !DILocation(line: 2798, column: 24, scope: !18715)
!19012 = !DILocation(line: 2798, column: 7, scope: !18715)
!19013 = !DILocation(line: 2797, column: 71, scope: !18715)
!19014 = !DILocation(line: 2799, column: 15, scope: !18715)
!19015 = !DILocation(line: 2799, column: 35, scope: !18715)
!19016 = !DILocation(line: 2799, column: 24, scope: !18715)
!19017 = !DILocation(line: 2799, column: 7, scope: !18715)
!19018 = !DILocation(line: 2798, column: 71, scope: !18715)
!19019 = !DILocation(line: 2800, column: 15, scope: !18715)
!19020 = !DILocation(line: 2800, column: 35, scope: !18715)
!19021 = !DILocation(line: 2800, column: 24, scope: !18715)
!19022 = !DILocation(line: 2800, column: 7, scope: !18715)
!19023 = !DILocation(line: 2799, column: 71, scope: !18715)
!19024 = !DILocation(line: 2801, column: 15, scope: !18715)
!19025 = !DILocation(line: 2801, column: 35, scope: !18715)
!19026 = !DILocation(line: 2801, column: 24, scope: !18715)
!19027 = !DILocation(line: 2801, column: 7, scope: !18715)
!19028 = !DILocation(line: 2800, column: 71, scope: !18715)
!19029 = !DILocation(line: 2802, column: 12, scope: !18715)
!19030 = !DILocation(line: 2802, column: 33, scope: !18715)
!19031 = !DILocation(line: 2802, column: 24, scope: !18715)
!19032 = !DILocation(line: 2802, column: 7, scope: !18715)
!19033 = !DILocation(line: 2801, column: 71, scope: !18715)
!19034 = !DILocation(line: 2803, column: 12, scope: !18715)
!19035 = !DILocation(line: 2803, column: 33, scope: !18715)
!19036 = !DILocation(line: 2803, column: 24, scope: !18715)
!19037 = !DILocation(line: 2803, column: 7, scope: !18715)
!19038 = !DILocation(line: 2802, column: 72, scope: !18715)
!19039 = !DILocation(line: 2793, column: 17, scope: !18715)
!19040 = !DILocation(line: 2793, column: 10, scope: !18715)
!19041 = !DILocation(line: 2804, column: 7, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !18715, file: !3, line: 2804, column: 7)
!19043 = !DILocation(line: 2804, column: 7, scope: !18715)
!19044 = !DILocation(line: 2805, column: 4, scope: !19042)
!19045 = !DILocation(line: 2807, column: 11, scope: !18715)
!19046 = !DILocation(line: 2808, column: 13, scope: !18715)
!19047 = !DILocation(line: 2764, column: 2, scope: !18716)
!19048 = distinct !{!19048, !19049, !19050}
!19049 = !DILocation(line: 2764, column: 2, scope: !18717)
!19050 = !DILocation(line: 2809, column: 2, scope: !18717)
!19051 = !DILocation(line: 2811, column: 21, scope: !18691)
!19052 = !DILocation(line: 2811, column: 27, scope: !18691)
!19053 = !DILocation(line: 2811, column: 2, scope: !18691)
!19054 = !DILocation(line: 2812, column: 2, scope: !18691)
!19055 = !DILocation(line: 2812, column: 2, scope: !18710)
!19056 = !DILocation(line: 2812, column: 2, scope: !18709)
!19057 = !DILocation(line: 2812, column: 2, scope: !19058)
!19058 = distinct !DILexicalBlock(scope: !18709, file: !3, line: 2812, column: 2)
!19059 = !DILocation(line: 2812, column: 2, scope: !18708)
!19060 = !{i32 -2139517056}
!19061 = !DILocation(line: 2815, column: 6, scope: !18697)
!19062 = !DILocation(line: 2815, column: 11, scope: !18697)
!19063 = !DILocation(line: 2815, column: 6, scope: !18691)
!19064 = !DILocation(line: 2816, column: 3, scope: !18696)
!19065 = !DILocation(line: 2816, column: 3, scope: !18705)
!19066 = !DILocalVariable(name: "__dummy", scope: !19067, file: !3, line: 2816, type: !312)
!19067 = distinct !DILexicalBlock(scope: !18704, file: !3, line: 2816, column: 3)
!19068 = !DILocation(line: 2816, column: 3, scope: !19067)
!19069 = !DILocalVariable(name: "__dummy2", scope: !19067, file: !3, line: 2816, type: !312)
!19070 = !DILocation(line: 2816, column: 3, scope: !18704)
!19071 = !DILocation(line: 2816, column: 3, scope: !18703)
!19072 = !DILocation(line: 2816, column: 3, scope: !19073)
!19073 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 2816, column: 3)
!19074 = !DILocalVariable(name: "__dummy", scope: !19075, file: !3, line: 2816, type: !312)
!19075 = distinct !DILexicalBlock(scope: !19076, file: !3, line: 2816, column: 3)
!19076 = distinct !DILexicalBlock(scope: !19073, file: !3, line: 2816, column: 3)
!19077 = !DILocation(line: 2816, column: 3, scope: !19075)
!19078 = !DILocalVariable(name: "__dummy2", scope: !19075, file: !3, line: 2816, type: !312)
!19079 = !DILocation(line: 2816, column: 3, scope: !19076)
!19080 = !DILocation(line: 2816, column: 3, scope: !18702)
!19081 = !{i32 -2139516139}
!19082 = !DILocation(line: 2816, column: 3, scope: !18701)
!19083 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !18700)
!19084 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !18700)
!19085 = !DILocation(line: 2817, column: 26, scope: !19086)
!19086 = distinct !DILexicalBlock(scope: !18696, file: !3, line: 2817, column: 7)
!19087 = !DILocation(line: 2817, column: 32, scope: !19086)
!19088 = !DILocation(line: 2817, column: 8, scope: !19086)
!19089 = !DILocation(line: 2817, column: 7, scope: !18696)
!19090 = !DILocation(line: 2819, column: 13, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19086, file: !3, line: 2817, column: 47)
!19092 = !DILocation(line: 2820, column: 31, scope: !19091)
!19093 = !DILocation(line: 2820, column: 22, scope: !19091)
!19094 = !DILocation(line: 2820, column: 42, scope: !19091)
!19095 = !DILocation(line: 2820, column: 5, scope: !19091)
!19096 = !DILocation(line: 2819, column: 4, scope: !19091)
!19097 = !DILocation(line: 2821, column: 3, scope: !19091)
!19098 = !DILocation(line: 2822, column: 27, scope: !18696)
!19099 = !DILocation(line: 2822, column: 33, scope: !18696)
!19100 = !DILocation(line: 2822, column: 38, scope: !18696)
!19101 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !18695)
!19102 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !18695)
!19103 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !18695)
!19104 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !18695)
!19105 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !18695)
!19106 = !DILocation(line: 2823, column: 2, scope: !18696)
!19107 = !DILocation(line: 2815, column: 61, scope: !18697)
!19108 = !DILabel(scope: !18691, name: "exit", file: !3, line: 2824)
!19109 = !DILocation(line: 2824, column: 1, scope: !18691)
!19110 = !DILocation(line: 2825, column: 6, scope: !19111)
!19111 = distinct !DILexicalBlock(scope: !18691, file: !3, line: 2825, column: 6)
!19112 = !DILocation(line: 2825, column: 9, scope: !19111)
!19113 = !DILocation(line: 2825, column: 6, scope: !18691)
!19114 = !DILocation(line: 2826, column: 8, scope: !19115)
!19115 = distinct !DILexicalBlock(scope: !19111, file: !3, line: 2826, column: 8)
!19116 = !DILocalVariable(name: "__ret_pu", scope: !19117, file: !3, line: 2826, type: !32)
!19117 = distinct !DILexicalBlock(scope: !19115, file: !3, line: 2826, column: 8)
!19118 = !DILocation(line: 2826, column: 8, scope: !19117)
!19119 = !DILocalVariable(name: "__ptr_pu", scope: !19117, file: !3, line: 2826, type: !591)
!19120 = !DILocalVariable(name: "__val_pu", scope: !19117, file: !3, line: 2826, type: !32)
!19121 = !{i32 -2139515692}
!19122 = !DILocation(line: 2826, column: 8, scope: !19111)
!19123 = !DILocation(line: 2826, column: 6, scope: !19111)
!19124 = !DILocation(line: 2826, column: 3, scope: !19111)
!19125 = !DILocation(line: 2827, column: 9, scope: !18691)
!19126 = !DILocation(line: 2827, column: 2, scope: !18691)
!19127 = !DILocation(line: 2828, column: 1, scope: !18691)
!19128 = distinct !DISubprogram(name: "modem_input_wait", scope: !3, file: !3, line: 3093, type: !19129, scopeLine: 3094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19129 = !DISubroutineType(types: !19130)
!19130 = !{!32, !7530, !32}
!19131 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19132)
!19132 = distinct !DILocation(line: 3139, column: 2, scope: !19133)
!19133 = distinct !DILexicalBlock(scope: !19134, file: !3, line: 3139, column: 2)
!19134 = distinct !DILexicalBlock(scope: !19135, file: !3, line: 3139, column: 2)
!19135 = distinct !DILexicalBlock(scope: !19128, file: !3, line: 3139, column: 2)
!19136 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19132)
!19137 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19132)
!19138 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19139)
!19139 = distinct !DILocation(line: 3118, column: 3, scope: !19140)
!19140 = distinct !DILexicalBlock(scope: !19141, file: !3, line: 3107, column: 10)
!19141 = distinct !DILexicalBlock(scope: !19142, file: !3, line: 3107, column: 2)
!19142 = distinct !DILexicalBlock(scope: !19128, file: !3, line: 3107, column: 2)
!19143 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19139)
!19144 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19145)
!19145 = distinct !DILocation(line: 3117, column: 3, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 3117, column: 3)
!19147 = distinct !DILexicalBlock(scope: !19148, file: !3, line: 3117, column: 3)
!19148 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 3117, column: 3)
!19149 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19145)
!19150 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19145)
!19151 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19152)
!19152 = distinct !DILocation(line: 3115, column: 3, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19154, file: !3, line: 3115, column: 3)
!19154 = distinct !DILexicalBlock(scope: !19155, file: !3, line: 3115, column: 3)
!19155 = distinct !DILexicalBlock(scope: !19156, file: !3, line: 3115, column: 3)
!19156 = distinct !DILexicalBlock(scope: !19157, file: !3, line: 3115, column: 3)
!19157 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 3115, column: 3)
!19158 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19159)
!19159 = distinct !DILocation(line: 3109, column: 22, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 3109, column: 7)
!19161 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19159)
!19162 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19159)
!19163 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19164)
!19164 = distinct !DILocation(line: 3105, column: 2, scope: !19128)
!19165 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19164)
!19166 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19167)
!19167 = distinct !DILocation(line: 3104, column: 2, scope: !19168)
!19168 = distinct !DILexicalBlock(scope: !19169, file: !3, line: 3104, column: 2)
!19169 = distinct !DILexicalBlock(scope: !19170, file: !3, line: 3104, column: 2)
!19170 = distinct !DILexicalBlock(scope: !19128, file: !3, line: 3104, column: 2)
!19171 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19167)
!19172 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19167)
!19173 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19174)
!19174 = distinct !DILocation(line: 3101, column: 2, scope: !19175)
!19175 = distinct !DILexicalBlock(scope: !19176, file: !3, line: 3101, column: 2)
!19176 = distinct !DILexicalBlock(scope: !19177, file: !3, line: 3101, column: 2)
!19177 = distinct !DILexicalBlock(scope: !19178, file: !3, line: 3101, column: 2)
!19178 = distinct !DILexicalBlock(scope: !19179, file: !3, line: 3101, column: 2)
!19179 = distinct !DILexicalBlock(scope: !19128, file: !3, line: 3101, column: 2)
!19180 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19181)
!19181 = distinct !DILocation(line: 3098, column: 2, scope: !19128)
!19182 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19181)
!19183 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19181)
!19184 = !DILocalVariable(name: "info", arg: 1, scope: !19128, file: !3, line: 3093, type: !7530)
!19185 = !DILocation(line: 3093, column: 47, scope: !19128)
!19186 = !DILocalVariable(name: "arg", arg: 2, scope: !19128, file: !3, line: 3093, type: !32)
!19187 = !DILocation(line: 3093, column: 56, scope: !19128)
!19188 = !DILocalVariable(name: "flags", scope: !19128, file: !3, line: 3095, type: !312)
!19189 = !DILocation(line: 3095, column: 17, scope: !19128)
!19190 = !DILocalVariable(name: "rc", scope: !19128, file: !3, line: 3096, type: !32)
!19191 = !DILocation(line: 3096, column: 6, scope: !19128)
!19192 = !DILocalVariable(name: "cprev", scope: !19128, file: !3, line: 3097, type: !7821)
!19193 = !DILocation(line: 3097, column: 21, scope: !19128)
!19194 = !DILocalVariable(name: "cnow", scope: !19128, file: !3, line: 3097, type: !7821)
!19195 = !DILocation(line: 3097, column: 28, scope: !19128)
!19196 = !DILocalVariable(name: "wait", scope: !19128, file: !3, line: 3098, type: !7864)
!19197 = !DILocation(line: 3098, column: 2, scope: !19128)
!19198 = !DILocation(line: 3101, column: 2, scope: !19128)
!19199 = !DILocation(line: 3101, column: 2, scope: !19179)
!19200 = !DILocalVariable(name: "__dummy", scope: !19201, file: !3, line: 3101, type: !312)
!19201 = distinct !DILexicalBlock(scope: !19178, file: !3, line: 3101, column: 2)
!19202 = !DILocation(line: 3101, column: 2, scope: !19201)
!19203 = !DILocalVariable(name: "__dummy2", scope: !19201, file: !3, line: 3101, type: !312)
!19204 = !DILocation(line: 3101, column: 2, scope: !19178)
!19205 = !DILocation(line: 3101, column: 2, scope: !19177)
!19206 = !DILocation(line: 3101, column: 2, scope: !19207)
!19207 = distinct !DILexicalBlock(scope: !19177, file: !3, line: 3101, column: 2)
!19208 = !DILocalVariable(name: "__dummy", scope: !19209, file: !3, line: 3101, type: !312)
!19209 = distinct !DILexicalBlock(scope: !19210, file: !3, line: 3101, column: 2)
!19210 = distinct !DILexicalBlock(scope: !19207, file: !3, line: 3101, column: 2)
!19211 = !DILocation(line: 3101, column: 2, scope: !19209)
!19212 = !DILocalVariable(name: "__dummy2", scope: !19209, file: !3, line: 3101, type: !312)
!19213 = !DILocation(line: 3101, column: 2, scope: !19210)
!19214 = !DILocation(line: 3101, column: 2, scope: !19176)
!19215 = !{i32 -2139500519}
!19216 = !DILocation(line: 3101, column: 2, scope: !19175)
!19217 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19174)
!19218 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19174)
!19219 = !DILocation(line: 3102, column: 10, scope: !19128)
!19220 = !DILocation(line: 3102, column: 16, scope: !19128)
!19221 = !DILocation(line: 3103, column: 18, scope: !19128)
!19222 = !DILocation(line: 3103, column: 24, scope: !19128)
!19223 = !DILocation(line: 3103, column: 2, scope: !19128)
!19224 = !DILocation(line: 3104, column: 2, scope: !19128)
!19225 = !DILocation(line: 3104, column: 2, scope: !19170)
!19226 = !DILocation(line: 3104, column: 2, scope: !19169)
!19227 = !DILocation(line: 3104, column: 2, scope: !19228)
!19228 = distinct !DILexicalBlock(scope: !19169, file: !3, line: 3104, column: 2)
!19229 = !DILocation(line: 3104, column: 2, scope: !19168)
!19230 = !{i32 -2139498748}
!19231 = !DILocation(line: 3105, column: 26, scope: !19128)
!19232 = !DILocation(line: 3105, column: 32, scope: !19128)
!19233 = !DILocation(line: 3105, column: 37, scope: !19128)
!19234 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19164)
!19235 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19164)
!19236 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19164)
!19237 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19164)
!19238 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19164)
!19239 = !DILocation(line: 3107, column: 2, scope: !19128)
!19240 = !DILocation(line: 3108, column: 3, scope: !19140)
!19241 = !DILocation(line: 3109, column: 7, scope: !19160)
!19242 = !DILocation(line: 3109, column: 7, scope: !19140)
!19243 = !DILocation(line: 3110, column: 7, scope: !19244)
!19244 = distinct !DILexicalBlock(scope: !19160, file: !3, line: 3109, column: 32)
!19245 = !DILocation(line: 3111, column: 4, scope: !19244)
!19246 = !DILocation(line: 3115, column: 3, scope: !19140)
!19247 = !DILocation(line: 3115, column: 3, scope: !19157)
!19248 = !DILocalVariable(name: "__dummy", scope: !19249, file: !3, line: 3115, type: !312)
!19249 = distinct !DILexicalBlock(scope: !19156, file: !3, line: 3115, column: 3)
!19250 = !DILocation(line: 3115, column: 3, scope: !19249)
!19251 = !DILocalVariable(name: "__dummy2", scope: !19249, file: !3, line: 3115, type: !312)
!19252 = !DILocation(line: 3115, column: 3, scope: !19156)
!19253 = !DILocation(line: 3115, column: 3, scope: !19155)
!19254 = !DILocation(line: 3115, column: 3, scope: !19255)
!19255 = distinct !DILexicalBlock(scope: !19155, file: !3, line: 3115, column: 3)
!19256 = !DILocalVariable(name: "__dummy", scope: !19257, file: !3, line: 3115, type: !312)
!19257 = distinct !DILexicalBlock(scope: !19258, file: !3, line: 3115, column: 3)
!19258 = distinct !DILexicalBlock(scope: !19255, file: !3, line: 3115, column: 3)
!19259 = !DILocation(line: 3115, column: 3, scope: !19257)
!19260 = !DILocalVariable(name: "__dummy2", scope: !19257, file: !3, line: 3115, type: !312)
!19261 = !DILocation(line: 3115, column: 3, scope: !19258)
!19262 = !DILocation(line: 3115, column: 3, scope: !19154)
!19263 = !{i32 -2139497827}
!19264 = !DILocation(line: 3115, column: 3, scope: !19153)
!19265 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19152)
!19266 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19152)
!19267 = !DILocation(line: 3116, column: 10, scope: !19140)
!19268 = !DILocation(line: 3116, column: 16, scope: !19140)
!19269 = !DILocation(line: 3117, column: 3, scope: !19140)
!19270 = !DILocation(line: 3117, column: 3, scope: !19148)
!19271 = !DILocation(line: 3117, column: 3, scope: !19147)
!19272 = !DILocation(line: 3117, column: 3, scope: !19273)
!19273 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 3117, column: 3)
!19274 = !DILocation(line: 3117, column: 3, scope: !19146)
!19275 = !{i32 -2139496056}
!19276 = !DILocation(line: 3118, column: 27, scope: !19140)
!19277 = !DILocation(line: 3118, column: 33, scope: !19140)
!19278 = !DILocation(line: 3118, column: 38, scope: !19140)
!19279 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19139)
!19280 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19139)
!19281 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19139)
!19282 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19139)
!19283 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19139)
!19284 = !DILocation(line: 3121, column: 12, scope: !19285)
!19285 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 3121, column: 7)
!19286 = !DILocation(line: 3121, column: 25, scope: !19285)
!19287 = !DILocation(line: 3121, column: 16, scope: !19285)
!19288 = !DILocation(line: 3121, column: 29, scope: !19285)
!19289 = !DILocation(line: 3121, column: 37, scope: !19285)
!19290 = !DILocation(line: 3121, column: 50, scope: !19285)
!19291 = !DILocation(line: 3121, column: 41, scope: !19285)
!19292 = !DILocation(line: 3121, column: 54, scope: !19285)
!19293 = !DILocation(line: 3122, column: 12, scope: !19285)
!19294 = !DILocation(line: 3122, column: 25, scope: !19285)
!19295 = !DILocation(line: 3122, column: 16, scope: !19285)
!19296 = !DILocation(line: 3122, column: 29, scope: !19285)
!19297 = !DILocation(line: 3122, column: 37, scope: !19285)
!19298 = !DILocation(line: 3122, column: 50, scope: !19285)
!19299 = !DILocation(line: 3122, column: 41, scope: !19285)
!19300 = !DILocation(line: 3121, column: 7, scope: !19140)
!19301 = !DILocation(line: 3123, column: 7, scope: !19302)
!19302 = distinct !DILexicalBlock(scope: !19285, file: !3, line: 3122, column: 55)
!19303 = !DILocation(line: 3124, column: 4, scope: !19302)
!19304 = !DILocation(line: 3128, column: 8, scope: !19305)
!19305 = distinct !DILexicalBlock(scope: !19140, file: !3, line: 3128, column: 7)
!19306 = !DILocation(line: 3128, column: 12, scope: !19305)
!19307 = !DILocation(line: 3128, column: 24, scope: !19305)
!19308 = !DILocation(line: 3128, column: 32, scope: !19305)
!19309 = !DILocation(line: 3128, column: 45, scope: !19305)
!19310 = !DILocation(line: 3128, column: 36, scope: !19305)
!19311 = !DILocation(line: 3128, column: 50, scope: !19305)
!19312 = !DILocation(line: 3129, column: 8, scope: !19305)
!19313 = !DILocation(line: 3129, column: 12, scope: !19305)
!19314 = !DILocation(line: 3129, column: 24, scope: !19305)
!19315 = !DILocation(line: 3129, column: 32, scope: !19305)
!19316 = !DILocation(line: 3129, column: 45, scope: !19305)
!19317 = !DILocation(line: 3129, column: 36, scope: !19305)
!19318 = !DILocation(line: 3129, column: 50, scope: !19305)
!19319 = !DILocation(line: 3130, column: 8, scope: !19305)
!19320 = !DILocation(line: 3130, column: 12, scope: !19305)
!19321 = !DILocation(line: 3130, column: 24, scope: !19305)
!19322 = !DILocation(line: 3130, column: 32, scope: !19305)
!19323 = !DILocation(line: 3130, column: 45, scope: !19305)
!19324 = !DILocation(line: 3130, column: 36, scope: !19305)
!19325 = !DILocation(line: 3130, column: 50, scope: !19305)
!19326 = !DILocation(line: 3131, column: 8, scope: !19305)
!19327 = !DILocation(line: 3131, column: 12, scope: !19305)
!19328 = !DILocation(line: 3131, column: 24, scope: !19305)
!19329 = !DILocation(line: 3131, column: 32, scope: !19305)
!19330 = !DILocation(line: 3131, column: 45, scope: !19305)
!19331 = !DILocation(line: 3131, column: 36, scope: !19305)
!19332 = !DILocation(line: 3128, column: 7, scope: !19140)
!19333 = !DILocation(line: 3132, column: 7, scope: !19334)
!19334 = distinct !DILexicalBlock(scope: !19305, file: !3, line: 3131, column: 51)
!19335 = !DILocation(line: 3133, column: 4, scope: !19334)
!19336 = !DILocation(line: 3136, column: 11, scope: !19140)
!19337 = !DILocation(line: 3107, column: 2, scope: !19141)
!19338 = distinct !{!19338, !19339, !19340}
!19339 = !DILocation(line: 3107, column: 2, scope: !19142)
!19340 = !DILocation(line: 3137, column: 2, scope: !19142)
!19341 = !DILocation(line: 3138, column: 21, scope: !19128)
!19342 = !DILocation(line: 3138, column: 27, scope: !19128)
!19343 = !DILocation(line: 3138, column: 2, scope: !19128)
!19344 = !DILocation(line: 3139, column: 2, scope: !19128)
!19345 = !DILocation(line: 3139, column: 2, scope: !19135)
!19346 = !DILocation(line: 3139, column: 2, scope: !19134)
!19347 = !DILocation(line: 3139, column: 2, scope: !19348)
!19348 = distinct !DILexicalBlock(scope: !19134, file: !3, line: 3139, column: 2)
!19349 = !DILocation(line: 3139, column: 2, scope: !19133)
!19350 = !{i32 -2139494365}
!19351 = !DILocation(line: 3140, column: 9, scope: !19128)
!19352 = !DILocation(line: 3140, column: 2, scope: !19128)
!19353 = distinct !DISubprogram(name: "set_gpio", scope: !3, file: !3, line: 2933, type: !19354, scopeLine: 2934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19354 = !DISubroutineType(types: !19355)
!19355 = !{!32, !7530, !19356}
!19356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19357, size: 64)
!19357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !7822, line: 231, size: 128, elements: !19358)
!19358 = !{!19359, !19360, !19361, !19362}
!19359 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !19357, file: !7822, line: 232, baseType: !493, size: 32)
!19360 = !DIDerivedType(tag: DW_TAG_member, name: "smask", scope: !19357, file: !7822, line: 233, baseType: !493, size: 32, offset: 32)
!19361 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !19357, file: !7822, line: 234, baseType: !493, size: 32, offset: 64)
!19362 = !DIDerivedType(tag: DW_TAG_member, name: "dmask", scope: !19357, file: !7822, line: 235, baseType: !493, size: 32, offset: 96)
!19363 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19364)
!19364 = distinct !DILocation(line: 2960, column: 2, scope: !19353)
!19365 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19364)
!19366 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19367)
!19367 = distinct !DILocation(line: 2947, column: 2, scope: !19368)
!19368 = distinct !DILexicalBlock(scope: !19369, file: !3, line: 2947, column: 2)
!19369 = distinct !DILexicalBlock(scope: !19370, file: !3, line: 2947, column: 2)
!19370 = distinct !DILexicalBlock(scope: !19371, file: !3, line: 2947, column: 2)
!19371 = distinct !DILexicalBlock(scope: !19372, file: !3, line: 2947, column: 2)
!19372 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2947, column: 2)
!19373 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !19374)
!19374 = distinct !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !19375)
!19375 = distinct !DILocation(line: 2941, column: 6, scope: !19376)
!19376 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2941, column: 6)
!19377 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !19374)
!19378 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !19374)
!19379 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !19374)
!19380 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !19374)
!19381 = !DILocation(line: 189, column: 22, scope: !12411, inlinedAt: !19375)
!19382 = !DILocation(line: 189, column: 45, scope: !12411, inlinedAt: !19375)
!19383 = !DILocation(line: 189, column: 65, scope: !12411, inlinedAt: !19375)
!19384 = !DILocalVariable(name: "info", arg: 1, scope: !19353, file: !3, line: 2933, type: !7530)
!19385 = !DILocation(line: 2933, column: 39, scope: !19353)
!19386 = !DILocalVariable(name: "user_gpio", arg: 2, scope: !19353, file: !3, line: 2933, type: !19356)
!19387 = !DILocation(line: 2933, column: 70, scope: !19353)
!19388 = !DILocalVariable(name: "flags", scope: !19353, file: !3, line: 2935, type: !312)
!19389 = !DILocation(line: 2935, column: 17, scope: !19353)
!19390 = !DILocalVariable(name: "gpio", scope: !19353, file: !3, line: 2936, type: !19357)
!19391 = !DILocation(line: 2936, column: 19, scope: !19353)
!19392 = !DILocalVariable(name: "data", scope: !19353, file: !3, line: 2937, type: !493)
!19393 = !DILocation(line: 2937, column: 8, scope: !19353)
!19394 = !DILocation(line: 2939, column: 7, scope: !19395)
!19395 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2939, column: 6)
!19396 = !DILocation(line: 2939, column: 13, scope: !19395)
!19397 = !DILocation(line: 2939, column: 6, scope: !19353)
!19398 = !DILocation(line: 2940, column: 3, scope: !19395)
!19399 = !DILocation(line: 2941, column: 21, scope: !19376)
!19400 = !DILocation(line: 2941, column: 28, scope: !19376)
!19401 = !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !19375)
!19402 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !19374)
!19403 = !DILocation(line: 0, scope: !12547, inlinedAt: !19374)
!19404 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !19374)
!19405 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !19374)
!19406 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !19374)
!19407 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !19374)
!19408 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !19374)
!19409 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !19374)
!19410 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !19374)
!19411 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !19374)
!19412 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !19374)
!19413 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !19374)
!19414 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !19374)
!19415 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !19374)
!19416 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !19374)
!19417 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !19374)
!19418 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !19374)
!19419 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !19374)
!19420 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !19374)
!19421 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !19374)
!19422 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !19374)
!19423 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !19374)
!19424 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !19374)
!19425 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !19374)
!19426 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !19374)
!19427 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !19374)
!19428 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !19374)
!19429 = !DILocation(line: 191, column: 6, scope: !12411, inlinedAt: !19375)
!19430 = !DILocation(line: 192, column: 23, scope: !12409, inlinedAt: !19375)
!19431 = !DILocation(line: 192, column: 27, scope: !12409, inlinedAt: !19375)
!19432 = !DILocation(line: 192, column: 33, scope: !12409, inlinedAt: !19375)
!19433 = !DILocation(line: 192, column: 7, scope: !12409, inlinedAt: !19375)
!19434 = !DILocation(line: 192, column: 5, scope: !12409, inlinedAt: !19375)
!19435 = !DILocation(line: 192, column: 3, scope: !12409, inlinedAt: !19375)
!19436 = !DILocation(line: 193, column: 9, scope: !12411, inlinedAt: !19375)
!19437 = !DILocation(line: 2941, column: 6, scope: !19376)
!19438 = !DILocation(line: 2941, column: 6, scope: !19353)
!19439 = !DILocation(line: 2942, column: 3, scope: !19376)
!19440 = !DILocation(line: 2943, column: 2, scope: !19441)
!19441 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2943, column: 2)
!19442 = !DILocation(line: 2943, column: 2, scope: !19353)
!19443 = !DILocation(line: 2947, column: 2, scope: !19353)
!19444 = !DILocation(line: 2947, column: 2, scope: !19372)
!19445 = !DILocalVariable(name: "__dummy", scope: !19446, file: !3, line: 2947, type: !312)
!19446 = distinct !DILexicalBlock(scope: !19371, file: !3, line: 2947, column: 2)
!19447 = !DILocation(line: 2947, column: 2, scope: !19446)
!19448 = !DILocalVariable(name: "__dummy2", scope: !19446, file: !3, line: 2947, type: !312)
!19449 = !DILocation(line: 2947, column: 2, scope: !19371)
!19450 = !DILocation(line: 2947, column: 2, scope: !19370)
!19451 = !DILocation(line: 2947, column: 2, scope: !19452)
!19452 = distinct !DILexicalBlock(scope: !19370, file: !3, line: 2947, column: 2)
!19453 = !DILocalVariable(name: "__dummy", scope: !19454, file: !3, line: 2947, type: !312)
!19454 = distinct !DILexicalBlock(scope: !19455, file: !3, line: 2947, column: 2)
!19455 = distinct !DILexicalBlock(scope: !19452, file: !3, line: 2947, column: 2)
!19456 = !DILocation(line: 2947, column: 2, scope: !19454)
!19457 = !DILocalVariable(name: "__dummy2", scope: !19454, file: !3, line: 2947, type: !312)
!19458 = !DILocation(line: 2947, column: 2, scope: !19455)
!19459 = !DILocation(line: 2947, column: 2, scope: !19369)
!19460 = !{i32 -2139508030}
!19461 = !DILocation(line: 2947, column: 2, scope: !19368)
!19462 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19367)
!19463 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19367)
!19464 = !DILocation(line: 2948, column: 11, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2948, column: 6)
!19466 = !DILocation(line: 2948, column: 6, scope: !19465)
!19467 = !DILocation(line: 2948, column: 6, scope: !19353)
!19468 = !DILocation(line: 2949, column: 19, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19465, file: !3, line: 2948, column: 18)
!19470 = !DILocation(line: 2949, column: 10, scope: !19469)
!19471 = !DILocation(line: 2949, column: 8, scope: !19469)
!19472 = !DILocation(line: 2950, column: 16, scope: !19469)
!19473 = !DILocation(line: 2950, column: 29, scope: !19469)
!19474 = !DILocation(line: 2950, column: 22, scope: !19469)
!19475 = !DILocation(line: 2950, column: 8, scope: !19469)
!19476 = !DILocation(line: 2951, column: 18, scope: !19469)
!19477 = !DILocation(line: 2951, column: 32, scope: !19469)
!19478 = !DILocation(line: 2951, column: 26, scope: !19469)
!19479 = !DILocation(line: 2951, column: 24, scope: !19469)
!19480 = !DILocation(line: 2951, column: 11, scope: !19469)
!19481 = !DILocation(line: 2951, column: 8, scope: !19469)
!19482 = !DILocation(line: 2952, column: 12, scope: !19469)
!19483 = !DILocation(line: 2952, column: 24, scope: !19469)
!19484 = !DILocation(line: 2952, column: 3, scope: !19469)
!19485 = !DILocation(line: 2953, column: 2, scope: !19469)
!19486 = !DILocation(line: 2954, column: 11, scope: !19487)
!19487 = distinct !DILexicalBlock(scope: !19353, file: !3, line: 2954, column: 6)
!19488 = !DILocation(line: 2954, column: 6, scope: !19487)
!19489 = !DILocation(line: 2954, column: 6, scope: !19353)
!19490 = !DILocation(line: 2955, column: 19, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19487, file: !3, line: 2954, column: 18)
!19492 = !DILocation(line: 2955, column: 10, scope: !19491)
!19493 = !DILocation(line: 2955, column: 8, scope: !19491)
!19494 = !DILocation(line: 2956, column: 16, scope: !19491)
!19495 = !DILocation(line: 2956, column: 29, scope: !19491)
!19496 = !DILocation(line: 2956, column: 22, scope: !19491)
!19497 = !DILocation(line: 2956, column: 8, scope: !19491)
!19498 = !DILocation(line: 2957, column: 18, scope: !19491)
!19499 = !DILocation(line: 2957, column: 32, scope: !19491)
!19500 = !DILocation(line: 2957, column: 26, scope: !19491)
!19501 = !DILocation(line: 2957, column: 24, scope: !19491)
!19502 = !DILocation(line: 2957, column: 11, scope: !19491)
!19503 = !DILocation(line: 2957, column: 8, scope: !19491)
!19504 = !DILocation(line: 2958, column: 12, scope: !19491)
!19505 = !DILocation(line: 2958, column: 24, scope: !19491)
!19506 = !DILocation(line: 2958, column: 3, scope: !19491)
!19507 = !DILocation(line: 2959, column: 2, scope: !19491)
!19508 = !DILocation(line: 2960, column: 26, scope: !19353)
!19509 = !DILocation(line: 2960, column: 32, scope: !19353)
!19510 = !DILocation(line: 2960, column: 47, scope: !19353)
!19511 = !DILocation(line: 2960, column: 53, scope: !19353)
!19512 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19364)
!19513 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19364)
!19514 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19364)
!19515 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19364)
!19516 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19364)
!19517 = !DILocation(line: 2962, column: 2, scope: !19353)
!19518 = !DILocation(line: 2963, column: 1, scope: !19353)
!19519 = distinct !DISubprogram(name: "get_gpio", scope: !3, file: !3, line: 2968, type: !19354, scopeLine: 2969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19520 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !19521)
!19521 = distinct !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !19522)
!19522 = distinct !DILocation(line: 2977, column: 6, scope: !19523)
!19523 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 2977, column: 6)
!19524 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !19521)
!19525 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !19521)
!19526 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !19521)
!19527 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !19521)
!19528 = !DILocation(line: 197, column: 27, scope: !12436, inlinedAt: !19522)
!19529 = !DILocation(line: 197, column: 43, scope: !12436, inlinedAt: !19522)
!19530 = !DILocation(line: 197, column: 63, scope: !12436, inlinedAt: !19522)
!19531 = !DILocalVariable(name: "info", arg: 1, scope: !19519, file: !3, line: 2968, type: !7530)
!19532 = !DILocation(line: 2968, column: 39, scope: !19519)
!19533 = !DILocalVariable(name: "user_gpio", arg: 2, scope: !19519, file: !3, line: 2968, type: !19356)
!19534 = !DILocation(line: 2968, column: 70, scope: !19519)
!19535 = !DILocalVariable(name: "gpio", scope: !19519, file: !3, line: 2970, type: !19357)
!19536 = !DILocation(line: 2970, column: 19, scope: !19519)
!19537 = !DILocation(line: 2971, column: 7, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 2971, column: 6)
!19539 = !DILocation(line: 2971, column: 13, scope: !19538)
!19540 = !DILocation(line: 2971, column: 6, scope: !19519)
!19541 = !DILocation(line: 2972, column: 3, scope: !19538)
!19542 = !DILocation(line: 2973, column: 24, scope: !19519)
!19543 = !DILocation(line: 2973, column: 15, scope: !19519)
!19544 = !DILocation(line: 2973, column: 7, scope: !19519)
!19545 = !DILocation(line: 2973, column: 13, scope: !19519)
!19546 = !DILocation(line: 2974, column: 7, scope: !19519)
!19547 = !DILocation(line: 2974, column: 13, scope: !19519)
!19548 = !DILocation(line: 2975, column: 24, scope: !19519)
!19549 = !DILocation(line: 2975, column: 15, scope: !19519)
!19550 = !DILocation(line: 2975, column: 7, scope: !19519)
!19551 = !DILocation(line: 2975, column: 13, scope: !19519)
!19552 = !DILocation(line: 2976, column: 7, scope: !19519)
!19553 = !DILocation(line: 2976, column: 13, scope: !19519)
!19554 = !DILocation(line: 2977, column: 19, scope: !19523)
!19555 = !DILocation(line: 2977, column: 30, scope: !19523)
!19556 = !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !19522)
!19557 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !19521)
!19558 = !DILocation(line: 0, scope: !12547, inlinedAt: !19521)
!19559 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !19521)
!19560 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !19521)
!19561 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !19521)
!19562 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !19521)
!19563 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !19521)
!19564 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !19521)
!19565 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !19521)
!19566 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !19521)
!19567 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !19521)
!19568 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !19521)
!19569 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !19521)
!19570 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !19521)
!19571 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !19521)
!19572 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !19521)
!19573 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !19521)
!19574 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !19521)
!19575 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !19521)
!19576 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !19521)
!19577 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !19521)
!19578 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !19521)
!19579 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !19521)
!19580 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !19521)
!19581 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !19521)
!19582 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !19521)
!19583 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !19521)
!19584 = !DILocation(line: 199, column: 6, scope: !12436, inlinedAt: !19522)
!19585 = !DILocation(line: 200, column: 21, scope: !12435, inlinedAt: !19522)
!19586 = !DILocation(line: 200, column: 25, scope: !12435, inlinedAt: !19522)
!19587 = !DILocation(line: 200, column: 31, scope: !12435, inlinedAt: !19522)
!19588 = !DILocation(line: 200, column: 7, scope: !12435, inlinedAt: !19522)
!19589 = !DILocation(line: 200, column: 5, scope: !12435, inlinedAt: !19522)
!19590 = !DILocation(line: 200, column: 3, scope: !12435, inlinedAt: !19522)
!19591 = !DILocation(line: 201, column: 9, scope: !12436, inlinedAt: !19522)
!19592 = !DILocation(line: 2977, column: 6, scope: !19523)
!19593 = !DILocation(line: 2977, column: 6, scope: !19519)
!19594 = !DILocation(line: 2978, column: 3, scope: !19523)
!19595 = !DILocation(line: 2979, column: 2, scope: !19596)
!19596 = distinct !DILexicalBlock(scope: !19519, file: !3, line: 2979, column: 2)
!19597 = !DILocation(line: 2979, column: 2, scope: !19519)
!19598 = !DILocation(line: 2981, column: 2, scope: !19519)
!19599 = !DILocation(line: 2982, column: 1, scope: !19519)
!19600 = distinct !DISubprogram(name: "wait_gpio", scope: !3, file: !3, line: 3042, type: !19354, scopeLine: 3043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19601 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !19602)
!19602 = distinct !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !19603)
!19603 = distinct !DILocation(line: 3088, column: 19, scope: !19604)
!19604 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3088, column: 6)
!19605 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !19602)
!19606 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !19602)
!19607 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !19602)
!19608 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !19602)
!19609 = !DILocation(line: 197, column: 27, scope: !12436, inlinedAt: !19603)
!19610 = !DILocation(line: 197, column: 43, scope: !12436, inlinedAt: !19603)
!19611 = !DILocation(line: 197, column: 63, scope: !12436, inlinedAt: !19603)
!19612 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19613)
!19613 = distinct !DILocation(line: 3086, column: 2, scope: !19600)
!19614 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19613)
!19615 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19616)
!19616 = distinct !DILocation(line: 3079, column: 3, scope: !19617)
!19617 = distinct !DILexicalBlock(scope: !19618, file: !3, line: 3079, column: 3)
!19618 = distinct !DILexicalBlock(scope: !19619, file: !3, line: 3079, column: 3)
!19619 = distinct !DILexicalBlock(scope: !19620, file: !3, line: 3079, column: 3)
!19620 = distinct !DILexicalBlock(scope: !19621, file: !3, line: 3079, column: 3)
!19621 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3079, column: 3)
!19622 = distinct !DILexicalBlock(scope: !19623, file: !3, line: 3070, column: 9)
!19623 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3067, column: 6)
!19624 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !19625)
!19625 = distinct !DILocation(line: 3075, column: 22, scope: !19626)
!19626 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3075, column: 7)
!19627 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !19625)
!19628 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !19625)
!19629 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19630)
!19630 = distinct !DILocation(line: 3073, column: 3, scope: !19622)
!19631 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19630)
!19632 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19633)
!19633 = distinct !DILocation(line: 3061, column: 2, scope: !19634)
!19634 = distinct !DILexicalBlock(scope: !19635, file: !3, line: 3061, column: 2)
!19635 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 3061, column: 2)
!19636 = distinct !DILexicalBlock(scope: !19637, file: !3, line: 3061, column: 2)
!19637 = distinct !DILexicalBlock(scope: !19638, file: !3, line: 3061, column: 2)
!19638 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3061, column: 2)
!19639 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !19640)
!19640 = distinct !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !19641)
!19641 = distinct !DILocation(line: 3052, column: 6, scope: !19642)
!19642 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3052, column: 6)
!19643 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !19640)
!19644 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !19640)
!19645 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !19640)
!19646 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !19640)
!19647 = !DILocation(line: 189, column: 22, scope: !12411, inlinedAt: !19641)
!19648 = !DILocation(line: 189, column: 45, scope: !12411, inlinedAt: !19641)
!19649 = !DILocation(line: 189, column: 65, scope: !12411, inlinedAt: !19641)
!19650 = !DILocalVariable(name: "info", arg: 1, scope: !19600, file: !3, line: 3042, type: !7530)
!19651 = !DILocation(line: 3042, column: 40, scope: !19600)
!19652 = !DILocalVariable(name: "user_gpio", arg: 2, scope: !19600, file: !3, line: 3042, type: !19356)
!19653 = !DILocation(line: 3042, column: 71, scope: !19600)
!19654 = !DILocalVariable(name: "flags", scope: !19600, file: !3, line: 3044, type: !312)
!19655 = !DILocation(line: 3044, column: 17, scope: !19600)
!19656 = !DILocalVariable(name: "rc", scope: !19600, file: !3, line: 3045, type: !32)
!19657 = !DILocation(line: 3045, column: 6, scope: !19600)
!19658 = !DILocalVariable(name: "gpio", scope: !19600, file: !3, line: 3046, type: !19357)
!19659 = !DILocation(line: 3046, column: 19, scope: !19600)
!19660 = !DILocalVariable(name: "wait", scope: !19600, file: !3, line: 3047, type: !7858)
!19661 = !DILocation(line: 3047, column: 19, scope: !19600)
!19662 = !DILocalVariable(name: "state", scope: !19600, file: !3, line: 3048, type: !987)
!19663 = !DILocation(line: 3048, column: 6, scope: !19600)
!19664 = !DILocation(line: 3050, column: 7, scope: !19665)
!19665 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3050, column: 6)
!19666 = !DILocation(line: 3050, column: 13, scope: !19665)
!19667 = !DILocation(line: 3050, column: 6, scope: !19600)
!19668 = !DILocation(line: 3051, column: 3, scope: !19665)
!19669 = !DILocation(line: 3052, column: 21, scope: !19642)
!19670 = !DILocation(line: 3052, column: 28, scope: !19642)
!19671 = !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !19641)
!19672 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !19640)
!19673 = !DILocation(line: 0, scope: !12547, inlinedAt: !19640)
!19674 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !19640)
!19675 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !19640)
!19676 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !19640)
!19677 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !19640)
!19678 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !19640)
!19679 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !19640)
!19680 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !19640)
!19681 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !19640)
!19682 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !19640)
!19683 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !19640)
!19684 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !19640)
!19685 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !19640)
!19686 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !19640)
!19687 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !19640)
!19688 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !19640)
!19689 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !19640)
!19690 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !19640)
!19691 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !19640)
!19692 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !19640)
!19693 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !19640)
!19694 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !19640)
!19695 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !19640)
!19696 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !19640)
!19697 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !19640)
!19698 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !19640)
!19699 = !DILocation(line: 191, column: 6, scope: !12411, inlinedAt: !19641)
!19700 = !DILocation(line: 192, column: 23, scope: !12409, inlinedAt: !19641)
!19701 = !DILocation(line: 192, column: 27, scope: !12409, inlinedAt: !19641)
!19702 = !DILocation(line: 192, column: 33, scope: !12409, inlinedAt: !19641)
!19703 = !DILocation(line: 192, column: 7, scope: !12409, inlinedAt: !19641)
!19704 = !DILocation(line: 192, column: 5, scope: !12409, inlinedAt: !19641)
!19705 = !DILocation(line: 192, column: 3, scope: !12409, inlinedAt: !19641)
!19706 = !DILocation(line: 193, column: 9, scope: !12411, inlinedAt: !19641)
!19707 = !DILocation(line: 3052, column: 6, scope: !19642)
!19708 = !DILocation(line: 3052, column: 6, scope: !19600)
!19709 = !DILocation(line: 3053, column: 3, scope: !19642)
!19710 = !DILocation(line: 3054, column: 2, scope: !19711)
!19711 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3054, column: 2)
!19712 = !DILocation(line: 3054, column: 2, scope: !19600)
!19713 = !DILocation(line: 3057, column: 31, scope: !19714)
!19714 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3057, column: 6)
!19715 = !DILocation(line: 3057, column: 22, scope: !19714)
!19716 = !DILocation(line: 3057, column: 21, scope: !19714)
!19717 = !DILocation(line: 3057, column: 12, scope: !19714)
!19718 = !DILocation(line: 3057, column: 18, scope: !19714)
!19719 = !DILocation(line: 3057, column: 44, scope: !19714)
!19720 = !DILocation(line: 3057, column: 6, scope: !19600)
!19721 = !DILocation(line: 3058, column: 3, scope: !19714)
!19722 = !DILocation(line: 3059, column: 29, scope: !19600)
!19723 = !DILocation(line: 3059, column: 2, scope: !19600)
!19724 = !DILocation(line: 3061, column: 2, scope: !19600)
!19725 = !DILocation(line: 3061, column: 2, scope: !19638)
!19726 = !DILocalVariable(name: "__dummy", scope: !19727, file: !3, line: 3061, type: !312)
!19727 = distinct !DILexicalBlock(scope: !19637, file: !3, line: 3061, column: 2)
!19728 = !DILocation(line: 3061, column: 2, scope: !19727)
!19729 = !DILocalVariable(name: "__dummy2", scope: !19727, file: !3, line: 3061, type: !312)
!19730 = !DILocation(line: 3061, column: 2, scope: !19637)
!19731 = !DILocation(line: 3061, column: 2, scope: !19636)
!19732 = !DILocation(line: 3061, column: 2, scope: !19733)
!19733 = distinct !DILexicalBlock(scope: !19636, file: !3, line: 3061, column: 2)
!19734 = !DILocalVariable(name: "__dummy", scope: !19735, file: !3, line: 3061, type: !312)
!19735 = distinct !DILexicalBlock(scope: !19736, file: !3, line: 3061, column: 2)
!19736 = distinct !DILexicalBlock(scope: !19733, file: !3, line: 3061, column: 2)
!19737 = !DILocation(line: 3061, column: 2, scope: !19735)
!19738 = !DILocalVariable(name: "__dummy2", scope: !19735, file: !3, line: 3061, type: !312)
!19739 = !DILocation(line: 3061, column: 2, scope: !19736)
!19740 = !DILocation(line: 3061, column: 2, scope: !19635)
!19741 = !{i32 -2139502986}
!19742 = !DILocation(line: 3061, column: 2, scope: !19634)
!19743 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19633)
!19744 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19633)
!19745 = !DILocation(line: 3063, column: 11, scope: !19600)
!19746 = !DILocation(line: 3063, column: 32, scope: !19600)
!19747 = !DILocation(line: 3063, column: 23, scope: !19600)
!19748 = !DILocation(line: 3063, column: 51, scope: !19600)
!19749 = !DILocation(line: 3063, column: 44, scope: !19600)
!19750 = !DILocation(line: 3063, column: 2, scope: !19600)
!19751 = !DILocation(line: 3065, column: 19, scope: !19600)
!19752 = !DILocation(line: 3065, column: 10, scope: !19600)
!19753 = !DILocation(line: 3065, column: 8, scope: !19600)
!19754 = !DILocation(line: 3067, column: 11, scope: !19623)
!19755 = !DILocation(line: 3067, column: 21, scope: !19623)
!19756 = !DILocation(line: 3067, column: 34, scope: !19623)
!19757 = !DILocation(line: 3067, column: 27, scope: !19623)
!19758 = !DILocation(line: 3067, column: 19, scope: !19623)
!19759 = !DILocation(line: 3067, column: 17, scope: !19623)
!19760 = !DILocation(line: 3067, column: 6, scope: !19600)
!19761 = !DILocation(line: 3069, column: 16, scope: !19762)
!19762 = distinct !DILexicalBlock(scope: !19623, file: !3, line: 3067, column: 42)
!19763 = !DILocation(line: 3069, column: 8, scope: !19762)
!19764 = !DILocation(line: 3069, column: 14, scope: !19762)
!19765 = !DILocation(line: 3070, column: 2, scope: !19762)
!19766 = !DILocation(line: 3072, column: 18, scope: !19622)
!19767 = !DILocation(line: 3072, column: 24, scope: !19622)
!19768 = !DILocation(line: 3072, column: 3, scope: !19622)
!19769 = !DILocation(line: 3073, column: 27, scope: !19622)
!19770 = !DILocation(line: 3073, column: 33, scope: !19622)
!19771 = !DILocation(line: 3073, column: 48, scope: !19622)
!19772 = !DILocation(line: 3073, column: 54, scope: !19622)
!19773 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19630)
!19774 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19630)
!19775 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19630)
!19776 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19630)
!19777 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19630)
!19778 = !DILocation(line: 3074, column: 3, scope: !19622)
!19779 = !DILocation(line: 3075, column: 7, scope: !19626)
!19780 = !DILocation(line: 3075, column: 7, scope: !19622)
!19781 = !DILocation(line: 3076, column: 7, scope: !19626)
!19782 = !DILocation(line: 3076, column: 4, scope: !19626)
!19783 = !DILocation(line: 3078, column: 22, scope: !19626)
!19784 = !DILocation(line: 3078, column: 9, scope: !19626)
!19785 = !DILocation(line: 3078, column: 15, scope: !19626)
!19786 = !DILocation(line: 3079, column: 3, scope: !19622)
!19787 = !DILocation(line: 3079, column: 3, scope: !19621)
!19788 = !DILocalVariable(name: "__dummy", scope: !19789, file: !3, line: 3079, type: !312)
!19789 = distinct !DILexicalBlock(scope: !19620, file: !3, line: 3079, column: 3)
!19790 = !DILocation(line: 3079, column: 3, scope: !19789)
!19791 = !DILocalVariable(name: "__dummy2", scope: !19789, file: !3, line: 3079, type: !312)
!19792 = !DILocation(line: 3079, column: 3, scope: !19620)
!19793 = !DILocation(line: 3079, column: 3, scope: !19619)
!19794 = !DILocation(line: 3079, column: 3, scope: !19795)
!19795 = distinct !DILexicalBlock(scope: !19619, file: !3, line: 3079, column: 3)
!19796 = !DILocalVariable(name: "__dummy", scope: !19797, file: !3, line: 3079, type: !312)
!19797 = distinct !DILexicalBlock(scope: !19798, file: !3, line: 3079, column: 3)
!19798 = distinct !DILexicalBlock(scope: !19795, file: !3, line: 3079, column: 3)
!19799 = !DILocation(line: 3079, column: 3, scope: !19797)
!19800 = !DILocalVariable(name: "__dummy2", scope: !19797, file: !3, line: 3079, type: !312)
!19801 = !DILocation(line: 3079, column: 3, scope: !19798)
!19802 = !DILocation(line: 3079, column: 3, scope: !19618)
!19803 = !{i32 -2139501829}
!19804 = !DILocation(line: 3079, column: 3, scope: !19617)
!19805 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19616)
!19806 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19616)
!19807 = !DILocation(line: 3080, column: 21, scope: !19622)
!19808 = !DILocation(line: 3080, column: 27, scope: !19622)
!19809 = !DILocation(line: 3080, column: 3, scope: !19622)
!19810 = !DILocation(line: 3084, column: 6, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19600, file: !3, line: 3084, column: 6)
!19812 = !DILocation(line: 3084, column: 12, scope: !19811)
!19813 = !DILocation(line: 3084, column: 24, scope: !19811)
!19814 = !DILocation(line: 3084, column: 6, scope: !19600)
!19815 = !DILocation(line: 3085, column: 12, scope: !19811)
!19816 = !DILocation(line: 3085, column: 3, scope: !19811)
!19817 = !DILocation(line: 3086, column: 26, scope: !19600)
!19818 = !DILocation(line: 3086, column: 32, scope: !19600)
!19819 = !DILocation(line: 3086, column: 47, scope: !19600)
!19820 = !DILocation(line: 3086, column: 53, scope: !19600)
!19821 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19613)
!19822 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19613)
!19823 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19613)
!19824 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19613)
!19825 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19613)
!19826 = !DILocation(line: 3088, column: 7, scope: !19604)
!19827 = !DILocation(line: 3088, column: 10, scope: !19604)
!19828 = !DILocation(line: 3088, column: 16, scope: !19604)
!19829 = !DILocation(line: 3088, column: 32, scope: !19604)
!19830 = !DILocation(line: 3088, column: 43, scope: !19604)
!19831 = !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !19603)
!19832 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !19602)
!19833 = !DILocation(line: 0, scope: !12547, inlinedAt: !19602)
!19834 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !19602)
!19835 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !19602)
!19836 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !19602)
!19837 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !19602)
!19838 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !19602)
!19839 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !19602)
!19840 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !19602)
!19841 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !19602)
!19842 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !19602)
!19843 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !19602)
!19844 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !19602)
!19845 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !19602)
!19846 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !19602)
!19847 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !19602)
!19848 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !19602)
!19849 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !19602)
!19850 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !19602)
!19851 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !19602)
!19852 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !19602)
!19853 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !19602)
!19854 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !19602)
!19855 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !19602)
!19856 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !19602)
!19857 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !19602)
!19858 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !19602)
!19859 = !DILocation(line: 199, column: 6, scope: !12436, inlinedAt: !19603)
!19860 = !DILocation(line: 200, column: 21, scope: !12435, inlinedAt: !19603)
!19861 = !DILocation(line: 200, column: 25, scope: !12435, inlinedAt: !19603)
!19862 = !DILocation(line: 200, column: 31, scope: !12435, inlinedAt: !19603)
!19863 = !DILocation(line: 200, column: 7, scope: !12435, inlinedAt: !19603)
!19864 = !DILocation(line: 200, column: 5, scope: !12435, inlinedAt: !19603)
!19865 = !DILocation(line: 200, column: 3, scope: !12435, inlinedAt: !19603)
!19866 = !DILocation(line: 201, column: 9, scope: !12436, inlinedAt: !19603)
!19867 = !DILocation(line: 3088, column: 19, scope: !19604)
!19868 = !DILocation(line: 3088, column: 6, scope: !19600)
!19869 = !DILocation(line: 3089, column: 6, scope: !19604)
!19870 = !DILocation(line: 3089, column: 3, scope: !19604)
!19871 = !DILocation(line: 3090, column: 9, scope: !19600)
!19872 = !DILocation(line: 3090, column: 2, scope: !19600)
!19873 = !DILocation(line: 3091, column: 1, scope: !19600)
!19874 = distinct !DISubprogram(name: "get_xsync", scope: !3, file: !3, line: 2861, type: !18692, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19875 = !DILocalVariable(name: "info", arg: 1, scope: !19874, file: !3, line: 2861, type: !7530)
!19876 = !DILocation(line: 2861, column: 40, scope: !19874)
!19877 = !DILocalVariable(name: "xsync", arg: 2, scope: !19874, file: !3, line: 2861, type: !1001)
!19878 = !DILocation(line: 2861, column: 58, scope: !19874)
!19879 = !DILocation(line: 2863, column: 2, scope: !19880)
!19880 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 2863, column: 2)
!19881 = !DILocation(line: 2863, column: 2, scope: !19874)
!19882 = !DILocation(line: 2864, column: 6, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19884, file: !3, line: 2864, column: 6)
!19884 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 2864, column: 6)
!19885 = !DILocalVariable(name: "__ret_pu", scope: !19886, file: !3, line: 2864, type: !32)
!19886 = distinct !DILexicalBlock(scope: !19883, file: !3, line: 2864, column: 6)
!19887 = !DILocation(line: 2864, column: 6, scope: !19886)
!19888 = !DILocalVariable(name: "__ptr_pu", scope: !19886, file: !3, line: 2864, type: !591)
!19889 = !DILocalVariable(name: "__val_pu", scope: !19886, file: !3, line: 2864, type: !32)
!19890 = !{i32 -2139512771}
!19891 = !DILocation(line: 2864, column: 6, scope: !19884)
!19892 = !DILocation(line: 2864, column: 6, scope: !19874)
!19893 = !DILocation(line: 2865, column: 3, scope: !19884)
!19894 = !DILocation(line: 2866, column: 2, scope: !19874)
!19895 = !DILocation(line: 2867, column: 1, scope: !19874)
!19896 = distinct !DISubprogram(name: "set_xsync", scope: !3, file: !3, line: 2875, type: !19129, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19897 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19898)
!19898 = distinct !DILocation(line: 2883, column: 2, scope: !19896)
!19899 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19898)
!19900 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19901)
!19901 = distinct !DILocation(line: 2880, column: 2, scope: !19902)
!19902 = distinct !DILexicalBlock(scope: !19903, file: !3, line: 2880, column: 2)
!19903 = distinct !DILexicalBlock(scope: !19904, file: !3, line: 2880, column: 2)
!19904 = distinct !DILexicalBlock(scope: !19905, file: !3, line: 2880, column: 2)
!19905 = distinct !DILexicalBlock(scope: !19906, file: !3, line: 2880, column: 2)
!19906 = distinct !DILexicalBlock(scope: !19896, file: !3, line: 2880, column: 2)
!19907 = !DILocalVariable(name: "info", arg: 1, scope: !19896, file: !3, line: 2875, type: !7530)
!19908 = !DILocation(line: 2875, column: 40, scope: !19896)
!19909 = !DILocalVariable(name: "xsync", arg: 2, scope: !19896, file: !3, line: 2875, type: !32)
!19910 = !DILocation(line: 2875, column: 50, scope: !19896)
!19911 = !DILocalVariable(name: "flags", scope: !19896, file: !3, line: 2877, type: !312)
!19912 = !DILocation(line: 2877, column: 16, scope: !19896)
!19913 = !DILocation(line: 2879, column: 2, scope: !19914)
!19914 = distinct !DILexicalBlock(scope: !19896, file: !3, line: 2879, column: 2)
!19915 = !DILocation(line: 2879, column: 2, scope: !19896)
!19916 = !DILocation(line: 2880, column: 2, scope: !19896)
!19917 = !DILocation(line: 2880, column: 2, scope: !19906)
!19918 = !DILocalVariable(name: "__dummy", scope: !19919, file: !3, line: 2880, type: !312)
!19919 = distinct !DILexicalBlock(scope: !19905, file: !3, line: 2880, column: 2)
!19920 = !DILocation(line: 2880, column: 2, scope: !19919)
!19921 = !DILocalVariable(name: "__dummy2", scope: !19919, file: !3, line: 2880, type: !312)
!19922 = !DILocation(line: 2880, column: 2, scope: !19905)
!19923 = !DILocation(line: 2880, column: 2, scope: !19904)
!19924 = !DILocation(line: 2880, column: 2, scope: !19925)
!19925 = distinct !DILexicalBlock(scope: !19904, file: !3, line: 2880, column: 2)
!19926 = !DILocalVariable(name: "__dummy", scope: !19927, file: !3, line: 2880, type: !312)
!19927 = distinct !DILexicalBlock(scope: !19928, file: !3, line: 2880, column: 2)
!19928 = distinct !DILexicalBlock(scope: !19925, file: !3, line: 2880, column: 2)
!19929 = !DILocation(line: 2880, column: 2, scope: !19927)
!19930 = !DILocalVariable(name: "__dummy2", scope: !19927, file: !3, line: 2880, type: !312)
!19931 = !DILocation(line: 2880, column: 2, scope: !19928)
!19932 = !DILocation(line: 2880, column: 2, scope: !19903)
!19933 = !{i32 -2139511312}
!19934 = !DILocation(line: 2880, column: 2, scope: !19902)
!19935 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19901)
!19936 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19901)
!19937 = !DILocation(line: 2881, column: 16, scope: !19896)
!19938 = !DILocation(line: 2881, column: 2, scope: !19896)
!19939 = !DILocation(line: 2881, column: 8, scope: !19896)
!19940 = !DILocation(line: 2881, column: 14, scope: !19896)
!19941 = !DILocation(line: 2882, column: 11, scope: !19896)
!19942 = !DILocation(line: 2882, column: 22, scope: !19896)
!19943 = !DILocation(line: 2882, column: 2, scope: !19896)
!19944 = !DILocation(line: 2883, column: 26, scope: !19896)
!19945 = !DILocation(line: 2883, column: 32, scope: !19896)
!19946 = !DILocation(line: 2883, column: 38, scope: !19896)
!19947 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19898)
!19948 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19898)
!19949 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19898)
!19950 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19898)
!19951 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19898)
!19952 = !DILocation(line: 2884, column: 2, scope: !19896)
!19953 = distinct !DISubprogram(name: "get_xctrl", scope: !3, file: !3, line: 2887, type: !18692, scopeLine: 2888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19954 = !DILocalVariable(name: "info", arg: 1, scope: !19953, file: !3, line: 2887, type: !7530)
!19955 = !DILocation(line: 2887, column: 40, scope: !19953)
!19956 = !DILocalVariable(name: "xctrl", arg: 2, scope: !19953, file: !3, line: 2887, type: !1001)
!19957 = !DILocation(line: 2887, column: 58, scope: !19953)
!19958 = !DILocation(line: 2889, column: 2, scope: !19959)
!19959 = distinct !DILexicalBlock(scope: !19953, file: !3, line: 2889, column: 2)
!19960 = !DILocation(line: 2889, column: 2, scope: !19953)
!19961 = !DILocation(line: 2890, column: 6, scope: !19962)
!19962 = distinct !DILexicalBlock(scope: !19963, file: !3, line: 2890, column: 6)
!19963 = distinct !DILexicalBlock(scope: !19953, file: !3, line: 2890, column: 6)
!19964 = !DILocalVariable(name: "__ret_pu", scope: !19965, file: !3, line: 2890, type: !32)
!19965 = distinct !DILexicalBlock(scope: !19962, file: !3, line: 2890, column: 6)
!19966 = !DILocation(line: 2890, column: 6, scope: !19965)
!19967 = !DILocalVariable(name: "__ptr_pu", scope: !19965, file: !3, line: 2890, type: !591)
!19968 = !DILocalVariable(name: "__val_pu", scope: !19965, file: !3, line: 2890, type: !32)
!19969 = !{i32 -2139510776}
!19970 = !DILocation(line: 2890, column: 6, scope: !19963)
!19971 = !DILocation(line: 2890, column: 6, scope: !19953)
!19972 = !DILocation(line: 2891, column: 3, scope: !19963)
!19973 = !DILocation(line: 2892, column: 2, scope: !19953)
!19974 = !DILocation(line: 2893, column: 1, scope: !19953)
!19975 = distinct !DISubprogram(name: "set_xctrl", scope: !3, file: !3, line: 2912, type: !19129, scopeLine: 2913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!19976 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !19977)
!19977 = distinct !DILocation(line: 2920, column: 2, scope: !19975)
!19978 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !19977)
!19979 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !19980)
!19980 = distinct !DILocation(line: 2917, column: 2, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19982, file: !3, line: 2917, column: 2)
!19982 = distinct !DILexicalBlock(scope: !19983, file: !3, line: 2917, column: 2)
!19983 = distinct !DILexicalBlock(scope: !19984, file: !3, line: 2917, column: 2)
!19984 = distinct !DILexicalBlock(scope: !19985, file: !3, line: 2917, column: 2)
!19985 = distinct !DILexicalBlock(scope: !19975, file: !3, line: 2917, column: 2)
!19986 = !DILocalVariable(name: "info", arg: 1, scope: !19975, file: !3, line: 2912, type: !7530)
!19987 = !DILocation(line: 2912, column: 40, scope: !19975)
!19988 = !DILocalVariable(name: "xctrl", arg: 2, scope: !19975, file: !3, line: 2912, type: !32)
!19989 = !DILocation(line: 2912, column: 50, scope: !19975)
!19990 = !DILocalVariable(name: "flags", scope: !19975, file: !3, line: 2914, type: !312)
!19991 = !DILocation(line: 2914, column: 16, scope: !19975)
!19992 = !DILocation(line: 2916, column: 2, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19975, file: !3, line: 2916, column: 2)
!19994 = !DILocation(line: 2916, column: 2, scope: !19975)
!19995 = !DILocation(line: 2917, column: 2, scope: !19975)
!19996 = !DILocation(line: 2917, column: 2, scope: !19985)
!19997 = !DILocalVariable(name: "__dummy", scope: !19998, file: !3, line: 2917, type: !312)
!19998 = distinct !DILexicalBlock(scope: !19984, file: !3, line: 2917, column: 2)
!19999 = !DILocation(line: 2917, column: 2, scope: !19998)
!20000 = !DILocalVariable(name: "__dummy2", scope: !19998, file: !3, line: 2917, type: !312)
!20001 = !DILocation(line: 2917, column: 2, scope: !19984)
!20002 = !DILocation(line: 2917, column: 2, scope: !19983)
!20003 = !DILocation(line: 2917, column: 2, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !19983, file: !3, line: 2917, column: 2)
!20005 = !DILocalVariable(name: "__dummy", scope: !20006, file: !3, line: 2917, type: !312)
!20006 = distinct !DILexicalBlock(scope: !20007, file: !3, line: 2917, column: 2)
!20007 = distinct !DILexicalBlock(scope: !20004, file: !3, line: 2917, column: 2)
!20008 = !DILocation(line: 2917, column: 2, scope: !20006)
!20009 = !DILocalVariable(name: "__dummy2", scope: !20006, file: !3, line: 2917, type: !312)
!20010 = !DILocation(line: 2917, column: 2, scope: !20007)
!20011 = !DILocation(line: 2917, column: 2, scope: !19982)
!20012 = !{i32 -2139509317}
!20013 = !DILocation(line: 2917, column: 2, scope: !19981)
!20014 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !19980)
!20015 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !19980)
!20016 = !DILocation(line: 2918, column: 16, scope: !19975)
!20017 = !DILocation(line: 2918, column: 2, scope: !19975)
!20018 = !DILocation(line: 2918, column: 8, scope: !19975)
!20019 = !DILocation(line: 2918, column: 14, scope: !19975)
!20020 = !DILocation(line: 2919, column: 11, scope: !19975)
!20021 = !DILocation(line: 2919, column: 22, scope: !19975)
!20022 = !DILocation(line: 2919, column: 2, scope: !19975)
!20023 = !DILocation(line: 2920, column: 26, scope: !19975)
!20024 = !DILocation(line: 2920, column: 32, scope: !19975)
!20025 = !DILocation(line: 2920, column: 38, scope: !19975)
!20026 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !19977)
!20027 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !19977)
!20028 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !19977)
!20029 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !19977)
!20030 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !19977)
!20031 = !DILocation(line: 2921, column: 2, scope: !19975)
!20032 = distinct !DISubprogram(name: "get_params", scope: !3, file: !3, line: 2588, type: !20033, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20033 = !DISubroutineType(types: !20034)
!20034 = !{!32, !7530, !20035}
!20035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7891, size: 64)
!20036 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !20037)
!20037 = distinct !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !20038)
!20038 = distinct !DILocation(line: 2591, column: 6, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !20032, file: !3, line: 2591, column: 6)
!20040 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !20037)
!20041 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !20037)
!20042 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !20037)
!20043 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !20037)
!20044 = !DILocation(line: 197, column: 27, scope: !12436, inlinedAt: !20038)
!20045 = !DILocation(line: 197, column: 43, scope: !12436, inlinedAt: !20038)
!20046 = !DILocation(line: 197, column: 63, scope: !12436, inlinedAt: !20038)
!20047 = !DILocalVariable(name: "info", arg: 1, scope: !20032, file: !3, line: 2588, type: !7530)
!20048 = !DILocation(line: 2588, column: 41, scope: !20032)
!20049 = !DILocalVariable(name: "user_params", arg: 2, scope: !20032, file: !3, line: 2588, type: !20035)
!20050 = !DILocation(line: 2588, column: 67, scope: !20032)
!20051 = !DILocation(line: 2590, column: 2, scope: !20052)
!20052 = distinct !DILexicalBlock(scope: !20032, file: !3, line: 2590, column: 2)
!20053 = !DILocation(line: 2590, column: 2, scope: !20032)
!20054 = !DILocation(line: 2591, column: 19, scope: !20039)
!20055 = !DILocation(line: 2591, column: 33, scope: !20039)
!20056 = !DILocation(line: 2591, column: 39, scope: !20039)
!20057 = !DILocation(line: 2591, column: 32, scope: !20039)
!20058 = !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !20038)
!20059 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !20037)
!20060 = !DILocation(line: 0, scope: !12547, inlinedAt: !20037)
!20061 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !20037)
!20062 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !20037)
!20063 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !20037)
!20064 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !20037)
!20065 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !20037)
!20066 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !20037)
!20067 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !20037)
!20068 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !20037)
!20069 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !20037)
!20070 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !20037)
!20071 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !20037)
!20072 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !20037)
!20073 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !20037)
!20074 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !20037)
!20075 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !20037)
!20076 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !20037)
!20077 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !20037)
!20078 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !20037)
!20079 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !20037)
!20080 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !20037)
!20081 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !20037)
!20082 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !20037)
!20083 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !20037)
!20084 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !20037)
!20085 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !20037)
!20086 = !DILocation(line: 199, column: 6, scope: !12436, inlinedAt: !20038)
!20087 = !DILocation(line: 200, column: 21, scope: !12435, inlinedAt: !20038)
!20088 = !DILocation(line: 200, column: 25, scope: !12435, inlinedAt: !20038)
!20089 = !DILocation(line: 200, column: 31, scope: !12435, inlinedAt: !20038)
!20090 = !DILocation(line: 200, column: 7, scope: !12435, inlinedAt: !20038)
!20091 = !DILocation(line: 200, column: 5, scope: !12435, inlinedAt: !20038)
!20092 = !DILocation(line: 200, column: 3, scope: !12435, inlinedAt: !20038)
!20093 = !DILocation(line: 201, column: 9, scope: !12436, inlinedAt: !20038)
!20094 = !DILocation(line: 2591, column: 6, scope: !20039)
!20095 = !DILocation(line: 2591, column: 6, scope: !20032)
!20096 = !DILocation(line: 2592, column: 3, scope: !20039)
!20097 = !DILocation(line: 2593, column: 2, scope: !20032)
!20098 = !DILocation(line: 2594, column: 1, scope: !20032)
!20099 = distinct !DISubprogram(name: "set_params", scope: !3, file: !3, line: 2596, type: !20033, scopeLine: 2597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20100 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20101)
!20101 = distinct !DILocation(line: 2610, column: 2, scope: !20099)
!20102 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20101)
!20103 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20104)
!20104 = distinct !DILocation(line: 2605, column: 2, scope: !20105)
!20105 = distinct !DILexicalBlock(scope: !20106, file: !3, line: 2605, column: 2)
!20106 = distinct !DILexicalBlock(scope: !20107, file: !3, line: 2605, column: 2)
!20107 = distinct !DILexicalBlock(scope: !20108, file: !3, line: 2605, column: 2)
!20108 = distinct !DILexicalBlock(scope: !20109, file: !3, line: 2605, column: 2)
!20109 = distinct !DILexicalBlock(scope: !20099, file: !3, line: 2605, column: 2)
!20110 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !20111)
!20111 = distinct !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !20112)
!20112 = distinct !DILocation(line: 2602, column: 6, scope: !20113)
!20113 = distinct !DILexicalBlock(scope: !20099, file: !3, line: 2602, column: 6)
!20114 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !20111)
!20115 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !20111)
!20116 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !20111)
!20117 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !20111)
!20118 = !DILocation(line: 189, column: 22, scope: !12411, inlinedAt: !20112)
!20119 = !DILocation(line: 189, column: 45, scope: !12411, inlinedAt: !20112)
!20120 = !DILocation(line: 189, column: 65, scope: !12411, inlinedAt: !20112)
!20121 = !DILocalVariable(name: "info", arg: 1, scope: !20099, file: !3, line: 2596, type: !7530)
!20122 = !DILocation(line: 2596, column: 41, scope: !20099)
!20123 = !DILocalVariable(name: "new_params", arg: 2, scope: !20099, file: !3, line: 2596, type: !20035)
!20124 = !DILocation(line: 2596, column: 67, scope: !20099)
!20125 = !DILocalVariable(name: "flags", scope: !20099, file: !3, line: 2598, type: !312)
!20126 = !DILocation(line: 2598, column: 17, scope: !20099)
!20127 = !DILocalVariable(name: "tmp_params", scope: !20099, file: !3, line: 2599, type: !7891)
!20128 = !DILocation(line: 2599, column: 14, scope: !20099)
!20129 = !DILocation(line: 2601, column: 2, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20099, file: !3, line: 2601, column: 2)
!20131 = !DILocation(line: 2601, column: 2, scope: !20099)
!20132 = !DILocation(line: 2602, column: 21, scope: !20113)
!20133 = !DILocation(line: 2602, column: 34, scope: !20113)
!20134 = !DILocation(line: 191, column: 6, scope: !12409, inlinedAt: !20112)
!20135 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !20111)
!20136 = !DILocation(line: 0, scope: !12547, inlinedAt: !20111)
!20137 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !20111)
!20138 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !20111)
!20139 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !20111)
!20140 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !20111)
!20141 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !20111)
!20142 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !20111)
!20143 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !20111)
!20144 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !20111)
!20145 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !20111)
!20146 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !20111)
!20147 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !20111)
!20148 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !20111)
!20149 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !20111)
!20150 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !20111)
!20151 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !20111)
!20152 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !20111)
!20153 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !20111)
!20154 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !20111)
!20155 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !20111)
!20156 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !20111)
!20157 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !20111)
!20158 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !20111)
!20159 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !20111)
!20160 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !20111)
!20161 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !20111)
!20162 = !DILocation(line: 191, column: 6, scope: !12411, inlinedAt: !20112)
!20163 = !DILocation(line: 192, column: 23, scope: !12409, inlinedAt: !20112)
!20164 = !DILocation(line: 192, column: 27, scope: !12409, inlinedAt: !20112)
!20165 = !DILocation(line: 192, column: 33, scope: !12409, inlinedAt: !20112)
!20166 = !DILocation(line: 192, column: 7, scope: !12409, inlinedAt: !20112)
!20167 = !DILocation(line: 192, column: 5, scope: !12409, inlinedAt: !20112)
!20168 = !DILocation(line: 192, column: 3, scope: !12409, inlinedAt: !20112)
!20169 = !DILocation(line: 193, column: 9, scope: !12411, inlinedAt: !20112)
!20170 = !DILocation(line: 2602, column: 6, scope: !20113)
!20171 = !DILocation(line: 2602, column: 6, scope: !20099)
!20172 = !DILocation(line: 2603, column: 3, scope: !20113)
!20173 = !DILocation(line: 2605, column: 2, scope: !20099)
!20174 = !DILocation(line: 2605, column: 2, scope: !20109)
!20175 = !DILocalVariable(name: "__dummy", scope: !20176, file: !3, line: 2605, type: !312)
!20176 = distinct !DILexicalBlock(scope: !20108, file: !3, line: 2605, column: 2)
!20177 = !DILocation(line: 2605, column: 2, scope: !20176)
!20178 = !DILocalVariable(name: "__dummy2", scope: !20176, file: !3, line: 2605, type: !312)
!20179 = !DILocation(line: 2605, column: 2, scope: !20108)
!20180 = !DILocation(line: 2605, column: 2, scope: !20107)
!20181 = !DILocation(line: 2605, column: 2, scope: !20182)
!20182 = distinct !DILexicalBlock(scope: !20107, file: !3, line: 2605, column: 2)
!20183 = !DILocalVariable(name: "__dummy", scope: !20184, file: !3, line: 2605, type: !312)
!20184 = distinct !DILexicalBlock(scope: !20185, file: !3, line: 2605, column: 2)
!20185 = distinct !DILexicalBlock(scope: !20182, file: !3, line: 2605, column: 2)
!20186 = !DILocation(line: 2605, column: 2, scope: !20184)
!20187 = !DILocalVariable(name: "__dummy2", scope: !20184, file: !3, line: 2605, type: !312)
!20188 = !DILocation(line: 2605, column: 2, scope: !20185)
!20189 = !DILocation(line: 2605, column: 2, scope: !20106)
!20190 = !{i32 -2139531878}
!20191 = !DILocation(line: 2605, column: 2, scope: !20105)
!20192 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20104)
!20193 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20104)
!20194 = !DILocation(line: 2606, column: 17, scope: !20195)
!20195 = distinct !DILexicalBlock(scope: !20099, file: !3, line: 2606, column: 6)
!20196 = !DILocation(line: 2606, column: 22, scope: !20195)
!20197 = !DILocation(line: 2606, column: 6, scope: !20099)
!20198 = !DILocation(line: 2607, column: 33, scope: !20195)
!20199 = !DILocation(line: 2607, column: 22, scope: !20195)
!20200 = !DILocation(line: 2607, column: 3, scope: !20195)
!20201 = !DILocation(line: 2607, column: 9, scope: !20195)
!20202 = !DILocation(line: 2607, column: 20, scope: !20195)
!20203 = !DILocation(line: 2609, column: 11, scope: !20195)
!20204 = !DILocation(line: 2609, column: 17, scope: !20195)
!20205 = !DILocation(line: 2609, column: 3, scope: !20195)
!20206 = !DILocation(line: 2610, column: 26, scope: !20099)
!20207 = !DILocation(line: 2610, column: 32, scope: !20099)
!20208 = !DILocation(line: 2610, column: 38, scope: !20099)
!20209 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20101)
!20210 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20101)
!20211 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20101)
!20212 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20101)
!20213 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20101)
!20214 = !DILocation(line: 2612, column: 13, scope: !20099)
!20215 = !DILocation(line: 2612, column: 2, scope: !20099)
!20216 = !DILocation(line: 2614, column: 2, scope: !20099)
!20217 = !DILocation(line: 2615, column: 1, scope: !20099)
!20218 = distinct !DISubprogram(name: "get_txidle", scope: !3, file: !3, line: 2617, type: !18692, scopeLine: 2618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20219 = !DILocalVariable(name: "info", arg: 1, scope: !20218, file: !3, line: 2617, type: !7530)
!20220 = !DILocation(line: 2617, column: 41, scope: !20218)
!20221 = !DILocalVariable(name: "idle_mode", arg: 2, scope: !20218, file: !3, line: 2617, type: !1001)
!20222 = !DILocation(line: 2617, column: 59, scope: !20218)
!20223 = !DILocation(line: 2619, column: 2, scope: !20224)
!20224 = distinct !DILexicalBlock(scope: !20218, file: !3, line: 2619, column: 2)
!20225 = !DILocation(line: 2619, column: 2, scope: !20218)
!20226 = !DILocation(line: 2620, column: 6, scope: !20227)
!20227 = distinct !DILexicalBlock(scope: !20228, file: !3, line: 2620, column: 6)
!20228 = distinct !DILexicalBlock(scope: !20218, file: !3, line: 2620, column: 6)
!20229 = !DILocalVariable(name: "__ret_pu", scope: !20230, file: !3, line: 2620, type: !32)
!20230 = distinct !DILexicalBlock(scope: !20227, file: !3, line: 2620, column: 6)
!20231 = !DILocation(line: 2620, column: 6, scope: !20230)
!20232 = !DILocalVariable(name: "__ptr_pu", scope: !20230, file: !3, line: 2620, type: !591)
!20233 = !DILocalVariable(name: "__val_pu", scope: !20230, file: !3, line: 2620, type: !32)
!20234 = !{i32 -2139531332}
!20235 = !DILocation(line: 2620, column: 6, scope: !20228)
!20236 = !DILocation(line: 2620, column: 6, scope: !20218)
!20237 = !DILocation(line: 2621, column: 3, scope: !20228)
!20238 = !DILocation(line: 2622, column: 2, scope: !20218)
!20239 = !DILocation(line: 2623, column: 1, scope: !20218)
!20240 = distinct !DISubprogram(name: "set_txidle", scope: !3, file: !3, line: 2625, type: !19129, scopeLine: 2626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20241 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20242)
!20242 = distinct !DILocation(line: 2633, column: 2, scope: !20240)
!20243 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20242)
!20244 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20245)
!20245 = distinct !DILocation(line: 2629, column: 2, scope: !20246)
!20246 = distinct !DILexicalBlock(scope: !20247, file: !3, line: 2629, column: 2)
!20247 = distinct !DILexicalBlock(scope: !20248, file: !3, line: 2629, column: 2)
!20248 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 2629, column: 2)
!20249 = distinct !DILexicalBlock(scope: !20250, file: !3, line: 2629, column: 2)
!20250 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 2629, column: 2)
!20251 = !DILocalVariable(name: "info", arg: 1, scope: !20240, file: !3, line: 2625, type: !7530)
!20252 = !DILocation(line: 2625, column: 41, scope: !20240)
!20253 = !DILocalVariable(name: "idle_mode", arg: 2, scope: !20240, file: !3, line: 2625, type: !32)
!20254 = !DILocation(line: 2625, column: 51, scope: !20240)
!20255 = !DILocalVariable(name: "flags", scope: !20240, file: !3, line: 2627, type: !312)
!20256 = !DILocation(line: 2627, column: 17, scope: !20240)
!20257 = !DILocation(line: 2628, column: 2, scope: !20258)
!20258 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 2628, column: 2)
!20259 = !DILocation(line: 2628, column: 2, scope: !20240)
!20260 = !DILocation(line: 2629, column: 2, scope: !20240)
!20261 = !DILocation(line: 2629, column: 2, scope: !20250)
!20262 = !DILocalVariable(name: "__dummy", scope: !20263, file: !3, line: 2629, type: !312)
!20263 = distinct !DILexicalBlock(scope: !20249, file: !3, line: 2629, column: 2)
!20264 = !DILocation(line: 2629, column: 2, scope: !20263)
!20265 = !DILocalVariable(name: "__dummy2", scope: !20263, file: !3, line: 2629, type: !312)
!20266 = !DILocation(line: 2629, column: 2, scope: !20249)
!20267 = !DILocation(line: 2629, column: 2, scope: !20248)
!20268 = !DILocation(line: 2629, column: 2, scope: !20269)
!20269 = distinct !DILexicalBlock(scope: !20248, file: !3, line: 2629, column: 2)
!20270 = !DILocalVariable(name: "__dummy", scope: !20271, file: !3, line: 2629, type: !312)
!20271 = distinct !DILexicalBlock(scope: !20272, file: !3, line: 2629, column: 2)
!20272 = distinct !DILexicalBlock(scope: !20269, file: !3, line: 2629, column: 2)
!20273 = !DILocation(line: 2629, column: 2, scope: !20271)
!20274 = !DILocalVariable(name: "__dummy2", scope: !20271, file: !3, line: 2629, type: !312)
!20275 = !DILocation(line: 2629, column: 2, scope: !20272)
!20276 = !DILocation(line: 2629, column: 2, scope: !20247)
!20277 = !{i32 -2139529848}
!20278 = !DILocation(line: 2629, column: 2, scope: !20246)
!20279 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20245)
!20280 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20245)
!20281 = !DILocation(line: 2630, column: 20, scope: !20240)
!20282 = !DILocation(line: 2630, column: 2, scope: !20240)
!20283 = !DILocation(line: 2630, column: 8, scope: !20240)
!20284 = !DILocation(line: 2630, column: 18, scope: !20240)
!20285 = !DILocation(line: 2631, column: 6, scope: !20286)
!20286 = distinct !DILexicalBlock(scope: !20240, file: !3, line: 2631, column: 6)
!20287 = !DILocation(line: 2631, column: 12, scope: !20286)
!20288 = !DILocation(line: 2631, column: 19, scope: !20286)
!20289 = !DILocation(line: 2631, column: 24, scope: !20286)
!20290 = !DILocation(line: 2631, column: 6, scope: !20240)
!20291 = !DILocation(line: 2632, column: 15, scope: !20286)
!20292 = !DILocation(line: 2632, column: 3, scope: !20286)
!20293 = !DILocation(line: 2633, column: 26, scope: !20240)
!20294 = !DILocation(line: 2633, column: 32, scope: !20240)
!20295 = !DILocation(line: 2633, column: 37, scope: !20240)
!20296 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20242)
!20297 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20242)
!20298 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20242)
!20299 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20242)
!20300 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20242)
!20301 = !DILocation(line: 2634, column: 2, scope: !20240)
!20302 = distinct !DISubprogram(name: "tx_enable", scope: !3, file: !3, line: 2637, type: !19129, scopeLine: 2638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20303 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20304)
!20304 = distinct !DILocation(line: 2649, column: 2, scope: !20302)
!20305 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20304)
!20306 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20307)
!20307 = distinct !DILocation(line: 2641, column: 2, scope: !20308)
!20308 = distinct !DILexicalBlock(scope: !20309, file: !3, line: 2641, column: 2)
!20309 = distinct !DILexicalBlock(scope: !20310, file: !3, line: 2641, column: 2)
!20310 = distinct !DILexicalBlock(scope: !20311, file: !3, line: 2641, column: 2)
!20311 = distinct !DILexicalBlock(scope: !20312, file: !3, line: 2641, column: 2)
!20312 = distinct !DILexicalBlock(scope: !20302, file: !3, line: 2641, column: 2)
!20313 = !DILocalVariable(name: "info", arg: 1, scope: !20302, file: !3, line: 2637, type: !7530)
!20314 = !DILocation(line: 2637, column: 40, scope: !20302)
!20315 = !DILocalVariable(name: "enable", arg: 2, scope: !20302, file: !3, line: 2637, type: !32)
!20316 = !DILocation(line: 2637, column: 50, scope: !20302)
!20317 = !DILocalVariable(name: "flags", scope: !20302, file: !3, line: 2639, type: !312)
!20318 = !DILocation(line: 2639, column: 17, scope: !20302)
!20319 = !DILocation(line: 2640, column: 2, scope: !20320)
!20320 = distinct !DILexicalBlock(scope: !20302, file: !3, line: 2640, column: 2)
!20321 = !DILocation(line: 2640, column: 2, scope: !20302)
!20322 = !DILocation(line: 2641, column: 2, scope: !20302)
!20323 = !DILocation(line: 2641, column: 2, scope: !20312)
!20324 = !DILocalVariable(name: "__dummy", scope: !20325, file: !3, line: 2641, type: !312)
!20325 = distinct !DILexicalBlock(scope: !20311, file: !3, line: 2641, column: 2)
!20326 = !DILocation(line: 2641, column: 2, scope: !20325)
!20327 = !DILocalVariable(name: "__dummy2", scope: !20325, file: !3, line: 2641, type: !312)
!20328 = !DILocation(line: 2641, column: 2, scope: !20311)
!20329 = !DILocation(line: 2641, column: 2, scope: !20310)
!20330 = !DILocation(line: 2641, column: 2, scope: !20331)
!20331 = distinct !DILexicalBlock(scope: !20310, file: !3, line: 2641, column: 2)
!20332 = !DILocalVariable(name: "__dummy", scope: !20333, file: !3, line: 2641, type: !312)
!20333 = distinct !DILexicalBlock(scope: !20334, file: !3, line: 2641, column: 2)
!20334 = distinct !DILexicalBlock(scope: !20331, file: !3, line: 2641, column: 2)
!20335 = !DILocation(line: 2641, column: 2, scope: !20333)
!20336 = !DILocalVariable(name: "__dummy2", scope: !20333, file: !3, line: 2641, type: !312)
!20337 = !DILocation(line: 2641, column: 2, scope: !20334)
!20338 = !DILocation(line: 2641, column: 2, scope: !20309)
!20339 = !{i32 -2139528727}
!20340 = !DILocation(line: 2641, column: 2, scope: !20308)
!20341 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20307)
!20342 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20307)
!20343 = !DILocation(line: 2642, column: 6, scope: !20344)
!20344 = distinct !DILexicalBlock(scope: !20302, file: !3, line: 2642, column: 6)
!20345 = !DILocation(line: 2642, column: 6, scope: !20302)
!20346 = !DILocation(line: 2643, column: 8, scope: !20347)
!20347 = distinct !DILexicalBlock(scope: !20348, file: !3, line: 2643, column: 7)
!20348 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 2642, column: 14)
!20349 = !DILocation(line: 2643, column: 14, scope: !20347)
!20350 = !DILocation(line: 2643, column: 7, scope: !20348)
!20351 = !DILocation(line: 2644, column: 13, scope: !20347)
!20352 = !DILocation(line: 2644, column: 4, scope: !20347)
!20353 = !DILocation(line: 2645, column: 2, scope: !20348)
!20354 = !DILocation(line: 2646, column: 7, scope: !20355)
!20355 = distinct !DILexicalBlock(scope: !20356, file: !3, line: 2646, column: 7)
!20356 = distinct !DILexicalBlock(scope: !20344, file: !3, line: 2645, column: 9)
!20357 = !DILocation(line: 2646, column: 13, scope: !20355)
!20358 = !DILocation(line: 2646, column: 7, scope: !20356)
!20359 = !DILocation(line: 2647, column: 12, scope: !20355)
!20360 = !DILocation(line: 2647, column: 4, scope: !20355)
!20361 = !DILocation(line: 2649, column: 26, scope: !20302)
!20362 = !DILocation(line: 2649, column: 32, scope: !20302)
!20363 = !DILocation(line: 2649, column: 37, scope: !20302)
!20364 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20304)
!20365 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20304)
!20366 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20304)
!20367 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20304)
!20368 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20304)
!20369 = !DILocation(line: 2650, column: 2, scope: !20302)
!20370 = distinct !DISubprogram(name: "rx_enable", scope: !3, file: !3, line: 2666, type: !19129, scopeLine: 2667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20371 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20372)
!20372 = distinct !DILocation(line: 2680, column: 4, scope: !20373)
!20373 = distinct !DILexicalBlock(scope: !20374, file: !3, line: 2679, column: 64)
!20374 = distinct !DILexicalBlock(scope: !20375, file: !3, line: 2679, column: 7)
!20375 = distinct !DILexicalBlock(scope: !20376, file: !3, line: 2678, column: 23)
!20376 = distinct !DILexicalBlock(scope: !20370, file: !3, line: 2678, column: 6)
!20377 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20372)
!20378 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20379)
!20379 = distinct !DILocation(line: 2709, column: 2, scope: !20370)
!20380 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20379)
!20381 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20382)
!20382 = distinct !DILocation(line: 2671, column: 2, scope: !20383)
!20383 = distinct !DILexicalBlock(scope: !20384, file: !3, line: 2671, column: 2)
!20384 = distinct !DILexicalBlock(scope: !20385, file: !3, line: 2671, column: 2)
!20385 = distinct !DILexicalBlock(scope: !20386, file: !3, line: 2671, column: 2)
!20386 = distinct !DILexicalBlock(scope: !20387, file: !3, line: 2671, column: 2)
!20387 = distinct !DILexicalBlock(scope: !20370, file: !3, line: 2671, column: 2)
!20388 = !DILocalVariable(name: "info", arg: 1, scope: !20370, file: !3, line: 2666, type: !7530)
!20389 = !DILocation(line: 2666, column: 40, scope: !20370)
!20390 = !DILocalVariable(name: "enable", arg: 2, scope: !20370, file: !3, line: 2666, type: !32)
!20391 = !DILocation(line: 2666, column: 50, scope: !20370)
!20392 = !DILocalVariable(name: "flags", scope: !20370, file: !3, line: 2668, type: !312)
!20393 = !DILocation(line: 2668, column: 17, scope: !20370)
!20394 = !DILocalVariable(name: "rbuf_fill_level", scope: !20370, file: !3, line: 2669, type: !7)
!20395 = !DILocation(line: 2669, column: 15, scope: !20370)
!20396 = !DILocation(line: 2670, column: 2, scope: !20397)
!20397 = distinct !DILexicalBlock(scope: !20370, file: !3, line: 2670, column: 2)
!20398 = !DILocation(line: 2670, column: 2, scope: !20370)
!20399 = !DILocation(line: 2671, column: 2, scope: !20370)
!20400 = !DILocation(line: 2671, column: 2, scope: !20387)
!20401 = !DILocalVariable(name: "__dummy", scope: !20402, file: !3, line: 2671, type: !312)
!20402 = distinct !DILexicalBlock(scope: !20386, file: !3, line: 2671, column: 2)
!20403 = !DILocation(line: 2671, column: 2, scope: !20402)
!20404 = !DILocalVariable(name: "__dummy2", scope: !20402, file: !3, line: 2671, type: !312)
!20405 = !DILocation(line: 2671, column: 2, scope: !20386)
!20406 = !DILocation(line: 2671, column: 2, scope: !20385)
!20407 = !DILocation(line: 2671, column: 2, scope: !20408)
!20408 = distinct !DILexicalBlock(scope: !20385, file: !3, line: 2671, column: 2)
!20409 = !DILocalVariable(name: "__dummy", scope: !20410, file: !3, line: 2671, type: !312)
!20410 = distinct !DILexicalBlock(scope: !20411, file: !3, line: 2671, column: 2)
!20411 = distinct !DILexicalBlock(scope: !20408, file: !3, line: 2671, column: 2)
!20412 = !DILocation(line: 2671, column: 2, scope: !20410)
!20413 = !DILocalVariable(name: "__dummy2", scope: !20410, file: !3, line: 2671, type: !312)
!20414 = !DILocation(line: 2671, column: 2, scope: !20411)
!20415 = !DILocation(line: 2671, column: 2, scope: !20384)
!20416 = !{i32 -2139526500}
!20417 = !DILocation(line: 2671, column: 2, scope: !20383)
!20418 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20382)
!20419 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20382)
!20420 = !DILocation(line: 2677, column: 35, scope: !20370)
!20421 = !DILocation(line: 2677, column: 43, scope: !20370)
!20422 = !DILocation(line: 2677, column: 18, scope: !20370)
!20423 = !DILocation(line: 2678, column: 6, scope: !20376)
!20424 = !DILocation(line: 2678, column: 6, scope: !20370)
!20425 = !DILocation(line: 2679, column: 8, scope: !20374)
!20426 = !DILocation(line: 2679, column: 24, scope: !20374)
!20427 = !DILocation(line: 2679, column: 38, scope: !20374)
!20428 = !DILocation(line: 2679, column: 42, scope: !20374)
!20429 = !DILocation(line: 2679, column: 58, scope: !20374)
!20430 = !DILocation(line: 2679, column: 7, scope: !20375)
!20431 = !DILocation(line: 2680, column: 28, scope: !20373)
!20432 = !DILocation(line: 2680, column: 34, scope: !20373)
!20433 = !DILocation(line: 2680, column: 40, scope: !20373)
!20434 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20372)
!20435 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20372)
!20436 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20372)
!20437 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20372)
!20438 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20372)
!20439 = !DILocation(line: 2681, column: 4, scope: !20373)
!20440 = !DILocation(line: 2683, column: 27, scope: !20375)
!20441 = !DILocation(line: 2683, column: 3, scope: !20375)
!20442 = !DILocation(line: 2683, column: 9, scope: !20375)
!20443 = !DILocation(line: 2683, column: 25, scope: !20375)
!20444 = !DILocation(line: 2684, column: 7, scope: !20445)
!20445 = distinct !DILexicalBlock(scope: !20375, file: !3, line: 2684, column: 7)
!20446 = !DILocation(line: 2684, column: 23, scope: !20445)
!20447 = !DILocation(line: 2684, column: 7, scope: !20375)
!20448 = !DILocation(line: 2685, column: 4, scope: !20445)
!20449 = !DILocation(line: 2685, column: 10, scope: !20445)
!20450 = !DILocation(line: 2685, column: 17, scope: !20445)
!20451 = !DILocation(line: 2687, column: 4, scope: !20445)
!20452 = !DILocation(line: 2687, column: 10, scope: !20445)
!20453 = !DILocation(line: 2687, column: 17, scope: !20445)
!20454 = !DILocation(line: 2688, column: 11, scope: !20375)
!20455 = !DILocation(line: 2688, column: 3, scope: !20375)
!20456 = !DILocation(line: 2689, column: 2, scope: !20375)
!20457 = !DILocation(line: 2697, column: 9, scope: !20370)
!20458 = !DILocation(line: 2698, column: 6, scope: !20459)
!20459 = distinct !DILexicalBlock(scope: !20370, file: !3, line: 2698, column: 6)
!20460 = !DILocation(line: 2698, column: 6, scope: !20370)
!20461 = !DILocation(line: 2699, column: 8, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20463, file: !3, line: 2699, column: 7)
!20463 = distinct !DILexicalBlock(scope: !20459, file: !3, line: 2698, column: 14)
!20464 = !DILocation(line: 2699, column: 14, scope: !20462)
!20465 = !DILocation(line: 2699, column: 7, scope: !20463)
!20466 = !DILocation(line: 2700, column: 13, scope: !20462)
!20467 = !DILocation(line: 2700, column: 4, scope: !20462)
!20468 = !DILocation(line: 2701, column: 12, scope: !20469)
!20469 = distinct !DILexicalBlock(scope: !20462, file: !3, line: 2701, column: 12)
!20470 = !DILocation(line: 2701, column: 19, scope: !20469)
!20471 = !DILocation(line: 2701, column: 12, scope: !20462)
!20472 = !DILocation(line: 2703, column: 13, scope: !20473)
!20473 = distinct !DILexicalBlock(scope: !20469, file: !3, line: 2701, column: 25)
!20474 = !DILocation(line: 2703, column: 33, scope: !20473)
!20475 = !DILocation(line: 2703, column: 24, scope: !20473)
!20476 = !DILocation(line: 2703, column: 44, scope: !20473)
!20477 = !DILocation(line: 2703, column: 4, scope: !20473)
!20478 = !DILocation(line: 2704, column: 3, scope: !20473)
!20479 = !DILocation(line: 2705, column: 2, scope: !20463)
!20480 = !DILocation(line: 2706, column: 7, scope: !20481)
!20481 = distinct !DILexicalBlock(scope: !20482, file: !3, line: 2706, column: 7)
!20482 = distinct !DILexicalBlock(scope: !20459, file: !3, line: 2705, column: 9)
!20483 = !DILocation(line: 2706, column: 13, scope: !20481)
!20484 = !DILocation(line: 2706, column: 7, scope: !20482)
!20485 = !DILocation(line: 2707, column: 12, scope: !20481)
!20486 = !DILocation(line: 2707, column: 4, scope: !20481)
!20487 = !DILocation(line: 2709, column: 26, scope: !20370)
!20488 = !DILocation(line: 2709, column: 32, scope: !20370)
!20489 = !DILocation(line: 2709, column: 37, scope: !20370)
!20490 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20379)
!20491 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20379)
!20492 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20379)
!20493 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20379)
!20494 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20379)
!20495 = !DILocation(line: 2710, column: 2, scope: !20370)
!20496 = !DILocation(line: 2711, column: 1, scope: !20370)
!20497 = distinct !DISubprogram(name: "tx_abort", scope: !3, file: !3, line: 2656, type: !8119, scopeLine: 2657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20498 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20499)
!20499 = distinct !DILocation(line: 2662, column: 2, scope: !20497)
!20500 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20499)
!20501 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20502)
!20502 = distinct !DILocation(line: 2660, column: 2, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !20504, file: !3, line: 2660, column: 2)
!20504 = distinct !DILexicalBlock(scope: !20505, file: !3, line: 2660, column: 2)
!20505 = distinct !DILexicalBlock(scope: !20506, file: !3, line: 2660, column: 2)
!20506 = distinct !DILexicalBlock(scope: !20507, file: !3, line: 2660, column: 2)
!20507 = distinct !DILexicalBlock(scope: !20497, file: !3, line: 2660, column: 2)
!20508 = !DILocalVariable(name: "info", arg: 1, scope: !20497, file: !3, line: 2656, type: !7530)
!20509 = !DILocation(line: 2656, column: 39, scope: !20497)
!20510 = !DILocalVariable(name: "flags", scope: !20497, file: !3, line: 2658, type: !312)
!20511 = !DILocation(line: 2658, column: 17, scope: !20497)
!20512 = !DILocation(line: 2659, column: 2, scope: !20513)
!20513 = distinct !DILexicalBlock(scope: !20497, file: !3, line: 2659, column: 2)
!20514 = !DILocation(line: 2659, column: 2, scope: !20497)
!20515 = !DILocation(line: 2660, column: 2, scope: !20497)
!20516 = !DILocation(line: 2660, column: 2, scope: !20507)
!20517 = !DILocalVariable(name: "__dummy", scope: !20518, file: !3, line: 2660, type: !312)
!20518 = distinct !DILexicalBlock(scope: !20506, file: !3, line: 2660, column: 2)
!20519 = !DILocation(line: 2660, column: 2, scope: !20518)
!20520 = !DILocalVariable(name: "__dummy2", scope: !20518, file: !3, line: 2660, type: !312)
!20521 = !DILocation(line: 2660, column: 2, scope: !20506)
!20522 = !DILocation(line: 2660, column: 2, scope: !20505)
!20523 = !DILocation(line: 2660, column: 2, scope: !20524)
!20524 = distinct !DILexicalBlock(scope: !20505, file: !3, line: 2660, column: 2)
!20525 = !DILocalVariable(name: "__dummy", scope: !20526, file: !3, line: 2660, type: !312)
!20526 = distinct !DILexicalBlock(scope: !20527, file: !3, line: 2660, column: 2)
!20527 = distinct !DILexicalBlock(scope: !20524, file: !3, line: 2660, column: 2)
!20528 = !DILocation(line: 2660, column: 2, scope: !20526)
!20529 = !DILocalVariable(name: "__dummy2", scope: !20526, file: !3, line: 2660, type: !312)
!20530 = !DILocation(line: 2660, column: 2, scope: !20527)
!20531 = !DILocation(line: 2660, column: 2, scope: !20504)
!20532 = !{i32 -2139527621}
!20533 = !DILocation(line: 2660, column: 2, scope: !20503)
!20534 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20502)
!20535 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20502)
!20536 = !DILocation(line: 2661, column: 13, scope: !20497)
!20537 = !DILocation(line: 2661, column: 2, scope: !20497)
!20538 = !DILocation(line: 2662, column: 26, scope: !20497)
!20539 = !DILocation(line: 2662, column: 32, scope: !20497)
!20540 = !DILocation(line: 2662, column: 37, scope: !20497)
!20541 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20499)
!20542 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20499)
!20543 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20499)
!20544 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20499)
!20545 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20499)
!20546 = !DILocation(line: 2663, column: 2, scope: !20497)
!20547 = distinct !DISubprogram(name: "get_stats", scope: !3, file: !3, line: 2576, type: !20548, scopeLine: 2577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20548 = !DISubroutineType(types: !20549)
!20549 = !{!32, !7530, !10653}
!20550 = !DILocation(line: 138, column: 29, scope: !12403, inlinedAt: !20551)
!20551 = distinct !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !20552)
!20552 = distinct !DILocation(line: 2582, column: 7, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20554, file: !3, line: 2582, column: 7)
!20554 = distinct !DILexicalBlock(scope: !20555, file: !3, line: 2581, column: 9)
!20555 = distinct !DILexicalBlock(scope: !20547, file: !3, line: 2579, column: 6)
!20556 = !DILocation(line: 138, column: 42, scope: !12403, inlinedAt: !20551)
!20557 = !DILocation(line: 138, column: 54, scope: !12403, inlinedAt: !20551)
!20558 = !DILocation(line: 140, column: 6, scope: !12403, inlinedAt: !20551)
!20559 = !DILocation(line: 150, column: 6, scope: !12424, inlinedAt: !20551)
!20560 = !DILocation(line: 197, column: 27, scope: !12436, inlinedAt: !20552)
!20561 = !DILocation(line: 197, column: 43, scope: !12436, inlinedAt: !20552)
!20562 = !DILocation(line: 197, column: 63, scope: !12436, inlinedAt: !20552)
!20563 = !DILocalVariable(name: "info", arg: 1, scope: !20547, file: !3, line: 2576, type: !7530)
!20564 = !DILocation(line: 2576, column: 40, scope: !20547)
!20565 = !DILocalVariable(name: "user_icount", arg: 2, scope: !20547, file: !3, line: 2576, type: !10653)
!20566 = !DILocation(line: 2576, column: 73, scope: !20547)
!20567 = !DILocation(line: 2578, column: 2, scope: !20568)
!20568 = distinct !DILexicalBlock(scope: !20547, file: !3, line: 2578, column: 2)
!20569 = !DILocation(line: 2578, column: 2, scope: !20547)
!20570 = !DILocation(line: 2579, column: 7, scope: !20555)
!20571 = !DILocation(line: 2579, column: 6, scope: !20547)
!20572 = !DILocation(line: 2580, column: 11, scope: !20573)
!20573 = distinct !DILexicalBlock(scope: !20555, file: !3, line: 2579, column: 20)
!20574 = !DILocation(line: 2580, column: 17, scope: !20573)
!20575 = !DILocation(line: 2580, column: 3, scope: !20573)
!20576 = !DILocation(line: 2581, column: 2, scope: !20573)
!20577 = !DILocation(line: 2582, column: 20, scope: !20553)
!20578 = !DILocation(line: 2582, column: 34, scope: !20553)
!20579 = !DILocation(line: 2582, column: 40, scope: !20553)
!20580 = !DILocation(line: 2582, column: 33, scope: !20553)
!20581 = !DILocation(line: 199, column: 6, scope: !12435, inlinedAt: !20552)
!20582 = !DILocation(line: 141, column: 6, scope: !12547, inlinedAt: !20551)
!20583 = !DILocation(line: 0, scope: !12547, inlinedAt: !20551)
!20584 = !DILocation(line: 141, column: 6, scope: !12403, inlinedAt: !20551)
!20585 = !DILocation(line: 142, column: 29, scope: !12551, inlinedAt: !20551)
!20586 = !DILocation(line: 142, column: 8, scope: !12551, inlinedAt: !20551)
!20587 = !DILocation(line: 142, column: 7, scope: !12552, inlinedAt: !20551)
!20588 = !DILocation(line: 143, column: 18, scope: !12551, inlinedAt: !20551)
!20589 = !DILocation(line: 143, column: 22, scope: !12551, inlinedAt: !20551)
!20590 = !DILocation(line: 143, column: 4, scope: !12551, inlinedAt: !20551)
!20591 = !DILocation(line: 144, column: 12, scope: !12559, inlinedAt: !20551)
!20592 = !DILocation(line: 144, column: 12, scope: !12551, inlinedAt: !20551)
!20593 = !DILocation(line: 145, column: 4, scope: !12559, inlinedAt: !20551)
!20594 = !DILocation(line: 147, column: 4, scope: !12559, inlinedAt: !20551)
!20595 = !DILocation(line: 148, column: 3, scope: !12552, inlinedAt: !20551)
!20596 = !DILocation(line: 150, column: 6, scope: !12565, inlinedAt: !20551)
!20597 = !DILocation(line: 150, column: 6, scope: !12567, inlinedAt: !20551)
!20598 = !DILocation(line: 150, column: 6, scope: !12571, inlinedAt: !20551)
!20599 = !DILocation(line: 150, column: 6, scope: !12568, inlinedAt: !20551)
!20600 = !DILocation(line: 150, column: 6, scope: !12425, inlinedAt: !20551)
!20601 = !DILocation(line: 150, column: 6, scope: !12403, inlinedAt: !20551)
!20602 = !DILocation(line: 151, column: 3, scope: !12425, inlinedAt: !20551)
!20603 = !DILocation(line: 152, column: 20, scope: !12403, inlinedAt: !20551)
!20604 = !DILocation(line: 152, column: 26, scope: !12403, inlinedAt: !20551)
!20605 = !DILocation(line: 152, column: 33, scope: !12403, inlinedAt: !20551)
!20606 = !DILocation(line: 152, column: 2, scope: !12403, inlinedAt: !20551)
!20607 = !DILocation(line: 153, column: 2, scope: !12403, inlinedAt: !20551)
!20608 = !DILocation(line: 154, column: 1, scope: !12403, inlinedAt: !20551)
!20609 = !DILocation(line: 199, column: 6, scope: !12436, inlinedAt: !20552)
!20610 = !DILocation(line: 200, column: 21, scope: !12435, inlinedAt: !20552)
!20611 = !DILocation(line: 200, column: 25, scope: !12435, inlinedAt: !20552)
!20612 = !DILocation(line: 200, column: 31, scope: !12435, inlinedAt: !20552)
!20613 = !DILocation(line: 200, column: 7, scope: !12435, inlinedAt: !20552)
!20614 = !DILocation(line: 200, column: 5, scope: !12435, inlinedAt: !20552)
!20615 = !DILocation(line: 200, column: 3, scope: !12435, inlinedAt: !20552)
!20616 = !DILocation(line: 201, column: 9, scope: !12436, inlinedAt: !20552)
!20617 = !DILocation(line: 2582, column: 7, scope: !20553)
!20618 = !DILocation(line: 2582, column: 7, scope: !20554)
!20619 = !DILocation(line: 2583, column: 4, scope: !20553)
!20620 = !DILocation(line: 2585, column: 2, scope: !20547)
!20621 = !DILocation(line: 2586, column: 1, scope: !20547)
!20622 = distinct !DISubprogram(name: "get_interface", scope: !3, file: !3, line: 2830, type: !18692, scopeLine: 2831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20623 = !DILocalVariable(name: "info", arg: 1, scope: !20622, file: !3, line: 2830, type: !7530)
!20624 = !DILocation(line: 2830, column: 44, scope: !20622)
!20625 = !DILocalVariable(name: "if_mode", arg: 2, scope: !20622, file: !3, line: 2830, type: !1001)
!20626 = !DILocation(line: 2830, column: 62, scope: !20622)
!20627 = !DILocation(line: 2832, column: 2, scope: !20628)
!20628 = distinct !DILexicalBlock(scope: !20622, file: !3, line: 2832, column: 2)
!20629 = !DILocation(line: 2832, column: 2, scope: !20622)
!20630 = !DILocation(line: 2833, column: 6, scope: !20631)
!20631 = distinct !DILexicalBlock(scope: !20632, file: !3, line: 2833, column: 6)
!20632 = distinct !DILexicalBlock(scope: !20622, file: !3, line: 2833, column: 6)
!20633 = !DILocalVariable(name: "__ret_pu", scope: !20634, file: !3, line: 2833, type: !32)
!20634 = distinct !DILexicalBlock(scope: !20631, file: !3, line: 2833, column: 6)
!20635 = !DILocation(line: 2833, column: 6, scope: !20634)
!20636 = !DILocalVariable(name: "__ptr_pu", scope: !20634, file: !3, line: 2833, type: !591)
!20637 = !DILocalVariable(name: "__val_pu", scope: !20634, file: !3, line: 2833, type: !32)
!20638 = !{i32 -2139514806}
!20639 = !DILocation(line: 2833, column: 6, scope: !20632)
!20640 = !DILocation(line: 2833, column: 6, scope: !20622)
!20641 = !DILocation(line: 2834, column: 3, scope: !20632)
!20642 = !DILocation(line: 2835, column: 2, scope: !20622)
!20643 = !DILocation(line: 2836, column: 1, scope: !20622)
!20644 = distinct !DISubprogram(name: "set_interface", scope: !3, file: !3, line: 2838, type: !19129, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20645 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20646)
!20646 = distinct !DILocation(line: 2857, column: 2, scope: !20644)
!20647 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20646)
!20648 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20649)
!20649 = distinct !DILocation(line: 2844, column: 2, scope: !20650)
!20650 = distinct !DILexicalBlock(scope: !20651, file: !3, line: 2844, column: 2)
!20651 = distinct !DILexicalBlock(scope: !20652, file: !3, line: 2844, column: 2)
!20652 = distinct !DILexicalBlock(scope: !20653, file: !3, line: 2844, column: 2)
!20653 = distinct !DILexicalBlock(scope: !20654, file: !3, line: 2844, column: 2)
!20654 = distinct !DILexicalBlock(scope: !20644, file: !3, line: 2844, column: 2)
!20655 = !DILocalVariable(name: "info", arg: 1, scope: !20644, file: !3, line: 2838, type: !7530)
!20656 = !DILocation(line: 2838, column: 44, scope: !20644)
!20657 = !DILocalVariable(name: "if_mode", arg: 2, scope: !20644, file: !3, line: 2838, type: !32)
!20658 = !DILocation(line: 2838, column: 54, scope: !20644)
!20659 = !DILocalVariable(name: "flags", scope: !20644, file: !3, line: 2840, type: !312)
!20660 = !DILocation(line: 2840, column: 17, scope: !20644)
!20661 = !DILocalVariable(name: "val", scope: !20644, file: !3, line: 2841, type: !476)
!20662 = !DILocation(line: 2841, column: 17, scope: !20644)
!20663 = !DILocation(line: 2843, column: 2, scope: !20664)
!20664 = distinct !DILexicalBlock(scope: !20644, file: !3, line: 2843, column: 2)
!20665 = !DILocation(line: 2843, column: 2, scope: !20644)
!20666 = !DILocation(line: 2844, column: 2, scope: !20644)
!20667 = !DILocation(line: 2844, column: 2, scope: !20654)
!20668 = !DILocalVariable(name: "__dummy", scope: !20669, file: !3, line: 2844, type: !312)
!20669 = distinct !DILexicalBlock(scope: !20653, file: !3, line: 2844, column: 2)
!20670 = !DILocation(line: 2844, column: 2, scope: !20669)
!20671 = !DILocalVariable(name: "__dummy2", scope: !20669, file: !3, line: 2844, type: !312)
!20672 = !DILocation(line: 2844, column: 2, scope: !20653)
!20673 = !DILocation(line: 2844, column: 2, scope: !20652)
!20674 = !DILocation(line: 2844, column: 2, scope: !20675)
!20675 = distinct !DILexicalBlock(scope: !20652, file: !3, line: 2844, column: 2)
!20676 = !DILocalVariable(name: "__dummy", scope: !20677, file: !3, line: 2844, type: !312)
!20677 = distinct !DILexicalBlock(scope: !20678, file: !3, line: 2844, column: 2)
!20678 = distinct !DILexicalBlock(scope: !20675, file: !3, line: 2844, column: 2)
!20679 = !DILocation(line: 2844, column: 2, scope: !20677)
!20680 = !DILocalVariable(name: "__dummy2", scope: !20677, file: !3, line: 2844, type: !312)
!20681 = !DILocation(line: 2844, column: 2, scope: !20678)
!20682 = !DILocation(line: 2844, column: 2, scope: !20651)
!20683 = !{i32 -2139513331}
!20684 = !DILocation(line: 2844, column: 2, scope: !20650)
!20685 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20649)
!20686 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20649)
!20687 = !DILocation(line: 2845, column: 18, scope: !20644)
!20688 = !DILocation(line: 2845, column: 2, scope: !20644)
!20689 = !DILocation(line: 2845, column: 8, scope: !20644)
!20690 = !DILocation(line: 2845, column: 16, scope: !20644)
!20691 = !DILocation(line: 2847, column: 14, scope: !20644)
!20692 = !DILocation(line: 2847, column: 2, scope: !20644)
!20693 = !DILocation(line: 2850, column: 17, scope: !20644)
!20694 = !DILocation(line: 2850, column: 8, scope: !20644)
!20695 = !DILocation(line: 2850, column: 6, scope: !20644)
!20696 = !DILocation(line: 2851, column: 6, scope: !20697)
!20697 = distinct !DILexicalBlock(scope: !20644, file: !3, line: 2851, column: 6)
!20698 = !DILocation(line: 2851, column: 12, scope: !20697)
!20699 = !DILocation(line: 2851, column: 20, scope: !20697)
!20700 = !DILocation(line: 2851, column: 6, scope: !20644)
!20701 = !DILocation(line: 2852, column: 7, scope: !20697)
!20702 = !DILocation(line: 2852, column: 3, scope: !20697)
!20703 = !DILocation(line: 2854, column: 7, scope: !20697)
!20704 = !DILocation(line: 2855, column: 11, scope: !20644)
!20705 = !DILocation(line: 2855, column: 22, scope: !20644)
!20706 = !DILocation(line: 2855, column: 2, scope: !20644)
!20707 = !DILocation(line: 2857, column: 26, scope: !20644)
!20708 = !DILocation(line: 2857, column: 32, scope: !20644)
!20709 = !DILocation(line: 2857, column: 37, scope: !20644)
!20710 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20646)
!20711 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20646)
!20712 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20646)
!20713 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20646)
!20714 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20646)
!20715 = !DILocation(line: 2858, column: 2, scope: !20644)
!20716 = distinct !DISubprogram(name: "might_fault", scope: !20717, file: !20717, line: 315, type: !5179, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20717 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!20718 = !DILocation(line: 315, column: 40, scope: !20716)
!20719 = distinct !DISubprogram(name: "waitqueue_active", scope: !1890, file: !1890, line: 126, type: !20720, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20720 = !DISubroutineType(types: !20721)
!20721 = !{!32, !20722}
!20722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1891, size: 64)
!20723 = !DILocalVariable(name: "wq_head", arg: 1, scope: !20719, file: !1890, line: 126, type: !20722)
!20724 = !DILocation(line: 126, column: 60, scope: !20719)
!20725 = !DILocation(line: 128, column: 22, scope: !20719)
!20726 = !DILocation(line: 128, column: 31, scope: !20719)
!20727 = !DILocation(line: 128, column: 10, scope: !20719)
!20728 = !DILocation(line: 128, column: 9, scope: !20719)
!20729 = !DILocation(line: 128, column: 2, scope: !20719)
!20730 = distinct !DISubprogram(name: "list_empty", scope: !10014, file: !10014, line: 280, type: !20731, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20731 = !DISubroutineType(types: !20732)
!20732 = !{!32, !20733}
!20733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20734, size: 64)
!20734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!20735 = !DILocalVariable(name: "head", arg: 1, scope: !20730, file: !10014, line: 280, type: !20733)
!20736 = !DILocation(line: 280, column: 54, scope: !20730)
!20737 = !DILocation(line: 282, column: 9, scope: !20738)
!20738 = distinct !DILexicalBlock(scope: !20730, file: !10014, line: 282, column: 9)
!20739 = !DILocation(line: 282, column: 9, scope: !20740)
!20740 = distinct !DILexicalBlock(scope: !20738, file: !10014, line: 282, column: 9)
!20741 = !DILocation(line: 282, column: 34, scope: !20730)
!20742 = !DILocation(line: 282, column: 31, scope: !20730)
!20743 = !DILocation(line: 282, column: 2, scope: !20730)
!20744 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !20745)
!20745 = distinct !DILocation(line: 2990, column: 33, scope: !8132)
!20746 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !20745)
!20747 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !20745)
!20748 = !DILocalVariable(name: "w", arg: 1, scope: !8132, file: !3, line: 2987, type: !7857)
!20749 = !DILocation(line: 2987, column: 46, scope: !8132)
!20750 = !DILocalVariable(name: "data", arg: 2, scope: !8132, file: !3, line: 2987, type: !7)
!20751 = !DILocation(line: 2987, column: 62, scope: !8132)
!20752 = !DILocation(line: 2989, column: 2, scope: !8132)
!20753 = !DILocation(line: 2989, column: 2, scope: !20754)
!20754 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 2989, column: 2)
!20755 = !DILocation(line: 2990, column: 24, scope: !8132)
!20756 = !DILocation(line: 2990, column: 27, scope: !8132)
!20757 = !DILocation(line: 2990, column: 2, scope: !8132)
!20758 = !DILocation(line: 2991, column: 12, scope: !8132)
!20759 = !DILocation(line: 2991, column: 2, scope: !8132)
!20760 = !DILocation(line: 2991, column: 5, scope: !8132)
!20761 = !DILocation(line: 2991, column: 10, scope: !8132)
!20762 = !DILocation(line: 2992, column: 1, scope: !8132)
!20763 = distinct !DISubprogram(name: "add_cond_wait", scope: !3, file: !3, line: 2994, type: !20764, scopeLine: 2995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20764 = !DISubroutineType(types: !20765)
!20765 = !{null, !14252, !7857}
!20766 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !20767)
!20767 = distinct !DILocation(line: 2996, column: 2, scope: !20768)
!20768 = distinct !DILexicalBlock(scope: !20769, file: !3, line: 2996, column: 2)
!20769 = distinct !DILexicalBlock(scope: !20770, file: !3, line: 2996, column: 2)
!20770 = distinct !DILexicalBlock(scope: !20763, file: !3, line: 2996, column: 2)
!20771 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !20767)
!20772 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !20767)
!20773 = !DILocalVariable(name: "head", arg: 1, scope: !20763, file: !3, line: 2994, type: !14252)
!20774 = !DILocation(line: 2994, column: 46, scope: !20763)
!20775 = !DILocalVariable(name: "w", arg: 2, scope: !20763, file: !3, line: 2994, type: !7857)
!20776 = !DILocation(line: 2994, column: 70, scope: !20763)
!20777 = !DILocation(line: 2996, column: 2, scope: !20763)
!20778 = !DILocation(line: 2996, column: 2, scope: !20770)
!20779 = !DILocation(line: 2996, column: 2, scope: !20769)
!20780 = !DILocation(line: 2996, column: 2, scope: !20781)
!20781 = distinct !DILexicalBlock(scope: !20769, file: !3, line: 2996, column: 2)
!20782 = !DILocation(line: 2996, column: 2, scope: !20768)
!20783 = !{i32 -2139505893}
!20784 = !DILocation(line: 2997, column: 18, scope: !20763)
!20785 = !DILocation(line: 2997, column: 21, scope: !20763)
!20786 = !DILocation(line: 2997, column: 25, scope: !20763)
!20787 = !DILocation(line: 2997, column: 28, scope: !20763)
!20788 = !DILocation(line: 2997, column: 2, scope: !20763)
!20789 = !DILocation(line: 2998, column: 13, scope: !20763)
!20790 = !DILocation(line: 2998, column: 12, scope: !20763)
!20791 = !DILocation(line: 2998, column: 2, scope: !20763)
!20792 = !DILocation(line: 2998, column: 5, scope: !20763)
!20793 = !DILocation(line: 2998, column: 10, scope: !20763)
!20794 = !DILocation(line: 2999, column: 10, scope: !20763)
!20795 = !DILocation(line: 2999, column: 3, scope: !20763)
!20796 = !DILocation(line: 2999, column: 8, scope: !20763)
!20797 = !DILocation(line: 3000, column: 1, scope: !20763)
!20798 = distinct !DISubprogram(name: "remove_cond_wait", scope: !3, file: !3, line: 3002, type: !20764, scopeLine: 3003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20799 = !DILocation(line: 15, column: 9, scope: !17941, inlinedAt: !20800)
!20800 = distinct !DILocation(line: 3006, column: 2, scope: !20801)
!20801 = distinct !DILexicalBlock(scope: !20802, file: !3, line: 3006, column: 2)
!20802 = distinct !DILexicalBlock(scope: !20803, file: !3, line: 3006, column: 2)
!20803 = distinct !DILexicalBlock(scope: !20798, file: !3, line: 3006, column: 2)
!20804 = !DILocation(line: 15, column: 9, scope: !17951, inlinedAt: !20800)
!20805 = !DILocation(line: 15, column: 9, scope: !17954, inlinedAt: !20800)
!20806 = !DILocalVariable(name: "head", arg: 1, scope: !20798, file: !3, line: 3002, type: !14252)
!20807 = !DILocation(line: 3002, column: 49, scope: !20798)
!20808 = !DILocalVariable(name: "cw", arg: 2, scope: !20798, file: !3, line: 3002, type: !7857)
!20809 = !DILocation(line: 3002, column: 73, scope: !20798)
!20810 = !DILocalVariable(name: "w", scope: !20798, file: !3, line: 3004, type: !7857)
!20811 = !DILocation(line: 3004, column: 20, scope: !20798)
!20812 = !DILocalVariable(name: "prev", scope: !20798, file: !3, line: 3004, type: !7857)
!20813 = !DILocation(line: 3004, column: 24, scope: !20798)
!20814 = !DILocation(line: 3005, column: 21, scope: !20798)
!20815 = !DILocation(line: 3005, column: 25, scope: !20798)
!20816 = !DILocation(line: 3005, column: 29, scope: !20798)
!20817 = !DILocation(line: 3005, column: 33, scope: !20798)
!20818 = !DILocation(line: 3005, column: 2, scope: !20798)
!20819 = !DILocation(line: 3006, column: 2, scope: !20798)
!20820 = !DILocation(line: 3006, column: 2, scope: !20803)
!20821 = !DILocation(line: 3006, column: 2, scope: !20802)
!20822 = !DILocation(line: 3006, column: 2, scope: !20823)
!20823 = distinct !DILexicalBlock(scope: !20802, file: !3, line: 3006, column: 2)
!20824 = !DILocation(line: 3006, column: 2, scope: !20801)
!20825 = !{i32 -2139504238}
!20826 = !DILocation(line: 3007, column: 12, scope: !20827)
!20827 = distinct !DILexicalBlock(scope: !20798, file: !3, line: 3007, column: 2)
!20828 = !DILocation(line: 3007, column: 11, scope: !20827)
!20829 = !DILocation(line: 3007, column: 9, scope: !20827)
!20830 = !DILocation(line: 3007, column: 23, scope: !20827)
!20831 = !DILocation(line: 3007, column: 7, scope: !20827)
!20832 = !DILocation(line: 3007, column: 32, scope: !20833)
!20833 = distinct !DILexicalBlock(scope: !20827, file: !3, line: 3007, column: 2)
!20834 = !DILocation(line: 3007, column: 34, scope: !20833)
!20835 = !DILocation(line: 3007, column: 2, scope: !20827)
!20836 = !DILocation(line: 3008, column: 7, scope: !20837)
!20837 = distinct !DILexicalBlock(scope: !20838, file: !3, line: 3008, column: 7)
!20838 = distinct !DILexicalBlock(scope: !20833, file: !3, line: 3007, column: 67)
!20839 = !DILocation(line: 3008, column: 12, scope: !20837)
!20840 = !DILocation(line: 3008, column: 9, scope: !20837)
!20841 = !DILocation(line: 3008, column: 7, scope: !20838)
!20842 = !DILocation(line: 3009, column: 8, scope: !20843)
!20843 = distinct !DILexicalBlock(scope: !20844, file: !3, line: 3009, column: 8)
!20844 = distinct !DILexicalBlock(scope: !20837, file: !3, line: 3008, column: 16)
!20845 = !DILocation(line: 3009, column: 13, scope: !20843)
!20846 = !DILocation(line: 3009, column: 8, scope: !20844)
!20847 = !DILocation(line: 3010, column: 18, scope: !20843)
!20848 = !DILocation(line: 3010, column: 21, scope: !20843)
!20849 = !DILocation(line: 3010, column: 5, scope: !20843)
!20850 = !DILocation(line: 3010, column: 11, scope: !20843)
!20851 = !DILocation(line: 3010, column: 16, scope: !20843)
!20852 = !DILocation(line: 3012, column: 13, scope: !20843)
!20853 = !DILocation(line: 3012, column: 16, scope: !20843)
!20854 = !DILocation(line: 3012, column: 6, scope: !20843)
!20855 = !DILocation(line: 3012, column: 11, scope: !20843)
!20856 = !DILocation(line: 3013, column: 4, scope: !20844)
!20857 = !DILocation(line: 3015, column: 2, scope: !20838)
!20858 = !DILocation(line: 3007, column: 51, scope: !20833)
!20859 = !DILocation(line: 3007, column: 49, scope: !20833)
!20860 = !DILocation(line: 3007, column: 58, scope: !20833)
!20861 = !DILocation(line: 3007, column: 61, scope: !20833)
!20862 = !DILocation(line: 3007, column: 56, scope: !20833)
!20863 = !DILocation(line: 3007, column: 2, scope: !20833)
!20864 = distinct !{!20864, !20835, !20865}
!20865 = !DILocation(line: 3015, column: 2, scope: !20827)
!20866 = !DILocation(line: 3016, column: 1, scope: !20798)
!20867 = distinct !DISubprogram(name: "init_waitqueue_entry", scope: !1890, file: !1890, line: 81, type: !20868, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20868 = !DISubroutineType(types: !20869)
!20869 = !{null, !7873, !2326}
!20870 = !DILocalVariable(name: "wq_entry", arg: 1, scope: !20867, file: !1890, line: 81, type: !7873)
!20871 = !DILocation(line: 81, column: 66, scope: !20867)
!20872 = !DILocalVariable(name: "p", arg: 2, scope: !20867, file: !1890, line: 81, type: !2326)
!20873 = !DILocation(line: 81, column: 96, scope: !20867)
!20874 = !DILocation(line: 83, column: 2, scope: !20867)
!20875 = !DILocation(line: 83, column: 12, scope: !20867)
!20876 = !DILocation(line: 83, column: 19, scope: !20867)
!20877 = !DILocation(line: 84, column: 22, scope: !20867)
!20878 = !DILocation(line: 84, column: 2, scope: !20867)
!20879 = !DILocation(line: 84, column: 12, scope: !20867)
!20880 = !DILocation(line: 84, column: 20, scope: !20867)
!20881 = !DILocation(line: 85, column: 2, scope: !20867)
!20882 = !DILocation(line: 85, column: 12, scope: !20867)
!20883 = !DILocation(line: 85, column: 18, scope: !20867)
!20884 = !DILocation(line: 86, column: 1, scope: !20867)
!20885 = distinct !DISubprogram(name: "tty_throttled", scope: !3762, file: !3762, line: 404, type: !18628, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20886 = !DILocalVariable(name: "tty", arg: 1, scope: !20885, file: !3762, line: 404, type: !3760)
!20887 = !DILocation(line: 404, column: 53, scope: !20885)
!20888 = !DILocation(line: 406, column: 34, scope: !20885)
!20889 = !DILocation(line: 406, column: 39, scope: !20885)
!20890 = !DILocation(line: 406, column: 9, scope: !20885)
!20891 = !DILocation(line: 406, column: 2, scope: !20885)
!20892 = distinct !DISubprogram(name: "line_info", scope: !3, file: !3, line: 1229, type: !20893, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1587)
!20893 = !DISubroutineType(types: !20894)
!20894 = !{null, !1653, !7530}
!20895 = !DILocation(line: 407, column: 64, scope: !10115, inlinedAt: !20896)
!20896 = distinct !DILocation(line: 1241, column: 2, scope: !20892)
!20897 = !DILocation(line: 407, column: 84, scope: !10115, inlinedAt: !20896)
!20898 = !DILocation(line: 327, column: 67, scope: !8903, inlinedAt: !20899)
!20899 = distinct !DILocation(line: 1239, column: 2, scope: !20900)
!20900 = distinct !DILexicalBlock(scope: !20901, file: !3, line: 1239, column: 2)
!20901 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 1239, column: 2)
!20902 = distinct !DILexicalBlock(scope: !20903, file: !3, line: 1239, column: 2)
!20903 = distinct !DILexicalBlock(scope: !20904, file: !3, line: 1239, column: 2)
!20904 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1239, column: 2)
!20905 = !DILocalVariable(name: "m", arg: 1, scope: !20892, file: !3, line: 1229, type: !1653)
!20906 = !DILocation(line: 1229, column: 47, scope: !20892)
!20907 = !DILocalVariable(name: "info", arg: 2, scope: !20892, file: !3, line: 1229, type: !7530)
!20908 = !DILocation(line: 1229, column: 68, scope: !20892)
!20909 = !DILocalVariable(name: "stat_buf", scope: !20892, file: !3, line: 1231, type: !20910)
!20910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 240, elements: !20911)
!20911 = !{!20912}
!20912 = !DISubrange(count: 30)
!20913 = !DILocation(line: 1231, column: 7, scope: !20892)
!20914 = !DILocalVariable(name: "flags", scope: !20892, file: !3, line: 1232, type: !312)
!20915 = !DILocation(line: 1232, column: 16, scope: !20892)
!20916 = !DILocation(line: 1234, column: 13, scope: !20892)
!20917 = !DILocation(line: 1235, column: 9, scope: !20892)
!20918 = !DILocation(line: 1235, column: 15, scope: !20892)
!20919 = !DILocation(line: 1235, column: 28, scope: !20892)
!20920 = !DILocation(line: 1235, column: 34, scope: !20892)
!20921 = !DILocation(line: 1236, column: 9, scope: !20892)
!20922 = !DILocation(line: 1236, column: 15, scope: !20892)
!20923 = !DILocation(line: 1236, column: 26, scope: !20892)
!20924 = !DILocation(line: 1236, column: 32, scope: !20892)
!20925 = !DILocation(line: 1234, column: 2, scope: !20892)
!20926 = !DILocation(line: 1239, column: 2, scope: !20892)
!20927 = !DILocation(line: 1239, column: 2, scope: !20904)
!20928 = !DILocalVariable(name: "__dummy", scope: !20929, file: !3, line: 1239, type: !312)
!20929 = distinct !DILexicalBlock(scope: !20903, file: !3, line: 1239, column: 2)
!20930 = !DILocation(line: 1239, column: 2, scope: !20929)
!20931 = !DILocalVariable(name: "__dummy2", scope: !20929, file: !3, line: 1239, type: !312)
!20932 = !DILocation(line: 1239, column: 2, scope: !20903)
!20933 = !DILocation(line: 1239, column: 2, scope: !20902)
!20934 = !DILocation(line: 1239, column: 2, scope: !20935)
!20935 = distinct !DILexicalBlock(scope: !20902, file: !3, line: 1239, column: 2)
!20936 = !DILocalVariable(name: "__dummy", scope: !20937, file: !3, line: 1239, type: !312)
!20937 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 1239, column: 2)
!20938 = distinct !DILexicalBlock(scope: !20935, file: !3, line: 1239, column: 2)
!20939 = !DILocation(line: 1239, column: 2, scope: !20937)
!20940 = !DILocalVariable(name: "__dummy2", scope: !20937, file: !3, line: 1239, type: !312)
!20941 = !DILocation(line: 1239, column: 2, scope: !20938)
!20942 = !DILocation(line: 1239, column: 2, scope: !20901)
!20943 = !{i32 -2139556640}
!20944 = !DILocation(line: 1239, column: 2, scope: !20900)
!20945 = !DILocation(line: 329, column: 10, scope: !8903, inlinedAt: !20899)
!20946 = !DILocation(line: 329, column: 16, scope: !8903, inlinedAt: !20899)
!20947 = !DILocation(line: 1240, column: 14, scope: !20892)
!20948 = !DILocation(line: 1240, column: 2, scope: !20892)
!20949 = !DILocation(line: 1241, column: 26, scope: !20892)
!20950 = !DILocation(line: 1241, column: 32, scope: !20892)
!20951 = !DILocation(line: 1241, column: 37, scope: !20892)
!20952 = !DILocation(line: 409, column: 2, scope: !10185, inlinedAt: !20896)
!20953 = !DILocation(line: 409, column: 2, scope: !10190, inlinedAt: !20896)
!20954 = !DILocation(line: 409, column: 2, scope: !10191, inlinedAt: !20896)
!20955 = !DILocation(line: 409, column: 2, scope: !10198, inlinedAt: !20896)
!20956 = !DILocation(line: 409, column: 2, scope: !10201, inlinedAt: !20896)
!20957 = !DILocation(line: 1243, column: 2, scope: !20892)
!20958 = !DILocation(line: 1243, column: 14, scope: !20892)
!20959 = !DILocation(line: 1244, column: 2, scope: !20892)
!20960 = !DILocation(line: 1244, column: 14, scope: !20892)
!20961 = !DILocation(line: 1245, column: 6, scope: !20962)
!20962 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1245, column: 6)
!20963 = !DILocation(line: 1245, column: 12, scope: !20962)
!20964 = !DILocation(line: 1245, column: 20, scope: !20962)
!20965 = !DILocation(line: 1245, column: 6, scope: !20892)
!20966 = !DILocation(line: 1246, column: 10, scope: !20962)
!20967 = !DILocation(line: 1246, column: 3, scope: !20962)
!20968 = !DILocation(line: 1247, column: 6, scope: !20969)
!20969 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1247, column: 6)
!20970 = !DILocation(line: 1247, column: 12, scope: !20969)
!20971 = !DILocation(line: 1247, column: 20, scope: !20969)
!20972 = !DILocation(line: 1247, column: 6, scope: !20892)
!20973 = !DILocation(line: 1248, column: 10, scope: !20969)
!20974 = !DILocation(line: 1248, column: 3, scope: !20969)
!20975 = !DILocation(line: 1249, column: 6, scope: !20976)
!20976 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1249, column: 6)
!20977 = !DILocation(line: 1249, column: 12, scope: !20976)
!20978 = !DILocation(line: 1249, column: 20, scope: !20976)
!20979 = !DILocation(line: 1249, column: 6, scope: !20892)
!20980 = !DILocation(line: 1250, column: 10, scope: !20976)
!20981 = !DILocation(line: 1250, column: 3, scope: !20976)
!20982 = !DILocation(line: 1251, column: 6, scope: !20983)
!20983 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1251, column: 6)
!20984 = !DILocation(line: 1251, column: 12, scope: !20983)
!20985 = !DILocation(line: 1251, column: 20, scope: !20983)
!20986 = !DILocation(line: 1251, column: 6, scope: !20892)
!20987 = !DILocation(line: 1252, column: 10, scope: !20983)
!20988 = !DILocation(line: 1252, column: 3, scope: !20983)
!20989 = !DILocation(line: 1253, column: 6, scope: !20990)
!20990 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1253, column: 6)
!20991 = !DILocation(line: 1253, column: 12, scope: !20990)
!20992 = !DILocation(line: 1253, column: 20, scope: !20990)
!20993 = !DILocation(line: 1253, column: 6, scope: !20892)
!20994 = !DILocation(line: 1254, column: 10, scope: !20990)
!20995 = !DILocation(line: 1254, column: 3, scope: !20990)
!20996 = !DILocation(line: 1255, column: 6, scope: !20997)
!20997 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1255, column: 6)
!20998 = !DILocation(line: 1255, column: 12, scope: !20997)
!20999 = !DILocation(line: 1255, column: 20, scope: !20997)
!21000 = !DILocation(line: 1255, column: 6, scope: !20892)
!21001 = !DILocation(line: 1256, column: 10, scope: !20997)
!21002 = !DILocation(line: 1256, column: 3, scope: !20997)
!21003 = !DILocation(line: 1258, column: 6, scope: !21004)
!21004 = distinct !DILexicalBlock(scope: !20892, file: !3, line: 1258, column: 6)
!21005 = !DILocation(line: 1258, column: 12, scope: !21004)
!21006 = !DILocation(line: 1258, column: 19, scope: !21004)
!21007 = !DILocation(line: 1258, column: 24, scope: !21004)
!21008 = !DILocation(line: 1258, column: 6, scope: !20892)
!21009 = !DILocation(line: 1259, column: 14, scope: !21010)
!21010 = distinct !DILexicalBlock(scope: !21004, file: !3, line: 1258, column: 44)
!21011 = !DILocation(line: 1260, column: 11, scope: !21010)
!21012 = !DILocation(line: 1260, column: 17, scope: !21010)
!21013 = !DILocation(line: 1260, column: 24, scope: !21010)
!21014 = !DILocation(line: 1260, column: 30, scope: !21010)
!21015 = !DILocation(line: 1260, column: 36, scope: !21010)
!21016 = !DILocation(line: 1260, column: 43, scope: !21010)
!21017 = !DILocation(line: 1259, column: 3, scope: !21010)
!21018 = !DILocation(line: 1261, column: 7, scope: !21019)
!21019 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1261, column: 7)
!21020 = !DILocation(line: 1261, column: 13, scope: !21019)
!21021 = !DILocation(line: 1261, column: 20, scope: !21019)
!21022 = !DILocation(line: 1261, column: 7, scope: !21010)
!21023 = !DILocation(line: 1262, column: 15, scope: !21019)
!21024 = !DILocation(line: 1262, column: 33, scope: !21019)
!21025 = !DILocation(line: 1262, column: 39, scope: !21019)
!21026 = !DILocation(line: 1262, column: 46, scope: !21019)
!21027 = !DILocation(line: 1262, column: 4, scope: !21019)
!21028 = !DILocation(line: 1263, column: 7, scope: !21029)
!21029 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1263, column: 7)
!21030 = !DILocation(line: 1263, column: 13, scope: !21029)
!21031 = !DILocation(line: 1263, column: 20, scope: !21029)
!21032 = !DILocation(line: 1263, column: 7, scope: !21010)
!21033 = !DILocation(line: 1264, column: 15, scope: !21029)
!21034 = !DILocation(line: 1264, column: 33, scope: !21029)
!21035 = !DILocation(line: 1264, column: 39, scope: !21029)
!21036 = !DILocation(line: 1264, column: 46, scope: !21029)
!21037 = !DILocation(line: 1264, column: 4, scope: !21029)
!21038 = !DILocation(line: 1265, column: 7, scope: !21039)
!21039 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1265, column: 7)
!21040 = !DILocation(line: 1265, column: 13, scope: !21039)
!21041 = !DILocation(line: 1265, column: 20, scope: !21039)
!21042 = !DILocation(line: 1265, column: 7, scope: !21010)
!21043 = !DILocation(line: 1266, column: 15, scope: !21039)
!21044 = !DILocation(line: 1266, column: 33, scope: !21039)
!21045 = !DILocation(line: 1266, column: 39, scope: !21039)
!21046 = !DILocation(line: 1266, column: 46, scope: !21039)
!21047 = !DILocation(line: 1266, column: 4, scope: !21039)
!21048 = !DILocation(line: 1267, column: 7, scope: !21049)
!21049 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1267, column: 7)
!21050 = !DILocation(line: 1267, column: 13, scope: !21049)
!21051 = !DILocation(line: 1267, column: 20, scope: !21049)
!21052 = !DILocation(line: 1267, column: 7, scope: !21010)
!21053 = !DILocation(line: 1268, column: 15, scope: !21049)
!21054 = !DILocation(line: 1268, column: 32, scope: !21049)
!21055 = !DILocation(line: 1268, column: 38, scope: !21049)
!21056 = !DILocation(line: 1268, column: 45, scope: !21049)
!21057 = !DILocation(line: 1268, column: 4, scope: !21049)
!21058 = !DILocation(line: 1269, column: 7, scope: !21059)
!21059 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1269, column: 7)
!21060 = !DILocation(line: 1269, column: 13, scope: !21059)
!21061 = !DILocation(line: 1269, column: 20, scope: !21059)
!21062 = !DILocation(line: 1269, column: 7, scope: !21010)
!21063 = !DILocation(line: 1270, column: 15, scope: !21059)
!21064 = !DILocation(line: 1270, column: 32, scope: !21059)
!21065 = !DILocation(line: 1270, column: 38, scope: !21059)
!21066 = !DILocation(line: 1270, column: 45, scope: !21059)
!21067 = !DILocation(line: 1270, column: 4, scope: !21059)
!21068 = !DILocation(line: 1271, column: 7, scope: !21069)
!21069 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 1271, column: 7)
!21070 = !DILocation(line: 1271, column: 13, scope: !21069)
!21071 = !DILocation(line: 1271, column: 20, scope: !21069)
!21072 = !DILocation(line: 1271, column: 7, scope: !21010)
!21073 = !DILocation(line: 1272, column: 15, scope: !21069)
!21074 = !DILocation(line: 1272, column: 31, scope: !21069)
!21075 = !DILocation(line: 1272, column: 37, scope: !21069)
!21076 = !DILocation(line: 1272, column: 44, scope: !21069)
!21077 = !DILocation(line: 1272, column: 4, scope: !21069)
!21078 = !DILocation(line: 1273, column: 2, scope: !21010)
!21079 = !DILocation(line: 1274, column: 14, scope: !21080)
!21080 = distinct !DILexicalBlock(scope: !21004, file: !3, line: 1273, column: 9)
!21081 = !DILocation(line: 1275, column: 11, scope: !21080)
!21082 = !DILocation(line: 1275, column: 17, scope: !21080)
!21083 = !DILocation(line: 1275, column: 24, scope: !21080)
!21084 = !DILocation(line: 1275, column: 28, scope: !21080)
!21085 = !DILocation(line: 1275, column: 34, scope: !21080)
!21086 = !DILocation(line: 1275, column: 41, scope: !21080)
!21087 = !DILocation(line: 1274, column: 3, scope: !21080)
!21088 = !DILocation(line: 1276, column: 7, scope: !21089)
!21089 = distinct !DILexicalBlock(scope: !21080, file: !3, line: 1276, column: 7)
!21090 = !DILocation(line: 1276, column: 13, scope: !21089)
!21091 = !DILocation(line: 1276, column: 20, scope: !21089)
!21092 = !DILocation(line: 1276, column: 7, scope: !21080)
!21093 = !DILocation(line: 1277, column: 15, scope: !21089)
!21094 = !DILocation(line: 1277, column: 28, scope: !21089)
!21095 = !DILocation(line: 1277, column: 34, scope: !21089)
!21096 = !DILocation(line: 1277, column: 41, scope: !21089)
!21097 = !DILocation(line: 1277, column: 4, scope: !21089)
!21098 = !DILocation(line: 1278, column: 7, scope: !21099)
!21099 = distinct !DILexicalBlock(scope: !21080, file: !3, line: 1278, column: 7)
!21100 = !DILocation(line: 1278, column: 13, scope: !21099)
!21101 = !DILocation(line: 1278, column: 20, scope: !21099)
!21102 = !DILocation(line: 1278, column: 7, scope: !21080)
!21103 = !DILocation(line: 1279, column: 15, scope: !21099)
!21104 = !DILocation(line: 1279, column: 28, scope: !21099)
!21105 = !DILocation(line: 1279, column: 34, scope: !21099)
!21106 = !DILocation(line: 1279, column: 41, scope: !21099)
!21107 = !DILocation(line: 1279, column: 4, scope: !21099)
!21108 = !DILocation(line: 1280, column: 7, scope: !21109)
!21109 = distinct !DILexicalBlock(scope: !21080, file: !3, line: 1280, column: 7)
!21110 = !DILocation(line: 1280, column: 13, scope: !21109)
!21111 = !DILocation(line: 1280, column: 20, scope: !21109)
!21112 = !DILocation(line: 1280, column: 7, scope: !21080)
!21113 = !DILocation(line: 1281, column: 15, scope: !21109)
!21114 = !DILocation(line: 1281, column: 29, scope: !21109)
!21115 = !DILocation(line: 1281, column: 35, scope: !21109)
!21116 = !DILocation(line: 1281, column: 42, scope: !21109)
!21117 = !DILocation(line: 1281, column: 4, scope: !21109)
!21118 = !DILocation(line: 1282, column: 7, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21080, file: !3, line: 1282, column: 7)
!21120 = !DILocation(line: 1282, column: 13, scope: !21119)
!21121 = !DILocation(line: 1282, column: 20, scope: !21119)
!21122 = !DILocation(line: 1282, column: 7, scope: !21080)
!21123 = !DILocation(line: 1283, column: 15, scope: !21119)
!21124 = !DILocation(line: 1283, column: 28, scope: !21119)
!21125 = !DILocation(line: 1283, column: 34, scope: !21119)
!21126 = !DILocation(line: 1283, column: 41, scope: !21119)
!21127 = !DILocation(line: 1283, column: 4, scope: !21119)
!21128 = !DILocation(line: 1287, column: 13, scope: !20892)
!21129 = !DILocation(line: 1287, column: 25, scope: !20892)
!21130 = !DILocation(line: 1287, column: 33, scope: !20892)
!21131 = !DILocation(line: 1287, column: 2, scope: !20892)
!21132 = !DILocation(line: 1289, column: 13, scope: !20892)
!21133 = !DILocation(line: 1290, column: 10, scope: !20892)
!21134 = !DILocation(line: 1290, column: 16, scope: !20892)
!21135 = !DILocation(line: 1290, column: 26, scope: !20892)
!21136 = !DILocation(line: 1290, column: 32, scope: !20892)
!21137 = !DILocation(line: 1290, column: 45, scope: !20892)
!21138 = !DILocation(line: 1290, column: 51, scope: !20892)
!21139 = !DILocation(line: 1291, column: 10, scope: !20892)
!21140 = !DILocation(line: 1291, column: 16, scope: !20892)
!21141 = !DILocation(line: 1289, column: 2, scope: !20892)
!21142 = !DILocation(line: 1292, column: 1, scope: !20892)
