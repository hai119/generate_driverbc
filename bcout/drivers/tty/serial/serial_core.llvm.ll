; ModuleID = '../bcout/drivers/tty/serial/serial_core.llvm.bc'
source_filename = "drivers/tty/serial/serial_core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.3, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%union.anon.53 = type { %struct.atomic_t }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.atomic64_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.0, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.0 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.uart_port = type { %struct.spinlock, i64, i8*, i32 (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, i32, i32*)*, void (%struct.uart_port*, i32, i32, i32)*, i32 (%struct.uart_port*)*, {}*, {}*, {}*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32, i32)*, {}*, i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_iso7816*)*, i32, i64, i32, i32, i8, i8, i8, i8, i32, i32, %struct.uart_state*, %struct.uart_icount, %struct.console*, i32, i32, i32, i32, i32, i32, %struct.uart_ops*, i32, i32, i32, i64, i64, %struct.device*, i64, i32, i8, i8, i8, i8, i8, i8*, %struct.attribute_group*, %struct.attribute_group**, %struct.serial_rs485, %struct.gpio_desc*, %struct.serial_iso7816, i8* }
%struct.uart_state = type { %struct.tty_port, i32, %struct.circ_buf, %struct.atomic_t, %struct.wait_queue_head, %struct.uart_port* }
%struct.circ_buf = type { i8*, i32, i32 }
%struct.uart_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.console = type { [16 x i8], void (%struct.console*, i8*, i32)*, i32 (%struct.console*, i8*, i32)*, %struct.tty_driver* (%struct.console*, i32*)*, void ()*, i32 (%struct.console*, i8*)*, i32 (%struct.console*)*, i32 (%struct.console*, i8*, i32, i8*)*, i16, i16, i32, i8*, %struct.console* }
%struct.uart_ops = type { i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*)*, {}*, {}*, {}*, {}*, void (%struct.uart_port*, i8)*, {}*, {}*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*)*, {}*, {}*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, i32, i32)*, i8* (%struct.uart_port*)*, {}*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, %struct.serial_struct*)*, i32 (%struct.uart_port*, i32, i64)* }
%struct.serial_rs485 = type { i32, i32, i32, [5 x i32] }
%struct.gpio_desc = type opaque
%struct.serial_iso7816 = type { i32, i32, i32, i32, i32, [5 x i32] }
%struct.uart_driver = type { %struct.module*, i8*, i8*, i32, i32, i32, %struct.console*, %struct.uart_state*, %struct.tty_driver* }
%struct.uart_match = type { %struct.uart_port*, %struct.uart_driver* }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }

@.str = private unnamed_addr constant [33 x i8] c"drivers/tty/serial/serial_core.c\00", align 1
@console_suspend_enabled = external dso_local global i8, align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"%s: Unable to drain transmitter\0A\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@uart_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* @uart_install, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @uart_open, void (%struct.tty_struct*, %struct.file*)* @uart_close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @uart_write, i32 (%struct.tty_struct*, i8)* @uart_put_char, void (%struct.tty_struct*)* @uart_flush_chars, i32 (%struct.tty_struct*)* @uart_write_room, i32 (%struct.tty_struct*)* @uart_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @uart_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @uart_set_termios, void (%struct.tty_struct*)* @uart_throttle, void (%struct.tty_struct*)* @uart_unthrottle, void (%struct.tty_struct*)* @uart_stop, void (%struct.tty_struct*)* @uart_start, void (%struct.tty_struct*)* @uart_hangup, i32 (%struct.tty_struct*, i32)* @uart_break_ctl, void (%struct.tty_struct*)* @uart_flush_buffer, void (%struct.tty_struct*)* @uart_set_ldisc, void (%struct.tty_struct*, i32)* @uart_wait_until_sent, void (%struct.tty_struct*, i8)* @uart_send_xchar, i32 (%struct.tty_struct*)* @uart_tiocmget, i32 (%struct.tty_struct*, i32, i32)* @uart_tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* @uart_get_icount, i32 (%struct.tty_struct*, %struct.serial_struct*)* @uart_get_info_user, i32 (%struct.tty_struct*, %struct.serial_struct*)* @uart_set_info_user, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* @uart_proc_show }, align 8, !dbg !0
@uart_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @uart_carrier_raised, void (%struct.tty_port*, i32)* @uart_dtr_rts, void (%struct.tty_port*)* @uart_tty_port_shutdown, i32 (%struct.tty_port*, %struct.tty_struct*)* @uart_port_activate, void (%struct.tty_port*)* null }, align 8, !dbg !4535
@port_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @port_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @port_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4537
@uart_add_one_port.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4498
@.str.2 = private unnamed_addr constant [20 x i8] c"&state->remove_wait\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@tty_dev_attr_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([15 x %struct.attribute*], [15 x %struct.attribute*]* @tty_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4541
@.str.4 = private unnamed_addr constant [39 x i8] c"Cannot register tty device on line %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"Removing wrong port: %p != %p\0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"rs485-rts-delay\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"rs485-rx-during-tx\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"linux,rs485-enabled-at-boot-time\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"rs485-rts-active-low\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"rs485-term\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Cannot get rs485-term-gpios\0A\00", align 1
@__UNIQUE_ID_description251 = internal constant [43 x i8] c"serial_core.description=Serial driver core\00", section ".modinfo", align 1, !dbg !4515
@__UNIQUE_ID_file252 = internal constant [48 x i8] c"serial_core.file=drivers/tty/serial/serial_core\00", section ".modinfo", align 1, !dbg !4520
@__UNIQUE_ID_license253 = internal constant [24 x i8] c"serial_core.license=GPL\00", section ".modinfo", align 1, !dbg !4525
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.12 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.13 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"hangup of detached port!\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@nr_irqs = external dso_local global i32, align 4
@uart_set_info._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4530
@__func__.uart_set_info = private unnamed_addr constant [14 x i8] c"uart_set_info\00", align 1
@.str.16 = private unnamed_addr constant [49 x i8] c"%s sets custom speed on %s. This is deprecated.\0A\00", align 1
@.str.17 = private unnamed_addr constant [36 x i8] c"serinfo:1.0 driver%s%s revision:%s\0A\00", align 1
@.str.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.19 = private unnamed_addr constant [28 x i8] c"%d: uart:%s %s%08llX irq:%d\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"mmio:0x\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"port:\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c" tx:%d rx:%d\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c" fe:%d\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c" pe:%d\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c" brk:%d\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c" oe:%d\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c" bo:%d\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"|RTS\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"|CTS\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"|DTR\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"|DSR\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"|CD\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"|RI\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"detached port still initialized!\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@port_lock_key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4539
@.str.36 = private unnamed_addr constant [10 x i8] c"I/O 0x%lx\00", align 1
@.str.37 = private unnamed_addr constant [22 x i8] c"I/O 0x%lx offset 0x%x\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"MMIO 0x%llx\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"*unknown*\00", align 1
@.str.40 = private unnamed_addr constant [51 x i8] c"\016%s%s%s at %s (irq = %d, base_baud = %d) is a %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c": \00", align 1
@tty_dev_attrs = internal global [15 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_uartclk, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_type, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_line, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_port, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_irq, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_flags, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_xmit_fifo_size, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_close_delay, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_closing_wait, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_custom_divisor, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_io_type, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_iomem_base, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_iomem_reg_shift, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_console, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4543
@dev_attr_uartclk = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @uartclk_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4548
@dev_attr_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @type_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4562
@dev_attr_line = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @line_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4564
@dev_attr_port = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @port_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4566
@dev_attr_irq = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @irq_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4568
@dev_attr_flags = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @flags_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4570
@dev_attr_xmit_fifo_size = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @xmit_fifo_size_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4572
@dev_attr_close_delay = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @close_delay_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4574
@dev_attr_closing_wait = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @closing_wait_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4576
@dev_attr_custom_divisor = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @custom_divisor_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4578
@dev_attr_io_type = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @io_type_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4580
@dev_attr_iomem_base = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.56, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @iomem_base_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4582
@dev_attr_iomem_reg_shift = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @iomem_reg_shift_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4584
@dev_attr_console = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @console_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @console_store }, align 8, !dbg !4586
@.str.42 = private unnamed_addr constant [8 x i8] c"uartclk\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"0x%lX\0A\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"irq\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"0x%X\0A\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"xmit_fifo_size\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"close_delay\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"closing_wait\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"custom_divisor\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"io_type\00", align 1
@.str.56 = private unnamed_addr constant [11 x i8] c"iomem_base\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"iomem_reg_shift\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"console\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"%c\0A\00", align 1
@llvm.used = appending global [3 x i8*] [i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_description251, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_file252, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_license253, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_write_wakeup(%struct.uart_port* %port) #0 !dbg !4594 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !4597, metadata !DIExpression()), !dbg !4598
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4599
  %state1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !4600
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !4600
  store %struct.uart_state* %1, %struct.uart_state** %state, align 8, !dbg !4598
  br label %do.body, !dbg !4601

do.body:                                          ; preds = %entry
  %2 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !4602
  %tobool = icmp ne %struct.uart_state* %2, null, !dbg !4602
  %lnot = xor i1 %tobool, true, !dbg !4602
  %lnot2 = xor i1 %lnot, true, !dbg !4602
  %lnot3 = xor i1 %lnot2, true, !dbg !4602
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4602
  %conv = sext i32 %lnot.ext to i64, !dbg !4602
  %tobool4 = icmp ne i64 %conv, 0, !dbg !4602
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4605

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !4602

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !4606

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !4608

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !4606

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 105, i32 0, i64 12) #7, !dbg !4610, !srcloc !4612
  br label %do.end8, !dbg !4610

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !4606

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 231) #7, !dbg !4613, !srcloc !4616
  unreachable, !dbg !4617

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !4606

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !4606

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !4605

do.end12:                                         ; preds = %if.end
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !4618
  %port13 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !4619
  call void @tty_port_tty_wakeup(%struct.tty_port* %port13) #10, !dbg !4620
  ret void, !dbg !4621
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_wakeup(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_update_timeout(%struct.uart_port* %port, i32 %cflag, i32 %baud) #0 !dbg !4622 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %cflag.addr = alloca i32, align 4
  %baud.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !4623, metadata !DIExpression()), !dbg !4624
  store i32 %cflag, i32* %cflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cflag.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !4629, metadata !DIExpression()), !dbg !4630
  %0 = load i32, i32* %cflag.addr, align 4, !dbg !4631
  %and = and i32 %0, 48, !dbg !4632
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb1
    i32 32, label %sw.bb2
  ], !dbg !4633

sw.bb:                                            ; preds = %entry
  store i32 7, i32* %bits, align 4, !dbg !4634
  br label %sw.epilog, !dbg !4636

sw.bb1:                                           ; preds = %entry
  store i32 8, i32* %bits, align 4, !dbg !4637
  br label %sw.epilog, !dbg !4638

sw.bb2:                                           ; preds = %entry
  store i32 9, i32* %bits, align 4, !dbg !4639
  br label %sw.epilog, !dbg !4640

sw.default:                                       ; preds = %entry
  store i32 10, i32* %bits, align 4, !dbg !4641
  br label %sw.epilog, !dbg !4642

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %cflag.addr, align 4, !dbg !4643
  %and3 = and i32 %1, 64, !dbg !4645
  %tobool = icmp ne i32 %and3, 0, !dbg !4645
  br i1 %tobool, label %if.then, label %if.end, !dbg !4646

if.then:                                          ; preds = %sw.epilog
  %2 = load i32, i32* %bits, align 4, !dbg !4647
  %inc = add i32 %2, 1, !dbg !4647
  store i32 %inc, i32* %bits, align 4, !dbg !4647
  br label %if.end, !dbg !4648

if.end:                                           ; preds = %if.then, %sw.epilog
  %3 = load i32, i32* %cflag.addr, align 4, !dbg !4649
  %and4 = and i32 %3, 256, !dbg !4651
  %tobool5 = icmp ne i32 %and4, 0, !dbg !4651
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4652

if.then6:                                         ; preds = %if.end
  %4 = load i32, i32* %bits, align 4, !dbg !4653
  %inc7 = add i32 %4, 1, !dbg !4653
  store i32 %inc7, i32* %bits, align 4, !dbg !4653
  br label %if.end8, !dbg !4654

if.end8:                                          ; preds = %if.then6, %if.end
  %5 = load i32, i32* %bits, align 4, !dbg !4655
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4656
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 23, !dbg !4657
  %7 = load i32, i32* %fifosize, align 4, !dbg !4657
  %mul = mul i32 %5, %7, !dbg !4658
  store i32 %mul, i32* %bits, align 4, !dbg !4659
  %8 = load i32, i32* %bits, align 4, !dbg !4660
  %mul9 = mul i32 250, %8, !dbg !4661
  %9 = load i32, i32* %baud.addr, align 4, !dbg !4662
  %div = udiv i32 %mul9, %9, !dbg !4663
  %add = add i32 %div, 5, !dbg !4664
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4665
  %timeout = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 37, !dbg !4666
  store i32 %add, i32* %timeout, align 8, !dbg !4667
  ret void, !dbg !4668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_get_baud_rate(%struct.uart_port* %port, %struct.ktermios* %termios, %struct.ktermios* %old, i32 %min, i32 %max) #0 !dbg !4669 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  %old.addr = alloca %struct.ktermios*, align 8
  %min.addr = alloca i32, align 4
  %max.addr = alloca i32, align 4
  %try = alloca i32, align 4
  %baud = alloca i32, align 4
  %altbaud = alloca i32, align 4
  %hung_up = alloca i32, align 4
  %flags = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  store %struct.ktermios* %old, %struct.ktermios** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !4678, metadata !DIExpression()), !dbg !4679
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !4680, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.declare(metadata i32* %try, metadata !4682, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !4684, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.declare(metadata i32* %altbaud, metadata !4686, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.declare(metadata i32* %hung_up, metadata !4688, metadata !DIExpression()), !dbg !4689
  store i32 0, i32* %hung_up, align 4, !dbg !4689
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !4690, metadata !DIExpression()), !dbg !4691
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4692
  %flags1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 33, !dbg !4693
  %1 = load i32, i32* %flags1, align 8, !dbg !4693
  %and = and i32 %1, 4144, !dbg !4694
  store i32 %and, i32* %flags, align 4, !dbg !4691
  %2 = load i32, i32* %flags, align 4, !dbg !4695
  switch i32 %2, label %sw.default [
    i32 16, label %sw.bb
    i32 32, label %sw.bb2
    i32 4096, label %sw.bb3
    i32 4112, label %sw.bb4
  ], !dbg !4696

sw.bb:                                            ; preds = %entry
  store i32 57600, i32* %altbaud, align 4, !dbg !4697
  br label %sw.epilog, !dbg !4699

sw.bb2:                                           ; preds = %entry
  store i32 115200, i32* %altbaud, align 4, !dbg !4700
  br label %sw.epilog, !dbg !4701

sw.bb3:                                           ; preds = %entry
  store i32 230400, i32* %altbaud, align 4, !dbg !4702
  br label %sw.epilog, !dbg !4703

sw.bb4:                                           ; preds = %entry
  store i32 460800, i32* %altbaud, align 4, !dbg !4704
  br label %sw.epilog, !dbg !4705

sw.default:                                       ; preds = %entry
  store i32 38400, i32* %altbaud, align 4, !dbg !4706
  br label %sw.epilog, !dbg !4707

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  store i32 0, i32* %try, align 4, !dbg !4708
  br label %for.cond, !dbg !4710

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %3 = load i32, i32* %try, align 4, !dbg !4711
  %cmp = icmp ult i32 %3, 2, !dbg !4713
  br i1 %cmp, label %for.body, label %for.end, !dbg !4714

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !4715
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %4) #10, !dbg !4717
  store i32 %call, i32* %baud, align 4, !dbg !4718
  %5 = load i32, i32* %try, align 4, !dbg !4719
  %cmp5 = icmp eq i32 %5, 0, !dbg !4721
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !4722

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32, i32* %baud, align 4, !dbg !4723
  %cmp6 = icmp eq i32 %6, 38400, !dbg !4724
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4725

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %altbaud, align 4, !dbg !4726
  store i32 %7, i32* %baud, align 4, !dbg !4727
  br label %if.end, !dbg !4728

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %8 = load i32, i32* %baud, align 4, !dbg !4729
  %cmp7 = icmp eq i32 %8, 0, !dbg !4731
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4732

if.then8:                                         ; preds = %if.end
  store i32 1, i32* %hung_up, align 4, !dbg !4733
  store i32 9600, i32* %baud, align 4, !dbg !4735
  br label %if.end9, !dbg !4736

if.end9:                                          ; preds = %if.then8, %if.end
  %9 = load i32, i32* %baud, align 4, !dbg !4737
  %10 = load i32, i32* %min.addr, align 4, !dbg !4739
  %cmp10 = icmp uge i32 %9, %10, !dbg !4740
  br i1 %cmp10, label %land.lhs.true11, label %if.end14, !dbg !4741

land.lhs.true11:                                  ; preds = %if.end9
  %11 = load i32, i32* %baud, align 4, !dbg !4742
  %12 = load i32, i32* %max.addr, align 4, !dbg !4743
  %cmp12 = icmp ule i32 %11, %12, !dbg !4744
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !4745

if.then13:                                        ; preds = %land.lhs.true11
  %13 = load i32, i32* %baud, align 4, !dbg !4746
  store i32 %13, i32* %retval, align 4, !dbg !4747
  br label %return, !dbg !4747

if.end14:                                         ; preds = %land.lhs.true11, %if.end9
  %14 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !4748
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %14, i32 0, i32 2, !dbg !4749
  %15 = load i32, i32* %c_cflag, align 4, !dbg !4750
  %and15 = and i32 %15, -4112, !dbg !4750
  store i32 %and15, i32* %c_cflag, align 4, !dbg !4750
  %16 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !4751
  %tobool = icmp ne %struct.ktermios* %16, null, !dbg !4751
  br i1 %tobool, label %if.then16, label %if.end21, !dbg !4753

if.then16:                                        ; preds = %if.end14
  %17 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !4754
  %call17 = call i32 @tty_termios_baud_rate(%struct.ktermios* %17) #10, !dbg !4756
  store i32 %call17, i32* %baud, align 4, !dbg !4757
  %18 = load i32, i32* %hung_up, align 4, !dbg !4758
  %tobool18 = icmp ne i32 %18, 0, !dbg !4758
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !4760

if.then19:                                        ; preds = %if.then16
  %19 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !4761
  %20 = load i32, i32* %baud, align 4, !dbg !4762
  %21 = load i32, i32* %baud, align 4, !dbg !4763
  call void @tty_termios_encode_baud_rate(%struct.ktermios* %19, i32 %20, i32 %21) #10, !dbg !4764
  br label %if.end20, !dbg !4764

if.end20:                                         ; preds = %if.then19, %if.then16
  store %struct.ktermios* null, %struct.ktermios** %old.addr, align 8, !dbg !4765
  br label %for.inc, !dbg !4766

if.end21:                                         ; preds = %if.end14
  %22 = load i32, i32* %hung_up, align 4, !dbg !4767
  %tobool22 = icmp ne i32 %22, 0, !dbg !4767
  br i1 %tobool22, label %if.end29, label %if.then23, !dbg !4769

if.then23:                                        ; preds = %if.end21
  %23 = load i32, i32* %baud, align 4, !dbg !4770
  %24 = load i32, i32* %min.addr, align 4, !dbg !4773
  %cmp24 = icmp ule i32 %23, %24, !dbg !4774
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !4775

if.then25:                                        ; preds = %if.then23
  %25 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !4776
  %26 = load i32, i32* %min.addr, align 4, !dbg !4777
  %add = add i32 %26, 1, !dbg !4778
  %27 = load i32, i32* %min.addr, align 4, !dbg !4779
  %add26 = add i32 %27, 1, !dbg !4780
  call void @tty_termios_encode_baud_rate(%struct.ktermios* %25, i32 %add, i32 %add26) #10, !dbg !4781
  br label %if.end28, !dbg !4781

if.else:                                          ; preds = %if.then23
  %28 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !4782
  %29 = load i32, i32* %max.addr, align 4, !dbg !4783
  %sub = sub i32 %29, 1, !dbg !4784
  %30 = load i32, i32* %max.addr, align 4, !dbg !4785
  %sub27 = sub i32 %30, 1, !dbg !4786
  call void @tty_termios_encode_baud_rate(%struct.ktermios* %28, i32 %sub, i32 %sub27) #10, !dbg !4787
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %if.end29, !dbg !4788

if.end29:                                         ; preds = %if.end28, %if.end21
  br label %for.inc, !dbg !4789

for.inc:                                          ; preds = %if.end29, %if.end20
  %31 = load i32, i32* %try, align 4, !dbg !4790
  %inc = add i32 %31, 1, !dbg !4790
  store i32 %inc, i32* %try, align 4, !dbg !4790
  br label %for.cond, !dbg !4791, !llvm.loop !4792

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4794, metadata !DIExpression()), !dbg !4796
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !4796
  %32 = load i32, i32* %__ret_warn_on, align 4, !dbg !4797
  %tobool30 = icmp ne i32 %32, 0, !dbg !4797
  %lnot = xor i1 %tobool30, true, !dbg !4797
  %lnot31 = xor i1 %lnot, true, !dbg !4797
  %lnot.ext = zext i1 %lnot31 to i32, !dbg !4797
  %conv = sext i32 %lnot.ext to i64, !dbg !4797
  %tobool32 = icmp ne i64 %conv, 0, !dbg !4797
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !4796

if.then33:                                        ; preds = %for.end
  br label %do.body, !dbg !4797

do.body:                                          ; preds = %if.then33
  br label %do.body34, !dbg !4799

do.body34:                                        ; preds = %do.body
  br label %do.end, !dbg !4801

do.end:                                           ; preds = %do.body34
  br label %do.body35, !dbg !4799

do.body35:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 470, i32 2305, i64 12) #7, !dbg !4803, !srcloc !4805
  br label %do.end36, !dbg !4803

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #7, !dbg !4806, !srcloc !4808
  br label %do.body37, !dbg !4799

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !4809

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !4799

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !4799

if.end40:                                         ; preds = %do.end39, %for.end
  %33 = load i32, i32* %__ret_warn_on, align 4, !dbg !4796
  %tobool41 = icmp ne i32 %33, 0, !dbg !4796
  %lnot42 = xor i1 %tobool41, true, !dbg !4796
  %lnot44 = xor i1 %lnot42, true, !dbg !4796
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !4796
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !4796
  store i64 %conv46, i64* %tmp, align 8, !dbg !4797
  %34 = load i64, i64* %tmp, align 8, !dbg !4796
  store i32 0, i32* %retval, align 4, !dbg !4811
  br label %return, !dbg !4811

return:                                           ; preds = %if.end40, %if.then13
  %35 = load i32, i32* %retval, align 4, !dbg !4812
  ret i32 %35, !dbg !4812
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #2

; Function Attrs: noredzone
declare dso_local void @tty_termios_encode_baud_rate(%struct.ktermios*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_get_divisor(%struct.uart_port* %port, i32 %baud) #0 !dbg !4813 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %baud.addr = alloca i32, align 4
  %quot = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !4820, metadata !DIExpression()), !dbg !4821
  %0 = load i32, i32* %baud.addr, align 4, !dbg !4822
  %cmp = icmp eq i32 %0, 38400, !dbg !4824
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !4825

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4826
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 33, !dbg !4827
  %2 = load i32, i32* %flags, align 8, !dbg !4827
  %and = and i32 %2, 4144, !dbg !4828
  %cmp1 = icmp eq i32 %and, 48, !dbg !4829
  br i1 %cmp1, label %if.then, label %if.else, !dbg !4830

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4831
  %custom_divisor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 40, !dbg !4832
  %4 = load i32, i32* %custom_divisor, align 8, !dbg !4832
  store i32 %4, i32* %quot, align 4, !dbg !4833
  br label %if.end, !dbg !4834

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !4835, metadata !DIExpression()), !dbg !4837
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !4837
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 22, !dbg !4837
  %6 = load i32, i32* %uartclk, align 8, !dbg !4837
  store i32 %6, i32* %__x, align 4, !dbg !4837
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !4838, metadata !DIExpression()), !dbg !4837
  %7 = load i32, i32* %baud.addr, align 4, !dbg !4837
  %mul = mul i32 16, %7, !dbg !4837
  store i32 %mul, i32* %__d, align 4, !dbg !4837
  %8 = load i32, i32* %__x, align 4, !dbg !4837
  %9 = load i32, i32* %__d, align 4, !dbg !4837
  %div = udiv i32 %9, 2, !dbg !4837
  %add = add i32 %8, %div, !dbg !4837
  %10 = load i32, i32* %__d, align 4, !dbg !4837
  %div2 = udiv i32 %add, %10, !dbg !4837
  store i32 %div2, i32* %tmp, align 4, !dbg !4837
  %11 = load i32, i32* %tmp, align 4, !dbg !4837
  store i32 %11, i32* %quot, align 4, !dbg !4839
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i32, i32* %quot, align 4, !dbg !4840
  ret i32 %12, !dbg !4841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_suspend_port(%struct.uart_driver* %drv, %struct.uart_port* %uport) #0 !dbg !4842 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !4843, metadata !DIExpression()), !dbg !4848
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !4854
  %retval = alloca i32, align 4
  %drv.addr = alloca %struct.uart_driver*, align 8
  %uport.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %tty_dev = alloca %struct.device*, align 8
  %match = alloca %struct.uart_match, align 8
  %tmp = alloca i32, align 4
  %ops = alloca %struct.uart_ops*, align 8
  %tries = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !4856, metadata !DIExpression()), !dbg !4857
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !4858, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !4860, metadata !DIExpression()), !dbg !4861
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !4862
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 7, !dbg !4863
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !4863
  %2 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4864
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 41, !dbg !4865
  %3 = load i32, i32* %line, align 4, !dbg !4865
  %idx.ext = zext i32 %3 to i64, !dbg !4866
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %1, i64 %idx.ext, !dbg !4866
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !4861
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !4867, metadata !DIExpression()), !dbg !4868
  %4 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !4869
  %port2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %4, i32 0, i32 0, !dbg !4870
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !4868
  call void @llvm.dbg.declare(metadata %struct.device** %tty_dev, metadata !4871, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.declare(metadata %struct.uart_match* %match, metadata !4873, metadata !DIExpression()), !dbg !4878
  %port3 = getelementptr inbounds %struct.uart_match, %struct.uart_match* %match, i32 0, i32 0, !dbg !4879
  %5 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4880
  store %struct.uart_port* %5, %struct.uart_port** %port3, align 8, !dbg !4879
  %driver = getelementptr inbounds %struct.uart_match, %struct.uart_match* %match, i32 0, i32 1, !dbg !4879
  %6 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !4881
  store %struct.uart_driver* %6, %struct.uart_driver** %driver, align 8, !dbg !4879
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4882
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %7, i32 0, i32 13, !dbg !4883
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !4884
  %8 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4885
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 45, !dbg !4886
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4886
  %10 = bitcast %struct.uart_match* %match to i8*, !dbg !4887
  %call = call %struct.device* @device_find_child(%struct.device* %9, i8* %10, i32 (%struct.device*, i8*)* @serial_match_port) #10, !dbg !4888
  store %struct.device* %call, %struct.device** %tty_dev, align 8, !dbg !4889
  %11 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !4890
  %tobool = icmp ne %struct.device* %11, null, !dbg !4890
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4892

land.lhs.true:                                    ; preds = %entry
  %12 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !4893
  %call4 = call zeroext i1 @device_may_wakeup(%struct.device* %12) #10, !dbg !4894
  br i1 %call4, label %if.then, label %if.end, !dbg !4895

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4896
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 20, !dbg !4898
  %14 = load i32, i32* %irq, align 8, !dbg !4898
  %call5 = call i32 @enable_irq_wake(i32 %14) #10, !dbg !4899
  %15 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !4900
  call void @put_device(%struct.device* %15) #10, !dbg !4901
  %16 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4902
  %mutex6 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %16, i32 0, i32 13, !dbg !4903
  call void @mutex_unlock(%struct.mutex* %mutex6) #10, !dbg !4904
  store i32 0, i32* %retval, align 4, !dbg !4905
  br label %return, !dbg !4905

if.end:                                           ; preds = %land.lhs.true, %entry
  %17 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !4906
  call void @put_device(%struct.device* %17) #10, !dbg !4907
  %18 = load i8, i8* @console_suspend_enabled, align 1, !dbg !4908
  %tobool7 = trunc i8 %18 to i1, !dbg !4908
  br i1 %tobool7, label %if.end11, label %land.lhs.true8, !dbg !4910

land.lhs.true8:                                   ; preds = %if.end
  %19 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4911
  store i32 0, i32* %tmp, align 4, !dbg !4911
  %20 = load i32, i32* %tmp, align 4, !dbg !4911
  %tobool9 = icmp ne i32 %20, 0, !dbg !4913
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !4914

if.then10:                                        ; preds = %land.lhs.true8
  br label %unlock, !dbg !4915

if.end11:                                         ; preds = %land.lhs.true8, %if.end
  %21 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4916
  %suspended = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 51, !dbg !4917
  store i8 1, i8* %suspended, align 1, !dbg !4918
  %22 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4919
  %call12 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %22) #10, !dbg !4920
  br i1 %call12, label %if.then13, label %if.end26, !dbg !4921

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.uart_ops** %ops, metadata !4922, metadata !DIExpression()), !dbg !4923
  %23 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4924
  %ops14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 39, !dbg !4925
  %24 = load %struct.uart_ops*, %struct.uart_ops** %ops14, align 8, !dbg !4925
  store %struct.uart_ops* %24, %struct.uart_ops** %ops, align 8, !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !4926, metadata !DIExpression()), !dbg !4927
  %25 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4928
  call void @tty_port_set_suspended(%struct.tty_port* %25, i1 zeroext true) #10, !dbg !4929
  %26 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4930
  call void @tty_port_set_initialized(%struct.tty_port* %26, i1 zeroext false) #10, !dbg !4931
  %27 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4932
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %27, i32 0, i32 0, !dbg !4933
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !4934
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4937, !srcloc !4939
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4940
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !4940
  %rlock.i = bitcast %union.anon* %29 to %struct.raw_spinlock*, !dbg !4940
  %30 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !4942
  %stop_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %30, i32 0, i32 3, !dbg !4943
  %stop_tx15 = bitcast {}** %stop_tx to void (%struct.uart_port*)**, !dbg !4943
  %31 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_tx15, align 8, !dbg !4943
  %32 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4944
  call void %31(%struct.uart_port* %32) #10, !dbg !4942
  %33 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !4945
  %set_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %33, i32 0, i32 1, !dbg !4946
  %34 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl, align 8, !dbg !4946
  %35 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4947
  call void %34(%struct.uart_port* %35, i32 0) #10, !dbg !4945
  %36 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !4948
  %stop_rx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %36, i32 0, i32 8, !dbg !4949
  %stop_rx16 = bitcast {}** %stop_rx to void (%struct.uart_port*)**, !dbg !4949
  %37 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_rx16, align 8, !dbg !4949
  %38 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4950
  call void %37(%struct.uart_port* %38) #10, !dbg !4948
  %39 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4951
  %lock17 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %39, i32 0, i32 0, !dbg !4952
  store %struct.spinlock* %lock17, %struct.spinlock** %lock.addr.i32, align 8
  call void @arch_local_irq_enable() #11, !dbg !4953
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4956, !srcloc !4958
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !4959
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !4959
  %rlock.i33 = bitcast %union.anon* %41 to %struct.raw_spinlock*, !dbg !4959
  store i32 3, i32* %tries, align 4, !dbg !4961
  br label %for.cond, !dbg !4963

for.cond:                                         ; preds = %for.inc, %if.then13
  %42 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !4964
  %tx_empty = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %42, i32 0, i32 0, !dbg !4966
  %43 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %tx_empty, align 8, !dbg !4966
  %44 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4967
  %call18 = call i32 %43(%struct.uart_port* %44) #10, !dbg !4964
  %tobool19 = icmp ne i32 %call18, 0, !dbg !4964
  br i1 %tobool19, label %land.end, label %land.rhs, !dbg !4968

land.rhs:                                         ; preds = %for.cond
  %45 = load i32, i32* %tries, align 4, !dbg !4969
  %tobool20 = icmp ne i32 %45, 0, !dbg !4968
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %46 = phi i1 [ false, %for.cond ], [ %tobool20, %land.rhs ], !dbg !4970
  br i1 %46, label %for.body, label %for.end, !dbg !4971

for.body:                                         ; preds = %land.end
  call void @msleep(i32 10) #10, !dbg !4972
  br label %for.inc, !dbg !4972

for.inc:                                          ; preds = %for.body
  %47 = load i32, i32* %tries, align 4, !dbg !4973
  %dec = add i32 %47, -1, !dbg !4973
  store i32 %dec, i32* %tries, align 4, !dbg !4973
  br label %for.cond, !dbg !4974, !llvm.loop !4975

for.end:                                          ; preds = %land.end
  %48 = load i32, i32* %tries, align 4, !dbg !4977
  %tobool21 = icmp ne i32 %48, 0, !dbg !4977
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !4979

if.then22:                                        ; preds = %for.end
  %49 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4980
  %dev23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %49, i32 0, i32 45, !dbg !4980
  %50 = load %struct.device*, %struct.device** %dev23, align 8, !dbg !4980
  %51 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4980
  %name = getelementptr inbounds %struct.uart_port, %struct.uart_port* %51, i32 0, i32 53, !dbg !4980
  %52 = load i8*, i8** %name, align 8, !dbg !4980
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %50, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %52) #12, !dbg !4980
  br label %if.end24, !dbg !4980

if.end24:                                         ; preds = %if.then22, %for.end
  %53 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !4981
  %shutdown = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %53, i32 0, i32 12, !dbg !4982
  %shutdown25 = bitcast {}** %shutdown to void (%struct.uart_port*)**, !dbg !4982
  %54 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %shutdown25, align 8, !dbg !4982
  %55 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4983
  call void %54(%struct.uart_port* %55) #10, !dbg !4981
  br label %if.end26, !dbg !4984

if.end26:                                         ; preds = %if.end24, %if.end11
  %56 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4985
  store i32 0, i32* %tmp27, align 4, !dbg !4985
  %57 = load i32, i32* %tmp27, align 4, !dbg !4985
  %tobool28 = icmp ne i32 %57, 0, !dbg !4988
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !4989

if.then29:                                        ; preds = %if.end26
  %58 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !4990
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %58, i32 0, i32 32, !dbg !4991
  %59 = load %struct.console*, %struct.console** %cons, align 8, !dbg !4991
  call void @console_stop(%struct.console* %59) #10, !dbg !4992
  br label %if.end30, !dbg !4992

if.end30:                                         ; preds = %if.then29, %if.end26
  %60 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !4993
  call void @uart_change_pm(%struct.uart_state* %60, i32 3) #10, !dbg !4994
  br label %unlock, !dbg !4994

unlock:                                           ; preds = %if.end30, %if.then10
  call void @llvm.dbg.label(metadata !4995), !dbg !4996
  %61 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !4997
  %mutex31 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %61, i32 0, i32 13, !dbg !4998
  call void @mutex_unlock(%struct.mutex* %mutex31) #10, !dbg !4999
  store i32 0, i32* %retval, align 4, !dbg !5000
  br label %return, !dbg !5000

return:                                           ; preds = %unlock, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !5001
  ret i32 %62, !dbg !5001
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local %struct.device* @device_find_child(%struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial_match_port(%struct.device* %dev, i8* %data) #0 !dbg !5002 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %match = alloca %struct.uart_match*, align 8
  %tty_drv = alloca %struct.tty_driver*, align 8
  %devt = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5005, metadata !DIExpression()), !dbg !5006
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5007, metadata !DIExpression()), !dbg !5008
  call void @llvm.dbg.declare(metadata %struct.uart_match** %match, metadata !5009, metadata !DIExpression()), !dbg !5011
  %0 = load i8*, i8** %data.addr, align 8, !dbg !5012
  %1 = bitcast i8* %0 to %struct.uart_match*, !dbg !5012
  store %struct.uart_match* %1, %struct.uart_match** %match, align 8, !dbg !5011
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %tty_drv, metadata !5013, metadata !DIExpression()), !dbg !5014
  %2 = load %struct.uart_match*, %struct.uart_match** %match, align 8, !dbg !5015
  %driver = getelementptr inbounds %struct.uart_match, %struct.uart_match* %2, i32 0, i32 1, !dbg !5016
  %3 = load %struct.uart_driver*, %struct.uart_driver** %driver, align 8, !dbg !5016
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %3, i32 0, i32 8, !dbg !5017
  %4 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver, align 8, !dbg !5017
  store %struct.tty_driver* %4, %struct.tty_driver** %tty_drv, align 8, !dbg !5014
  call void @llvm.dbg.declare(metadata i32* %devt, metadata !5018, metadata !DIExpression()), !dbg !5019
  %5 = load %struct.tty_driver*, %struct.tty_driver** %tty_drv, align 8, !dbg !5020
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 7, !dbg !5020
  %6 = load i32, i32* %major, align 4, !dbg !5020
  %shl = shl i32 %6, 20, !dbg !5020
  %7 = load %struct.tty_driver*, %struct.tty_driver** %tty_drv, align 8, !dbg !5020
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 8, !dbg !5020
  %8 = load i32, i32* %minor_start, align 8, !dbg !5020
  %or = or i32 %shl, %8, !dbg !5020
  %9 = load %struct.uart_match*, %struct.uart_match** %match, align 8, !dbg !5021
  %port = getelementptr inbounds %struct.uart_match, %struct.uart_match* %9, i32 0, i32 0, !dbg !5022
  %10 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5022
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 41, !dbg !5023
  %11 = load i32, i32* %line, align 4, !dbg !5023
  %add = add i32 %or, %11, !dbg !5024
  store i32 %add, i32* %devt, align 4, !dbg !5019
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5025
  %devt1 = getelementptr inbounds %struct.device, %struct.device* %12, i32 0, i32 25, !dbg !5026
  %13 = load i32, i32* %devt1, align 8, !dbg !5026
  %14 = load i32, i32* %devt, align 4, !dbg !5027
  %cmp = icmp eq i32 %13, %14, !dbg !5028
  %conv = zext i1 %cmp to i32, !dbg !5028
  ret i32 %conv, !dbg !5029
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #0 !dbg !5030 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5033, metadata !DIExpression()), !dbg !5034
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5035
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5036
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !5037
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !5037
  %bf.clear = and i16 %bf.load, 1, !dbg !5037
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5037
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5035
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5038

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5039
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !5040
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !5041
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !5041
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !5042
  %lnot = xor i1 %tobool2, true, !dbg !5042
  %lnot3 = xor i1 %lnot, true, !dbg !5043
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !5044
  ret i1 %3, !dbg !5045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @enable_irq_wake(i32 %irq) #0 !dbg !5046 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5051
  %call = call i32 @irq_set_irq_wake(i32 %0, i32 1) #10, !dbg !5052
  ret i32 %call, !dbg !5053
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #0 !dbg !5054 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5059
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !5060
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #10, !dbg !5061
  ret i1 %call, !dbg !5062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_suspended(%struct.tty_port* %port, i1 zeroext %val) #0 !dbg !5063 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  %0 = load i8, i8* %val.addr, align 1, !dbg !5070
  %tobool = trunc i8 %0 to i1, !dbg !5070
  br i1 %tobool, label %if.then, label %if.else, !dbg !5072

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5073
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !5074
  call void @set_bit(i64 1, i64* %iflags) #10, !dbg !5075
  br label %if.end, !dbg !5075

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5076
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !5077
  call void @clear_bit(i64 1, i64* %iflags1) #10, !dbg !5078
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5079
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #0 !dbg !5080 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5081, metadata !DIExpression()), !dbg !5082
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5083, metadata !DIExpression()), !dbg !5084
  %0 = load i8, i8* %val.addr, align 1, !dbg !5085
  %tobool = trunc i8 %0 to i1, !dbg !5085
  br i1 %tobool, label %if.then, label %if.else, !dbg !5087

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5088
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !5089
  call void @set_bit(i64 0, i64* %iflags) #10, !dbg !5090
  br label %if.end, !dbg !5090

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5091
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !5092
  call void @clear_bit(i64 0, i64* %iflags1) #10, !dbg !5093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5094
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @console_stop(%struct.console*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_change_pm(%struct.uart_state* %state, i32 %pm_state) #0 !dbg !5095 {
entry:
  %state.addr = alloca %struct.uart_state*, align 8
  %pm_state.addr = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  store i32 %pm_state, i32* %pm_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pm_state.addr, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !5102, metadata !DIExpression()), !dbg !5103
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5104
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !5105
  store %struct.uart_port* %call, %struct.uart_port** %port, align 8, !dbg !5103
  %1 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5106
  %pm_state1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 1, !dbg !5108
  %2 = load i32, i32* %pm_state1, align 8, !dbg !5108
  %3 = load i32, i32* %pm_state.addr, align 4, !dbg !5109
  %cmp = icmp ne i32 %2, %3, !dbg !5110
  br i1 %cmp, label %if.then, label %if.end8, !dbg !5111

if.then:                                          ; preds = %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5112
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !5112
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5115

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5116
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 39, !dbg !5117
  %6 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !5117
  %pm = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %6, i32 0, i32 16, !dbg !5118
  %7 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %pm, align 8, !dbg !5118
  %tobool2 = icmp ne void (%struct.uart_port*, i32, i32)* %7, null, !dbg !5116
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5119

if.then3:                                         ; preds = %land.lhs.true
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5120
  %ops4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 39, !dbg !5121
  %9 = load %struct.uart_ops*, %struct.uart_ops** %ops4, align 8, !dbg !5121
  %pm5 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %9, i32 0, i32 16, !dbg !5122
  %10 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %pm5, align 8, !dbg !5122
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5123
  %12 = load i32, i32* %pm_state.addr, align 4, !dbg !5124
  %13 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5125
  %pm_state6 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %13, i32 0, i32 1, !dbg !5126
  %14 = load i32, i32* %pm_state6, align 8, !dbg !5126
  call void %10(%struct.uart_port* %11, i32 %12, i32 %14) #10, !dbg !5120
  br label %if.end, !dbg !5120

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  %15 = load i32, i32* %pm_state.addr, align 4, !dbg !5127
  %16 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5128
  %pm_state7 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %16, i32 0, i32 1, !dbg !5129
  store i32 %15, i32* %pm_state7, align 8, !dbg !5130
  br label %if.end8, !dbg !5131

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !5132
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_resume_port(%struct.uart_driver* %drv, %struct.uart_port* %uport) #0 !dbg !5133 {
entry:
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !4843, metadata !DIExpression()), !dbg !5134
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !4852, metadata !DIExpression()), !dbg !5142
  %lock.addr.i55 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i55, metadata !4843, metadata !DIExpression()), !dbg !5144
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !5146
  %retval = alloca i32, align 4
  %drv.addr = alloca %struct.uart_driver*, align 8
  %uport.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %tty_dev = alloca %struct.device*, align 8
  %match = alloca %struct.uart_match, align 8
  %termios = alloca %struct.ktermios, align 4
  %tmp = alloca i32, align 4
  %ops32 = alloca %struct.uart_ops*, align 8
  %ret = alloca i32, align 4
  %tmp36 = alloca i32, align 4
  %tty39 = alloca %struct.tty_struct*, align 8
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !5152, metadata !DIExpression()), !dbg !5153
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5154
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 7, !dbg !5155
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !5155
  %2 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5156
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 41, !dbg !5157
  %3 = load i32, i32* %line, align 4, !dbg !5157
  %idx.ext = zext i32 %3 to i64, !dbg !5158
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %1, i64 %idx.ext, !dbg !5158
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !5153
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !5159, metadata !DIExpression()), !dbg !5160
  %4 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5161
  %port2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %4, i32 0, i32 0, !dbg !5162
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !5160
  call void @llvm.dbg.declare(metadata %struct.device** %tty_dev, metadata !5163, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.declare(metadata %struct.uart_match* %match, metadata !5165, metadata !DIExpression()), !dbg !5166
  %port3 = getelementptr inbounds %struct.uart_match, %struct.uart_match* %match, i32 0, i32 0, !dbg !5167
  %5 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5168
  store %struct.uart_port* %5, %struct.uart_port** %port3, align 8, !dbg !5167
  %driver = getelementptr inbounds %struct.uart_match, %struct.uart_match* %match, i32 0, i32 1, !dbg !5167
  %6 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5169
  store %struct.uart_driver* %6, %struct.uart_driver** %driver, align 8, !dbg !5167
  call void @llvm.dbg.declare(metadata %struct.ktermios* %termios, metadata !5170, metadata !DIExpression()), !dbg !5171
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5172
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %7, i32 0, i32 13, !dbg !5173
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !5174
  %8 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5175
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 45, !dbg !5176
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5176
  %10 = bitcast %struct.uart_match* %match to i8*, !dbg !5177
  %call = call %struct.device* @device_find_child(%struct.device* %9, i8* %10, i32 (%struct.device*, i8*)* @serial_match_port) #10, !dbg !5178
  store %struct.device* %call, %struct.device** %tty_dev, align 8, !dbg !5179
  %11 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5180
  %suspended = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 51, !dbg !5182
  %12 = load i8, i8* %suspended, align 1, !dbg !5182
  %tobool = icmp ne i8 %12, 0, !dbg !5180
  br i1 %tobool, label %if.end11, label %land.lhs.true, !dbg !5183

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !5184
  %call4 = call zeroext i1 @device_may_wakeup(%struct.device* %13) #10, !dbg !5185
  br i1 %call4, label %if.then, label %if.end11, !dbg !5186

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5187
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 20, !dbg !5190
  %15 = load i32, i32* %irq, align 8, !dbg !5190
  %call5 = call %struct.irq_data* @irq_get_irq_data(i32 %15) #10, !dbg !5191
  %call6 = call zeroext i1 @irqd_is_wakeup_set(%struct.irq_data* %call5) #10, !dbg !5192
  br i1 %call6, label %if.then7, label %if.end, !dbg !5193

if.then7:                                         ; preds = %if.then
  %16 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5194
  %irq8 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 20, !dbg !5195
  %17 = load i32, i32* %irq8, align 8, !dbg !5195
  %call9 = call i32 @disable_irq_wake(i32 %17) #10, !dbg !5196
  br label %if.end, !dbg !5196

if.end:                                           ; preds = %if.then7, %if.then
  %18 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !5197
  call void @put_device(%struct.device* %18) #10, !dbg !5198
  %19 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5199
  %mutex10 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %19, i32 0, i32 13, !dbg !5200
  call void @mutex_unlock(%struct.mutex* %mutex10) #10, !dbg !5201
  store i32 0, i32* %retval, align 4, !dbg !5202
  br label %return, !dbg !5202

if.end11:                                         ; preds = %land.lhs.true, %entry
  %20 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !5203
  call void @put_device(%struct.device* %20) #10, !dbg !5204
  %21 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5205
  %suspended12 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 51, !dbg !5206
  store i8 0, i8* %suspended12, align 1, !dbg !5207
  %22 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5208
  store i32 0, i32* %tmp, align 4, !dbg !5208
  %23 = load i32, i32* %tmp, align 4, !dbg !5208
  %tobool13 = icmp ne i32 %23, 0, !dbg !5211
  br i1 %tobool13, label %if.then14, label %if.end29, !dbg !5212

if.then14:                                        ; preds = %if.end11
  %24 = bitcast %struct.ktermios* %termios to i8*, !dbg !5213
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 44, i1 false), !dbg !5213
  %25 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5215
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %25, i32 0, i32 32, !dbg !5216
  %26 = load %struct.console*, %struct.console** %cons, align 8, !dbg !5216
  %cflag = getelementptr inbounds %struct.console, %struct.console* %26, i32 0, i32 10, !dbg !5217
  %27 = load i32, i32* %cflag, align 4, !dbg !5217
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !5218
  store i32 %27, i32* %c_cflag, align 4, !dbg !5219
  %28 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5220
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %28, i32 0, i32 1, !dbg !5222
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !5222
  %tobool15 = icmp ne %struct.tty_struct* %29, null, !dbg !5220
  br i1 %tobool15, label %land.lhs.true16, label %if.end21, !dbg !5223

land.lhs.true16:                                  ; preds = %if.then14
  %c_cflag17 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !5224
  %30 = load i32, i32* %c_cflag17, align 4, !dbg !5224
  %cmp = icmp eq i32 %30, 0, !dbg !5225
  br i1 %cmp, label %if.then18, label %if.end21, !dbg !5226

if.then18:                                        ; preds = %land.lhs.true16
  %31 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5227
  %tty19 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %31, i32 0, i32 1, !dbg !5228
  %32 = load %struct.tty_struct*, %struct.tty_struct** %tty19, align 8, !dbg !5228
  %termios20 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %32, i32 0, i32 15, !dbg !5229
  %33 = bitcast %struct.ktermios* %termios to i8*, !dbg !5229
  %34 = bitcast %struct.ktermios* %termios20 to i8*, !dbg !5229
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 8 %34, i64 44, i1 false), !dbg !5229
  br label %if.end21, !dbg !5230

if.end21:                                         ; preds = %if.then18, %land.lhs.true16, %if.then14
  %35 = load i8, i8* @console_suspend_enabled, align 1, !dbg !5231
  %tobool22 = trunc i8 %35 to i1, !dbg !5231
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5233

if.then23:                                        ; preds = %if.end21
  %36 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5234
  call void @uart_change_pm(%struct.uart_state* %36, i32 0) #10, !dbg !5235
  br label %if.end24, !dbg !5235

if.end24:                                         ; preds = %if.then23, %if.end21
  %37 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5236
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 39, !dbg !5237
  %38 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !5237
  %set_termios = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %38, i32 0, i32 14, !dbg !5238
  %39 = load void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)** %set_termios, align 8, !dbg !5238
  %40 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5239
  call void %39(%struct.uart_port* %40, %struct.ktermios* %termios, %struct.ktermios* null) #10, !dbg !5236
  %41 = load i8, i8* @console_suspend_enabled, align 1, !dbg !5240
  %tobool25 = trunc i8 %41 to i1, !dbg !5240
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !5242

if.then26:                                        ; preds = %if.end24
  %42 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5243
  %cons27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %42, i32 0, i32 32, !dbg !5244
  %43 = load %struct.console*, %struct.console** %cons27, align 8, !dbg !5244
  call void @console_start(%struct.console* %43) #10, !dbg !5245
  br label %if.end28, !dbg !5245

if.end28:                                         ; preds = %if.then26, %if.end24
  br label %if.end29, !dbg !5246

if.end29:                                         ; preds = %if.end28, %if.end11
  %44 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5247
  %call30 = call zeroext i1 @tty_port_suspended(%struct.tty_port* %44) #10, !dbg !5248
  br i1 %call30, label %if.then31, label %if.end53, !dbg !5249

if.then31:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata %struct.uart_ops** %ops32, metadata !5250, metadata !DIExpression()), !dbg !5251
  %45 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5252
  %ops33 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %45, i32 0, i32 39, !dbg !5253
  %46 = load %struct.uart_ops*, %struct.uart_ops** %ops33, align 8, !dbg !5253
  store %struct.uart_ops* %46, %struct.uart_ops** %ops32, align 8, !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5254, metadata !DIExpression()), !dbg !5255
  %47 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5256
  call void @uart_change_pm(%struct.uart_state* %47, i32 0) #10, !dbg !5257
  %48 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5258
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %48, i32 0, i32 0, !dbg !5259
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !5260
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5261, !srcloc !4939
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5262
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !5262
  %rlock.i = bitcast %union.anon* %50 to %struct.raw_spinlock*, !dbg !5262
  %51 = load %struct.uart_ops*, %struct.uart_ops** %ops32, align 8, !dbg !5263
  %set_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %51, i32 0, i32 1, !dbg !5264
  %52 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl, align 8, !dbg !5264
  %53 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5265
  call void %52(%struct.uart_port* %53, i32 0) #10, !dbg !5263
  %54 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5266
  %lock34 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %54, i32 0, i32 0, !dbg !5267
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i55, align 8
  call void @arch_local_irq_enable() #11, !dbg !5268
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5269, !srcloc !4958
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i55, align 8, !dbg !5270
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !5270
  %rlock.i56 = bitcast %union.anon* %56 to %struct.raw_spinlock*, !dbg !5270
  %57 = load i8, i8* @console_suspend_enabled, align 1, !dbg !5271
  %tobool35 = trunc i8 %57 to i1, !dbg !5271
  br i1 %tobool35, label %if.then38, label %lor.lhs.false, !dbg !5272

lor.lhs.false:                                    ; preds = %if.then31
  %58 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5273
  store i32 0, i32* %tmp36, align 4, !dbg !5273
  %59 = load i32, i32* %tmp36, align 4, !dbg !5273
  %tobool37 = icmp ne i32 %59, 0, !dbg !5275
  br i1 %tobool37, label %if.end52, label %if.then38, !dbg !5276

if.then38:                                        ; preds = %lor.lhs.false, %if.then31
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty39, metadata !5277, metadata !DIExpression()), !dbg !5278
  %60 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5279
  %tty40 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %60, i32 0, i32 1, !dbg !5280
  %61 = load %struct.tty_struct*, %struct.tty_struct** %tty40, align 8, !dbg !5280
  store %struct.tty_struct* %61, %struct.tty_struct** %tty39, align 8, !dbg !5278
  %62 = load %struct.uart_ops*, %struct.uart_ops** %ops32, align 8, !dbg !5281
  %startup = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %62, i32 0, i32 11, !dbg !5282
  %63 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %startup, align 8, !dbg !5282
  %64 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5283
  %call41 = call i32 %63(%struct.uart_port* %64) #10, !dbg !5281
  store i32 %call41, i32* %ret, align 4, !dbg !5284
  %65 = load i32, i32* %ret, align 4, !dbg !5285
  %cmp42 = icmp eq i32 %65, 0, !dbg !5286
  br i1 %cmp42, label %if.then43, label %if.else, !dbg !5287

if.then43:                                        ; preds = %if.then38
  %66 = load %struct.tty_struct*, %struct.tty_struct** %tty39, align 8, !dbg !5288
  %tobool44 = icmp ne %struct.tty_struct* %66, null, !dbg !5288
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !5290

if.then45:                                        ; preds = %if.then43
  %67 = load %struct.tty_struct*, %struct.tty_struct** %tty39, align 8, !dbg !5291
  %68 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5292
  call void @uart_change_speed(%struct.tty_struct* %67, %struct.uart_state* %68, %struct.ktermios* null) #10, !dbg !5293
  br label %if.end46, !dbg !5293

if.end46:                                         ; preds = %if.then45, %if.then43
  %69 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5294
  %lock47 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %69, i32 0, i32 0, !dbg !5295
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i57, align 8
  call void @arch_local_irq_disable() #11, !dbg !5296
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5297, !srcloc !4939
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !5298
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !5298
  %rlock.i58 = bitcast %union.anon* %71 to %struct.raw_spinlock*, !dbg !5298
  %72 = load %struct.uart_ops*, %struct.uart_ops** %ops32, align 8, !dbg !5299
  %set_mctrl48 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %72, i32 0, i32 1, !dbg !5300
  %73 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl48, align 8, !dbg !5300
  %74 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5301
  %75 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5302
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %75, i32 0, i32 36, !dbg !5303
  %76 = load i32, i32* %mctrl, align 4, !dbg !5303
  call void %73(%struct.uart_port* %74, i32 %76) #10, !dbg !5299
  %77 = load %struct.uart_ops*, %struct.uart_ops** %ops32, align 8, !dbg !5304
  %start_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %77, i32 0, i32 4, !dbg !5305
  %start_tx49 = bitcast {}** %start_tx to void (%struct.uart_port*)**, !dbg !5305
  %78 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %start_tx49, align 8, !dbg !5305
  %79 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5306
  call void %78(%struct.uart_port* %79) #10, !dbg !5304
  %80 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !5307
  %lock50 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %80, i32 0, i32 0, !dbg !5308
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i59, align 8
  call void @arch_local_irq_enable() #11, !dbg !5309
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5310, !srcloc !4958
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !5311
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !5311
  %rlock.i60 = bitcast %union.anon* %82 to %struct.raw_spinlock*, !dbg !5311
  %83 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5312
  call void @tty_port_set_initialized(%struct.tty_port* %83, i1 zeroext true) #10, !dbg !5313
  br label %if.end51, !dbg !5314

if.else:                                          ; preds = %if.then38
  %84 = load %struct.tty_struct*, %struct.tty_struct** %tty39, align 8, !dbg !5315
  %85 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5317
  call void @uart_shutdown(%struct.tty_struct* %84, %struct.uart_state* %85) #10, !dbg !5318
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.end46
  br label %if.end52, !dbg !5319

if.end52:                                         ; preds = %if.end51, %lor.lhs.false
  %86 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5320
  call void @tty_port_set_suspended(%struct.tty_port* %86, i1 zeroext false) #10, !dbg !5321
  br label %if.end53, !dbg !5322

if.end53:                                         ; preds = %if.end52, %if.end29
  %87 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5323
  %mutex54 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %87, i32 0, i32 13, !dbg !5324
  call void @mutex_unlock(%struct.mutex* %mutex54) #10, !dbg !5325
  store i32 0, i32* %retval, align 4, !dbg !5326
  br label %return, !dbg !5326

return:                                           ; preds = %if.end53, %if.end
  %88 = load i32, i32* %retval, align 4, !dbg !5327
  ret i32 %88, !dbg !5327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @irqd_is_wakeup_set(%struct.irq_data* %d) #0 !dbg !5328 {
entry:
  %d.addr = alloca %struct.irq_data*, align 8
  store %struct.irq_data* %d, %struct.irq_data** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.irq_data** %d.addr, metadata !5432, metadata !DIExpression()), !dbg !5433
  %0 = load %struct.irq_data*, %struct.irq_data** %d.addr, align 8, !dbg !5434
  %common = getelementptr inbounds %struct.irq_data, %struct.irq_data* %0, i32 0, i32 3, !dbg !5434
  %1 = load %struct.irq_common_data*, %struct.irq_common_data** %common, align 8, !dbg !5434
  %state_use_accessors = getelementptr inbounds %struct.irq_common_data, %struct.irq_common_data* %1, i32 0, i32 0, !dbg !5434
  %2 = load i32, i32* %state_use_accessors, align 8, !dbg !5434
  %and = and i32 %2, 16384, !dbg !5435
  %tobool = icmp ne i32 %and, 0, !dbg !5434
  ret i1 %tobool, !dbg !5436
}

; Function Attrs: noredzone
declare dso_local %struct.irq_data* @irq_get_irq_data(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @disable_irq_wake(i32 %irq) #0 !dbg !5437 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5438, metadata !DIExpression()), !dbg !5439
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5440
  %call = call i32 @irq_set_irq_wake(i32 %0, i32 0) #10, !dbg !5441
  ret i32 %call, !dbg !5442
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local void @console_start(%struct.console*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_suspended(%struct.tty_port* %port) #0 !dbg !5443 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !5446
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !5447
  %call = call zeroext i1 @test_bit(i64 1, i64* %iflags) #10, !dbg !5448
  ret i1 %call, !dbg !5449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_change_speed(%struct.tty_struct* %tty, %struct.uart_state* %state, %struct.ktermios* %old_termios) #0 !dbg !5450 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !4843, metadata !DIExpression()), !dbg !5453
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !5455
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %termios = alloca %struct.ktermios*, align 8
  %hw_stopped = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !5457, metadata !DIExpression()), !dbg !5458
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !5463, metadata !DIExpression()), !dbg !5464
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5465
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !5466
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !5464
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios, metadata !5467, metadata !DIExpression()), !dbg !5468
  call void @llvm.dbg.declare(metadata i32* %hw_stopped, metadata !5469, metadata !DIExpression()), !dbg !5470
  %1 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5471
  %tobool = icmp ne %struct.tty_struct* %1, null, !dbg !5471
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5473

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5474
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 38, !dbg !5475
  %3 = load i32, i32* %type, align 4, !dbg !5475
  %cmp = icmp eq i32 %3, 0, !dbg !5476
  br i1 %cmp, label %if.then, label %if.end, !dbg !5477

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !5478

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5479
  %termios1 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 15, !dbg !5480
  store %struct.ktermios* %termios1, %struct.ktermios** %termios, align 8, !dbg !5481
  %5 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5482
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 39, !dbg !5483
  %6 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !5483
  %set_termios = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %6, i32 0, i32 14, !dbg !5484
  %7 = load void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)** %set_termios, align 8, !dbg !5484
  %8 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5485
  %9 = load %struct.ktermios*, %struct.ktermios** %termios, align 8, !dbg !5486
  %10 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !5487
  call void %7(%struct.uart_port* %8, %struct.ktermios* %9, %struct.ktermios* %10) #10, !dbg !5482
  %11 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5488
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 0, !dbg !5489
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !5490
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5491, !srcloc !4939
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5492
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !5492
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !5492
  %14 = load %struct.ktermios*, %struct.ktermios** %termios, align 8, !dbg !5493
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %14, i32 0, i32 2, !dbg !5495
  %15 = load i32, i32* %c_cflag, align 4, !dbg !5495
  %and = and i32 %15, -2147483648, !dbg !5496
  %tobool2 = icmp ne i32 %and, 0, !dbg !5496
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !5497

if.then3:                                         ; preds = %if.end
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5498
  %status = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 34, !dbg !5499
  %17 = load i32, i32* %status, align 4, !dbg !5500
  %or = or i32 %17, 1, !dbg !5500
  store i32 %or, i32* %status, align 4, !dbg !5500
  br label %if.end6, !dbg !5498

if.else:                                          ; preds = %if.end
  %18 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5501
  %status4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 34, !dbg !5502
  %19 = load i32, i32* %status4, align 4, !dbg !5503
  %and5 = and i32 %19, -2, !dbg !5503
  store i32 %and5, i32* %status4, align 4, !dbg !5503
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %20 = load %struct.ktermios*, %struct.ktermios** %termios, align 8, !dbg !5504
  %c_cflag7 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %20, i32 0, i32 2, !dbg !5506
  %21 = load i32, i32* %c_cflag7, align 4, !dbg !5506
  %and8 = and i32 %21, 2048, !dbg !5507
  %tobool9 = icmp ne i32 %and8, 0, !dbg !5507
  br i1 %tobool9, label %if.then10, label %if.else13, !dbg !5508

if.then10:                                        ; preds = %if.end6
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5509
  %status11 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 34, !dbg !5510
  %23 = load i32, i32* %status11, align 4, !dbg !5511
  %and12 = and i32 %23, -3, !dbg !5511
  store i32 %and12, i32* %status11, align 4, !dbg !5511
  br label %if.end16, !dbg !5509

if.else13:                                        ; preds = %if.end6
  %24 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5512
  %status14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %24, i32 0, i32 34, !dbg !5513
  %25 = load i32, i32* %status14, align 4, !dbg !5514
  %or15 = or i32 %25, 2, !dbg !5514
  store i32 %or15, i32* %status14, align 4, !dbg !5514
  br label %if.end16

if.end16:                                         ; preds = %if.else13, %if.then10
  %26 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5515
  %hw_stopped17 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %26, i32 0, i32 35, !dbg !5516
  %27 = load i32, i32* %hw_stopped17, align 8, !dbg !5516
  store i32 %27, i32* %hw_stopped, align 4, !dbg !5517
  %28 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5518
  %call18 = call zeroext i1 @uart_softcts_mode(%struct.uart_port* %28) #10, !dbg !5519
  br i1 %call18, label %land.rhs, label %land.end, !dbg !5520

land.rhs:                                         ; preds = %if.end16
  %29 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5521
  %ops19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 39, !dbg !5522
  %30 = load %struct.uart_ops*, %struct.uart_ops** %ops19, align 8, !dbg !5522
  %get_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %30, i32 0, i32 2, !dbg !5523
  %31 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl, align 8, !dbg !5523
  %32 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5524
  %call20 = call i32 %31(%struct.uart_port* %32) #10, !dbg !5521
  %and21 = and i32 %call20, 32, !dbg !5525
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5526
  %lnot = xor i1 %tobool22, true, !dbg !5526
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end16
  %33 = phi i1 [ false, %if.end16 ], [ %lnot, %land.rhs ], !dbg !5527
  %land.ext = zext i1 %33 to i32, !dbg !5520
  %34 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5528
  %hw_stopped23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 35, !dbg !5529
  store i32 %land.ext, i32* %hw_stopped23, align 8, !dbg !5530
  %35 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5531
  %hw_stopped24 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %35, i32 0, i32 35, !dbg !5533
  %36 = load i32, i32* %hw_stopped24, align 8, !dbg !5533
  %tobool25 = icmp ne i32 %36, 0, !dbg !5531
  br i1 %tobool25, label %if.then26, label %if.else32, !dbg !5534

if.then26:                                        ; preds = %land.end
  %37 = load i32, i32* %hw_stopped, align 4, !dbg !5535
  %tobool27 = icmp ne i32 %37, 0, !dbg !5535
  br i1 %tobool27, label %if.end31, label %if.then28, !dbg !5538

if.then28:                                        ; preds = %if.then26
  %38 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5539
  %ops29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %38, i32 0, i32 39, !dbg !5540
  %39 = load %struct.uart_ops*, %struct.uart_ops** %ops29, align 8, !dbg !5540
  %stop_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %39, i32 0, i32 3, !dbg !5541
  %stop_tx30 = bitcast {}** %stop_tx to void (%struct.uart_port*)**, !dbg !5541
  %40 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_tx30, align 8, !dbg !5541
  %41 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5542
  call void %40(%struct.uart_port* %41) #10, !dbg !5539
  br label %if.end31, !dbg !5539

if.end31:                                         ; preds = %if.then28, %if.then26
  br label %if.end36, !dbg !5543

if.else32:                                        ; preds = %land.end
  %42 = load i32, i32* %hw_stopped, align 4, !dbg !5544
  %tobool33 = icmp ne i32 %42, 0, !dbg !5544
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !5547

if.then34:                                        ; preds = %if.else32
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5548
  call void @__uart_start(%struct.tty_struct* %43) #10, !dbg !5549
  br label %if.end35, !dbg !5549

if.end35:                                         ; preds = %if.then34, %if.else32
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end31
  %44 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5550
  %lock37 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %44, i32 0, i32 0, !dbg !5551
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i38, align 8
  call void @arch_local_irq_enable() #11, !dbg !5552
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5553, !srcloc !4958
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !5554
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !5554
  %rlock.i39 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !5554
  br label %return, !dbg !5555

return:                                           ; preds = %if.end36, %if.then
  ret void, !dbg !5555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_shutdown(%struct.tty_struct* %tty, %struct.uart_state* %state) #0 !dbg !5556 {
entry:
  %lock.addr.i53 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i53, metadata !5559, metadata !DIExpression()), !dbg !5563
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !5569
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !5575
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  %flags = alloca i64, align 8
  %xmit_buf = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  %tmp42 = alloca %struct.uart_port*, align 8
  %__uport45 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !5588, metadata !DIExpression()), !dbg !5589
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5590
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !5591
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !5589
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !5592, metadata !DIExpression()), !dbg !5593
  %1 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5594
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 0, !dbg !5595
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !5593
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5596, metadata !DIExpression()), !dbg !5597
  store i64 0, i64* %flags, align 8, !dbg !5597
  call void @llvm.dbg.declare(metadata i8** %xmit_buf, metadata !5598, metadata !DIExpression()), !dbg !5599
  store i8* null, i8** %xmit_buf, align 8, !dbg !5599
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5600
  %tobool = icmp ne %struct.tty_struct* %2, null, !dbg !5600
  br i1 %tobool, label %if.then, label %if.end, !dbg !5602

if.then:                                          ; preds = %entry
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5603
  %flags2 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 21, !dbg !5604
  call void @set_bit(i64 1, i64* %flags2) #10, !dbg !5605
  br label %if.end, !dbg !5605

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5606
  %call3 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %4) #10, !dbg !5608
  br i1 %call3, label %if.then4, label %if.end17, !dbg !5609

if.then4:                                         ; preds = %if.end
  %5 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5610
  call void @tty_port_set_initialized(%struct.tty_port* %5, i1 zeroext false) #10, !dbg !5612
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5613
  %tobool5 = icmp ne %struct.uart_port* %6, null, !dbg !5613
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !5615

land.lhs.true:                                    ; preds = %if.then4
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5616
  store i32 0, i32* %tmp, align 4, !dbg !5616
  %8 = load i32, i32* %tmp, align 4, !dbg !5616
  %tobool6 = icmp ne i32 %8, 0, !dbg !5618
  br i1 %tobool6, label %land.lhs.true7, label %if.end10, !dbg !5619

land.lhs.true7:                                   ; preds = %land.lhs.true
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5620
  %tobool8 = icmp ne %struct.tty_struct* %9, null, !dbg !5620
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5621

if.then9:                                         ; preds = %land.lhs.true7
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5622
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 15, !dbg !5623
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !5624
  %11 = load i32, i32* %c_cflag, align 8, !dbg !5624
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5625
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 32, !dbg !5626
  %13 = load %struct.console*, %struct.console** %cons, align 8, !dbg !5626
  %cflag = getelementptr inbounds %struct.console, %struct.console* %13, i32 0, i32 10, !dbg !5627
  store i32 %11, i32* %cflag, align 4, !dbg !5628
  br label %if.end10, !dbg !5625

if.end10:                                         ; preds = %if.then9, %land.lhs.true7, %land.lhs.true, %if.then4
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5629
  %tobool11 = icmp ne %struct.tty_struct* %14, null, !dbg !5629
  br i1 %tobool11, label %lor.lhs.false, label %if.then15, !dbg !5631

lor.lhs.false:                                    ; preds = %if.end10
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !5632
  %termios12 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !5632
  %c_cflag13 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios12, i32 0, i32 2, !dbg !5632
  %16 = load i32, i32* %c_cflag13, align 8, !dbg !5632
  %and = and i32 %16, 1024, !dbg !5632
  %tobool14 = icmp ne i32 %and, 0, !dbg !5632
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5633

if.then15:                                        ; preds = %lor.lhs.false, %if.end10
  %17 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5634
  call void @uart_port_dtr_rts(%struct.uart_port* %17, i32 0) #10, !dbg !5635
  br label %if.end16, !dbg !5635

if.end16:                                         ; preds = %if.then15, %lor.lhs.false
  %18 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5636
  call void @uart_port_shutdown(%struct.tty_port* %18) #10, !dbg !5637
  br label %if.end17, !dbg !5638

if.end17:                                         ; preds = %if.end16, %if.end
  %19 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5639
  call void @tty_port_set_suspended(%struct.tty_port* %19, i1 zeroext false) #10, !dbg !5640
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !5641, metadata !DIExpression()), !dbg !5642
  %20 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5642
  %call18 = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %20) #10, !dbg !5642
  store %struct.uart_port* %call18, %struct.uart_port** %__uport, align 8, !dbg !5642
  %21 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !5643
  %tobool19 = icmp ne %struct.uart_port* %21, null, !dbg !5643
  br i1 %tobool19, label %if.then20, label %if.end41, !dbg !5642

if.then20:                                        ; preds = %if.end17
  br label %do.body, !dbg !5643

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !5644

do.body21:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5645, metadata !DIExpression()), !dbg !5647
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5648, metadata !DIExpression()), !dbg !5647
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5647
  %conv = zext i1 %cmp to i32, !dbg !5647
  store i32 1, i32* %tmp22, align 4, !dbg !5647
  %22 = load i32, i32* %tmp22, align 4, !dbg !5647
  br label %do.body23, !dbg !5649

do.body23:                                        ; preds = %do.body21
  br label %do.body24, !dbg !5650

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !5651

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5653, metadata !DIExpression()), !dbg !5656
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !5657, metadata !DIExpression()), !dbg !5656
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !5656
  %conv29 = zext i1 %cmp28 to i32, !dbg !5656
  store i32 1, i32* %tmp30, align 4, !dbg !5656
  %23 = load i32, i32* %tmp30, align 4, !dbg !5656
  %call31 = call i64 @arch_local_irq_save() #10, !dbg !5658
  store i64 %call31, i64* %flags, align 8, !dbg !5658
  br label %do.end, !dbg !5658

do.end:                                           ; preds = %do.body25
  br label %do.end32, !dbg !5651

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !5650

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5659, !srcloc !5660
  br label %do.body34, !dbg !5659

do.body34:                                        ; preds = %do.body33
  %24 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !5661
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %24, i32 0, i32 0, !dbg !5661
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5662
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !5663
  %rlock.i = bitcast %union.anon* %26 to %struct.raw_spinlock*, !dbg !5663
  br label %do.end36, !dbg !5661

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !5659

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !5650

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !5649

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !5644

do.end40:                                         ; preds = %do.end39
  br label %if.end41, !dbg !5644

if.end41:                                         ; preds = %do.end40, %if.end17
  %27 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !5642
  store %struct.uart_port* %27, %struct.uart_port** %tmp42, align 8, !dbg !5643
  %28 = load %struct.uart_port*, %struct.uart_port** %tmp42, align 8, !dbg !5642
  %29 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5664
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %29, i32 0, i32 2, !dbg !5665
  %buf = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 0, !dbg !5666
  %30 = load i8*, i8** %buf, align 8, !dbg !5666
  store i8* %30, i8** %xmit_buf, align 8, !dbg !5667
  %31 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !5668
  %xmit43 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %31, i32 0, i32 2, !dbg !5669
  %buf44 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit43, i32 0, i32 0, !dbg !5670
  store i8* null, i8** %buf44, align 8, !dbg !5671
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport45, metadata !5672, metadata !DIExpression()), !dbg !5673
  %32 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !5673
  store %struct.uart_port* %32, %struct.uart_port** %__uport45, align 8, !dbg !5673
  %33 = load %struct.uart_port*, %struct.uart_port** %__uport45, align 8, !dbg !5674
  %tobool46 = icmp ne %struct.uart_port* %33, null, !dbg !5674
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !5673

if.then47:                                        ; preds = %if.end41
  %34 = load %struct.uart_port*, %struct.uart_port** %__uport45, align 8, !dbg !5675
  %lock48 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 0, !dbg !5675
  %35 = load i64, i64* %flags, align 8, !dbg !5675
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i53, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !5679
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !5679
  store i32 1, i32* %tmp.i, align 4, !dbg !5679
  %36 = load i32, i32* %tmp.i, align 4, !dbg !5679
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !5686
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !5686
  store i32 1, i32* %tmp8.i, align 4, !dbg !5686
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !5686
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !5688
  call void @arch_local_irq_restore(i64 %38) #11, !dbg !5688
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5689, !srcloc !5691
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i53, align 8, !dbg !5692
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !5692
  %rlock.i54 = bitcast %union.anon* %40 to %struct.raw_spinlock*, !dbg !5692
  %41 = load %struct.uart_port*, %struct.uart_port** %__uport45, align 8, !dbg !5675
  call void @uart_port_deref(%struct.uart_port* %41) #10, !dbg !5675
  br label %if.end49, !dbg !5675

if.end49:                                         ; preds = %if.then47, %if.end41
  %42 = load i8*, i8** %xmit_buf, align 8, !dbg !5694
  %tobool50 = icmp ne i8* %42, null, !dbg !5694
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !5696

if.then51:                                        ; preds = %if.end49
  %43 = load i8*, i8** %xmit_buf, align 8, !dbg !5697
  %44 = ptrtoint i8* %43 to i64, !dbg !5697
  call void @free_pages(i64 %44, i32 0) #10, !dbg !5697
  br label %if.end52, !dbg !5697

if.end52:                                         ; preds = %if.then51, %if.end49
  ret void, !dbg !5698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_register_driver(%struct.uart_driver* %drv) #0 !dbg !5699 {
entry:
  %retval = alloca i32, align 4
  %drv.addr = alloca %struct.uart_driver*, align 8
  %normal = alloca %struct.tty_driver*, align 8
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %state30 = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !5702, metadata !DIExpression()), !dbg !5703
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %normal, metadata !5704, metadata !DIExpression()), !dbg !5705
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5706, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5708, metadata !DIExpression()), !dbg !5709
  store i32 -12, i32* %retval1, align 4, !dbg !5709
  br label %do.body, !dbg !5710

do.body:                                          ; preds = %entry
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5711
  %state = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 7, !dbg !5711
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5711
  %tobool = icmp ne %struct.uart_state* %1, null, !dbg !5711
  %lnot = xor i1 %tobool, true, !dbg !5711
  %lnot2 = xor i1 %lnot, true, !dbg !5711
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5711
  %conv = sext i32 %lnot.ext to i64, !dbg !5711
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5711
  br i1 %tobool3, label %if.then, label %if.end, !dbg !5714

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !5711

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !5715

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !5717

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !5715

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2538, i32 0, i64 12) #7, !dbg !5719, !srcloc !5721
  br label %do.end7, !dbg !5719

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !5715

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #7, !dbg !5722, !srcloc !5725
  unreachable, !dbg !5726

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !5715

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !5715

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !5714

do.end11:                                         ; preds = %if.end
  %2 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5727
  %nr = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %2, i32 0, i32 5, !dbg !5728
  %3 = load i32, i32* %nr, align 8, !dbg !5728
  %conv12 = sext i32 %3 to i64, !dbg !5727
  %call = call i8* @kcalloc(i64 %conv12, i64 360, i32 3264) #10, !dbg !5729
  %4 = bitcast i8* %call to %struct.uart_state*, !dbg !5729
  %5 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5730
  %state13 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %5, i32 0, i32 7, !dbg !5731
  store %struct.uart_state* %4, %struct.uart_state** %state13, align 8, !dbg !5732
  %6 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5733
  %state14 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %6, i32 0, i32 7, !dbg !5735
  %7 = load %struct.uart_state*, %struct.uart_state** %state14, align 8, !dbg !5735
  %tobool15 = icmp ne %struct.uart_state* %7, null, !dbg !5733
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !5736

if.then16:                                        ; preds = %do.end11
  br label %out, !dbg !5737

if.end17:                                         ; preds = %do.end11
  %8 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5738
  %nr18 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %8, i32 0, i32 5, !dbg !5739
  %9 = load i32, i32* %nr18, align 8, !dbg !5739
  %call19 = call %struct.tty_driver* @alloc_tty_driver(i32 %9) #10, !dbg !5740
  store %struct.tty_driver* %call19, %struct.tty_driver** %normal, align 8, !dbg !5741
  %10 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5742
  %tobool20 = icmp ne %struct.tty_driver* %10, null, !dbg !5742
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5744

if.then21:                                        ; preds = %if.end17
  br label %out_kfree, !dbg !5745

if.end22:                                         ; preds = %if.end17
  %11 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5746
  %12 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5747
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %12, i32 0, i32 8, !dbg !5748
  store %struct.tty_driver* %11, %struct.tty_driver** %tty_driver, align 8, !dbg !5749
  %13 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5750
  %driver_name = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %13, i32 0, i32 1, !dbg !5751
  %14 = load i8*, i8** %driver_name, align 8, !dbg !5751
  %15 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5752
  %driver_name23 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %15, i32 0, i32 4, !dbg !5753
  store i8* %14, i8** %driver_name23, align 8, !dbg !5754
  %16 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5755
  %dev_name = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %16, i32 0, i32 2, !dbg !5756
  %17 = load i8*, i8** %dev_name, align 8, !dbg !5756
  %18 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5757
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %18, i32 0, i32 5, !dbg !5758
  store i8* %17, i8** %name, align 8, !dbg !5759
  %19 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5760
  %major = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %19, i32 0, i32 3, !dbg !5761
  %20 = load i32, i32* %major, align 8, !dbg !5761
  %21 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5762
  %major24 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %21, i32 0, i32 7, !dbg !5763
  store i32 %20, i32* %major24, align 4, !dbg !5764
  %22 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5765
  %minor = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %22, i32 0, i32 4, !dbg !5766
  %23 = load i32, i32* %minor, align 4, !dbg !5766
  %24 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5767
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %24, i32 0, i32 8, !dbg !5768
  store i32 %23, i32* %minor_start, align 8, !dbg !5769
  %25 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5770
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %25, i32 0, i32 10, !dbg !5771
  store i16 3, i16* %type, align 8, !dbg !5772
  %26 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5773
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %26, i32 0, i32 11, !dbg !5774
  store i16 1, i16* %subtype, align 2, !dbg !5775
  %27 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5776
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %27, i32 0, i32 12, !dbg !5777
  %28 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !5778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !5778
  %29 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5779
  %init_termios25 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %29, i32 0, i32 12, !dbg !5780
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios25, i32 0, i32 2, !dbg !5781
  store i32 3261, i32* %c_cflag, align 4, !dbg !5782
  %30 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5783
  %init_termios26 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %30, i32 0, i32 12, !dbg !5784
  %c_ospeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios26, i32 0, i32 7, !dbg !5785
  store i32 9600, i32* %c_ospeed, align 4, !dbg !5786
  %31 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5787
  %init_termios27 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %31, i32 0, i32 12, !dbg !5788
  %c_ispeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios27, i32 0, i32 6, !dbg !5789
  store i32 9600, i32* %c_ispeed, align 4, !dbg !5790
  %32 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5791
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %32, i32 0, i32 13, !dbg !5792
  store i64 12, i64* %flags, align 8, !dbg !5793
  %33 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5794
  %34 = bitcast %struct.uart_driver* %33 to i8*, !dbg !5794
  %35 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5795
  %driver_state = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %35, i32 0, i32 19, !dbg !5796
  store i8* %34, i8** %driver_state, align 8, !dbg !5797
  %36 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5798
  call void @tty_set_operations(%struct.tty_driver* %36, %struct.tty_operations* @uart_ops) #10, !dbg !5799
  store i32 0, i32* %i, align 4, !dbg !5800
  br label %for.cond, !dbg !5802

for.cond:                                         ; preds = %for.inc, %if.end22
  %37 = load i32, i32* %i, align 4, !dbg !5803
  %38 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5805
  %nr28 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %38, i32 0, i32 5, !dbg !5806
  %39 = load i32, i32* %nr28, align 8, !dbg !5806
  %cmp = icmp slt i32 %37, %39, !dbg !5807
  br i1 %cmp, label %for.body, label %for.end, !dbg !5808

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state30, metadata !5809, metadata !DIExpression()), !dbg !5811
  %40 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5812
  %state31 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %40, i32 0, i32 7, !dbg !5813
  %41 = load %struct.uart_state*, %struct.uart_state** %state31, align 8, !dbg !5813
  %42 = load i32, i32* %i, align 4, !dbg !5814
  %idx.ext = sext i32 %42 to i64, !dbg !5815
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %41, i64 %idx.ext, !dbg !5815
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state30, align 8, !dbg !5811
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !5816, metadata !DIExpression()), !dbg !5817
  %43 = load %struct.uart_state*, %struct.uart_state** %state30, align 8, !dbg !5818
  %port32 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %43, i32 0, i32 0, !dbg !5819
  store %struct.tty_port* %port32, %struct.tty_port** %port, align 8, !dbg !5817
  %44 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5820
  call void @tty_port_init(%struct.tty_port* %44) #10, !dbg !5821
  %45 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !5822
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %45, i32 0, i32 3, !dbg !5823
  store %struct.tty_port_operations* @uart_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !5824
  br label %for.inc, !dbg !5825

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !5826
  %inc = add i32 %46, 1, !dbg !5826
  store i32 %inc, i32* %i, align 4, !dbg !5826
  br label %for.cond, !dbg !5827, !llvm.loop !5828

for.end:                                          ; preds = %for.cond
  %47 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5830
  %call33 = call i32 @tty_register_driver(%struct.tty_driver* %47) #10, !dbg !5831
  store i32 %call33, i32* %retval1, align 4, !dbg !5832
  %48 = load i32, i32* %retval1, align 4, !dbg !5833
  %cmp34 = icmp sge i32 %48, 0, !dbg !5835
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !5836

if.then36:                                        ; preds = %for.end
  %49 = load i32, i32* %retval1, align 4, !dbg !5837
  store i32 %49, i32* %retval, align 4, !dbg !5838
  br label %return, !dbg !5838

if.end37:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !5839
  br label %for.cond38, !dbg !5841

for.cond38:                                       ; preds = %for.inc45, %if.end37
  %50 = load i32, i32* %i, align 4, !dbg !5842
  %51 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5844
  %nr39 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %51, i32 0, i32 5, !dbg !5845
  %52 = load i32, i32* %nr39, align 8, !dbg !5845
  %cmp40 = icmp slt i32 %50, %52, !dbg !5846
  br i1 %cmp40, label %for.body42, label %for.end47, !dbg !5847

for.body42:                                       ; preds = %for.cond38
  %53 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5848
  %state43 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %53, i32 0, i32 7, !dbg !5849
  %54 = load %struct.uart_state*, %struct.uart_state** %state43, align 8, !dbg !5849
  %55 = load i32, i32* %i, align 4, !dbg !5850
  %idxprom = sext i32 %55 to i64, !dbg !5848
  %arrayidx = getelementptr %struct.uart_state, %struct.uart_state* %54, i64 %idxprom, !dbg !5848
  %port44 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %arrayidx, i32 0, i32 0, !dbg !5851
  call void @tty_port_destroy(%struct.tty_port* %port44) #10, !dbg !5852
  br label %for.inc45, !dbg !5852

for.inc45:                                        ; preds = %for.body42
  %56 = load i32, i32* %i, align 4, !dbg !5853
  %inc46 = add i32 %56, 1, !dbg !5853
  store i32 %inc46, i32* %i, align 4, !dbg !5853
  br label %for.cond38, !dbg !5854, !llvm.loop !5855

for.end47:                                        ; preds = %for.cond38
  %57 = load %struct.tty_driver*, %struct.tty_driver** %normal, align 8, !dbg !5857
  call void @put_tty_driver(%struct.tty_driver* %57) #10, !dbg !5858
  br label %out_kfree, !dbg !5858

out_kfree:                                        ; preds = %for.end47, %if.then21
  call void @llvm.dbg.label(metadata !5859), !dbg !5860
  %58 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5861
  %state48 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %58, i32 0, i32 7, !dbg !5862
  %59 = load %struct.uart_state*, %struct.uart_state** %state48, align 8, !dbg !5862
  %60 = bitcast %struct.uart_state* %59 to i8*, !dbg !5861
  call void @kfree(i8* %60) #10, !dbg !5863
  br label %out, !dbg !5863

out:                                              ; preds = %out_kfree, %if.then16
  call void @llvm.dbg.label(metadata !5864), !dbg !5865
  %61 = load i32, i32* %retval1, align 4, !dbg !5866
  store i32 %61, i32* %retval, align 4, !dbg !5867
  br label %return, !dbg !5867

return:                                           ; preds = %out, %if.then36
  %62 = load i32, i32* %retval, align 4, !dbg !5868
  ret i32 %62, !dbg !5868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !5869 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5874, metadata !DIExpression()), !dbg !5875
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5876, metadata !DIExpression()), !dbg !5877
  %0 = load i64, i64* %n.addr, align 8, !dbg !5878
  %1 = load i64, i64* %size.addr, align 8, !dbg !5879
  %2 = load i32, i32* %flags.addr, align 4, !dbg !5880
  %or = or i32 %2, 256, !dbg !5881
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #10, !dbg !5882
  ret i8* %call, !dbg !5883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #0 !dbg !5884 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !5889, metadata !DIExpression()), !dbg !5890
  %0 = load i32, i32* %lines.addr, align 4, !dbg !5891
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #10, !dbg !5891
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !5890
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !5892
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !5892
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #10, !dbg !5894
  br i1 %call1, label %if.then, label %if.end, !dbg !5895

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !5896
  br label %return, !dbg !5896

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !5897
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !5898
  br label %return, !dbg !5898

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !5899
  ret %struct.tty_driver* %4, !dbg !5899
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_unregister_driver(%struct.uart_driver* %drv) #0 !dbg !5900 {
entry:
  %drv.addr = alloca %struct.uart_driver*, align 8
  %p = alloca %struct.tty_driver*, align 8
  %i = alloca i32, align 4
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %p, metadata !5905, metadata !DIExpression()), !dbg !5906
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5907
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 8, !dbg !5908
  %1 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver, align 8, !dbg !5908
  store %struct.tty_driver* %1, %struct.tty_driver** %p, align 8, !dbg !5906
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5909, metadata !DIExpression()), !dbg !5910
  %2 = load %struct.tty_driver*, %struct.tty_driver** %p, align 8, !dbg !5911
  %call = call i32 @tty_unregister_driver(%struct.tty_driver* %2) #10, !dbg !5912
  %3 = load %struct.tty_driver*, %struct.tty_driver** %p, align 8, !dbg !5913
  call void @put_tty_driver(%struct.tty_driver* %3) #10, !dbg !5914
  store i32 0, i32* %i, align 4, !dbg !5915
  br label %for.cond, !dbg !5917

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !5918
  %5 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5920
  %nr = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %5, i32 0, i32 5, !dbg !5921
  %6 = load i32, i32* %nr, align 8, !dbg !5921
  %cmp = icmp ult i32 %4, %6, !dbg !5922
  br i1 %cmp, label %for.body, label %for.end, !dbg !5923

for.body:                                         ; preds = %for.cond
  %7 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5924
  %state = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %7, i32 0, i32 7, !dbg !5925
  %8 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5925
  %9 = load i32, i32* %i, align 4, !dbg !5926
  %idxprom = zext i32 %9 to i64, !dbg !5924
  %arrayidx = getelementptr %struct.uart_state, %struct.uart_state* %8, i64 %idxprom, !dbg !5924
  %port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %arrayidx, i32 0, i32 0, !dbg !5927
  call void @tty_port_destroy(%struct.tty_port* %port) #10, !dbg !5928
  br label %for.inc, !dbg !5928

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !5929
  %inc = add i32 %10, 1, !dbg !5929
  store i32 %inc, i32* %i, align 4, !dbg !5929
  br label %for.cond, !dbg !5930, !llvm.loop !5931

for.end:                                          ; preds = %for.cond
  %11 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5933
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %11, i32 0, i32 7, !dbg !5934
  %12 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !5934
  %13 = bitcast %struct.uart_state* %12 to i8*, !dbg !5933
  call void @kfree(i8* %13) #10, !dbg !5935
  %14 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5936
  %state2 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %14, i32 0, i32 7, !dbg !5937
  store %struct.uart_state* null, %struct.uart_state** %state2, align 8, !dbg !5938
  %15 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !5939
  %tty_driver3 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %15, i32 0, i32 8, !dbg !5940
  store %struct.tty_driver* null, %struct.tty_driver** %tty_driver3, align 8, !dbg !5941
  ret void, !dbg !5942
}

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.tty_driver* @uart_console_device(%struct.console* %co, i32* %index) #0 !dbg !5943 {
entry:
  %co.addr = alloca %struct.console*, align 8
  %index.addr = alloca i32*, align 8
  %p = alloca %struct.uart_driver*, align 8
  store %struct.console* %co, %struct.console** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.console** %co.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  store i32* %index, i32** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %p, metadata !5948, metadata !DIExpression()), !dbg !5949
  %0 = load %struct.console*, %struct.console** %co.addr, align 8, !dbg !5950
  %data = getelementptr inbounds %struct.console, %struct.console* %0, i32 0, i32 11, !dbg !5951
  %1 = load i8*, i8** %data, align 8, !dbg !5951
  %2 = bitcast i8* %1 to %struct.uart_driver*, !dbg !5950
  store %struct.uart_driver* %2, %struct.uart_driver** %p, align 8, !dbg !5949
  %3 = load %struct.console*, %struct.console** %co.addr, align 8, !dbg !5952
  %index1 = getelementptr inbounds %struct.console, %struct.console* %3, i32 0, i32 9, !dbg !5953
  %4 = load i16, i16* %index1, align 2, !dbg !5953
  %conv = sext i16 %4 to i32, !dbg !5952
  %5 = load i32*, i32** %index.addr, align 8, !dbg !5954
  store i32 %conv, i32* %5, align 4, !dbg !5955
  %6 = load %struct.uart_driver*, %struct.uart_driver** %p, align 8, !dbg !5956
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %6, i32 0, i32 8, !dbg !5957
  %7 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver, align 8, !dbg !5957
  ret %struct.tty_driver* %7, !dbg !5958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_add_one_port(%struct.uart_driver* %drv, %struct.uart_port* %uport) #0 !dbg !4500 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5959, metadata !DIExpression()), !dbg !5965
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5970, metadata !DIExpression()), !dbg !5971
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5972, metadata !DIExpression()), !dbg !5980
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5982, metadata !DIExpression()), !dbg !5983
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5984, metadata !DIExpression()), !dbg !5985
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5986, metadata !DIExpression()), !dbg !5987
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !5988, metadata !DIExpression()), !dbg !5994
  %tmp.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %drv.addr = alloca %struct.uart_driver*, align 8
  %uport.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %ret = alloca i32, align 4
  %tty_dev = alloca %struct.device*, align 8
  %num_groups = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6000, metadata !DIExpression()), !dbg !6001
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6006, metadata !DIExpression()), !dbg !6007
  store i32 0, i32* %ret, align 4, !dbg !6007
  call void @llvm.dbg.declare(metadata %struct.device** %tty_dev, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i32* %num_groups, metadata !6010, metadata !DIExpression()), !dbg !6011
  br label %do.body, !dbg !6012

do.body:                                          ; preds = %entry
  %0 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #6, !dbg !5994, !srcloc !6013
  store i32 %0, i32* %pfo_val__.i, align 4, !dbg !5994
  %1 = load i32, i32* %pfo_val__.i, align 4, !dbg !5994
  %conv.i = zext i32 %1 to i64, !dbg !5994
  store i32 %1, i32* %tmp.i, align 4, !dbg !5994
  %2 = load i32, i32* %tmp.i, align 4, !dbg !5994
  %and.i = and i32 %2, 2147483647, !dbg !6014
  %conv = sext i32 %and.i to i64, !dbg !6015
  %and = and i64 %conv, 16776960, !dbg !6015
  %tobool = icmp ne i64 %and, 0, !dbg !6015
  %lnot = xor i1 %tobool, true, !dbg !6015
  %lnot1 = xor i1 %lnot, true, !dbg !6015
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6015
  %conv2 = sext i32 %lnot.ext to i64, !dbg !6015
  %tobool3 = icmp ne i64 %conv2, 0, !dbg !6015
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6016

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !6015

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !6017

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !6019

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !6017

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2863, i32 0, i64 12) #7, !dbg !6021, !srcloc !6023
  br label %do.end7, !dbg !6021

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !6017

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #7, !dbg !6024, !srcloc !6027
  unreachable, !dbg !6028

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !6017

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !6017

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !6016

do.end11:                                         ; preds = %if.end
  %3 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6029
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 41, !dbg !6031
  %4 = load i32, i32* %line, align 4, !dbg !6031
  %5 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6032
  %nr = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %5, i32 0, i32 5, !dbg !6033
  %6 = load i32, i32* %nr, align 8, !dbg !6033
  %cmp = icmp uge i32 %4, %6, !dbg !6034
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !6035

if.then13:                                        ; preds = %do.end11
  store i32 -22, i32* %retval, align 4, !dbg !6036
  br label %return, !dbg !6036

if.end14:                                         ; preds = %do.end11
  %7 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6037
  %state15 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %7, i32 0, i32 7, !dbg !6038
  %8 = load %struct.uart_state*, %struct.uart_state** %state15, align 8, !dbg !6038
  %9 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6039
  %line16 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 41, !dbg !6040
  %10 = load i32, i32* %line16, align 4, !dbg !6040
  %idx.ext = zext i32 %10 to i64, !dbg !6041
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %8, i64 %idx.ext, !dbg !6041
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !6042
  %11 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6043
  %port17 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %11, i32 0, i32 0, !dbg !6044
  store %struct.tty_port* %port17, %struct.tty_port** %port, align 8, !dbg !6045
  call void @mutex_lock(%struct.mutex* @port_mutex) #10, !dbg !6046
  %12 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6047
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %12, i32 0, i32 13, !dbg !6048
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !6049
  %13 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6050
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %13, i32 0, i32 5, !dbg !6052
  %14 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !6052
  %tobool18 = icmp ne %struct.uart_port* %14, null, !dbg !6050
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !6053

if.then19:                                        ; preds = %if.end14
  store i32 -22, i32* %ret, align 4, !dbg !6054
  br label %out, !dbg !6056

if.end20:                                         ; preds = %if.end14
  %15 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6057
  %refcount = getelementptr inbounds %struct.uart_state, %struct.uart_state* %15, i32 0, i32 3, !dbg !6058
  store %struct.atomic_t* %refcount, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6059
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !6059
  store i8* %17, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6060
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !6061
  %conv.i.i = trunc i64 %19 to i32, !dbg !6061
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %18, i32 %conv.i.i) #11, !dbg !6062
  %20 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6063
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6063
  call void @kcsan_check_access(i8* %20, i64 %21, i32 5) #11, !dbg !6063
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6064
  %23 = load i32, i32* %i.addr.i, align 4, !dbg !6065
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %23, i32* %i.addr.i.i, align 4
  %24 = load i32, i32* %i.addr.i.i, align 4, !dbg !6066
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6066
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !6066
  store volatile i32 %24, i32* %counter.i.i, align 4, !dbg !6066
  br label %do.body21, !dbg !6068

do.body21:                                        ; preds = %if.end20
  %26 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6069
  %remove_wait = getelementptr inbounds %struct.uart_state, %struct.uart_state* %26, i32 0, i32 4, !dbg !6069
  call void @__init_waitqueue_head(%struct.wait_queue_head* %remove_wait, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @uart_add_one_port.__key) #10, !dbg !6069
  br label %do.end22, !dbg !6069

do.end22:                                         ; preds = %do.body21
  %27 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6071
  %28 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6072
  %uart_port23 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %28, i32 0, i32 5, !dbg !6073
  store %struct.uart_port* %27, %struct.uart_port** %uart_port23, align 8, !dbg !6074
  %29 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6075
  %30 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6076
  %state24 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 30, !dbg !6077
  store %struct.uart_state* %29, %struct.uart_state** %state24, align 8, !dbg !6078
  %31 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6079
  %pm_state = getelementptr inbounds %struct.uart_state, %struct.uart_state* %31, i32 0, i32 1, !dbg !6080
  store i32 4, i32* %pm_state, align 8, !dbg !6081
  %32 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6082
  %cons = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %32, i32 0, i32 6, !dbg !6083
  %33 = load %struct.console*, %struct.console** %cons, align 8, !dbg !6083
  %34 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6084
  %cons25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 32, !dbg !6085
  store %struct.console* %33, %struct.console** %cons25, align 8, !dbg !6086
  %35 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6087
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %35, i32 0, i32 8, !dbg !6088
  %36 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver, align 8, !dbg !6088
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %36, i32 0, i32 8, !dbg !6089
  %37 = load i32, i32* %minor_start, align 8, !dbg !6089
  %38 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6090
  %line26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %38, i32 0, i32 41, !dbg !6091
  %39 = load i32, i32* %line26, align 4, !dbg !6091
  %add = add i32 %37, %39, !dbg !6092
  %40 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6093
  %minor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %40, i32 0, i32 42, !dbg !6094
  store i32 %add, i32* %minor, align 8, !dbg !6095
  %41 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6096
  %dev_name = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %41, i32 0, i32 2, !dbg !6097
  %42 = load i8*, i8** %dev_name, align 8, !dbg !6097
  %43 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6098
  %tty_driver27 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %43, i32 0, i32 8, !dbg !6099
  %44 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver27, align 8, !dbg !6099
  %name_base = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %44, i32 0, i32 6, !dbg !6100
  %45 = load i32, i32* %name_base, align 8, !dbg !6100
  %46 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6101
  %line28 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %46, i32 0, i32 41, !dbg !6102
  %47 = load i32, i32* %line28, align 4, !dbg !6102
  %add29 = add i32 %45, %47, !dbg !6103
  %call30 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %42, i32 %add29) #10, !dbg !6104
  %48 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6105
  %name = getelementptr inbounds %struct.uart_port, %struct.uart_port* %48, i32 0, i32 53, !dbg !6106
  store i8* %call30, i8** %name, align 8, !dbg !6107
  %49 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6108
  %name31 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %49, i32 0, i32 53, !dbg !6110
  %50 = load i8*, i8** %name31, align 8, !dbg !6110
  %tobool32 = icmp ne i8* %50, null, !dbg !6108
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6111

if.then33:                                        ; preds = %do.end22
  store i32 -12, i32* %ret, align 4, !dbg !6112
  br label %out, !dbg !6114

if.end34:                                         ; preds = %do.end22
  %51 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6115
  %call35 = call zeroext i1 @uart_console_enabled(%struct.uart_port* %51) #10, !dbg !6117
  br i1 %call35, label %if.end37, label %if.then36, !dbg !6118

if.then36:                                        ; preds = %if.end34
  %52 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6119
  call void @uart_port_spin_lock_init(%struct.uart_port* %52) #10, !dbg !6120
  br label %if.end37, !dbg !6120

if.end37:                                         ; preds = %if.then36, %if.end34
  %53 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6121
  %cons38 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %53, i32 0, i32 32, !dbg !6123
  %54 = load %struct.console*, %struct.console** %cons38, align 8, !dbg !6123
  %tobool39 = icmp ne %struct.console* %54, null, !dbg !6121
  br i1 %tobool39, label %land.lhs.true, label %if.end47, !dbg !6124

land.lhs.true:                                    ; preds = %if.end37
  %55 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6125
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %55, i32 0, i32 45, !dbg !6126
  %56 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6126
  %tobool40 = icmp ne %struct.device* %56, null, !dbg !6125
  br i1 %tobool40, label %if.then41, label %if.end47, !dbg !6127

if.then41:                                        ; preds = %land.lhs.true
  %57 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6128
  %dev42 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %57, i32 0, i32 45, !dbg !6129
  %58 = load %struct.device*, %struct.device** %dev42, align 8, !dbg !6129
  %of_node = getelementptr inbounds %struct.device, %struct.device* %58, i32 0, i32 23, !dbg !6130
  %59 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6130
  %60 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6131
  %cons43 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %60, i32 0, i32 32, !dbg !6132
  %61 = load %struct.console*, %struct.console** %cons43, align 8, !dbg !6132
  %name44 = getelementptr inbounds %struct.console, %struct.console* %61, i32 0, i32 0, !dbg !6133
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name44, i64 0, i64 0, !dbg !6131
  %62 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6134
  %line45 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %62, i32 0, i32 41, !dbg !6135
  %63 = load i32, i32* %line45, align 4, !dbg !6135
  %call46 = call zeroext i1 @of_console_check(%struct.device_node* %59, i8* %arraydecay, i32 %63) #10, !dbg !6136
  br label %if.end47, !dbg !6136

if.end47:                                         ; preds = %if.then41, %land.lhs.true, %if.end37
  %64 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6137
  %65 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6138
  %tty_driver48 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %65, i32 0, i32 8, !dbg !6139
  %66 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver48, align 8, !dbg !6139
  %67 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6140
  %line49 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %67, i32 0, i32 41, !dbg !6141
  %68 = load i32, i32* %line49, align 4, !dbg !6141
  call void @tty_port_link_device(%struct.tty_port* %64, %struct.tty_driver* %66, i32 %68) #10, !dbg !6142
  %69 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6143
  %70 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6144
  %71 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6145
  call void @uart_configure_port(%struct.uart_driver* %69, %struct.uart_state* %70, %struct.uart_port* %71) #10, !dbg !6146
  %72 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6147
  store i32 0, i32* %tmp, align 4, !dbg !6147
  %73 = load i32, i32* %tmp, align 4, !dbg !6147
  %conv50 = trunc i32 %73 to i8, !dbg !6149
  %74 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6150
  %console = getelementptr inbounds %struct.tty_port, %struct.tty_port* %74, i32 0, i32 12, !dbg !6151
  %bf.load = load i8, i8* %console, align 8, !dbg !6152
  %bf.value = and i8 %conv50, 1, !dbg !6152
  %bf.clear = and i8 %bf.load, -2, !dbg !6152
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6152
  store i8 %bf.set, i8* %console, align 8, !dbg !6152
  store i32 2, i32* %num_groups, align 4, !dbg !6153
  %75 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6154
  %attr_group = getelementptr inbounds %struct.uart_port, %struct.uart_port* %75, i32 0, i32 54, !dbg !6156
  %76 = load %struct.attribute_group*, %struct.attribute_group** %attr_group, align 8, !dbg !6156
  %tobool51 = icmp ne %struct.attribute_group* %76, null, !dbg !6154
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !6157

if.then52:                                        ; preds = %if.end47
  %77 = load i32, i32* %num_groups, align 4, !dbg !6158
  %inc = add i32 %77, 1, !dbg !6158
  store i32 %inc, i32* %num_groups, align 4, !dbg !6158
  br label %if.end53, !dbg !6159

if.end53:                                         ; preds = %if.then52, %if.end47
  %78 = load i32, i32* %num_groups, align 4, !dbg !6160
  %conv54 = sext i32 %78 to i64, !dbg !6160
  %call55 = call i8* @kcalloc(i64 %conv54, i64 8, i32 3264) #10, !dbg !6161
  %79 = bitcast i8* %call55 to %struct.attribute_group**, !dbg !6161
  %80 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6162
  %tty_groups = getelementptr inbounds %struct.uart_port, %struct.uart_port* %80, i32 0, i32 55, !dbg !6163
  store %struct.attribute_group** %79, %struct.attribute_group*** %tty_groups, align 8, !dbg !6164
  %81 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6165
  %tty_groups56 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %81, i32 0, i32 55, !dbg !6167
  %82 = load %struct.attribute_group**, %struct.attribute_group*** %tty_groups56, align 8, !dbg !6167
  %tobool57 = icmp ne %struct.attribute_group** %82, null, !dbg !6165
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !6168

if.then58:                                        ; preds = %if.end53
  store i32 -12, i32* %ret, align 4, !dbg !6169
  br label %out, !dbg !6171

if.end59:                                         ; preds = %if.end53
  %83 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6172
  %tty_groups60 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %83, i32 0, i32 55, !dbg !6173
  %84 = load %struct.attribute_group**, %struct.attribute_group*** %tty_groups60, align 8, !dbg !6173
  %arrayidx = getelementptr %struct.attribute_group*, %struct.attribute_group** %84, i64 0, !dbg !6172
  store %struct.attribute_group* @tty_dev_attr_group, %struct.attribute_group** %arrayidx, align 8, !dbg !6174
  %85 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6175
  %attr_group61 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %85, i32 0, i32 54, !dbg !6177
  %86 = load %struct.attribute_group*, %struct.attribute_group** %attr_group61, align 8, !dbg !6177
  %tobool62 = icmp ne %struct.attribute_group* %86, null, !dbg !6175
  br i1 %tobool62, label %if.then63, label %if.end67, !dbg !6178

if.then63:                                        ; preds = %if.end59
  %87 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6179
  %attr_group64 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %87, i32 0, i32 54, !dbg !6180
  %88 = load %struct.attribute_group*, %struct.attribute_group** %attr_group64, align 8, !dbg !6180
  %89 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6181
  %tty_groups65 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %89, i32 0, i32 55, !dbg !6182
  %90 = load %struct.attribute_group**, %struct.attribute_group*** %tty_groups65, align 8, !dbg !6182
  %arrayidx66 = getelementptr %struct.attribute_group*, %struct.attribute_group** %90, i64 1, !dbg !6181
  store %struct.attribute_group* %88, %struct.attribute_group** %arrayidx66, align 8, !dbg !6183
  br label %if.end67, !dbg !6181

if.end67:                                         ; preds = %if.then63, %if.end59
  %91 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6184
  %92 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6185
  %tty_driver68 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %92, i32 0, i32 8, !dbg !6186
  %93 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver68, align 8, !dbg !6186
  %94 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6187
  %line69 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %94, i32 0, i32 41, !dbg !6188
  %95 = load i32, i32* %line69, align 4, !dbg !6188
  %96 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6189
  %dev70 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %96, i32 0, i32 45, !dbg !6190
  %97 = load %struct.device*, %struct.device** %dev70, align 8, !dbg !6190
  %98 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6191
  %99 = bitcast %struct.tty_port* %98 to i8*, !dbg !6191
  %100 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6192
  %tty_groups71 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %100, i32 0, i32 55, !dbg !6193
  %101 = load %struct.attribute_group**, %struct.attribute_group*** %tty_groups71, align 8, !dbg !6193
  %call72 = call %struct.device* @tty_port_register_device_attr_serdev(%struct.tty_port* %91, %struct.tty_driver* %93, i32 %95, %struct.device* %97, i8* %99, %struct.attribute_group** %101) #10, !dbg !6194
  store %struct.device* %call72, %struct.device** %tty_dev, align 8, !dbg !6195
  %102 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !6196
  %103 = bitcast %struct.device* %102 to i8*, !dbg !6196
  %call73 = call zeroext i1 @IS_ERR(i8* %103) #10, !dbg !6198
  br i1 %call73, label %if.else, label %if.then74, !dbg !6199

if.then74:                                        ; preds = %if.end67
  %104 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !6200
  call void @device_set_wakeup_capable(%struct.device* %104, i1 zeroext true) #10, !dbg !6202
  br label %if.end77, !dbg !6203

if.else:                                          ; preds = %if.end67
  %105 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6204
  %dev75 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %105, i32 0, i32 45, !dbg !6204
  %106 = load %struct.device*, %struct.device** %dev75, align 8, !dbg !6204
  %107 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6204
  %line76 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %107, i32 0, i32 41, !dbg !6204
  %108 = load i32, i32* %line76, align 4, !dbg !6204
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %106, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0), i32 %108) #12, !dbg !6204
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then74
  %109 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6206
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %109, i32 0, i32 33, !dbg !6207
  %110 = load i32, i32* %flags, align 8, !dbg !6208
  %and78 = and i32 %110, -1073741825, !dbg !6208
  store i32 %and78, i32* %flags, align 8, !dbg !6208
  br label %out, !dbg !6206

out:                                              ; preds = %if.end77, %if.then58, %if.then33, %if.then19
  call void @llvm.dbg.label(metadata !6209), !dbg !6210
  %111 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6211
  %mutex79 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %111, i32 0, i32 13, !dbg !6212
  call void @mutex_unlock(%struct.mutex* %mutex79) #10, !dbg !6213
  call void @mutex_unlock(%struct.mutex* @port_mutex) #10, !dbg !6214
  %112 = load i32, i32* %ret, align 4, !dbg !6215
  store i32 %112, i32* %retval, align 4, !dbg !6216
  br label %return, !dbg !6216

return:                                           ; preds = %out, %if.then13
  %113 = load i32, i32* %retval, align 4, !dbg !6217
  ret i32 %113, !dbg !6217
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @uart_console_enabled(%struct.uart_port* %port) #0 !dbg !6218 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %tmp = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6223
  store i32 0, i32* %tmp, align 4, !dbg !6223
  %1 = load i32, i32* %tmp, align 4, !dbg !6223
  %tobool = icmp ne i32 %1, 0, !dbg !6225
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6226

land.rhs:                                         ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6227
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 32, !dbg !6228
  %3 = load %struct.console*, %struct.console** %cons, align 8, !dbg !6228
  %flags = getelementptr inbounds %struct.console, %struct.console* %3, i32 0, i32 8, !dbg !6229
  %4 = load i16, i16* %flags, align 8, !dbg !6229
  %conv = sext i16 %4 to i32, !dbg !6227
  %and = and i32 %conv, 4, !dbg !6230
  %tobool1 = icmp ne i32 %and, 0, !dbg !6226
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !6231
  ret i1 %5, !dbg !6232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_port_spin_lock_init(%struct.uart_port* %port) #0 !dbg !6233 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !6234
  %port.addr = alloca %struct.uart_port*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6237, metadata !DIExpression()), !dbg !6238
  br label %do.body, !dbg !6239

do.body:                                          ; preds = %entry
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6240
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 0, !dbg !6240
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6241
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !6242
  %rlock.i = bitcast %union.anon* %2 to %struct.raw_spinlock*, !dbg !6242
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6240
  %lock1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 0, !dbg !6240
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6240
  %rlock = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !6240
  %5 = bitcast %struct.spinlock* %lock1 to i8*, !dbg !6240
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 %6, i64 0, i1 false), !dbg !6240
  br label %do.end, !dbg !6240

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !6243

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !6244

do.end3:                                          ; preds = %do.body2
  ret void, !dbg !6246
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_console_check(%struct.device_node*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_link_device(%struct.tty_port*, %struct.tty_driver*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_configure_port(%struct.uart_driver* %drv, %struct.uart_state* %state, %struct.uart_port* %port) #0 !dbg !6247 {
entry:
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !5559, metadata !DIExpression()), !dbg !6250
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !6254
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !6255
  %drv.addr = alloca %struct.uart_driver*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %port.addr = alloca %struct.uart_port*, align 8
  %flags = alloca i32, align 4
  %flags21 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %tmp54 = alloca i32, align 4
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !6262, metadata !DIExpression()), !dbg !6263
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !6264, metadata !DIExpression()), !dbg !6265
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6266, metadata !DIExpression()), !dbg !6267
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !6268, metadata !DIExpression()), !dbg !6269
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6270
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 1, !dbg !6272
  %1 = load i64, i64* %iobase, align 8, !dbg !6272
  %tobool = icmp ne i64 %1, 0, !dbg !6270
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6273

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6274
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 43, !dbg !6275
  %3 = load i64, i64* %mapbase, align 8, !dbg !6275
  %tobool1 = icmp ne i64 %3, 0, !dbg !6274
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !6276

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6277
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 2, !dbg !6278
  %5 = load i8*, i8** %membase, align 8, !dbg !6278
  %tobool3 = icmp ne i8* %5, null, !dbg !6277
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6279

if.then:                                          ; preds = %land.lhs.true2
  br label %if.end58, !dbg !6280

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store i32 0, i32* %flags, align 4, !dbg !6281
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6282
  %flags4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 33, !dbg !6284
  %7 = load i32, i32* %flags4, align 8, !dbg !6284
  %and = and i32 %7, 128, !dbg !6285
  %tobool5 = icmp ne i32 %and, 0, !dbg !6285
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !6286

if.then6:                                         ; preds = %if.end
  %8 = load i32, i32* %flags, align 4, !dbg !6287
  %or = or i32 %8, 2, !dbg !6287
  store i32 %or, i32* %flags, align 4, !dbg !6287
  br label %if.end7, !dbg !6288

if.end7:                                          ; preds = %if.then6, %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6289
  %flags8 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 33, !dbg !6291
  %10 = load i32, i32* %flags8, align 8, !dbg !6291
  %and9 = and i32 %10, 268435456, !dbg !6292
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6292
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !6293

if.then11:                                        ; preds = %if.end7
  %11 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6294
  %flags12 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 33, !dbg !6297
  %12 = load i32, i32* %flags12, align 8, !dbg !6297
  %and13 = and i32 %12, 134217728, !dbg !6298
  %tobool14 = icmp ne i32 %and13, 0, !dbg !6298
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !6299

if.then15:                                        ; preds = %if.then11
  %13 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6300
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 38, !dbg !6302
  store i32 0, i32* %type, align 4, !dbg !6303
  %14 = load i32, i32* %flags, align 4, !dbg !6304
  %or16 = or i32 %14, 1, !dbg !6304
  store i32 %or16, i32* %flags, align 4, !dbg !6304
  br label %if.end17, !dbg !6305

if.end17:                                         ; preds = %if.then15, %if.then11
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6306
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 39, !dbg !6307
  %16 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !6307
  %config_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %16, i32 0, i32 20, !dbg !6308
  %17 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %config_port, align 8, !dbg !6308
  %18 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6309
  %19 = load i32, i32* %flags, align 4, !dbg !6310
  call void %17(%struct.uart_port* %18, i32 %19) #10, !dbg !6306
  br label %if.end18, !dbg !6311

if.end18:                                         ; preds = %if.end17, %if.end7
  %20 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6312
  %type19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 38, !dbg !6313
  %21 = load i32, i32* %type19, align 4, !dbg !6313
  %cmp = icmp ne i32 %21, 0, !dbg !6314
  br i1 %cmp, label %if.then20, label %if.end58, !dbg !6315

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i64* %flags21, metadata !6316, metadata !DIExpression()), !dbg !6317
  %22 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6318
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6319
  call void @uart_report_port(%struct.uart_driver* %22, %struct.uart_port* %23) #10, !dbg !6320
  %24 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !6321
  call void @uart_change_pm(%struct.uart_state* %24, i32 0) #10, !dbg !6322
  br label %do.body, !dbg !6323

do.body:                                          ; preds = %if.then20
  br label %do.body22, !dbg !6324

do.body22:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6325, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6328, metadata !DIExpression()), !dbg !6327
  %cmp23 = icmp eq i64* %__dummy, %__dummy2, !dbg !6327
  %conv = zext i1 %cmp23 to i32, !dbg !6327
  store i32 1, i32* %tmp, align 4, !dbg !6327
  %25 = load i32, i32* %tmp, align 4, !dbg !6327
  br label %do.body24, !dbg !6329

do.body24:                                        ; preds = %do.body22
  br label %do.body25, !dbg !6330

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !6331

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !6333, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !6337, metadata !DIExpression()), !dbg !6336
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !6336
  %conv30 = zext i1 %cmp29 to i32, !dbg !6336
  store i32 1, i32* %tmp31, align 4, !dbg !6336
  %26 = load i32, i32* %tmp31, align 4, !dbg !6336
  %call = call i64 @arch_local_irq_save() #10, !dbg !6338
  store i64 %call, i64* %flags21, align 8, !dbg !6338
  br label %do.end, !dbg !6338

do.end:                                           ; preds = %do.body26
  br label %do.end32, !dbg !6331

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !6330

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6339, !srcloc !6340
  br label %do.body34, !dbg !6339

do.body34:                                        ; preds = %do.body33
  %27 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6341
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %27, i32 0, i32 0, !dbg !6341
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6342
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !6343
  %rlock.i = bitcast %union.anon* %29 to %struct.raw_spinlock*, !dbg !6343
  br label %do.end36, !dbg !6341

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !6339

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !6330

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !6329

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !6324

do.end40:                                         ; preds = %do.end39
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6344
  %ops41 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 39, !dbg !6345
  %31 = load %struct.uart_ops*, %struct.uart_ops** %ops41, align 8, !dbg !6345
  %set_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %31, i32 0, i32 1, !dbg !6346
  %32 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl, align 8, !dbg !6346
  %33 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6347
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6348
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 36, !dbg !6349
  %35 = load i32, i32* %mctrl, align 4, !dbg !6349
  %and42 = and i32 %35, 2, !dbg !6350
  call void %32(%struct.uart_port* %33, i32 %and42) #10, !dbg !6344
  %36 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6351
  %lock43 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %36, i32 0, i32 0, !dbg !6352
  %37 = load i64, i64* %flags21, align 8, !dbg !6353
  store %struct.spinlock* %lock43, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !6354
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !6354
  store i32 1, i32* %tmp.i, align 4, !dbg !6354
  %38 = load i32, i32* %tmp.i, align 4, !dbg !6354
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !6355
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !6355
  store i32 1, i32* %tmp8.i, align 4, !dbg !6355
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !6355
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !6356
  call void @arch_local_irq_restore(i64 %40) #11, !dbg !6356
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6357, !srcloc !5691
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !6358
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !6358
  %rlock.i60 = bitcast %union.anon* %42 to %struct.raw_spinlock*, !dbg !6358
  %43 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6359
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %43, i32 0, i32 32, !dbg !6361
  %44 = load %struct.console*, %struct.console** %cons, align 8, !dbg !6361
  %tobool44 = icmp ne %struct.console* %44, null, !dbg !6359
  br i1 %tobool44, label %land.lhs.true45, label %if.end53, !dbg !6362

land.lhs.true45:                                  ; preds = %do.end40
  %45 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6363
  %cons46 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %45, i32 0, i32 32, !dbg !6364
  %46 = load %struct.console*, %struct.console** %cons46, align 8, !dbg !6364
  %flags47 = getelementptr inbounds %struct.console, %struct.console* %46, i32 0, i32 8, !dbg !6365
  %47 = load i16, i16* %flags47, align 8, !dbg !6365
  %conv48 = sext i16 %47 to i32, !dbg !6363
  %and49 = and i32 %conv48, 4, !dbg !6366
  %tobool50 = icmp ne i32 %and49, 0, !dbg !6366
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !6367

if.then51:                                        ; preds = %land.lhs.true45
  %48 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6368
  %cons52 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %48, i32 0, i32 32, !dbg !6369
  %49 = load %struct.console*, %struct.console** %cons52, align 8, !dbg !6369
  call void @register_console(%struct.console* %49) #10, !dbg !6370
  br label %if.end53, !dbg !6370

if.end53:                                         ; preds = %if.then51, %land.lhs.true45, %do.end40
  %50 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6371
  store i32 0, i32* %tmp54, align 4, !dbg !6371
  %51 = load i32, i32* %tmp54, align 4, !dbg !6371
  %tobool55 = icmp ne i32 %51, 0, !dbg !6374
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !6375

if.then56:                                        ; preds = %if.end53
  %52 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !6376
  call void @uart_change_pm(%struct.uart_state* %52, i32 3) #10, !dbg !6377
  br label %if.end57, !dbg !6377

if.end57:                                         ; preds = %if.then56, %if.end53
  br label %if.end58, !dbg !6378

if.end58:                                         ; preds = %if.then, %if.end57, %if.end18
  ret void, !dbg !6379
}

; Function Attrs: noredzone
declare dso_local %struct.device* @tty_port_register_device_attr_serdev(%struct.tty_port*, %struct.tty_driver*, i32, %struct.device*, i8*, %struct.attribute_group**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6380 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6384, metadata !DIExpression()), !dbg !6385
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6386
  %1 = ptrtoint i8* %0 to i64, !dbg !6386
  %2 = inttoptr i64 %1 to i8*, !dbg !6386
  %3 = ptrtoint i8* %2 to i64, !dbg !6386
  %cmp = icmp uge i64 %3, -4095, !dbg !6386
  %lnot = xor i1 %cmp, true, !dbg !6386
  %lnot1 = xor i1 %lnot, true, !dbg !6386
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6386
  %conv = sext i32 %lnot.ext to i64, !dbg !6386
  %tobool = icmp ne i64 %conv, 0, !dbg !6386
  ret i1 %tobool, !dbg !6387
}

; Function Attrs: noredzone
declare dso_local void @device_set_wakeup_capable(%struct.device*, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_remove_one_port(%struct.uart_driver* %drv, %struct.uart_port* %uport) #0 !dbg !6388 {
entry:
  %v.addr.i1.i102 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i102, metadata !6389, metadata !DIExpression()), !dbg !6395
  %v.addr.i.i103 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i103, metadata !6405, metadata !DIExpression()), !dbg !6407
  %size.addr.i.i104 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i104, metadata !6409, metadata !DIExpression()), !dbg !6410
  %v.addr.i105 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i105, metadata !6411, metadata !DIExpression()), !dbg !6412
  %v.addr.i1.i96 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i96, metadata !6389, metadata !DIExpression()), !dbg !6413
  %v.addr.i.i97 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i97, metadata !6405, metadata !DIExpression()), !dbg !6417
  %size.addr.i.i98 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i98, metadata !6409, metadata !DIExpression()), !dbg !6419
  %v.addr.i99 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i99, metadata !6411, metadata !DIExpression()), !dbg !6420
  %i.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i.i, metadata !6421, metadata !DIExpression()), !dbg !6425
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !6437, metadata !DIExpression()), !dbg !6438
  %__ret.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i.i, metadata !6439, metadata !DIExpression()), !dbg !6441
  %tmp.i.i.i.i = alloca i32, align 4
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !6442, metadata !DIExpression()), !dbg !6443
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !6444, metadata !DIExpression()), !dbg !6445
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6446, metadata !DIExpression()), !dbg !6447
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6448, metadata !DIExpression()), !dbg !6450
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6452, metadata !DIExpression()), !dbg !6453
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6454, metadata !DIExpression()), !dbg !6455
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !5988, metadata !DIExpression()), !dbg !6456
  %tmp.i = alloca i32, align 4
  %drv.addr = alloca %struct.uart_driver*, align 8
  %uport.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uart_port = alloca %struct.uart_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp68 = alloca i64, align 8
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp92 = alloca i64, align 8
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !6460, metadata !DIExpression()), !dbg !6461
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6462, metadata !DIExpression()), !dbg !6463
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !6464, metadata !DIExpression()), !dbg !6465
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6466
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 7, !dbg !6467
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !6467
  %2 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6468
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 41, !dbg !6469
  %3 = load i32, i32* %line, align 4, !dbg !6469
  %idx.ext = zext i32 %3 to i64, !dbg !6470
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %1, i64 %idx.ext, !dbg !6470
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !6465
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !6471, metadata !DIExpression()), !dbg !6472
  %4 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6473
  %port2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %4, i32 0, i32 0, !dbg !6474
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !6472
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uart_port, metadata !6475, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6479, metadata !DIExpression()), !dbg !6480
  store i32 0, i32* %ret, align 4, !dbg !6480
  br label %do.body, !dbg !6481

do.body:                                          ; preds = %entry
  %5 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #6, !dbg !6456, !srcloc !6013
  store i32 %5, i32* %pfo_val__.i, align 4, !dbg !6456
  %6 = load i32, i32* %pfo_val__.i, align 4, !dbg !6456
  %conv.i = zext i32 %6 to i64, !dbg !6456
  store i32 %6, i32* %tmp.i, align 4, !dbg !6456
  %7 = load i32, i32* %tmp.i, align 4, !dbg !6456
  %and.i = and i32 %7, 2147483647, !dbg !6482
  %conv = sext i32 %and.i to i64, !dbg !6483
  %and = and i64 %conv, 16776960, !dbg !6483
  %tobool = icmp ne i64 %and, 0, !dbg !6483
  %lnot = xor i1 %tobool, true, !dbg !6483
  %lnot3 = xor i1 %lnot, true, !dbg !6483
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6483
  %conv4 = sext i32 %lnot.ext to i64, !dbg !6483
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !6483
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6484

if.then:                                          ; preds = %do.body
  br label %do.body6, !dbg !6483

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !6485

do.body7:                                         ; preds = %do.body6
  br label %do.end, !dbg !6487

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !6485

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 2965, i32 0, i64 12) #7, !dbg !6489, !srcloc !6491
  br label %do.end9, !dbg !6489

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !6485

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #7, !dbg !6492, !srcloc !6495
  unreachable, !dbg !6496

do.end11:                                         ; No predecessors!
  br label %do.end12, !dbg !6485

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !6485

if.end:                                           ; preds = %do.end12, %do.body
  br label %do.end13, !dbg !6484

do.end13:                                         ; preds = %if.end
  call void @mutex_lock(%struct.mutex* @port_mutex) #10, !dbg !6497
  %8 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6498
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %8, i32 0, i32 13, !dbg !6499
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !6500
  %9 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6501
  %call14 = call %struct.uart_port* @uart_port_check(%struct.uart_state* %9) #10, !dbg !6502
  store %struct.uart_port* %call14, %struct.uart_port** %uart_port, align 8, !dbg !6503
  %10 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !6504
  %11 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6506
  %cmp = icmp ne %struct.uart_port* %10, %11, !dbg !6507
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !6508

if.then16:                                        ; preds = %do.end13
  %12 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6509
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 45, !dbg !6509
  %13 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6509
  %14 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !6509
  %15 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6509
  call void (%struct.device*, i8*, ...) @_dev_alert(%struct.device* %13, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), %struct.uart_port* %14, %struct.uart_port* %15) #12, !dbg !6509
  br label %if.end17, !dbg !6509

if.end17:                                         ; preds = %if.then16, %do.end13
  %16 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !6510
  %tobool18 = icmp ne %struct.uart_port* %16, null, !dbg !6510
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !6512

if.then19:                                        ; preds = %if.end17
  %17 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6513
  %mutex20 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %17, i32 0, i32 13, !dbg !6515
  call void @mutex_unlock(%struct.mutex* %mutex20) #10, !dbg !6516
  store i32 -22, i32* %ret, align 4, !dbg !6517
  br label %out, !dbg !6518

if.end21:                                         ; preds = %if.end17
  %18 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6519
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 33, !dbg !6520
  %19 = load i32, i32* %flags, align 8, !dbg !6521
  %or = or i32 %19, 1073741824, !dbg !6521
  store i32 %or, i32* %flags, align 8, !dbg !6521
  %20 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6522
  %mutex22 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %20, i32 0, i32 13, !dbg !6523
  call void @mutex_unlock(%struct.mutex* %mutex22) #10, !dbg !6524
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6525
  %22 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !6526
  %tty_driver = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %22, i32 0, i32 8, !dbg !6527
  %23 = load %struct.tty_driver*, %struct.tty_driver** %tty_driver, align 8, !dbg !6527
  %24 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6528
  %line23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %24, i32 0, i32 41, !dbg !6529
  %25 = load i32, i32* %line23, align 4, !dbg !6529
  call void @tty_port_unregister_device(%struct.tty_port* %21, %struct.tty_driver* %23, i32 %25) #10, !dbg !6530
  %26 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6531
  %call24 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %26) #10, !dbg !6532
  store %struct.tty_struct* %call24, %struct.tty_struct** %tty, align 8, !dbg !6533
  %27 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6534
  %tobool25 = icmp ne %struct.tty_struct* %27, null, !dbg !6534
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !6536

if.then26:                                        ; preds = %if.end21
  %28 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6537
  %tty27 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %28, i32 0, i32 1, !dbg !6539
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty27, align 8, !dbg !6539
  call void @tty_vhangup(%struct.tty_struct* %29) #10, !dbg !6540
  %30 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6541
  call void @tty_kref_put(%struct.tty_struct* %30) #10, !dbg !6542
  br label %if.end28, !dbg !6543

if.end28:                                         ; preds = %if.then26, %if.end21
  %31 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6544
  store i32 0, i32* %tmp, align 4, !dbg !6544
  %32 = load i32, i32* %tmp, align 4, !dbg !6544
  %tobool29 = icmp ne i32 %32, 0, !dbg !6547
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6548

if.then30:                                        ; preds = %if.end28
  %33 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6549
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %33, i32 0, i32 32, !dbg !6550
  %34 = load %struct.console*, %struct.console** %cons, align 8, !dbg !6550
  %call31 = call i32 @unregister_console(%struct.console* %34) #10, !dbg !6551
  br label %if.end32, !dbg !6551

if.end32:                                         ; preds = %if.then30, %if.end28
  %35 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6552
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %35, i32 0, i32 38, !dbg !6554
  %36 = load i32, i32* %type, align 4, !dbg !6554
  %cmp33 = icmp ne i32 %36, 0, !dbg !6555
  br i1 %cmp33, label %land.lhs.true, label %if.end41, !dbg !6556

land.lhs.true:                                    ; preds = %if.end32
  %37 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6557
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 39, !dbg !6558
  %38 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !6558
  %release_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %38, i32 0, i32 18, !dbg !6559
  %release_port35 = bitcast {}** %release_port to void (%struct.uart_port*)**, !dbg !6559
  %39 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port35, align 8, !dbg !6559
  %tobool36 = icmp ne void (%struct.uart_port*)* %39, null, !dbg !6557
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !6560

if.then37:                                        ; preds = %land.lhs.true
  %40 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6561
  %ops38 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %40, i32 0, i32 39, !dbg !6562
  %41 = load %struct.uart_ops*, %struct.uart_ops** %ops38, align 8, !dbg !6562
  %release_port39 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %41, i32 0, i32 18, !dbg !6563
  %release_port40 = bitcast {}** %release_port39 to void (%struct.uart_port*)**, !dbg !6563
  %42 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port40, align 8, !dbg !6563
  %43 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6564
  call void %42(%struct.uart_port* %43) #10, !dbg !6561
  br label %if.end41, !dbg !6561

if.end41:                                         ; preds = %if.then37, %land.lhs.true, %if.end32
  %44 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6565
  %tty_groups = getelementptr inbounds %struct.uart_port, %struct.uart_port* %44, i32 0, i32 55, !dbg !6566
  %45 = load %struct.attribute_group**, %struct.attribute_group*** %tty_groups, align 8, !dbg !6566
  %46 = bitcast %struct.attribute_group** %45 to i8*, !dbg !6565
  call void @kfree(i8* %46) #10, !dbg !6567
  %47 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6568
  %name = getelementptr inbounds %struct.uart_port, %struct.uart_port* %47, i32 0, i32 53, !dbg !6569
  %48 = load i8*, i8** %name, align 8, !dbg !6569
  call void @kfree(i8* %48) #10, !dbg !6570
  %49 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6571
  %type42 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %49, i32 0, i32 38, !dbg !6572
  store i32 0, i32* %type42, align 4, !dbg !6573
  %50 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6574
  %mutex43 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %50, i32 0, i32 13, !dbg !6575
  call void @mutex_lock(%struct.mutex* %mutex43) #10, !dbg !6576
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6577, metadata !DIExpression()), !dbg !6578
  %51 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6578
  %refcount = getelementptr inbounds %struct.uart_state, %struct.uart_state* %51, i32 0, i32 3, !dbg !6578
  store %struct.atomic_t* %refcount, %struct.atomic_t** %v.addr.i, align 8
  %52 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6579
  %53 = bitcast %struct.atomic_t* %52 to i8*, !dbg !6579
  store i8* %53, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %54 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6580
  %55 = load i64, i64* %size.addr.i.i, align 8, !dbg !6581
  %conv.i.i = trunc i64 %55 to i32, !dbg !6581
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %54, i32 %conv.i.i) #11, !dbg !6582
  %56 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6583
  %57 = load i64, i64* %size.addr.i.i, align 8, !dbg !6583
  call void @kcsan_check_access(i8* %56, i64 %57, i32 7) #11, !dbg !6583
  %58 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6584
  store %struct.atomic_t* %58, %struct.atomic_t** %v.addr.i1.i, align 8
  %59 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6585
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %59, %struct.atomic_t** %v.addr.i.i.i, align 8
  %60 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !6586
  %sub.i.i.i = sub i32 0, %60, !dbg !6587
  %61 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !6588
  store i32 %sub.i.i.i, i32* %i.addr.i.i.i.i, align 4
  store %struct.atomic_t* %61, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %62 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !6589
  %63 = load i32, i32* %i.addr.i.i.i.i, align 4, !dbg !6441
  store i32 %63, i32* %__ret.i.i.i.i, align 4, !dbg !6441
  %64 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !6441
  %65 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !6441
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %65, i32 0, i32 0, !dbg !6441
  %66 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i.i, i32 %64, i32* %counter.i.i.i.i) #7, !dbg !6441, !srcloc !6590
  store i32 %66, i32* %__ret.i.i.i.i, align 4, !dbg !6441
  %67 = load i32, i32* %__ret.i.i.i.i, align 4, !dbg !6441
  store i32 %67, i32* %tmp.i.i.i.i, align 4, !dbg !6441
  %68 = load i32, i32* %tmp.i.i.i.i, align 4, !dbg !6441
  %add.i.i.i.i = add i32 %62, %68, !dbg !6591
  %cmp45 = icmp slt i32 %add.i.i.i.i, 0, !dbg !6578
  %lnot47 = xor i1 %cmp45, true, !dbg !6578
  %lnot49 = xor i1 %lnot47, true, !dbg !6578
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !6578
  store i32 %lnot.ext50, i32* %__ret_warn_on, align 4, !dbg !6578
  %69 = load i32, i32* %__ret_warn_on, align 4, !dbg !6592
  %tobool51 = icmp ne i32 %69, 0, !dbg !6592
  %lnot52 = xor i1 %tobool51, true, !dbg !6592
  %lnot54 = xor i1 %lnot52, true, !dbg !6592
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !6592
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !6592
  %tobool57 = icmp ne i64 %conv56, 0, !dbg !6592
  br i1 %tobool57, label %if.then58, label %if.end67, !dbg !6578

if.then58:                                        ; preds = %if.end41
  br label %do.body59, !dbg !6592

do.body59:                                        ; preds = %if.then58
  br label %do.body60, !dbg !6594

do.body60:                                        ; preds = %do.body59
  br label %do.end61, !dbg !6596

do.end61:                                         ; preds = %do.body60
  br label %do.body62, !dbg !6594

do.body62:                                        ; preds = %do.end61
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 3018, i32 2305, i64 12) #7, !dbg !6598, !srcloc !6600
  br label %do.end63, !dbg !6598

do.end63:                                         ; preds = %do.body62
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #7, !dbg !6601, !srcloc !6603
  br label %do.body64, !dbg !6594

do.body64:                                        ; preds = %do.end63
  br label %do.end65, !dbg !6604

do.end65:                                         ; preds = %do.body64
  br label %do.end66, !dbg !6594

do.end66:                                         ; preds = %do.end65
  br label %if.end67, !dbg !6594

if.end67:                                         ; preds = %do.end66, %if.end41
  %70 = load i32, i32* %__ret_warn_on, align 4, !dbg !6578
  %tobool69 = icmp ne i32 %70, 0, !dbg !6578
  %lnot70 = xor i1 %tobool69, true, !dbg !6578
  %lnot72 = xor i1 %lnot70, true, !dbg !6578
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !6578
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !6578
  store i64 %conv74, i64* %tmp68, align 8, !dbg !6592
  %71 = load i64, i64* %tmp68, align 8, !dbg !6578
  br label %do.body75, !dbg !6606

do.body75:                                        ; preds = %if.end67
  br label %do.body76, !dbg !6607

do.body76:                                        ; preds = %do.body75
  br label %do.body77, !dbg !6608

do.body77:                                        ; preds = %do.body76
  br label %do.end78, !dbg !6610

do.end78:                                         ; preds = %do.body77
  br label %do.end79, !dbg !6608

do.end79:                                         ; preds = %do.end78
  %72 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6612
  %refcount80 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %72, i32 0, i32 3, !dbg !6612
  store %struct.atomic_t* %refcount80, %struct.atomic_t** %v.addr.i99, align 8
  %73 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i99, align 8, !dbg !6613
  %74 = bitcast %struct.atomic_t* %73 to i8*, !dbg !6613
  store i8* %74, i8** %v.addr.i.i97, align 8
  store i64 4, i64* %size.addr.i.i98, align 8
  %75 = load i8*, i8** %v.addr.i.i97, align 8, !dbg !6614
  %76 = load i64, i64* %size.addr.i.i98, align 8, !dbg !6615
  %conv.i.i100 = trunc i64 %76 to i32, !dbg !6615
  %call.i.i101 = call zeroext i1 @kasan_check_read(i8* %75, i32 %conv.i.i100) #11, !dbg !6616
  %77 = load i8*, i8** %v.addr.i.i97, align 8, !dbg !6617
  %78 = load i64, i64* %size.addr.i.i98, align 8, !dbg !6617
  call void @kcsan_check_access(i8* %77, i64 %78, i32 4) #11, !dbg !6617
  %79 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i99, align 8, !dbg !6618
  store %struct.atomic_t* %79, %struct.atomic_t** %v.addr.i1.i96, align 8
  %80 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i96, align 8, !dbg !6619
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %80, i32 0, i32 0, !dbg !6619
  %81 = load volatile i32, i32* %counter.i.i, align 4, !dbg !6619
  %tobool82 = icmp ne i32 %81, 0, !dbg !6612
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !6607

if.then83:                                        ; preds = %do.end79
  br label %do.end93, !dbg !6612

if.end84:                                         ; preds = %do.end79
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !6620, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6633, metadata !DIExpression()), !dbg !6632
  store i64 0, i64* %__ret, align 8, !dbg !6632
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #10, !dbg !6632
  br label %for.cond, !dbg !6632

for.cond:                                         ; preds = %if.end90, %if.end84
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !6634, metadata !DIExpression()), !dbg !6635
  %82 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6635
  %remove_wait = getelementptr inbounds %struct.uart_state, %struct.uart_state* %82, i32 0, i32 4, !dbg !6635
  %call85 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %remove_wait, %struct.wait_queue_entry* %__wq_entry, i32 2) #10, !dbg !6635
  store i64 %call85, i64* %__int, align 8, !dbg !6635
  %83 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6636
  %refcount86 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %83, i32 0, i32 3, !dbg !6636
  store %struct.atomic_t* %refcount86, %struct.atomic_t** %v.addr.i105, align 8
  %84 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i105, align 8, !dbg !6637
  %85 = bitcast %struct.atomic_t* %84 to i8*, !dbg !6637
  store i8* %85, i8** %v.addr.i.i103, align 8
  store i64 4, i64* %size.addr.i.i104, align 8
  %86 = load i8*, i8** %v.addr.i.i103, align 8, !dbg !6638
  %87 = load i64, i64* %size.addr.i.i104, align 8, !dbg !6639
  %conv.i.i106 = trunc i64 %87 to i32, !dbg !6639
  %call.i.i107 = call zeroext i1 @kasan_check_read(i8* %86, i32 %conv.i.i106) #11, !dbg !6640
  %88 = load i8*, i8** %v.addr.i.i103, align 8, !dbg !6641
  %89 = load i64, i64* %size.addr.i.i104, align 8, !dbg !6641
  call void @kcsan_check_access(i8* %88, i64 %89, i32 4) #11, !dbg !6641
  %90 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i105, align 8, !dbg !6642
  store %struct.atomic_t* %90, %struct.atomic_t** %v.addr.i1.i102, align 8
  %91 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i102, align 8, !dbg !6643
  %counter.i.i108 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %91, i32 0, i32 0, !dbg !6643
  %92 = load volatile i32, i32* %counter.i.i108, align 4, !dbg !6643
  %tobool88 = icmp ne i32 %92, 0, !dbg !6636
  br i1 %tobool88, label %if.end90, label %if.then89, !dbg !6635

if.then89:                                        ; preds = %for.cond
  br label %for.end, !dbg !6636

if.end90:                                         ; preds = %for.cond
  call void @schedule() #10, !dbg !6635
  br label %for.cond, !dbg !6644, !llvm.loop !6645

for.end:                                          ; preds = %if.then89
  %93 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6632
  %remove_wait91 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %93, i32 0, i32 4, !dbg !6632
  call void @finish_wait(%struct.wait_queue_head* %remove_wait91, %struct.wait_queue_entry* %__wq_entry) #10, !dbg !6632
  br label %__out, !dbg !6632

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !6647), !dbg !6632
  %94 = load i64, i64* %__ret, align 8, !dbg !6632
  store i64 %94, i64* %tmp92, align 8, !dbg !6632
  %95 = load i64, i64* %tmp92, align 8, !dbg !6632
  br label %do.end93, !dbg !6607

do.end93:                                         ; preds = %__out, %if.then83
  %96 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6648
  %uart_port94 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %96, i32 0, i32 5, !dbg !6649
  store %struct.uart_port* null, %struct.uart_port** %uart_port94, align 8, !dbg !6650
  %97 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6651
  %mutex95 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %97, i32 0, i32 13, !dbg !6652
  call void @mutex_unlock(%struct.mutex* %mutex95) #10, !dbg !6653
  br label %out, !dbg !6653

out:                                              ; preds = %do.end93, %if.then19
  call void @llvm.dbg.label(metadata !6654), !dbg !6655
  call void @mutex_unlock(%struct.mutex* @port_mutex) #10, !dbg !6656
  %98 = load i32, i32* %ret, align 4, !dbg !6657
  ret i32 %98, !dbg !6658
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.uart_port* @uart_port_check(%struct.uart_state* %state) #0 !dbg !6659 {
entry:
  %state.addr = alloca %struct.uart_state*, align 8
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  br label %do.body, !dbg !6664

do.body:                                          ; preds = %entry
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !6665
  %port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %0, i32 0, i32 0, !dbg !6665
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !6665
  br label %do.end, !dbg !6665

do.end:                                           ; preds = %do.body
  %1 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !6667
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 5, !dbg !6668
  %2 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !6668
  ret %struct.uart_port* %2, !dbg !6669
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_alert(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @tty_port_unregister_device(%struct.tty_port*, %struct.tty_driver*, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_struct* @tty_port_tty_get(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local void @tty_vhangup(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_kref_put(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @unregister_console(%struct.console*) #2

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_match_port(%struct.uart_port* %port1, %struct.uart_port* %port2) #0 !dbg !6670 {
entry:
  %retval = alloca i32, align 4
  %port1.addr = alloca %struct.uart_port*, align 8
  %port2.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port1, %struct.uart_port** %port1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port1.addr, metadata !6673, metadata !DIExpression()), !dbg !6674
  store %struct.uart_port* %port2, %struct.uart_port** %port2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port2.addr, metadata !6675, metadata !DIExpression()), !dbg !6676
  %0 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6677
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 26, !dbg !6679
  %1 = load i8, i8* %iotype, align 2, !dbg !6679
  %conv = zext i8 %1 to i32, !dbg !6677
  %2 = load %struct.uart_port*, %struct.uart_port** %port2.addr, align 8, !dbg !6680
  %iotype1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 26, !dbg !6681
  %3 = load i8, i8* %iotype1, align 2, !dbg !6681
  %conv2 = zext i8 %3 to i32, !dbg !6680
  %cmp = icmp ne i32 %conv, %conv2, !dbg !6682
  br i1 %cmp, label %if.then, label %if.end, !dbg !6683

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6684
  br label %return, !dbg !6684

if.end:                                           ; preds = %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6685
  %iotype4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 26, !dbg !6686
  %5 = load i8, i8* %iotype4, align 2, !dbg !6686
  %conv5 = zext i8 %5 to i32, !dbg !6685
  switch i32 %conv5, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb19
    i32 7, label %sw.bb19
    i32 3, label %sw.bb19
    i32 6, label %sw.bb19
    i32 4, label %sw.bb19
    i32 5, label %sw.bb19
  ], !dbg !6687

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6688
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 1, !dbg !6690
  %7 = load i64, i64* %iobase, align 8, !dbg !6690
  %8 = load %struct.uart_port*, %struct.uart_port** %port2.addr, align 8, !dbg !6691
  %iobase6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 1, !dbg !6692
  %9 = load i64, i64* %iobase6, align 8, !dbg !6692
  %cmp7 = icmp eq i64 %7, %9, !dbg !6693
  %conv8 = zext i1 %cmp7 to i32, !dbg !6693
  store i32 %conv8, i32* %retval, align 4, !dbg !6694
  br label %return, !dbg !6694

sw.bb9:                                           ; preds = %if.end
  %10 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6695
  %iobase10 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 1, !dbg !6696
  %11 = load i64, i64* %iobase10, align 8, !dbg !6696
  %12 = load %struct.uart_port*, %struct.uart_port** %port2.addr, align 8, !dbg !6697
  %iobase11 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 1, !dbg !6698
  %13 = load i64, i64* %iobase11, align 8, !dbg !6698
  %cmp12 = icmp eq i64 %11, %13, !dbg !6699
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !6700

land.rhs:                                         ; preds = %sw.bb9
  %14 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6701
  %hub6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 50, !dbg !6702
  %15 = load i8, i8* %hub6, align 2, !dbg !6702
  %conv14 = zext i8 %15 to i32, !dbg !6701
  %16 = load %struct.uart_port*, %struct.uart_port** %port2.addr, align 8, !dbg !6703
  %hub615 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 50, !dbg !6704
  %17 = load i8, i8* %hub615, align 2, !dbg !6704
  %conv16 = zext i8 %17 to i32, !dbg !6703
  %cmp17 = icmp eq i32 %conv14, %conv16, !dbg !6705
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb9
  %18 = phi i1 [ false, %sw.bb9 ], [ %cmp17, %land.rhs ], !dbg !6706
  %land.ext = zext i1 %18 to i32, !dbg !6700
  store i32 %land.ext, i32* %retval, align 4, !dbg !6707
  br label %return, !dbg !6707

sw.bb19:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %19 = load %struct.uart_port*, %struct.uart_port** %port1.addr, align 8, !dbg !6708
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 43, !dbg !6709
  %20 = load i64, i64* %mapbase, align 8, !dbg !6709
  %21 = load %struct.uart_port*, %struct.uart_port** %port2.addr, align 8, !dbg !6710
  %mapbase20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 43, !dbg !6711
  %22 = load i64, i64* %mapbase20, align 8, !dbg !6711
  %cmp21 = icmp eq i64 %20, %22, !dbg !6712
  %conv22 = zext i1 %cmp21 to i32, !dbg !6712
  store i32 %conv22, i32* %retval, align 4, !dbg !6713
  br label %return, !dbg !6713

sw.epilog:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6714
  br label %return, !dbg !6714

return:                                           ; preds = %sw.epilog, %sw.bb19, %land.end, %sw.bb, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !6715
  ret i32 %23, !dbg !6715
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_handle_dcd_change(%struct.uart_port* %uport, i32 %status) #0 !dbg !6716 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  %status.addr = alloca i32, align 4
  %port = alloca %struct.tty_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %ld = alloca %struct.tty_ldisc*, align 8
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6717, metadata !DIExpression()), !dbg !6718
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !6719, metadata !DIExpression()), !dbg !6720
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !6721, metadata !DIExpression()), !dbg !6722
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6723
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !6724
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6724
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 0, !dbg !6725
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !6722
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !6726, metadata !DIExpression()), !dbg !6727
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6728
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 1, !dbg !6729
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty2, align 8, !dbg !6729
  store %struct.tty_struct* %3, %struct.tty_struct** %tty, align 8, !dbg !6727
  call void @llvm.dbg.declare(metadata %struct.tty_ldisc** %ld, metadata !6730, metadata !DIExpression()), !dbg !6731
  br label %do.body, !dbg !6732

do.body:                                          ; preds = %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6733
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !6733
  br label %do.end, !dbg !6733

do.end:                                           ; preds = %do.body
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6735
  %tobool = icmp ne %struct.tty_struct* %5, null, !dbg !6735
  br i1 %tobool, label %if.then, label %if.end10, !dbg !6737

if.then:                                          ; preds = %do.end
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6738
  %call = call %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct* %6) #10, !dbg !6740
  store %struct.tty_ldisc* %call, %struct.tty_ldisc** %ld, align 8, !dbg !6741
  %7 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !6742
  %tobool3 = icmp ne %struct.tty_ldisc* %7, null, !dbg !6742
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !6744

if.then4:                                         ; preds = %if.then
  %8 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !6745
  %ops = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %8, i32 0, i32 0, !dbg !6748
  %9 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops, align 8, !dbg !6748
  %dcd_change = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %9, i32 0, i32 16, !dbg !6749
  %10 = load void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i32)** %dcd_change, align 8, !dbg !6749
  %tobool5 = icmp ne void (%struct.tty_struct*, i32)* %10, null, !dbg !6745
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !6750

if.then6:                                         ; preds = %if.then4
  %11 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !6751
  %ops7 = getelementptr inbounds %struct.tty_ldisc, %struct.tty_ldisc* %11, i32 0, i32 0, !dbg !6752
  %12 = load %struct.tty_ldisc_ops*, %struct.tty_ldisc_ops** %ops7, align 8, !dbg !6752
  %dcd_change8 = getelementptr inbounds %struct.tty_ldisc_ops, %struct.tty_ldisc_ops* %12, i32 0, i32 16, !dbg !6753
  %13 = load void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i32)** %dcd_change8, align 8, !dbg !6753
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6754
  %15 = load i32, i32* %status.addr, align 4, !dbg !6755
  call void %13(%struct.tty_struct* %14, i32 %15) #10, !dbg !6751
  br label %if.end, !dbg !6751

if.end:                                           ; preds = %if.then6, %if.then4
  %16 = load %struct.tty_ldisc*, %struct.tty_ldisc** %ld, align 8, !dbg !6756
  call void @tty_ldisc_deref(%struct.tty_ldisc* %16) #10, !dbg !6757
  br label %if.end9, !dbg !6758

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10, !dbg !6759

if.end10:                                         ; preds = %if.end9, %do.end
  %17 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6760
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 31, !dbg !6761
  %dcd = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 3, !dbg !6762
  %18 = load i32, i32* %dcd, align 4, !dbg !6763
  %inc = add i32 %18, 1, !dbg !6763
  store i32 %inc, i32* %dcd, align 4, !dbg !6763
  %19 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6764
  %call11 = call i32 @uart_dcd_enabled(%struct.uart_port* %19) #10, !dbg !6766
  %tobool12 = icmp ne i32 %call11, 0, !dbg !6766
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !6767

if.then13:                                        ; preds = %if.end10
  %20 = load i32, i32* %status.addr, align 4, !dbg !6768
  %tobool14 = icmp ne i32 %20, 0, !dbg !6768
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !6771

if.then15:                                        ; preds = %if.then13
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !6772
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %21, i32 0, i32 8, !dbg !6772
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #10, !dbg !6772
  br label %if.end19, !dbg !6772

if.else:                                          ; preds = %if.then13
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6773
  %tobool16 = icmp ne %struct.tty_struct* %22, null, !dbg !6773
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6775

if.then17:                                        ; preds = %if.else
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6776
  call void @tty_hangup(%struct.tty_struct* %23) #10, !dbg !6777
  br label %if.end18, !dbg !6777

if.end18:                                         ; preds = %if.then17, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then15
  br label %if.end20, !dbg !6778

if.end20:                                         ; preds = %if.end19, %if.end10
  ret void, !dbg !6779
}

; Function Attrs: noredzone
declare dso_local %struct.tty_ldisc* @tty_ldisc_ref(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_ldisc_deref(%struct.tty_ldisc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_dcd_enabled(%struct.uart_port* %uport) #0 !dbg !6780 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6781, metadata !DIExpression()), !dbg !6782
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6783
  %status = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 34, !dbg !6784
  %1 = load i32, i32* %status, align 4, !dbg !6784
  %and = and i32 %1, 2, !dbg !6785
  %tobool = icmp ne i32 %and, 0, !dbg !6786
  %lnot = xor i1 %tobool, true, !dbg !6786
  %lnot1 = xor i1 %lnot, true, !dbg !6787
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6787
  ret i32 %lnot.ext, !dbg !6788
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @tty_hangup(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_handle_cts_change(%struct.uart_port* %uport, i32 %status) #0 !dbg !6789 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  %status.addr = alloca i32, align 4
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !6792, metadata !DIExpression()), !dbg !6793
  br label %do.body, !dbg !6794

do.body:                                          ; preds = %entry
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6795
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 0, !dbg !6795
  br label %do.end, !dbg !6795

do.end:                                           ; preds = %do.body
  %1 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6797
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 31, !dbg !6798
  %cts = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 0, !dbg !6799
  %2 = load i32, i32* %cts, align 8, !dbg !6800
  %inc = add i32 %2, 1, !dbg !6800
  store i32 %inc, i32* %cts, align 8, !dbg !6800
  %3 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6801
  %call = call zeroext i1 @uart_softcts_mode(%struct.uart_port* %3) #10, !dbg !6803
  br i1 %call, label %if.then, label %if.end13, !dbg !6804

if.then:                                          ; preds = %do.end
  %4 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6805
  %hw_stopped = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 35, !dbg !6808
  %5 = load i32, i32* %hw_stopped, align 8, !dbg !6808
  %tobool = icmp ne i32 %5, 0, !dbg !6805
  br i1 %tobool, label %if.then1, label %if.else, !dbg !6809

if.then1:                                         ; preds = %if.then
  %6 = load i32, i32* %status.addr, align 4, !dbg !6810
  %tobool2 = icmp ne i32 %6, 0, !dbg !6810
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6813

if.then3:                                         ; preds = %if.then1
  %7 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6814
  %hw_stopped4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 35, !dbg !6816
  store i32 0, i32* %hw_stopped4, align 8, !dbg !6817
  %8 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6818
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 39, !dbg !6819
  %9 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !6819
  %start_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %9, i32 0, i32 4, !dbg !6820
  %start_tx5 = bitcast {}** %start_tx to void (%struct.uart_port*)**, !dbg !6820
  %10 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %start_tx5, align 8, !dbg !6820
  %11 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6821
  call void %10(%struct.uart_port* %11) #10, !dbg !6818
  %12 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6822
  call void @uart_write_wakeup(%struct.uart_port* %12) #10, !dbg !6823
  br label %if.end, !dbg !6824

if.end:                                           ; preds = %if.then3, %if.then1
  br label %if.end12, !dbg !6825

if.else:                                          ; preds = %if.then
  %13 = load i32, i32* %status.addr, align 4, !dbg !6826
  %tobool6 = icmp ne i32 %13, 0, !dbg !6826
  br i1 %tobool6, label %if.end11, label %if.then7, !dbg !6829

if.then7:                                         ; preds = %if.else
  %14 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6830
  %hw_stopped8 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 35, !dbg !6832
  store i32 1, i32* %hw_stopped8, align 8, !dbg !6833
  %15 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6834
  %ops9 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 39, !dbg !6835
  %16 = load %struct.uart_ops*, %struct.uart_ops** %ops9, align 8, !dbg !6835
  %stop_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %16, i32 0, i32 3, !dbg !6836
  %stop_tx10 = bitcast {}** %stop_tx to void (%struct.uart_port*)**, !dbg !6836
  %17 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_tx10, align 8, !dbg !6836
  %18 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6837
  call void %17(%struct.uart_port* %18) #10, !dbg !6834
  br label %if.end11, !dbg !6838

if.end11:                                         ; preds = %if.then7, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.end
  br label %if.end13, !dbg !6839

if.end13:                                         ; preds = %if.end12, %do.end
  ret void, !dbg !6840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @uart_softcts_mode(%struct.uart_port* %uport) #0 !dbg !6841 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  %mask = alloca i32, align 4
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i32 9, i32* %mask, align 4, !dbg !6845
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !6846
  %status = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 34, !dbg !6847
  %1 = load i32, i32* %status, align 4, !dbg !6847
  %2 = load i32, i32* %mask, align 4, !dbg !6848
  %and = and i32 %1, %2, !dbg !6849
  %cmp = icmp eq i32 %and, 1, !dbg !6850
  ret i1 %cmp, !dbg !6851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @uart_insert_char(%struct.uart_port* %port, i32 %status, i32 %overrun, i32 %ch, i32 %flag) #0 !dbg !6852 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %status.addr = alloca i32, align 4
  %overrun.addr = alloca i32, align 4
  %ch.addr = alloca i32, align 4
  %flag.addr = alloca i32, align 4
  %tport = alloca %struct.tty_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6855, metadata !DIExpression()), !dbg !6856
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !6857, metadata !DIExpression()), !dbg !6858
  store i32 %overrun, i32* %overrun.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %overrun.addr, metadata !6859, metadata !DIExpression()), !dbg !6860
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !6861, metadata !DIExpression()), !dbg !6862
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !6863, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.declare(metadata %struct.tty_port** %tport, metadata !6865, metadata !DIExpression()), !dbg !6866
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6867
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !6868
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6868
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 0, !dbg !6869
  store %struct.tty_port* %port1, %struct.tty_port** %tport, align 8, !dbg !6866
  %2 = load i32, i32* %status.addr, align 4, !dbg !6870
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6872
  %ignore_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 29, !dbg !6873
  %4 = load i32, i32* %ignore_status_mask, align 8, !dbg !6873
  %and = and i32 %2, %4, !dbg !6874
  %5 = load i32, i32* %overrun.addr, align 4, !dbg !6875
  %neg = xor i32 %5, -1, !dbg !6876
  %and2 = and i32 %and, %neg, !dbg !6877
  %cmp = icmp eq i32 %and2, 0, !dbg !6878
  br i1 %cmp, label %if.then, label %if.end7, !dbg !6879

if.then:                                          ; preds = %entry
  %6 = load %struct.tty_port*, %struct.tty_port** %tport, align 8, !dbg !6880
  %7 = load i32, i32* %ch.addr, align 4, !dbg !6882
  %conv = trunc i32 %7 to i8, !dbg !6882
  %8 = load i32, i32* %flag.addr, align 4, !dbg !6883
  %conv3 = trunc i32 %8 to i8, !dbg !6883
  %call = call i32 @tty_insert_flip_char(%struct.tty_port* %6, i8 zeroext %conv, i8 signext %conv3) #10, !dbg !6884
  %cmp4 = icmp eq i32 %call, 0, !dbg !6885
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !6886

if.then6:                                         ; preds = %if.then
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6887
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 31, !dbg !6888
  %buf_overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 10, !dbg !6889
  %10 = load i32, i32* %buf_overrun, align 8, !dbg !6890
  %inc = add i32 %10, 1, !dbg !6890
  store i32 %inc, i32* %buf_overrun, align 8, !dbg !6890
  br label %if.end, !dbg !6890

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end7, !dbg !6891

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %status.addr, align 4, !dbg !6892
  %12 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6894
  %ignore_status_mask8 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 29, !dbg !6895
  %13 = load i32, i32* %ignore_status_mask8, align 8, !dbg !6895
  %neg9 = xor i32 %13, -1, !dbg !6896
  %and10 = and i32 %11, %neg9, !dbg !6897
  %14 = load i32, i32* %overrun.addr, align 4, !dbg !6898
  %and11 = and i32 %and10, %14, !dbg !6899
  %tobool = icmp ne i32 %and11, 0, !dbg !6899
  br i1 %tobool, label %if.then12, label %if.end21, !dbg !6900

if.then12:                                        ; preds = %if.end7
  %15 = load %struct.tty_port*, %struct.tty_port** %tport, align 8, !dbg !6901
  %call13 = call i32 @tty_insert_flip_char(%struct.tty_port* %15, i8 zeroext 0, i8 signext 4) #10, !dbg !6903
  %cmp14 = icmp eq i32 %call13, 0, !dbg !6904
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !6905

if.then16:                                        ; preds = %if.then12
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6906
  %icount17 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 31, !dbg !6907
  %buf_overrun18 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount17, i32 0, i32 10, !dbg !6908
  %17 = load i32, i32* %buf_overrun18, align 8, !dbg !6909
  %inc19 = add i32 %17, 1, !dbg !6909
  store i32 %inc19, i32* %buf_overrun18, align 8, !dbg !6909
  br label %if.end20, !dbg !6909

if.end20:                                         ; preds = %if.then16, %if.then12
  br label %if.end21, !dbg !6910

if.end21:                                         ; preds = %if.end20, %if.end7
  ret void, !dbg !6911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #0 !dbg !6912 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !6918, metadata !DIExpression()), !dbg !6919
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !6922, metadata !DIExpression()), !dbg !6923
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6924
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !6925
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !6926
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !6926
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !6923
  call void @llvm.dbg.declare(metadata i32* %change, metadata !6927, metadata !DIExpression()), !dbg !6928
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6929
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !6930
  %3 = load i32, i32* %flags, align 8, !dbg !6930
  %and = and i32 %3, 1, !dbg !6931
  %tobool = icmp ne i32 %and, 0, !dbg !6931
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6932

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !6933
  %conv = sext i8 %4 to i32, !dbg !6933
  %cmp = icmp ne i32 %conv, 0, !dbg !6934
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6935
  %land.ext = zext i1 %5 to i32, !dbg !6932
  store i32 %land.ext, i32* %change, align 4, !dbg !6936
  %6 = load i32, i32* %change, align 4, !dbg !6937
  %tobool2 = icmp ne i32 %6, 0, !dbg !6937
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !6939

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6940
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !6941
  %8 = load i32, i32* %used, align 8, !dbg !6941
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6942
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !6943
  %10 = load i32, i32* %size, align 4, !dbg !6943
  %cmp3 = icmp slt i32 %8, %10, !dbg !6944
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !6945

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6946
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !6949
  %12 = load i32, i32* %flags5, align 8, !dbg !6949
  %neg = xor i32 %12, -1, !dbg !6950
  %and6 = and i32 %neg, 1, !dbg !6951
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6951
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6952

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !6953
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6954
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6955
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !6956
  %16 = load i32, i32* %used9, align 8, !dbg !6956
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #10, !dbg !6957
  store i8 %13, i8* %call, align 1, !dbg !6958
  br label %if.end, !dbg !6959

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !6960
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6961
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !6962
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !6963
  %20 = load i32, i32* %used10, align 8, !dbg !6964
  %inc = add i32 %20, 1, !dbg !6964
  store i32 %inc, i32* %used10, align 8, !dbg !6964
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #10, !dbg !6965
  store i8 %17, i8* %call11, align 1, !dbg !6966
  store i32 1, i32* %retval, align 4, !dbg !6967
  br label %return, !dbg !6967

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6968
  %22 = load i8, i8* %ch.addr, align 1, !dbg !6969
  %23 = load i8, i8* %flag.addr, align 1, !dbg !6970
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #10, !dbg !6971
  store i32 %call13, i32* %retval, align 4, !dbg !6972
  br label %return, !dbg !6972

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !6973
  ret i32 %24, !dbg !6973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @uart_get_rs485_mode(%struct.uart_port* %port) #0 !dbg !6974 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %rs485conf = alloca %struct.serial_rs485*, align 8
  %dev = alloca %struct.device*, align 8
  %rs485_delay = alloca [2 x i32], align 4
  %ret = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata %struct.serial_rs485** %rs485conf, metadata !6977, metadata !DIExpression()), !dbg !6978
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6979
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 56, !dbg !6980
  store %struct.serial_rs485* %rs485, %struct.serial_rs485** %rs485conf, align 8, !dbg !6978
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6981, metadata !DIExpression()), !dbg !6982
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6983
  %dev1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 45, !dbg !6984
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !6984
  store %struct.device* %2, %struct.device** %dev, align 8, !dbg !6982
  call void @llvm.dbg.declare(metadata [2 x i32]* %rs485_delay, metadata !6985, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6988, metadata !DIExpression()), !dbg !6989
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6990
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %rs485_delay, i64 0, i64 0, !dbg !6991
  %call = call i32 @device_property_read_u32_array(%struct.device* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i32* %arraydecay, i64 2) #10, !dbg !6992
  store i32 %call, i32* %ret, align 4, !dbg !6993
  %4 = load i32, i32* %ret, align 4, !dbg !6994
  %tobool = icmp ne i32 %4, 0, !dbg !6994
  br i1 %tobool, label %if.else, label %if.then, !dbg !6996

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rs485_delay, i64 0, i64 0, !dbg !6997
  %5 = load i32, i32* %arrayidx, align 4, !dbg !6997
  %6 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !6999
  %delay_rts_before_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %6, i32 0, i32 1, !dbg !7000
  store i32 %5, i32* %delay_rts_before_send, align 4, !dbg !7001
  %arrayidx2 = getelementptr [2 x i32], [2 x i32]* %rs485_delay, i64 0, i64 1, !dbg !7002
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !7002
  %8 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7003
  %delay_rts_after_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %8, i32 0, i32 2, !dbg !7004
  store i32 %7, i32* %delay_rts_after_send, align 4, !dbg !7005
  br label %if.end, !dbg !7006

if.else:                                          ; preds = %entry
  %9 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7007
  %delay_rts_before_send3 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %9, i32 0, i32 1, !dbg !7009
  store i32 0, i32* %delay_rts_before_send3, align 4, !dbg !7010
  %10 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7011
  %delay_rts_after_send4 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %10, i32 0, i32 2, !dbg !7012
  store i32 0, i32* %delay_rts_after_send4, align 4, !dbg !7013
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7014
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %11, i32 0, i32 0, !dbg !7015
  %12 = load i32, i32* %flags, align 4, !dbg !7016
  %and = and i32 %12, -54, !dbg !7016
  store i32 %and, i32* %flags, align 4, !dbg !7016
  %13 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7017
  %flags5 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %13, i32 0, i32 0, !dbg !7018
  %14 = load i32, i32* %flags5, align 4, !dbg !7019
  %or = or i32 %14, 2, !dbg !7019
  store i32 %or, i32* %flags5, align 4, !dbg !7019
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7020
  %call6 = call zeroext i1 @device_property_read_bool(%struct.device* %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !7022
  br i1 %call6, label %if.then7, label %if.end10, !dbg !7023

if.then7:                                         ; preds = %if.end
  %16 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7024
  %flags8 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %16, i32 0, i32 0, !dbg !7025
  %17 = load i32, i32* %flags8, align 4, !dbg !7026
  %or9 = or i32 %17, 16, !dbg !7026
  store i32 %or9, i32* %flags8, align 4, !dbg !7026
  br label %if.end10, !dbg !7024

if.end10:                                         ; preds = %if.then7, %if.end
  %18 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7027
  %call11 = call zeroext i1 @device_property_read_bool(%struct.device* %18, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !7029
  br i1 %call11, label %if.then12, label %if.end15, !dbg !7030

if.then12:                                        ; preds = %if.end10
  %19 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7031
  %flags13 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %19, i32 0, i32 0, !dbg !7032
  %20 = load i32, i32* %flags13, align 4, !dbg !7033
  %or14 = or i32 %20, 1, !dbg !7033
  store i32 %or14, i32* %flags13, align 4, !dbg !7033
  br label %if.end15, !dbg !7031

if.end15:                                         ; preds = %if.then12, %if.end10
  %21 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7034
  %call16 = call zeroext i1 @device_property_read_bool(%struct.device* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !7036
  br i1 %call16, label %if.then17, label %if.end22, !dbg !7037

if.then17:                                        ; preds = %if.end15
  %22 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7038
  %flags18 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %22, i32 0, i32 0, !dbg !7040
  %23 = load i32, i32* %flags18, align 4, !dbg !7041
  %and19 = and i32 %23, -3, !dbg !7041
  store i32 %and19, i32* %flags18, align 4, !dbg !7041
  %24 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485conf, align 8, !dbg !7042
  %flags20 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %24, i32 0, i32 0, !dbg !7043
  %25 = load i32, i32* %flags20, align 4, !dbg !7044
  %or21 = or i32 %25, 4, !dbg !7044
  store i32 %or21, i32* %flags20, align 4, !dbg !7044
  br label %if.end22, !dbg !7045

if.end22:                                         ; preds = %if.then17, %if.end15
  %26 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7046
  %call23 = call %struct.gpio_desc* @devm_gpiod_get_optional(%struct.device* %26, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 3) #10, !dbg !7047
  %27 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7048
  %rs485_term_gpio = getelementptr inbounds %struct.uart_port, %struct.uart_port* %27, i32 0, i32 57, !dbg !7049
  store %struct.gpio_desc* %call23, %struct.gpio_desc** %rs485_term_gpio, align 8, !dbg !7050
  %28 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7051
  %rs485_term_gpio24 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %28, i32 0, i32 57, !dbg !7053
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %rs485_term_gpio24, align 8, !dbg !7053
  %30 = bitcast %struct.gpio_desc* %29 to i8*, !dbg !7051
  %call25 = call zeroext i1 @IS_ERR(i8* %30) #10, !dbg !7054
  br i1 %call25, label %if.then26, label %if.end31, !dbg !7055

if.then26:                                        ; preds = %if.end22
  %31 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7056
  %rs485_term_gpio27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %31, i32 0, i32 57, !dbg !7058
  %32 = load %struct.gpio_desc*, %struct.gpio_desc** %rs485_term_gpio27, align 8, !dbg !7058
  %33 = bitcast %struct.gpio_desc* %32 to i8*, !dbg !7056
  %call28 = call i64 @PTR_ERR(i8* %33) #10, !dbg !7059
  %conv = trunc i64 %call28 to i32, !dbg !7059
  store i32 %conv, i32* %ret, align 4, !dbg !7060
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7061
  %rs485_term_gpio29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 57, !dbg !7062
  store %struct.gpio_desc* null, %struct.gpio_desc** %rs485_term_gpio29, align 8, !dbg !7063
  %35 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7064
  %36 = load i32, i32* %ret, align 4, !dbg !7065
  %call30 = call i32 (%struct.device*, i32, i8*, ...) @dev_err_probe(%struct.device* %35, i32 %36, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !7066
  store i32 %call30, i32* %retval, align 4, !dbg !7067
  br label %return, !dbg !7067

if.end31:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !7068
  br label %return, !dbg !7068

return:                                           ; preds = %if.end31, %if.then26
  %37 = load i32, i32* %retval, align 4, !dbg !7069
  ret i32 %37, !dbg !7069
}

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_u32_array(%struct.device*, i8*, i32*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_property_read_bool(%struct.device* %dev, i8* %propname) #0 !dbg !7070 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %propname.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7078
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !7079
  %call = call zeroext i1 @device_property_present(%struct.device* %0, i8* %1) #10, !dbg !7080
  ret i1 %call, !dbg !7081
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @devm_gpiod_get_optional(%struct.device*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !7082 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7085, metadata !DIExpression()), !dbg !7086
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7087
  %1 = ptrtoint i8* %0 to i64, !dbg !7088
  ret i64 %1, !dbg !7089
}

; Function Attrs: noredzone
declare dso_local i32 @dev_err_probe(%struct.device*, i32, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @irq_set_irq_wake(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !7090 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !7097, metadata !DIExpression()), !dbg !7100
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !7102, metadata !DIExpression()), !dbg !7103
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !7104, metadata !DIExpression()), !dbg !7105
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7106, metadata !DIExpression()), !dbg !7108
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7110, metadata !DIExpression()), !dbg !7111
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6405, metadata !DIExpression()), !dbg !7112
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6409, metadata !DIExpression()), !dbg !7114
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7117, metadata !DIExpression()), !dbg !7118
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7119
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7120
  %div = sdiv i64 %1, 64, !dbg !7120
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7121
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7119
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7122
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7123
  %conv.i = trunc i64 %4 to i32, !dbg !7123
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #11, !dbg !7124
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7125
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7125
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #11, !dbg !7125
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7126
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !7126
  br i1 %8, label %cond.true, label %cond.false, !dbg !7126

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !7126
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !7126
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !7127
  %and.i = and i64 %11, 63, !dbg !7128
  %shl.i = shl i64 1, %and.i, !dbg !7129
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !7130
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7131
  %shr.i = ashr i64 %13, 6, !dbg !7132
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !7130
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !7130
  %and1.i = and i64 %shl.i, %14, !dbg !7133
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !7134
  %conv = zext i1 %cmp.i to i32, !dbg !7126
  br label %cond.end, !dbg !7126

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !7126
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !7126
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !7135
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !7136
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !7137, !srcloc !7138
  store i8 %19, i8* %oldbit.i, align 1, !dbg !7137
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !7139
  %tobool.i = trunc i8 %20 to i1, !dbg !7139
  %conv2 = zext i1 %tobool.i to i32, !dbg !7126
  br label %cond.end, !dbg !7126

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !7126
  %tobool = icmp ne i32 %cond, 0, !dbg !7126
  ret i1 %tobool, !dbg !7140
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7141 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7147, metadata !DIExpression()), !dbg !7148
  ret i1 true, !dbg !7149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7150 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7154, metadata !DIExpression()), !dbg !7155
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7156, metadata !DIExpression()), !dbg !7157
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  ret void, !dbg !7160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7161 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7166, metadata !DIExpression()), !dbg !7168
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7170, metadata !DIExpression()), !dbg !7171
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5972, metadata !DIExpression()), !dbg !7172
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5982, metadata !DIExpression()), !dbg !7174
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7179
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7180
  %div = sdiv i64 %1, 64, !dbg !7180
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7181
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7179
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7182
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7183
  %conv.i = trunc i64 %4 to i32, !dbg !7183
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7184
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7185
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7185
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !7185
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7186
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7187
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7188
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !7190
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7191

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7192
  %12 = bitcast i64* %11 to i8*, !dbg !7192
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7192
  %shr.i = ashr i64 %13, 3, !dbg !7192
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7192
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7194
  %and.i = and i64 %14, 7, !dbg !7194
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7194
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7194
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !7195, !srcloc !7196
  br label %arch_set_bit.exit, !dbg !7197

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7198
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7200
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !7201, !srcloc !7202
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !7204 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7205, metadata !DIExpression()), !dbg !7207
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7209, metadata !DIExpression()), !dbg !7210
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5972, metadata !DIExpression()), !dbg !7211
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5982, metadata !DIExpression()), !dbg !7213
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7216, metadata !DIExpression()), !dbg !7217
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7218
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7219
  %div = sdiv i64 %1, 64, !dbg !7219
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7220
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7218
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7221
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7222
  %conv.i = trunc i64 %4 to i32, !dbg !7222
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7223
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7224
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7224
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !7224
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7225
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7226
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7227
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !7229
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7230

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7231
  %12 = bitcast i64* %11 to i8*, !dbg !7231
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7231
  %shr.i = ashr i64 %13, 3, !dbg !7231
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7231
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7233
  %and.i = and i64 %14, 7, !dbg !7233
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7233
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7233
  %neg.i = xor i32 %shl.i, -1, !dbg !7234
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !7235, !srcloc !7236
  br label %arch_clear_bit.exit, !dbg !7237

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7238
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7240
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !7241, !srcloc !7242
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7244 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  ret i1 true, !dbg !7249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7250 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7252, metadata !DIExpression()), !dbg !7254
  %0 = load i64, i64* %__edi, align 8, !dbg !7254
  store i64 %0, i64* %__edi, align 8, !dbg !7254
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7255, metadata !DIExpression()), !dbg !7254
  %1 = load i64, i64* %__esi, align 8, !dbg !7254
  store i64 %1, i64* %__esi, align 8, !dbg !7254
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7256, metadata !DIExpression()), !dbg !7254
  %2 = load i64, i64* %__edx, align 8, !dbg !7254
  store i64 %2, i64* %__edx, align 8, !dbg !7254
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7257, metadata !DIExpression()), !dbg !7254
  %3 = load i64, i64* %__ecx, align 8, !dbg !7254
  store i64 %3, i64* %__ecx, align 8, !dbg !7254
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7258, metadata !DIExpression()), !dbg !7254
  %4 = load i64, i64* %__eax, align 8, !dbg !7254
  store i64 %4, i64* %__eax, align 8, !dbg !7254
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7254
  %6 = call i64 @llvm.read_register.i64(metadata !4588), !dbg !7254
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !7254, !srcloc !7259
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7254
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7254
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7254
  call void @llvm.write_register.i64(metadata !4588, i64 %asmresult1), !dbg !7254
  ret void, !dbg !7260
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !7261 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7262, metadata !DIExpression()), !dbg !7264
  %0 = load i64, i64* %__edi, align 8, !dbg !7264
  store i64 %0, i64* %__edi, align 8, !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7265, metadata !DIExpression()), !dbg !7264
  %1 = load i64, i64* %__esi, align 8, !dbg !7264
  store i64 %1, i64* %__esi, align 8, !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7266, metadata !DIExpression()), !dbg !7264
  %2 = load i64, i64* %__edx, align 8, !dbg !7264
  store i64 %2, i64* %__edx, align 8, !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7267, metadata !DIExpression()), !dbg !7264
  %3 = load i64, i64* %__ecx, align 8, !dbg !7264
  store i64 %3, i64* %__ecx, align 8, !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7268, metadata !DIExpression()), !dbg !7264
  %4 = load i64, i64* %__eax, align 8, !dbg !7264
  store i64 %4, i64* %__eax, align 8, !dbg !7264
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !7264
  %6 = call i64 @llvm.read_register.i64(metadata !4588), !dbg !7264
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !7264, !srcloc !7269
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7264
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7264
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7264
  call void @llvm.write_register.i64(metadata !4588, i64 %asmresult1), !dbg !7264
  ret void, !dbg !7270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__uart_start(%struct.tty_struct* %tty) #0 !dbg !7271 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7272, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !7274, metadata !DIExpression()), !dbg !7275
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7276
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !7277
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7277
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !7276
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !7275
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !7278, metadata !DIExpression()), !dbg !7279
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !7280
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 5, !dbg !7281
  %4 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !7281
  store %struct.uart_port* %4, %struct.uart_port** %port, align 8, !dbg !7279
  %5 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !7282
  %tobool = icmp ne %struct.uart_port* %5, null, !dbg !7282
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7284

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !7285
  %call = call i32 @uart_tx_stopped(%struct.uart_port* %6) #10, !dbg !7286
  %tobool1 = icmp ne i32 %call, 0, !dbg !7286
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7287

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !7288
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 39, !dbg !7289
  %8 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !7289
  %start_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %8, i32 0, i32 4, !dbg !7290
  %start_tx2 = bitcast {}** %start_tx to void (%struct.uart_port*)**, !dbg !7290
  %9 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %start_tx2, align 8, !dbg !7290
  %10 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !7291
  call void %9(%struct.uart_port* %10) #10, !dbg !7288
  br label %if.end, !dbg !7288

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_tx_stopped(%struct.uart_port* %port) #0 !dbg !7293 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7294, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !7296, metadata !DIExpression()), !dbg !7297
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7298
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !7299
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !7299
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 0, !dbg !7300
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 1, !dbg !7301
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty2, align 8, !dbg !7301
  store %struct.tty_struct* %2, %struct.tty_struct** %tty, align 8, !dbg !7297
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7302
  %tobool = icmp ne %struct.tty_struct* %3, null, !dbg !7302
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !7304

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7305
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 24, !dbg !7306
  %bf.load = load i8, i8* %stopped, align 4, !dbg !7306
  %bf.clear = and i8 %bf.load, 1, !dbg !7306
  %bf.cast = zext i8 %bf.clear to i64, !dbg !7306
  %conv = trunc i64 %bf.cast to i32, !dbg !7305
  %tobool3 = icmp ne i32 %conv, 0, !dbg !7305
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !7307

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7308
  %hw_stopped = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 35, !dbg !7309
  %6 = load i32, i32* %hw_stopped, align 8, !dbg !7309
  %tobool4 = icmp ne i32 %6, 0, !dbg !7308
  br i1 %tobool4, label %if.then, label %if.end, !dbg !7310

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !7313
  ret i32 %7, !dbg !7313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_port_dtr_rts(%struct.uart_port* %uport, i32 %raise) #0 !dbg !7314 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  %raise.addr = alloca i32, align 4
  %rs485_on = alloca i32, align 4
  %RTS_after_send = alloca i32, align 4
  %clear = alloca i32, align 4
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store i32 %raise, i32* %raise.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %raise.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata i32* %rs485_on, metadata !7319, metadata !DIExpression()), !dbg !7320
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7321
  %rs485_config = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 18, !dbg !7322
  %1 = load i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_rs485*)** %rs485_config, align 8, !dbg !7322
  %tobool = icmp ne i32 (%struct.uart_port*, %struct.serial_rs485*)* %1, null, !dbg !7321
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7323

land.rhs:                                         ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7324
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 56, !dbg !7325
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 0, !dbg !7326
  %3 = load i32, i32* %flags, align 8, !dbg !7326
  %and = and i32 %3, 1, !dbg !7327
  %tobool1 = icmp ne i32 %and, 0, !dbg !7323
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !7328
  %land.ext = zext i1 %4 to i32, !dbg !7323
  store i32 %land.ext, i32* %rs485_on, align 4, !dbg !7320
  call void @llvm.dbg.declare(metadata i32* %RTS_after_send, metadata !7329, metadata !DIExpression()), !dbg !7330
  %5 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7331
  %rs4852 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 56, !dbg !7332
  %flags3 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs4852, i32 0, i32 0, !dbg !7333
  %6 = load i32, i32* %flags3, align 8, !dbg !7333
  %and4 = and i32 %6, 4, !dbg !7334
  %tobool5 = icmp ne i32 %and4, 0, !dbg !7335
  %lnot = xor i1 %tobool5, true, !dbg !7335
  %lnot6 = xor i1 %lnot, true, !dbg !7336
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !7336
  store i32 %lnot.ext, i32* %RTS_after_send, align 4, !dbg !7330
  %7 = load i32, i32* %raise.addr, align 4, !dbg !7337
  %tobool7 = icmp ne i32 %7, 0, !dbg !7337
  br i1 %tobool7, label %if.then, label %if.else11, !dbg !7339

if.then:                                          ; preds = %land.end
  %8 = load i32, i32* %rs485_on, align 4, !dbg !7340
  %tobool8 = icmp ne i32 %8, 0, !dbg !7340
  br i1 %tobool8, label %land.lhs.true, label %if.else, !dbg !7343

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %RTS_after_send, align 4, !dbg !7344
  %tobool9 = icmp ne i32 %9, 0, !dbg !7344
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !7345

if.then10:                                        ; preds = %land.lhs.true
  %10 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7346
  call void @uart_update_mctrl(%struct.uart_port* %10, i32 2, i32 0) #10, !dbg !7346
  %11 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7348
  call void @uart_update_mctrl(%struct.uart_port* %11, i32 0, i32 4) #10, !dbg !7348
  br label %if.end, !dbg !7349

if.else:                                          ; preds = %land.lhs.true, %if.then
  %12 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7350
  call void @uart_update_mctrl(%struct.uart_port* %12, i32 6, i32 0) #10, !dbg !7350
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then10
  br label %if.end16, !dbg !7352

if.else11:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %clear, metadata !7353, metadata !DIExpression()), !dbg !7355
  store i32 2, i32* %clear, align 4, !dbg !7355
  %13 = load i32, i32* %rs485_on, align 4, !dbg !7356
  %tobool12 = icmp ne i32 %13, 0, !dbg !7356
  br i1 %tobool12, label %lor.rhs, label %lor.end, !dbg !7357

lor.rhs:                                          ; preds = %if.else11
  %14 = load i32, i32* %RTS_after_send, align 4, !dbg !7358
  %tobool13 = icmp ne i32 %14, 0, !dbg !7359
  %lnot14 = xor i1 %tobool13, true, !dbg !7359
  br label %lor.end, !dbg !7357

lor.end:                                          ; preds = %lor.rhs, %if.else11
  %15 = phi i1 [ true, %if.else11 ], [ %lnot14, %lor.rhs ]
  %16 = zext i1 %15 to i64, !dbg !7360
  %cond = select i1 %15, i32 4, i32 0, !dbg !7360
  %17 = load i32, i32* %clear, align 4, !dbg !7361
  %or = or i32 %17, %cond, !dbg !7361
  store i32 %or, i32* %clear, align 4, !dbg !7361
  %18 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7362
  %19 = load i32, i32* %clear, align 4, !dbg !7362
  call void @uart_update_mctrl(%struct.uart_port* %18, i32 0, i32 %19) #10, !dbg !7362
  br label %if.end16

if.end16:                                         ; preds = %lor.end, %if.end
  ret void, !dbg !7363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_port_shutdown(%struct.tty_port* %port) #0 !dbg !7364 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !7367, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7369, metadata !DIExpression()), !dbg !7371
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7371
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !7371
  store i8* %1, i8** %__mptr, align 8, !dbg !7371
  br label %do.body, !dbg !7371

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7372

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7371
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7371
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !7371
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !7372
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !7371
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !7368
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !7374, metadata !DIExpression()), !dbg !7375
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !7376
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !7377
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !7375
  %6 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7378
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %6, i32 0, i32 9, !dbg !7378
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #10, !dbg !7378
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !7379
  %tobool = icmp ne %struct.uart_port* %7, null, !dbg !7379
  br i1 %tobool, label %if.then, label %if.end, !dbg !7381

if.then:                                          ; preds = %do.end
  %8 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !7382
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 39, !dbg !7383
  %9 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !7383
  %shutdown = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %9, i32 0, i32 12, !dbg !7384
  %shutdown1 = bitcast {}** %shutdown to void (%struct.uart_port*)**, !dbg !7384
  %10 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %shutdown1, align 8, !dbg !7384
  %11 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !7385
  call void %10(%struct.uart_port* %11) #10, !dbg !7382
  br label %if.end, !dbg !7382

if.end:                                           ; preds = %if.then, %do.end
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !7386
  %tobool2 = icmp ne %struct.uart_port* %12, null, !dbg !7386
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7388

if.then3:                                         ; preds = %if.end
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !7389
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 20, !dbg !7390
  %14 = load i32, i32* %irq, align 8, !dbg !7390
  call void @synchronize_irq(i32 %14) #10, !dbg !7391
  br label %if.end4, !dbg !7391

if.end4:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !7392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.uart_port* @uart_port_ref(%struct.uart_state* %state) #0 !dbg !7393 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !7394, metadata !DIExpression()), !dbg !7398
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !7411, metadata !DIExpression()), !dbg !7412
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !7413, metadata !DIExpression()), !dbg !7414
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !7415, metadata !DIExpression()), !dbg !7417
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !7418, metadata !DIExpression()), !dbg !7417
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !7419, metadata !DIExpression()), !dbg !7417
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !7420, metadata !DIExpression()), !dbg !7417
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !7421, metadata !DIExpression()), !dbg !7417
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !6389, metadata !DIExpression()), !dbg !7422
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !7424, metadata !DIExpression()), !dbg !7425
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !7426, metadata !DIExpression()), !dbg !7427
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !7428, metadata !DIExpression()), !dbg !7429
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !7430, metadata !DIExpression()), !dbg !7431
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7432, metadata !DIExpression()), !dbg !7433
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !7434, metadata !DIExpression()), !dbg !7435
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !7436, metadata !DIExpression()), !dbg !7437
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6448, metadata !DIExpression()), !dbg !7438
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6452, metadata !DIExpression()), !dbg !7440
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7441, metadata !DIExpression()), !dbg !7442
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !7443, metadata !DIExpression()), !dbg !7444
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !7445, metadata !DIExpression()), !dbg !7446
  %retval = alloca %struct.uart_port*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !7447, metadata !DIExpression()), !dbg !7448
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !7449
  %refcount = getelementptr inbounds %struct.uart_state, %struct.uart_state* %0, i32 0, i32 3, !dbg !7450
  store %struct.atomic_t* %refcount, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7451
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7451
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7452
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7453
  %conv.i.i = trunc i64 %4 to i32, !dbg !7453
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !7454
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7455
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7455
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !7455
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7456
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !7457
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !7458
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7459
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !7460
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !7461
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !7462
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !7463
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !7463
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !7463
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !7431
  br label %do.body.i.i.i, !dbg !7464

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !7465
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !7465
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !7465
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !7465
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !7465
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !7465
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !7468

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !7469

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !7470
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !7471
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !7472
  %add.i.i.i = add i32 %19, %20, !dbg !7473
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !7417
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !7417
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !7417
  %23 = load i32, i32* %22, align 4, !dbg !7417
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !7417
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !7417
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !7417
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !7417
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !7417
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !7417
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !7417
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !7417
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !7417
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #7, !dbg !7417, !srcloc !7474
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !7417
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !7417
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !7417
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !7417
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !7475
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !7475
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !7475
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !7475
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !7475
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !7475
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !7417

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !7475
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !7475
  store i32 %31, i32* %32, align 4, !dbg !7475
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !7475

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !7417
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !7417
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !7417
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !7417
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !7417
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !7475
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !7417
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !7477
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !7478
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !7479, !llvm.loop !7480

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !7482
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !7483
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !7484
  br i1 %cmp.i.i, label %if.then, label %if.end, !dbg !7485

if.then:                                          ; preds = %atomic_add_unless.exit
  %37 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !7486
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %37, i32 0, i32 5, !dbg !7487
  %38 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !7487
  store %struct.uart_port* %38, %struct.uart_port** %retval, align 8, !dbg !7488
  br label %return, !dbg !7488

if.end:                                           ; preds = %atomic_add_unless.exit
  store %struct.uart_port* null, %struct.uart_port** %retval, align 8, !dbg !7489
  br label %return, !dbg !7489

return:                                           ; preds = %if.end, %if.then
  %39 = load %struct.uart_port*, %struct.uart_port** %retval, align 8, !dbg !7490
  ret %struct.uart_port* %39, !dbg !7490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7491 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7494, metadata !DIExpression()), !dbg !7495
  %call = call i64 @arch_local_save_flags() #10, !dbg !7496
  store i64 %call, i64* %f, align 8, !dbg !7497
  call void @arch_local_irq_disable() #10, !dbg !7498
  %0 = load i64, i64* %f, align 8, !dbg !7499
  ret i64 %0, !dbg !7500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_port_deref(%struct.uart_port* %uport) #0 !dbg !7501 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7502, metadata !DIExpression()), !dbg !7506
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !7511, metadata !DIExpression()), !dbg !7513
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6448, metadata !DIExpression()), !dbg !7514
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6452, metadata !DIExpression()), !dbg !7516
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7517, metadata !DIExpression()), !dbg !7518
  %uport.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !7519, metadata !DIExpression()), !dbg !7520
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7521
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !7522
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !7522
  %refcount = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 3, !dbg !7523
  store %struct.atomic_t* %refcount, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7524
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7524
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7525
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7526
  %conv.i.i = trunc i64 %5 to i32, !dbg !7526
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !7527
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7528
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7528
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !7528
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7529
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7513
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !7513
  %10 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !7513, !srcloc !7530
  store i8 %10, i8* %c.i.i, align 1, !dbg !7513
  %11 = load i8, i8* %c.i.i, align 1, !dbg !7513
  %tobool.i.i = trunc i8 %11 to i1, !dbg !7513
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !7513
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !7513
  %12 = load i8, i8* %tmp.i.i, align 1, !dbg !7513
  %tobool1.i.i = trunc i8 %12 to i1, !dbg !7513
  br i1 %tobool1.i.i, label %if.then, label %if.end, !dbg !7531

if.then:                                          ; preds = %entry
  %13 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !7532
  %state1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 30, !dbg !7532
  %14 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !7532
  %remove_wait = getelementptr inbounds %struct.uart_state, %struct.uart_state* %14, i32 0, i32 4, !dbg !7532
  call void @__wake_up(%struct.wait_queue_head* %remove_wait, i32 3, i32 1, i8* null) #10, !dbg !7532
  br label %if.end, !dbg !7532

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7533
}

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_update_mctrl(%struct.uart_port* %port, i32 %set, i32 %clear) #0 !dbg !7534 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5559, metadata !DIExpression()), !dbg !7535
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !7537
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !7538
  %port.addr = alloca %struct.uart_port*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %old = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !7547, metadata !DIExpression()), !dbg !7548
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !7549, metadata !DIExpression()), !dbg !7550
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7551, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7553, metadata !DIExpression()), !dbg !7554
  br label %do.body, !dbg !7555

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7556

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7557, metadata !DIExpression()), !dbg !7559
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7560, metadata !DIExpression()), !dbg !7559
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7559
  %conv = zext i1 %cmp to i32, !dbg !7559
  store i32 1, i32* %tmp, align 4, !dbg !7559
  %0 = load i32, i32* %tmp, align 4, !dbg !7559
  br label %do.body2, !dbg !7561

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7562

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7563

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7565, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7569, metadata !DIExpression()), !dbg !7568
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7568
  %conv8 = zext i1 %cmp7 to i32, !dbg !7568
  store i32 1, i32* %tmp9, align 4, !dbg !7568
  %1 = load i32, i32* %tmp9, align 4, !dbg !7568
  %call = call i64 @arch_local_irq_save() #10, !dbg !7570
  store i64 %call, i64* %flags, align 8, !dbg !7570
  br label %do.end, !dbg !7570

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7563

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7562

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7571, !srcloc !7572
  br label %do.body12, !dbg !7571

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7573
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 0, !dbg !7573
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7574
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7575
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !7575
  br label %do.end14, !dbg !7573

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7571

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7562

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7561

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7556

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7576
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 36, !dbg !7577
  %6 = load i32, i32* %mctrl, align 4, !dbg !7577
  store i32 %6, i32* %old, align 4, !dbg !7578
  %7 = load i32, i32* %old, align 4, !dbg !7579
  %8 = load i32, i32* %clear.addr, align 4, !dbg !7580
  %neg = xor i32 %8, -1, !dbg !7581
  %and = and i32 %7, %neg, !dbg !7582
  %9 = load i32, i32* %set.addr, align 4, !dbg !7583
  %or = or i32 %and, %9, !dbg !7584
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7585
  %mctrl19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 36, !dbg !7586
  store i32 %or, i32* %mctrl19, align 4, !dbg !7587
  %11 = load i32, i32* %old, align 4, !dbg !7588
  %12 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7590
  %mctrl20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 36, !dbg !7591
  %13 = load i32, i32* %mctrl20, align 4, !dbg !7591
  %cmp21 = icmp ne i32 %11, %13, !dbg !7592
  br i1 %cmp21, label %if.then, label %if.end, !dbg !7593

if.then:                                          ; preds = %do.end18
  %14 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7594
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 39, !dbg !7595
  %15 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !7595
  %set_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %15, i32 0, i32 1, !dbg !7596
  %16 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl, align 8, !dbg !7596
  %17 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7597
  %18 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7598
  %mctrl23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 36, !dbg !7599
  %19 = load i32, i32* %mctrl23, align 4, !dbg !7599
  call void %16(%struct.uart_port* %17, i32 %19) #10, !dbg !7594
  br label %if.end, !dbg !7594

if.end:                                           ; preds = %if.then, %do.end18
  %20 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7600
  %lock24 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 0, !dbg !7601
  %21 = load i64, i64* %flags, align 8, !dbg !7602
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !7603
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !7603
  store i32 1, i32* %tmp.i, align 4, !dbg !7603
  %22 = load i32, i32* %tmp.i, align 4, !dbg !7603
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !7604
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !7604
  store i32 1, i32* %tmp8.i, align 4, !dbg !7604
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !7604
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !7605
  call void @arch_local_irq_restore(i64 %24) #11, !dbg !7605
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7606, !srcloc !5691
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !7607
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !7607
  %rlock.i26 = bitcast %union.anon* %26 to %struct.raw_spinlock*, !dbg !7607
  ret void, !dbg !7608
}

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7609 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7610, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7613, metadata !DIExpression()), !dbg !7612
  %0 = load i64, i64* %__edi, align 8, !dbg !7612
  store i64 %0, i64* %__edi, align 8, !dbg !7612
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7614, metadata !DIExpression()), !dbg !7612
  %1 = load i64, i64* %__esi, align 8, !dbg !7612
  store i64 %1, i64* %__esi, align 8, !dbg !7612
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7615, metadata !DIExpression()), !dbg !7612
  %2 = load i64, i64* %__edx, align 8, !dbg !7612
  store i64 %2, i64* %__edx, align 8, !dbg !7612
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7616, metadata !DIExpression()), !dbg !7612
  %3 = load i64, i64* %__ecx, align 8, !dbg !7612
  store i64 %3, i64* %__ecx, align 8, !dbg !7612
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7617, metadata !DIExpression()), !dbg !7612
  %4 = load i64, i64* %__eax, align 8, !dbg !7612
  store i64 %4, i64* %__eax, align 8, !dbg !7612
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7612
  %6 = call i64 @llvm.read_register.i64(metadata !4588), !dbg !7618
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !7618, !srcloc !7621
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7618
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7618
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7618
  call void @llvm.write_register.i64(metadata !4588, i64 %asmresult1), !dbg !7618
  %8 = load i64, i64* %__eax, align 8, !dbg !7618
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7622, metadata !DIExpression()), !dbg !7624
  store i64 -1, i64* %__mask, align 8, !dbg !7624
  %9 = load i64, i64* %__mask, align 8, !dbg !7624
  store i64 %9, i64* %tmp, align 8, !dbg !7624
  %10 = load i64, i64* %tmp, align 8, !dbg !7624
  %and = and i64 %8, %10, !dbg !7618
  store i64 %and, i64* %__ret, align 8, !dbg !7618
  %11 = load i64, i64* %__ret, align 8, !dbg !7612
  store i64 %11, i64* %tmp2, align 8, !dbg !7625
  %12 = load i64, i64* %tmp2, align 8, !dbg !7612
  ret i64 %12, !dbg !7626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7627 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7632, metadata !DIExpression()), !dbg !7634
  %0 = load i64, i64* %__edi, align 8, !dbg !7634
  store i64 %0, i64* %__edi, align 8, !dbg !7634
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7635, metadata !DIExpression()), !dbg !7634
  %1 = load i64, i64* %__esi, align 8, !dbg !7634
  store i64 %1, i64* %__esi, align 8, !dbg !7634
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7636, metadata !DIExpression()), !dbg !7634
  %2 = load i64, i64* %__edx, align 8, !dbg !7634
  store i64 %2, i64* %__edx, align 8, !dbg !7634
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7637, metadata !DIExpression()), !dbg !7634
  %3 = load i64, i64* %__ecx, align 8, !dbg !7634
  store i64 %3, i64* %__ecx, align 8, !dbg !7634
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7638, metadata !DIExpression()), !dbg !7634
  %4 = load i64, i64* %__eax, align 8, !dbg !7634
  store i64 %4, i64* %__eax, align 8, !dbg !7634
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7634
  %6 = call i64 @llvm.read_register.i64(metadata !4588), !dbg !7634
  %7 = load i64, i64* %f.addr, align 8, !dbg !7634
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !7634, !srcloc !7639
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7634
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7634
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7634
  call void @llvm.write_register.i64(metadata !4588, i64 %asmresult1), !dbg !7634
  ret void, !dbg !7640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !7641 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7642, metadata !DIExpression()), !dbg !7646
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7655, metadata !DIExpression()), !dbg !7656
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7657, metadata !DIExpression()), !dbg !7658
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7659, metadata !DIExpression()), !dbg !7660
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7661, metadata !DIExpression()), !dbg !7665
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7667, metadata !DIExpression()), !dbg !7671
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7673, metadata !DIExpression()), !dbg !7677
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7682, metadata !DIExpression()), !dbg !7683
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7684, metadata !DIExpression()), !dbg !7685
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7686, metadata !DIExpression()), !dbg !7687
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7688, metadata !DIExpression()), !dbg !7689
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7690, metadata !DIExpression()), !dbg !7691
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7692, metadata !DIExpression()), !dbg !7693
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7694, metadata !DIExpression()), !dbg !7695
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7696, metadata !DIExpression()), !dbg !7697
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7698, metadata !DIExpression()), !dbg !7699
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7704, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7706, metadata !DIExpression()), !dbg !7709
  %0 = load i64, i64* %n.addr, align 8, !dbg !7709
  store i64 %0, i64* %__a, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7710, metadata !DIExpression()), !dbg !7709
  %1 = load i64, i64* %size.addr, align 8, !dbg !7709
  store i64 %1, i64* %__b, align 8, !dbg !7709
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7711, metadata !DIExpression()), !dbg !7709
  store i64* %bytes, i64** %__d, align 8, !dbg !7709
  %cmp = icmp eq i64* %__a, %__b, !dbg !7709
  %conv = zext i1 %cmp to i32, !dbg !7709
  %2 = load i64*, i64** %__d, align 8, !dbg !7709
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7709
  %conv2 = zext i1 %cmp1 to i32, !dbg !7709
  %3 = load i64, i64* %__a, align 8, !dbg !7709
  %4 = load i64, i64* %__b, align 8, !dbg !7709
  %5 = load i64*, i64** %__d, align 8, !dbg !7709
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7709
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7709
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7709
  store i64 %8, i64* %5, align 8, !dbg !7709
  %frombool = zext i1 %7 to i8, !dbg !7709
  store i8 %frombool, i8* %tmp, align 1, !dbg !7709
  %9 = load i8, i8* %tmp, align 1, !dbg !7709
  %tobool = trunc i8 %9 to i1, !dbg !7709
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #10, !dbg !7713
  %lnot = xor i1 %call, true, !dbg !7713
  %lnot3 = xor i1 %lnot, true, !dbg !7713
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7713
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7713
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7713
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7714

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7715
  br label %return, !dbg !7715

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !7716
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !7717
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !7718

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !7719
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !7720
  br i1 %13, label %if.then6, label %if.end8, !dbg !7721

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !7722
  %15 = load i32, i32* %flags.addr, align 4, !dbg !7723
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !7724
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !7725
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !7726

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !7727
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !7728
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7729

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !7730
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !7731
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7732
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !7733
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7691
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7734
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7735
  %24 = load i32, i32* %order.i.i, align 4, !dbg !7736
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7737
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7738
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7739
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #11, !dbg !7740
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7740
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7740
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7740
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7740
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7741
  br label %kmalloc.exit, !dbg !7741

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !7742
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7743
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !7743
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7745

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7746
  br label %kmalloc_index.exit.i, !dbg !7746

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7747
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7749
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7750

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7751
  br label %kmalloc_index.exit.i, !dbg !7751

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7752
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7754
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7755

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7756
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7757
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7758

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7759
  br label %kmalloc_index.exit.i, !dbg !7759

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7760
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7762
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7763

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7764
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7765
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7766

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7767
  br label %kmalloc_index.exit.i, !dbg !7767

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7768
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7770
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7771

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7772
  br label %kmalloc_index.exit.i, !dbg !7772

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7773
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7775
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7776

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7777
  br label %kmalloc_index.exit.i, !dbg !7777

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7778
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7780
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7781

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7782
  br label %kmalloc_index.exit.i, !dbg !7782

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7783
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7785
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7786

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7787
  br label %kmalloc_index.exit.i, !dbg !7787

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7788
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7790
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7791

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7792
  br label %kmalloc_index.exit.i, !dbg !7792

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7793
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7795
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7796

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7797
  br label %kmalloc_index.exit.i, !dbg !7797

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7798
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7800
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7801

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7802
  br label %kmalloc_index.exit.i, !dbg !7802

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7803
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7805
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7806

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7807
  br label %kmalloc_index.exit.i, !dbg !7807

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7808
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7810
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7811

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7812
  br label %kmalloc_index.exit.i, !dbg !7812

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7813
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7815
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7816

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7817
  br label %kmalloc_index.exit.i, !dbg !7817

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7818
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7820
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7821

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7822
  br label %kmalloc_index.exit.i, !dbg !7822

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7823
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7825
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7826

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7827
  br label %kmalloc_index.exit.i, !dbg !7827

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7828
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7830
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7831

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7832
  br label %kmalloc_index.exit.i, !dbg !7832

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7833
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7835
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7836

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7837
  br label %kmalloc_index.exit.i, !dbg !7837

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7838
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7840
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7841

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7842
  br label %kmalloc_index.exit.i, !dbg !7842

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7843
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7845
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7846

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7847
  br label %kmalloc_index.exit.i, !dbg !7847

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7848
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7850
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7851

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7852
  br label %kmalloc_index.exit.i, !dbg !7852

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7853
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7855
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7856

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7857
  br label %kmalloc_index.exit.i, !dbg !7857

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7858
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7860
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7861

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7862
  br label %kmalloc_index.exit.i, !dbg !7862

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7863
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7865
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7866

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7867
  br label %kmalloc_index.exit.i, !dbg !7867

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7868
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7870
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7871

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7872
  br label %kmalloc_index.exit.i, !dbg !7872

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7873
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7875
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7876

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7877
  br label %kmalloc_index.exit.i, !dbg !7877

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7878
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7880
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7881

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7882
  br label %kmalloc_index.exit.i, !dbg !7882

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7883
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7885
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7886

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7887
  br label %kmalloc_index.exit.i, !dbg !7887

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7888, !srcloc !7891
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 204) #7, !dbg !7892, !srcloc !7895
  unreachable, !dbg !7896

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7897
  store i32 %59, i32* %index.i, align 4, !dbg !7898
  %60 = load i32, i32* %index.i, align 4, !dbg !7899
  %tobool.i = icmp ne i32 %60, 0, !dbg !7899
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7901

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7902
  br label %kmalloc.exit, !dbg !7902

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7903
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7904
  %and.i.i = and i32 %62, 17, !dbg !7904
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7904
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7904
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7904
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7904
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7906

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7907
  br label %kmalloc_type.exit.i, !dbg !7907

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7908
  %and2.i.i = and i32 %63, 1, !dbg !7909
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7908
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7908
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7908
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7910
  br label %kmalloc_type.exit.i, !dbg !7910

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7911
  %idxprom.i = zext i32 %65 to i64, !dbg !7912
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7912
  %66 = load i32, i32* %index.i, align 4, !dbg !7913
  %idxprom6.i = zext i32 %66 to i64, !dbg !7912
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7912
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7912
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7914
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7915
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7916
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7917
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #11, !dbg !7918
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7918
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7918
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7918
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7918
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7660
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7919
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7920
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7921
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7922
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #11, !dbg !7923
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7924
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7925
  store i8* %76, i8** %retval.i, align 8, !dbg !7926
  br label %kmalloc.exit, !dbg !7926

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7927
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7928
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #11, !dbg !7929
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7929
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7929
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7929
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7929
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7930
  br label %kmalloc.exit, !dbg !7930

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7931
  store i8* %79, i8** %retval, align 8, !dbg !7932
  br label %return, !dbg !7932

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7933
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7934
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #10, !dbg !7935
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7935
  %maskedptr = and i64 %ptrint, 7, !dbg !7935
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7935
  call void @llvm.assume(i1 %maskcond), !dbg !7935
  store i8* %call9, i8** %retval, align 8, !dbg !7936
  br label %return, !dbg !7936

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7937
  ret i8* %82, !dbg !7937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !7938 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !7944
  %tobool = trunc i8 %0 to i1, !dbg !7944
  %lnot = xor i1 %tobool, true, !dbg !7944
  %lnot1 = xor i1 %lnot, true, !dbg !7944
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7944
  %conv = sext i32 %lnot.ext to i64, !dbg !7944
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7944
  ret i1 %tobool2, !dbg !7945
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !7946 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7950, metadata !DIExpression()), !dbg !7954
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7956, metadata !DIExpression()), !dbg !7957
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  %0 = load i64, i64* %size.addr, align 8, !dbg !7960
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7962
  br i1 %1, label %if.then, label %if.end447, !dbg !7963

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7964
  %tobool = icmp ne i64 %2, 0, !dbg !7964
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7967

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7968
  br label %return, !dbg !7968

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7969
  %cmp = icmp ult i64 %3, 4096, !dbg !7971
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7972

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7973
  br label %return, !dbg !7973

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub = sub i64 %4, 1, !dbg !7974
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7974
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7974

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub4 = sub i64 %6, 1, !dbg !7974
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7974
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7974

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub6 = sub i64 %8, 1, !dbg !7974
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7974
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7974

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7974

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub9 = sub i64 %9, 1, !dbg !7974
  %and = and i64 %sub9, -9223372036854775808, !dbg !7974
  %tobool10 = icmp ne i64 %and, 0, !dbg !7974
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7974

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7974

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub13 = sub i64 %10, 1, !dbg !7974
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7974
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7974
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7974

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7974

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub18 = sub i64 %11, 1, !dbg !7974
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7974
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7974
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7974

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7974

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub23 = sub i64 %12, 1, !dbg !7974
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7974
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7974
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7974

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7974

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub28 = sub i64 %13, 1, !dbg !7974
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7974
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7974
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7974

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7974

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub33 = sub i64 %14, 1, !dbg !7974
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7974
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7974
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7974

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7974

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub38 = sub i64 %15, 1, !dbg !7974
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7974
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7974
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7974

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7974

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub43 = sub i64 %16, 1, !dbg !7974
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7974
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7974
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7974

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7974

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub48 = sub i64 %17, 1, !dbg !7974
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7974
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7974
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7974

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7974

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub53 = sub i64 %18, 1, !dbg !7974
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7974
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7974
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7974

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7974

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub58 = sub i64 %19, 1, !dbg !7974
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7974
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7974
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7974

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7974

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub63 = sub i64 %20, 1, !dbg !7974
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7974
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7974
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7974

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7974

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub68 = sub i64 %21, 1, !dbg !7974
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7974
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7974
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7974

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7974

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub73 = sub i64 %22, 1, !dbg !7974
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7974
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7974
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7974

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7974

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub78 = sub i64 %23, 1, !dbg !7974
  %and79 = and i64 %sub78, 562949953421312, !dbg !7974
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7974
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7974

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7974

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub83 = sub i64 %24, 1, !dbg !7974
  %and84 = and i64 %sub83, 281474976710656, !dbg !7974
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7974
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7974

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7974

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub88 = sub i64 %25, 1, !dbg !7974
  %and89 = and i64 %sub88, 140737488355328, !dbg !7974
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7974
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7974

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7974

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub93 = sub i64 %26, 1, !dbg !7974
  %and94 = and i64 %sub93, 70368744177664, !dbg !7974
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7974
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7974

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7974

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub98 = sub i64 %27, 1, !dbg !7974
  %and99 = and i64 %sub98, 35184372088832, !dbg !7974
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7974
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7974

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7974

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub103 = sub i64 %28, 1, !dbg !7974
  %and104 = and i64 %sub103, 17592186044416, !dbg !7974
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7974
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7974

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7974

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub108 = sub i64 %29, 1, !dbg !7974
  %and109 = and i64 %sub108, 8796093022208, !dbg !7974
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7974
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7974

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7974

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub113 = sub i64 %30, 1, !dbg !7974
  %and114 = and i64 %sub113, 4398046511104, !dbg !7974
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7974
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7974

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7974

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub118 = sub i64 %31, 1, !dbg !7974
  %and119 = and i64 %sub118, 2199023255552, !dbg !7974
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7974
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7974

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7974

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub123 = sub i64 %32, 1, !dbg !7974
  %and124 = and i64 %sub123, 1099511627776, !dbg !7974
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7974
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7974

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7974

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub128 = sub i64 %33, 1, !dbg !7974
  %and129 = and i64 %sub128, 549755813888, !dbg !7974
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7974
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7974

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7974

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub133 = sub i64 %34, 1, !dbg !7974
  %and134 = and i64 %sub133, 274877906944, !dbg !7974
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7974
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7974

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7974

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub138 = sub i64 %35, 1, !dbg !7974
  %and139 = and i64 %sub138, 137438953472, !dbg !7974
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7974
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7974

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7974

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub143 = sub i64 %36, 1, !dbg !7974
  %and144 = and i64 %sub143, 68719476736, !dbg !7974
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7974
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7974

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7974

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub148 = sub i64 %37, 1, !dbg !7974
  %and149 = and i64 %sub148, 34359738368, !dbg !7974
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7974
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7974

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7974

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub153 = sub i64 %38, 1, !dbg !7974
  %and154 = and i64 %sub153, 17179869184, !dbg !7974
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7974
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7974

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7974

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub158 = sub i64 %39, 1, !dbg !7974
  %and159 = and i64 %sub158, 8589934592, !dbg !7974
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7974
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7974

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7974

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub163 = sub i64 %40, 1, !dbg !7974
  %and164 = and i64 %sub163, 4294967296, !dbg !7974
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7974
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7974

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7974

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub168 = sub i64 %41, 1, !dbg !7974
  %and169 = and i64 %sub168, 2147483648, !dbg !7974
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7974
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7974

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7974

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub173 = sub i64 %42, 1, !dbg !7974
  %and174 = and i64 %sub173, 1073741824, !dbg !7974
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7974
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7974

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7974

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub178 = sub i64 %43, 1, !dbg !7974
  %and179 = and i64 %sub178, 536870912, !dbg !7974
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7974
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7974

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7974

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub183 = sub i64 %44, 1, !dbg !7974
  %and184 = and i64 %sub183, 268435456, !dbg !7974
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7974
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7974

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7974

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub188 = sub i64 %45, 1, !dbg !7974
  %and189 = and i64 %sub188, 134217728, !dbg !7974
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7974
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7974

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7974

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub193 = sub i64 %46, 1, !dbg !7974
  %and194 = and i64 %sub193, 67108864, !dbg !7974
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7974
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7974

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7974

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub198 = sub i64 %47, 1, !dbg !7974
  %and199 = and i64 %sub198, 33554432, !dbg !7974
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7974
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7974

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7974

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub203 = sub i64 %48, 1, !dbg !7974
  %and204 = and i64 %sub203, 16777216, !dbg !7974
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7974
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7974

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7974

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub208 = sub i64 %49, 1, !dbg !7974
  %and209 = and i64 %sub208, 8388608, !dbg !7974
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7974
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7974

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7974

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub213 = sub i64 %50, 1, !dbg !7974
  %and214 = and i64 %sub213, 4194304, !dbg !7974
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7974
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7974

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7974

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub218 = sub i64 %51, 1, !dbg !7974
  %and219 = and i64 %sub218, 2097152, !dbg !7974
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7974
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7974

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7974

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub223 = sub i64 %52, 1, !dbg !7974
  %and224 = and i64 %sub223, 1048576, !dbg !7974
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7974
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7974

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7974

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub228 = sub i64 %53, 1, !dbg !7974
  %and229 = and i64 %sub228, 524288, !dbg !7974
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7974
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7974

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7974

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub233 = sub i64 %54, 1, !dbg !7974
  %and234 = and i64 %sub233, 262144, !dbg !7974
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7974
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7974

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7974

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub238 = sub i64 %55, 1, !dbg !7974
  %and239 = and i64 %sub238, 131072, !dbg !7974
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7974
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7974

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7974

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub243 = sub i64 %56, 1, !dbg !7974
  %and244 = and i64 %sub243, 65536, !dbg !7974
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7974
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7974

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7974

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub248 = sub i64 %57, 1, !dbg !7974
  %and249 = and i64 %sub248, 32768, !dbg !7974
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7974
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7974

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7974

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub253 = sub i64 %58, 1, !dbg !7974
  %and254 = and i64 %sub253, 16384, !dbg !7974
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7974
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7974

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7974

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub258 = sub i64 %59, 1, !dbg !7974
  %and259 = and i64 %sub258, 8192, !dbg !7974
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7974
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7974

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7974

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub263 = sub i64 %60, 1, !dbg !7974
  %and264 = and i64 %sub263, 4096, !dbg !7974
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7974
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7974

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7974

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub268 = sub i64 %61, 1, !dbg !7974
  %and269 = and i64 %sub268, 2048, !dbg !7974
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7974
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7974

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7974

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub273 = sub i64 %62, 1, !dbg !7974
  %and274 = and i64 %sub273, 1024, !dbg !7974
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7974
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7974

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7974

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub278 = sub i64 %63, 1, !dbg !7974
  %and279 = and i64 %sub278, 512, !dbg !7974
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7974
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7974

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7974

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub283 = sub i64 %64, 1, !dbg !7974
  %and284 = and i64 %sub283, 256, !dbg !7974
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7974
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7974

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7974

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub288 = sub i64 %65, 1, !dbg !7974
  %and289 = and i64 %sub288, 128, !dbg !7974
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7974
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7974

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7974

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub293 = sub i64 %66, 1, !dbg !7974
  %and294 = and i64 %sub293, 64, !dbg !7974
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7974
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7974

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7974

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub298 = sub i64 %67, 1, !dbg !7974
  %and299 = and i64 %sub298, 32, !dbg !7974
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7974
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7974

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7974

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub303 = sub i64 %68, 1, !dbg !7974
  %and304 = and i64 %sub303, 16, !dbg !7974
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7974
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7974

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7974

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub308 = sub i64 %69, 1, !dbg !7974
  %and309 = and i64 %sub308, 8, !dbg !7974
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7974
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7974

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7974

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub313 = sub i64 %70, 1, !dbg !7974
  %and314 = and i64 %sub313, 4, !dbg !7974
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7974
  %71 = zext i1 %tobool315 to i64, !dbg !7974
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7974
  br label %cond.end, !dbg !7974

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7974
  br label %cond.end317, !dbg !7974

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7974
  br label %cond.end319, !dbg !7974

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7974
  br label %cond.end321, !dbg !7974

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7974
  br label %cond.end323, !dbg !7974

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7974
  br label %cond.end325, !dbg !7974

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7974
  br label %cond.end327, !dbg !7974

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7974
  br label %cond.end329, !dbg !7974

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7974
  br label %cond.end331, !dbg !7974

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7974
  br label %cond.end333, !dbg !7974

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7974
  br label %cond.end335, !dbg !7974

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7974
  br label %cond.end337, !dbg !7974

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7974
  br label %cond.end339, !dbg !7974

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7974
  br label %cond.end341, !dbg !7974

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7974
  br label %cond.end343, !dbg !7974

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7974
  br label %cond.end345, !dbg !7974

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7974
  br label %cond.end347, !dbg !7974

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7974
  br label %cond.end349, !dbg !7974

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7974
  br label %cond.end351, !dbg !7974

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7974
  br label %cond.end353, !dbg !7974

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7974
  br label %cond.end355, !dbg !7974

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7974
  br label %cond.end357, !dbg !7974

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7974
  br label %cond.end359, !dbg !7974

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7974
  br label %cond.end361, !dbg !7974

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7974
  br label %cond.end363, !dbg !7974

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7974
  br label %cond.end365, !dbg !7974

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7974
  br label %cond.end367, !dbg !7974

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7974
  br label %cond.end369, !dbg !7974

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7974
  br label %cond.end371, !dbg !7974

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7974
  br label %cond.end373, !dbg !7974

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7974
  br label %cond.end375, !dbg !7974

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7974
  br label %cond.end377, !dbg !7974

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7974
  br label %cond.end379, !dbg !7974

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7974
  br label %cond.end381, !dbg !7974

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7974
  br label %cond.end383, !dbg !7974

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7974
  br label %cond.end385, !dbg !7974

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7974
  br label %cond.end387, !dbg !7974

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7974
  br label %cond.end389, !dbg !7974

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7974
  br label %cond.end391, !dbg !7974

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7974
  br label %cond.end393, !dbg !7974

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7974
  br label %cond.end395, !dbg !7974

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7974
  br label %cond.end397, !dbg !7974

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7974
  br label %cond.end399, !dbg !7974

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7974
  br label %cond.end401, !dbg !7974

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7974
  br label %cond.end403, !dbg !7974

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7974
  br label %cond.end405, !dbg !7974

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7974
  br label %cond.end407, !dbg !7974

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7974
  br label %cond.end409, !dbg !7974

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7974
  br label %cond.end411, !dbg !7974

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7974
  br label %cond.end413, !dbg !7974

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7974
  br label %cond.end415, !dbg !7974

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7974
  br label %cond.end417, !dbg !7974

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7974
  br label %cond.end419, !dbg !7974

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7974
  br label %cond.end421, !dbg !7974

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7974
  br label %cond.end423, !dbg !7974

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7974
  br label %cond.end425, !dbg !7974

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7974
  br label %cond.end427, !dbg !7974

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7974
  br label %cond.end429, !dbg !7974

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7974
  br label %cond.end431, !dbg !7974

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7974
  br label %cond.end433, !dbg !7974

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7974
  br label %cond.end435, !dbg !7974

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7974
  br label %cond.end437, !dbg !7974

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7974
  br label %cond.end440, !dbg !7974

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7974

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7974
  br label %cond.end444, !dbg !7974

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7974
  %sub443 = sub i64 %72, 1, !dbg !7974
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !7974
  br label %cond.end444, !dbg !7974

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7974
  %sub446 = sub i32 %cond445, 12, !dbg !7975
  %add = add i32 %sub446, 1, !dbg !7976
  store i32 %add, i32* %retval, align 4, !dbg !7977
  br label %return, !dbg !7977

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7978
  %dec = add i64 %73, -1, !dbg !7978
  store i64 %dec, i64* %size.addr, align 8, !dbg !7978
  %74 = load i64, i64* %size.addr, align 8, !dbg !7979
  %shr = lshr i64 %74, 12, !dbg !7979
  store i64 %shr, i64* %size.addr, align 8, !dbg !7979
  %75 = load i64, i64* %size.addr, align 8, !dbg !7980
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7957
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7981
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7982
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !7981, !srcloc !7983
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7981
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7984
  %add.i = add i32 %79, 1, !dbg !7985
  store i32 %add.i, i32* %retval, align 4, !dbg !7986
  br label %return, !dbg !7986

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7987
  ret i32 %80, !dbg !7987
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !7988 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7950, metadata !DIExpression()), !dbg !7992
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7956, metadata !DIExpression()), !dbg !7994
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  %0 = load i64, i64* %n.addr, align 8, !dbg !7997
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7994
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7998
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7999
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !7998, !srcloc !7983
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7998
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8000
  %add.i = add i32 %4, 1, !dbg !8001
  %sub = sub i32 %add.i, 1, !dbg !8002
  ret i32 %sub, !dbg !8003
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8004 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8014, metadata !DIExpression()), !dbg !8015
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8016
  ret i8* %0, !dbg !8017
}

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_install(%struct.tty_driver* %driver, %struct.tty_struct* %tty) #0 !dbg !8018 {
entry:
  %driver.addr = alloca %struct.tty_driver*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %drv = alloca %struct.uart_driver*, align 8
  %state = alloca %struct.uart_state*, align 8
  store %struct.tty_driver* %driver, %struct.tty_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %driver.addr, metadata !8019, metadata !DIExpression()), !dbg !8020
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv, metadata !8023, metadata !DIExpression()), !dbg !8024
  %0 = load %struct.tty_driver*, %struct.tty_driver** %driver.addr, align 8, !dbg !8025
  %driver_state = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %0, i32 0, i32 19, !dbg !8026
  %1 = load i8*, i8** %driver_state, align 8, !dbg !8026
  %2 = bitcast i8* %1 to %struct.uart_driver*, !dbg !8025
  store %struct.uart_driver* %2, %struct.uart_driver** %drv, align 8, !dbg !8024
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8027, metadata !DIExpression()), !dbg !8028
  %3 = load %struct.uart_driver*, %struct.uart_driver** %drv, align 8, !dbg !8029
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %3, i32 0, i32 7, !dbg !8030
  %4 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !8030
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8031
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 5, !dbg !8032
  %6 = load i32, i32* %index, align 8, !dbg !8032
  %idx.ext = sext i32 %6 to i64, !dbg !8033
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %4, i64 %idx.ext, !dbg !8033
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !8028
  %7 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8034
  %8 = bitcast %struct.uart_state* %7 to i8*, !dbg !8034
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8035
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %9, i32 0, i32 37, !dbg !8036
  store i8* %8, i8** %driver_data, align 8, !dbg !8037
  %10 = load %struct.tty_driver*, %struct.tty_driver** %driver.addr, align 8, !dbg !8038
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8039
  %call = call i32 @tty_standard_install(%struct.tty_driver* %10, %struct.tty_struct* %11) #10, !dbg !8040
  ret i32 %call, !dbg !8041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_open(%struct.tty_struct* %tty, %struct.file* %filp) #0 !dbg !8042 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %state = alloca %struct.uart_state*, align 8
  %retval1 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8043, metadata !DIExpression()), !dbg !8044
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8047, metadata !DIExpression()), !dbg !8048
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8049
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8050
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8050
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8049
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8048
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8051, metadata !DIExpression()), !dbg !8052
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8053
  %port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !8054
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8055
  %5 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8056
  %call = call i32 @tty_port_open(%struct.tty_port* %port, %struct.tty_struct* %4, %struct.file* %5) #10, !dbg !8057
  store i32 %call, i32* %retval1, align 4, !dbg !8058
  %6 = load i32, i32* %retval1, align 4, !dbg !8059
  %cmp = icmp sgt i32 %6, 0, !dbg !8061
  br i1 %cmp, label %if.then, label %if.end, !dbg !8062

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval1, align 4, !dbg !8063
  br label %if.end, !dbg !8064

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %retval1, align 4, !dbg !8065
  ret i32 %7, !dbg !8066
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_close(%struct.tty_struct* %tty, %struct.file* %filp) #0 !dbg !8067 {
entry:
  %lock.addr.i5 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i5, metadata !4843, metadata !DIExpression()), !dbg !8068
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !8072
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %state = alloca %struct.uart_state*, align 8
  %drv = alloca %struct.uart_driver*, align 8
  %port = alloca %struct.tty_port*, align 8
  %tmp = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8076, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8078, metadata !DIExpression()), !dbg !8079
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8080
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8081
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8081
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8080
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8079
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8082
  %tobool = icmp ne %struct.uart_state* %3, null, !dbg !8082
  br i1 %tobool, label %if.end, label %if.then, !dbg !8083

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv, metadata !8084, metadata !DIExpression()), !dbg !8085
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8086
  %driver = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 3, !dbg !8087
  %5 = load %struct.tty_driver*, %struct.tty_driver** %driver, align 8, !dbg !8087
  %driver_state = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 19, !dbg !8088
  %6 = load i8*, i8** %driver_state, align 8, !dbg !8088
  %7 = bitcast i8* %6 to %struct.uart_driver*, !dbg !8086
  store %struct.uart_driver* %7, %struct.uart_driver** %drv, align 8, !dbg !8085
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !8089, metadata !DIExpression()), !dbg !8090
  %8 = load %struct.uart_driver*, %struct.uart_driver** %drv, align 8, !dbg !8091
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %8, i32 0, i32 7, !dbg !8092
  %9 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !8092
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8093
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 5, !dbg !8094
  %11 = load i32, i32* %index, align 8, !dbg !8094
  %idx.ext = sext i32 %11 to i64, !dbg !8095
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %9, i64 %idx.ext, !dbg !8095
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !8096
  %12 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8097
  %port2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %12, i32 0, i32 0, !dbg !8098
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !8099
  %13 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8100
  %lock = getelementptr inbounds %struct.tty_port, %struct.tty_port* %13, i32 0, i32 5, !dbg !8101
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !8102
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8103, !srcloc !4939
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8104
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !8104
  %rlock.i = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !8104
  %16 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8105
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %16, i32 0, i32 7, !dbg !8106
  %17 = load i32, i32* %count, align 4, !dbg !8107
  %dec = add i32 %17, -1, !dbg !8107
  store i32 %dec, i32* %count, align 4, !dbg !8107
  %18 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8108
  %lock3 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %18, i32 0, i32 5, !dbg !8109
  store %struct.spinlock* %lock3, %struct.spinlock** %lock.addr.i5, align 8
  call void @arch_local_irq_enable() #11, !dbg !8110
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8111, !srcloc !4958
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i5, align 8, !dbg !8112
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8112
  %rlock.i6 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !8112
  br label %return, !dbg !8113

if.end:                                           ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !8114
  %21 = load i32, i32* %tmp, align 4, !dbg !8117
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8118
  %port4 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %22, i32 0, i32 44, !dbg !8119
  %23 = load %struct.tty_port*, %struct.tty_port** %port4, align 8, !dbg !8119
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8120
  %25 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8121
  call void @tty_port_close(%struct.tty_port* %23, %struct.tty_struct* %24, %struct.file* %25) #10, !dbg !8122
  br label %return, !dbg !8123

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8123
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #0 !dbg !8124 {
entry:
  %lock.addr.i91 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i91, metadata !5559, metadata !DIExpression()), !dbg !8125
  %flags.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i92, metadata !5568, metadata !DIExpression()), !dbg !8130
  %tmp.i93 = alloca i32, align 4
  %tmp8.i94 = alloca i32, align 4
  %lock.addr.i89 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i89, metadata !5559, metadata !DIExpression()), !dbg !8131
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !8138
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !8139
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %circ = alloca %struct.circ_buf*, align 8
  %flags = alloca i64, align 8
  %c = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %tmp44 = alloca %struct.uart_port*, align 8
  %__uport48 = alloca %struct.uart_port*, align 8
  %end = alloca i32, align 4
  %n = alloca i32, align 4
  %tmp59 = alloca i32, align 4
  %__uport84 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8154, metadata !DIExpression()), !dbg !8155
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8156
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8157
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8157
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8156
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8155
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8158, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.declare(metadata %struct.circ_buf** %circ, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8163, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.declare(metadata i32* %c, metadata !8165, metadata !DIExpression()), !dbg !8166
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8167, metadata !DIExpression()), !dbg !8168
  store i32 0, i32* %ret, align 4, !dbg !8168
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8169
  %tobool = icmp ne %struct.uart_state* %3, null, !dbg !8169
  br i1 %tobool, label %if.end17, label %if.then, !dbg !8171

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8172, metadata !DIExpression()), !dbg !8175
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8175
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8176
  %tobool1 = icmp ne i32 %4, 0, !dbg !8176
  %lnot = xor i1 %tobool1, true, !dbg !8176
  %lnot2 = xor i1 %lnot, true, !dbg !8176
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8176
  %conv = sext i32 %lnot.ext to i64, !dbg !8176
  %tobool3 = icmp ne i64 %conv, 0, !dbg !8176
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !8175

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !8176

do.body:                                          ; preds = %if.then4
  br label %do.body5, !dbg !8178

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !8180

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !8178

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 590, i32 2305, i64 12) #7, !dbg !8182, !srcloc !8184
  br label %do.end7, !dbg !8182

do.end7:                                          ; preds = %do.body6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #7, !dbg !8185, !srcloc !8187
  br label %do.body8, !dbg !8178

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !8188

do.end9:                                          ; preds = %do.body8
  br label %do.end10, !dbg !8178

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !8178

if.end:                                           ; preds = %do.end10, %if.then
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8175
  %tobool11 = icmp ne i32 %5, 0, !dbg !8175
  %lnot12 = xor i1 %tobool11, true, !dbg !8175
  %lnot14 = xor i1 %lnot12, true, !dbg !8175
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !8175
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !8175
  store i64 %conv16, i64* %tmp, align 8, !dbg !8176
  %6 = load i64, i64* %tmp, align 8, !dbg !8175
  store i32 -46, i32* %retval, align 4, !dbg !8190
  br label %return, !dbg !8190

if.end17:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !8191, metadata !DIExpression()), !dbg !8192
  %7 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8192
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %7) #10, !dbg !8192
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !8192
  %8 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8193
  %tobool18 = icmp ne %struct.uart_port* %8, null, !dbg !8193
  br i1 %tobool18, label %if.then19, label %if.end43, !dbg !8192

if.then19:                                        ; preds = %if.end17
  br label %do.body20, !dbg !8193

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !8194

do.body21:                                        ; preds = %do.body20
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8195, metadata !DIExpression()), !dbg !8197
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8198, metadata !DIExpression()), !dbg !8197
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8197
  %conv22 = zext i1 %cmp to i32, !dbg !8197
  store i32 1, i32* %tmp23, align 4, !dbg !8197
  %9 = load i32, i32* %tmp23, align 4, !dbg !8197
  br label %do.body24, !dbg !8199

do.body24:                                        ; preds = %do.body21
  br label %do.body25, !dbg !8200

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !8201

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !8203, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !8207, metadata !DIExpression()), !dbg !8206
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !8206
  %conv30 = zext i1 %cmp29 to i32, !dbg !8206
  store i32 1, i32* %tmp31, align 4, !dbg !8206
  %10 = load i32, i32* %tmp31, align 4, !dbg !8206
  %call32 = call i64 @arch_local_irq_save() #10, !dbg !8208
  store i64 %call32, i64* %flags, align 8, !dbg !8208
  br label %do.end33, !dbg !8208

do.end33:                                         ; preds = %do.body26
  br label %do.end34, !dbg !8201

do.end34:                                         ; preds = %do.end33
  br label %do.body35, !dbg !8200

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8209, !srcloc !8210
  br label %do.body36, !dbg !8209

do.body36:                                        ; preds = %do.body35
  %11 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8211
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 0, !dbg !8211
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8212
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8213
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !8213
  br label %do.end38, !dbg !8211

do.end38:                                         ; preds = %do.body36
  br label %do.end39, !dbg !8209

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !8200

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !8199

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !8194

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !8194

if.end43:                                         ; preds = %do.end42, %if.end17
  %14 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8192
  store %struct.uart_port* %14, %struct.uart_port** %tmp44, align 8, !dbg !8193
  %15 = load %struct.uart_port*, %struct.uart_port** %tmp44, align 8, !dbg !8192
  store %struct.uart_port* %15, %struct.uart_port** %port, align 8, !dbg !8214
  %16 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8215
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %16, i32 0, i32 2, !dbg !8216
  store %struct.circ_buf* %xmit, %struct.circ_buf** %circ, align 8, !dbg !8217
  %17 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8218
  %buf45 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %17, i32 0, i32 0, !dbg !8219
  %18 = load i8*, i8** %buf45, align 8, !dbg !8219
  %tobool46 = icmp ne i8* %18, null, !dbg !8218
  br i1 %tobool46, label %if.end53, label %if.then47, !dbg !8220

if.then47:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport48, metadata !8221, metadata !DIExpression()), !dbg !8222
  %19 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8222
  store %struct.uart_port* %19, %struct.uart_port** %__uport48, align 8, !dbg !8222
  %20 = load %struct.uart_port*, %struct.uart_port** %__uport48, align 8, !dbg !8223
  %tobool49 = icmp ne %struct.uart_port* %20, null, !dbg !8223
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !8222

if.then50:                                        ; preds = %if.then47
  %21 = load %struct.uart_port*, %struct.uart_port** %__uport48, align 8, !dbg !8224
  %lock51 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 0, !dbg !8224
  %22 = load i64, i64* %flags, align 8, !dbg !8224
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i89, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8225
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8225
  store i32 1, i32* %tmp.i, align 4, !dbg !8225
  %23 = load i32, i32* %tmp.i, align 4, !dbg !8225
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8226
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8226
  store i32 1, i32* %tmp8.i, align 4, !dbg !8226
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !8226
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !8227
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !8227
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8228, !srcloc !5691
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i89, align 8, !dbg !8229
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8229
  %rlock.i90 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !8229
  %28 = load %struct.uart_port*, %struct.uart_port** %__uport48, align 8, !dbg !8224
  call void @uart_port_deref(%struct.uart_port* %28) #10, !dbg !8224
  br label %if.end52, !dbg !8224

if.end52:                                         ; preds = %if.then50, %if.then47
  store i32 0, i32* %retval, align 4, !dbg !8230
  br label %return, !dbg !8230

if.end53:                                         ; preds = %if.end43
  br label %while.cond, !dbg !8231

while.cond:                                       ; preds = %if.end70, %if.end53
  %29 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8232
  %tobool54 = icmp ne %struct.uart_port* %29, null, !dbg !8231
  br i1 %tobool54, label %while.body, label %while.end, !dbg !8231

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8233, metadata !DIExpression()), !dbg !8236
  %30 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8236
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %30, i32 0, i32 1, !dbg !8236
  %31 = load i32, i32* %head, align 8, !dbg !8236
  %conv55 = sext i32 %31 to i64, !dbg !8236
  %sub = sub i64 4095, %conv55, !dbg !8236
  %conv56 = trunc i64 %sub to i32, !dbg !8236
  store i32 %conv56, i32* %end, align 4, !dbg !8236
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8237, metadata !DIExpression()), !dbg !8236
  %32 = load i32, i32* %end, align 4, !dbg !8236
  %33 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8236
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %33, i32 0, i32 2, !dbg !8236
  %34 = load i32, i32* %tail, align 4, !dbg !8236
  %add = add i32 %32, %34, !dbg !8236
  %conv57 = sext i32 %add to i64, !dbg !8236
  %and = and i64 %conv57, 4095, !dbg !8236
  %conv58 = trunc i64 %and to i32, !dbg !8236
  store i32 %conv58, i32* %n, align 4, !dbg !8236
  %35 = load i32, i32* %n, align 4, !dbg !8236
  %36 = load i32, i32* %end, align 4, !dbg !8236
  %cmp60 = icmp sle i32 %35, %36, !dbg !8236
  br i1 %cmp60, label %cond.true, label %cond.false, !dbg !8236

cond.true:                                        ; preds = %while.body
  %37 = load i32, i32* %n, align 4, !dbg !8236
  br label %cond.end, !dbg !8236

cond.false:                                       ; preds = %while.body
  %38 = load i32, i32* %end, align 4, !dbg !8236
  %add62 = add i32 %38, 1, !dbg !8236
  br label %cond.end, !dbg !8236

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ %add62, %cond.false ], !dbg !8236
  store i32 %cond, i32* %tmp59, align 4, !dbg !8236
  %39 = load i32, i32* %tmp59, align 4, !dbg !8236
  store i32 %39, i32* %c, align 4, !dbg !8238
  %40 = load i32, i32* %count.addr, align 4, !dbg !8239
  %41 = load i32, i32* %c, align 4, !dbg !8241
  %cmp63 = icmp slt i32 %40, %41, !dbg !8242
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !8243

if.then65:                                        ; preds = %cond.end
  %42 = load i32, i32* %count.addr, align 4, !dbg !8244
  store i32 %42, i32* %c, align 4, !dbg !8245
  br label %if.end66, !dbg !8246

if.end66:                                         ; preds = %if.then65, %cond.end
  %43 = load i32, i32* %c, align 4, !dbg !8247
  %cmp67 = icmp sle i32 %43, 0, !dbg !8249
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !8250

if.then69:                                        ; preds = %if.end66
  br label %while.end, !dbg !8251

if.end70:                                         ; preds = %if.end66
  %44 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8252
  %buf71 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %44, i32 0, i32 0, !dbg !8253
  %45 = load i8*, i8** %buf71, align 8, !dbg !8253
  %46 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8254
  %head72 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %46, i32 0, i32 1, !dbg !8255
  %47 = load i32, i32* %head72, align 8, !dbg !8255
  %idx.ext = sext i32 %47 to i64, !dbg !8256
  %add.ptr = getelementptr i8, i8* %45, i64 %idx.ext, !dbg !8256
  %48 = load i8*, i8** %buf.addr, align 8, !dbg !8257
  %49 = load i32, i32* %c, align 4, !dbg !8258
  %conv73 = sext i32 %49 to i64, !dbg !8258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %48, i64 %conv73, i1 false), !dbg !8259
  %50 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8260
  %head74 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %50, i32 0, i32 1, !dbg !8261
  %51 = load i32, i32* %head74, align 8, !dbg !8261
  %52 = load i32, i32* %c, align 4, !dbg !8262
  %add75 = add i32 %51, %52, !dbg !8263
  %conv76 = sext i32 %add75 to i64, !dbg !8264
  %and77 = and i64 %conv76, 4095, !dbg !8265
  %conv78 = trunc i64 %and77 to i32, !dbg !8264
  %53 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8266
  %head79 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %53, i32 0, i32 1, !dbg !8267
  store i32 %conv78, i32* %head79, align 8, !dbg !8268
  %54 = load i32, i32* %c, align 4, !dbg !8269
  %55 = load i8*, i8** %buf.addr, align 8, !dbg !8270
  %idx.ext80 = sext i32 %54 to i64, !dbg !8270
  %add.ptr81 = getelementptr i8, i8* %55, i64 %idx.ext80, !dbg !8270
  store i8* %add.ptr81, i8** %buf.addr, align 8, !dbg !8270
  %56 = load i32, i32* %c, align 4, !dbg !8271
  %57 = load i32, i32* %count.addr, align 4, !dbg !8272
  %sub82 = sub i32 %57, %56, !dbg !8272
  store i32 %sub82, i32* %count.addr, align 4, !dbg !8272
  %58 = load i32, i32* %c, align 4, !dbg !8273
  %59 = load i32, i32* %ret, align 4, !dbg !8274
  %add83 = add i32 %59, %58, !dbg !8274
  store i32 %add83, i32* %ret, align 4, !dbg !8274
  br label %while.cond, !dbg !8231, !llvm.loop !8275

while.end:                                        ; preds = %if.then69, %while.cond
  %60 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8277
  call void @__uart_start(%struct.tty_struct* %60) #10, !dbg !8278
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport84, metadata !8279, metadata !DIExpression()), !dbg !8280
  %61 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8280
  store %struct.uart_port* %61, %struct.uart_port** %__uport84, align 8, !dbg !8280
  %62 = load %struct.uart_port*, %struct.uart_port** %__uport84, align 8, !dbg !8281
  %tobool85 = icmp ne %struct.uart_port* %62, null, !dbg !8281
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !8280

if.then86:                                        ; preds = %while.end
  %63 = load %struct.uart_port*, %struct.uart_port** %__uport84, align 8, !dbg !8282
  %lock87 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %63, i32 0, i32 0, !dbg !8282
  %64 = load i64, i64* %flags, align 8, !dbg !8282
  store %struct.spinlock* %lock87, %struct.spinlock** %lock.addr.i91, align 8
  store i64 %64, i64* %flags.addr.i92, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8283
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8283
  store i32 1, i32* %tmp.i93, align 4, !dbg !8283
  %65 = load i32, i32* %tmp.i93, align 4, !dbg !8283
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8284
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8284
  store i32 1, i32* %tmp8.i94, align 4, !dbg !8284
  %66 = load i32, i32* %tmp8.i94, align 4, !dbg !8284
  %67 = load i64, i64* %flags.addr.i92, align 8, !dbg !8285
  call void @arch_local_irq_restore(i64 %67) #11, !dbg !8285
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8286, !srcloc !5691
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i91, align 8, !dbg !8287
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !8287
  %rlock.i95 = bitcast %union.anon* %69 to %struct.raw_spinlock*, !dbg !8287
  %70 = load %struct.uart_port*, %struct.uart_port** %__uport84, align 8, !dbg !8282
  call void @uart_port_deref(%struct.uart_port* %70) #10, !dbg !8282
  br label %if.end88, !dbg !8282

if.end88:                                         ; preds = %if.then86, %while.end
  %71 = load i32, i32* %ret, align 4, !dbg !8288
  store i32 %71, i32* %retval, align 4, !dbg !8289
  br label %return, !dbg !8289

return:                                           ; preds = %if.end88, %if.end52, %if.end
  %72 = load i32, i32* %retval, align 4, !dbg !8290
  ret i32 %72, !dbg !8290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_put_char(%struct.tty_struct* %tty, i8 zeroext %c) #0 !dbg !8291 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !5559, metadata !DIExpression()), !dbg !8292
  %flags.addr.i51 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i51, metadata !5568, metadata !DIExpression()), !dbg !8297
  %tmp.i52 = alloca i32, align 4
  %tmp8.i53 = alloca i32, align 4
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !5559, metadata !DIExpression()), !dbg !8298
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !8305
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !8306
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %c.addr = alloca i8, align 1
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %circ = alloca %struct.circ_buf*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca %struct.uart_port*, align 8
  %__uport23 = alloca %struct.uart_port*, align 8
  %__uport43 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8319, metadata !DIExpression()), !dbg !8320
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8321
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8322
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8322
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8321
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8320
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata %struct.circ_buf** %circ, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8327, metadata !DIExpression()), !dbg !8328
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8329, metadata !DIExpression()), !dbg !8330
  store i32 0, i32* %ret, align 4, !dbg !8330
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8331
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 2, !dbg !8332
  store %struct.circ_buf* %xmit, %struct.circ_buf** %circ, align 8, !dbg !8333
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !8334, metadata !DIExpression()), !dbg !8335
  %4 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8335
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %4) #10, !dbg !8335
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !8335
  %5 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8336
  %tobool = icmp ne %struct.uart_port* %5, null, !dbg !8336
  br i1 %tobool, label %if.then, label %if.end, !dbg !8335

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8336

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !8337

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8338, metadata !DIExpression()), !dbg !8340
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8341, metadata !DIExpression()), !dbg !8340
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8340
  %conv = zext i1 %cmp to i32, !dbg !8340
  store i32 1, i32* %tmp, align 4, !dbg !8340
  %6 = load i32, i32* %tmp, align 4, !dbg !8340
  br label %do.body2, !dbg !8342

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8343

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8344

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8346, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8350, metadata !DIExpression()), !dbg !8349
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8349
  %conv8 = zext i1 %cmp7 to i32, !dbg !8349
  store i32 1, i32* %tmp9, align 4, !dbg !8349
  %7 = load i32, i32* %tmp9, align 4, !dbg !8349
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !8351
  store i64 %call10, i64* %flags, align 8, !dbg !8351
  br label %do.end, !dbg !8351

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8344

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8343

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8352, !srcloc !8353
  br label %do.body13, !dbg !8352

do.body13:                                        ; preds = %do.body12
  %8 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8354
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 0, !dbg !8354
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8355
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8356
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !8356
  br label %do.end15, !dbg !8354

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8352

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8343

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8342

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8337

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8337

if.end:                                           ; preds = %do.end19, %entry
  %11 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8335
  store %struct.uart_port* %11, %struct.uart_port** %tmp20, align 8, !dbg !8336
  %12 = load %struct.uart_port*, %struct.uart_port** %tmp20, align 8, !dbg !8335
  store %struct.uart_port* %12, %struct.uart_port** %port, align 8, !dbg !8357
  %13 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8358
  %buf = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %13, i32 0, i32 0, !dbg !8359
  %14 = load i8*, i8** %buf, align 8, !dbg !8359
  %tobool21 = icmp ne i8* %14, null, !dbg !8358
  br i1 %tobool21, label %if.end28, label %if.then22, !dbg !8360

if.then22:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport23, metadata !8361, metadata !DIExpression()), !dbg !8362
  %15 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8362
  store %struct.uart_port* %15, %struct.uart_port** %__uport23, align 8, !dbg !8362
  %16 = load %struct.uart_port*, %struct.uart_port** %__uport23, align 8, !dbg !8363
  %tobool24 = icmp ne %struct.uart_port* %16, null, !dbg !8363
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !8362

if.then25:                                        ; preds = %if.then22
  %17 = load %struct.uart_port*, %struct.uart_port** %__uport23, align 8, !dbg !8364
  %lock26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 0, !dbg !8364
  %18 = load i64, i64* %flags, align 8, !dbg !8364
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8365
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8365
  store i32 1, i32* %tmp.i, align 4, !dbg !8365
  %19 = load i32, i32* %tmp.i, align 4, !dbg !8365
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8366
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8366
  store i32 1, i32* %tmp8.i, align 4, !dbg !8366
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !8366
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !8367
  call void @arch_local_irq_restore(i64 %21) #11, !dbg !8367
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8368, !srcloc !5691
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !8369
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8369
  %rlock.i49 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !8369
  %24 = load %struct.uart_port*, %struct.uart_port** %__uport23, align 8, !dbg !8364
  call void @uart_port_deref(%struct.uart_port* %24) #10, !dbg !8364
  br label %if.end27, !dbg !8364

if.end27:                                         ; preds = %if.then25, %if.then22
  store i32 0, i32* %retval, align 4, !dbg !8370
  br label %return, !dbg !8370

if.end28:                                         ; preds = %if.end
  %25 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8371
  %tobool29 = icmp ne %struct.uart_port* %25, null, !dbg !8371
  br i1 %tobool29, label %land.lhs.true, label %if.end42, !dbg !8373

land.lhs.true:                                    ; preds = %if.end28
  %26 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8374
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %26, i32 0, i32 2, !dbg !8374
  %27 = load i32, i32* %tail, align 4, !dbg !8374
  %28 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8374
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %28, i32 0, i32 1, !dbg !8374
  %29 = load i32, i32* %head, align 8, !dbg !8374
  %add = add i32 %29, 1, !dbg !8374
  %sub = sub i32 %27, %add, !dbg !8374
  %conv30 = sext i32 %sub to i64, !dbg !8374
  %and = and i64 %conv30, 4095, !dbg !8374
  %cmp31 = icmp ne i64 %and, 0, !dbg !8375
  br i1 %cmp31, label %if.then33, label %if.end42, !dbg !8376

if.then33:                                        ; preds = %land.lhs.true
  %30 = load i8, i8* %c.addr, align 1, !dbg !8377
  %31 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8379
  %buf34 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %31, i32 0, i32 0, !dbg !8380
  %32 = load i8*, i8** %buf34, align 8, !dbg !8380
  %33 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8381
  %head35 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %33, i32 0, i32 1, !dbg !8382
  %34 = load i32, i32* %head35, align 8, !dbg !8382
  %idxprom = sext i32 %34 to i64, !dbg !8379
  %arrayidx = getelementptr i8, i8* %32, i64 %idxprom, !dbg !8379
  store i8 %30, i8* %arrayidx, align 1, !dbg !8383
  %35 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8384
  %head36 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %35, i32 0, i32 1, !dbg !8385
  %36 = load i32, i32* %head36, align 8, !dbg !8385
  %add37 = add i32 %36, 1, !dbg !8386
  %conv38 = sext i32 %add37 to i64, !dbg !8387
  %and39 = and i64 %conv38, 4095, !dbg !8388
  %conv40 = trunc i64 %and39 to i32, !dbg !8387
  %37 = load %struct.circ_buf*, %struct.circ_buf** %circ, align 8, !dbg !8389
  %head41 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %37, i32 0, i32 1, !dbg !8390
  store i32 %conv40, i32* %head41, align 8, !dbg !8391
  store i32 1, i32* %ret, align 4, !dbg !8392
  br label %if.end42, !dbg !8393

if.end42:                                         ; preds = %if.then33, %land.lhs.true, %if.end28
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport43, metadata !8394, metadata !DIExpression()), !dbg !8395
  %38 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8395
  store %struct.uart_port* %38, %struct.uart_port** %__uport43, align 8, !dbg !8395
  %39 = load %struct.uart_port*, %struct.uart_port** %__uport43, align 8, !dbg !8396
  %tobool44 = icmp ne %struct.uart_port* %39, null, !dbg !8396
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !8395

if.then45:                                        ; preds = %if.end42
  %40 = load %struct.uart_port*, %struct.uart_port** %__uport43, align 8, !dbg !8397
  %lock46 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %40, i32 0, i32 0, !dbg !8397
  %41 = load i64, i64* %flags, align 8, !dbg !8397
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %41, i64* %flags.addr.i51, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8398
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8398
  store i32 1, i32* %tmp.i52, align 4, !dbg !8398
  %42 = load i32, i32* %tmp.i52, align 4, !dbg !8398
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8399
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8399
  store i32 1, i32* %tmp8.i53, align 4, !dbg !8399
  %43 = load i32, i32* %tmp8.i53, align 4, !dbg !8399
  %44 = load i64, i64* %flags.addr.i51, align 8, !dbg !8400
  call void @arch_local_irq_restore(i64 %44) #11, !dbg !8400
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8401, !srcloc !5691
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !8402
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !8402
  %rlock.i54 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !8402
  %47 = load %struct.uart_port*, %struct.uart_port** %__uport43, align 8, !dbg !8397
  call void @uart_port_deref(%struct.uart_port* %47) #10, !dbg !8397
  br label %if.end47, !dbg !8397

if.end47:                                         ; preds = %if.then45, %if.end42
  %48 = load i32, i32* %ret, align 4, !dbg !8403
  store i32 %48, i32* %retval, align 4, !dbg !8404
  br label %return, !dbg !8404

return:                                           ; preds = %if.end47, %if.end27
  %49 = load i32, i32* %retval, align 4, !dbg !8405
  ret i32 %49, !dbg !8405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_flush_chars(%struct.tty_struct* %tty) #0 !dbg !8406 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8409
  call void @uart_start(%struct.tty_struct* %0) #10, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_write_room(%struct.tty_struct* %tty) #0 !dbg !8412 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !5559, metadata !DIExpression()), !dbg !8413
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !8418
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !8419
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca %struct.uart_port*, align 8
  %__uport24 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8430, metadata !DIExpression()), !dbg !8431
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8432
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8433
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8433
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8432
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8431
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8434, metadata !DIExpression()), !dbg !8435
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8436, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !8440, metadata !DIExpression()), !dbg !8441
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8441
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !8441
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !8441
  %4 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8442
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !8442
  br i1 %tobool, label %if.then, label %if.end, !dbg !8441

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8442

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !8443

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8444, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8447, metadata !DIExpression()), !dbg !8446
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8446
  %conv = zext i1 %cmp to i32, !dbg !8446
  store i32 1, i32* %tmp, align 4, !dbg !8446
  %5 = load i32, i32* %tmp, align 4, !dbg !8446
  br label %do.body2, !dbg !8448

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8449

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8450

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8452, metadata !DIExpression()), !dbg !8455
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8456, metadata !DIExpression()), !dbg !8455
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8455
  %conv8 = zext i1 %cmp7 to i32, !dbg !8455
  store i32 1, i32* %tmp9, align 4, !dbg !8455
  %6 = load i32, i32* %tmp9, align 4, !dbg !8455
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !8457
  store i64 %call10, i64* %flags, align 8, !dbg !8457
  br label %do.end, !dbg !8457

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8450

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8449

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8458, !srcloc !8459
  br label %do.body13, !dbg !8458

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8460
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 0, !dbg !8460
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8461
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8462
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !8462
  br label %do.end15, !dbg !8460

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8458

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8449

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8448

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8443

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8443

if.end:                                           ; preds = %do.end19, %entry
  %10 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8441
  store %struct.uart_port* %10, %struct.uart_port** %tmp20, align 8, !dbg !8442
  %11 = load %struct.uart_port*, %struct.uart_port** %tmp20, align 8, !dbg !8441
  store %struct.uart_port* %11, %struct.uart_port** %port, align 8, !dbg !8463
  %12 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8464
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %12, i32 0, i32 2, !dbg !8464
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 2, !dbg !8464
  %13 = load i32, i32* %tail, align 4, !dbg !8464
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8464
  %xmit21 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %14, i32 0, i32 2, !dbg !8464
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit21, i32 0, i32 1, !dbg !8464
  %15 = load i32, i32* %head, align 8, !dbg !8464
  %add = add i32 %15, 1, !dbg !8464
  %sub = sub i32 %13, %add, !dbg !8464
  %conv22 = sext i32 %sub to i64, !dbg !8464
  %and = and i64 %conv22, 4095, !dbg !8464
  %conv23 = trunc i64 %and to i32, !dbg !8464
  store i32 %conv23, i32* %ret, align 4, !dbg !8465
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport24, metadata !8466, metadata !DIExpression()), !dbg !8467
  %16 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8467
  store %struct.uart_port* %16, %struct.uart_port** %__uport24, align 8, !dbg !8467
  %17 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8468
  %tobool25 = icmp ne %struct.uart_port* %17, null, !dbg !8468
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8467

if.then26:                                        ; preds = %if.end
  %18 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8469
  %lock27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 0, !dbg !8469
  %19 = load i64, i64* %flags, align 8, !dbg !8469
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8470
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8470
  store i32 1, i32* %tmp.i, align 4, !dbg !8470
  %20 = load i32, i32* %tmp.i, align 4, !dbg !8470
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8471
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8471
  store i32 1, i32* %tmp8.i, align 4, !dbg !8471
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !8471
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !8472
  call void @arch_local_irq_restore(i64 %22) #11, !dbg !8472
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8473, !srcloc !5691
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !8474
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8474
  %rlock.i30 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !8474
  %25 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8469
  call void @uart_port_deref(%struct.uart_port* %25) #10, !dbg !8469
  br label %if.end28, !dbg !8469

if.end28:                                         ; preds = %if.then26, %if.end
  %26 = load i32, i32* %ret, align 4, !dbg !8475
  ret i32 %26, !dbg !8476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_chars_in_buffer(%struct.tty_struct* %tty) #0 !dbg !8477 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !5559, metadata !DIExpression()), !dbg !8478
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !8483
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !8484
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca %struct.uart_port*, align 8
  %__uport24 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8493, metadata !DIExpression()), !dbg !8494
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8495, metadata !DIExpression()), !dbg !8496
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8497
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8498
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8498
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8497
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8496
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8499, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8501, metadata !DIExpression()), !dbg !8502
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8503, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !8505, metadata !DIExpression()), !dbg !8506
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8506
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !8506
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !8506
  %4 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8507
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !8507
  br i1 %tobool, label %if.then, label %if.end, !dbg !8506

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8507

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !8508

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8509, metadata !DIExpression()), !dbg !8511
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8512, metadata !DIExpression()), !dbg !8511
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8511
  %conv = zext i1 %cmp to i32, !dbg !8511
  store i32 1, i32* %tmp, align 4, !dbg !8511
  %5 = load i32, i32* %tmp, align 4, !dbg !8511
  br label %do.body2, !dbg !8513

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8514

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8515

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8517, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8521, metadata !DIExpression()), !dbg !8520
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8520
  %conv8 = zext i1 %cmp7 to i32, !dbg !8520
  store i32 1, i32* %tmp9, align 4, !dbg !8520
  %6 = load i32, i32* %tmp9, align 4, !dbg !8520
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !8522
  store i64 %call10, i64* %flags, align 8, !dbg !8522
  br label %do.end, !dbg !8522

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8515

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8514

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8523, !srcloc !8524
  br label %do.body13, !dbg !8523

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8525
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 0, !dbg !8525
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8526
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8527
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !8527
  br label %do.end15, !dbg !8525

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8523

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8514

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8513

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8508

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8508

if.end:                                           ; preds = %do.end19, %entry
  %10 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8506
  store %struct.uart_port* %10, %struct.uart_port** %tmp20, align 8, !dbg !8507
  %11 = load %struct.uart_port*, %struct.uart_port** %tmp20, align 8, !dbg !8506
  store %struct.uart_port* %11, %struct.uart_port** %port, align 8, !dbg !8528
  %12 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8529
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %12, i32 0, i32 2, !dbg !8529
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 1, !dbg !8529
  %13 = load i32, i32* %head, align 8, !dbg !8529
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8529
  %xmit21 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %14, i32 0, i32 2, !dbg !8529
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit21, i32 0, i32 2, !dbg !8529
  %15 = load i32, i32* %tail, align 4, !dbg !8529
  %sub = sub i32 %13, %15, !dbg !8529
  %conv22 = sext i32 %sub to i64, !dbg !8529
  %and = and i64 %conv22, 4095, !dbg !8529
  %conv23 = trunc i64 %and to i32, !dbg !8529
  store i32 %conv23, i32* %ret, align 4, !dbg !8530
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport24, metadata !8531, metadata !DIExpression()), !dbg !8532
  %16 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8532
  store %struct.uart_port* %16, %struct.uart_port** %__uport24, align 8, !dbg !8532
  %17 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8533
  %tobool25 = icmp ne %struct.uart_port* %17, null, !dbg !8533
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8532

if.then26:                                        ; preds = %if.end
  %18 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8534
  %lock27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 0, !dbg !8534
  %19 = load i64, i64* %flags, align 8, !dbg !8534
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8535
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8535
  store i32 1, i32* %tmp.i, align 4, !dbg !8535
  %20 = load i32, i32* %tmp.i, align 4, !dbg !8535
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8536
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8536
  store i32 1, i32* %tmp8.i, align 4, !dbg !8536
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !8536
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !8537
  call void @arch_local_irq_restore(i64 %22) #11, !dbg !8537
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8538, !srcloc !5691
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !8539
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !8539
  %rlock.i30 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !8539
  %25 = load %struct.uart_port*, %struct.uart_port** %__uport24, align 8, !dbg !8534
  call void @uart_port_deref(%struct.uart_port* %25) #10, !dbg !8534
  br label %if.end28, !dbg !8534

if.end28:                                         ; preds = %if.then26, %if.end
  %26 = load i32, i32* %ret, align 4, !dbg !8540
  ret i32 %26, !dbg !8541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #0 !dbg !8542 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %uarg = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8549, metadata !DIExpression()), !dbg !8550
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8551
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8552
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8552
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8551
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8550
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !8553, metadata !DIExpression()), !dbg !8554
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8555
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !8556
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !8554
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !8557, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.declare(metadata i8** %uarg, metadata !8559, metadata !DIExpression()), !dbg !8560
  %4 = load i64, i64* %arg.addr, align 8, !dbg !8561
  %5 = inttoptr i64 %4 to i8*, !dbg !8562
  store i8* %5, i8** %uarg, align 8, !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8563, metadata !DIExpression()), !dbg !8564
  store i32 -515, i32* %ret, align 4, !dbg !8564
  %6 = load i32, i32* %cmd.addr, align 4, !dbg !8565
  switch i32 %6, label %sw.epilog [
    i32 21587, label %sw.bb
  ], !dbg !8566

sw.bb:                                            ; preds = %entry
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8567
  %termios_rwsem = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 11, !dbg !8569
  call void @down_write(%struct.rw_semaphore* %termios_rwsem) #10, !dbg !8570
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8571
  %9 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8572
  %call = call i32 @uart_do_autoconfig(%struct.tty_struct* %8, %struct.uart_state* %9) #10, !dbg !8573
  store i32 %call, i32* %ret, align 4, !dbg !8574
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8575
  %termios_rwsem2 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 11, !dbg !8576
  call void @up_write(%struct.rw_semaphore* %termios_rwsem2) #10, !dbg !8577
  br label %sw.epilog, !dbg !8578

sw.epilog:                                        ; preds = %entry, %sw.bb
  %11 = load i32, i32* %ret, align 4, !dbg !8579
  %cmp = icmp ne i32 %11, -515, !dbg !8581
  br i1 %cmp, label %if.then, label %if.end, !dbg !8582

if.then:                                          ; preds = %sw.epilog
  br label %out, !dbg !8583

if.end:                                           ; preds = %sw.epilog
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8584
  %call3 = call zeroext i1 @tty_io_error(%struct.tty_struct* %12) #10, !dbg !8586
  br i1 %call3, label %if.then4, label %if.end5, !dbg !8587

if.then4:                                         ; preds = %if.end
  store i32 -5, i32* %ret, align 4, !dbg !8588
  br label %out, !dbg !8590

if.end5:                                          ; preds = %if.end
  %13 = load i32, i32* %cmd.addr, align 4, !dbg !8591
  switch i32 %13, label %sw.epilog8 [
    i32 21596, label %sw.bb6
  ], !dbg !8592

sw.bb6:                                           ; preds = %if.end5
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8593
  %15 = load i64, i64* %arg.addr, align 8, !dbg !8595
  %call7 = call i32 @uart_wait_modem_status(%struct.uart_state* %14, i64 %15) #10, !dbg !8596
  store i32 %call7, i32* %ret, align 4, !dbg !8597
  br label %sw.epilog8, !dbg !8598

sw.epilog8:                                       ; preds = %if.end5, %sw.bb6
  %16 = load i32, i32* %ret, align 4, !dbg !8599
  %cmp9 = icmp ne i32 %16, -515, !dbg !8601
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8602

if.then10:                                        ; preds = %sw.epilog8
  br label %out, !dbg !8603

if.end11:                                         ; preds = %sw.epilog8
  %17 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8604
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %17, i32 0, i32 13, !dbg !8605
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !8606
  %18 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8607
  %call12 = call %struct.uart_port* @uart_port_check(%struct.uart_state* %18) #10, !dbg !8608
  store %struct.uart_port* %call12, %struct.uart_port** %uport, align 8, !dbg !8609
  %19 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8610
  %tobool = icmp ne %struct.uart_port* %19, null, !dbg !8610
  br i1 %tobool, label %lor.lhs.false, label %if.then14, !dbg !8612

lor.lhs.false:                                    ; preds = %if.end11
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8613
  %call13 = call zeroext i1 @tty_io_error(%struct.tty_struct* %20) #10, !dbg !8614
  br i1 %call13, label %if.then14, label %if.end15, !dbg !8615

if.then14:                                        ; preds = %lor.lhs.false, %if.end11
  store i32 -5, i32* %ret, align 4, !dbg !8616
  br label %out_up, !dbg !8618

if.end15:                                         ; preds = %lor.lhs.false
  %21 = load i32, i32* %cmd.addr, align 4, !dbg !8619
  switch i32 %21, label %sw.default [
    i32 21593, label %sw.bb16
    i32 21550, label %sw.bb18
    i32 21551, label %sw.bb20
    i32 -1071098813, label %sw.bb22
    i32 -2144840638, label %sw.bb24
  ], !dbg !8620

sw.bb16:                                          ; preds = %if.end15
  %22 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8621
  %23 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8623
  %24 = load i8*, i8** %uarg, align 8, !dbg !8624
  %25 = bitcast i8* %24 to i32*, !dbg !8624
  %call17 = call i32 @uart_get_lsr_info(%struct.tty_struct* %22, %struct.uart_state* %23, i32* %25) #10, !dbg !8625
  store i32 %call17, i32* %ret, align 4, !dbg !8626
  br label %sw.epilog33, !dbg !8627

sw.bb18:                                          ; preds = %if.end15
  %26 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8628
  %27 = load i8*, i8** %uarg, align 8, !dbg !8629
  %28 = bitcast i8* %27 to %struct.serial_rs485*, !dbg !8629
  %call19 = call i32 @uart_get_rs485_config(%struct.uart_port* %26, %struct.serial_rs485* %28) #10, !dbg !8630
  store i32 %call19, i32* %ret, align 4, !dbg !8631
  br label %sw.epilog33, !dbg !8632

sw.bb20:                                          ; preds = %if.end15
  %29 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8633
  %30 = load i8*, i8** %uarg, align 8, !dbg !8634
  %31 = bitcast i8* %30 to %struct.serial_rs485*, !dbg !8634
  %call21 = call i32 @uart_set_rs485_config(%struct.uart_port* %29, %struct.serial_rs485* %31) #10, !dbg !8635
  store i32 %call21, i32* %ret, align 4, !dbg !8636
  br label %sw.epilog33, !dbg !8637

sw.bb22:                                          ; preds = %if.end15
  %32 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8638
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %32, i32 0, i32 5, !dbg !8639
  %33 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !8639
  %34 = load i8*, i8** %uarg, align 8, !dbg !8640
  %35 = bitcast i8* %34 to %struct.serial_iso7816*, !dbg !8640
  %call23 = call i32 @uart_set_iso7816_config(%struct.uart_port* %33, %struct.serial_iso7816* %35) #10, !dbg !8641
  store i32 %call23, i32* %ret, align 4, !dbg !8642
  br label %sw.epilog33, !dbg !8643

sw.bb24:                                          ; preds = %if.end15
  %36 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8644
  %uart_port25 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %36, i32 0, i32 5, !dbg !8645
  %37 = load %struct.uart_port*, %struct.uart_port** %uart_port25, align 8, !dbg !8645
  %38 = load i8*, i8** %uarg, align 8, !dbg !8646
  %39 = bitcast i8* %38 to %struct.serial_iso7816*, !dbg !8646
  %call26 = call i32 @uart_get_iso7816_config(%struct.uart_port* %37, %struct.serial_iso7816* %39) #10, !dbg !8647
  store i32 %call26, i32* %ret, align 4, !dbg !8648
  br label %sw.epilog33, !dbg !8649

sw.default:                                       ; preds = %if.end15
  %40 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8650
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %40, i32 0, i32 39, !dbg !8652
  %41 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !8652
  %ioctl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %41, i32 0, i32 22, !dbg !8653
  %42 = load i32 (%struct.uart_port*, i32, i64)*, i32 (%struct.uart_port*, i32, i64)** %ioctl, align 8, !dbg !8653
  %tobool27 = icmp ne i32 (%struct.uart_port*, i32, i64)* %42, null, !dbg !8650
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !8654

if.then28:                                        ; preds = %sw.default
  %43 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8655
  %ops29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %43, i32 0, i32 39, !dbg !8656
  %44 = load %struct.uart_ops*, %struct.uart_ops** %ops29, align 8, !dbg !8656
  %ioctl30 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %44, i32 0, i32 22, !dbg !8657
  %45 = load i32 (%struct.uart_port*, i32, i64)*, i32 (%struct.uart_port*, i32, i64)** %ioctl30, align 8, !dbg !8657
  %46 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8658
  %47 = load i32, i32* %cmd.addr, align 4, !dbg !8659
  %48 = load i64, i64* %arg.addr, align 8, !dbg !8660
  %call31 = call i32 %45(%struct.uart_port* %46, i32 %47, i64 %48) #10, !dbg !8655
  store i32 %call31, i32* %ret, align 4, !dbg !8661
  br label %if.end32, !dbg !8662

if.end32:                                         ; preds = %if.then28, %sw.default
  br label %sw.epilog33, !dbg !8663

sw.epilog33:                                      ; preds = %if.end32, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16
  br label %out_up, !dbg !8664

out_up:                                           ; preds = %sw.epilog33, %if.then14
  call void @llvm.dbg.label(metadata !8665), !dbg !8666
  %49 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !8667
  %mutex34 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %49, i32 0, i32 13, !dbg !8668
  call void @mutex_unlock(%struct.mutex* %mutex34) #10, !dbg !8669
  br label %out, !dbg !8669

out:                                              ; preds = %out_up, %if.then10, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !8670), !dbg !8671
  %50 = load i32, i32* %ret, align 4, !dbg !8672
  ret i32 %50, !dbg !8673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #0 !dbg !8674 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %state = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %cflag = alloca i32, align 4
  %iflag_mask = alloca i32, align 4
  %sw_changed = alloca i8, align 1
  %mask = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !8677, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8679, metadata !DIExpression()), !dbg !8680
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8681
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8682
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8682
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8681
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8680
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i32* %cflag, metadata !8685, metadata !DIExpression()), !dbg !8686
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8687
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 15, !dbg !8688
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !8689
  %4 = load i32, i32* %c_cflag, align 8, !dbg !8689
  store i32 %4, i32* %cflag, align 4, !dbg !8686
  call void @llvm.dbg.declare(metadata i32* %iflag_mask, metadata !8690, metadata !DIExpression()), !dbg !8691
  store i32 31, i32* %iflag_mask, align 4, !dbg !8691
  call void @llvm.dbg.declare(metadata i8* %sw_changed, metadata !8692, metadata !DIExpression()), !dbg !8693
  store i8 0, i8* %sw_changed, align 1, !dbg !8693
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8694
  %port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %5, i32 0, i32 0, !dbg !8695
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !8696
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !8697
  %6 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8698
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %6) #10, !dbg !8699
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !8700
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8701
  %tobool = icmp ne %struct.uart_port* %7, null, !dbg !8701
  br i1 %tobool, label %if.end, label %if.then, !dbg !8703

if.then:                                          ; preds = %entry
  br label %out, !dbg !8704

if.end:                                           ; preds = %entry
  %8 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8705
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 33, !dbg !8707
  %9 = load i32, i32* %flags, align 8, !dbg !8707
  %and = and i32 %9, 4194304, !dbg !8708
  %tobool1 = icmp ne i32 %and, 0, !dbg !8708
  br i1 %tobool1, label %if.then2, label %if.end17, !dbg !8709

if.then2:                                         ; preds = %if.end
  %10 = load i32, i32* %iflag_mask, align 4, !dbg !8710
  %or = or i32 %10, 7168, !dbg !8710
  store i32 %or, i32* %iflag_mask, align 4, !dbg !8710
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8712
  %termios3 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 15, !dbg !8713
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios3, i32 0, i32 5, !dbg !8714
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !8712
  %12 = load i8, i8* %arrayidx, align 1, !dbg !8712
  %conv = zext i8 %12 to i32, !dbg !8712
  %13 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8715
  %c_cc4 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %13, i32 0, i32 5, !dbg !8716
  %arrayidx5 = getelementptr [19 x i8], [19 x i8]* %c_cc4, i64 0, i64 8, !dbg !8715
  %14 = load i8, i8* %arrayidx5, align 1, !dbg !8715
  %conv6 = zext i8 %14 to i32, !dbg !8715
  %cmp = icmp ne i32 %conv, %conv6, !dbg !8717
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8718

lor.rhs:                                          ; preds = %if.then2
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8719
  %termios8 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !8720
  %c_cc9 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios8, i32 0, i32 5, !dbg !8721
  %arrayidx10 = getelementptr [19 x i8], [19 x i8]* %c_cc9, i64 0, i64 9, !dbg !8719
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !8719
  %conv11 = zext i8 %16 to i32, !dbg !8719
  %17 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8722
  %c_cc12 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %17, i32 0, i32 5, !dbg !8723
  %arrayidx13 = getelementptr [19 x i8], [19 x i8]* %c_cc12, i64 0, i64 9, !dbg !8722
  %18 = load i8, i8* %arrayidx13, align 1, !dbg !8722
  %conv14 = zext i8 %18 to i32, !dbg !8722
  %cmp15 = icmp ne i32 %conv11, %conv14, !dbg !8724
  br label %lor.end, !dbg !8718

lor.end:                                          ; preds = %lor.rhs, %if.then2
  %19 = phi i1 [ true, %if.then2 ], [ %cmp15, %lor.rhs ]
  %frombool = zext i1 %19 to i8, !dbg !8725
  store i8 %frombool, i8* %sw_changed, align 1, !dbg !8725
  br label %if.end17, !dbg !8726

if.end17:                                         ; preds = %lor.end, %if.end
  %20 = load i32, i32* %cflag, align 4, !dbg !8727
  %21 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8729
  %c_cflag18 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %21, i32 0, i32 2, !dbg !8730
  %22 = load i32, i32* %c_cflag18, align 4, !dbg !8730
  %xor = xor i32 %20, %22, !dbg !8731
  %cmp19 = icmp eq i32 %xor, 0, !dbg !8732
  br i1 %cmp19, label %land.lhs.true, label %if.end40, !dbg !8733

land.lhs.true:                                    ; preds = %if.end17
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8734
  %termios21 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %23, i32 0, i32 15, !dbg !8735
  %c_ospeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios21, i32 0, i32 7, !dbg !8736
  %24 = load i32, i32* %c_ospeed, align 8, !dbg !8736
  %25 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8737
  %c_ospeed22 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %25, i32 0, i32 7, !dbg !8738
  %26 = load i32, i32* %c_ospeed22, align 4, !dbg !8738
  %cmp23 = icmp eq i32 %24, %26, !dbg !8739
  br i1 %cmp23, label %land.lhs.true25, label %if.end40, !dbg !8740

land.lhs.true25:                                  ; preds = %land.lhs.true
  %27 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8741
  %termios26 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %27, i32 0, i32 15, !dbg !8742
  %c_ispeed = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios26, i32 0, i32 6, !dbg !8743
  %28 = load i32, i32* %c_ispeed, align 4, !dbg !8743
  %29 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8744
  %c_ispeed27 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %29, i32 0, i32 6, !dbg !8745
  %30 = load i32, i32* %c_ispeed27, align 4, !dbg !8745
  %cmp28 = icmp eq i32 %28, %30, !dbg !8746
  br i1 %cmp28, label %land.lhs.true30, label %if.end40, !dbg !8747

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %31 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8748
  %termios31 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %31, i32 0, i32 15, !dbg !8749
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios31, i32 0, i32 0, !dbg !8750
  %32 = load i32, i32* %c_iflag, align 8, !dbg !8750
  %33 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8751
  %c_iflag32 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %33, i32 0, i32 0, !dbg !8752
  %34 = load i32, i32* %c_iflag32, align 4, !dbg !8752
  %xor33 = xor i32 %32, %34, !dbg !8753
  %35 = load i32, i32* %iflag_mask, align 4, !dbg !8754
  %and34 = and i32 %xor33, %35, !dbg !8755
  %cmp35 = icmp eq i32 %and34, 0, !dbg !8756
  br i1 %cmp35, label %land.lhs.true37, label %if.end40, !dbg !8757

land.lhs.true37:                                  ; preds = %land.lhs.true30
  %36 = load i8, i8* %sw_changed, align 1, !dbg !8758
  %tobool38 = trunc i8 %36 to i1, !dbg !8758
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !8759

if.then39:                                        ; preds = %land.lhs.true37
  br label %out, !dbg !8760

if.end40:                                         ; preds = %land.lhs.true37, %land.lhs.true30, %land.lhs.true25, %land.lhs.true, %if.end17
  %37 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8762
  %38 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8763
  %39 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8764
  call void @uart_change_speed(%struct.tty_struct* %37, %struct.uart_state* %38, %struct.ktermios* %39) #10, !dbg !8765
  %40 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8766
  %termios41 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %40, i32 0, i32 15, !dbg !8767
  %c_cflag42 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios41, i32 0, i32 2, !dbg !8768
  %41 = load i32, i32* %c_cflag42, align 8, !dbg !8768
  store i32 %41, i32* %cflag, align 4, !dbg !8769
  %42 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8770
  %c_cflag43 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %42, i32 0, i32 2, !dbg !8772
  %43 = load i32, i32* %c_cflag43, align 4, !dbg !8772
  %and44 = and i32 %43, 4111, !dbg !8773
  %tobool45 = icmp ne i32 %and44, 0, !dbg !8773
  br i1 %tobool45, label %land.lhs.true46, label %if.else, !dbg !8774

land.lhs.true46:                                  ; preds = %if.end40
  %44 = load i32, i32* %cflag, align 4, !dbg !8775
  %and47 = and i32 %44, 4111, !dbg !8776
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8776
  br i1 %tobool48, label %if.else, label %if.then49, !dbg !8777

if.then49:                                        ; preds = %land.lhs.true46
  %45 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8778
  call void @uart_update_mctrl(%struct.uart_port* %45, i32 0, i32 6) #10, !dbg !8778
  br label %if.end64, !dbg !8778

if.else:                                          ; preds = %land.lhs.true46, %if.end40
  %46 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !8779
  %c_cflag50 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %46, i32 0, i32 2, !dbg !8781
  %47 = load i32, i32* %c_cflag50, align 4, !dbg !8781
  %and51 = and i32 %47, 4111, !dbg !8782
  %tobool52 = icmp ne i32 %and51, 0, !dbg !8782
  br i1 %tobool52, label %if.end63, label %land.lhs.true53, !dbg !8783

land.lhs.true53:                                  ; preds = %if.else
  %48 = load i32, i32* %cflag, align 4, !dbg !8784
  %and54 = and i32 %48, 4111, !dbg !8785
  %tobool55 = icmp ne i32 %and54, 0, !dbg !8785
  br i1 %tobool55, label %if.then56, label %if.end63, !dbg !8786

if.then56:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8787, metadata !DIExpression()), !dbg !8789
  store i32 2, i32* %mask, align 4, !dbg !8789
  %49 = load i32, i32* %cflag, align 4, !dbg !8790
  %and57 = and i32 %49, -2147483648, !dbg !8792
  %tobool58 = icmp ne i32 %and57, 0, !dbg !8792
  br i1 %tobool58, label %lor.lhs.false, label %if.then60, !dbg !8793

lor.lhs.false:                                    ; preds = %if.then56
  %50 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8794
  %call59 = call zeroext i1 @tty_throttled(%struct.tty_struct* %50) #10, !dbg !8795
  br i1 %call59, label %if.end62, label %if.then60, !dbg !8796

if.then60:                                        ; preds = %lor.lhs.false, %if.then56
  %51 = load i32, i32* %mask, align 4, !dbg !8797
  %or61 = or i32 %51, 4, !dbg !8797
  store i32 %or61, i32* %mask, align 4, !dbg !8797
  br label %if.end62, !dbg !8798

if.end62:                                         ; preds = %if.then60, %lor.lhs.false
  %52 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !8799
  %53 = load i32, i32* %mask, align 4, !dbg !8799
  call void @uart_update_mctrl(%struct.uart_port* %52, i32 %53, i32 0) #10, !dbg !8799
  br label %if.end63, !dbg !8800

if.end63:                                         ; preds = %if.end62, %land.lhs.true53, %if.else
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then49
  br label %out, !dbg !8801

out:                                              ; preds = %if.end64, %if.then39, %if.then
  call void @llvm.dbg.label(metadata !8802), !dbg !8803
  %54 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8804
  %port65 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %54, i32 0, i32 0, !dbg !8805
  %mutex66 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port65, i32 0, i32 13, !dbg !8806
  call void @mutex_unlock(%struct.mutex* %mutex66) #10, !dbg !8807
  ret void, !dbg !8808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_throttle(%struct.tty_struct* %tty) #0 !dbg !8809 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %mask = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8810, metadata !DIExpression()), !dbg !8811
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8812, metadata !DIExpression()), !dbg !8813
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8814
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8815
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8815
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8814
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8813
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8816, metadata !DIExpression()), !dbg !8817
  store i32 32, i32* %mask, align 4, !dbg !8817
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8818, metadata !DIExpression()), !dbg !8819
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8820
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !8821
  store %struct.uart_port* %call, %struct.uart_port** %port, align 8, !dbg !8822
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8823
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !8823
  br i1 %tobool, label %if.end, label %if.then, !dbg !8825

if.then:                                          ; preds = %entry
  br label %return, !dbg !8826

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8827
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 15, !dbg !8827
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !8827
  %6 = load i32, i32* %c_iflag, align 8, !dbg !8827
  %and = and i32 %6, 4096, !dbg !8827
  %tobool1 = icmp ne i32 %and, 0, !dbg !8827
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8829

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %mask, align 4, !dbg !8830
  %or = or i32 %7, 16, !dbg !8830
  store i32 %or, i32* %mask, align 4, !dbg !8830
  br label %if.end3, !dbg !8831

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8832
  %termios4 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 15, !dbg !8832
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios4, i32 0, i32 2, !dbg !8832
  %9 = load i32, i32* %c_cflag, align 8, !dbg !8832
  %and5 = and i32 %9, -2147483648, !dbg !8832
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8832
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8834

if.then7:                                         ; preds = %if.end3
  %10 = load i32, i32* %mask, align 4, !dbg !8835
  %or8 = or i32 %10, 4, !dbg !8835
  store i32 %or8, i32* %mask, align 4, !dbg !8835
  br label %if.end9, !dbg !8836

if.end9:                                          ; preds = %if.then7, %if.end3
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8837
  %status = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 34, !dbg !8839
  %12 = load i32, i32* %status, align 4, !dbg !8839
  %13 = load i32, i32* %mask, align 4, !dbg !8840
  %and10 = and i32 %12, %13, !dbg !8841
  %tobool11 = icmp ne i32 %and10, 0, !dbg !8841
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !8842

if.then12:                                        ; preds = %if.end9
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8843
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 39, !dbg !8845
  %15 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !8845
  %throttle = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %15, i32 0, i32 5, !dbg !8846
  %throttle13 = bitcast {}** %throttle to void (%struct.uart_port*)**, !dbg !8846
  %16 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %throttle13, align 8, !dbg !8846
  %17 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8847
  call void %16(%struct.uart_port* %17) #10, !dbg !8843
  %18 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8848
  %status14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 34, !dbg !8849
  %19 = load i32, i32* %status14, align 4, !dbg !8849
  %neg = xor i32 %19, -1, !dbg !8850
  %20 = load i32, i32* %mask, align 4, !dbg !8851
  %and15 = and i32 %20, %neg, !dbg !8851
  store i32 %and15, i32* %mask, align 4, !dbg !8851
  br label %if.end16, !dbg !8852

if.end16:                                         ; preds = %if.then12, %if.end9
  %21 = load i32, i32* %mask, align 4, !dbg !8853
  %and17 = and i32 %21, 4, !dbg !8855
  %tobool18 = icmp ne i32 %and17, 0, !dbg !8855
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8856

if.then19:                                        ; preds = %if.end16
  %22 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8857
  call void @uart_update_mctrl(%struct.uart_port* %22, i32 0, i32 4) #10, !dbg !8857
  br label %if.end20, !dbg !8857

if.end20:                                         ; preds = %if.then19, %if.end16
  %23 = load i32, i32* %mask, align 4, !dbg !8858
  %and21 = and i32 %23, 16, !dbg !8860
  %tobool22 = icmp ne i32 %and21, 0, !dbg !8860
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8861

if.then23:                                        ; preds = %if.end20
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8862
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8863
  %termios24 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 15, !dbg !8863
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios24, i32 0, i32 5, !dbg !8863
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !8863
  %26 = load i8, i8* %arrayidx, align 1, !dbg !8863
  call void @uart_send_xchar(%struct.tty_struct* %24, i8 signext %26) #10, !dbg !8864
  br label %if.end25, !dbg !8864

if.end25:                                         ; preds = %if.then23, %if.end20
  %27 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8865
  call void @uart_port_deref(%struct.uart_port* %27) #10, !dbg !8866
  br label %return, !dbg !8867

return:                                           ; preds = %if.end25, %if.then
  ret void, !dbg !8867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_unthrottle(%struct.tty_struct* %tty) #0 !dbg !8868 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %mask = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8869, metadata !DIExpression()), !dbg !8870
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8871, metadata !DIExpression()), !dbg !8872
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8873
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8874
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8874
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8873
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8872
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8875, metadata !DIExpression()), !dbg !8876
  store i32 32, i32* %mask, align 4, !dbg !8876
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8877, metadata !DIExpression()), !dbg !8878
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8879
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !8880
  store %struct.uart_port* %call, %struct.uart_port** %port, align 8, !dbg !8881
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8882
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !8882
  br i1 %tobool, label %if.end, label %if.then, !dbg !8884

if.then:                                          ; preds = %entry
  br label %return, !dbg !8885

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8886
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 15, !dbg !8886
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !8886
  %6 = load i32, i32* %c_iflag, align 8, !dbg !8886
  %and = and i32 %6, 4096, !dbg !8886
  %tobool1 = icmp ne i32 %and, 0, !dbg !8886
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8888

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %mask, align 4, !dbg !8889
  %or = or i32 %7, 16, !dbg !8889
  store i32 %or, i32* %mask, align 4, !dbg !8889
  br label %if.end3, !dbg !8890

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8891
  %termios4 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 15, !dbg !8891
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios4, i32 0, i32 2, !dbg !8891
  %9 = load i32, i32* %c_cflag, align 8, !dbg !8891
  %and5 = and i32 %9, -2147483648, !dbg !8891
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8891
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8893

if.then7:                                         ; preds = %if.end3
  %10 = load i32, i32* %mask, align 4, !dbg !8894
  %or8 = or i32 %10, 4, !dbg !8894
  store i32 %or8, i32* %mask, align 4, !dbg !8894
  br label %if.end9, !dbg !8895

if.end9:                                          ; preds = %if.then7, %if.end3
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8896
  %status = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 34, !dbg !8898
  %12 = load i32, i32* %status, align 4, !dbg !8898
  %13 = load i32, i32* %mask, align 4, !dbg !8899
  %and10 = and i32 %12, %13, !dbg !8900
  %tobool11 = icmp ne i32 %and10, 0, !dbg !8900
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !8901

if.then12:                                        ; preds = %if.end9
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8902
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 39, !dbg !8904
  %15 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !8904
  %unthrottle = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %15, i32 0, i32 6, !dbg !8905
  %unthrottle13 = bitcast {}** %unthrottle to void (%struct.uart_port*)**, !dbg !8905
  %16 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %unthrottle13, align 8, !dbg !8905
  %17 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8906
  call void %16(%struct.uart_port* %17) #10, !dbg !8902
  %18 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8907
  %status14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 34, !dbg !8908
  %19 = load i32, i32* %status14, align 4, !dbg !8908
  %neg = xor i32 %19, -1, !dbg !8909
  %20 = load i32, i32* %mask, align 4, !dbg !8910
  %and15 = and i32 %20, %neg, !dbg !8910
  store i32 %and15, i32* %mask, align 4, !dbg !8910
  br label %if.end16, !dbg !8911

if.end16:                                         ; preds = %if.then12, %if.end9
  %21 = load i32, i32* %mask, align 4, !dbg !8912
  %and17 = and i32 %21, 4, !dbg !8914
  %tobool18 = icmp ne i32 %and17, 0, !dbg !8914
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !8915

if.then19:                                        ; preds = %if.end16
  %22 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8916
  call void @uart_update_mctrl(%struct.uart_port* %22, i32 4, i32 0) #10, !dbg !8916
  br label %if.end20, !dbg !8916

if.end20:                                         ; preds = %if.then19, %if.end16
  %23 = load i32, i32* %mask, align 4, !dbg !8917
  %and21 = and i32 %23, 16, !dbg !8919
  %tobool22 = icmp ne i32 %and21, 0, !dbg !8919
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8920

if.then23:                                        ; preds = %if.end20
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8921
  %25 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8922
  %termios24 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %25, i32 0, i32 15, !dbg !8922
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios24, i32 0, i32 5, !dbg !8922
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !8922
  %26 = load i8, i8* %arrayidx, align 1, !dbg !8922
  call void @uart_send_xchar(%struct.tty_struct* %24, i8 signext %26) #10, !dbg !8923
  br label %if.end25, !dbg !8923

if.end25:                                         ; preds = %if.then23, %if.end20
  %27 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8924
  call void @uart_port_deref(%struct.uart_port* %27) #10, !dbg !8925
  br label %return, !dbg !8926

return:                                           ; preds = %if.end25, %if.then
  ret void, !dbg !8926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_stop(%struct.tty_struct* %tty) #0 !dbg !8927 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5559, metadata !DIExpression()), !dbg !8928
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !8933
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !8934
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca %struct.uart_port*, align 8
  %__uport25 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8943, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !8945, metadata !DIExpression()), !dbg !8946
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8947
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8948
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8948
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !8947
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !8946
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8951, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !8953, metadata !DIExpression()), !dbg !8954
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !8954
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !8954
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !8954
  %4 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8955
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !8955
  br i1 %tobool, label %if.then, label %if.end, !dbg !8954

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8955

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !8956

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8957, metadata !DIExpression()), !dbg !8959
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8960, metadata !DIExpression()), !dbg !8959
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8959
  %conv = zext i1 %cmp to i32, !dbg !8959
  store i32 1, i32* %tmp, align 4, !dbg !8959
  %5 = load i32, i32* %tmp, align 4, !dbg !8959
  br label %do.body2, !dbg !8961

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8962

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8963

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8965, metadata !DIExpression()), !dbg !8968
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8969, metadata !DIExpression()), !dbg !8968
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8968
  %conv8 = zext i1 %cmp7 to i32, !dbg !8968
  store i32 1, i32* %tmp9, align 4, !dbg !8968
  %6 = load i32, i32* %tmp9, align 4, !dbg !8968
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !8970
  store i64 %call10, i64* %flags, align 8, !dbg !8970
  br label %do.end, !dbg !8970

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8963

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8962

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8971, !srcloc !8972
  br label %do.body13, !dbg !8971

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8973
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 0, !dbg !8973
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8974
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8975
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !8975
  br label %do.end15, !dbg !8973

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8971

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8962

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8961

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8956

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8956

if.end:                                           ; preds = %do.end19, %entry
  %10 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !8954
  store %struct.uart_port* %10, %struct.uart_port** %tmp20, align 8, !dbg !8955
  %11 = load %struct.uart_port*, %struct.uart_port** %tmp20, align 8, !dbg !8954
  store %struct.uart_port* %11, %struct.uart_port** %port, align 8, !dbg !8976
  %12 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8977
  %tobool21 = icmp ne %struct.uart_port* %12, null, !dbg !8977
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !8979

if.then22:                                        ; preds = %if.end
  %13 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8980
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 39, !dbg !8981
  %14 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !8981
  %stop_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %14, i32 0, i32 3, !dbg !8982
  %stop_tx23 = bitcast {}** %stop_tx to void (%struct.uart_port*)**, !dbg !8982
  %15 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_tx23, align 8, !dbg !8982
  %16 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8983
  call void %15(%struct.uart_port* %16) #10, !dbg !8980
  br label %if.end24, !dbg !8980

if.end24:                                         ; preds = %if.then22, %if.end
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport25, metadata !8984, metadata !DIExpression()), !dbg !8985
  %17 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8985
  store %struct.uart_port* %17, %struct.uart_port** %__uport25, align 8, !dbg !8985
  %18 = load %struct.uart_port*, %struct.uart_port** %__uport25, align 8, !dbg !8986
  %tobool26 = icmp ne %struct.uart_port* %18, null, !dbg !8986
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !8985

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.uart_port*, %struct.uart_port** %__uport25, align 8, !dbg !8987
  %lock28 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 0, !dbg !8987
  %20 = load i64, i64* %flags, align 8, !dbg !8987
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !8988
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !8988
  store i32 1, i32* %tmp.i, align 4, !dbg !8988
  %21 = load i32, i32* %tmp.i, align 4, !dbg !8988
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !8989
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !8989
  store i32 1, i32* %tmp8.i, align 4, !dbg !8989
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !8989
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !8990
  call void @arch_local_irq_restore(i64 %23) #11, !dbg !8990
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8991, !srcloc !5691
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !8992
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8992
  %rlock.i31 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !8992
  %26 = load %struct.uart_port*, %struct.uart_port** %__uport25, align 8, !dbg !8987
  call void @uart_port_deref(%struct.uart_port* %26) #10, !dbg !8987
  br label %if.end29, !dbg !8987

if.end29:                                         ; preds = %if.then27, %if.end24
  ret void, !dbg !8993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_start(%struct.tty_struct* %tty) #0 !dbg !8994 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5559, metadata !DIExpression()), !dbg !8995
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !9000
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !9001
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca %struct.uart_port*, align 8
  %__uport21 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9014
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9015
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9015
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9014
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9013
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9016, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9018, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !9020, metadata !DIExpression()), !dbg !9021
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9021
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !9021
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !9021
  %4 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9022
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !9022
  br i1 %tobool, label %if.then, label %if.end, !dbg !9021

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9022

do.body:                                          ; preds = %if.then
  br label %do.body1, !dbg !9023

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9027, metadata !DIExpression()), !dbg !9026
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9026
  %conv = zext i1 %cmp to i32, !dbg !9026
  store i32 1, i32* %tmp, align 4, !dbg !9026
  %5 = load i32, i32* %tmp, align 4, !dbg !9026
  br label %do.body2, !dbg !9028

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9029

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9030

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9032, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9036, metadata !DIExpression()), !dbg !9035
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9035
  %conv8 = zext i1 %cmp7 to i32, !dbg !9035
  store i32 1, i32* %tmp9, align 4, !dbg !9035
  %6 = load i32, i32* %tmp9, align 4, !dbg !9035
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !9037
  store i64 %call10, i64* %flags, align 8, !dbg !9037
  br label %do.end, !dbg !9037

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9030

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9029

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9038, !srcloc !9039
  br label %do.body13, !dbg !9038

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9040
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 0, !dbg !9040
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9041
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9042
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !9042
  br label %do.end15, !dbg !9040

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9038

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9029

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9028

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9023

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !9023

if.end:                                           ; preds = %do.end19, %entry
  %10 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9021
  store %struct.uart_port* %10, %struct.uart_port** %tmp20, align 8, !dbg !9022
  %11 = load %struct.uart_port*, %struct.uart_port** %tmp20, align 8, !dbg !9021
  store %struct.uart_port* %11, %struct.uart_port** %port, align 8, !dbg !9043
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9044
  call void @__uart_start(%struct.tty_struct* %12) #10, !dbg !9045
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport21, metadata !9046, metadata !DIExpression()), !dbg !9047
  %13 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9047
  store %struct.uart_port* %13, %struct.uart_port** %__uport21, align 8, !dbg !9047
  %14 = load %struct.uart_port*, %struct.uart_port** %__uport21, align 8, !dbg !9048
  %tobool22 = icmp ne %struct.uart_port* %14, null, !dbg !9048
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !9047

if.then23:                                        ; preds = %if.end
  %15 = load %struct.uart_port*, %struct.uart_port** %__uport21, align 8, !dbg !9049
  %lock24 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 0, !dbg !9049
  %16 = load i64, i64* %flags, align 8, !dbg !9049
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !9050
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !9050
  store i32 1, i32* %tmp.i, align 4, !dbg !9050
  %17 = load i32, i32* %tmp.i, align 4, !dbg !9050
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !9051
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !9051
  store i32 1, i32* %tmp8.i, align 4, !dbg !9051
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !9051
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !9052
  call void @arch_local_irq_restore(i64 %19) #11, !dbg !9052
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9053, !srcloc !5691
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !9054
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9054
  %rlock.i27 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !9054
  %22 = load %struct.uart_port*, %struct.uart_port** %__uport21, align 8, !dbg !9049
  call void @uart_port_deref(%struct.uart_port* %22) #10, !dbg !9049
  br label %if.end25, !dbg !9049

if.end25:                                         ; preds = %if.then23, %if.end
  ret void, !dbg !9055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_hangup(%struct.tty_struct* %tty) #0 !dbg !9056 {
entry:
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !5559, metadata !DIExpression()), !dbg !9057
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !9061
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !9062
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp22 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  %__dummy38 = alloca i64, align 8
  %__dummy239 = alloca i64, align 8
  %tmp42 = alloca i32, align 4
  %tmp56 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9069, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9071, metadata !DIExpression()), !dbg !9072
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9073
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9074
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9074
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9073
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9072
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9075, metadata !DIExpression()), !dbg !9076
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9077
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9078
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9076
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9079, metadata !DIExpression()), !dbg !9080
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9081, metadata !DIExpression()), !dbg !9082
  store i32 0, i32* %tmp, align 4, !dbg !9083
  %4 = load i32, i32* %tmp, align 4, !dbg !9086
  %5 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9087
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %5, i32 0, i32 13, !dbg !9088
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9089
  %6 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9090
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %6) #10, !dbg !9091
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9093, metadata !DIExpression()), !dbg !9095
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9095
  %tobool = icmp ne %struct.uart_port* %7, null, !dbg !9095
  %lnot = xor i1 %tobool, true, !dbg !9095
  %lnot2 = xor i1 %lnot, true, !dbg !9095
  %lnot3 = xor i1 %lnot2, true, !dbg !9095
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9095
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9095
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !9096
  %tobool4 = icmp ne i32 %8, 0, !dbg !9096
  %lnot5 = xor i1 %tobool4, true, !dbg !9096
  %lnot7 = xor i1 %lnot5, true, !dbg !9096
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9096
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9096
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9096
  br i1 %tobool9, label %if.then, label %if.end, !dbg !9095

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9096

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !9098

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !9100

do.end:                                           ; preds = %do.body10
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !9098
  br label %do.body11, !dbg !9098

do.body11:                                        ; preds = %do.end
  br label %do.body12, !dbg !9102

do.body12:                                        ; preds = %do.body11
  br label %do.end13, !dbg !9104

do.end13:                                         ; preds = %do.body12
  br label %do.body14, !dbg !9102

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 1669, i32 2313, i64 12) #7, !dbg !9106, !srcloc !9108
  br label %do.end15, !dbg !9106

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 239) #7, !dbg !9109, !srcloc !9111
  br label %do.body16, !dbg !9102

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !9112

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !9102

do.end18:                                         ; preds = %do.end17
  br label %do.body19, !dbg !9098

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !9114

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !9098

do.end21:                                         ; preds = %do.end20
  br label %if.end, !dbg !9098

if.end:                                           ; preds = %do.end21, %entry
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !9095
  %tobool23 = icmp ne i32 %9, 0, !dbg !9095
  %lnot24 = xor i1 %tobool23, true, !dbg !9095
  %lnot26 = xor i1 %lnot24, true, !dbg !9095
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !9095
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !9095
  store i64 %conv28, i64* %tmp22, align 8, !dbg !9096
  %10 = load i64, i64* %tmp22, align 8, !dbg !9095
  %11 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9116
  %call29 = call zeroext i1 @tty_port_active(%struct.tty_port* %11) #10, !dbg !9117
  br i1 %call29, label %if.then30, label %if.end60, !dbg !9118

if.then30:                                        ; preds = %if.end
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9119
  call void @uart_flush_buffer(%struct.tty_struct* %12) #10, !dbg !9120
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9121
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9122
  call void @uart_shutdown(%struct.tty_struct* %13, %struct.uart_state* %14) #10, !dbg !9123
  br label %do.body31, !dbg !9124

do.body31:                                        ; preds = %if.then30
  br label %do.body32, !dbg !9125

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9126, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9129, metadata !DIExpression()), !dbg !9128
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9128
  %conv33 = zext i1 %cmp to i32, !dbg !9128
  store i32 1, i32* %tmp34, align 4, !dbg !9128
  %15 = load i32, i32* %tmp34, align 4, !dbg !9128
  br label %do.body35, !dbg !9130

do.body35:                                        ; preds = %do.body32
  br label %do.body36, !dbg !9131

do.body36:                                        ; preds = %do.body35
  br label %do.body37, !dbg !9132

do.body37:                                        ; preds = %do.body36
  call void @llvm.dbg.declare(metadata i64* %__dummy38, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata i64* %__dummy239, metadata !9138, metadata !DIExpression()), !dbg !9137
  %cmp40 = icmp eq i64* %__dummy38, %__dummy239, !dbg !9137
  %conv41 = zext i1 %cmp40 to i32, !dbg !9137
  store i32 1, i32* %tmp42, align 4, !dbg !9137
  %16 = load i32, i32* %tmp42, align 4, !dbg !9137
  %call43 = call i64 @arch_local_irq_save() #10, !dbg !9139
  store i64 %call43, i64* %flags, align 8, !dbg !9139
  br label %do.end44, !dbg !9139

do.end44:                                         ; preds = %do.body37
  br label %do.end45, !dbg !9132

do.end45:                                         ; preds = %do.end44
  br label %do.body46, !dbg !9131

do.body46:                                        ; preds = %do.end45
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9140, !srcloc !9141
  br label %do.body47, !dbg !9140

do.body47:                                        ; preds = %do.body46
  %17 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9142
  %lock = getelementptr inbounds %struct.tty_port, %struct.tty_port* %17, i32 0, i32 5, !dbg !9142
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9143
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9144
  %rlock.i = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !9144
  br label %do.end49, !dbg !9142

do.end49:                                         ; preds = %do.body47
  br label %do.end50, !dbg !9140

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !9131

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !9130

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !9125

do.end53:                                         ; preds = %do.end52
  %20 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9145
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %20, i32 0, i32 7, !dbg !9146
  store i32 0, i32* %count, align 4, !dbg !9147
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9148
  %lock54 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %21, i32 0, i32 5, !dbg !9149
  %22 = load i64, i64* %flags, align 8, !dbg !9150
  store %struct.spinlock* %lock54, %struct.spinlock** %lock.addr.i62, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !9151
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !9151
  store i32 1, i32* %tmp.i, align 4, !dbg !9151
  %23 = load i32, i32* %tmp.i, align 4, !dbg !9151
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !9152
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !9152
  store i32 1, i32* %tmp8.i, align 4, !dbg !9152
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !9152
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !9153
  call void @arch_local_irq_restore(i64 %25) #11, !dbg !9153
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9154, !srcloc !5691
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !9155
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !9155
  %rlock.i63 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !9155
  %28 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9156
  call void @tty_port_set_active(%struct.tty_port* %28, i1 zeroext false) #10, !dbg !9157
  %29 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9158
  call void @tty_port_tty_set(%struct.tty_port* %29, %struct.tty_struct* null) #10, !dbg !9159
  %30 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9160
  %tobool55 = icmp ne %struct.uart_port* %30, null, !dbg !9160
  br i1 %tobool55, label %land.lhs.true, label %if.end59, !dbg !9162

land.lhs.true:                                    ; preds = %do.end53
  %31 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9163
  store i32 0, i32* %tmp56, align 4, !dbg !9163
  %32 = load i32, i32* %tmp56, align 4, !dbg !9163
  %tobool57 = icmp ne i32 %32, 0, !dbg !9165
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !9166

if.then58:                                        ; preds = %land.lhs.true
  %33 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9167
  call void @uart_change_pm(%struct.uart_state* %33, i32 3) #10, !dbg !9168
  br label %if.end59, !dbg !9168

if.end59:                                         ; preds = %if.then58, %land.lhs.true, %do.end53
  %34 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9169
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %34, i32 0, i32 8, !dbg !9169
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #10, !dbg !9169
  %35 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9170
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %35, i32 0, i32 9, !dbg !9170
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #10, !dbg !9170
  br label %if.end60, !dbg !9171

if.end60:                                         ; preds = %if.end59, %if.end
  %36 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9172
  %mutex61 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %36, i32 0, i32 13, !dbg !9173
  call void @mutex_unlock(%struct.mutex* %mutex61) #10, !dbg !9174
  ret void, !dbg !9175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_break_ctl(%struct.tty_struct* %tty, i32 %break_state) #0 !dbg !9176 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %break_state.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9177, metadata !DIExpression()), !dbg !9178
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !9179, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9181, metadata !DIExpression()), !dbg !9182
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9183
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9184
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9184
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9183
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9182
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9185, metadata !DIExpression()), !dbg !9186
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9187
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9188
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9186
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9189, metadata !DIExpression()), !dbg !9190
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9191, metadata !DIExpression()), !dbg !9192
  store i32 -5, i32* %ret, align 4, !dbg !9192
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9193
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %4, i32 0, i32 13, !dbg !9194
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9195
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9196
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !9197
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9198
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9199
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !9199
  br i1 %tobool, label %if.end, label %if.then, !dbg !9201

if.then:                                          ; preds = %entry
  br label %out, !dbg !9202

if.end:                                           ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9203
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 38, !dbg !9205
  %8 = load i32, i32* %type, align 4, !dbg !9205
  %cmp = icmp ne i32 %8, 0, !dbg !9206
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !9207

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9208
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 39, !dbg !9209
  %10 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9209
  %break_ctl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %10, i32 0, i32 10, !dbg !9210
  %11 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %break_ctl, align 8, !dbg !9210
  %tobool2 = icmp ne void (%struct.uart_port*, i32)* %11, null, !dbg !9208
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !9211

if.then3:                                         ; preds = %land.lhs.true
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9212
  %ops4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 39, !dbg !9213
  %13 = load %struct.uart_ops*, %struct.uart_ops** %ops4, align 8, !dbg !9213
  %break_ctl5 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %13, i32 0, i32 10, !dbg !9214
  %14 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %break_ctl5, align 8, !dbg !9214
  %15 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9215
  %16 = load i32, i32* %break_state.addr, align 4, !dbg !9216
  call void %14(%struct.uart_port* %15, i32 %16) #10, !dbg !9212
  br label %if.end6, !dbg !9212

if.end6:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  store i32 0, i32* %ret, align 4, !dbg !9217
  br label %out, !dbg !9218

out:                                              ; preds = %if.end6, %if.then
  call void @llvm.dbg.label(metadata !9219), !dbg !9220
  %17 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9221
  %mutex7 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %17, i32 0, i32 13, !dbg !9222
  call void @mutex_unlock(%struct.mutex* %mutex7) #10, !dbg !9223
  %18 = load i32, i32* %ret, align 4, !dbg !9224
  ret i32 %18, !dbg !9225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_flush_buffer(%struct.tty_struct* %tty) #0 !dbg !9226 {
entry:
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !5559, metadata !DIExpression()), !dbg !9227
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !9232
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !9233
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %tmp45 = alloca %struct.uart_port*, align 8
  %__uport57 = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9244, metadata !DIExpression()), !dbg !9245
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9246
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9247
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9247
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9246
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9245
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9248, metadata !DIExpression()), !dbg !9249
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9250, metadata !DIExpression()), !dbg !9251
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9252
  %tobool = icmp ne %struct.uart_state* %3, null, !dbg !9252
  br i1 %tobool, label %if.end17, label %if.then, !dbg !9254

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9255, metadata !DIExpression()), !dbg !9258
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9258
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9259
  %tobool1 = icmp ne i32 %4, 0, !dbg !9259
  %lnot = xor i1 %tobool1, true, !dbg !9259
  %lnot2 = xor i1 %lnot, true, !dbg !9259
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9259
  %conv = sext i32 %lnot.ext to i64, !dbg !9259
  %tobool3 = icmp ne i64 %conv, 0, !dbg !9259
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9258

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !9259

do.body:                                          ; preds = %if.then4
  br label %do.body5, !dbg !9261

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !9263

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !9261

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 656, i32 2305, i64 12) #7, !dbg !9265, !srcloc !9267
  br label %do.end7, !dbg !9265

do.end7:                                          ; preds = %do.body6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #7, !dbg !9268, !srcloc !9270
  br label %do.body8, !dbg !9261

do.body8:                                         ; preds = %do.end7
  br label %do.end9, !dbg !9271

do.end9:                                          ; preds = %do.body8
  br label %do.end10, !dbg !9261

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !9261

if.end:                                           ; preds = %do.end10, %if.then
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !9258
  %tobool11 = icmp ne i32 %5, 0, !dbg !9258
  %lnot12 = xor i1 %tobool11, true, !dbg !9258
  %lnot14 = xor i1 %lnot12, true, !dbg !9258
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !9258
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !9258
  store i64 %conv16, i64* %tmp, align 8, !dbg !9259
  %6 = load i64, i64* %tmp, align 8, !dbg !9258
  br label %return, !dbg !9273

if.end17:                                         ; preds = %entry
  store i32 0, i32* %tmp18, align 4, !dbg !9274
  %7 = load i32, i32* %tmp18, align 4, !dbg !9277
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !9278, metadata !DIExpression()), !dbg !9279
  %8 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9279
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %8) #10, !dbg !9279
  store %struct.uart_port* %call, %struct.uart_port** %__uport, align 8, !dbg !9279
  %9 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9280
  %tobool19 = icmp ne %struct.uart_port* %9, null, !dbg !9280
  br i1 %tobool19, label %if.then20, label %if.end44, !dbg !9279

if.then20:                                        ; preds = %if.end17
  br label %do.body21, !dbg !9280

do.body21:                                        ; preds = %if.then20
  br label %do.body22, !dbg !9281

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9282, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9285, metadata !DIExpression()), !dbg !9284
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9284
  %conv23 = zext i1 %cmp to i32, !dbg !9284
  store i32 1, i32* %tmp24, align 4, !dbg !9284
  %10 = load i32, i32* %tmp24, align 4, !dbg !9284
  br label %do.body25, !dbg !9286

do.body25:                                        ; preds = %do.body22
  br label %do.body26, !dbg !9287

do.body26:                                        ; preds = %do.body25
  br label %do.body27, !dbg !9288

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9290, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !9294, metadata !DIExpression()), !dbg !9293
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !9293
  %conv31 = zext i1 %cmp30 to i32, !dbg !9293
  store i32 1, i32* %tmp32, align 4, !dbg !9293
  %11 = load i32, i32* %tmp32, align 4, !dbg !9293
  %call33 = call i64 @arch_local_irq_save() #10, !dbg !9295
  store i64 %call33, i64* %flags, align 8, !dbg !9295
  br label %do.end34, !dbg !9295

do.end34:                                         ; preds = %do.body27
  br label %do.end35, !dbg !9288

do.end35:                                         ; preds = %do.end34
  br label %do.body36, !dbg !9287

do.body36:                                        ; preds = %do.end35
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9296, !srcloc !9297
  br label %do.body37, !dbg !9296

do.body37:                                        ; preds = %do.body36
  %12 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9298
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 0, !dbg !9298
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9299
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !9300
  %rlock.i = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !9300
  br label %do.end39, !dbg !9298

do.end39:                                         ; preds = %do.body37
  br label %do.end40, !dbg !9296

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !9287

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !9286

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !9281

do.end43:                                         ; preds = %do.end42
  br label %if.end44, !dbg !9281

if.end44:                                         ; preds = %do.end43, %if.end17
  %15 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !9279
  store %struct.uart_port* %15, %struct.uart_port** %tmp45, align 8, !dbg !9280
  %16 = load %struct.uart_port*, %struct.uart_port** %tmp45, align 8, !dbg !9279
  store %struct.uart_port* %16, %struct.uart_port** %port, align 8, !dbg !9301
  %17 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9302
  %tobool46 = icmp ne %struct.uart_port* %17, null, !dbg !9302
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !9304

if.then47:                                        ; preds = %if.end44
  br label %return, !dbg !9305

if.end48:                                         ; preds = %if.end44
  %18 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9306
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %18, i32 0, i32 2, !dbg !9306
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 2, !dbg !9306
  store i32 0, i32* %tail, align 4, !dbg !9306
  %19 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9306
  %xmit49 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %19, i32 0, i32 2, !dbg !9306
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit49, i32 0, i32 1, !dbg !9306
  store i32 0, i32* %head, align 8, !dbg !9306
  %20 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9307
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 39, !dbg !9309
  %21 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9309
  %flush_buffer = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %21, i32 0, i32 13, !dbg !9310
  %flush_buffer50 = bitcast {}** %flush_buffer to void (%struct.uart_port*)**, !dbg !9310
  %22 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %flush_buffer50, align 8, !dbg !9310
  %tobool51 = icmp ne void (%struct.uart_port*)* %22, null, !dbg !9307
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !9311

if.then52:                                        ; preds = %if.end48
  %23 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9312
  %ops53 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 39, !dbg !9313
  %24 = load %struct.uart_ops*, %struct.uart_ops** %ops53, align 8, !dbg !9313
  %flush_buffer54 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %24, i32 0, i32 13, !dbg !9314
  %flush_buffer55 = bitcast {}** %flush_buffer54 to void (%struct.uart_port*)**, !dbg !9314
  %25 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %flush_buffer55, align 8, !dbg !9314
  %26 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9315
  call void %25(%struct.uart_port* %26) #10, !dbg !9312
  br label %if.end56, !dbg !9312

if.end56:                                         ; preds = %if.then52, %if.end48
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport57, metadata !9316, metadata !DIExpression()), !dbg !9317
  %27 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9317
  store %struct.uart_port* %27, %struct.uart_port** %__uport57, align 8, !dbg !9317
  %28 = load %struct.uart_port*, %struct.uart_port** %__uport57, align 8, !dbg !9318
  %tobool58 = icmp ne %struct.uart_port* %28, null, !dbg !9318
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !9317

if.then59:                                        ; preds = %if.end56
  %29 = load %struct.uart_port*, %struct.uart_port** %__uport57, align 8, !dbg !9319
  %lock60 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 0, !dbg !9319
  %30 = load i64, i64* %flags, align 8, !dbg !9319
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !9320
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !9320
  store i32 1, i32* %tmp.i, align 4, !dbg !9320
  %31 = load i32, i32* %tmp.i, align 4, !dbg !9320
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !9321
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !9321
  store i32 1, i32* %tmp8.i, align 4, !dbg !9321
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !9321
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !9322
  call void @arch_local_irq_restore(i64 %33) #11, !dbg !9322
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9323, !srcloc !5691
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !9324
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9324
  %rlock.i64 = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !9324
  %36 = load %struct.uart_port*, %struct.uart_port** %__uport57, align 8, !dbg !9319
  call void @uart_port_deref(%struct.uart_port* %36) #10, !dbg !9319
  br label %if.end61, !dbg !9319

if.end61:                                         ; preds = %if.then59, %if.end56
  %37 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9325
  %port62 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %37, i32 0, i32 0, !dbg !9326
  call void @tty_port_tty_wakeup(%struct.tty_port* %port62) #10, !dbg !9327
  br label %return, !dbg !9328

return:                                           ; preds = %if.end61, %if.then47, %if.end
  ret void, !dbg !9328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_set_ldisc(%struct.tty_struct* %tty) #0 !dbg !9329 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9330, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9332, metadata !DIExpression()), !dbg !9333
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9334
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9335
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9335
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9334
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9333
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9336, metadata !DIExpression()), !dbg !9337
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9338
  %port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9339
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 13, !dbg !9340
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9341
  %4 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9342
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %4) #10, !dbg !9343
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9344
  %5 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9345
  %tobool = icmp ne %struct.uart_port* %5, null, !dbg !9345
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9347

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9348
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 39, !dbg !9349
  %7 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9349
  %set_ldisc = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %7, i32 0, i32 15, !dbg !9350
  %8 = load void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)** %set_ldisc, align 8, !dbg !9350
  %tobool1 = icmp ne void (%struct.uart_port*, %struct.ktermios*)* %8, null, !dbg !9348
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9351

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9352
  %ops2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 39, !dbg !9353
  %10 = load %struct.uart_ops*, %struct.uart_ops** %ops2, align 8, !dbg !9353
  %set_ldisc3 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %10, i32 0, i32 15, !dbg !9354
  %11 = load void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)** %set_ldisc3, align 8, !dbg !9354
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9355
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9356
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %13, i32 0, i32 15, !dbg !9357
  call void %11(%struct.uart_port* %12, %struct.ktermios* %termios) #10, !dbg !9352
  br label %if.end, !dbg !9352

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9358
  %port4 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %14, i32 0, i32 0, !dbg !9359
  %mutex5 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port4, i32 0, i32 13, !dbg !9360
  call void @mutex_unlock(%struct.mutex* %mutex5) #10, !dbg !9361
  ret void, !dbg !9362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_wait_until_sent(%struct.tty_struct* %tty, i32 %timeout) #0 !dbg !9363 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9364, metadata !DIExpression()), !dbg !9370
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9374, metadata !DIExpression()), !dbg !9376
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9377, metadata !DIExpression()), !dbg !9379
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %timeout.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %char_time = alloca i64, align 8
  %expire = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !9382, metadata !DIExpression()), !dbg !9383
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9384, metadata !DIExpression()), !dbg !9385
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9386
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9387
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9387
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9386
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9385
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata i64* %char_time, metadata !9390, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata i64* %expire, metadata !9392, metadata !DIExpression()), !dbg !9393
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9394
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !9395
  store %struct.uart_port* %call, %struct.uart_port** %port, align 8, !dbg !9396
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9397
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !9397
  br i1 %tobool, label %if.end, label %if.then, !dbg !9399

if.then:                                          ; preds = %entry
  br label %return, !dbg !9400

if.end:                                           ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9401
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 38, !dbg !9403
  %6 = load i32, i32* %type, align 4, !dbg !9403
  %cmp = icmp eq i32 %6, 0, !dbg !9404
  br i1 %cmp, label %if.then2, label %lor.lhs.false, !dbg !9405

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9406
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 23, !dbg !9407
  %8 = load i32, i32* %fifosize, align 4, !dbg !9407
  %cmp1 = icmp eq i32 %8, 0, !dbg !9408
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9409

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9410
  call void @uart_port_deref(%struct.uart_port* %9) #10, !dbg !9412
  br label %return, !dbg !9413

if.end3:                                          ; preds = %lor.lhs.false
  %10 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9414
  %timeout4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 37, !dbg !9415
  %11 = load i32, i32* %timeout4, align 8, !dbg !9415
  %sub = sub i32 %11, 5, !dbg !9416
  %12 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9417
  %fifosize5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 23, !dbg !9418
  %13 = load i32, i32* %fifosize5, align 4, !dbg !9418
  %div = udiv i32 %sub, %13, !dbg !9419
  %conv = zext i32 %div to i64, !dbg !9420
  store i64 %conv, i64* %char_time, align 8, !dbg !9421
  %14 = load i64, i64* %char_time, align 8, !dbg !9422
  %div6 = udiv i64 %14, 5, !dbg !9423
  store i64 %div6, i64* %char_time, align 8, !dbg !9424
  %15 = load i64, i64* %char_time, align 8, !dbg !9425
  %cmp7 = icmp eq i64 %15, 0, !dbg !9427
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9428

if.then9:                                         ; preds = %if.end3
  store i64 1, i64* %char_time, align 8, !dbg !9429
  br label %if.end10, !dbg !9430

if.end10:                                         ; preds = %if.then9, %if.end3
  %16 = load i32, i32* %timeout.addr, align 4, !dbg !9431
  %tobool11 = icmp ne i32 %16, 0, !dbg !9431
  br i1 %tobool11, label %land.lhs.true, label %if.end17, !dbg !9433

land.lhs.true:                                    ; preds = %if.end10
  %17 = load i32, i32* %timeout.addr, align 4, !dbg !9434
  %conv12 = sext i32 %17 to i64, !dbg !9434
  %18 = load i64, i64* %char_time, align 8, !dbg !9435
  %cmp13 = icmp ult i64 %conv12, %18, !dbg !9436
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !9437

if.then15:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* %timeout.addr, align 4, !dbg !9438
  %conv16 = sext i32 %19 to i64, !dbg !9438
  store i64 %conv16, i64* %char_time, align 8, !dbg !9439
  br label %if.end17, !dbg !9440

if.end17:                                         ; preds = %if.then15, %land.lhs.true, %if.end10
  %20 = load i32, i32* %timeout.addr, align 4, !dbg !9441
  %cmp18 = icmp eq i32 %20, 0, !dbg !9443
  br i1 %cmp18, label %if.then24, label %lor.lhs.false20, !dbg !9444

lor.lhs.false20:                                  ; preds = %if.end17
  %21 = load i32, i32* %timeout.addr, align 4, !dbg !9445
  %22 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9446
  %timeout21 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 37, !dbg !9447
  %23 = load i32, i32* %timeout21, align 8, !dbg !9447
  %mul = mul i32 2, %23, !dbg !9448
  %cmp22 = icmp ugt i32 %21, %mul, !dbg !9449
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !9450

if.then24:                                        ; preds = %lor.lhs.false20, %if.end17
  %24 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9451
  %timeout25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %24, i32 0, i32 37, !dbg !9452
  %25 = load i32, i32* %timeout25, align 8, !dbg !9452
  %mul26 = mul i32 2, %25, !dbg !9453
  store i32 %mul26, i32* %timeout.addr, align 4, !dbg !9454
  br label %if.end27, !dbg !9455

if.end27:                                         ; preds = %if.then24, %lor.lhs.false20
  %26 = load volatile i64, i64* @jiffies, align 8, !dbg !9456
  %27 = load i32, i32* %timeout.addr, align 4, !dbg !9457
  %conv28 = sext i32 %27 to i64, !dbg !9457
  %add = add i64 %26, %conv28, !dbg !9458
  store i64 %add, i64* %expire, align 8, !dbg !9459
  store i32 0, i32* %tmp, align 4, !dbg !9460
  %28 = load i32, i32* %tmp, align 4, !dbg !9463
  br label %while.cond, !dbg !9464

while.cond:                                       ; preds = %if.end42, %if.end27
  %29 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9465
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 39, !dbg !9466
  %30 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9466
  %tx_empty = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %30, i32 0, i32 0, !dbg !9467
  %31 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %tx_empty, align 8, !dbg !9467
  %32 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9468
  %call29 = call i32 %31(%struct.uart_port* %32) #10, !dbg !9465
  %tobool30 = icmp ne i32 %call29, 0, !dbg !9469
  %lnot = xor i1 %tobool30, true, !dbg !9469
  br i1 %lnot, label %while.body, label %while.end, !dbg !9464

while.body:                                       ; preds = %while.cond
  %33 = load i64, i64* %char_time, align 8, !dbg !9470
  %call31 = call i32 @jiffies_to_msecs(i64 %33) #10, !dbg !9471
  %call32 = call i64 @msleep_interruptible(i32 %call31) #10, !dbg !9472
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9376
  %34 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9376
  %35 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9379, !srcloc !9473
  store i64 %35, i64* %pfo_val__.i, align 8, !dbg !9379
  %36 = load i64, i64* %pfo_val__.i, align 8, !dbg !9379
  %37 = inttoptr i64 %36 to %struct.task_struct*, !dbg !9379
  store %struct.task_struct* %37, %struct.task_struct** %tmp.i, align 8, !dbg !9379
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9379
  store %struct.task_struct* %38, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9370
  %39 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9370
  store %struct.task_struct* %39, %struct.task_struct** %tmp1.i, align 8, !dbg !9370
  %40 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9370
  %call34 = call i32 @signal_pending(%struct.task_struct* %40) #10, !dbg !9474
  %tobool35 = icmp ne i32 %call34, 0, !dbg !9474
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !9475

if.then36:                                        ; preds = %while.body
  br label %while.end, !dbg !9476

if.end37:                                         ; preds = %while.body
  %41 = load i64, i64* %expire, align 8, !dbg !9477
  %42 = load volatile i64, i64* @jiffies, align 8, !dbg !9477
  %sub38 = sub i64 %41, %42, !dbg !9477
  %cmp39 = icmp slt i64 %sub38, 0, !dbg !9477
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !9479

if.then41:                                        ; preds = %if.end37
  br label %while.end, !dbg !9480

if.end42:                                         ; preds = %if.end37
  br label %while.cond, !dbg !9464, !llvm.loop !9481

while.end:                                        ; preds = %if.then41, %if.then36, %while.cond
  %43 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9483
  call void @uart_port_deref(%struct.uart_port* %43) #10, !dbg !9484
  br label %return, !dbg !9485

return:                                           ; preds = %while.end, %if.then2, %if.then
  ret void, !dbg !9485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_send_xchar(%struct.tty_struct* %tty, i8 signext %ch) #0 !dbg !9486 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !5559, metadata !DIExpression()), !dbg !9487
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !9491
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !9492
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9499, metadata !DIExpression()), !dbg !9500
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9503, metadata !DIExpression()), !dbg !9504
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9505
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9506
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9506
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9505
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9504
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9507, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9509, metadata !DIExpression()), !dbg !9510
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9511
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !9512
  store %struct.uart_port* %call, %struct.uart_port** %port, align 8, !dbg !9513
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9514
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !9514
  br i1 %tobool, label %if.end, label %if.then, !dbg !9516

if.then:                                          ; preds = %entry
  br label %return, !dbg !9517

if.end:                                           ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9518
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 39, !dbg !9519
  %6 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9519
  %send_xchar = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %6, i32 0, i32 7, !dbg !9520
  %7 = load void (%struct.uart_port*, i8)*, void (%struct.uart_port*, i8)** %send_xchar, align 8, !dbg !9520
  %tobool1 = icmp ne void (%struct.uart_port*, i8)* %7, null, !dbg !9518
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !9521

if.then2:                                         ; preds = %if.end
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9522
  %ops3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 39, !dbg !9523
  %9 = load %struct.uart_ops*, %struct.uart_ops** %ops3, align 8, !dbg !9523
  %send_xchar4 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %9, i32 0, i32 7, !dbg !9524
  %10 = load void (%struct.uart_port*, i8)*, void (%struct.uart_port*, i8)** %send_xchar4, align 8, !dbg !9524
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9525
  %12 = load i8, i8* %ch.addr, align 1, !dbg !9526
  call void %10(%struct.uart_port* %11, i8 signext %12) #10, !dbg !9522
  br label %if.end30, !dbg !9522

if.else:                                          ; preds = %if.end
  br label %do.body, !dbg !9527

do.body:                                          ; preds = %if.else
  br label %do.body5, !dbg !9528

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9529, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9532, metadata !DIExpression()), !dbg !9531
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9531
  %conv = zext i1 %cmp to i32, !dbg !9531
  store i32 1, i32* %tmp, align 4, !dbg !9531
  %13 = load i32, i32* %tmp, align 4, !dbg !9531
  br label %do.body6, !dbg !9533

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9534

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !9535

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !9537, metadata !DIExpression()), !dbg !9540
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !9541, metadata !DIExpression()), !dbg !9540
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !9540
  %conv12 = zext i1 %cmp11 to i32, !dbg !9540
  store i32 1, i32* %tmp13, align 4, !dbg !9540
  %14 = load i32, i32* %tmp13, align 4, !dbg !9540
  %call14 = call i64 @arch_local_irq_save() #10, !dbg !9542
  store i64 %call14, i64* %flags, align 8, !dbg !9542
  br label %do.end, !dbg !9542

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !9535

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !9534

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9543, !srcloc !9544
  br label %do.body17, !dbg !9543

do.body17:                                        ; preds = %do.body16
  %15 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9545
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 0, !dbg !9545
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9546
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !9547
  %rlock.i = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !9547
  br label %do.end19, !dbg !9545

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9543

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9534

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9533

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9528

do.end23:                                         ; preds = %do.end22
  %18 = load i8, i8* %ch.addr, align 1, !dbg !9548
  %19 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9549
  %x_char = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 24, !dbg !9550
  store i8 %18, i8* %x_char, align 8, !dbg !9551
  %20 = load i8, i8* %ch.addr, align 1, !dbg !9552
  %tobool24 = icmp ne i8 %20, 0, !dbg !9552
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !9554

if.then25:                                        ; preds = %do.end23
  %21 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9555
  %ops26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 39, !dbg !9556
  %22 = load %struct.uart_ops*, %struct.uart_ops** %ops26, align 8, !dbg !9556
  %start_tx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %22, i32 0, i32 4, !dbg !9557
  %start_tx27 = bitcast {}** %start_tx to void (%struct.uart_port*)**, !dbg !9557
  %23 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %start_tx27, align 8, !dbg !9557
  %24 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9558
  call void %23(%struct.uart_port* %24) #10, !dbg !9555
  br label %if.end28, !dbg !9555

if.end28:                                         ; preds = %if.then25, %do.end23
  %25 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9559
  %lock29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %25, i32 0, i32 0, !dbg !9560
  %26 = load i64, i64* %flags, align 8, !dbg !9561
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !9562
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !9562
  store i32 1, i32* %tmp.i, align 4, !dbg !9562
  %27 = load i32, i32* %tmp.i, align 4, !dbg !9562
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !9563
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !9563
  store i32 1, i32* %tmp8.i, align 4, !dbg !9563
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !9563
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !9564
  call void @arch_local_irq_restore(i64 %29) #11, !dbg !9564
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9565, !srcloc !5691
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !9566
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9566
  %rlock.i32 = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !9566
  br label %if.end30

if.end30:                                         ; preds = %if.end28, %if.then2
  %32 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9567
  call void @uart_port_deref(%struct.uart_port* %32) #10, !dbg !9568
  br label %return, !dbg !9569

return:                                           ; preds = %if.end30, %if.then
  ret void, !dbg !9569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_tiocmget(%struct.tty_struct* %tty) #0 !dbg !9570 {
entry:
  %lock.addr.i8 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i8, metadata !4843, metadata !DIExpression()), !dbg !9571
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !9575
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %result = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9577, metadata !DIExpression()), !dbg !9578
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9579, metadata !DIExpression()), !dbg !9580
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9581
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9582
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9582
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9581
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9580
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9583, metadata !DIExpression()), !dbg !9584
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9585
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9586
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9587, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9589, metadata !DIExpression()), !dbg !9590
  store i32 -5, i32* %result, align 4, !dbg !9590
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9591
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %4, i32 0, i32 13, !dbg !9592
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9593
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9594
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !9595
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9596
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9597
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !9597
  br i1 %tobool, label %if.end, label %if.then, !dbg !9599

if.then:                                          ; preds = %entry
  br label %out, !dbg !9600

if.end:                                           ; preds = %entry
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9601
  %call2 = call zeroext i1 @tty_io_error(%struct.tty_struct* %7) #10, !dbg !9602
  br i1 %call2, label %if.end6, label %if.then3, !dbg !9603

if.then3:                                         ; preds = %if.end
  %8 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9604
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 36, !dbg !9605
  %9 = load i32, i32* %mctrl, align 4, !dbg !9605
  store i32 %9, i32* %result, align 4, !dbg !9606
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9607
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 0, !dbg !9608
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !9609
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9610, !srcloc !4939
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9611
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !9611
  %rlock.i = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !9611
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9612
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 39, !dbg !9613
  %14 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9613
  %get_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %14, i32 0, i32 2, !dbg !9614
  %15 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl, align 8, !dbg !9614
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9615
  %call4 = call i32 %15(%struct.uart_port* %16) #10, !dbg !9612
  %17 = load i32, i32* %result, align 4, !dbg !9616
  %or = or i32 %17, %call4, !dbg !9616
  store i32 %or, i32* %result, align 4, !dbg !9616
  %18 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9617
  %lock5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 0, !dbg !9618
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i8, align 8
  call void @arch_local_irq_enable() #11, !dbg !9619
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9620, !srcloc !4958
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i8, align 8, !dbg !9621
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !9621
  %rlock.i9 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !9621
  br label %if.end6, !dbg !9622

if.end6:                                          ; preds = %if.then3, %if.end
  br label %out, !dbg !9623

out:                                              ; preds = %if.end6, %if.then
  call void @llvm.dbg.label(metadata !9624), !dbg !9625
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9626
  %mutex7 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %21, i32 0, i32 13, !dbg !9627
  call void @mutex_unlock(%struct.mutex* %mutex7) #10, !dbg !9628
  %22 = load i32, i32* %result, align 4, !dbg !9629
  ret i32 %22, !dbg !9630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #0 !dbg !9631 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9638, metadata !DIExpression()), !dbg !9639
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9640
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9641
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9641
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9640
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9639
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9642, metadata !DIExpression()), !dbg !9643
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9644
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9645
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9643
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9648, metadata !DIExpression()), !dbg !9649
  store i32 -5, i32* %ret, align 4, !dbg !9649
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9650
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %4, i32 0, i32 13, !dbg !9651
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9652
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9653
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !9654
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9655
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9656
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !9656
  br i1 %tobool, label %if.end, label %if.then, !dbg !9658

if.then:                                          ; preds = %entry
  br label %out, !dbg !9659

if.end:                                           ; preds = %entry
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9660
  %call2 = call zeroext i1 @tty_io_error(%struct.tty_struct* %7) #10, !dbg !9662
  br i1 %call2, label %if.end4, label %if.then3, !dbg !9663

if.then3:                                         ; preds = %if.end
  %8 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9664
  %9 = load i32, i32* %set.addr, align 4, !dbg !9666
  %10 = load i32, i32* %clear.addr, align 4, !dbg !9667
  call void @uart_update_mctrl(%struct.uart_port* %8, i32 %9, i32 %10) #10, !dbg !9668
  store i32 0, i32* %ret, align 4, !dbg !9669
  br label %if.end4, !dbg !9670

if.end4:                                          ; preds = %if.then3, %if.end
  br label %out, !dbg !9671

out:                                              ; preds = %if.end4, %if.then
  call void @llvm.dbg.label(metadata !9672), !dbg !9673
  %11 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9674
  %mutex5 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %11, i32 0, i32 13, !dbg !9675
  call void @mutex_unlock(%struct.mutex* %mutex5) #10, !dbg !9676
  %12 = load i32, i32* %ret, align 4, !dbg !9677
  ret i32 %12, !dbg !9678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_icount(%struct.tty_struct* %tty, %struct.serial_icounter_struct* %icount) #0 !dbg !9679 {
entry:
  %lock.addr.i14 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i14, metadata !4843, metadata !DIExpression()), !dbg !9680
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !9682
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %icount.addr = alloca %struct.serial_icounter_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %cnow = alloca %struct.uart_icount, align 4
  %uport = alloca %struct.uart_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  store %struct.serial_icounter_struct* %icount, %struct.serial_icounter_struct** %icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_icounter_struct** %icount.addr, metadata !9686, metadata !DIExpression()), !dbg !9687
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9688, metadata !DIExpression()), !dbg !9689
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9690
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9691
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9691
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9690
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9689
  call void @llvm.dbg.declare(metadata %struct.uart_icount* %cnow, metadata !9692, metadata !DIExpression()), !dbg !9693
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9694, metadata !DIExpression()), !dbg !9695
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9696
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %3) #10, !dbg !9697
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !9698
  %4 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9699
  %tobool = icmp ne %struct.uart_port* %4, null, !dbg !9699
  br i1 %tobool, label %if.end, label %if.then, !dbg !9701

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !9702
  br label %return, !dbg !9702

if.end:                                           ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9703
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 0, !dbg !9704
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !9705
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9706, !srcloc !4939
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9707
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9707
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !9707
  %8 = bitcast %struct.uart_icount* %cnow to i8*, !dbg !9708
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9709
  %icount1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 31, !dbg !9710
  %10 = bitcast %struct.uart_icount* %icount1 to i8*, !dbg !9708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %10, i64 44, i1 false), !dbg !9708
  %11 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9711
  %lock2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 0, !dbg !9712
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i14, align 8
  call void @arch_local_irq_enable() #11, !dbg !9713
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9714, !srcloc !4958
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i14, align 8, !dbg !9715
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !9715
  %rlock.i15 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !9715
  %14 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9716
  call void @uart_port_deref(%struct.uart_port* %14) #10, !dbg !9717
  %cts = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 0, !dbg !9718
  %15 = load i32, i32* %cts, align 4, !dbg !9718
  %16 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9719
  %cts3 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %16, i32 0, i32 0, !dbg !9720
  store i32 %15, i32* %cts3, align 4, !dbg !9721
  %dsr = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 1, !dbg !9722
  %17 = load i32, i32* %dsr, align 4, !dbg !9722
  %18 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9723
  %dsr4 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %18, i32 0, i32 1, !dbg !9724
  store i32 %17, i32* %dsr4, align 4, !dbg !9725
  %rng = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 2, !dbg !9726
  %19 = load i32, i32* %rng, align 4, !dbg !9726
  %20 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9727
  %rng5 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %20, i32 0, i32 2, !dbg !9728
  store i32 %19, i32* %rng5, align 4, !dbg !9729
  %dcd = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 3, !dbg !9730
  %21 = load i32, i32* %dcd, align 4, !dbg !9730
  %22 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9731
  %dcd6 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %22, i32 0, i32 3, !dbg !9732
  store i32 %21, i32* %dcd6, align 4, !dbg !9733
  %rx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 4, !dbg !9734
  %23 = load i32, i32* %rx, align 4, !dbg !9734
  %24 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9735
  %rx7 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %24, i32 0, i32 4, !dbg !9736
  store i32 %23, i32* %rx7, align 4, !dbg !9737
  %tx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 5, !dbg !9738
  %25 = load i32, i32* %tx, align 4, !dbg !9738
  %26 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9739
  %tx8 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %26, i32 0, i32 5, !dbg !9740
  store i32 %25, i32* %tx8, align 4, !dbg !9741
  %frame = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 6, !dbg !9742
  %27 = load i32, i32* %frame, align 4, !dbg !9742
  %28 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9743
  %frame9 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %28, i32 0, i32 6, !dbg !9744
  store i32 %27, i32* %frame9, align 4, !dbg !9745
  %overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 7, !dbg !9746
  %29 = load i32, i32* %overrun, align 4, !dbg !9746
  %30 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9747
  %overrun10 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %30, i32 0, i32 7, !dbg !9748
  store i32 %29, i32* %overrun10, align 4, !dbg !9749
  %parity = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 8, !dbg !9750
  %31 = load i32, i32* %parity, align 4, !dbg !9750
  %32 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9751
  %parity11 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %32, i32 0, i32 8, !dbg !9752
  store i32 %31, i32* %parity11, align 4, !dbg !9753
  %brk = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 9, !dbg !9754
  %33 = load i32, i32* %brk, align 4, !dbg !9754
  %34 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9755
  %brk12 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %34, i32 0, i32 9, !dbg !9756
  store i32 %33, i32* %brk12, align 4, !dbg !9757
  %buf_overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 10, !dbg !9758
  %35 = load i32, i32* %buf_overrun, align 4, !dbg !9758
  %36 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !9759
  %buf_overrun13 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %36, i32 0, i32 10, !dbg !9760
  store i32 %35, i32* %buf_overrun13, align 4, !dbg !9761
  store i32 0, i32* %retval, align 4, !dbg !9762
  br label %return, !dbg !9762

return:                                           ; preds = %if.end, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !9763
  ret i32 %37, !dbg !9763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_info_user(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #0 !dbg !9764 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !9767, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9769, metadata !DIExpression()), !dbg !9770
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9771
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9772
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9772
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9771
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9770
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9773, metadata !DIExpression()), !dbg !9774
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9775
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9776
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9774
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9777
  %5 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9778
  %call = call i32 @uart_get_info(%struct.tty_port* %4, %struct.serial_struct* %5) #10, !dbg !9779
  %cmp = icmp slt i32 %call, 0, !dbg !9780
  %6 = zext i1 %cmp to i64, !dbg !9779
  %cond = select i1 %cmp, i32 -5, i32 0, !dbg !9779
  ret i32 %cond, !dbg !9781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_set_info_user(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #0 !dbg !9782 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %retval2 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !9787, metadata !DIExpression()), !dbg !9788
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9789
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9790
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9790
  %2 = bitcast i8* %1 to %struct.uart_state*, !dbg !9789
  store %struct.uart_state* %2, %struct.uart_state** %state, align 8, !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9791, metadata !DIExpression()), !dbg !9792
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9793
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !9794
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9792
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !9795, metadata !DIExpression()), !dbg !9796
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9797
  %termios_rwsem = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 11, !dbg !9798
  call void @down_write(%struct.rw_semaphore* %termios_rwsem) #10, !dbg !9799
  %5 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9800
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %5, i32 0, i32 13, !dbg !9801
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !9802
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9803
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9804
  %8 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !9805
  %9 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !9806
  %call = call i32 @uart_set_info(%struct.tty_struct* %6, %struct.tty_port* %7, %struct.uart_state* %8, %struct.serial_struct* %9) #10, !dbg !9807
  store i32 %call, i32* %retval2, align 4, !dbg !9808
  %10 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9809
  %mutex3 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %10, i32 0, i32 13, !dbg !9810
  call void @mutex_unlock(%struct.mutex* %mutex3) #10, !dbg !9811
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9812
  %termios_rwsem4 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %11, i32 0, i32 11, !dbg !9813
  call void @up_write(%struct.rw_semaphore* %termios_rwsem4) #10, !dbg !9814
  %12 = load i32, i32* %retval2, align 4, !dbg !9815
  ret i32 %12, !dbg !9816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_proc_show(%struct.seq_file* %m, i8* %v) #0 !dbg !9817 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %v.addr = alloca i8*, align 8
  %ttydrv = alloca %struct.tty_driver*, align 8
  %drv = alloca %struct.uart_driver*, align 8
  %i = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  store i8* %v, i8** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr, metadata !9820, metadata !DIExpression()), !dbg !9821
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ttydrv, metadata !9822, metadata !DIExpression()), !dbg !9823
  %0 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !9824
  %private = getelementptr inbounds %struct.seq_file, %struct.seq_file* %0, i32 0, i32 11, !dbg !9825
  %1 = load i8*, i8** %private, align 8, !dbg !9825
  %2 = bitcast i8* %1 to %struct.tty_driver*, !dbg !9824
  store %struct.tty_driver* %2, %struct.tty_driver** %ttydrv, align 8, !dbg !9823
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv, metadata !9826, metadata !DIExpression()), !dbg !9827
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ttydrv, align 8, !dbg !9828
  %driver_state = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %3, i32 0, i32 19, !dbg !9829
  %4 = load i8*, i8** %driver_state, align 8, !dbg !9829
  %5 = bitcast i8* %4 to %struct.uart_driver*, !dbg !9828
  store %struct.uart_driver* %5, %struct.uart_driver** %drv, align 8, !dbg !9827
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9830, metadata !DIExpression()), !dbg !9831
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !9832
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !9833
  store i32 0, i32* %i, align 4, !dbg !9834
  br label %for.cond, !dbg !9836

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !9837
  %8 = load %struct.uart_driver*, %struct.uart_driver** %drv, align 8, !dbg !9839
  %nr = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %8, i32 0, i32 5, !dbg !9840
  %9 = load i32, i32* %nr, align 8, !dbg !9840
  %cmp = icmp slt i32 %7, %9, !dbg !9841
  br i1 %cmp, label %for.body, label %for.end, !dbg !9842

for.body:                                         ; preds = %for.cond
  %10 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !9843
  %11 = load %struct.uart_driver*, %struct.uart_driver** %drv, align 8, !dbg !9844
  %12 = load i32, i32* %i, align 4, !dbg !9845
  call void @uart_line_info(%struct.seq_file* %10, %struct.uart_driver* %11, i32 %12) #10, !dbg !9846
  br label %for.inc, !dbg !9846

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !9847
  %inc = add i32 %13, 1, !dbg !9847
  store i32 %inc, i32* %i, align 4, !dbg !9847
  br label %for.cond, !dbg !9848, !llvm.loop !9849

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !9851
}

; Function Attrs: noredzone
declare dso_local i32 @tty_standard_install(%struct.tty_driver*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_port_open(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_close(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local void @down_write(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_do_autoconfig(%struct.tty_struct* %tty, %struct.uart_state* %state) #0 !dbg !9852 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %flags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9855, metadata !DIExpression()), !dbg !9856
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !9857, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9859, metadata !DIExpression()), !dbg !9860
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !9861
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %0, i32 0, i32 0, !dbg !9862
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9860
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9863, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9865, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9867, metadata !DIExpression()), !dbg !9868
  %call = call zeroext i1 @capable(i32 21) #10, !dbg !9869
  br i1 %call, label %if.end, label %if.then, !dbg !9871

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9872
  br label %return, !dbg !9872

if.end:                                           ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9873
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 13, !dbg !9875
  %call2 = call i32 @mutex_lock_interruptible(%struct.mutex* %mutex) #10, !dbg !9876
  %tobool = icmp ne i32 %call2, 0, !dbg !9876
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !9877

if.then3:                                         ; preds = %if.end
  store i32 -512, i32* %retval, align 4, !dbg !9878
  br label %return, !dbg !9878

if.end4:                                          ; preds = %if.end
  %2 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !9879
  %call5 = call %struct.uart_port* @uart_port_check(%struct.uart_state* %2) #10, !dbg !9880
  store %struct.uart_port* %call5, %struct.uart_port** %uport, align 8, !dbg !9881
  %3 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9882
  %tobool6 = icmp ne %struct.uart_port* %3, null, !dbg !9882
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !9884

if.then7:                                         ; preds = %if.end4
  store i32 -5, i32* %ret, align 4, !dbg !9885
  br label %out, !dbg !9887

if.end8:                                          ; preds = %if.end4
  store i32 -16, i32* %ret, align 4, !dbg !9888
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9889
  %call9 = call i32 @tty_port_users(%struct.tty_port* %4) #10, !dbg !9891
  %cmp = icmp eq i32 %call9, 1, !dbg !9892
  br i1 %cmp, label %if.then10, label %if.end31, !dbg !9893

if.then10:                                        ; preds = %if.end8
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9894
  %6 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !9896
  call void @uart_shutdown(%struct.tty_struct* %5, %struct.uart_state* %6) #10, !dbg !9897
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9898
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 38, !dbg !9900
  %8 = load i32, i32* %type, align 4, !dbg !9900
  %cmp11 = icmp ne i32 %8, 0, !dbg !9901
  br i1 %cmp11, label %land.lhs.true, label %if.end18, !dbg !9902

land.lhs.true:                                    ; preds = %if.then10
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9903
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 39, !dbg !9904
  %10 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !9904
  %release_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %10, i32 0, i32 18, !dbg !9905
  %release_port12 = bitcast {}** %release_port to void (%struct.uart_port*)**, !dbg !9905
  %11 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port12, align 8, !dbg !9905
  %tobool13 = icmp ne void (%struct.uart_port*)* %11, null, !dbg !9903
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !9906

if.then14:                                        ; preds = %land.lhs.true
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9907
  %ops15 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 39, !dbg !9908
  %13 = load %struct.uart_ops*, %struct.uart_ops** %ops15, align 8, !dbg !9908
  %release_port16 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %13, i32 0, i32 18, !dbg !9909
  %release_port17 = bitcast {}** %release_port16 to void (%struct.uart_port*)**, !dbg !9909
  %14 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port17, align 8, !dbg !9909
  %15 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9910
  call void %14(%struct.uart_port* %15) #10, !dbg !9907
  br label %if.end18, !dbg !9907

if.end18:                                         ; preds = %if.then14, %land.lhs.true, %if.then10
  store i32 1, i32* %flags, align 4, !dbg !9911
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9912
  %flags19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 33, !dbg !9914
  %17 = load i32, i32* %flags19, align 8, !dbg !9914
  %and = and i32 %17, 128, !dbg !9915
  %tobool20 = icmp ne i32 %and, 0, !dbg !9915
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9916

if.then21:                                        ; preds = %if.end18
  %18 = load i32, i32* %flags, align 4, !dbg !9917
  %or = or i32 %18, 2, !dbg !9917
  store i32 %or, i32* %flags, align 4, !dbg !9917
  br label %if.end22, !dbg !9918

if.end22:                                         ; preds = %if.then21, %if.end18
  %19 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9919
  %ops23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 39, !dbg !9920
  %20 = load %struct.uart_ops*, %struct.uart_ops** %ops23, align 8, !dbg !9920
  %config_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %20, i32 0, i32 20, !dbg !9921
  %21 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %config_port, align 8, !dbg !9921
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !9922
  %23 = load i32, i32* %flags, align 4, !dbg !9923
  call void %21(%struct.uart_port* %22, i32 %23) #10, !dbg !9919
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9924
  %25 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !9925
  %call24 = call i32 @uart_startup(%struct.tty_struct* %24, %struct.uart_state* %25, i32 1) #10, !dbg !9926
  store i32 %call24, i32* %ret, align 4, !dbg !9927
  %26 = load i32, i32* %ret, align 4, !dbg !9928
  %cmp25 = icmp eq i32 %26, 0, !dbg !9930
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9931

if.then26:                                        ; preds = %if.end22
  %27 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9932
  call void @tty_port_set_initialized(%struct.tty_port* %27, i1 zeroext true) #10, !dbg !9933
  br label %if.end27, !dbg !9933

if.end27:                                         ; preds = %if.then26, %if.end22
  %28 = load i32, i32* %ret, align 4, !dbg !9934
  %cmp28 = icmp sgt i32 %28, 0, !dbg !9936
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !9937

if.then29:                                        ; preds = %if.end27
  store i32 0, i32* %ret, align 4, !dbg !9938
  br label %if.end30, !dbg !9939

if.end30:                                         ; preds = %if.then29, %if.end27
  br label %if.end31, !dbg !9940

if.end31:                                         ; preds = %if.end30, %if.end8
  br label %out, !dbg !9941

out:                                              ; preds = %if.end31, %if.then7
  call void @llvm.dbg.label(metadata !9942), !dbg !9943
  %29 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9944
  %mutex32 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %29, i32 0, i32 13, !dbg !9945
  call void @mutex_unlock(%struct.mutex* %mutex32) #10, !dbg !9946
  %30 = load i32, i32* %ret, align 4, !dbg !9947
  store i32 %30, i32* %retval, align 4, !dbg !9948
  br label %return, !dbg !9948

return:                                           ; preds = %out, %if.then3, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !9949
  ret i32 %31, !dbg !9949
}

; Function Attrs: noredzone
declare dso_local void @up_write(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_io_error(%struct.tty_struct* %tty) #0 !dbg !9950 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9953, metadata !DIExpression()), !dbg !9954
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9955
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !9956
  %call = call zeroext i1 @test_bit(i64 1, i64* %flags) #10, !dbg !9957
  ret i1 %call, !dbg !9958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_wait_modem_status(%struct.uart_state* %state, i64 %arg) #0 !dbg !9959 {
entry:
  %pscr_ret__.i61 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i61, metadata !9364, metadata !DIExpression()), !dbg !9962
  %__vpp_verify.i62 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i62, metadata !9374, metadata !DIExpression()), !dbg !9964
  %pfo_val__.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i63, metadata !9377, metadata !DIExpression()), !dbg !9965
  %tmp.i64 = alloca %struct.task_struct*, align 8
  %tmp1.i65 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i56 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i56, metadata !9364, metadata !DIExpression()), !dbg !9966
  %__vpp_verify.i57 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i57, metadata !9374, metadata !DIExpression()), !dbg !9972
  %pfo_val__.i58 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i58, metadata !9377, metadata !DIExpression()), !dbg !9973
  %tmp.i59 = alloca %struct.task_struct*, align 8
  %tmp1.i60 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i51 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i51, metadata !9364, metadata !DIExpression()), !dbg !9974
  %__vpp_verify.i52 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i52, metadata !9374, metadata !DIExpression()), !dbg !9979
  %pfo_val__.i53 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i53, metadata !9377, metadata !DIExpression()), !dbg !9980
  %tmp.i54 = alloca %struct.task_struct*, align 8
  %tmp1.i55 = alloca %struct.task_struct*, align 8
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !4843, metadata !DIExpression()), !dbg !9981
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !4852, metadata !DIExpression()), !dbg !9983
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !4843, metadata !DIExpression()), !dbg !9985
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !9987
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9364, metadata !DIExpression()), !dbg !9989
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9374, metadata !DIExpression()), !dbg !9991
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9377, metadata !DIExpression()), !dbg !9992
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.uart_state*, align 8
  %arg.addr = alloca i64, align 8
  %uport = alloca %struct.uart_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %cprev = alloca %struct.uart_icount, align 4
  %cnow = alloca %struct.uart_icount, align 4
  %ret = alloca i32, align 4
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !9993, metadata !DIExpression()), !dbg !9994
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9995, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !9997, metadata !DIExpression()), !dbg !9998
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9999, metadata !DIExpression()), !dbg !10000
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10001
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %0, i32 0, i32 0, !dbg !10002
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !10000
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !10003, metadata !DIExpression()), !dbg !10004
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !10004
  store i32 0, i32* %flags, align 8, !dbg !10004
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !10004
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9991
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9991
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9992, !srcloc !9473
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !9992
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !9992
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !9992
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !9992
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9992
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9989
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9989
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !9989
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9989
  %8 = bitcast %struct.task_struct* %7 to i8*, !dbg !10004
  store i8* %8, i8** %private, align 8, !dbg !10004
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !10004
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !10004
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !10004
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !10004
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !10004
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !10004
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !10004
  call void @llvm.dbg.declare(metadata %struct.uart_icount* %cprev, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata %struct.uart_icount* %cnow, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10009, metadata !DIExpression()), !dbg !10010
  %9 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10011
  %call3 = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %9) #10, !dbg !10012
  store %struct.uart_port* %call3, %struct.uart_port** %uport, align 8, !dbg !10013
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10014
  %tobool = icmp ne %struct.uart_port* %10, null, !dbg !10014
  br i1 %tobool, label %if.end, label %if.then, !dbg !10016

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !10017
  br label %return, !dbg !10017

if.end:                                           ; preds = %entry
  %11 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10018
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 0, !dbg !10019
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !10020
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10021, !srcloc !4939
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10022
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10022
  %rlock.i = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !10022
  %14 = bitcast %struct.uart_icount* %cprev to i8*, !dbg !10023
  %15 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10024
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 31, !dbg !10025
  %16 = bitcast %struct.uart_icount* %icount to i8*, !dbg !10023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %16, i64 44, i1 false), !dbg !10023
  %17 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10026
  call void @uart_enable_ms(%struct.uart_port* %17) #10, !dbg !10027
  %18 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10028
  %lock4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 0, !dbg !10029
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i45, align 8
  call void @arch_local_irq_enable() #11, !dbg !10030
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10031, !srcloc !4958
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !10032
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !10032
  %rlock.i46 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !10032
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !10033
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %21, i32 0, i32 9, !dbg !10034
  call void @add_wait_queue(%struct.wait_queue_head* %delta_msr_wait, %struct.wait_queue_entry* %wait) #10, !dbg !10035
  br label %for.cond, !dbg !10036

for.cond:                                         ; preds = %if.end41, %if.end
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10037
  %lock5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 0, !dbg !10038
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i47, align 8
  call void @arch_local_irq_disable() #11, !dbg !10039
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10040, !srcloc !4939
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !10041
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !10041
  %rlock.i48 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !10041
  %25 = bitcast %struct.uart_icount* %cnow to i8*, !dbg !10042
  %26 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10043
  %icount6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %26, i32 0, i32 31, !dbg !10044
  %27 = bitcast %struct.uart_icount* %icount6 to i8*, !dbg !10042
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 8 %27, i64 44, i1 false), !dbg !10042
  %28 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10045
  %lock7 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %28, i32 0, i32 0, !dbg !10046
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i49, align 8
  call void @arch_local_irq_enable() #11, !dbg !10047
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10048, !srcloc !4958
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !10049
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !10049
  %rlock.i50 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !10049
  br label %do.body, !dbg !10050

do.body:                                          ; preds = %for.cond
  br label %do.body8, !dbg !10051

do.body8:                                         ; preds = %do.body
  br label %do.body9, !dbg !10052

do.body9:                                         ; preds = %do.body8
  br label %do.end, !dbg !10053

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !10052

do.body10:                                        ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i52, align 8, !dbg !9979
  %31 = load i8*, i8** %__vpp_verify.i52, align 8, !dbg !9979
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9980, !srcloc !9473
  store i64 %32, i64* %pfo_val__.i53, align 8, !dbg !9980
  %33 = load i64, i64* %pfo_val__.i53, align 8, !dbg !9980
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !9980
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i54, align 8, !dbg !9980
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i54, align 8, !dbg !9980
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i51, align 8, !dbg !9974
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i51, align 8, !dbg !9974
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i55, align 8, !dbg !9974
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i55, align 8, !dbg !9974
  %state12 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %37, i32 0, i32 1, !dbg !10055
  store volatile i64 1, i64* %state12, align 16, !dbg !10055
  br label %do.end13, !dbg !10055

do.end13:                                         ; preds = %do.body10
  br label %do.end14, !dbg !10052

do.end14:                                         ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10051, !srcloc !10056
  br label %do.end15, !dbg !10051

do.end15:                                         ; preds = %do.end14
  %38 = load i64, i64* %arg.addr, align 8, !dbg !10057
  %and = and i64 %38, 128, !dbg !10059
  %tobool16 = icmp ne i64 %and, 0, !dbg !10059
  br i1 %tobool16, label %land.lhs.true, label %lor.lhs.false, !dbg !10060

land.lhs.true:                                    ; preds = %do.end15
  %rng = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 2, !dbg !10061
  %39 = load i32, i32* %rng, align 4, !dbg !10061
  %rng17 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cprev, i32 0, i32 2, !dbg !10062
  %40 = load i32, i32* %rng17, align 4, !dbg !10062
  %cmp = icmp ne i32 %39, %40, !dbg !10063
  br i1 %cmp, label %if.then35, label %lor.lhs.false, !dbg !10064

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.end15
  %41 = load i64, i64* %arg.addr, align 8, !dbg !10065
  %and18 = and i64 %41, 256, !dbg !10066
  %tobool19 = icmp ne i64 %and18, 0, !dbg !10066
  br i1 %tobool19, label %land.lhs.true20, label %lor.lhs.false23, !dbg !10067

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %dsr = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 1, !dbg !10068
  %42 = load i32, i32* %dsr, align 4, !dbg !10068
  %dsr21 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cprev, i32 0, i32 1, !dbg !10069
  %43 = load i32, i32* %dsr21, align 4, !dbg !10069
  %cmp22 = icmp ne i32 %42, %43, !dbg !10070
  br i1 %cmp22, label %if.then35, label %lor.lhs.false23, !dbg !10071

lor.lhs.false23:                                  ; preds = %land.lhs.true20, %lor.lhs.false
  %44 = load i64, i64* %arg.addr, align 8, !dbg !10072
  %and24 = and i64 %44, 64, !dbg !10073
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10073
  br i1 %tobool25, label %land.lhs.true26, label %lor.lhs.false29, !dbg !10074

land.lhs.true26:                                  ; preds = %lor.lhs.false23
  %dcd = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 3, !dbg !10075
  %45 = load i32, i32* %dcd, align 4, !dbg !10075
  %dcd27 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cprev, i32 0, i32 3, !dbg !10076
  %46 = load i32, i32* %dcd27, align 4, !dbg !10076
  %cmp28 = icmp ne i32 %45, %46, !dbg !10077
  br i1 %cmp28, label %if.then35, label %lor.lhs.false29, !dbg !10078

lor.lhs.false29:                                  ; preds = %land.lhs.true26, %lor.lhs.false23
  %47 = load i64, i64* %arg.addr, align 8, !dbg !10079
  %and30 = and i64 %47, 32, !dbg !10080
  %tobool31 = icmp ne i64 %and30, 0, !dbg !10080
  br i1 %tobool31, label %land.lhs.true32, label %if.end36, !dbg !10081

land.lhs.true32:                                  ; preds = %lor.lhs.false29
  %cts = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cnow, i32 0, i32 0, !dbg !10082
  %48 = load i32, i32* %cts, align 4, !dbg !10082
  %cts33 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %cprev, i32 0, i32 0, !dbg !10083
  %49 = load i32, i32* %cts33, align 4, !dbg !10083
  %cmp34 = icmp ne i32 %48, %49, !dbg !10084
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !10085

if.then35:                                        ; preds = %land.lhs.true32, %land.lhs.true26, %land.lhs.true20, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !10086
  br label %for.end, !dbg !10088

if.end36:                                         ; preds = %land.lhs.true32, %lor.lhs.false29
  call void @schedule() #10, !dbg !10089
  store i8* null, i8** %__vpp_verify.i57, align 8, !dbg !9972
  %50 = load i8*, i8** %__vpp_verify.i57, align 8, !dbg !9972
  %51 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9973, !srcloc !9473
  store i64 %51, i64* %pfo_val__.i58, align 8, !dbg !9973
  %52 = load i64, i64* %pfo_val__.i58, align 8, !dbg !9973
  %53 = inttoptr i64 %52 to %struct.task_struct*, !dbg !9973
  store %struct.task_struct* %53, %struct.task_struct** %tmp.i59, align 8, !dbg !9973
  %54 = load %struct.task_struct*, %struct.task_struct** %tmp.i59, align 8, !dbg !9973
  store %struct.task_struct* %54, %struct.task_struct** %pscr_ret__.i56, align 8, !dbg !9966
  %55 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i56, align 8, !dbg !9966
  store %struct.task_struct* %55, %struct.task_struct** %tmp1.i60, align 8, !dbg !9966
  %56 = load %struct.task_struct*, %struct.task_struct** %tmp1.i60, align 8, !dbg !9966
  %call38 = call i32 @signal_pending(%struct.task_struct* %56) #10, !dbg !10090
  %tobool39 = icmp ne i32 %call38, 0, !dbg !10090
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !10091

if.then40:                                        ; preds = %if.end36
  store i32 -512, i32* %ret, align 4, !dbg !10092
  br label %for.end, !dbg !10094

if.end41:                                         ; preds = %if.end36
  %57 = bitcast %struct.uart_icount* %cprev to i8*, !dbg !10095
  %58 = bitcast %struct.uart_icount* %cnow to i8*, !dbg !10095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 44, i1 false), !dbg !10095
  br label %for.cond, !dbg !10096, !llvm.loop !10097

for.end:                                          ; preds = %if.then40, %if.then35
  store i8* null, i8** %__vpp_verify.i62, align 8, !dbg !9964
  %59 = load i8*, i8** %__vpp_verify.i62, align 8, !dbg !9964
  %60 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9965, !srcloc !9473
  store i64 %60, i64* %pfo_val__.i63, align 8, !dbg !9965
  %61 = load i64, i64* %pfo_val__.i63, align 8, !dbg !9965
  %62 = inttoptr i64 %61 to %struct.task_struct*, !dbg !9965
  store %struct.task_struct* %62, %struct.task_struct** %tmp.i64, align 8, !dbg !9965
  %63 = load %struct.task_struct*, %struct.task_struct** %tmp.i64, align 8, !dbg !9965
  store %struct.task_struct* %63, %struct.task_struct** %pscr_ret__.i61, align 8, !dbg !9962
  %64 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i61, align 8, !dbg !9962
  store %struct.task_struct* %64, %struct.task_struct** %tmp1.i65, align 8, !dbg !9962
  %65 = load %struct.task_struct*, %struct.task_struct** %tmp1.i65, align 8, !dbg !9962
  %state43 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %65, i32 0, i32 1, !dbg !10100
  store volatile i64 0, i64* %state43, align 16, !dbg !10100
  %66 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !10101
  %delta_msr_wait44 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %66, i32 0, i32 9, !dbg !10102
  call void @remove_wait_queue(%struct.wait_queue_head* %delta_msr_wait44, %struct.wait_queue_entry* %wait) #10, !dbg !10103
  %67 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10104
  call void @uart_port_deref(%struct.uart_port* %67) #10, !dbg !10105
  %68 = load i32, i32* %ret, align 4, !dbg !10106
  store i32 %68, i32* %retval, align 4, !dbg !10107
  br label %return, !dbg !10107

return:                                           ; preds = %for.end, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !10108
  ret i32 %69, !dbg !10108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_lsr_info(%struct.tty_struct* %tty, %struct.uart_state* %state, i32* %value) #0 !dbg !10109 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %value.addr = alloca i32*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %result = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp9 = alloca i64, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !10114, metadata !DIExpression()), !dbg !10115
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !10118, metadata !DIExpression()), !dbg !10119
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10120
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !10121
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !10119
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10122, metadata !DIExpression()), !dbg !10123
  %1 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10124
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 39, !dbg !10125
  %2 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !10125
  %tx_empty = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %2, i32 0, i32 0, !dbg !10126
  %3 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %tx_empty, align 8, !dbg !10126
  %4 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10127
  %call1 = call i32 %3(%struct.uart_port* %4) #10, !dbg !10124
  store i32 %call1, i32* %result, align 4, !dbg !10128
  %5 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10129
  %x_char = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 24, !dbg !10131
  %6 = load i8, i8* %x_char, align 8, !dbg !10131
  %conv = zext i8 %6 to i32, !dbg !10129
  %tobool = icmp ne i32 %conv, 0, !dbg !10129
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10132

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10133
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %7, i32 0, i32 2, !dbg !10133
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 1, !dbg !10133
  %8 = load i32, i32* %head, align 8, !dbg !10133
  %9 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10133
  %xmit2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %9, i32 0, i32 2, !dbg !10133
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit2, i32 0, i32 2, !dbg !10133
  %10 = load i32, i32* %tail, align 4, !dbg !10133
  %sub = sub i32 %8, %10, !dbg !10133
  %conv3 = sext i32 %sub to i64, !dbg !10133
  %and = and i64 %conv3, 4095, !dbg !10133
  %cmp = icmp ugt i64 %and, 0, !dbg !10134
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10135

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10136
  %call5 = call i32 @uart_tx_stopped(%struct.uart_port* %11) #10, !dbg !10137
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10137
  br i1 %tobool6, label %if.end, label %if.then, !dbg !10138

if.then:                                          ; preds = %land.lhs.true, %entry
  %12 = load i32, i32* %result, align 4, !dbg !10139
  %and7 = and i32 %12, -2, !dbg !10139
  store i32 %and7, i32* %result, align 4, !dbg !10139
  br label %if.end, !dbg !10140

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  call void @might_fault() #10, !dbg !10141
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !10143, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !10146, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !10147, metadata !DIExpression()), !dbg !10145
  %13 = load i32*, i32** %value.addr, align 8, !dbg !10145
  %14 = bitcast i32* %13 to i8*, !dbg !10145
  store i8* %14, i8** %__ptr_pu, align 8, !dbg !10145
  %15 = load i32, i32* %result, align 4, !dbg !10145
  store i32 %15, i32* %__val_pu, align 4, !dbg !10145
  %16 = call i64 @llvm.read_register.i64(metadata !4588), !dbg !10145
  %17 = load i8*, i8** %__ptr_pu, align 8, !dbg !10145
  %18 = load i32, i32* %__val_pu, align 4, !dbg !10145
  %19 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %17, i32 %18, i64 4, i64 %16) #7, !dbg !10145, !srcloc !10148
  %asmresult = extractvalue { i8*, i64 } %19, 0, !dbg !10145
  %asmresult8 = extractvalue { i8*, i64 } %19, 1, !dbg !10145
  %20 = ptrtoint i8* %asmresult to i64, !dbg !10145
  %21 = trunc i64 %20 to i32, !dbg !10145
  store i32 %21, i32* %__ret_pu, align 4, !dbg !10145
  call void @llvm.write_register.i64(metadata !4588, i64 %asmresult8), !dbg !10145
  %22 = load i32, i32* %__ret_pu, align 4, !dbg !10145
  %conv10 = sext i32 %22 to i64, !dbg !10145
  store i64 %conv10, i64* %tmp9, align 8, !dbg !10145
  %23 = load i64, i64* %tmp9, align 8, !dbg !10145
  store i64 %23, i64* %tmp, align 8, !dbg !10141
  %24 = load i64, i64* %tmp, align 8, !dbg !10141
  %conv11 = trunc i64 %24 to i32, !dbg !10149
  ret i32 %conv11, !dbg !10150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_rs485_config(%struct.uart_port* %port, %struct.serial_rs485* %rs485) #0 !dbg !10151 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5559, metadata !DIExpression()), !dbg !10152
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !10154
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10155, metadata !DIExpression()), !dbg !10160
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10169, metadata !DIExpression()), !dbg !10170
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10171, metadata !DIExpression()), !dbg !10172
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10173, metadata !DIExpression()), !dbg !10174
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10175, metadata !DIExpression()), !dbg !10178
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10179, metadata !DIExpression()), !dbg !10180
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10181, metadata !DIExpression()), !dbg !10182
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10183, metadata !DIExpression()), !dbg !10184
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !10185
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %rs485.addr = alloca %struct.serial_rs485*, align 8
  %flags = alloca i64, align 8
  %aux = alloca %struct.serial_rs485, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !10192, metadata !DIExpression()), !dbg !10193
  store %struct.serial_rs485* %rs485, %struct.serial_rs485** %rs485.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_rs485** %rs485.addr, metadata !10194, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10196, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.declare(metadata %struct.serial_rs485* %aux, metadata !10198, metadata !DIExpression()), !dbg !10199
  br label %do.body, !dbg !10200

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10201

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10202, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10205, metadata !DIExpression()), !dbg !10204
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10204
  %conv = zext i1 %cmp to i32, !dbg !10204
  store i32 1, i32* %tmp, align 4, !dbg !10204
  %0 = load i32, i32* %tmp, align 4, !dbg !10204
  br label %do.body2, !dbg !10206

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10207

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10208

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10210, metadata !DIExpression()), !dbg !10213
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10214, metadata !DIExpression()), !dbg !10213
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10213
  %conv8 = zext i1 %cmp7 to i32, !dbg !10213
  store i32 1, i32* %tmp9, align 4, !dbg !10213
  %1 = load i32, i32* %tmp9, align 4, !dbg !10213
  %call = call i64 @arch_local_irq_save() #10, !dbg !10215
  store i64 %call, i64* %flags, align 8, !dbg !10215
  br label %do.end, !dbg !10215

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10208

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10207

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10216, !srcloc !10217
  br label %do.body12, !dbg !10216

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10218
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 0, !dbg !10218
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10219
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10220
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !10220
  br label %do.end14, !dbg !10218

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10216

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10207

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10206

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10201

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10221
  %rs48519 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 56, !dbg !10222
  %6 = bitcast %struct.serial_rs485* %aux to i8*, !dbg !10222
  %7 = bitcast %struct.serial_rs485* %rs48519 to i8*, !dbg !10222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %7, i64 32, i1 false), !dbg !10222
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10223
  %lock20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 0, !dbg !10224
  %9 = load i64, i64* %flags, align 8, !dbg !10225
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10226
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10226
  store i32 1, i32* %tmp.i, align 4, !dbg !10226
  %10 = load i32, i32* %tmp.i, align 4, !dbg !10226
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10227
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10227
  store i32 1, i32* %tmp8.i, align 4, !dbg !10227
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !10227
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !10228
  call void @arch_local_irq_restore(i64 %12) #11, !dbg !10228
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10229, !srcloc !5691
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !10230
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !10230
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !10230
  %15 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !10231
  %16 = bitcast %struct.serial_rs485* %15 to i8*, !dbg !10231
  %17 = bitcast %struct.serial_rs485* %aux to i8*, !dbg !10232
  store i8* %16, i8** %to.addr.i, align 8
  store i8* %17, i8** %from.addr.i, align 8
  store i64 32, i64* %n.addr.i, align 8
  %18 = load i8*, i8** %from.addr.i, align 8, !dbg !10233
  %19 = load i64, i64* %n.addr.i, align 8, !dbg !10233
  store i8* %18, i8** %addr.addr.i.i, align 8
  store i64 %19, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10174
  %20 = load i32, i32* %sz.i.i, align 4, !dbg !10234
  %cmp.i.i = icmp sge i32 %20, 0, !dbg !10234
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10234

land.rhs.i.i:                                     ; preds = %do.end18
  %21 = load i32, i32* %sz.i.i, align 4, !dbg !10234
  %conv.i.i = sext i32 %21 to i64, !dbg !10234
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10234
  %cmp1.i.i = icmp ult i64 %conv.i.i, %22, !dbg !10234
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %do.end18
  %23 = phi i1 [ false, %do.end18 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10236
  %lnot.i.i = xor i1 %23, true, !dbg !10234
  %lnot.ext.i.i = zext i1 %23 to i32, !dbg !10234
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10234
  br i1 %23, label %if.then.i.i, label %if.end10.i.i, !dbg !10237

if.then.i.i:                                      ; preds = %land.end.i.i
  %24 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10238
  %25 = call i1 @llvm.is.constant.i64(i64 %24) #7, !dbg !10241
  br i1 %25, label %if.else.i.i, label %if.then5.i.i, !dbg !10242

if.then5.i.i:                                     ; preds = %if.then.i.i
  %26 = load i32, i32* %sz.i.i, align 4, !dbg !10243
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10244
  call void @copy_overflow(i32 %26, i64 %27) #11, !dbg !10245
  br label %if.end9.i.i, !dbg !10245

if.else.i.i:                                      ; preds = %if.then.i.i
  %28 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10246
  %tobool6.i.i = trunc i8 %28 to i1, !dbg !10246
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10248

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !10249
  br label %if.end.i.i, !dbg !10249

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !10250
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10251
  br label %check_copy_size.exit.i, !dbg !10251

if.end10.i.i:                                     ; preds = %land.end.i.i
  %29 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10178
  %cmp11.i.i = icmp ugt i64 %29, 2147483647, !dbg !10178
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10178
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10178
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10178
  %30 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10252
  %tobool17.i.i = icmp ne i32 %30, 0, !dbg !10252
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10252
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10252
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10252
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10178

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10254, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10258, !srcloc !10260
  br label %if.end31.i.i, !dbg !10261

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %31 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10178
  %tobool32.i.i = icmp ne i32 %31, 0, !dbg !10178
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10178
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10178
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10178
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10252
  %32 = load i64, i64* %tmp.i.i, align 8, !dbg !10178
  %tobool38.i.i = icmp ne i64 %32, 0, !dbg !10262
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10263

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10264
  br label %check_copy_size.exit.i, !dbg !10264

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %33 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10265
  %34 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10266
  %35 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10267
  %tobool41.i.i = trunc i8 %35 to i1, !dbg !10267
  call void @check_object_size(i8* %33, i64 %34, i1 zeroext %tobool41.i.i) #11, !dbg !10268
  store i1 true, i1* %retval.i.i, align 1, !dbg !10269
  br label %check_copy_size.exit.i, !dbg !10269

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %36 = load i1, i1* %retval.i.i, align 1, !dbg !10270
  %lnot.i = xor i1 %36, true, !dbg !10233
  %lnot.ext.i = zext i1 %36 to i32, !dbg !10233
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10233
  br i1 %36, label %if.then.i, label %copy_to_user.exit, !dbg !10271

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %37 = load i8*, i8** %to.addr.i, align 8, !dbg !10272
  %38 = load i8*, i8** %from.addr.i, align 8, !dbg !10273
  %39 = load i64, i64* %n.addr.i, align 8, !dbg !10274
  %call2.i = call i64 @_copy_to_user(i8* %37, i8* %38, i64 %39) #11, !dbg !10275
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10276
  br label %copy_to_user.exit, !dbg !10277

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %40 = load i64, i64* %n.addr.i, align 8, !dbg !10278
  %tobool = icmp ne i64 %40, 0, !dbg !10279
  br i1 %tobool, label %if.then, label %if.end, !dbg !10280

if.then:                                          ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10281
  br label %return, !dbg !10281

if.end:                                           ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !10282
  br label %return, !dbg !10282

return:                                           ; preds = %if.end, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !10283
  ret i32 %41, !dbg !10283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_set_rs485_config(%struct.uart_port* %port, %struct.serial_rs485* %rs485_user) #0 !dbg !10284 {
entry:
  %retval.i.i36 = alloca i1, align 1
  %addr.addr.i.i37 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i37, metadata !10155, metadata !DIExpression()), !dbg !10285
  %bytes.addr.i.i38 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i38, metadata !10169, metadata !DIExpression()), !dbg !10289
  %is_source.addr.i.i39 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i39, metadata !10171, metadata !DIExpression()), !dbg !10290
  %sz.i.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i40, metadata !10173, metadata !DIExpression()), !dbg !10291
  %__ret_warn_on.i.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i41, metadata !10175, metadata !DIExpression()), !dbg !10292
  %tmp.i.i42 = alloca i64, align 8
  %to.addr.i43 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i43, metadata !10179, metadata !DIExpression()), !dbg !10293
  %from.addr.i44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i44, metadata !10181, metadata !DIExpression()), !dbg !10294
  %n.addr.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i45, metadata !10183, metadata !DIExpression()), !dbg !10295
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !5559, metadata !DIExpression()), !dbg !10296
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !10298
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !10299
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10155, metadata !DIExpression()), !dbg !10306
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10169, metadata !DIExpression()), !dbg !10312
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10171, metadata !DIExpression()), !dbg !10313
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10173, metadata !DIExpression()), !dbg !10314
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10175, metadata !DIExpression()), !dbg !10315
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10316, metadata !DIExpression()), !dbg !10317
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10318, metadata !DIExpression()), !dbg !10319
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10320, metadata !DIExpression()), !dbg !10321
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %rs485_user.addr = alloca %struct.serial_rs485*, align 8
  %rs485 = alloca %struct.serial_rs485, align 4
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  store %struct.serial_rs485* %rs485_user, %struct.serial_rs485** %rs485_user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_rs485** %rs485_user.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.declare(metadata %struct.serial_rs485* %rs485, metadata !10326, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10330, metadata !DIExpression()), !dbg !10331
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10332
  %rs485_config = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 18, !dbg !10334
  %1 = load i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_rs485*)** %rs485_config, align 8, !dbg !10334
  %tobool = icmp ne i32 (%struct.uart_port*, %struct.serial_rs485*)* %1, null, !dbg !10332
  br i1 %tobool, label %if.end, label %if.then, !dbg !10335

if.then:                                          ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !10336
  br label %return, !dbg !10336

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.serial_rs485* %rs485 to i8*, !dbg !10337
  %3 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485_user.addr, align 8, !dbg !10338
  %4 = bitcast %struct.serial_rs485* %3 to i8*, !dbg !10338
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 32, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !10339
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !10339
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10314
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !10340
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !10340
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10340

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !10340
  %conv.i.i = sext i32 %8 to i64, !dbg !10340
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10340
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !10340
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10341
  %lnot.i.i = xor i1 %10, true, !dbg !10340
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !10340
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10340
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !10342

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10343
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #7, !dbg !10344
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !10345

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !10346
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10347
  call void @copy_overflow(i32 %13, i64 %14) #11, !dbg !10348
  br label %if.end9.i.i, !dbg !10348

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10349
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !10349
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10350

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !10351
  br label %if.end.i.i, !dbg !10351

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !10352
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10353
  br label %check_copy_size.exit.i, !dbg !10353

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10315
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !10315
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10315
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10315
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10315
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10354
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !10354
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10354
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10354
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10354
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10315

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10355, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10356, !srcloc !10260
  br label %if.end31.i.i, !dbg !10357

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10315
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !10315
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10315
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10315
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10315
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10354
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !10315
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !10358
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10359

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10360
  br label %check_copy_size.exit.i, !dbg !10360

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10361
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10362
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10363
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !10363
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #11, !dbg !10364
  store i1 true, i1* %retval.i.i, align 1, !dbg !10365
  br label %check_copy_size.exit.i, !dbg !10365

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !10366
  %lnot.i = xor i1 %23, true, !dbg !10339
  %lnot.ext.i = zext i1 %23 to i32, !dbg !10339
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10339
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !10367

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !10368
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !10369
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !10370
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #11, !dbg !10371
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10372
  br label %copy_from_user.exit, !dbg !10373

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !10374
  %tobool1 = icmp ne i64 %27, 0, !dbg !10375
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10376

if.then2:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10377
  br label %return, !dbg !10377

if.end3:                                          ; preds = %copy_from_user.exit
  br label %do.body, !dbg !10378

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !10379

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10380, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10383, metadata !DIExpression()), !dbg !10382
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10382
  %conv = zext i1 %cmp to i32, !dbg !10382
  store i32 1, i32* %tmp, align 4, !dbg !10382
  %28 = load i32, i32* %tmp, align 4, !dbg !10382
  br label %do.body5, !dbg !10384

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !10385

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10386

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10388, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10392, metadata !DIExpression()), !dbg !10391
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10391
  %conv11 = zext i1 %cmp10 to i32, !dbg !10391
  store i32 1, i32* %tmp12, align 4, !dbg !10391
  %29 = load i32, i32* %tmp12, align 4, !dbg !10391
  %call13 = call i64 @arch_local_irq_save() #10, !dbg !10393
  store i64 %call13, i64* %flags, align 8, !dbg !10393
  br label %do.end, !dbg !10393

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !10386

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10385

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10394, !srcloc !10395
  br label %do.body16, !dbg !10394

do.body16:                                        ; preds = %do.body15
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10396
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 0, !dbg !10396
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10397
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !10398
  %rlock.i = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !10398
  br label %do.end18, !dbg !10396

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10394

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10385

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10384

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10379

do.end22:                                         ; preds = %do.end21
  %33 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10399
  %rs485_config23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %33, i32 0, i32 18, !dbg !10400
  %34 = load i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_rs485*)** %rs485_config23, align 8, !dbg !10400
  %35 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10401
  %call24 = call i32 %34(%struct.uart_port* %35, %struct.serial_rs485* %rs485) #10, !dbg !10399
  store i32 %call24, i32* %ret, align 4, !dbg !10402
  %36 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10403
  %lock25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %36, i32 0, i32 0, !dbg !10404
  %37 = load i64, i64* %flags, align 8, !dbg !10405
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10406
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10406
  store i32 1, i32* %tmp.i, align 4, !dbg !10406
  %38 = load i32, i32* %tmp.i, align 4, !dbg !10406
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10407
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10407
  store i32 1, i32* %tmp8.i, align 4, !dbg !10407
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !10407
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !10408
  call void @arch_local_irq_restore(i64 %40) #11, !dbg !10408
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10409, !srcloc !5691
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !10410
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !10410
  %rlock.i35 = bitcast %union.anon* %42 to %struct.raw_spinlock*, !dbg !10410
  %43 = load i32, i32* %ret, align 4, !dbg !10411
  %tobool26 = icmp ne i32 %43, 0, !dbg !10411
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !10413

if.then27:                                        ; preds = %do.end22
  %44 = load i32, i32* %ret, align 4, !dbg !10414
  store i32 %44, i32* %retval, align 4, !dbg !10415
  br label %return, !dbg !10415

if.end28:                                         ; preds = %do.end22
  %45 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485_user.addr, align 8, !dbg !10416
  %46 = bitcast %struct.serial_rs485* %45 to i8*, !dbg !10416
  %47 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10417
  %rs48529 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %47, i32 0, i32 56, !dbg !10418
  %48 = bitcast %struct.serial_rs485* %rs48529 to i8*, !dbg !10419
  store i8* %46, i8** %to.addr.i43, align 8
  store i8* %48, i8** %from.addr.i44, align 8
  store i64 32, i64* %n.addr.i45, align 8
  %49 = load i8*, i8** %from.addr.i44, align 8, !dbg !10420
  %50 = load i64, i64* %n.addr.i45, align 8, !dbg !10420
  store i8* %49, i8** %addr.addr.i.i37, align 8
  store i64 %50, i64* %bytes.addr.i.i38, align 8
  store i8 1, i8* %is_source.addr.i.i39, align 1
  store i32 -1, i32* %sz.i.i40, align 4, !dbg !10291
  %51 = load i32, i32* %sz.i.i40, align 4, !dbg !10421
  %cmp.i.i46 = icmp sge i32 %51, 0, !dbg !10421
  br i1 %cmp.i.i46, label %land.rhs.i.i49, label %land.end.i.i53, !dbg !10421

land.rhs.i.i49:                                   ; preds = %if.end28
  %52 = load i32, i32* %sz.i.i40, align 4, !dbg !10421
  %conv.i.i47 = sext i32 %52 to i64, !dbg !10421
  %53 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10421
  %cmp1.i.i48 = icmp ult i64 %conv.i.i47, %53, !dbg !10421
  br label %land.end.i.i53

land.end.i.i53:                                   ; preds = %land.rhs.i.i49, %if.end28
  %54 = phi i1 [ false, %if.end28 ], [ %cmp1.i.i48, %land.rhs.i.i49 ], !dbg !10422
  %lnot.i.i50 = xor i1 %54, true, !dbg !10421
  %lnot.ext.i.i51 = zext i1 %54 to i32, !dbg !10421
  %conv4.i.i52 = sext i32 %lnot.ext.i.i51 to i64, !dbg !10421
  br i1 %54, label %if.then.i.i54, label %if.end10.i.i69, !dbg !10423

if.then.i.i54:                                    ; preds = %land.end.i.i53
  %55 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10424
  %56 = call i1 @llvm.is.constant.i64(i64 %55) #7, !dbg !10425
  br i1 %56, label %if.else.i.i57, label %if.then5.i.i55, !dbg !10426

if.then5.i.i55:                                   ; preds = %if.then.i.i54
  %57 = load i32, i32* %sz.i.i40, align 4, !dbg !10427
  %58 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10428
  call void @copy_overflow(i32 %57, i64 %58) #11, !dbg !10429
  br label %if.end9.i.i61, !dbg !10429

if.else.i.i57:                                    ; preds = %if.then.i.i54
  %59 = load i8, i8* %is_source.addr.i.i39, align 1, !dbg !10430
  %tobool6.i.i56 = trunc i8 %59 to i1, !dbg !10430
  br i1 %tobool6.i.i56, label %if.then7.i.i58, label %if.else8.i.i59, !dbg !10431

if.then7.i.i58:                                   ; preds = %if.else.i.i57
  call void @__bad_copy_from() #11, !dbg !10432
  br label %if.end.i.i60, !dbg !10432

if.else8.i.i59:                                   ; preds = %if.else.i.i57
  call void @__bad_copy_to() #11, !dbg !10433
  br label %if.end.i.i60

if.end.i.i60:                                     ; preds = %if.else8.i.i59, %if.then7.i.i58
  br label %if.end9.i.i61

if.end9.i.i61:                                    ; preds = %if.end.i.i60, %if.then5.i.i55
  store i1 false, i1* %retval.i.i36, align 1, !dbg !10434
  br label %check_copy_size.exit.i83, !dbg !10434

if.end10.i.i69:                                   ; preds = %land.end.i.i53
  %60 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10292
  %cmp11.i.i62 = icmp ugt i64 %60, 2147483647, !dbg !10292
  %lnot13.i.i63 = xor i1 %cmp11.i.i62, true, !dbg !10292
  %lnot.ext16.i.i64 = zext i1 %cmp11.i.i62 to i32, !dbg !10292
  store i32 %lnot.ext16.i.i64, i32* %__ret_warn_on.i.i41, align 4, !dbg !10292
  %61 = load i32, i32* %__ret_warn_on.i.i41, align 4, !dbg !10435
  %tobool17.i.i65 = icmp ne i32 %61, 0, !dbg !10435
  %lnot18.i.i66 = xor i1 %tobool17.i.i65, true, !dbg !10435
  %lnot.ext21.i.i67 = zext i1 %tobool17.i.i65 to i32, !dbg !10435
  %conv22.i.i68 = sext i32 %lnot.ext21.i.i67 to i64, !dbg !10435
  br i1 %tobool17.i.i65, label %if.then24.i.i70, label %if.end31.i.i76, !dbg !10292

if.then24.i.i70:                                  ; preds = %if.end10.i.i69
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10436, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10437, !srcloc !10260
  br label %if.end31.i.i76, !dbg !10438

if.end31.i.i76:                                   ; preds = %if.then24.i.i70, %if.end10.i.i69
  %62 = load i32, i32* %__ret_warn_on.i.i41, align 4, !dbg !10292
  %tobool32.i.i71 = icmp ne i32 %62, 0, !dbg !10292
  %lnot33.i.i72 = xor i1 %tobool32.i.i71, true, !dbg !10292
  %lnot.ext36.i.i73 = zext i1 %tobool32.i.i71 to i32, !dbg !10292
  %conv37.i.i74 = sext i32 %lnot.ext36.i.i73 to i64, !dbg !10292
  store i64 %conv37.i.i74, i64* %tmp.i.i42, align 8, !dbg !10435
  %63 = load i64, i64* %tmp.i.i42, align 8, !dbg !10292
  %tobool38.i.i75 = icmp ne i64 %63, 0, !dbg !10439
  br i1 %tobool38.i.i75, label %if.then39.i.i77, label %if.end40.i.i79, !dbg !10440

if.then39.i.i77:                                  ; preds = %if.end31.i.i76
  store i1 false, i1* %retval.i.i36, align 1, !dbg !10441
  br label %check_copy_size.exit.i83, !dbg !10441

if.end40.i.i79:                                   ; preds = %if.end31.i.i76
  %64 = load i8*, i8** %addr.addr.i.i37, align 8, !dbg !10442
  %65 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10443
  %66 = load i8, i8* %is_source.addr.i.i39, align 1, !dbg !10444
  %tobool41.i.i78 = trunc i8 %66 to i1, !dbg !10444
  call void @check_object_size(i8* %64, i64 %65, i1 zeroext %tobool41.i.i78) #11, !dbg !10445
  store i1 true, i1* %retval.i.i36, align 1, !dbg !10446
  br label %check_copy_size.exit.i83, !dbg !10446

check_copy_size.exit.i83:                         ; preds = %if.end40.i.i79, %if.then39.i.i77, %if.end9.i.i61
  %67 = load i1, i1* %retval.i.i36, align 1, !dbg !10447
  %lnot.i80 = xor i1 %67, true, !dbg !10420
  %lnot.ext.i81 = zext i1 %67 to i32, !dbg !10420
  %conv.i82 = sext i32 %lnot.ext.i81 to i64, !dbg !10420
  br i1 %67, label %if.then.i85, label %copy_to_user.exit, !dbg !10448

if.then.i85:                                      ; preds = %check_copy_size.exit.i83
  %68 = load i8*, i8** %to.addr.i43, align 8, !dbg !10449
  %69 = load i8*, i8** %from.addr.i44, align 8, !dbg !10450
  %70 = load i64, i64* %n.addr.i45, align 8, !dbg !10451
  %call2.i84 = call i64 @_copy_to_user(i8* %68, i8* %69, i64 %70) #11, !dbg !10452
  store i64 %call2.i84, i64* %n.addr.i45, align 8, !dbg !10453
  br label %copy_to_user.exit, !dbg !10454

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i83, %if.then.i85
  %71 = load i64, i64* %n.addr.i45, align 8, !dbg !10455
  %tobool31 = icmp ne i64 %71, 0, !dbg !10456
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10457

if.then32:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10458
  br label %return, !dbg !10458

if.end33:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !10459
  br label %return, !dbg !10459

return:                                           ; preds = %if.end33, %if.then32, %if.then27, %if.then2, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !10460
  ret i32 %72, !dbg !10460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_set_iso7816_config(%struct.uart_port* %port, %struct.serial_iso7816* %iso7816_user) #0 !dbg !10461 {
entry:
  %retval.i.i40 = alloca i1, align 1
  %addr.addr.i.i41 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i41, metadata !10155, metadata !DIExpression()), !dbg !10462
  %bytes.addr.i.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i42, metadata !10169, metadata !DIExpression()), !dbg !10466
  %is_source.addr.i.i43 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i43, metadata !10171, metadata !DIExpression()), !dbg !10467
  %sz.i.i44 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i44, metadata !10173, metadata !DIExpression()), !dbg !10468
  %__ret_warn_on.i.i45 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i45, metadata !10175, metadata !DIExpression()), !dbg !10469
  %tmp.i.i46 = alloca i64, align 8
  %to.addr.i47 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i47, metadata !10179, metadata !DIExpression()), !dbg !10470
  %from.addr.i48 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i48, metadata !10181, metadata !DIExpression()), !dbg !10471
  %n.addr.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i49, metadata !10183, metadata !DIExpression()), !dbg !10472
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !5559, metadata !DIExpression()), !dbg !10473
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !10475
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !10476
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10155, metadata !DIExpression()), !dbg !10483
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10169, metadata !DIExpression()), !dbg !10487
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10171, metadata !DIExpression()), !dbg !10488
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10173, metadata !DIExpression()), !dbg !10489
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10175, metadata !DIExpression()), !dbg !10490
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10316, metadata !DIExpression()), !dbg !10491
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10318, metadata !DIExpression()), !dbg !10492
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10320, metadata !DIExpression()), !dbg !10493
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %iso7816_user.addr = alloca %struct.serial_iso7816*, align 8
  %iso7816 = alloca %struct.serial_iso7816, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !10494, metadata !DIExpression()), !dbg !10495
  store %struct.serial_iso7816* %iso7816_user, %struct.serial_iso7816** %iso7816_user.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_iso7816** %iso7816_user.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.declare(metadata %struct.serial_iso7816* %iso7816, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10504, metadata !DIExpression()), !dbg !10505
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10506
  %iso7816_config = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 19, !dbg !10508
  %1 = load i32 (%struct.uart_port*, %struct.serial_iso7816*)*, i32 (%struct.uart_port*, %struct.serial_iso7816*)** %iso7816_config, align 8, !dbg !10508
  %tobool = icmp ne i32 (%struct.uart_port*, %struct.serial_iso7816*)* %1, null, !dbg !10506
  br i1 %tobool, label %if.end, label %if.then, !dbg !10509

if.then:                                          ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !10510
  br label %return, !dbg !10510

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.serial_iso7816* %iso7816 to i8*, !dbg !10511
  %3 = load %struct.serial_iso7816*, %struct.serial_iso7816** %iso7816_user.addr, align 8, !dbg !10512
  %4 = bitcast %struct.serial_iso7816* %3 to i8*, !dbg !10512
  store i8* %2, i8** %to.addr.i, align 8
  store i8* %4, i8** %from.addr.i, align 8
  store i64 40, i64* %n.addr.i, align 8
  %5 = load i8*, i8** %to.addr.i, align 8, !dbg !10513
  %6 = load i64, i64* %n.addr.i, align 8, !dbg !10513
  store i8* %5, i8** %addr.addr.i.i, align 8
  store i64 %6, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10489
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !10514
  %cmp.i.i = icmp sge i32 %7, 0, !dbg !10514
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10514

land.rhs.i.i:                                     ; preds = %if.end
  %8 = load i32, i32* %sz.i.i, align 4, !dbg !10514
  %conv.i.i = sext i32 %8 to i64, !dbg !10514
  %9 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10514
  %cmp1.i.i = icmp ult i64 %conv.i.i, %9, !dbg !10514
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10515
  %lnot.i.i = xor i1 %10, true, !dbg !10514
  %lnot.ext.i.i = zext i1 %10 to i32, !dbg !10514
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10514
  br i1 %10, label %if.then.i.i, label %if.end10.i.i, !dbg !10516

if.then.i.i:                                      ; preds = %land.end.i.i
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10517
  %12 = call i1 @llvm.is.constant.i64(i64 %11) #7, !dbg !10518
  br i1 %12, label %if.else.i.i, label %if.then5.i.i, !dbg !10519

if.then5.i.i:                                     ; preds = %if.then.i.i
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !10520
  %14 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10521
  call void @copy_overflow(i32 %13, i64 %14) #11, !dbg !10522
  br label %if.end9.i.i, !dbg !10522

if.else.i.i:                                      ; preds = %if.then.i.i
  %15 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10523
  %tobool6.i.i = trunc i8 %15 to i1, !dbg !10523
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10524

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !10525
  br label %if.end.i.i, !dbg !10525

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !10526
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10527
  br label %check_copy_size.exit.i, !dbg !10527

if.end10.i.i:                                     ; preds = %land.end.i.i
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10490
  %cmp11.i.i = icmp ugt i64 %16, 2147483647, !dbg !10490
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10490
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10490
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10490
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10528
  %tobool17.i.i = icmp ne i32 %17, 0, !dbg !10528
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10528
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10528
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10528
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10490

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10529, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10530, !srcloc !10260
  br label %if.end31.i.i, !dbg !10531

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %18 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10490
  %tobool32.i.i = icmp ne i32 %18, 0, !dbg !10490
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10490
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10490
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10490
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10528
  %19 = load i64, i64* %tmp.i.i, align 8, !dbg !10490
  %tobool38.i.i = icmp ne i64 %19, 0, !dbg !10532
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10533

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10534
  br label %check_copy_size.exit.i, !dbg !10534

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %20 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10535
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10536
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10537
  %tobool41.i.i = trunc i8 %22 to i1, !dbg !10537
  call void @check_object_size(i8* %20, i64 %21, i1 zeroext %tobool41.i.i) #11, !dbg !10538
  store i1 true, i1* %retval.i.i, align 1, !dbg !10539
  br label %check_copy_size.exit.i, !dbg !10539

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %23 = load i1, i1* %retval.i.i, align 1, !dbg !10540
  %lnot.i = xor i1 %23, true, !dbg !10513
  %lnot.ext.i = zext i1 %23 to i32, !dbg !10513
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10513
  br i1 %23, label %if.then.i, label %copy_from_user.exit, !dbg !10541

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !10542
  %25 = load i8*, i8** %from.addr.i, align 8, !dbg !10543
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !10544
  %call2.i = call i64 @_copy_from_user(i8* %24, i8* %25, i64 %26) #11, !dbg !10545
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10546
  br label %copy_from_user.exit, !dbg !10547

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %27 = load i64, i64* %n.addr.i, align 8, !dbg !10548
  %tobool1 = icmp ne i64 %27, 0, !dbg !10549
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10550

if.then2:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10551
  br label %return, !dbg !10551

if.end3:                                          ; preds = %copy_from_user.exit
  store i32 0, i32* %i, align 4, !dbg !10552
  br label %for.cond, !dbg !10554

for.cond:                                         ; preds = %for.inc, %if.end3
  %28 = load i32, i32* %i, align 4, !dbg !10555
  %cmp = icmp slt i32 %28, 5, !dbg !10557
  br i1 %cmp, label %for.body, label %for.end, !dbg !10558

for.body:                                         ; preds = %for.cond
  %reserved = getelementptr inbounds %struct.serial_iso7816, %struct.serial_iso7816* %iso7816, i32 0, i32 5, !dbg !10559
  %29 = load i32, i32* %i, align 4, !dbg !10561
  %idxprom = sext i32 %29 to i64, !dbg !10562
  %arrayidx = getelementptr [5 x i32], [5 x i32]* %reserved, i64 0, i64 %idxprom, !dbg !10562
  %30 = load i32, i32* %arrayidx, align 4, !dbg !10562
  %tobool4 = icmp ne i32 %30, 0, !dbg !10562
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10563

if.then5:                                         ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !10564
  br label %return, !dbg !10564

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !10565

for.inc:                                          ; preds = %if.end6
  %31 = load i32, i32* %i, align 4, !dbg !10566
  %inc = add i32 %31, 1, !dbg !10566
  store i32 %inc, i32* %i, align 4, !dbg !10566
  br label %for.cond, !dbg !10567, !llvm.loop !10568

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !10570

do.body:                                          ; preds = %for.end
  br label %do.body7, !dbg !10571

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10572, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10575, metadata !DIExpression()), !dbg !10574
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !10574
  %conv = zext i1 %cmp8 to i32, !dbg !10574
  store i32 1, i32* %tmp, align 4, !dbg !10574
  %32 = load i32, i32* %tmp, align 4, !dbg !10574
  br label %do.body9, !dbg !10576

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !10577

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !10578

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !10580, metadata !DIExpression()), !dbg !10583
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !10584, metadata !DIExpression()), !dbg !10583
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !10583
  %conv15 = zext i1 %cmp14 to i32, !dbg !10583
  store i32 1, i32* %tmp16, align 4, !dbg !10583
  %33 = load i32, i32* %tmp16, align 4, !dbg !10583
  %call17 = call i64 @arch_local_irq_save() #10, !dbg !10585
  store i64 %call17, i64* %flags, align 8, !dbg !10585
  br label %do.end, !dbg !10585

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !10578

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !10577

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10586, !srcloc !10587
  br label %do.body20, !dbg !10586

do.body20:                                        ; preds = %do.body19
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10588
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 0, !dbg !10588
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10589
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !10590
  %rlock.i = bitcast %union.anon* %36 to %struct.raw_spinlock*, !dbg !10590
  br label %do.end22, !dbg !10588

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !10586

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !10577

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !10576

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !10571

do.end26:                                         ; preds = %do.end25
  %37 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10591
  %iso7816_config27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 19, !dbg !10592
  %38 = load i32 (%struct.uart_port*, %struct.serial_iso7816*)*, i32 (%struct.uart_port*, %struct.serial_iso7816*)** %iso7816_config27, align 8, !dbg !10592
  %39 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10593
  %call28 = call i32 %38(%struct.uart_port* %39, %struct.serial_iso7816* %iso7816) #10, !dbg !10591
  store i32 %call28, i32* %ret, align 4, !dbg !10594
  %40 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10595
  %lock29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %40, i32 0, i32 0, !dbg !10596
  %41 = load i64, i64* %flags, align 8, !dbg !10597
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %41, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10598
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10598
  store i32 1, i32* %tmp.i, align 4, !dbg !10598
  %42 = load i32, i32* %tmp.i, align 4, !dbg !10598
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10599
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10599
  store i32 1, i32* %tmp8.i, align 4, !dbg !10599
  %43 = load i32, i32* %tmp8.i, align 4, !dbg !10599
  %44 = load i64, i64* %flags.addr.i, align 8, !dbg !10600
  call void @arch_local_irq_restore(i64 %44) #11, !dbg !10600
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10601, !srcloc !5691
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !10602
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !10602
  %rlock.i39 = bitcast %union.anon* %46 to %struct.raw_spinlock*, !dbg !10602
  %47 = load i32, i32* %ret, align 4, !dbg !10603
  %tobool30 = icmp ne i32 %47, 0, !dbg !10603
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10605

if.then31:                                        ; preds = %do.end26
  %48 = load i32, i32* %ret, align 4, !dbg !10606
  store i32 %48, i32* %retval, align 4, !dbg !10607
  br label %return, !dbg !10607

if.end32:                                         ; preds = %do.end26
  %49 = load %struct.serial_iso7816*, %struct.serial_iso7816** %iso7816_user.addr, align 8, !dbg !10608
  %50 = bitcast %struct.serial_iso7816* %49 to i8*, !dbg !10608
  %51 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10609
  %iso781633 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %51, i32 0, i32 58, !dbg !10610
  %52 = bitcast %struct.serial_iso7816* %iso781633 to i8*, !dbg !10611
  store i8* %50, i8** %to.addr.i47, align 8
  store i8* %52, i8** %from.addr.i48, align 8
  store i64 40, i64* %n.addr.i49, align 8
  %53 = load i8*, i8** %from.addr.i48, align 8, !dbg !10612
  %54 = load i64, i64* %n.addr.i49, align 8, !dbg !10612
  store i8* %53, i8** %addr.addr.i.i41, align 8
  store i64 %54, i64* %bytes.addr.i.i42, align 8
  store i8 1, i8* %is_source.addr.i.i43, align 1
  store i32 -1, i32* %sz.i.i44, align 4, !dbg !10468
  %55 = load i32, i32* %sz.i.i44, align 4, !dbg !10613
  %cmp.i.i50 = icmp sge i32 %55, 0, !dbg !10613
  br i1 %cmp.i.i50, label %land.rhs.i.i53, label %land.end.i.i57, !dbg !10613

land.rhs.i.i53:                                   ; preds = %if.end32
  %56 = load i32, i32* %sz.i.i44, align 4, !dbg !10613
  %conv.i.i51 = sext i32 %56 to i64, !dbg !10613
  %57 = load i64, i64* %bytes.addr.i.i42, align 8, !dbg !10613
  %cmp1.i.i52 = icmp ult i64 %conv.i.i51, %57, !dbg !10613
  br label %land.end.i.i57

land.end.i.i57:                                   ; preds = %land.rhs.i.i53, %if.end32
  %58 = phi i1 [ false, %if.end32 ], [ %cmp1.i.i52, %land.rhs.i.i53 ], !dbg !10614
  %lnot.i.i54 = xor i1 %58, true, !dbg !10613
  %lnot.ext.i.i55 = zext i1 %58 to i32, !dbg !10613
  %conv4.i.i56 = sext i32 %lnot.ext.i.i55 to i64, !dbg !10613
  br i1 %58, label %if.then.i.i58, label %if.end10.i.i73, !dbg !10615

if.then.i.i58:                                    ; preds = %land.end.i.i57
  %59 = load i64, i64* %bytes.addr.i.i42, align 8, !dbg !10616
  %60 = call i1 @llvm.is.constant.i64(i64 %59) #7, !dbg !10617
  br i1 %60, label %if.else.i.i61, label %if.then5.i.i59, !dbg !10618

if.then5.i.i59:                                   ; preds = %if.then.i.i58
  %61 = load i32, i32* %sz.i.i44, align 4, !dbg !10619
  %62 = load i64, i64* %bytes.addr.i.i42, align 8, !dbg !10620
  call void @copy_overflow(i32 %61, i64 %62) #11, !dbg !10621
  br label %if.end9.i.i65, !dbg !10621

if.else.i.i61:                                    ; preds = %if.then.i.i58
  %63 = load i8, i8* %is_source.addr.i.i43, align 1, !dbg !10622
  %tobool6.i.i60 = trunc i8 %63 to i1, !dbg !10622
  br i1 %tobool6.i.i60, label %if.then7.i.i62, label %if.else8.i.i63, !dbg !10623

if.then7.i.i62:                                   ; preds = %if.else.i.i61
  call void @__bad_copy_from() #11, !dbg !10624
  br label %if.end.i.i64, !dbg !10624

if.else8.i.i63:                                   ; preds = %if.else.i.i61
  call void @__bad_copy_to() #11, !dbg !10625
  br label %if.end.i.i64

if.end.i.i64:                                     ; preds = %if.else8.i.i63, %if.then7.i.i62
  br label %if.end9.i.i65

if.end9.i.i65:                                    ; preds = %if.end.i.i64, %if.then5.i.i59
  store i1 false, i1* %retval.i.i40, align 1, !dbg !10626
  br label %check_copy_size.exit.i87, !dbg !10626

if.end10.i.i73:                                   ; preds = %land.end.i.i57
  %64 = load i64, i64* %bytes.addr.i.i42, align 8, !dbg !10469
  %cmp11.i.i66 = icmp ugt i64 %64, 2147483647, !dbg !10469
  %lnot13.i.i67 = xor i1 %cmp11.i.i66, true, !dbg !10469
  %lnot.ext16.i.i68 = zext i1 %cmp11.i.i66 to i32, !dbg !10469
  store i32 %lnot.ext16.i.i68, i32* %__ret_warn_on.i.i45, align 4, !dbg !10469
  %65 = load i32, i32* %__ret_warn_on.i.i45, align 4, !dbg !10627
  %tobool17.i.i69 = icmp ne i32 %65, 0, !dbg !10627
  %lnot18.i.i70 = xor i1 %tobool17.i.i69, true, !dbg !10627
  %lnot.ext21.i.i71 = zext i1 %tobool17.i.i69 to i32, !dbg !10627
  %conv22.i.i72 = sext i32 %lnot.ext21.i.i71 to i64, !dbg !10627
  br i1 %tobool17.i.i69, label %if.then24.i.i74, label %if.end31.i.i80, !dbg !10469

if.then24.i.i74:                                  ; preds = %if.end10.i.i73
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10628, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10629, !srcloc !10260
  br label %if.end31.i.i80, !dbg !10630

if.end31.i.i80:                                   ; preds = %if.then24.i.i74, %if.end10.i.i73
  %66 = load i32, i32* %__ret_warn_on.i.i45, align 4, !dbg !10469
  %tobool32.i.i75 = icmp ne i32 %66, 0, !dbg !10469
  %lnot33.i.i76 = xor i1 %tobool32.i.i75, true, !dbg !10469
  %lnot.ext36.i.i77 = zext i1 %tobool32.i.i75 to i32, !dbg !10469
  %conv37.i.i78 = sext i32 %lnot.ext36.i.i77 to i64, !dbg !10469
  store i64 %conv37.i.i78, i64* %tmp.i.i46, align 8, !dbg !10627
  %67 = load i64, i64* %tmp.i.i46, align 8, !dbg !10469
  %tobool38.i.i79 = icmp ne i64 %67, 0, !dbg !10631
  br i1 %tobool38.i.i79, label %if.then39.i.i81, label %if.end40.i.i83, !dbg !10632

if.then39.i.i81:                                  ; preds = %if.end31.i.i80
  store i1 false, i1* %retval.i.i40, align 1, !dbg !10633
  br label %check_copy_size.exit.i87, !dbg !10633

if.end40.i.i83:                                   ; preds = %if.end31.i.i80
  %68 = load i8*, i8** %addr.addr.i.i41, align 8, !dbg !10634
  %69 = load i64, i64* %bytes.addr.i.i42, align 8, !dbg !10635
  %70 = load i8, i8* %is_source.addr.i.i43, align 1, !dbg !10636
  %tobool41.i.i82 = trunc i8 %70 to i1, !dbg !10636
  call void @check_object_size(i8* %68, i64 %69, i1 zeroext %tobool41.i.i82) #11, !dbg !10637
  store i1 true, i1* %retval.i.i40, align 1, !dbg !10638
  br label %check_copy_size.exit.i87, !dbg !10638

check_copy_size.exit.i87:                         ; preds = %if.end40.i.i83, %if.then39.i.i81, %if.end9.i.i65
  %71 = load i1, i1* %retval.i.i40, align 1, !dbg !10639
  %lnot.i84 = xor i1 %71, true, !dbg !10612
  %lnot.ext.i85 = zext i1 %71 to i32, !dbg !10612
  %conv.i86 = sext i32 %lnot.ext.i85 to i64, !dbg !10612
  br i1 %71, label %if.then.i89, label %copy_to_user.exit, !dbg !10640

if.then.i89:                                      ; preds = %check_copy_size.exit.i87
  %72 = load i8*, i8** %to.addr.i47, align 8, !dbg !10641
  %73 = load i8*, i8** %from.addr.i48, align 8, !dbg !10642
  %74 = load i64, i64* %n.addr.i49, align 8, !dbg !10643
  %call2.i88 = call i64 @_copy_to_user(i8* %72, i8* %73, i64 %74) #11, !dbg !10644
  store i64 %call2.i88, i64* %n.addr.i49, align 8, !dbg !10645
  br label %copy_to_user.exit, !dbg !10646

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i87, %if.then.i89
  %75 = load i64, i64* %n.addr.i49, align 8, !dbg !10647
  %tobool35 = icmp ne i64 %75, 0, !dbg !10648
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !10649

if.then36:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10650
  br label %return, !dbg !10650

if.end37:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !10651
  br label %return, !dbg !10651

return:                                           ; preds = %if.end37, %if.then36, %if.then31, %if.then5, %if.then2, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !10652
  ret i32 %76, !dbg !10652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_iso7816_config(%struct.uart_port* %port, %struct.serial_iso7816* %iso7816) #0 !dbg !10653 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5559, metadata !DIExpression()), !dbg !10654
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !10656
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10155, metadata !DIExpression()), !dbg !10657
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10169, metadata !DIExpression()), !dbg !10661
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10171, metadata !DIExpression()), !dbg !10662
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10173, metadata !DIExpression()), !dbg !10663
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10175, metadata !DIExpression()), !dbg !10664
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10179, metadata !DIExpression()), !dbg !10665
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10181, metadata !DIExpression()), !dbg !10666
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10183, metadata !DIExpression()), !dbg !10667
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !10668
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %iso7816.addr = alloca %struct.serial_iso7816*, align 8
  %flags = alloca i64, align 8
  %aux = alloca %struct.serial_iso7816, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !10675, metadata !DIExpression()), !dbg !10676
  store %struct.serial_iso7816* %iso7816, %struct.serial_iso7816** %iso7816.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_iso7816** %iso7816.addr, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10679, metadata !DIExpression()), !dbg !10680
  call void @llvm.dbg.declare(metadata %struct.serial_iso7816* %aux, metadata !10681, metadata !DIExpression()), !dbg !10682
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10683
  %iso7816_config = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 19, !dbg !10685
  %1 = load i32 (%struct.uart_port*, %struct.serial_iso7816*)*, i32 (%struct.uart_port*, %struct.serial_iso7816*)** %iso7816_config, align 8, !dbg !10685
  %tobool = icmp ne i32 (%struct.uart_port*, %struct.serial_iso7816*)* %1, null, !dbg !10683
  br i1 %tobool, label %if.end, label %if.then, !dbg !10686

if.then:                                          ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !10687
  br label %return, !dbg !10687

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !10688

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !10689

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10690, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10693, metadata !DIExpression()), !dbg !10692
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10692
  %conv = zext i1 %cmp to i32, !dbg !10692
  store i32 1, i32* %tmp, align 4, !dbg !10692
  %2 = load i32, i32* %tmp, align 4, !dbg !10692
  br label %do.body2, !dbg !10694

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10695

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10696

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10698, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10702, metadata !DIExpression()), !dbg !10701
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10701
  %conv8 = zext i1 %cmp7 to i32, !dbg !10701
  store i32 1, i32* %tmp9, align 4, !dbg !10701
  %3 = load i32, i32* %tmp9, align 4, !dbg !10701
  %call = call i64 @arch_local_irq_save() #10, !dbg !10703
  store i64 %call, i64* %flags, align 8, !dbg !10703
  br label %do.end, !dbg !10703

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10696

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10695

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10704, !srcloc !10705
  br label %do.body12, !dbg !10704

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10706
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !10706
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10707
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !10708
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !10708
  br label %do.end14, !dbg !10706

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10704

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10695

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10694

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10689

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10709
  %iso781619 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 58, !dbg !10710
  %8 = bitcast %struct.serial_iso7816* %aux to i8*, !dbg !10710
  %9 = bitcast %struct.serial_iso7816* %iso781619 to i8*, !dbg !10710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 8 %9, i64 40, i1 false), !dbg !10710
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !10711
  %lock20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 0, !dbg !10712
  %11 = load i64, i64* %flags, align 8, !dbg !10713
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10714
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10714
  store i32 1, i32* %tmp.i, align 4, !dbg !10714
  %12 = load i32, i32* %tmp.i, align 4, !dbg !10714
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10715
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10715
  store i32 1, i32* %tmp8.i, align 4, !dbg !10715
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !10715
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !10716
  call void @arch_local_irq_restore(i64 %14) #11, !dbg !10716
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10717, !srcloc !5691
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10718
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !10718
  %rlock.i26 = bitcast %union.anon* %16 to %struct.raw_spinlock*, !dbg !10718
  %17 = load %struct.serial_iso7816*, %struct.serial_iso7816** %iso7816.addr, align 8, !dbg !10719
  %18 = bitcast %struct.serial_iso7816* %17 to i8*, !dbg !10719
  %19 = bitcast %struct.serial_iso7816* %aux to i8*, !dbg !10720
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %19, i8** %from.addr.i, align 8
  store i64 40, i64* %n.addr.i, align 8
  %20 = load i8*, i8** %from.addr.i, align 8, !dbg !10721
  %21 = load i64, i64* %n.addr.i, align 8, !dbg !10721
  store i8* %20, i8** %addr.addr.i.i, align 8
  store i64 %21, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10663
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !10722
  %cmp.i.i = icmp sge i32 %22, 0, !dbg !10722
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10722

land.rhs.i.i:                                     ; preds = %do.end18
  %23 = load i32, i32* %sz.i.i, align 4, !dbg !10722
  %conv.i.i = sext i32 %23 to i64, !dbg !10722
  %24 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10722
  %cmp1.i.i = icmp ult i64 %conv.i.i, %24, !dbg !10722
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %do.end18
  %25 = phi i1 [ false, %do.end18 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10723
  %lnot.i.i = xor i1 %25, true, !dbg !10722
  %lnot.ext.i.i = zext i1 %25 to i32, !dbg !10722
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10722
  br i1 %25, label %if.then.i.i, label %if.end10.i.i, !dbg !10724

if.then.i.i:                                      ; preds = %land.end.i.i
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10725
  %27 = call i1 @llvm.is.constant.i64(i64 %26) #7, !dbg !10726
  br i1 %27, label %if.else.i.i, label %if.then5.i.i, !dbg !10727

if.then5.i.i:                                     ; preds = %if.then.i.i
  %28 = load i32, i32* %sz.i.i, align 4, !dbg !10728
  %29 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10729
  call void @copy_overflow(i32 %28, i64 %29) #11, !dbg !10730
  br label %if.end9.i.i, !dbg !10730

if.else.i.i:                                      ; preds = %if.then.i.i
  %30 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10731
  %tobool6.i.i = trunc i8 %30 to i1, !dbg !10731
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10732

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #11, !dbg !10733
  br label %if.end.i.i, !dbg !10733

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #11, !dbg !10734
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10735
  br label %check_copy_size.exit.i, !dbg !10735

if.end10.i.i:                                     ; preds = %land.end.i.i
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10664
  %cmp11.i.i = icmp ugt i64 %31, 2147483647, !dbg !10664
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10664
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10664
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10664
  %32 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10736
  %tobool17.i.i = icmp ne i32 %32, 0, !dbg !10736
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10736
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10736
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10736
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10664

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10737, !srcloc !10257
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10738, !srcloc !10260
  br label %if.end31.i.i, !dbg !10739

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %33 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10664
  %tobool32.i.i = icmp ne i32 %33, 0, !dbg !10664
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10664
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10664
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10664
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10736
  %34 = load i64, i64* %tmp.i.i, align 8, !dbg !10664
  %tobool38.i.i = icmp ne i64 %34, 0, !dbg !10740
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10741

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10742
  br label %check_copy_size.exit.i, !dbg !10742

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %35 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10743
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10744
  %37 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10745
  %tobool41.i.i = trunc i8 %37 to i1, !dbg !10745
  call void @check_object_size(i8* %35, i64 %36, i1 zeroext %tobool41.i.i) #11, !dbg !10746
  store i1 true, i1* %retval.i.i, align 1, !dbg !10747
  br label %check_copy_size.exit.i, !dbg !10747

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %38 = load i1, i1* %retval.i.i, align 1, !dbg !10748
  %lnot.i = xor i1 %38, true, !dbg !10721
  %lnot.ext.i = zext i1 %38 to i32, !dbg !10721
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10721
  br i1 %38, label %if.then.i, label %copy_to_user.exit, !dbg !10749

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %39 = load i8*, i8** %to.addr.i, align 8, !dbg !10750
  %40 = load i8*, i8** %from.addr.i, align 8, !dbg !10751
  %41 = load i64, i64* %n.addr.i, align 8, !dbg !10752
  %call2.i = call i64 @_copy_to_user(i8* %39, i8* %40, i64 %41) #11, !dbg !10753
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10754
  br label %copy_to_user.exit, !dbg !10755

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %42 = load i64, i64* %n.addr.i, align 8, !dbg !10756
  %tobool22 = icmp ne i64 %42, 0, !dbg !10757
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !10758

if.then23:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10759
  br label %return, !dbg !10759

if.end24:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !10760
  br label %return, !dbg !10760

return:                                           ; preds = %if.end24, %if.then23, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !10761
  ret i32 %43, !dbg !10761
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_port_users(%struct.tty_port* %port) #0 !dbg !10762 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10763, metadata !DIExpression()), !dbg !10764
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10765
  %count = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 7, !dbg !10766
  %1 = load i32, i32* %count, align 4, !dbg !10766
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10767
  %blocked_open = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 6, !dbg !10768
  %3 = load i32, i32* %blocked_open, align 8, !dbg !10768
  %add = add i32 %1, %3, !dbg !10769
  ret i32 %add, !dbg !10770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_startup(%struct.tty_struct* %tty, %struct.uart_state* %state, i32 %init_hw) #0 !dbg !10771 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %init_hw.addr = alloca i32, align 4
  %port = alloca %struct.tty_port*, align 8
  %retval2 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10774, metadata !DIExpression()), !dbg !10775
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i32 %init_hw, i32* %init_hw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %init_hw.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !10780, metadata !DIExpression()), !dbg !10781
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10782
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %0, i32 0, i32 0, !dbg !10783
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !10781
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !10784, metadata !DIExpression()), !dbg !10785
  %1 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !10786
  %call = call zeroext i1 @tty_port_initialized(%struct.tty_port* %1) #10, !dbg !10788
  br i1 %call, label %if.then, label %if.end, !dbg !10789

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10790
  br label %return, !dbg !10790

if.end:                                           ; preds = %entry
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10791
  %3 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10792
  %4 = load i32, i32* %init_hw.addr, align 4, !dbg !10793
  %call3 = call i32 @uart_port_startup(%struct.tty_struct* %2, %struct.uart_state* %3, i32 %4) #10, !dbg !10794
  store i32 %call3, i32* %retval2, align 4, !dbg !10795
  %5 = load i32, i32* %retval2, align 4, !dbg !10796
  %tobool = icmp ne i32 %5, 0, !dbg !10796
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !10798

if.then4:                                         ; preds = %if.end
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10799
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %6, i32 0, i32 21, !dbg !10800
  call void @set_bit(i64 1, i64* %flags) #10, !dbg !10801
  br label %if.end5, !dbg !10801

if.end5:                                          ; preds = %if.then4, %if.end
  %7 = load i32, i32* %retval2, align 4, !dbg !10802
  store i32 %7, i32* %retval, align 4, !dbg !10803
  br label %return, !dbg !10803

return:                                           ; preds = %if.end5, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10804
  ret i32 %8, !dbg !10804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_port_startup(%struct.tty_struct* %tty, %struct.uart_state* %state, i32 %init_hw) #0 !dbg !10805 {
entry:
  %lock.addr.i76 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i76, metadata !5559, metadata !DIExpression()), !dbg !10806
  %flags.addr.i77 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i77, metadata !5568, metadata !DIExpression()), !dbg !10813
  %tmp.i78 = alloca i32, align 4
  %tmp8.i79 = alloca i32, align 4
  %lock.addr.i74 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i74, metadata !5559, metadata !DIExpression()), !dbg !10814
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5568, metadata !DIExpression()), !dbg !10820
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5570, metadata !DIExpression()), !dbg !10821
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %init_hw.addr = alloca i32, align 4
  %uport = alloca %struct.uart_port*, align 8
  %page = alloca i64, align 8
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__uport = alloca %struct.uart_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %tmp29 = alloca %struct.uart_port*, align 8
  %__uport36 = alloca %struct.uart_port*, align 8
  %__uport41 = alloca %struct.uart_port*, align 8
  %tmp51 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10830, metadata !DIExpression()), !dbg !10831
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  store i32 %init_hw, i32* %init_hw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %init_hw.addr, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !10836, metadata !DIExpression()), !dbg !10837
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10838
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !10839
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !10837
  call void @llvm.dbg.declare(metadata i64* %page, metadata !10840, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10842, metadata !DIExpression()), !dbg !10843
  store i64 0, i64* %flags, align 8, !dbg !10843
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10844, metadata !DIExpression()), !dbg !10845
  store i32 0, i32* %retval1, align 4, !dbg !10845
  %1 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10846
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 38, !dbg !10848
  %2 = load i32, i32* %type, align 4, !dbg !10848
  %cmp = icmp eq i32 %2, 0, !dbg !10849
  br i1 %cmp, label %if.then, label %if.end, !dbg !10850

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10851
  br label %return, !dbg !10851

if.end:                                           ; preds = %entry
  %3 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10852
  call void @uart_change_pm(%struct.uart_state* %3, i32 0) #10, !dbg !10853
  %call2 = call i64 @get_zeroed_page(i32 3264) #10, !dbg !10854
  store i64 %call2, i64* %page, align 8, !dbg !10855
  %4 = load i64, i64* %page, align 8, !dbg !10856
  %tobool = icmp ne i64 %4, 0, !dbg !10856
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !10858

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !10859
  br label %return, !dbg !10859

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport, metadata !10860, metadata !DIExpression()), !dbg !10861
  %5 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10861
  %call5 = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %5) #10, !dbg !10861
  store %struct.uart_port* %call5, %struct.uart_port** %__uport, align 8, !dbg !10861
  %6 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !10862
  %tobool6 = icmp ne %struct.uart_port* %6, null, !dbg !10862
  br i1 %tobool6, label %if.then7, label %if.end28, !dbg !10861

if.then7:                                         ; preds = %if.end4
  br label %do.body, !dbg !10862

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !10863

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10864, metadata !DIExpression()), !dbg !10866
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10867, metadata !DIExpression()), !dbg !10866
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !10866
  %conv = zext i1 %cmp9 to i32, !dbg !10866
  store i32 1, i32* %tmp, align 4, !dbg !10866
  %7 = load i32, i32* %tmp, align 4, !dbg !10866
  br label %do.body10, !dbg !10868

do.body10:                                        ; preds = %do.body8
  br label %do.body11, !dbg !10869

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !10870

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !10872, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !10876, metadata !DIExpression()), !dbg !10875
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !10875
  %conv16 = zext i1 %cmp15 to i32, !dbg !10875
  store i32 1, i32* %tmp17, align 4, !dbg !10875
  %8 = load i32, i32* %tmp17, align 4, !dbg !10875
  %call18 = call i64 @arch_local_irq_save() #10, !dbg !10877
  store i64 %call18, i64* %flags, align 8, !dbg !10877
  br label %do.end, !dbg !10877

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !10870

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !10869

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10878, !srcloc !10879
  br label %do.body21, !dbg !10878

do.body21:                                        ; preds = %do.body20
  %9 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !10880
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 0, !dbg !10880
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10881
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10882
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !10882
  br label %do.end23, !dbg !10880

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !10878

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !10869

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !10868

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !10863

do.end27:                                         ; preds = %do.end26
  br label %if.end28, !dbg !10863

if.end28:                                         ; preds = %do.end27, %if.end4
  %12 = load %struct.uart_port*, %struct.uart_port** %__uport, align 8, !dbg !10861
  store %struct.uart_port* %12, %struct.uart_port** %tmp29, align 8, !dbg !10862
  %13 = load %struct.uart_port*, %struct.uart_port** %tmp29, align 8, !dbg !10861
  %14 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10883
  %xmit = getelementptr inbounds %struct.uart_state, %struct.uart_state* %14, i32 0, i32 2, !dbg !10884
  %buf = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit, i32 0, i32 0, !dbg !10885
  %15 = load i8*, i8** %buf, align 8, !dbg !10885
  %tobool30 = icmp ne i8* %15, null, !dbg !10883
  br i1 %tobool30, label %if.else, label %if.then31, !dbg !10886

if.then31:                                        ; preds = %if.end28
  %16 = load i64, i64* %page, align 8, !dbg !10887
  %17 = inttoptr i64 %16 to i8*, !dbg !10888
  %18 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10889
  %xmit32 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %18, i32 0, i32 2, !dbg !10890
  %buf33 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit32, i32 0, i32 0, !dbg !10891
  store i8* %17, i8** %buf33, align 8, !dbg !10892
  %19 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10893
  %xmit34 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %19, i32 0, i32 2, !dbg !10893
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit34, i32 0, i32 2, !dbg !10893
  store i32 0, i32* %tail, align 4, !dbg !10893
  %20 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10893
  %xmit35 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %20, i32 0, i32 2, !dbg !10893
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %xmit35, i32 0, i32 1, !dbg !10893
  store i32 0, i32* %head, align 8, !dbg !10893
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport36, metadata !10894, metadata !DIExpression()), !dbg !10895
  %21 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10895
  store %struct.uart_port* %21, %struct.uart_port** %__uport36, align 8, !dbg !10895
  %22 = load %struct.uart_port*, %struct.uart_port** %__uport36, align 8, !dbg !10896
  %tobool37 = icmp ne %struct.uart_port* %22, null, !dbg !10896
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !10895

if.then38:                                        ; preds = %if.then31
  %23 = load %struct.uart_port*, %struct.uart_port** %__uport36, align 8, !dbg !10897
  %lock39 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 0, !dbg !10897
  %24 = load i64, i64* %flags, align 8, !dbg !10897
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i74, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10898
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10898
  store i32 1, i32* %tmp.i, align 4, !dbg !10898
  %25 = load i32, i32* %tmp.i, align 4, !dbg !10898
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10899
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10899
  store i32 1, i32* %tmp8.i, align 4, !dbg !10899
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !10899
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !10900
  call void @arch_local_irq_restore(i64 %27) #11, !dbg !10900
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10901, !srcloc !5691
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i74, align 8, !dbg !10902
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !10902
  %rlock.i75 = bitcast %union.anon* %29 to %struct.raw_spinlock*, !dbg !10902
  %30 = load %struct.uart_port*, %struct.uart_port** %__uport36, align 8, !dbg !10897
  call void @uart_port_deref(%struct.uart_port* %30) #10, !dbg !10897
  br label %if.end40, !dbg !10897

if.end40:                                         ; preds = %if.then38, %if.then31
  br label %if.end46, !dbg !10903

if.else:                                          ; preds = %if.end28
  call void @llvm.dbg.declare(metadata %struct.uart_port** %__uport41, metadata !10904, metadata !DIExpression()), !dbg !10905
  %31 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10905
  store %struct.uart_port* %31, %struct.uart_port** %__uport41, align 8, !dbg !10905
  %32 = load %struct.uart_port*, %struct.uart_port** %__uport41, align 8, !dbg !10906
  %tobool42 = icmp ne %struct.uart_port* %32, null, !dbg !10906
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !10905

if.then43:                                        ; preds = %if.else
  %33 = load %struct.uart_port*, %struct.uart_port** %__uport41, align 8, !dbg !10907
  %lock44 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %33, i32 0, i32 0, !dbg !10907
  %34 = load i64, i64* %flags, align 8, !dbg !10907
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i76, align 8
  store i64 %34, i64* %flags.addr.i77, align 8
  call void @llvm.dbg.declare(metadata !277, metadata !5676, metadata !DIExpression()) #7, !dbg !10908
  call void @llvm.dbg.declare(metadata !277, metadata !5680, metadata !DIExpression()) #7, !dbg !10908
  store i32 1, i32* %tmp.i78, align 4, !dbg !10908
  %35 = load i32, i32* %tmp.i78, align 4, !dbg !10908
  call void @llvm.dbg.declare(metadata !277, metadata !5681, metadata !DIExpression()) #7, !dbg !10909
  call void @llvm.dbg.declare(metadata !277, metadata !5687, metadata !DIExpression()) #7, !dbg !10909
  store i32 1, i32* %tmp8.i79, align 4, !dbg !10909
  %36 = load i32, i32* %tmp8.i79, align 4, !dbg !10909
  %37 = load i64, i64* %flags.addr.i77, align 8, !dbg !10910
  call void @arch_local_irq_restore(i64 %37) #11, !dbg !10910
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10911, !srcloc !5691
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i76, align 8, !dbg !10912
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !10912
  %rlock.i80 = bitcast %union.anon* %39 to %struct.raw_spinlock*, !dbg !10912
  %40 = load %struct.uart_port*, %struct.uart_port** %__uport41, align 8, !dbg !10907
  call void @uart_port_deref(%struct.uart_port* %40) #10, !dbg !10907
  br label %if.end45, !dbg !10907

if.end45:                                         ; preds = %if.then43, %if.else
  %41 = load i64, i64* %page, align 8, !dbg !10913
  call void @free_pages(i64 %41, i32 0) #10, !dbg !10913
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end40
  %42 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10914
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %42, i32 0, i32 39, !dbg !10915
  %43 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !10915
  %startup = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %43, i32 0, i32 11, !dbg !10916
  %44 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %startup, align 8, !dbg !10916
  %45 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10917
  %call47 = call i32 %44(%struct.uart_port* %45) #10, !dbg !10914
  store i32 %call47, i32* %retval1, align 4, !dbg !10918
  %46 = load i32, i32* %retval1, align 4, !dbg !10919
  %cmp48 = icmp eq i32 %46, 0, !dbg !10921
  br i1 %cmp48, label %if.then50, label %if.end67, !dbg !10922

if.then50:                                        ; preds = %if.end46
  %47 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10923
  store i32 0, i32* %tmp51, align 4, !dbg !10923
  %48 = load i32, i32* %tmp51, align 4, !dbg !10923
  %tobool52 = icmp ne i32 %48, 0, !dbg !10927
  br i1 %tobool52, label %land.lhs.true, label %if.end59, !dbg !10928

land.lhs.true:                                    ; preds = %if.then50
  %49 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10929
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %49, i32 0, i32 32, !dbg !10930
  %50 = load %struct.console*, %struct.console** %cons, align 8, !dbg !10930
  %cflag = getelementptr inbounds %struct.console, %struct.console* %50, i32 0, i32 10, !dbg !10931
  %51 = load i32, i32* %cflag, align 4, !dbg !10931
  %tobool53 = icmp ne i32 %51, 0, !dbg !10929
  br i1 %tobool53, label %if.then54, label %if.end59, !dbg !10932

if.then54:                                        ; preds = %land.lhs.true
  %52 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10933
  %cons55 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %52, i32 0, i32 32, !dbg !10935
  %53 = load %struct.console*, %struct.console** %cons55, align 8, !dbg !10935
  %cflag56 = getelementptr inbounds %struct.console, %struct.console* %53, i32 0, i32 10, !dbg !10936
  %54 = load i32, i32* %cflag56, align 4, !dbg !10936
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10937
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 15, !dbg !10938
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !10939
  store i32 %54, i32* %c_cflag, align 8, !dbg !10940
  %56 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10941
  %cons57 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %56, i32 0, i32 32, !dbg !10942
  %57 = load %struct.console*, %struct.console** %cons57, align 8, !dbg !10942
  %cflag58 = getelementptr inbounds %struct.console, %struct.console* %57, i32 0, i32 10, !dbg !10943
  store i32 0, i32* %cflag58, align 4, !dbg !10944
  br label %if.end59, !dbg !10945

if.end59:                                         ; preds = %if.then54, %land.lhs.true, %if.then50
  %58 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10946
  %59 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !10947
  call void @uart_change_speed(%struct.tty_struct* %58, %struct.uart_state* %59, %struct.ktermios* null) #10, !dbg !10948
  %60 = load i32, i32* %init_hw.addr, align 4, !dbg !10949
  %tobool60 = icmp ne i32 %60, 0, !dbg !10949
  br i1 %tobool60, label %land.lhs.true61, label %if.end66, !dbg !10951

land.lhs.true61:                                  ; preds = %if.end59
  %61 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10952
  %termios62 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %61, i32 0, i32 15, !dbg !10952
  %c_cflag63 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios62, i32 0, i32 2, !dbg !10952
  %62 = load i32, i32* %c_cflag63, align 8, !dbg !10952
  %and = and i32 %62, 4111, !dbg !10952
  %tobool64 = icmp ne i32 %and, 0, !dbg !10952
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !10953

if.then65:                                        ; preds = %land.lhs.true61
  %63 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10954
  call void @uart_port_dtr_rts(%struct.uart_port* %63, i32 1) #10, !dbg !10955
  br label %if.end66, !dbg !10955

if.end66:                                         ; preds = %if.then65, %land.lhs.true61, %if.end59
  br label %if.end67, !dbg !10956

if.end67:                                         ; preds = %if.end66, %if.end46
  %64 = load i32, i32* %retval1, align 4, !dbg !10957
  %tobool68 = icmp ne i32 %64, 0, !dbg !10957
  br i1 %tobool68, label %land.lhs.true69, label %if.end73, !dbg !10959

land.lhs.true69:                                  ; preds = %if.end67
  %call70 = call zeroext i1 @capable(i32 21) #10, !dbg !10960
  br i1 %call70, label %if.then72, label %if.end73, !dbg !10961

if.then72:                                        ; preds = %land.lhs.true69
  store i32 1, i32* %retval, align 4, !dbg !10962
  br label %return, !dbg !10962

if.end73:                                         ; preds = %land.lhs.true69, %if.end67
  %65 = load i32, i32* %retval1, align 4, !dbg !10963
  store i32 %65, i32* %retval, align 4, !dbg !10964
  br label %return, !dbg !10964

return:                                           ; preds = %if.end73, %if.then72, %if.then3, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !10965
  ret i32 %66, !dbg !10965
}

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_enable_ms(%struct.uart_port* %uport) #0 !dbg !10966 {
entry:
  %uport.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %uport, %struct.uart_port** %uport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport.addr, metadata !10967, metadata !DIExpression()), !dbg !10968
  %0 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !10969
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 39, !dbg !10971
  %1 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !10971
  %enable_ms = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %1, i32 0, i32 9, !dbg !10972
  %enable_ms1 = bitcast {}** %enable_ms to void (%struct.uart_port*)**, !dbg !10972
  %2 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %enable_ms1, align 8, !dbg !10972
  %tobool = icmp ne void (%struct.uart_port*)* %2, null, !dbg !10969
  br i1 %tobool, label %if.then, label %if.end, !dbg !10973

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !10974
  %ops2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 39, !dbg !10975
  %4 = load %struct.uart_ops*, %struct.uart_ops** %ops2, align 8, !dbg !10975
  %enable_ms3 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %4, i32 0, i32 9, !dbg !10976
  %enable_ms4 = bitcast {}** %enable_ms3 to void (%struct.uart_port*)**, !dbg !10976
  %5 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %enable_ms4, align 8, !dbg !10976
  %6 = load %struct.uart_port*, %struct.uart_port** %uport.addr, align 8, !dbg !10977
  call void %5(%struct.uart_port* %6) #10, !dbg !10974
  br label %if.end, !dbg !10974

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10978
}

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #0 !dbg !10979 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !10982, metadata !DIExpression()), !dbg !10983
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !10984
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #10, !dbg !10984
  %tobool = icmp ne i32 %call, 0, !dbg !10984
  %lnot = xor i1 %tobool, true, !dbg !10984
  %lnot1 = xor i1 %lnot, true, !dbg !10984
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10984
  %conv = sext i32 %lnot.ext to i64, !dbg !10984
  %conv2 = trunc i64 %conv to i32, !dbg !10984
  ret i32 %conv2, !dbg !10985
}

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #0 !dbg !10986 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !10989, metadata !DIExpression()), !dbg !10990
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10991, metadata !DIExpression()), !dbg !10992
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !10993
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #10, !dbg !10994
  %1 = load i32, i32* %flag.addr, align 4, !dbg !10995
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #10, !dbg !10996
  ret i32 %call1, !dbg !10997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #0 !dbg !10998 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  %0 = load i32, i32* %flag.addr, align 4, !dbg !11006
  %conv = sext i32 %0 to i64, !dbg !11006
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !11007
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !11008
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #10, !dbg !11009
  %conv1 = zext i1 %call to i32, !dbg !11009
  ret i32 %conv1, !dbg !11010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #0 !dbg !11011 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !11014, metadata !DIExpression()), !dbg !11015
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !11016
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !11017
  ret %struct.thread_info* %thread_info, !dbg !11018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !11019 {
entry:
  ret void, !dbg !11021
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !11022 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11029, metadata !DIExpression()), !dbg !11031
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11031
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !11032
  %tobool = icmp ne i32 %0, 0, !dbg !11032
  %lnot = xor i1 %tobool, true, !dbg !11032
  %lnot1 = xor i1 %lnot, true, !dbg !11032
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11032
  %conv = sext i32 %lnot.ext to i64, !dbg !11032
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11032
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11031

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11032

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !11034

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11036

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !11034
  %2 = load i64, i64* %count.addr, align 8, !dbg !11034
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !11034
  br label %do.body4, !dbg !11034

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !11038

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !11040

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11038

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 134, i32 2313, i64 12) #7, !dbg !11042, !srcloc !11044
  br label %do.end8, !dbg !11042

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #7, !dbg !11045, !srcloc !11047
  br label %do.body9, !dbg !11038

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !11048

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !11038

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !11034

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11050

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11034

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11034

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11031
  %tobool15 = icmp ne i32 %3, 0, !dbg !11031
  %lnot16 = xor i1 %tobool15, true, !dbg !11031
  %lnot18 = xor i1 %lnot16, true, !dbg !11031
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11031
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11031
  store i64 %conv20, i64* %tmp, align 8, !dbg !11032
  %4 = load i64, i64* %tmp, align 8, !dbg !11031
  ret void, !dbg !11052
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !11053 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11056, metadata !DIExpression()), !dbg !11057
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  ret void, !dbg !11062
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_throttled(%struct.tty_struct* %tty) #0 !dbg !11063 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11066
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !11067
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #10, !dbg !11068
  ret i1 %call, !dbg !11069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_active(%struct.tty_port* %port) #0 !dbg !11070 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11073
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !11074
  %call = call zeroext i1 @test_bit(i64 2, i64* %iflags) #10, !dbg !11075
  ret i1 %call, !dbg !11076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_active(%struct.tty_port* %port, i1 zeroext %val) #0 !dbg !11077 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !11080, metadata !DIExpression()), !dbg !11081
  %0 = load i8, i8* %val.addr, align 1, !dbg !11082
  %tobool = trunc i8 %0 to i1, !dbg !11082
  br i1 %tobool, label %if.then, label %if.else, !dbg !11084

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11085
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !11086
  call void @set_bit(i64 2, i64* %iflags) #10, !dbg !11087
  br label %if.end, !dbg !11087

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11088
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !11089
  call void @clear_bit(i64 2, i64* %iflags1) #10, !dbg !11090
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11091
}

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_set(%struct.tty_port*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i64 @msleep_interruptible(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_msecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_get_info(%struct.tty_port* %port, %struct.serial_struct* %retinfo) #0 !dbg !11092 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %retinfo.addr = alloca %struct.serial_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11095, metadata !DIExpression()), !dbg !11096
  store %struct.serial_struct* %retinfo, %struct.serial_struct** %retinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %retinfo.addr, metadata !11097, metadata !DIExpression()), !dbg !11098
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !11099, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11101, metadata !DIExpression()), !dbg !11103
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11103
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !11103
  store i8* %1, i8** %__mptr, align 8, !dbg !11103
  br label %do.body, !dbg !11103

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11104

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11103
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11103
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !11103
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !11104
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !11103
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !11100
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !11106, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11108, metadata !DIExpression()), !dbg !11109
  store i32 -19, i32* %ret, align 4, !dbg !11109
  %5 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11110
  %6 = bitcast %struct.serial_struct* %5 to i8*, !dbg !11111
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 72, i1 false), !dbg !11111
  %7 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11112
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %7, i32 0, i32 13, !dbg !11113
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !11114
  %8 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11115
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %8) #10, !dbg !11116
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !11117
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11118
  %tobool = icmp ne %struct.uart_port* %9, null, !dbg !11118
  br i1 %tobool, label %if.end, label %if.then, !dbg !11120

if.then:                                          ; preds = %do.end
  br label %out, !dbg !11121

if.end:                                           ; preds = %do.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11122
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 38, !dbg !11123
  %11 = load i32, i32* %type, align 4, !dbg !11123
  %12 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11124
  %type1 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %12, i32 0, i32 0, !dbg !11125
  store i32 %11, i32* %type1, align 8, !dbg !11126
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11127
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 41, !dbg !11128
  %14 = load i32, i32* %line, align 4, !dbg !11128
  %15 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11129
  %line2 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %15, i32 0, i32 1, !dbg !11130
  store i32 %14, i32* %line2, align 4, !dbg !11131
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11132
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 1, !dbg !11133
  %17 = load i64, i64* %iobase, align 8, !dbg !11133
  %conv = trunc i64 %17 to i32, !dbg !11132
  %18 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11134
  %port3 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %18, i32 0, i32 2, !dbg !11135
  store i32 %conv, i32* %port3, align 8, !dbg !11136
  %19 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11137
  %iobase4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 1, !dbg !11139
  %20 = load i64, i64* %iobase4, align 8, !dbg !11139
  %shr = ashr i64 %20, 32, !dbg !11140
  %conv5 = trunc i64 %shr to i32, !dbg !11141
  %21 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11142
  %port_high = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %21, i32 0, i32 16, !dbg !11143
  store i32 %conv5, i32* %port_high, align 4, !dbg !11144
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11145
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 20, !dbg !11146
  %23 = load i32, i32* %irq, align 8, !dbg !11146
  %24 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11147
  %irq6 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %24, i32 0, i32 3, !dbg !11148
  store i32 %23, i32* %irq6, align 4, !dbg !11149
  %25 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11150
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %25, i32 0, i32 33, !dbg !11151
  %26 = load i32, i32* %flags, align 8, !dbg !11151
  %27 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11152
  %flags7 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %27, i32 0, i32 4, !dbg !11153
  store i32 %26, i32* %flags7, align 8, !dbg !11154
  %28 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11155
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %28, i32 0, i32 23, !dbg !11156
  %29 = load i32, i32* %fifosize, align 4, !dbg !11156
  %30 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11157
  %xmit_fifo_size = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %30, i32 0, i32 5, !dbg !11158
  store i32 %29, i32* %xmit_fifo_size, align 4, !dbg !11159
  %31 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11160
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %31, i32 0, i32 22, !dbg !11161
  %32 = load i32, i32* %uartclk, align 8, !dbg !11161
  %div = udiv i32 %32, 16, !dbg !11162
  %33 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11163
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %33, i32 0, i32 7, !dbg !11164
  store i32 %div, i32* %baud_base, align 4, !dbg !11165
  %34 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11166
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %34, i32 0, i32 16, !dbg !11167
  %35 = load i32, i32* %close_delay, align 8, !dbg !11167
  %conv8 = zext i32 %35 to i64, !dbg !11166
  %call9 = call i32 @jiffies_to_msecs(i64 %conv8) #10, !dbg !11168
  %div10 = udiv i32 %call9, 10, !dbg !11169
  %conv11 = trunc i32 %div10 to i16, !dbg !11168
  %36 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11170
  %close_delay12 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %36, i32 0, i32 8, !dbg !11171
  store i16 %conv11, i16* %close_delay12, align 8, !dbg !11172
  %37 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11173
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %37, i32 0, i32 17, !dbg !11174
  %38 = load i32, i32* %closing_wait, align 4, !dbg !11174
  %cmp = icmp eq i32 %38, 65535, !dbg !11175
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11173

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !11173

cond.false:                                       ; preds = %if.end
  %39 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11176
  %closing_wait14 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %39, i32 0, i32 17, !dbg !11177
  %40 = load i32, i32* %closing_wait14, align 4, !dbg !11177
  %conv15 = zext i32 %40 to i64, !dbg !11176
  %call16 = call i32 @jiffies_to_msecs(i64 %conv15) #10, !dbg !11178
  %div17 = udiv i32 %call16, 10, !dbg !11179
  br label %cond.end, !dbg !11173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 65535, %cond.true ], [ %div17, %cond.false ], !dbg !11173
  %conv18 = trunc i32 %cond to i16, !dbg !11173
  %41 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11180
  %closing_wait19 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %41, i32 0, i32 12, !dbg !11181
  store i16 %conv18, i16* %closing_wait19, align 8, !dbg !11182
  %42 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11183
  %custom_divisor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %42, i32 0, i32 40, !dbg !11184
  %43 = load i32, i32* %custom_divisor, align 8, !dbg !11184
  %44 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11185
  %custom_divisor20 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %44, i32 0, i32 6, !dbg !11186
  store i32 %43, i32* %custom_divisor20, align 8, !dbg !11187
  %45 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11188
  %hub6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %45, i32 0, i32 50, !dbg !11189
  %46 = load i8, i8* %hub6, align 2, !dbg !11189
  %conv21 = zext i8 %46 to i32, !dbg !11188
  %47 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11190
  %hub622 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %47, i32 0, i32 11, !dbg !11191
  store i32 %conv21, i32* %hub622, align 4, !dbg !11192
  %48 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11193
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %48, i32 0, i32 26, !dbg !11194
  %49 = load i8, i8* %iotype, align 2, !dbg !11194
  %50 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11195
  %io_type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %50, i32 0, i32 9, !dbg !11196
  store i8 %49, i8* %io_type, align 2, !dbg !11197
  %51 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11198
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %51, i32 0, i32 25, !dbg !11199
  %52 = load i8, i8* %regshift, align 1, !dbg !11199
  %conv23 = zext i8 %52 to i16, !dbg !11198
  %53 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11200
  %iomem_reg_shift = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %53, i32 0, i32 15, !dbg !11201
  store i16 %conv23, i16* %iomem_reg_shift, align 8, !dbg !11202
  %54 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11203
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %54, i32 0, i32 43, !dbg !11204
  %55 = load i64, i64* %mapbase, align 8, !dbg !11204
  %56 = inttoptr i64 %55 to i8*, !dbg !11205
  %57 = load %struct.serial_struct*, %struct.serial_struct** %retinfo.addr, align 8, !dbg !11206
  %iomem_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %57, i32 0, i32 14, !dbg !11207
  store i8* %56, i8** %iomem_base, align 8, !dbg !11208
  store i32 0, i32* %ret, align 4, !dbg !11209
  br label %out, !dbg !11210

out:                                              ; preds = %cond.end, %if.then
  call void @llvm.dbg.label(metadata !11211), !dbg !11212
  %58 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11213
  %mutex24 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %58, i32 0, i32 13, !dbg !11214
  call void @mutex_unlock(%struct.mutex* %mutex24) #10, !dbg !11215
  %59 = load i32, i32* %ret, align 4, !dbg !11216
  ret i32 %59, !dbg !11217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_set_info(%struct.tty_struct* %tty, %struct.tty_port* %port, %struct.uart_state* %state, %struct.serial_struct* %new_info) #0 !dbg !4532 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9364, metadata !DIExpression()), !dbg !11218
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9374, metadata !DIExpression()), !dbg !11228
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9377, metadata !DIExpression()), !dbg !11229
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval.i270 = alloca i64, align 8
  %m.addr.i271 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i271, metadata !11230, metadata !DIExpression()), !dbg !11235
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !11230, metadata !DIExpression()), !dbg !11237
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %port.addr = alloca %struct.tty_port*, align 8
  %state.addr = alloca %struct.uart_state*, align 8
  %new_info.addr = alloca %struct.serial_struct*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %new_port = alloca i64, align 8
  %change_irq = alloca i32, align 4
  %change_port = alloca i32, align 4
  %closing_wait = alloca i32, align 4
  %old_custom_divisor = alloca i32, align 4
  %close_delay = alloca i32, align 4
  %old_flags = alloca i32, align 4
  %new_flags = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %old_iobase = alloca i64, align 8
  %old_mapbase = alloca i64, align 8
  %old_type = alloca i32, align 4
  %old_iotype = alloca i32, align 4
  %old_hub6 = alloca i32, align 4
  %old_shift = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11239, metadata !DIExpression()), !dbg !11240
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11241, metadata !DIExpression()), !dbg !11242
  store %struct.uart_state* %state, %struct.uart_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state.addr, metadata !11243, metadata !DIExpression()), !dbg !11244
  store %struct.serial_struct* %new_info, %struct.serial_struct** %new_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %new_info.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !11247, metadata !DIExpression()), !dbg !11248
  %0 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !11249
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %0) #10, !dbg !11250
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !11248
  call void @llvm.dbg.declare(metadata i64* %new_port, metadata !11251, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.declare(metadata i32* %change_irq, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata i32* %change_port, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata i32* %closing_wait, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata i32* %old_custom_divisor, metadata !11259, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.declare(metadata i32* %close_delay, metadata !11261, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.declare(metadata i32* %old_flags, metadata !11263, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.declare(metadata i32* %new_flags, metadata !11265, metadata !DIExpression()), !dbg !11266
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11267, metadata !DIExpression()), !dbg !11268
  store i32 0, i32* %retval1, align 4, !dbg !11268
  %1 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11269
  %tobool = icmp ne %struct.uart_port* %1, null, !dbg !11269
  br i1 %tobool, label %if.end, label %if.then, !dbg !11271

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !11272
  br label %return, !dbg !11272

if.end:                                           ; preds = %entry
  %2 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11273
  %port2 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %2, i32 0, i32 2, !dbg !11274
  %3 = load i32, i32* %port2, align 8, !dbg !11274
  %conv = zext i32 %3 to i64, !dbg !11273
  store i64 %conv, i64* %new_port, align 8, !dbg !11275
  %4 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11276
  %port_high = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %4, i32 0, i32 16, !dbg !11278
  %5 = load i32, i32* %port_high, align 4, !dbg !11278
  %conv3 = zext i32 %5 to i64, !dbg !11279
  %shl = shl i64 %conv3, 32, !dbg !11280
  %6 = load i64, i64* %new_port, align 8, !dbg !11281
  %add = add i64 %6, %shl, !dbg !11281
  store i64 %add, i64* %new_port, align 8, !dbg !11281
  %7 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11282
  %irq = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %7, i32 0, i32 3, !dbg !11283
  %8 = load i32, i32* %irq, align 4, !dbg !11283
  %call4 = call i32 @irq_canonicalize(i32 %8) #10, !dbg !11284
  %9 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11285
  %irq5 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %9, i32 0, i32 3, !dbg !11286
  store i32 %call4, i32* %irq5, align 4, !dbg !11287
  %10 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11288
  %close_delay6 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %10, i32 0, i32 8, !dbg !11289
  %11 = load i16, i16* %close_delay6, align 8, !dbg !11289
  %conv7 = zext i16 %11 to i32, !dbg !11288
  %mul = mul i32 %conv7, 10, !dbg !11290
  store i32 %mul, i32* %m.addr.i, align 4
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !11291
  %13 = call i1 @llvm.is.constant.i32(i32 %12) #7, !dbg !11293
  br i1 %13, label %if.then.i, label %if.else.i, !dbg !11294

if.then.i:                                        ; preds = %if.end
  %14 = load i32, i32* %m.addr.i, align 4, !dbg !11295
  %cmp.i = icmp slt i32 %14, 0, !dbg !11298
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11299

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11300
  br label %msecs_to_jiffies.exit, !dbg !11300

if.end.i:                                         ; preds = %if.then.i
  %15 = load i32, i32* %m.addr.i, align 4, !dbg !11301
  %call.i = call i64 @_msecs_to_jiffies(i32 %15) #11, !dbg !11302
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11303
  br label %msecs_to_jiffies.exit, !dbg !11303

if.else.i:                                        ; preds = %if.end
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !11304
  %call2.i = call i64 @__msecs_to_jiffies(i32 %16) #11, !dbg !11306
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11307
  br label %msecs_to_jiffies.exit, !dbg !11307

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %17 = load i64, i64* %retval.i, align 8, !dbg !11308
  %conv9 = trunc i64 %17 to i32, !dbg !11309
  store i32 %conv9, i32* %close_delay, align 4, !dbg !11310
  %18 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11311
  %closing_wait10 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %18, i32 0, i32 12, !dbg !11312
  %19 = load i16, i16* %closing_wait10, align 8, !dbg !11312
  %conv11 = zext i16 %19 to i32, !dbg !11311
  %cmp = icmp eq i32 %conv11, 65535, !dbg !11313
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11311

cond.true:                                        ; preds = %msecs_to_jiffies.exit
  br label %cond.end, !dbg !11311

cond.false:                                       ; preds = %msecs_to_jiffies.exit
  %20 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11314
  %closing_wait13 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %20, i32 0, i32 12, !dbg !11315
  %21 = load i16, i16* %closing_wait13, align 8, !dbg !11315
  %conv14 = zext i16 %21 to i32, !dbg !11314
  %mul15 = mul i32 %conv14, 10, !dbg !11316
  store i32 %mul15, i32* %m.addr.i271, align 4
  %22 = load i32, i32* %m.addr.i271, align 4, !dbg !11317
  %23 = call i1 @llvm.is.constant.i32(i32 %22) #7, !dbg !11318
  br i1 %23, label %if.then.i273, label %if.else.i278, !dbg !11319

if.then.i273:                                     ; preds = %cond.false
  %24 = load i32, i32* %m.addr.i271, align 4, !dbg !11320
  %cmp.i272 = icmp slt i32 %24, 0, !dbg !11321
  br i1 %cmp.i272, label %if.then1.i274, label %if.end.i276, !dbg !11322

if.then1.i274:                                    ; preds = %if.then.i273
  store i64 4611686018427387902, i64* %retval.i270, align 8, !dbg !11323
  br label %msecs_to_jiffies.exit279, !dbg !11323

if.end.i276:                                      ; preds = %if.then.i273
  %25 = load i32, i32* %m.addr.i271, align 4, !dbg !11324
  %call.i275 = call i64 @_msecs_to_jiffies(i32 %25) #11, !dbg !11325
  store i64 %call.i275, i64* %retval.i270, align 8, !dbg !11326
  br label %msecs_to_jiffies.exit279, !dbg !11326

if.else.i278:                                     ; preds = %cond.false
  %26 = load i32, i32* %m.addr.i271, align 4, !dbg !11327
  %call2.i277 = call i64 @__msecs_to_jiffies(i32 %26) #11, !dbg !11328
  store i64 %call2.i277, i64* %retval.i270, align 8, !dbg !11329
  br label %msecs_to_jiffies.exit279, !dbg !11329

msecs_to_jiffies.exit279:                         ; preds = %if.then1.i274, %if.end.i276, %if.else.i278
  %27 = load i64, i64* %retval.i270, align 8, !dbg !11330
  br label %cond.end, !dbg !11311

cond.end:                                         ; preds = %msecs_to_jiffies.exit279, %cond.true
  %cond = phi i64 [ 65535, %cond.true ], [ %27, %msecs_to_jiffies.exit279 ], !dbg !11311
  %conv17 = trunc i64 %cond to i32, !dbg !11311
  store i32 %conv17, i32* %closing_wait, align 4, !dbg !11331
  %28 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11332
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %28, i32 0, i32 33, !dbg !11333
  %29 = load i32, i32* %flags, align 8, !dbg !11333
  %and = and i32 %29, 536870912, !dbg !11334
  %tobool18 = icmp ne i32 %and, 0, !dbg !11334
  br i1 %tobool18, label %land.end, label %land.rhs, !dbg !11335

land.rhs:                                         ; preds = %cond.end
  %30 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11336
  %irq19 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %30, i32 0, i32 3, !dbg !11337
  %31 = load i32, i32* %irq19, align 4, !dbg !11337
  %32 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11338
  %irq20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %32, i32 0, i32 20, !dbg !11339
  %33 = load i32, i32* %irq20, align 8, !dbg !11339
  %cmp21 = icmp ne i32 %31, %33, !dbg !11340
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %34 = phi i1 [ false, %cond.end ], [ %cmp21, %land.rhs ], !dbg !11341
  %land.ext = zext i1 %34 to i32, !dbg !11335
  store i32 %land.ext, i32* %change_irq, align 4, !dbg !11342
  %35 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11343
  %flags23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %35, i32 0, i32 33, !dbg !11344
  %36 = load i32, i32* %flags23, align 8, !dbg !11344
  %and24 = and i32 %36, 536870912, !dbg !11345
  %tobool25 = icmp ne i32 %and24, 0, !dbg !11345
  br i1 %tobool25, label %land.end49, label %land.rhs26, !dbg !11346

land.rhs26:                                       ; preds = %land.end
  %37 = load i64, i64* %new_port, align 8, !dbg !11347
  %38 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11348
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %38, i32 0, i32 1, !dbg !11349
  %39 = load i64, i64* %iobase, align 8, !dbg !11349
  %cmp27 = icmp ne i64 %37, %39, !dbg !11350
  br i1 %cmp27, label %lor.end, label %lor.lhs.false, !dbg !11351

lor.lhs.false:                                    ; preds = %land.rhs26
  %40 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11352
  %iomem_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %40, i32 0, i32 14, !dbg !11353
  %41 = load i8*, i8** %iomem_base, align 8, !dbg !11353
  %42 = ptrtoint i8* %41 to i64, !dbg !11354
  %43 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11355
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %43, i32 0, i32 43, !dbg !11356
  %44 = load i64, i64* %mapbase, align 8, !dbg !11356
  %cmp29 = icmp ne i64 %42, %44, !dbg !11357
  br i1 %cmp29, label %lor.end, label %lor.lhs.false31, !dbg !11358

lor.lhs.false31:                                  ; preds = %lor.lhs.false
  %45 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11359
  %hub6 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %45, i32 0, i32 11, !dbg !11360
  %46 = load i32, i32* %hub6, align 4, !dbg !11360
  %47 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11361
  %hub632 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %47, i32 0, i32 50, !dbg !11362
  %48 = load i8, i8* %hub632, align 2, !dbg !11362
  %conv33 = zext i8 %48 to i32, !dbg !11361
  %cmp34 = icmp ne i32 %46, %conv33, !dbg !11363
  br i1 %cmp34, label %lor.end, label %lor.lhs.false36, !dbg !11364

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %49 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11365
  %io_type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %49, i32 0, i32 9, !dbg !11366
  %50 = load i8, i8* %io_type, align 2, !dbg !11366
  %conv37 = sext i8 %50 to i32, !dbg !11365
  %51 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11367
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %51, i32 0, i32 26, !dbg !11368
  %52 = load i8, i8* %iotype, align 2, !dbg !11368
  %conv38 = zext i8 %52 to i32, !dbg !11367
  %cmp39 = icmp ne i32 %conv37, %conv38, !dbg !11369
  br i1 %cmp39, label %lor.end, label %lor.lhs.false41, !dbg !11370

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %53 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11371
  %iomem_reg_shift = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %53, i32 0, i32 15, !dbg !11372
  %54 = load i16, i16* %iomem_reg_shift, align 8, !dbg !11372
  %conv42 = zext i16 %54 to i32, !dbg !11371
  %55 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11373
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %55, i32 0, i32 25, !dbg !11374
  %56 = load i8, i8* %regshift, align 1, !dbg !11374
  %conv43 = zext i8 %56 to i32, !dbg !11373
  %cmp44 = icmp ne i32 %conv42, %conv43, !dbg !11375
  br i1 %cmp44, label %lor.end, label %lor.rhs, !dbg !11376

lor.rhs:                                          ; preds = %lor.lhs.false41
  %57 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11377
  %type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %57, i32 0, i32 0, !dbg !11378
  %58 = load i32, i32* %type, align 8, !dbg !11378
  %59 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11379
  %type46 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %59, i32 0, i32 38, !dbg !11380
  %60 = load i32, i32* %type46, align 4, !dbg !11380
  %cmp47 = icmp ne i32 %58, %60, !dbg !11381
  br label %lor.end, !dbg !11376

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false41, %lor.lhs.false36, %lor.lhs.false31, %lor.lhs.false, %land.rhs26
  %61 = phi i1 [ true, %lor.lhs.false41 ], [ true, %lor.lhs.false36 ], [ true, %lor.lhs.false31 ], [ true, %lor.lhs.false ], [ true, %land.rhs26 ], [ %cmp47, %lor.rhs ]
  br label %land.end49

land.end49:                                       ; preds = %lor.end, %land.end
  %62 = phi i1 [ false, %land.end ], [ %61, %lor.end ], !dbg !11341
  %land.ext50 = zext i1 %62 to i32, !dbg !11346
  store i32 %land.ext50, i32* %change_port, align 4, !dbg !11382
  %63 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11383
  %flags51 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %63, i32 0, i32 33, !dbg !11384
  %64 = load i32, i32* %flags51, align 8, !dbg !11384
  store i32 %64, i32* %old_flags, align 4, !dbg !11385
  %65 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11386
  %flags52 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %65, i32 0, i32 4, !dbg !11387
  %66 = load i32, i32* %flags52, align 8, !dbg !11387
  store i32 %66, i32* %new_flags, align 4, !dbg !11388
  %67 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11389
  %custom_divisor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %67, i32 0, i32 40, !dbg !11390
  %68 = load i32, i32* %custom_divisor, align 8, !dbg !11390
  store i32 %68, i32* %old_custom_divisor, align 4, !dbg !11391
  %call53 = call zeroext i1 @capable(i32 21) #10, !dbg !11392
  br i1 %call53, label %if.end86, label %if.then54, !dbg !11394

if.then54:                                        ; preds = %land.end49
  store i32 -1, i32* %retval1, align 4, !dbg !11395
  %69 = load i32, i32* %change_irq, align 4, !dbg !11397
  %tobool55 = icmp ne i32 %69, 0, !dbg !11397
  br i1 %tobool55, label %if.then78, label %lor.lhs.false56, !dbg !11399

lor.lhs.false56:                                  ; preds = %if.then54
  %70 = load i32, i32* %change_port, align 4, !dbg !11400
  %tobool57 = icmp ne i32 %70, 0, !dbg !11400
  br i1 %tobool57, label %if.then78, label %lor.lhs.false58, !dbg !11401

lor.lhs.false58:                                  ; preds = %lor.lhs.false56
  %71 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11402
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %71, i32 0, i32 7, !dbg !11403
  %72 = load i32, i32* %baud_base, align 4, !dbg !11403
  %73 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11404
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %73, i32 0, i32 22, !dbg !11405
  %74 = load i32, i32* %uartclk, align 8, !dbg !11405
  %div = udiv i32 %74, 16, !dbg !11406
  %cmp59 = icmp ne i32 %72, %div, !dbg !11407
  br i1 %cmp59, label %if.then78, label %lor.lhs.false61, !dbg !11408

lor.lhs.false61:                                  ; preds = %lor.lhs.false58
  %75 = load i32, i32* %close_delay, align 4, !dbg !11409
  %76 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11410
  %close_delay62 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %76, i32 0, i32 16, !dbg !11411
  %77 = load i32, i32* %close_delay62, align 8, !dbg !11411
  %cmp63 = icmp ne i32 %75, %77, !dbg !11412
  br i1 %cmp63, label %if.then78, label %lor.lhs.false65, !dbg !11413

lor.lhs.false65:                                  ; preds = %lor.lhs.false61
  %78 = load i32, i32* %closing_wait, align 4, !dbg !11414
  %79 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11415
  %closing_wait66 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %79, i32 0, i32 17, !dbg !11416
  %80 = load i32, i32* %closing_wait66, align 4, !dbg !11416
  %cmp67 = icmp ne i32 %78, %80, !dbg !11417
  br i1 %cmp67, label %if.then78, label %lor.lhs.false69, !dbg !11418

lor.lhs.false69:                                  ; preds = %lor.lhs.false65
  %81 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11419
  %xmit_fifo_size = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %81, i32 0, i32 5, !dbg !11420
  %82 = load i32, i32* %xmit_fifo_size, align 4, !dbg !11420
  %tobool70 = icmp ne i32 %82, 0, !dbg !11419
  br i1 %tobool70, label %land.lhs.true, label %lor.lhs.false74, !dbg !11421

land.lhs.true:                                    ; preds = %lor.lhs.false69
  %83 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11422
  %xmit_fifo_size71 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %83, i32 0, i32 5, !dbg !11423
  %84 = load i32, i32* %xmit_fifo_size71, align 4, !dbg !11423
  %85 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11424
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %85, i32 0, i32 23, !dbg !11425
  %86 = load i32, i32* %fifosize, align 4, !dbg !11425
  %cmp72 = icmp ne i32 %84, %86, !dbg !11426
  br i1 %cmp72, label %if.then78, label %lor.lhs.false74, !dbg !11427

lor.lhs.false74:                                  ; preds = %land.lhs.true, %lor.lhs.false69
  %87 = load i32, i32* %new_flags, align 4, !dbg !11428
  %88 = load i32, i32* %old_flags, align 4, !dbg !11429
  %xor = xor i32 %87, %88, !dbg !11430
  %and75 = and i32 %xor, -12337, !dbg !11431
  %cmp76 = icmp ne i32 %and75, 0, !dbg !11432
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !11433

if.then78:                                        ; preds = %lor.lhs.false74, %land.lhs.true, %lor.lhs.false65, %lor.lhs.false61, %lor.lhs.false58, %lor.lhs.false56, %if.then54
  br label %exit, !dbg !11434

if.end79:                                         ; preds = %lor.lhs.false74
  %89 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11435
  %flags80 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %89, i32 0, i32 33, !dbg !11436
  %90 = load i32, i32* %flags80, align 8, !dbg !11436
  %and81 = and i32 %90, -12337, !dbg !11437
  %91 = load i32, i32* %new_flags, align 4, !dbg !11438
  %and82 = and i32 %91, 12336, !dbg !11439
  %or = or i32 %and81, %and82, !dbg !11440
  %92 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11441
  %flags83 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %92, i32 0, i32 33, !dbg !11442
  store i32 %or, i32* %flags83, align 8, !dbg !11443
  %93 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11444
  %custom_divisor84 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %93, i32 0, i32 6, !dbg !11445
  %94 = load i32, i32* %custom_divisor84, align 8, !dbg !11445
  %95 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11446
  %custom_divisor85 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %95, i32 0, i32 40, !dbg !11447
  store i32 %94, i32* %custom_divisor85, align 8, !dbg !11448
  br label %check_and_exit, !dbg !11449

if.end86:                                         ; preds = %land.end49
  %call87 = call i32 @security_locked_down(i32 11) #10, !dbg !11450
  store i32 %call87, i32* %retval1, align 4, !dbg !11451
  %96 = load i32, i32* %retval1, align 4, !dbg !11452
  %tobool88 = icmp ne i32 %96, 0, !dbg !11452
  br i1 %tobool88, label %land.lhs.true89, label %if.end94, !dbg !11454

land.lhs.true89:                                  ; preds = %if.end86
  %97 = load i32, i32* %change_irq, align 4, !dbg !11455
  %tobool90 = icmp ne i32 %97, 0, !dbg !11455
  br i1 %tobool90, label %if.then93, label %lor.lhs.false91, !dbg !11456

lor.lhs.false91:                                  ; preds = %land.lhs.true89
  %98 = load i32, i32* %change_port, align 4, !dbg !11457
  %tobool92 = icmp ne i32 %98, 0, !dbg !11457
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !11458

if.then93:                                        ; preds = %lor.lhs.false91, %land.lhs.true89
  br label %exit, !dbg !11459

if.end94:                                         ; preds = %lor.lhs.false91, %if.end86
  %99 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11460
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %99, i32 0, i32 39, !dbg !11462
  %100 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !11462
  %verify_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %100, i32 0, i32 21, !dbg !11463
  %101 = load i32 (%struct.uart_port*, %struct.serial_struct*)*, i32 (%struct.uart_port*, %struct.serial_struct*)** %verify_port, align 8, !dbg !11463
  %tobool95 = icmp ne i32 (%struct.uart_port*, %struct.serial_struct*)* %101, null, !dbg !11460
  br i1 %tobool95, label %if.then96, label %if.end100, !dbg !11464

if.then96:                                        ; preds = %if.end94
  %102 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11465
  %ops97 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %102, i32 0, i32 39, !dbg !11466
  %103 = load %struct.uart_ops*, %struct.uart_ops** %ops97, align 8, !dbg !11466
  %verify_port98 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %103, i32 0, i32 21, !dbg !11467
  %104 = load i32 (%struct.uart_port*, %struct.serial_struct*)*, i32 (%struct.uart_port*, %struct.serial_struct*)** %verify_port98, align 8, !dbg !11467
  %105 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11468
  %106 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11469
  %call99 = call i32 %104(%struct.uart_port* %105, %struct.serial_struct* %106) #10, !dbg !11465
  store i32 %call99, i32* %retval1, align 4, !dbg !11470
  br label %if.end100, !dbg !11471

if.end100:                                        ; preds = %if.then96, %if.end94
  %107 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11472
  %irq101 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %107, i32 0, i32 3, !dbg !11474
  %108 = load i32, i32* %irq101, align 4, !dbg !11474
  %109 = load i32, i32* @nr_irqs, align 4, !dbg !11475
  %cmp102 = icmp sge i32 %108, %109, !dbg !11476
  br i1 %cmp102, label %if.then112, label %lor.lhs.false104, !dbg !11477

lor.lhs.false104:                                 ; preds = %if.end100
  %110 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11478
  %irq105 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %110, i32 0, i32 3, !dbg !11479
  %111 = load i32, i32* %irq105, align 4, !dbg !11479
  %cmp106 = icmp slt i32 %111, 0, !dbg !11480
  br i1 %cmp106, label %if.then112, label %lor.lhs.false108, !dbg !11481

lor.lhs.false108:                                 ; preds = %lor.lhs.false104
  %112 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11482
  %baud_base109 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %112, i32 0, i32 7, !dbg !11483
  %113 = load i32, i32* %baud_base109, align 4, !dbg !11483
  %cmp110 = icmp slt i32 %113, 9600, !dbg !11484
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !11485

if.then112:                                       ; preds = %lor.lhs.false108, %lor.lhs.false104, %if.end100
  store i32 -22, i32* %retval1, align 4, !dbg !11486
  br label %if.end113, !dbg !11487

if.end113:                                        ; preds = %if.then112, %lor.lhs.false108
  %114 = load i32, i32* %retval1, align 4, !dbg !11488
  %tobool114 = icmp ne i32 %114, 0, !dbg !11488
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !11490

if.then115:                                       ; preds = %if.end113
  br label %exit, !dbg !11491

if.end116:                                        ; preds = %if.end113
  %115 = load i32, i32* %change_port, align 4, !dbg !11492
  %tobool117 = icmp ne i32 %115, 0, !dbg !11492
  br i1 %tobool117, label %if.then120, label %lor.lhs.false118, !dbg !11494

lor.lhs.false118:                                 ; preds = %if.end116
  %116 = load i32, i32* %change_irq, align 4, !dbg !11495
  %tobool119 = icmp ne i32 %116, 0, !dbg !11495
  br i1 %tobool119, label %if.then120, label %if.end126, !dbg !11496

if.then120:                                       ; preds = %lor.lhs.false118, %if.end116
  store i32 -16, i32* %retval1, align 4, !dbg !11497
  %117 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11499
  %call121 = call i32 @tty_port_users(%struct.tty_port* %117) #10, !dbg !11501
  %cmp122 = icmp sgt i32 %call121, 1, !dbg !11502
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !11503

if.then124:                                       ; preds = %if.then120
  br label %exit, !dbg !11504

if.end125:                                        ; preds = %if.then120
  %118 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11505
  %119 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !11506
  call void @uart_shutdown(%struct.tty_struct* %118, %struct.uart_state* %119) #10, !dbg !11507
  br label %if.end126, !dbg !11508

if.end126:                                        ; preds = %if.end125, %lor.lhs.false118
  %120 = load i32, i32* %change_port, align 4, !dbg !11509
  %tobool127 = icmp ne i32 %120, 0, !dbg !11509
  br i1 %tobool127, label %if.then128, label %if.end196, !dbg !11511

if.then128:                                       ; preds = %if.end126
  call void @llvm.dbg.declare(metadata i64* %old_iobase, metadata !11512, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.declare(metadata i64* %old_mapbase, metadata !11515, metadata !DIExpression()), !dbg !11516
  call void @llvm.dbg.declare(metadata i32* %old_type, metadata !11517, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.declare(metadata i32* %old_iotype, metadata !11519, metadata !DIExpression()), !dbg !11520
  call void @llvm.dbg.declare(metadata i32* %old_hub6, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata i32* %old_shift, metadata !11523, metadata !DIExpression()), !dbg !11524
  %121 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11525
  %iobase129 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %121, i32 0, i32 1, !dbg !11526
  %122 = load i64, i64* %iobase129, align 8, !dbg !11526
  store i64 %122, i64* %old_iobase, align 8, !dbg !11527
  %123 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11528
  %mapbase130 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %123, i32 0, i32 43, !dbg !11529
  %124 = load i64, i64* %mapbase130, align 8, !dbg !11529
  store i64 %124, i64* %old_mapbase, align 8, !dbg !11530
  %125 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11531
  %type131 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %125, i32 0, i32 38, !dbg !11532
  %126 = load i32, i32* %type131, align 4, !dbg !11532
  store i32 %126, i32* %old_type, align 4, !dbg !11533
  %127 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11534
  %hub6132 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %127, i32 0, i32 50, !dbg !11535
  %128 = load i8, i8* %hub6132, align 2, !dbg !11535
  %conv133 = zext i8 %128 to i32, !dbg !11534
  store i32 %conv133, i32* %old_hub6, align 4, !dbg !11536
  %129 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11537
  %iotype134 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %129, i32 0, i32 26, !dbg !11538
  %130 = load i8, i8* %iotype134, align 2, !dbg !11538
  %conv135 = zext i8 %130 to i32, !dbg !11537
  store i32 %conv135, i32* %old_iotype, align 4, !dbg !11539
  %131 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11540
  %regshift136 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %131, i32 0, i32 25, !dbg !11541
  %132 = load i8, i8* %regshift136, align 1, !dbg !11541
  %conv137 = zext i8 %132 to i32, !dbg !11540
  store i32 %conv137, i32* %old_shift, align 4, !dbg !11542
  %133 = load i32, i32* %old_type, align 4, !dbg !11543
  %cmp138 = icmp ne i32 %133, 0, !dbg !11545
  br i1 %cmp138, label %land.lhs.true140, label %if.end148, !dbg !11546

land.lhs.true140:                                 ; preds = %if.then128
  %134 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11547
  %ops141 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %134, i32 0, i32 39, !dbg !11548
  %135 = load %struct.uart_ops*, %struct.uart_ops** %ops141, align 8, !dbg !11548
  %release_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %135, i32 0, i32 18, !dbg !11549
  %release_port142 = bitcast {}** %release_port to void (%struct.uart_port*)**, !dbg !11549
  %136 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port142, align 8, !dbg !11549
  %tobool143 = icmp ne void (%struct.uart_port*)* %136, null, !dbg !11547
  br i1 %tobool143, label %if.then144, label %if.end148, !dbg !11550

if.then144:                                       ; preds = %land.lhs.true140
  %137 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11551
  %ops145 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %137, i32 0, i32 39, !dbg !11552
  %138 = load %struct.uart_ops*, %struct.uart_ops** %ops145, align 8, !dbg !11552
  %release_port146 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %138, i32 0, i32 18, !dbg !11553
  %release_port147 = bitcast {}** %release_port146 to void (%struct.uart_port*)**, !dbg !11553
  %139 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %release_port147, align 8, !dbg !11553
  %140 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11554
  call void %139(%struct.uart_port* %140) #10, !dbg !11551
  br label %if.end148, !dbg !11551

if.end148:                                        ; preds = %if.then144, %land.lhs.true140, %if.then128
  %141 = load i64, i64* %new_port, align 8, !dbg !11555
  %142 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11556
  %iobase149 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %142, i32 0, i32 1, !dbg !11557
  store i64 %141, i64* %iobase149, align 8, !dbg !11558
  %143 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11559
  %type150 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %143, i32 0, i32 0, !dbg !11560
  %144 = load i32, i32* %type150, align 8, !dbg !11560
  %145 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11561
  %type151 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %145, i32 0, i32 38, !dbg !11562
  store i32 %144, i32* %type151, align 4, !dbg !11563
  %146 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11564
  %hub6152 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %146, i32 0, i32 11, !dbg !11565
  %147 = load i32, i32* %hub6152, align 4, !dbg !11565
  %conv153 = trunc i32 %147 to i8, !dbg !11564
  %148 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11566
  %hub6154 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %148, i32 0, i32 50, !dbg !11567
  store i8 %conv153, i8* %hub6154, align 2, !dbg !11568
  %149 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11569
  %io_type155 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %149, i32 0, i32 9, !dbg !11570
  %150 = load i8, i8* %io_type155, align 2, !dbg !11570
  %151 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11571
  %iotype156 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %151, i32 0, i32 26, !dbg !11572
  store i8 %150, i8* %iotype156, align 2, !dbg !11573
  %152 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11574
  %iomem_reg_shift157 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %152, i32 0, i32 15, !dbg !11575
  %153 = load i16, i16* %iomem_reg_shift157, align 8, !dbg !11575
  %conv158 = trunc i16 %153 to i8, !dbg !11574
  %154 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11576
  %regshift159 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %154, i32 0, i32 25, !dbg !11577
  store i8 %conv158, i8* %regshift159, align 1, !dbg !11578
  %155 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11579
  %iomem_base160 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %155, i32 0, i32 14, !dbg !11580
  %156 = load i8*, i8** %iomem_base160, align 8, !dbg !11580
  %157 = ptrtoint i8* %156 to i64, !dbg !11581
  %158 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11582
  %mapbase161 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %158, i32 0, i32 43, !dbg !11583
  store i64 %157, i64* %mapbase161, align 8, !dbg !11584
  %159 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11585
  %type162 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %159, i32 0, i32 38, !dbg !11587
  %160 = load i32, i32* %type162, align 4, !dbg !11587
  %cmp163 = icmp ne i32 %160, 0, !dbg !11588
  br i1 %cmp163, label %land.lhs.true165, label %if.else, !dbg !11589

land.lhs.true165:                                 ; preds = %if.end148
  %161 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11590
  %ops166 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %161, i32 0, i32 39, !dbg !11591
  %162 = load %struct.uart_ops*, %struct.uart_ops** %ops166, align 8, !dbg !11591
  %request_port = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %162, i32 0, i32 19, !dbg !11592
  %163 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %request_port, align 8, !dbg !11592
  %tobool167 = icmp ne i32 (%struct.uart_port*)* %163, null, !dbg !11590
  br i1 %tobool167, label %if.then168, label %if.else, !dbg !11593

if.then168:                                       ; preds = %land.lhs.true165
  %164 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11594
  %ops169 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %164, i32 0, i32 39, !dbg !11596
  %165 = load %struct.uart_ops*, %struct.uart_ops** %ops169, align 8, !dbg !11596
  %request_port170 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %165, i32 0, i32 19, !dbg !11597
  %166 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %request_port170, align 8, !dbg !11597
  %167 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11598
  %call171 = call i32 %166(%struct.uart_port* %167) #10, !dbg !11594
  store i32 %call171, i32* %retval1, align 4, !dbg !11599
  br label %if.end172, !dbg !11600

if.else:                                          ; preds = %land.lhs.true165, %if.end148
  store i32 0, i32* %retval1, align 4, !dbg !11601
  br label %if.end172

if.end172:                                        ; preds = %if.else, %if.then168
  %168 = load i32, i32* %retval1, align 4, !dbg !11603
  %tobool173 = icmp ne i32 %168, 0, !dbg !11603
  br i1 %tobool173, label %if.then174, label %if.end195, !dbg !11605

if.then174:                                       ; preds = %if.end172
  %169 = load i64, i64* %old_iobase, align 8, !dbg !11606
  %170 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11608
  %iobase175 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %170, i32 0, i32 1, !dbg !11609
  store i64 %169, i64* %iobase175, align 8, !dbg !11610
  %171 = load i32, i32* %old_type, align 4, !dbg !11611
  %172 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11612
  %type176 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %172, i32 0, i32 38, !dbg !11613
  store i32 %171, i32* %type176, align 4, !dbg !11614
  %173 = load i32, i32* %old_hub6, align 4, !dbg !11615
  %conv177 = trunc i32 %173 to i8, !dbg !11615
  %174 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11616
  %hub6178 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %174, i32 0, i32 50, !dbg !11617
  store i8 %conv177, i8* %hub6178, align 2, !dbg !11618
  %175 = load i32, i32* %old_iotype, align 4, !dbg !11619
  %conv179 = trunc i32 %175 to i8, !dbg !11619
  %176 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11620
  %iotype180 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %176, i32 0, i32 26, !dbg !11621
  store i8 %conv179, i8* %iotype180, align 2, !dbg !11622
  %177 = load i32, i32* %old_shift, align 4, !dbg !11623
  %conv181 = trunc i32 %177 to i8, !dbg !11623
  %178 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11624
  %regshift182 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %178, i32 0, i32 25, !dbg !11625
  store i8 %conv181, i8* %regshift182, align 1, !dbg !11626
  %179 = load i64, i64* %old_mapbase, align 8, !dbg !11627
  %180 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11628
  %mapbase183 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %180, i32 0, i32 43, !dbg !11629
  store i64 %179, i64* %mapbase183, align 8, !dbg !11630
  %181 = load i32, i32* %old_type, align 4, !dbg !11631
  %cmp184 = icmp ne i32 %181, 0, !dbg !11633
  br i1 %cmp184, label %if.then186, label %if.end194, !dbg !11634

if.then186:                                       ; preds = %if.then174
  %182 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11635
  %ops187 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %182, i32 0, i32 39, !dbg !11637
  %183 = load %struct.uart_ops*, %struct.uart_ops** %ops187, align 8, !dbg !11637
  %request_port188 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %183, i32 0, i32 19, !dbg !11638
  %184 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %request_port188, align 8, !dbg !11638
  %185 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11639
  %call189 = call i32 %184(%struct.uart_port* %185) #10, !dbg !11635
  store i32 %call189, i32* %retval1, align 4, !dbg !11640
  %186 = load i32, i32* %retval1, align 4, !dbg !11641
  %tobool190 = icmp ne i32 %186, 0, !dbg !11641
  br i1 %tobool190, label %if.then191, label %if.end193, !dbg !11643

if.then191:                                       ; preds = %if.then186
  %187 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11644
  %type192 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %187, i32 0, i32 38, !dbg !11645
  store i32 0, i32* %type192, align 4, !dbg !11646
  br label %if.end193, !dbg !11644

if.end193:                                        ; preds = %if.then191, %if.then186
  store i32 -16, i32* %retval1, align 4, !dbg !11647
  br label %if.end194, !dbg !11648

if.end194:                                        ; preds = %if.end193, %if.then174
  br label %exit, !dbg !11649

if.end195:                                        ; preds = %if.end172
  br label %if.end196, !dbg !11650

if.end196:                                        ; preds = %if.end195, %if.end126
  %188 = load i32, i32* %change_irq, align 4, !dbg !11651
  %tobool197 = icmp ne i32 %188, 0, !dbg !11651
  br i1 %tobool197, label %if.then198, label %if.end201, !dbg !11653

if.then198:                                       ; preds = %if.end196
  %189 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11654
  %irq199 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %189, i32 0, i32 3, !dbg !11655
  %190 = load i32, i32* %irq199, align 4, !dbg !11655
  %191 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11656
  %irq200 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %191, i32 0, i32 20, !dbg !11657
  store i32 %190, i32* %irq200, align 8, !dbg !11658
  br label %if.end201, !dbg !11656

if.end201:                                        ; preds = %if.then198, %if.end196
  %192 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11659
  %flags202 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %192, i32 0, i32 33, !dbg !11661
  %193 = load i32, i32* %flags202, align 8, !dbg !11661
  %and203 = and i32 %193, 536870912, !dbg !11662
  %tobool204 = icmp ne i32 %and203, 0, !dbg !11662
  br i1 %tobool204, label %if.end209, label %if.then205, !dbg !11663

if.then205:                                       ; preds = %if.end201
  %194 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11664
  %baud_base206 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %194, i32 0, i32 7, !dbg !11665
  %195 = load i32, i32* %baud_base206, align 4, !dbg !11665
  %mul207 = mul i32 %195, 16, !dbg !11666
  %196 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11667
  %uartclk208 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %196, i32 0, i32 22, !dbg !11668
  store i32 %mul207, i32* %uartclk208, align 8, !dbg !11669
  br label %if.end209, !dbg !11667

if.end209:                                        ; preds = %if.then205, %if.end201
  %197 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11670
  %flags210 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %197, i32 0, i32 33, !dbg !11671
  %198 = load i32, i32* %flags210, align 8, !dbg !11671
  %and211 = and i32 %198, -98304, !dbg !11672
  %199 = load i32, i32* %new_flags, align 4, !dbg !11673
  %and212 = and i32 %199, 98303, !dbg !11674
  %or213 = or i32 %and211, %and212, !dbg !11675
  %200 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11676
  %flags214 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %200, i32 0, i32 33, !dbg !11677
  store i32 %or213, i32* %flags214, align 8, !dbg !11678
  %201 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11679
  %custom_divisor215 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %201, i32 0, i32 6, !dbg !11680
  %202 = load i32, i32* %custom_divisor215, align 8, !dbg !11680
  %203 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11681
  %custom_divisor216 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %203, i32 0, i32 40, !dbg !11682
  store i32 %202, i32* %custom_divisor216, align 8, !dbg !11683
  %204 = load i32, i32* %close_delay, align 4, !dbg !11684
  %205 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11685
  %close_delay217 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %205, i32 0, i32 16, !dbg !11686
  store i32 %204, i32* %close_delay217, align 8, !dbg !11687
  %206 = load i32, i32* %closing_wait, align 4, !dbg !11688
  %207 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11689
  %closing_wait218 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %207, i32 0, i32 17, !dbg !11690
  store i32 %206, i32* %closing_wait218, align 4, !dbg !11691
  %208 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11692
  %xmit_fifo_size219 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %208, i32 0, i32 5, !dbg !11694
  %209 = load i32, i32* %xmit_fifo_size219, align 4, !dbg !11694
  %tobool220 = icmp ne i32 %209, 0, !dbg !11692
  br i1 %tobool220, label %if.then221, label %if.end224, !dbg !11695

if.then221:                                       ; preds = %if.end209
  %210 = load %struct.serial_struct*, %struct.serial_struct** %new_info.addr, align 8, !dbg !11696
  %xmit_fifo_size222 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %210, i32 0, i32 5, !dbg !11697
  %211 = load i32, i32* %xmit_fifo_size222, align 4, !dbg !11697
  %212 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11698
  %fifosize223 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %212, i32 0, i32 23, !dbg !11699
  store i32 %211, i32* %fifosize223, align 4, !dbg !11700
  br label %if.end224, !dbg !11698

if.end224:                                        ; preds = %if.then221, %if.end209
  %213 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11701
  %flags225 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %213, i32 0, i32 33, !dbg !11702
  %214 = load i32, i32* %flags225, align 8, !dbg !11702
  %and226 = and i32 %214, 8192, !dbg !11703
  %tobool227 = icmp ne i32 %and226, 0, !dbg !11704
  %215 = zext i1 %tobool227 to i64, !dbg !11704
  %cond228 = select i1 %tobool227, i32 1, i32 0, !dbg !11704
  %conv229 = trunc i32 %cond228 to i8, !dbg !11704
  %216 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11705
  %low_latency = getelementptr inbounds %struct.tty_port, %struct.tty_port* %216, i32 0, i32 12, !dbg !11706
  %bf.load = load i8, i8* %low_latency, align 8, !dbg !11707
  %bf.value = and i8 %conv229, 1, !dbg !11707
  %bf.shl = shl i8 %bf.value, 1, !dbg !11707
  %bf.clear = and i8 %bf.load, -3, !dbg !11707
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !11707
  store i8 %bf.set, i8* %low_latency, align 8, !dbg !11707
  br label %check_and_exit, !dbg !11705

check_and_exit:                                   ; preds = %if.end224, %if.end79
  call void @llvm.dbg.label(metadata !11708), !dbg !11709
  store i32 0, i32* %retval1, align 4, !dbg !11710
  %217 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11711
  %type230 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %217, i32 0, i32 38, !dbg !11713
  %218 = load i32, i32* %type230, align 4, !dbg !11713
  %cmp231 = icmp eq i32 %218, 0, !dbg !11714
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !11715

if.then233:                                       ; preds = %check_and_exit
  br label %exit, !dbg !11716

if.end234:                                        ; preds = %check_and_exit
  %219 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11717
  %call235 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %219) #10, !dbg !11718
  br i1 %call235, label %if.then236, label %if.else259, !dbg !11719

if.then236:                                       ; preds = %if.end234
  %220 = load i32, i32* %old_flags, align 4, !dbg !11720
  %221 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11721
  %flags237 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %221, i32 0, i32 33, !dbg !11722
  %222 = load i32, i32* %flags237, align 8, !dbg !11722
  %xor238 = xor i32 %220, %222, !dbg !11723
  %and239 = and i32 %xor238, 4144, !dbg !11724
  %tobool240 = icmp ne i32 %and239, 0, !dbg !11724
  br i1 %tobool240, label %if.then245, label %lor.lhs.false241, !dbg !11725

lor.lhs.false241:                                 ; preds = %if.then236
  %223 = load i32, i32* %old_custom_divisor, align 4, !dbg !11726
  %224 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11727
  %custom_divisor242 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %224, i32 0, i32 40, !dbg !11728
  %225 = load i32, i32* %custom_divisor242, align 8, !dbg !11728
  %cmp243 = icmp ne i32 %223, %225, !dbg !11729
  br i1 %cmp243, label %if.then245, label %if.end258, !dbg !11730

if.then245:                                       ; preds = %lor.lhs.false241, %if.then236
  %226 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11731
  %flags246 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %226, i32 0, i32 33, !dbg !11732
  %227 = load i32, i32* %flags246, align 8, !dbg !11732
  %and247 = and i32 %227, 4144, !dbg !11733
  %tobool248 = icmp ne i32 %and247, 0, !dbg !11733
  br i1 %tobool248, label %if.then249, label %if.end257, !dbg !11734

if.then249:                                       ; preds = %if.then245
  br label %do.body, !dbg !11735

do.body:                                          ; preds = %if.then249
  %call250 = call i32 @___ratelimit(%struct.ratelimit_state* @uart_set_info._rs, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.uart_set_info, i64 0, i64 0)) #10, !dbg !11736
  %tobool251 = icmp ne i32 %call250, 0, !dbg !11736
  br i1 %tobool251, label %if.then252, label %if.end256, !dbg !11737

if.then252:                                       ; preds = %do.body
  %228 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11736
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %228, i32 0, i32 45, !dbg !11736
  %229 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11736
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11228
  %230 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11228
  %231 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11229, !srcloc !9473
  store i64 %231, i64* %pfo_val__.i, align 8, !dbg !11229
  %232 = load i64, i64* %pfo_val__.i, align 8, !dbg !11229
  %233 = inttoptr i64 %232 to %struct.task_struct*, !dbg !11229
  store %struct.task_struct* %233, %struct.task_struct** %tmp.i, align 8, !dbg !11229
  %234 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11229
  store %struct.task_struct* %234, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11218
  %235 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11218
  store %struct.task_struct* %235, %struct.task_struct** %tmp1.i, align 8, !dbg !11218
  %236 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11218
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %236, i32 0, i32 68, !dbg !11736
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !11736
  %237 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11736
  %tty254 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %237, i32 0, i32 1, !dbg !11736
  %238 = load %struct.tty_struct*, %struct.tty_struct** %tty254, align 8, !dbg !11736
  %call255 = call i8* @tty_name(%struct.tty_struct* %238) #10, !dbg !11736
  call void (%struct.device*, i8*, ...) @_dev_notice(%struct.device* %229, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.16, i64 0, i64 0), i8* %arraydecay, i8* %call255) #12, !dbg !11736
  br label %if.end256, !dbg !11736

if.end256:                                        ; preds = %if.then252, %do.body
  br label %do.end, !dbg !11737

do.end:                                           ; preds = %if.end256
  br label %if.end257, !dbg !11738

if.end257:                                        ; preds = %do.end, %if.then245
  %239 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11739
  %240 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !11740
  call void @uart_change_speed(%struct.tty_struct* %239, %struct.uart_state* %240, %struct.ktermios* null) #10, !dbg !11741
  br label %if.end258, !dbg !11742

if.end258:                                        ; preds = %if.end257, %lor.lhs.false241
  br label %if.end269, !dbg !11743

if.else259:                                       ; preds = %if.end234
  %241 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11744
  %242 = load %struct.uart_state*, %struct.uart_state** %state.addr, align 8, !dbg !11746
  %call260 = call i32 @uart_startup(%struct.tty_struct* %241, %struct.uart_state* %242, i32 1) #10, !dbg !11747
  store i32 %call260, i32* %retval1, align 4, !dbg !11748
  %243 = load i32, i32* %retval1, align 4, !dbg !11749
  %cmp261 = icmp eq i32 %243, 0, !dbg !11751
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !11752

if.then263:                                       ; preds = %if.else259
  %244 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11753
  call void @tty_port_set_initialized(%struct.tty_port* %244, i1 zeroext true) #10, !dbg !11754
  br label %if.end264, !dbg !11754

if.end264:                                        ; preds = %if.then263, %if.else259
  %245 = load i32, i32* %retval1, align 4, !dbg !11755
  %cmp265 = icmp sgt i32 %245, 0, !dbg !11757
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !11758

if.then267:                                       ; preds = %if.end264
  store i32 0, i32* %retval1, align 4, !dbg !11759
  br label %if.end268, !dbg !11760

if.end268:                                        ; preds = %if.then267, %if.end264
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end258
  br label %exit, !dbg !11761

exit:                                             ; preds = %if.end269, %if.then233, %if.end194, %if.then124, %if.then115, %if.then93, %if.then78
  call void @llvm.dbg.label(metadata !11762), !dbg !11763
  %246 = load i32, i32* %retval1, align 4, !dbg !11764
  store i32 %246, i32* %retval, align 4, !dbg !11765
  br label %return, !dbg !11765

return:                                           ; preds = %exit, %if.then
  %247 = load i32, i32* %retval, align 4, !dbg !11766
  ret i32 %247, !dbg !11766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @irq_canonicalize(i32 %irq) #0 !dbg !11767 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  %0 = load i32, i32* %irq.addr, align 4, !dbg !11771
  %cmp = icmp eq i32 %0, 2, !dbg !11772
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11773

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !11773

cond.false:                                       ; preds = %entry
  %1 = load i32, i32* %irq.addr, align 4, !dbg !11774
  br label %cond.end, !dbg !11773

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 9, %cond.true ], [ %1, %cond.false ], !dbg !11773
  ret i32 %cond, !dbg !11775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @security_locked_down(i32 %what) #0 !dbg !11776 {
entry:
  %what.addr = alloca i32, align 4
  store i32 %what, i32* %what.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %what.addr, metadata !11779, metadata !DIExpression()), !dbg !11780
  ret i32 0, !dbg !11781
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_notice(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @tty_name(%struct.tty_struct*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !11782 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !11783, metadata !DIExpression()), !dbg !11784
  %0 = load i32, i32* %m.addr, align 4, !dbg !11785
  %conv = zext i32 %0 to i64, !dbg !11785
  %add = add i64 %conv, 4, !dbg !11786
  %sub = sub i64 %add, 1, !dbg !11787
  %div = sdiv i64 %sub, 4, !dbg !11788
  ret i64 %div, !dbg !11789
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_line_info(%struct.seq_file* %m, %struct.uart_driver* %drv, i32 %i) #0 !dbg !11790 {
entry:
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !4843, metadata !DIExpression()), !dbg !11793
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !11797
  %m.addr = alloca %struct.seq_file*, align 8
  %drv.addr = alloca %struct.uart_driver*, align 8
  %i.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %port = alloca %struct.tty_port*, align 8
  %pm_state = alloca i32, align 4
  %uport = alloca %struct.uart_port*, align 8
  %stat_buf = alloca [32 x i8], align 16
  %status = alloca i32, align 4
  %mmio = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !11799, metadata !DIExpression()), !dbg !11800
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !11801, metadata !DIExpression()), !dbg !11802
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11803, metadata !DIExpression()), !dbg !11804
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !11805, metadata !DIExpression()), !dbg !11806
  %0 = load %struct.uart_driver*, %struct.uart_driver** %drv.addr, align 8, !dbg !11807
  %state1 = getelementptr inbounds %struct.uart_driver, %struct.uart_driver* %0, i32 0, i32 7, !dbg !11808
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !11808
  %2 = load i32, i32* %i.addr, align 4, !dbg !11809
  %idx.ext = sext i32 %2 to i64, !dbg !11810
  %add.ptr = getelementptr %struct.uart_state, %struct.uart_state* %1, i64 %idx.ext, !dbg !11810
  store %struct.uart_state* %add.ptr, %struct.uart_state** %state, align 8, !dbg !11806
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !11811, metadata !DIExpression()), !dbg !11812
  %3 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11813
  %port2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %3, i32 0, i32 0, !dbg !11814
  store %struct.tty_port* %port2, %struct.tty_port** %port, align 8, !dbg !11812
  call void @llvm.dbg.declare(metadata i32* %pm_state, metadata !11815, metadata !DIExpression()), !dbg !11816
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !11817, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.declare(metadata [32 x i8]* %stat_buf, metadata !11819, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11821, metadata !DIExpression()), !dbg !11822
  call void @llvm.dbg.declare(metadata i32* %mmio, metadata !11823, metadata !DIExpression()), !dbg !11824
  %4 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11825
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %4, i32 0, i32 13, !dbg !11826
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !11827
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11828
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !11829
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !11830
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11831
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !11831
  br i1 %tobool, label %if.end, label %if.then, !dbg !11833

if.then:                                          ; preds = %entry
  br label %out, !dbg !11834

if.end:                                           ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11835
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 26, !dbg !11836
  %8 = load i8, i8* %iotype, align 2, !dbg !11836
  %conv = zext i8 %8 to i32, !dbg !11835
  %cmp = icmp sge i32 %conv, 2, !dbg !11837
  %conv3 = zext i1 %cmp to i32, !dbg !11837
  store i32 %conv3, i32* %mmio, align 4, !dbg !11838
  %9 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11839
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11840
  %line = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 41, !dbg !11841
  %11 = load i32, i32* %line, align 4, !dbg !11841
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11842
  %call4 = call i8* @uart_type(%struct.uart_port* %12) #10, !dbg !11843
  %13 = load i32, i32* %mmio, align 4, !dbg !11844
  %tobool5 = icmp ne i32 %13, 0, !dbg !11844
  %14 = zext i1 %tobool5 to i64, !dbg !11844
  %cond = select i1 %tobool5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0), !dbg !11844
  %15 = load i32, i32* %mmio, align 4, !dbg !11845
  %tobool6 = icmp ne i32 %15, 0, !dbg !11845
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !11845

cond.true:                                        ; preds = %if.end
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11846
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 43, !dbg !11847
  %17 = load i64, i64* %mapbase, align 8, !dbg !11847
  br label %cond.end, !dbg !11845

cond.false:                                       ; preds = %if.end
  %18 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11848
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 1, !dbg !11849
  %19 = load i64, i64* %iobase, align 8, !dbg !11849
  br label %cond.end, !dbg !11845

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond7 = phi i64 [ %17, %cond.true ], [ %19, %cond.false ], !dbg !11845
  %20 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11850
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 20, !dbg !11851
  %21 = load i32, i32* %irq, align 8, !dbg !11851
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19, i64 0, i64 0), i32 %11, i8* %call4, i8* %cond, i64 %cond7, i32 %21) #10, !dbg !11852
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11853
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 38, !dbg !11855
  %23 = load i32, i32* %type, align 4, !dbg !11855
  %cmp8 = icmp eq i32 %23, 0, !dbg !11856
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !11857

if.then10:                                        ; preds = %cond.end
  %24 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11858
  call void @seq_putc(%struct.seq_file* %24, i8 signext 10) #10, !dbg !11860
  br label %out, !dbg !11861

if.end11:                                         ; preds = %cond.end
  %call12 = call zeroext i1 @capable(i32 21) #10, !dbg !11862
  br i1 %call12, label %if.then13, label %if.end121, !dbg !11863

if.then13:                                        ; preds = %if.end11
  %25 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11864
  %pm_state14 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %25, i32 0, i32 1, !dbg !11865
  %26 = load i32, i32* %pm_state14, align 8, !dbg !11865
  store i32 %26, i32* %pm_state, align 4, !dbg !11866
  %27 = load i32, i32* %pm_state, align 4, !dbg !11867
  %cmp15 = icmp ne i32 %27, 0, !dbg !11869
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !11870

if.then17:                                        ; preds = %if.then13
  %28 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11871
  call void @uart_change_pm(%struct.uart_state* %28, i32 0) #10, !dbg !11872
  br label %if.end18, !dbg !11872

if.end18:                                         ; preds = %if.then17, %if.then13
  %29 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11873
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 0, !dbg !11874
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !11875
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11876, !srcloc !4939
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11877
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !11877
  %rlock.i = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !11877
  %32 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11878
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %32, i32 0, i32 39, !dbg !11879
  %33 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !11879
  %get_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %33, i32 0, i32 2, !dbg !11880
  %34 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl, align 8, !dbg !11880
  %35 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11881
  %call19 = call i32 %34(%struct.uart_port* %35) #10, !dbg !11878
  store i32 %call19, i32* %status, align 4, !dbg !11882
  %36 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11883
  %lock20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %36, i32 0, i32 0, !dbg !11884
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i123, align 8
  call void @arch_local_irq_enable() #11, !dbg !11885
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11886, !srcloc !4958
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !11887
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !11887
  %rlock.i124 = bitcast %union.anon* %38 to %struct.raw_spinlock*, !dbg !11887
  %39 = load i32, i32* %pm_state, align 4, !dbg !11888
  %cmp21 = icmp ne i32 %39, 0, !dbg !11890
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11891

if.then23:                                        ; preds = %if.end18
  %40 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !11892
  %41 = load i32, i32* %pm_state, align 4, !dbg !11893
  call void @uart_change_pm(%struct.uart_state* %40, i32 %41) #10, !dbg !11894
  br label %if.end24, !dbg !11894

if.end24:                                         ; preds = %if.then23, %if.end18
  %42 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11895
  %43 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11896
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %43, i32 0, i32 31, !dbg !11897
  %tx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 5, !dbg !11898
  %44 = load i32, i32* %tx, align 4, !dbg !11898
  %45 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11899
  %icount25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %45, i32 0, i32 31, !dbg !11900
  %rx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount25, i32 0, i32 4, !dbg !11901
  %46 = load i32, i32* %rx, align 8, !dbg !11901
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0), i32 %44, i32 %46) #10, !dbg !11902
  %47 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11903
  %icount26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %47, i32 0, i32 31, !dbg !11905
  %frame = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount26, i32 0, i32 6, !dbg !11906
  %48 = load i32, i32* %frame, align 8, !dbg !11906
  %tobool27 = icmp ne i32 %48, 0, !dbg !11903
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !11907

if.then28:                                        ; preds = %if.end24
  %49 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11908
  %50 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11909
  %icount29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %50, i32 0, i32 31, !dbg !11910
  %frame30 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount29, i32 0, i32 6, !dbg !11911
  %51 = load i32, i32* %frame30, align 8, !dbg !11911
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 %51) #10, !dbg !11912
  br label %if.end31, !dbg !11912

if.end31:                                         ; preds = %if.then28, %if.end24
  %52 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11913
  %icount32 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %52, i32 0, i32 31, !dbg !11915
  %parity = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount32, i32 0, i32 8, !dbg !11916
  %53 = load i32, i32* %parity, align 8, !dbg !11916
  %tobool33 = icmp ne i32 %53, 0, !dbg !11913
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !11917

if.then34:                                        ; preds = %if.end31
  %54 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11918
  %55 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11919
  %icount35 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %55, i32 0, i32 31, !dbg !11920
  %parity36 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount35, i32 0, i32 8, !dbg !11921
  %56 = load i32, i32* %parity36, align 8, !dbg !11921
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %54, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 %56) #10, !dbg !11922
  br label %if.end37, !dbg !11922

if.end37:                                         ; preds = %if.then34, %if.end31
  %57 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11923
  %icount38 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %57, i32 0, i32 31, !dbg !11925
  %brk = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount38, i32 0, i32 9, !dbg !11926
  %58 = load i32, i32* %brk, align 4, !dbg !11926
  %tobool39 = icmp ne i32 %58, 0, !dbg !11923
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !11927

if.then40:                                        ; preds = %if.end37
  %59 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11928
  %60 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11929
  %icount41 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %60, i32 0, i32 31, !dbg !11930
  %brk42 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount41, i32 0, i32 9, !dbg !11931
  %61 = load i32, i32* %brk42, align 4, !dbg !11931
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i32 %61) #10, !dbg !11932
  br label %if.end43, !dbg !11932

if.end43:                                         ; preds = %if.then40, %if.end37
  %62 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11933
  %icount44 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %62, i32 0, i32 31, !dbg !11935
  %overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount44, i32 0, i32 7, !dbg !11936
  %63 = load i32, i32* %overrun, align 4, !dbg !11936
  %tobool45 = icmp ne i32 %63, 0, !dbg !11933
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !11937

if.then46:                                        ; preds = %if.end43
  %64 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11938
  %65 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11939
  %icount47 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %65, i32 0, i32 31, !dbg !11940
  %overrun48 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount47, i32 0, i32 7, !dbg !11941
  %66 = load i32, i32* %overrun48, align 4, !dbg !11941
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i32 %66) #10, !dbg !11942
  br label %if.end49, !dbg !11942

if.end49:                                         ; preds = %if.then46, %if.end43
  %67 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11943
  %icount50 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %67, i32 0, i32 31, !dbg !11945
  %buf_overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount50, i32 0, i32 10, !dbg !11946
  %68 = load i32, i32* %buf_overrun, align 8, !dbg !11946
  %tobool51 = icmp ne i32 %68, 0, !dbg !11943
  br i1 %tobool51, label %if.then52, label %if.end55, !dbg !11947

if.then52:                                        ; preds = %if.end49
  %69 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11948
  %70 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11949
  %icount53 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %70, i32 0, i32 31, !dbg !11950
  %buf_overrun54 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount53, i32 0, i32 10, !dbg !11951
  %71 = load i32, i32* %buf_overrun54, align 8, !dbg !11951
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %69, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i32 %71) #10, !dbg !11952
  br label %if.end55, !dbg !11952

if.end55:                                         ; preds = %if.then52, %if.end49
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11953
  store i8 0, i8* %arrayidx, align 16, !dbg !11954
  %arrayidx56 = getelementptr [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 1, !dbg !11955
  store i8 0, i8* %arrayidx56, align 1, !dbg !11956
  %72 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11957
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %72, i32 0, i32 36, !dbg !11957
  %73 = load i32, i32* %mctrl, align 4, !dbg !11957
  %and = and i32 %73, 4, !dbg !11957
  %tobool57 = icmp ne i32 %and, 0, !dbg !11957
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !11959

if.then58:                                        ; preds = %if.end55
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11957
  %arraydecay59 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11957
  %call60 = call i64 @strlen(i8* %arraydecay59) #10, !dbg !11957
  %sub = sub i64 32, %call60, !dbg !11957
  %sub61 = sub i64 %sub, 2, !dbg !11957
  %call62 = call i8* @strncat(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 %sub61) #10, !dbg !11957
  br label %if.end63, !dbg !11957

if.end63:                                         ; preds = %if.then58, %if.end55
  %74 = load i32, i32* %status, align 4, !dbg !11960
  %and64 = and i32 %74, 32, !dbg !11960
  %tobool65 = icmp ne i32 %and64, 0, !dbg !11960
  br i1 %tobool65, label %if.then66, label %if.end73, !dbg !11962

if.then66:                                        ; preds = %if.end63
  %arraydecay67 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11960
  %arraydecay68 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11960
  %call69 = call i64 @strlen(i8* %arraydecay68) #10, !dbg !11960
  %sub70 = sub i64 32, %call69, !dbg !11960
  %sub71 = sub i64 %sub70, 2, !dbg !11960
  %call72 = call i8* @strncat(i8* %arraydecay67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i64 %sub71) #10, !dbg !11960
  br label %if.end73, !dbg !11960

if.end73:                                         ; preds = %if.then66, %if.end63
  %75 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !11963
  %mctrl74 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %75, i32 0, i32 36, !dbg !11963
  %76 = load i32, i32* %mctrl74, align 4, !dbg !11963
  %and75 = and i32 %76, 2, !dbg !11963
  %tobool76 = icmp ne i32 %and75, 0, !dbg !11963
  br i1 %tobool76, label %if.then77, label %if.end84, !dbg !11965

if.then77:                                        ; preds = %if.end73
  %arraydecay78 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11963
  %arraydecay79 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11963
  %call80 = call i64 @strlen(i8* %arraydecay79) #10, !dbg !11963
  %sub81 = sub i64 32, %call80, !dbg !11963
  %sub82 = sub i64 %sub81, 2, !dbg !11963
  %call83 = call i8* @strncat(i8* %arraydecay78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i64 %sub82) #10, !dbg !11963
  br label %if.end84, !dbg !11963

if.end84:                                         ; preds = %if.then77, %if.end73
  %77 = load i32, i32* %status, align 4, !dbg !11966
  %and85 = and i32 %77, 256, !dbg !11966
  %tobool86 = icmp ne i32 %and85, 0, !dbg !11966
  br i1 %tobool86, label %if.then87, label %if.end94, !dbg !11968

if.then87:                                        ; preds = %if.end84
  %arraydecay88 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11966
  %arraydecay89 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11966
  %call90 = call i64 @strlen(i8* %arraydecay89) #10, !dbg !11966
  %sub91 = sub i64 32, %call90, !dbg !11966
  %sub92 = sub i64 %sub91, 2, !dbg !11966
  %call93 = call i8* @strncat(i8* %arraydecay88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i64 %sub92) #10, !dbg !11966
  br label %if.end94, !dbg !11966

if.end94:                                         ; preds = %if.then87, %if.end84
  %78 = load i32, i32* %status, align 4, !dbg !11969
  %and95 = and i32 %78, 64, !dbg !11969
  %tobool96 = icmp ne i32 %and95, 0, !dbg !11969
  br i1 %tobool96, label %if.then97, label %if.end104, !dbg !11971

if.then97:                                        ; preds = %if.end94
  %arraydecay98 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11969
  %arraydecay99 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11969
  %call100 = call i64 @strlen(i8* %arraydecay99) #10, !dbg !11969
  %sub101 = sub i64 32, %call100, !dbg !11969
  %sub102 = sub i64 %sub101, 2, !dbg !11969
  %call103 = call i8* @strncat(i8* %arraydecay98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i64 %sub102) #10, !dbg !11969
  br label %if.end104, !dbg !11969

if.end104:                                        ; preds = %if.then97, %if.end94
  %79 = load i32, i32* %status, align 4, !dbg !11972
  %and105 = and i32 %79, 128, !dbg !11972
  %tobool106 = icmp ne i32 %and105, 0, !dbg !11972
  br i1 %tobool106, label %if.then107, label %if.end114, !dbg !11974

if.then107:                                       ; preds = %if.end104
  %arraydecay108 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11972
  %arraydecay109 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11972
  %call110 = call i64 @strlen(i8* %arraydecay109) #10, !dbg !11972
  %sub111 = sub i64 32, %call110, !dbg !11972
  %sub112 = sub i64 %sub111, 2, !dbg !11972
  %call113 = call i8* @strncat(i8* %arraydecay108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i64 %sub112) #10, !dbg !11972
  br label %if.end114, !dbg !11972

if.end114:                                        ; preds = %if.then107, %if.end104
  %arrayidx115 = getelementptr [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11975
  %80 = load i8, i8* %arrayidx115, align 16, !dbg !11975
  %tobool116 = icmp ne i8 %80, 0, !dbg !11975
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !11977

if.then117:                                       ; preds = %if.end114
  %arrayidx118 = getelementptr [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11978
  store i8 32, i8* %arrayidx118, align 16, !dbg !11979
  br label %if.end119, !dbg !11978

if.end119:                                        ; preds = %if.then117, %if.end114
  %81 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11980
  %arraydecay120 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_buf, i64 0, i64 0, !dbg !11981
  call void @seq_puts(%struct.seq_file* %81, i8* %arraydecay120) #10, !dbg !11982
  br label %if.end121, !dbg !11983

if.end121:                                        ; preds = %if.end119, %if.end11
  %82 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11984
  call void @seq_putc(%struct.seq_file* %82, i8 signext 10) #10, !dbg !11985
  br label %out, !dbg !11985

out:                                              ; preds = %if.end121, %if.then10, %if.then
  call void @llvm.dbg.label(metadata !11986), !dbg !11987
  %83 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11988
  %mutex122 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %83, i32 0, i32 13, !dbg !11989
  call void @mutex_unlock(%struct.mutex* %mutex122) #10, !dbg !11990
  ret void, !dbg !11991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @uart_type(%struct.uart_port* %port) #0 !dbg !11992 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %str = alloca i8*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  call void @llvm.dbg.declare(metadata i8** %str, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i8* null, i8** %str, align 8, !dbg !11996
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !11997
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 39, !dbg !11999
  %1 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !11999
  %type = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %1, i32 0, i32 17, !dbg !12000
  %2 = load i8* (%struct.uart_port*)*, i8* (%struct.uart_port*)** %type, align 8, !dbg !12000
  %tobool = icmp ne i8* (%struct.uart_port*)* %2, null, !dbg !11997
  br i1 %tobool, label %if.then, label %if.end, !dbg !12001

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12002
  %ops1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 39, !dbg !12003
  %4 = load %struct.uart_ops*, %struct.uart_ops** %ops1, align 8, !dbg !12003
  %type2 = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %4, i32 0, i32 17, !dbg !12004
  %5 = load i8* (%struct.uart_port*)*, i8* (%struct.uart_port*)** %type2, align 8, !dbg !12004
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12005
  %call = call i8* %5(%struct.uart_port* %6) #10, !dbg !12002
  store i8* %call, i8** %str, align 8, !dbg !12006
  br label %if.end, !dbg !12007

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8*, i8** %str, align 8, !dbg !12008
  %tobool3 = icmp ne i8* %7, null, !dbg !12008
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12010

if.then4:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i8** %str, align 8, !dbg !12011
  br label %if.end5, !dbg !12012

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load i8*, i8** %str, align 8, !dbg !12013
  ret i8* %8, !dbg !12014
}

; Function Attrs: noredzone
declare dso_local void @seq_putc(%struct.seq_file*, i8 signext) #2

; Function Attrs: noredzone
declare dso_local i8* @strncat(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local void @seq_puts(%struct.seq_file*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_carrier_raised(%struct.tty_port* %port) #0 !dbg !12015 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !4843, metadata !DIExpression()), !dbg !12016
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !12018
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %mctrl = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp17 = alloca i64, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12020, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12022, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12024, metadata !DIExpression()), !dbg !12026
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12026
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !12026
  store i8* %1, i8** %__mptr, align 8, !dbg !12026
  br label %do.body, !dbg !12026

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12027

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12026
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12026
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12026
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !12027
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12026
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !12023
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12029, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.declare(metadata i32* %mctrl, metadata !12031, metadata !DIExpression()), !dbg !12032
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12033
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %5) #10, !dbg !12034
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !12035
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12036, metadata !DIExpression()), !dbg !12039
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12039
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !12039
  %lnot = xor i1 %tobool, true, !dbg !12039
  %lnot1 = xor i1 %lnot, true, !dbg !12039
  %lnot2 = xor i1 %lnot1, true, !dbg !12039
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12039
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12039
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !12040
  %tobool3 = icmp ne i32 %7, 0, !dbg !12040
  %lnot4 = xor i1 %tobool3, true, !dbg !12040
  %lnot6 = xor i1 %lnot4, true, !dbg !12040
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !12040
  %conv = sext i32 %lnot.ext7 to i64, !dbg !12040
  %tobool8 = icmp ne i64 %conv, 0, !dbg !12040
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12039

if.then:                                          ; preds = %do.end
  br label %do.body9, !dbg !12040

do.body9:                                         ; preds = %if.then
  br label %do.body10, !dbg !12042

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !12044

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !12042

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 1728, i32 2305, i64 12) #7, !dbg !12046, !srcloc !12048
  br label %do.end13, !dbg !12046

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 242) #7, !dbg !12049, !srcloc !12051
  br label %do.body14, !dbg !12042

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !12052

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !12042

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !12042

if.end:                                           ; preds = %do.end16, %do.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !12039
  %tobool18 = icmp ne i32 %8, 0, !dbg !12039
  %lnot19 = xor i1 %tobool18, true, !dbg !12039
  %lnot21 = xor i1 %lnot19, true, !dbg !12039
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !12039
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !12039
  store i64 %conv23, i64* %tmp17, align 8, !dbg !12040
  %9 = load i64, i64* %tmp17, align 8, !dbg !12039
  %tobool24 = icmp ne i64 %9, 0, !dbg !12054
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !12055

if.then25:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !12056
  br label %return, !dbg !12056

if.end26:                                         ; preds = %if.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12057
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 0, !dbg !12058
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !12059
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12060, !srcloc !4939
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12061
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !12061
  %rlock.i = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !12061
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12062
  call void @uart_enable_ms(%struct.uart_port* %13) #10, !dbg !12063
  %14 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12064
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 39, !dbg !12065
  %15 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !12065
  %get_mctrl = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %15, i32 0, i32 2, !dbg !12066
  %16 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl, align 8, !dbg !12066
  %17 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12067
  %call27 = call i32 %16(%struct.uart_port* %17) #10, !dbg !12064
  store i32 %call27, i32* %mctrl, align 4, !dbg !12068
  %18 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12069
  %lock28 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 0, !dbg !12070
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i32, align 8
  call void @arch_local_irq_enable() #11, !dbg !12071
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12072, !srcloc !4958
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !12073
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !12073
  %rlock.i33 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !12073
  %21 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12074
  call void @uart_port_deref(%struct.uart_port* %21) #10, !dbg !12075
  %22 = load i32, i32* %mctrl, align 4, !dbg !12076
  %and = and i32 %22, 64, !dbg !12078
  %tobool29 = icmp ne i32 %and, 0, !dbg !12078
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !12079

if.then30:                                        ; preds = %if.end26
  store i32 1, i32* %retval, align 4, !dbg !12080
  br label %return, !dbg !12080

if.end31:                                         ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !12081
  br label %return, !dbg !12081

return:                                           ; preds = %if.end31, %if.then30, %if.then25
  %23 = load i32, i32* %retval, align 4, !dbg !12082
  ret i32 %23, !dbg !12082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_dtr_rts(%struct.tty_port* %port, i32 %raise) #0 !dbg !12083 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %raise.addr = alloca i32, align 4
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12084, metadata !DIExpression()), !dbg !12085
  store i32 %raise, i32* %raise.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %raise.addr, metadata !12086, metadata !DIExpression()), !dbg !12087
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12088, metadata !DIExpression()), !dbg !12089
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12090, metadata !DIExpression()), !dbg !12092
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12092
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !12092
  store i8* %1, i8** %__mptr, align 8, !dbg !12092
  br label %do.body, !dbg !12092

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12093

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12092
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12092
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12092
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !12093
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12092
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !12089
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12095, metadata !DIExpression()), !dbg !12096
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12097
  %call = call %struct.uart_port* @uart_port_ref(%struct.uart_state* %5) #10, !dbg !12098
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !12099
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12100
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !12100
  br i1 %tobool, label %if.end, label %if.then, !dbg !12102

if.then:                                          ; preds = %do.end
  br label %return, !dbg !12103

if.end:                                           ; preds = %do.end
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12104
  %8 = load i32, i32* %raise.addr, align 4, !dbg !12105
  call void @uart_port_dtr_rts(%struct.uart_port* %7, i32 %8) #10, !dbg !12106
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12107
  call void @uart_port_deref(%struct.uart_port* %9) #10, !dbg !12108
  br label %return, !dbg !12109

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_tty_port_shutdown(%struct.tty_port* %port) #0 !dbg !12110 {
entry:
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !4843, metadata !DIExpression()), !dbg !12111
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4852, metadata !DIExpression()), !dbg !12113
  %port.addr = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp23 = alloca i64, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12117, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12119, metadata !DIExpression()), !dbg !12121
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12121
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !12121
  store i8* %1, i8** %__mptr, align 8, !dbg !12121
  br label %do.body, !dbg !12121

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12122

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12121
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12121
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12121
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !12122
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12121
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !12118
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12124, metadata !DIExpression()), !dbg !12125
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12126
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !12127
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !12125
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12128, metadata !DIExpression()), !dbg !12131
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12131
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !12131
  %lnot = xor i1 %tobool, true, !dbg !12131
  %lnot1 = xor i1 %lnot, true, !dbg !12131
  %lnot2 = xor i1 %lnot1, true, !dbg !12131
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12131
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12131
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !12132
  %tobool3 = icmp ne i32 %7, 0, !dbg !12132
  %lnot4 = xor i1 %tobool3, true, !dbg !12132
  %lnot6 = xor i1 %lnot4, true, !dbg !12132
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !12132
  %conv = sext i32 %lnot.ext7 to i64, !dbg !12132
  %tobool8 = icmp ne i64 %conv, 0, !dbg !12132
  br i1 %tobool8, label %if.then, label %if.end, !dbg !12131

if.then:                                          ; preds = %do.end
  br label %do.body9, !dbg !12132

do.body9:                                         ; preds = %if.then
  br label %do.body10, !dbg !12134

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !12136

do.end11:                                         ; preds = %do.body10
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !12134
  br label %do.body12, !dbg !12134

do.body12:                                        ; preds = %do.end11
  br label %do.body13, !dbg !12138

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !12140

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !12138

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 1571, i32 2313, i64 12) #7, !dbg !12142, !srcloc !12144
  br label %do.end16, !dbg !12142

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 238) #7, !dbg !12145, !srcloc !12147
  br label %do.body17, !dbg !12138

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !12148

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !12138

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !12134

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !12150

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !12134

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !12134

if.end:                                           ; preds = %do.end22, %do.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !12131
  %tobool24 = icmp ne i32 %8, 0, !dbg !12131
  %lnot25 = xor i1 %tobool24, true, !dbg !12131
  %lnot27 = xor i1 %lnot25, true, !dbg !12131
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !12131
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !12131
  store i64 %conv29, i64* %tmp23, align 8, !dbg !12132
  %9 = load i64, i64* %tmp23, align 8, !dbg !12131
  %tobool30 = icmp ne i64 %9, 0, !dbg !12152
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !12153

if.then31:                                        ; preds = %if.end
  br label %return, !dbg !12154

if.end32:                                         ; preds = %if.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12155
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 0, !dbg !12156
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #11, !dbg !12157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12158, !srcloc !4939
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12159
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !12159
  %rlock.i = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !12159
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12160
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 39, !dbg !12161
  %14 = load %struct.uart_ops*, %struct.uart_ops** %ops, align 8, !dbg !12161
  %stop_rx = getelementptr inbounds %struct.uart_ops, %struct.uart_ops* %14, i32 0, i32 8, !dbg !12162
  %stop_rx33 = bitcast {}** %stop_rx to void (%struct.uart_port*)**, !dbg !12162
  %15 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %stop_rx33, align 8, !dbg !12162
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12163
  call void %15(%struct.uart_port* %16) #10, !dbg !12160
  %17 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12164
  %lock34 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 0, !dbg !12165
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i35, align 8
  call void @arch_local_irq_enable() #11, !dbg !12166
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12167, !srcloc !4958
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !12168
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !12168
  %rlock.i36 = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !12168
  %20 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12169
  call void @uart_port_shutdown(%struct.tty_port* %20) #10, !dbg !12170
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12171
  call void @tty_port_set_suspended(%struct.tty_port* %21, i1 zeroext false) #10, !dbg !12172
  %22 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12173
  call void @uart_change_pm(%struct.uart_state* %22, i32 3) #10, !dbg !12174
  br label %return, !dbg !12175

return:                                           ; preds = %if.end32, %if.then31
  ret void, !dbg !12175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_port_activate(%struct.tty_port* %port, %struct.tty_struct* %tty) #0 !dbg !12176 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !12177, metadata !DIExpression()), !dbg !12178
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12179, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12181, metadata !DIExpression()), !dbg !12182
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12183, metadata !DIExpression()), !dbg !12185
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12185
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !12185
  store i8* %1, i8** %__mptr, align 8, !dbg !12185
  br label %do.body, !dbg !12185

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12186

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12185
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12185
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12185
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !12186
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12185
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !12182
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12188, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12190, metadata !DIExpression()), !dbg !12191
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12192
  %call = call %struct.uart_port* @uart_port_check(%struct.uart_state* %5) #10, !dbg !12193
  store %struct.uart_port* %call, %struct.uart_port** %uport, align 8, !dbg !12194
  %6 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12195
  %tobool = icmp ne %struct.uart_port* %6, null, !dbg !12195
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12197

lor.lhs.false:                                    ; preds = %do.end
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12198
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 33, !dbg !12199
  %8 = load i32, i32* %flags, align 8, !dbg !12199
  %and = and i32 %8, 1073741824, !dbg !12200
  %tobool1 = icmp ne i32 %and, 0, !dbg !12200
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12201

if.then:                                          ; preds = %lor.lhs.false, %do.end
  store i32 -6, i32* %retval, align 4, !dbg !12202
  br label %return, !dbg !12202

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12203
  %flags2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 33, !dbg !12204
  %10 = load i32, i32* %flags2, align 8, !dbg !12204
  %and3 = and i32 %10, 8192, !dbg !12205
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12206
  %11 = zext i1 %tobool4 to i64, !dbg !12206
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12206
  %conv = trunc i32 %cond to i8, !dbg !12206
  %12 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12207
  %low_latency = getelementptr inbounds %struct.tty_port, %struct.tty_port* %12, i32 0, i32 12, !dbg !12208
  %bf.load = load i8, i8* %low_latency, align 8, !dbg !12209
  %bf.value = and i8 %conv, 1, !dbg !12209
  %bf.shl = shl i8 %bf.value, 1, !dbg !12209
  %bf.clear = and i8 %bf.load, -3, !dbg !12209
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !12209
  store i8 %bf.set, i8* %low_latency, align 8, !dbg !12209
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12210
  %14 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12211
  %call5 = call i32 @uart_startup(%struct.tty_struct* %13, %struct.uart_state* %14, i32 0) #10, !dbg !12212
  store i32 %call5, i32* %ret, align 4, !dbg !12213
  %15 = load i32, i32* %ret, align 4, !dbg !12214
  %cmp = icmp sgt i32 %15, 0, !dbg !12216
  br i1 %cmp, label %if.then7, label %if.end8, !dbg !12217

if.then7:                                         ; preds = %if.end
  %16 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !12218
  call void @tty_port_set_active(%struct.tty_port* %16, i1 zeroext true) #10, !dbg !12219
  br label %if.end8, !dbg !12219

if.end8:                                          ; preds = %if.then7, %if.end
  %17 = load i32, i32* %ret, align 4, !dbg !12220
  store i32 %17, i32* %retval, align 4, !dbg !12221
  br label %return, !dbg !12221

return:                                           ; preds = %if.end8, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !12222
  ret i32 %18, !dbg !12222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_report_port(%struct.uart_driver* %drv, %struct.uart_port* %port) #0 !dbg !12223 {
entry:
  %drv.addr = alloca %struct.uart_driver*, align 8
  %port.addr = alloca %struct.uart_port*, align 8
  %address = alloca [64 x i8], align 16
  store %struct.uart_driver* %drv, %struct.uart_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_driver** %drv.addr, metadata !12226, metadata !DIExpression()), !dbg !12227
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !12228, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.declare(metadata [64 x i8]* %address, metadata !12230, metadata !DIExpression()), !dbg !12231
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12232
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 26, !dbg !12233
  %1 = load i8, i8* %iotype, align 2, !dbg !12233
  %conv = zext i8 %1 to i32, !dbg !12232
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb6
    i32 7, label %sw.bb6
    i32 3, label %sw.bb6
    i32 6, label %sw.bb6
    i32 4, label %sw.bb6
    i32 5, label %sw.bb6
  ], !dbg !12234

sw.bb:                                            ; preds = %entry
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %address, i64 0, i64 0, !dbg !12235
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12237
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 1, !dbg !12238
  %3 = load i64, i64* %iobase, align 8, !dbg !12238
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i64 %3) #10, !dbg !12239
  br label %sw.epilog, !dbg !12240

sw.bb1:                                           ; preds = %entry
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %address, i64 0, i64 0, !dbg !12241
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12242
  %iobase3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 1, !dbg !12243
  %5 = load i64, i64* %iobase3, align 8, !dbg !12243
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12244
  %hub6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 50, !dbg !12245
  %7 = load i8, i8* %hub6, align 2, !dbg !12245
  %conv4 = zext i8 %7 to i32, !dbg !12244
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay2, i64 64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0), i64 %5, i32 %conv4) #10, !dbg !12246
  br label %sw.epilog, !dbg !12247

sw.bb6:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %address, i64 0, i64 0, !dbg !12248
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12249
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 43, !dbg !12250
  %9 = load i64, i64* %mapbase, align 8, !dbg !12250
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay7, i64 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), i64 %9) #10, !dbg !12251
  br label %sw.epilog, !dbg !12252

sw.default:                                       ; preds = %entry
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %address, i64 0, i64 0, !dbg !12253
  %call10 = call i64 @strlcpy(i8* %arraydecay9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i64 64) #10, !dbg !12254
  br label %sw.epilog, !dbg !12255

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb1, %sw.bb
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 45, !dbg !12256
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12256
  %tobool = icmp ne %struct.device* %11, null, !dbg !12256
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12256

cond.true:                                        ; preds = %sw.epilog
  %12 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %dev11 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 45, !dbg !12256
  %13 = load %struct.device*, %struct.device** %dev11, align 8, !dbg !12256
  %call12 = call i8* @dev_name(%struct.device* %13) #10, !dbg !12256
  br label %cond.end, !dbg !12256

cond.false:                                       ; preds = %sw.epilog
  br label %cond.end, !dbg !12256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call12, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), %cond.false ], !dbg !12256
  %14 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %dev13 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 45, !dbg !12256
  %15 = load %struct.device*, %struct.device** %dev13, align 8, !dbg !12256
  %tobool14 = icmp ne %struct.device* %15, null, !dbg !12256
  %16 = zext i1 %tobool14 to i64, !dbg !12256
  %cond15 = select i1 %tobool14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0), !dbg !12256
  %17 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %name = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 53, !dbg !12256
  %18 = load i8*, i8** %name, align 8, !dbg !12256
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %address, i64 0, i64 0, !dbg !12256
  %19 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 20, !dbg !12256
  %20 = load i32, i32* %irq, align 8, !dbg !12256
  %21 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %21, i32 0, i32 22, !dbg !12256
  %22 = load i32, i32* %uartclk, align 8, !dbg !12256
  %div = udiv i32 %22, 16, !dbg !12256
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !12256
  %call17 = call i8* @uart_type(%struct.uart_port* %23) #10, !dbg !12256
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.40, i64 0, i64 0), i8* %cond, i8* %cond15, i8* %18, i8* %arraydecay16, i32 %20, i32 %div, i8* %call17) #12, !dbg !12256
  ret void, !dbg !12257
}

; Function Attrs: noredzone
declare dso_local void @register_console(%struct.console*) #2

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !12258 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12261, metadata !DIExpression()), !dbg !12262
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12263
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12265
  %1 = load i8*, i8** %init_name, align 8, !dbg !12265
  %tobool = icmp ne i8* %1, null, !dbg !12263
  br i1 %tobool, label %if.then, label %if.end, !dbg !12266

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12267
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !12268
  %3 = load i8*, i8** %init_name1, align 8, !dbg !12268
  store i8* %3, i8** %retval, align 8, !dbg !12269
  br label %return, !dbg !12269

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12270
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !12271
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !12272
  store i8* %call, i8** %retval, align 8, !dbg !12273
  br label %return, !dbg !12273

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !12274
  ret i8* %5, !dbg !12274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !12275 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !12280, metadata !DIExpression()), !dbg !12281
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !12282
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !12283
  %1 = load i8*, i8** %name, align 8, !dbg !12283
  ret i8* %1, !dbg !12284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @uartclk_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12285 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12286, metadata !DIExpression()), !dbg !12287
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12288, metadata !DIExpression()), !dbg !12289
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12290, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12292, metadata !DIExpression()), !dbg !12293
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12294, metadata !DIExpression()), !dbg !12295
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12296
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12297
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12297
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12295
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12298
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12299
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12300
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 7, !dbg !12301
  %4 = load i32, i32* %baud_base, align 4, !dbg !12301
  %mul = mul i32 %4, 16, !dbg !12302
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %mul) #10, !dbg !12303
  %conv = sext i32 %call2 to i64, !dbg !12303
  ret i64 %conv, !dbg !12304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !12305 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12308, metadata !DIExpression()), !dbg !12309
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12310
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !12311
  %1 = load i8*, i8** %driver_data, align 8, !dbg !12311
  ret i8* %1, !dbg !12312
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @type_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12313 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12314, metadata !DIExpression()), !dbg !12315
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12316, metadata !DIExpression()), !dbg !12317
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12318, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12320, metadata !DIExpression()), !dbg !12321
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12322, metadata !DIExpression()), !dbg !12323
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12324
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12325
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12325
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12323
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12326
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12327
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12328
  %type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 0, !dbg !12329
  %4 = load i32, i32* %type, align 8, !dbg !12329
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %4) #10, !dbg !12330
  %conv = sext i32 %call2 to i64, !dbg !12330
  ret i64 %conv, !dbg !12331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @line_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12332 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12335, metadata !DIExpression()), !dbg !12336
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12337, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12339, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12343
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12344
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12344
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12342
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12345
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12346
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12347
  %line = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 1, !dbg !12348
  %4 = load i32, i32* %line, align 4, !dbg !12348
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %4) #10, !dbg !12349
  %conv = sext i32 %call2 to i64, !dbg !12349
  ret i64 %conv, !dbg !12350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @port_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12351 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  %ioaddr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12352, metadata !DIExpression()), !dbg !12353
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12354, metadata !DIExpression()), !dbg !12355
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12356, metadata !DIExpression()), !dbg !12357
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12358, metadata !DIExpression()), !dbg !12359
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12360, metadata !DIExpression()), !dbg !12361
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12362
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12363
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12363
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12361
  call void @llvm.dbg.declare(metadata i64* %ioaddr, metadata !12364, metadata !DIExpression()), !dbg !12365
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12366
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12367
  %port2 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 2, !dbg !12368
  %3 = load i32, i32* %port2, align 8, !dbg !12368
  %conv = zext i32 %3 to i64, !dbg !12369
  store i64 %conv, i64* %ioaddr, align 8, !dbg !12370
  %port_high = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 16, !dbg !12371
  %4 = load i32, i32* %port_high, align 4, !dbg !12371
  %conv3 = zext i32 %4 to i64, !dbg !12373
  %shl = shl i64 %conv3, 32, !dbg !12374
  %5 = load i64, i64* %ioaddr, align 8, !dbg !12375
  %or = or i64 %5, %shl, !dbg !12375
  store i64 %or, i64* %ioaddr, align 8, !dbg !12375
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !12376
  %7 = load i64, i64* %ioaddr, align 8, !dbg !12377
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i64 %7) #10, !dbg !12378
  %conv5 = sext i32 %call4 to i64, !dbg !12378
  ret i64 %conv5, !dbg !12379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @irq_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12380 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12381, metadata !DIExpression()), !dbg !12382
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12387, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12389, metadata !DIExpression()), !dbg !12390
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12391
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12392
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12392
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12390
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12393
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12394
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12395
  %irq = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 3, !dbg !12396
  %4 = load i32, i32* %irq, align 4, !dbg !12396
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %4) #10, !dbg !12397
  %conv = sext i32 %call2 to i64, !dbg !12397
  ret i64 %conv, !dbg !12398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @flags_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12399 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12400, metadata !DIExpression()), !dbg !12401
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12402, metadata !DIExpression()), !dbg !12403
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12406, metadata !DIExpression()), !dbg !12407
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12408, metadata !DIExpression()), !dbg !12409
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12410
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12411
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12411
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12409
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12412
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12413
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12414
  %flags = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 4, !dbg !12415
  %4 = load i32, i32* %flags, align 8, !dbg !12415
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i64 0, i64 0), i32 %4) #10, !dbg !12416
  %conv = sext i32 %call2 to i64, !dbg !12416
  ret i64 %conv, !dbg !12417
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xmit_fifo_size_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12418 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12425, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12427, metadata !DIExpression()), !dbg !12428
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12429
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12430
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12430
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12428
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12431
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12432
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12433
  %xmit_fifo_size = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 5, !dbg !12434
  %4 = load i32, i32* %xmit_fifo_size, align 4, !dbg !12434
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %4) #10, !dbg !12435
  %conv = sext i32 %call2 to i64, !dbg !12435
  ret i64 %conv, !dbg !12436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @close_delay_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12437 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12438, metadata !DIExpression()), !dbg !12439
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12440, metadata !DIExpression()), !dbg !12441
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12444, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12446, metadata !DIExpression()), !dbg !12447
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12448
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12449
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12449
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12447
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12450
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12451
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12452
  %close_delay = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 8, !dbg !12453
  %4 = load i16, i16* %close_delay, align 8, !dbg !12453
  %conv = zext i16 %4 to i32, !dbg !12454
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %conv) #10, !dbg !12455
  %conv3 = sext i32 %call2 to i64, !dbg !12455
  ret i64 %conv3, !dbg !12456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @closing_wait_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12457 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12458, metadata !DIExpression()), !dbg !12459
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12460, metadata !DIExpression()), !dbg !12461
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12462, metadata !DIExpression()), !dbg !12463
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12464, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12466, metadata !DIExpression()), !dbg !12467
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12468
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12469
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12469
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12467
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12470
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12471
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12472
  %closing_wait = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 12, !dbg !12473
  %4 = load i16, i16* %closing_wait, align 8, !dbg !12473
  %conv = zext i16 %4 to i32, !dbg !12474
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %conv) #10, !dbg !12475
  %conv3 = sext i32 %call2 to i64, !dbg !12475
  ret i64 %conv3, !dbg !12476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @custom_divisor_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12477 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12482, metadata !DIExpression()), !dbg !12483
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12486, metadata !DIExpression()), !dbg !12487
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12488
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12489
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12489
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12487
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12490
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12491
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12492
  %custom_divisor = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 6, !dbg !12493
  %4 = load i32, i32* %custom_divisor, align 8, !dbg !12493
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %4) #10, !dbg !12494
  %conv = sext i32 %call2 to i64, !dbg !12494
  ret i64 %conv, !dbg !12495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @io_type_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12496 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12499, metadata !DIExpression()), !dbg !12500
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12501, metadata !DIExpression()), !dbg !12502
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12503, metadata !DIExpression()), !dbg !12504
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12505, metadata !DIExpression()), !dbg !12506
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12507
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12508
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12508
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12506
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12509
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12510
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12511
  %io_type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 9, !dbg !12512
  %4 = load i8, i8* %io_type, align 2, !dbg !12512
  %conv = sext i8 %4 to i32, !dbg !12513
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %conv) #10, !dbg !12514
  %conv3 = sext i32 %call2 to i64, !dbg !12514
  ret i64 %conv3, !dbg !12515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iomem_base_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12516 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12517, metadata !DIExpression()), !dbg !12518
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12519, metadata !DIExpression()), !dbg !12520
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12521, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12523, metadata !DIExpression()), !dbg !12524
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12525, metadata !DIExpression()), !dbg !12526
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12527
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12528
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12528
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12526
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12529
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12530
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12531
  %iomem_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 14, !dbg !12532
  %4 = load i8*, i8** %iomem_base, align 8, !dbg !12532
  %5 = ptrtoint i8* %4 to i64, !dbg !12533
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0), i64 %5) #10, !dbg !12534
  %conv = sext i32 %call2 to i64, !dbg !12534
  ret i64 %conv, !dbg !12535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iomem_reg_shift_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12536 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca %struct.serial_struct, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12537, metadata !DIExpression()), !dbg !12538
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12539, metadata !DIExpression()), !dbg !12540
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12541, metadata !DIExpression()), !dbg !12542
  call void @llvm.dbg.declare(metadata %struct.serial_struct* %tmp, metadata !12543, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12545, metadata !DIExpression()), !dbg !12546
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12547
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12548
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12548
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12546
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12549
  %call1 = call i32 @uart_get_info(%struct.tty_port* %2, %struct.serial_struct* %tmp) #10, !dbg !12550
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !12551
  %iomem_reg_shift = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %tmp, i32 0, i32 15, !dbg !12552
  %4 = load i16, i16* %iomem_reg_shift, align 8, !dbg !12552
  %conv = zext i16 %4 to i32, !dbg !12553
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 %conv) #10, !dbg !12554
  %conv3 = sext i32 %call2 to i64, !dbg !12554
  ret i64 %conv3, !dbg !12555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @console_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12556 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %port = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %console = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12557, metadata !DIExpression()), !dbg !12558
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12559, metadata !DIExpression()), !dbg !12560
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12563, metadata !DIExpression()), !dbg !12564
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12565
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12566
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12566
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12564
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12567, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12569, metadata !DIExpression()), !dbg !12571
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12571
  %3 = bitcast %struct.tty_port* %2 to i8*, !dbg !12571
  store i8* %3, i8** %__mptr, align 8, !dbg !12571
  br label %do.body, !dbg !12571

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12572

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12571
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !12571
  %5 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12571
  store %struct.uart_state* %5, %struct.uart_state** %tmp, align 8, !dbg !12572
  %6 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12571
  store %struct.uart_state* %6, %struct.uart_state** %state, align 8, !dbg !12568
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12574, metadata !DIExpression()), !dbg !12575
  call void @llvm.dbg.declare(metadata i8* %console, metadata !12576, metadata !DIExpression()), !dbg !12577
  store i8 0, i8* %console, align 1, !dbg !12577
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12578
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %7, i32 0, i32 13, !dbg !12579
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !12580
  %8 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12581
  %call1 = call %struct.uart_port* @uart_port_check(%struct.uart_state* %8) #10, !dbg !12582
  store %struct.uart_port* %call1, %struct.uart_port** %uport, align 8, !dbg !12583
  %9 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12584
  %tobool = icmp ne %struct.uart_port* %9, null, !dbg !12584
  br i1 %tobool, label %if.then, label %if.end, !dbg !12586

if.then:                                          ; preds = %do.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12587
  %call2 = call zeroext i1 @uart_console_enabled(%struct.uart_port* %10) #10, !dbg !12588
  %frombool = zext i1 %call2 to i8, !dbg !12589
  store i8 %frombool, i8* %console, align 1, !dbg !12589
  br label %if.end, !dbg !12590

if.end:                                           ; preds = %if.then, %do.end
  %11 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12591
  %mutex3 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %11, i32 0, i32 13, !dbg !12592
  call void @mutex_unlock(%struct.mutex* %mutex3) #10, !dbg !12593
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !12594
  %13 = load i8, i8* %console, align 1, !dbg !12595
  %tobool4 = trunc i8 %13 to i1, !dbg !12595
  %14 = zext i1 %tobool4 to i64, !dbg !12595
  %cond = select i1 %tobool4, i32 89, i32 78, !dbg !12595
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i32 %cond) #10, !dbg !12596
  %conv = sext i32 %call5 to i64, !dbg !12596
  ret i64 %conv, !dbg !12597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @console_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12598 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %port = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %oldconsole = alloca i8, align 1
  %newconsole = alloca i8, align 1
  %ret = alloca i32, align 4
  %tmp16 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12599, metadata !DIExpression()), !dbg !12600
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12601, metadata !DIExpression()), !dbg !12602
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !12607, metadata !DIExpression()), !dbg !12608
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12609
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !12610
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !12610
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !12608
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !12611, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12613, metadata !DIExpression()), !dbg !12615
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12615
  %3 = bitcast %struct.tty_port* %2 to i8*, !dbg !12615
  store i8* %3, i8** %__mptr, align 8, !dbg !12615
  br label %do.body, !dbg !12615

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12616

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !12615
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !12615
  %5 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !12615
  store %struct.uart_state* %5, %struct.uart_state** %tmp, align 8, !dbg !12616
  %6 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !12615
  store %struct.uart_state* %6, %struct.uart_state** %state, align 8, !dbg !12612
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !12618, metadata !DIExpression()), !dbg !12619
  call void @llvm.dbg.declare(metadata i8* %oldconsole, metadata !12620, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.declare(metadata i8* %newconsole, metadata !12622, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12624, metadata !DIExpression()), !dbg !12625
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !12626
  %call1 = call i32 @kstrtobool(i8* %7, i8* %newconsole) #10, !dbg !12627
  store i32 %call1, i32* %ret, align 4, !dbg !12628
  %8 = load i32, i32* %ret, align 4, !dbg !12629
  %tobool = icmp ne i32 %8, 0, !dbg !12629
  br i1 %tobool, label %if.then, label %if.end, !dbg !12631

if.then:                                          ; preds = %do.end
  %9 = load i32, i32* %ret, align 4, !dbg !12632
  %conv = sext i32 %9 to i64, !dbg !12632
  store i64 %conv, i64* %retval, align 8, !dbg !12633
  br label %return, !dbg !12633

if.end:                                           ; preds = %do.end
  %10 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12634
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %10, i32 0, i32 13, !dbg !12635
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !12636
  %11 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !12637
  %call2 = call %struct.uart_port* @uart_port_check(%struct.uart_state* %11) #10, !dbg !12638
  store %struct.uart_port* %call2, %struct.uart_port** %uport, align 8, !dbg !12639
  %12 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12640
  %tobool3 = icmp ne %struct.uart_port* %12, null, !dbg !12640
  br i1 %tobool3, label %if.then4, label %if.else24, !dbg !12642

if.then4:                                         ; preds = %if.end
  %13 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12643
  %call5 = call zeroext i1 @uart_console_enabled(%struct.uart_port* %13) #10, !dbg !12645
  %frombool = zext i1 %call5 to i8, !dbg !12646
  store i8 %frombool, i8* %oldconsole, align 1, !dbg !12646
  %14 = load i8, i8* %oldconsole, align 1, !dbg !12647
  %tobool6 = trunc i8 %14 to i1, !dbg !12647
  br i1 %tobool6, label %land.lhs.true, label %if.else, !dbg !12649

land.lhs.true:                                    ; preds = %if.then4
  %15 = load i8, i8* %newconsole, align 1, !dbg !12650
  %tobool8 = trunc i8 %15 to i1, !dbg !12650
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !12651

if.then9:                                         ; preds = %land.lhs.true
  %16 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12652
  %cons = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 32, !dbg !12654
  %17 = load %struct.console*, %struct.console** %cons, align 8, !dbg !12654
  %call10 = call i32 @unregister_console(%struct.console* %17) #10, !dbg !12655
  store i32 %call10, i32* %ret, align 4, !dbg !12656
  br label %if.end23, !dbg !12657

if.else:                                          ; preds = %land.lhs.true, %if.then4
  %18 = load i8, i8* %oldconsole, align 1, !dbg !12658
  %tobool11 = trunc i8 %18 to i1, !dbg !12658
  br i1 %tobool11, label %if.end22, label %land.lhs.true12, !dbg !12660

land.lhs.true12:                                  ; preds = %if.else
  %19 = load i8, i8* %newconsole, align 1, !dbg !12661
  %tobool13 = trunc i8 %19 to i1, !dbg !12661
  br i1 %tobool13, label %if.then15, label %if.end22, !dbg !12662

if.then15:                                        ; preds = %land.lhs.true12
  %20 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12663
  store i32 0, i32* %tmp16, align 4, !dbg !12663
  %21 = load i32, i32* %tmp16, align 4, !dbg !12663
  %tobool17 = icmp ne i32 %21, 0, !dbg !12667
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !12668

if.then18:                                        ; preds = %if.then15
  %22 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12669
  %console_reinit = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 52, !dbg !12671
  store i8 1, i8* %console_reinit, align 8, !dbg !12672
  %23 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !12673
  %cons19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 32, !dbg !12674
  %24 = load %struct.console*, %struct.console** %cons19, align 8, !dbg !12674
  call void @register_console(%struct.console* %24) #10, !dbg !12675
  br label %if.end21, !dbg !12676

if.else20:                                        ; preds = %if.then15
  store i32 -2, i32* %ret, align 4, !dbg !12677
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then18
  br label %if.end22, !dbg !12679

if.end22:                                         ; preds = %if.end21, %land.lhs.true12, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then9
  br label %if.end25, !dbg !12680

if.else24:                                        ; preds = %if.end
  store i32 -6, i32* %ret, align 4, !dbg !12681
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.end23
  %25 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12683
  %mutex26 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %25, i32 0, i32 13, !dbg !12684
  call void @mutex_unlock(%struct.mutex* %mutex26) #10, !dbg !12685
  %26 = load i32, i32* %ret, align 4, !dbg !12686
  %cmp = icmp slt i32 %26, 0, !dbg !12687
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12686

cond.true:                                        ; preds = %if.end25
  %27 = load i32, i32* %ret, align 4, !dbg !12688
  %conv28 = sext i32 %27 to i64, !dbg !12688
  br label %cond.end, !dbg !12686

cond.false:                                       ; preds = %if.end25
  %28 = load i64, i64* %count.addr, align 8, !dbg !12689
  br label %cond.end, !dbg !12686

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv28, %cond.true ], [ %28, %cond.false ], !dbg !12686
  store i64 %cond, i64* %retval, align 8, !dbg !12690
  br label %return, !dbg !12690

return:                                           ; preds = %cond.end, %if.then
  %29 = load i64, i64* %retval, align 8, !dbg !12691
  ret i64 %29, !dbg !12691
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtobool(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #0 !dbg !12692 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !12699
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !12700
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #10, !dbg !12701
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !12702
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !12703
  %3 = load i32, i32* %size, align 4, !dbg !12703
  %idx.ext = sext i32 %3 to i64, !dbg !12704
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !12704
  ret i8* %add.ptr, !dbg !12705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #0 !dbg !12706 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !12709, metadata !DIExpression()), !dbg !12710
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !12711, metadata !DIExpression()), !dbg !12712
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !12713
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !12714
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !12713
  %1 = bitcast i64* %arraydecay to i8*, !dbg !12715
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !12716
  %idx.ext = sext i32 %2 to i64, !dbg !12717
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !12717
  ret i8* %add.ptr, !dbg !12718
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @device_property_present(%struct.device*, i8*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4588}
!llvm.module.flags = !{!4589, !4590, !4591, !4592}
!llvm.ident = !{!4593}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "uart_ops", scope: !2, file: !3, line: 2477, type: !3954, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !181, globals: !4497, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/serial/serial_core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !99, !108, !113, !120, !147, !154}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_pm_state", file: !94, line: 277, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/serial_core.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98}
!96 = !DIEnumerator(name: "UART_PM_STATE_ON", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "UART_PM_STATE_OFF", value: 3, isUnsigned: true)
!98 = !DIEnumerator(name: "UART_PM_STATE_UNDEFINED", value: 4, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpiod_flags", file: !100, line: 49, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "./include/linux/gpio/consumer.h", directory: "/home/lizy2001/genbc/linux")
!101 = !{!102, !103, !104, !105, !106, !107}
!102 = !DIEnumerator(name: "GPIOD_ASIS", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "GPIOD_IN", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "GPIOD_OUT_LOW", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "GPIOD_OUT_HIGH", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "GPIOD_OUT_LOW_OPEN_DRAIN", value: 11, isUnsigned: true)
!107 = !DIEnumerator(name: "GPIOD_OUT_HIGH_OPEN_DRAIN", value: 15, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !109, line: 10, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112}
!111 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !114, line: 478, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!115 = !{!116, !117, !118, !119}
!116 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!120 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !121, line: 223, baseType: !7, size: 32, elements: !122)
!121 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!122 = !{!123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146}
!123 = !DIEnumerator(name: "IRQD_TRIGGER_MASK", value: 15, isUnsigned: true)
!124 = !DIEnumerator(name: "IRQD_SETAFFINITY_PENDING", value: 256, isUnsigned: true)
!125 = !DIEnumerator(name: "IRQD_ACTIVATED", value: 512, isUnsigned: true)
!126 = !DIEnumerator(name: "IRQD_NO_BALANCING", value: 1024, isUnsigned: true)
!127 = !DIEnumerator(name: "IRQD_PER_CPU", value: 2048, isUnsigned: true)
!128 = !DIEnumerator(name: "IRQD_AFFINITY_SET", value: 4096, isUnsigned: true)
!129 = !DIEnumerator(name: "IRQD_LEVEL", value: 8192, isUnsigned: true)
!130 = !DIEnumerator(name: "IRQD_WAKEUP_STATE", value: 16384, isUnsigned: true)
!131 = !DIEnumerator(name: "IRQD_MOVE_PCNTXT", value: 32768, isUnsigned: true)
!132 = !DIEnumerator(name: "IRQD_IRQ_DISABLED", value: 65536, isUnsigned: true)
!133 = !DIEnumerator(name: "IRQD_IRQ_MASKED", value: 131072, isUnsigned: true)
!134 = !DIEnumerator(name: "IRQD_IRQ_INPROGRESS", value: 262144, isUnsigned: true)
!135 = !DIEnumerator(name: "IRQD_WAKEUP_ARMED", value: 524288, isUnsigned: true)
!136 = !DIEnumerator(name: "IRQD_FORWARDED_TO_VCPU", value: 1048576, isUnsigned: true)
!137 = !DIEnumerator(name: "IRQD_AFFINITY_MANAGED", value: 2097152, isUnsigned: true)
!138 = !DIEnumerator(name: "IRQD_IRQ_STARTED", value: 4194304, isUnsigned: true)
!139 = !DIEnumerator(name: "IRQD_MANAGED_SHUTDOWN", value: 8388608, isUnsigned: true)
!140 = !DIEnumerator(name: "IRQD_SINGLE_TARGET", value: 16777216, isUnsigned: true)
!141 = !DIEnumerator(name: "IRQD_DEFAULT_TRIGGER_SET", value: 33554432, isUnsigned: true)
!142 = !DIEnumerator(name: "IRQD_CAN_RESERVE", value: 67108864, isUnsigned: true)
!143 = !DIEnumerator(name: "IRQD_MSI_NOMASK_QUIRK", value: 134217728, isUnsigned: true)
!144 = !DIEnumerator(name: "IRQD_HANDLE_ENFORCE_IRQCTX", value: 268435456, isUnsigned: true)
!145 = !DIEnumerator(name: "IRQD_AFFINITY_ON_ACTIVATE", value: 536870912, isUnsigned: true)
!146 = !DIEnumerator(name: "IRQD_IRQ_ENABLED_ON_SUSPEND", value: 1073741824, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !148, line: 305, baseType: !7, size: 32, elements: !149)
!148 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!149 = !{!150, !151, !152, !153}
!150 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lockdown_reason", file: !155, line: 106, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./include/linux/security.h", directory: "/home/lizy2001/genbc/linux")
!156 = !{!157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180}
!157 = !DIEnumerator(name: "LOCKDOWN_NONE", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "LOCKDOWN_MODULE_SIGNATURE", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "LOCKDOWN_DEV_MEM", value: 2, isUnsigned: true)
!160 = !DIEnumerator(name: "LOCKDOWN_EFI_TEST", value: 3, isUnsigned: true)
!161 = !DIEnumerator(name: "LOCKDOWN_KEXEC", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "LOCKDOWN_HIBERNATION", value: 5, isUnsigned: true)
!163 = !DIEnumerator(name: "LOCKDOWN_PCI_ACCESS", value: 6, isUnsigned: true)
!164 = !DIEnumerator(name: "LOCKDOWN_IOPORT", value: 7, isUnsigned: true)
!165 = !DIEnumerator(name: "LOCKDOWN_MSR", value: 8, isUnsigned: true)
!166 = !DIEnumerator(name: "LOCKDOWN_ACPI_TABLES", value: 9, isUnsigned: true)
!167 = !DIEnumerator(name: "LOCKDOWN_PCMCIA_CIS", value: 10, isUnsigned: true)
!168 = !DIEnumerator(name: "LOCKDOWN_TIOCSSERIAL", value: 11, isUnsigned: true)
!169 = !DIEnumerator(name: "LOCKDOWN_MODULE_PARAMETERS", value: 12, isUnsigned: true)
!170 = !DIEnumerator(name: "LOCKDOWN_MMIOTRACE", value: 13, isUnsigned: true)
!171 = !DIEnumerator(name: "LOCKDOWN_DEBUGFS", value: 14, isUnsigned: true)
!172 = !DIEnumerator(name: "LOCKDOWN_XMON_WR", value: 15, isUnsigned: true)
!173 = !DIEnumerator(name: "LOCKDOWN_INTEGRITY_MAX", value: 16, isUnsigned: true)
!174 = !DIEnumerator(name: "LOCKDOWN_KCORE", value: 17, isUnsigned: true)
!175 = !DIEnumerator(name: "LOCKDOWN_KPROBES", value: 18, isUnsigned: true)
!176 = !DIEnumerator(name: "LOCKDOWN_BPF_READ", value: 19, isUnsigned: true)
!177 = !DIEnumerator(name: "LOCKDOWN_PERF", value: 20, isUnsigned: true)
!178 = !DIEnumerator(name: "LOCKDOWN_TRACEFS", value: 21, isUnsigned: true)
!179 = !DIEnumerator(name: "LOCKDOWN_XMON_RW", value: 22, isUnsigned: true)
!180 = !DIEnumerator(name: "LOCKDOWN_CONFIDENTIALITY_MAX", value: 23, isUnsigned: true)
!181 = !{!182, !183, !185, !186, !188, !191, !194, !187, !195, !4490, !776, !4493, !701, !4103, !4495, !1307, !220, !193, !493, !4496, !353}
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "upf_t", file: !94, line: 103, baseType: !7)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !184, line: 148, baseType: !7)
!184 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!187 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !190)
!190 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !193)
!193 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "upstat_t", file: !94, line: 104, baseType: !7)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_state", file: !94, line: 286, size: 2880, elements: !197)
!197 = !{!198, !4265, !4266, !4273, !4274, !4275}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !196, file: !94, line: 287, baseType: !199, size: 2432)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !200, line: 230, size: 2432, elements: !201)
!200 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!201 = !{!202, !292, !4215, !4216, !4238, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !199, file: !200, line: 231, baseType: !203, size: 1024)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !200, line: 85, size: 1024, elements: !204)
!204 = !{!205, !229, !257, !279, !284, !285, !289, !290, !291}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !203, file: !200, line: 86, baseType: !206, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !200, line: 58, size: 256, elements: !208)
!208 = !{!209, !219, !221, !222, !223, !224, !225}
!209 = !DIDerivedType(tag: DW_TAG_member, scope: !207, file: !200, line: 59, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !207, file: !200, line: 59, size: 64, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !210, file: !200, line: 60, baseType: !206, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !210, file: !200, line: 61, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !215, line: 58, size: 64, elements: !216)
!215 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!216 = !{!217}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !214, file: !215, line: 59, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !207, file: !200, line: 63, baseType: !220, size: 32, offset: 64)
!220 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !207, file: !200, line: 64, baseType: !220, size: 32, offset: 96)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !207, file: !200, line: 65, baseType: !220, size: 32, offset: 128)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !207, file: !200, line: 66, baseType: !220, size: 32, offset: 160)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !207, file: !200, line: 67, baseType: !220, size: 32, offset: 192)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !207, file: !200, line: 69, baseType: !226, offset: 256)
!226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, elements: !227)
!227 = !{!228}
!228 = !DISubrange(count: -1)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !203, file: !200, line: 87, baseType: !230, size: 256, offset: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !231, line: 102, size: 256, elements: !232)
!231 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !245, !251}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !231, line: 103, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !235, line: 13, baseType: !236)
!235 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !184, line: 175, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 173, size: 64, elements: !238)
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !237, file: !184, line: 174, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !241, line: 22, baseType: !242)
!241 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !243, line: 30, baseType: !244)
!243 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!244 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !230, file: !231, line: 104, baseType: !246, size: 128, offset: 64)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !184, line: 178, size: 128, elements: !247)
!247 = !{!248, !250}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !246, file: !184, line: 179, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !246, file: !184, line: 179, baseType: !249, size: 64, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !230, file: !231, line: 105, baseType: !252, size: 64, offset: 192)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !231, line: 21, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !256}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !203, file: !200, line: 88, baseType: !258, size: 192, offset: 320)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !259, line: 53, size: 192, elements: !260)
!259 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!260 = !{!261, !262, !278}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !258, file: !259, line: 54, baseType: !234, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !258, file: !259, line: 55, baseType: !263, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !264, line: 83, baseType: !265)
!264 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !264, line: 71, elements: !266)
!266 = !{!267}
!267 = !DIDerivedType(tag: DW_TAG_member, scope: !265, file: !264, line: 72, baseType: !268)
!268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !265, file: !264, line: 72, elements: !269)
!269 = !{!270}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !268, file: !264, line: 73, baseType: !271)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !264, line: 20, elements: !272)
!272 = !{!273}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !271, file: !264, line: 21, baseType: !274)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !275, line: 25, baseType: !276)
!275 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !275, line: 25, elements: !277)
!277 = !{}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !258, file: !259, line: 59, baseType: !246, size: 128, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !203, file: !200, line: 89, baseType: !280, size: 32, offset: 512)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !184, line: 168, baseType: !281)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !184, line: 166, size: 32, elements: !282)
!282 = !{!283}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !281, file: !184, line: 167, baseType: !220, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !203, file: !200, line: 90, baseType: !207, size: 256, offset: 576)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !203, file: !200, line: 91, baseType: !286, size: 64, offset: 832)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !215, line: 54, size: 64, elements: !287)
!287 = !{!288}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !286, file: !215, line: 55, baseType: !218, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !203, file: !200, line: 92, baseType: !280, size: 32, offset: 896)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !203, file: !200, line: 93, baseType: !220, size: 32, offset: 928)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !203, file: !200, line: 94, baseType: !206, size: 64, offset: 960)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !199, file: !200, line: 232, baseType: !293, size: 64, offset: 1024)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !200, line: 285, size: 5056, elements: !295)
!295 = !{!296, !297, !307, !3902, !4114, !4115, !4116, !4125, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !294, file: !200, line: 286, baseType: !220, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !294, file: !200, line: 287, baseType: !298, size: 32, offset: 32)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !299, line: 19, size: 32, elements: !300)
!299 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!300 = !{!301}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !298, file: !299, line: 20, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !303, line: 113, baseType: !304)
!303 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !303, line: 111, size: 32, elements: !305)
!305 = !{!306}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !304, file: !303, line: 112, baseType: !280, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !294, file: !200, line: 288, baseType: !308, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !310)
!310 = !{!311, !3434, !3435, !3438, !3439, !3490, !3581, !3582, !3583, !3584, !3585, !3594, !3699, !3712, !3715, !3716, !3720, !3722, !3723, !3724, !3728, !3734, !3735, !3738, !3853, !3854, !3855, !3856, !3857, !3858, !3890, !3891, !3892, !3895, !3898, !3899, !3900, !3901}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !309, file: !73, line: 462, baseType: !312, size: 512)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !313, line: 64, size: 512, elements: !314)
!313 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!314 = !{!315, !318, !319, !321, !366, !3301, !3428, !3429, !3430, !3431, !3432, !3433}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !312, file: !313, line: 65, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !312, file: !313, line: 66, baseType: !246, size: 128, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !312, file: !313, line: 67, baseType: !320, size: 64, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !312, file: !313, line: 68, baseType: !322, size: 64, offset: 256)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !313, line: 192, size: 704, elements: !324)
!324 = !{!325, !326, !327, !328}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !323, file: !313, line: 193, baseType: !246, size: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !323, file: !313, line: 194, baseType: !263, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !323, file: !313, line: 195, baseType: !312, size: 512, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !323, file: !313, line: 196, baseType: !329, size: 64, offset: 640)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !313, line: 156, size: 192, elements: !332)
!332 = !{!333, !338, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !331, file: !313, line: 157, baseType: !334, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DISubroutineType(types: !337)
!337 = !{!220, !322, !320}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !313, line: 158, baseType: !339, size: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{!316, !322, !320}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !331, file: !313, line: 159, baseType: !344, size: 64, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!220, !322, !320, !348}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !313, line: 148, size: 20736, elements: !350)
!350 = !{!351, !356, !360, !361, !365}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !349, file: !313, line: 149, baseType: !352, size: 192)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 192, elements: !354)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!354 = !{!355}
!355 = !DISubrange(count: 3)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !349, file: !313, line: 150, baseType: !357, size: 4096, offset: 192)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, size: 4096, elements: !358)
!358 = !{!359}
!359 = !DISubrange(count: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !349, file: !313, line: 151, baseType: !220, size: 32, offset: 4288)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !349, file: !313, line: 152, baseType: !362, size: 16384, offset: 4320)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 16384, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 2048)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !349, file: !313, line: 153, baseType: !220, size: 32, offset: 20704)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !312, file: !313, line: 69, baseType: !367, size: 64, offset: 320)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !313, line: 138, size: 448, elements: !369)
!369 = !{!370, !374, !402, !404, !3263, !3291, !3295}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !368, file: !313, line: 139, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DISubroutineType(types: !373)
!373 = !{null, !320}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !368, file: !313, line: 140, baseType: !375, size: 64, offset: 64)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !378, line: 230, size: 128, elements: !379)
!378 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!379 = !{!380, !395}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !377, file: !378, line: 231, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{!384, !320, !388, !353}
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !184, line: 60, baseType: !385)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !386, line: 73, baseType: !387)
!386 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !386, line: 15, baseType: !193)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !378, line: 30, size: 128, elements: !390)
!390 = !{!391, !392}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !389, file: !378, line: 31, baseType: !316, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !389, file: !378, line: 32, baseType: !393, size: 16, offset: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !184, line: 19, baseType: !394)
!394 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !377, file: !378, line: 232, baseType: !396, size: 64, offset: 64)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DISubroutineType(types: !398)
!398 = !{!384, !320, !388, !316, !399}
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !184, line: 55, baseType: !400)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !386, line: 72, baseType: !401)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !386, line: 16, baseType: !187)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !368, file: !313, line: 141, baseType: !403, size: 64, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !368, file: !313, line: 142, baseType: !405, size: 64, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !378, line: 84, size: 320, elements: !409)
!409 = !{!410, !411, !415, !3260, !3261}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !408, file: !378, line: 85, baseType: !316, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !408, file: !378, line: 86, baseType: !412, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{!393, !320, !388, !220}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !408, file: !378, line: 88, baseType: !416, size: 64, offset: 128)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!393, !320, !419, !220}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !378, line: 168, size: 448, elements: !421)
!421 = !{!422, !423, !424, !425, !3255, !3256}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !420, file: !378, line: 169, baseType: !389, size: 128)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !420, file: !378, line: 170, baseType: !399, size: 64, offset: 128)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !420, file: !378, line: 171, baseType: !185, size: 64, offset: 192)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !420, file: !378, line: 172, baseType: !426, size: 64, offset: 256)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!384, !429, !320, !419, !353, !601, !399}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !431)
!431 = !{!432, !445, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3238, !3239, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !430, file: !44, line: 920, baseType: !433, size: 128)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !430, file: !44, line: 917, size: 128, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !433, file: !44, line: 918, baseType: !214, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !433, file: !44, line: 919, baseType: !437, size: 128, align: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !184, line: 216, size: 128, align: 64, elements: !438)
!438 = !{!439, !441}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !437, file: !184, line: 217, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !437, file: !184, line: 218, baseType: !442, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{null, !440}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !430, file: !44, line: 921, baseType: !446, size: 128, offset: 128)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !447, line: 8, size: 128, elements: !448)
!447 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!448 = !{!449, !453}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !446, file: !447, line: 9, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !452, line: 18, flags: DIFlagFwdDecl)
!452 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!453 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !446, file: !447, line: 10, baseType: !454, size: 64, offset: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !452, line: 89, size: 1536, elements: !456)
!456 = !{!457, !458, !468, !476, !477, !498, !3188, !3190, !3202, !3203, !3204, !3205, !3206, !3212, !3213, !3214}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !455, file: !452, line: 91, baseType: !7, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !455, file: !452, line: 92, baseType: !459, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !460, line: 277, baseType: !461)
!460 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !460, line: 277, size: 32, elements: !462)
!462 = !{!463}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !461, file: !460, line: 277, baseType: !464, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !460, line: 70, baseType: !465)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !460, line: 65, size: 32, elements: !466)
!466 = !{!467}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !465, file: !460, line: 66, baseType: !7, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !455, file: !452, line: 93, baseType: !469, size: 128, offset: 64)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !470, line: 38, size: 128, elements: !471)
!470 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!471 = !{!472, !474}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !469, file: !470, line: 39, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !469, file: !470, line: 39, baseType: !475, size: 64, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !455, file: !452, line: 94, baseType: !454, size: 64, offset: 192)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !455, file: !452, line: 95, baseType: !478, size: 128, offset: 256)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !452, line: 47, size: 128, elements: !479)
!479 = !{!480, !494}
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !452, line: 48, baseType: !481, size: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !452, line: 48, size: 64, elements: !482)
!482 = !{!483, !490}
!483 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !452, line: 49, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !452, line: 49, size: 64, elements: !485)
!485 = !{!486, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !484, file: !452, line: 50, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !241, line: 21, baseType: !488)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !243, line: 27, baseType: !7)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !484, file: !452, line: 50, baseType: !487, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !481, file: !452, line: 52, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !241, line: 23, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !243, line: 31, baseType: !493)
!493 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !478, file: !452, line: 54, baseType: !495, size: 64, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !455, file: !452, line: 96, baseType: !499, size: 64, offset: 384)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !501)
!501 = !{!502, !503, !504, !512, !519, !520, !666, !2892, !2893, !2894, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !3156, !3164, !3165, !3166, !3184, !3185, !3186, !3187}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !500, file: !44, line: 611, baseType: !393, size: 16)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !500, file: !44, line: 612, baseType: !394, size: 16, offset: 16)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !500, file: !44, line: 613, baseType: !505, size: 32, offset: 32)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !506, line: 23, baseType: !507)
!506 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 21, size: 32, elements: !508)
!508 = !{!509}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !507, file: !506, line: 22, baseType: !510, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !184, line: 32, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !386, line: 49, baseType: !7)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !500, file: !44, line: 614, baseType: !513, size: 32, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !506, line: 28, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 26, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !514, file: !506, line: 27, baseType: !517, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !184, line: 33, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !386, line: 50, baseType: !7)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !500, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !500, file: !44, line: 622, baseType: !521, size: 64, offset: 128)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !524)
!524 = !{!525, !529, !542, !546, !552, !556, !562, !566, !570, !574, !578, !579, !585, !589, !613, !642, !646, !652, !657, !661, !662}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !523, file: !44, line: 1865, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = !DISubroutineType(types: !528)
!528 = !{!454, !499, !454, !7}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !523, file: !44, line: 1866, baseType: !530, size: 64, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!316, !454, !499, !533}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !535, line: 10, size: 128, elements: !536)
!535 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!536 = !{!537, !541}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !534, file: !535, line: 11, baseType: !538, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{null, !185}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !534, file: !535, line: 12, baseType: !185, size: 64, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !523, file: !44, line: 1867, baseType: !543, size: 64, offset: 128)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!220, !499, !220}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !523, file: !44, line: 1868, baseType: !547, size: 64, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!550, !499, !220}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !523, file: !44, line: 1870, baseType: !553, size: 64, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!220, !454, !353, !220}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !523, file: !44, line: 1872, baseType: !557, size: 64, offset: 320)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!220, !499, !454, !393, !560}
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !184, line: 30, baseType: !561)
!561 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !523, file: !44, line: 1873, baseType: !563, size: 64, offset: 384)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!220, !454, !499, !454}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !523, file: !44, line: 1874, baseType: !567, size: 64, offset: 448)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!220, !499, !454}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !523, file: !44, line: 1875, baseType: !571, size: 64, offset: 512)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!220, !499, !454, !316}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !523, file: !44, line: 1876, baseType: !575, size: 64, offset: 576)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!220, !499, !454, !393}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !523, file: !44, line: 1877, baseType: !567, size: 64, offset: 640)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !523, file: !44, line: 1878, baseType: !580, size: 64, offset: 704)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!220, !499, !454, !393, !583}
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !184, line: 16, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !184, line: 13, baseType: !487)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !523, file: !44, line: 1879, baseType: !586, size: 64, offset: 768)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!220, !499, !454, !499, !454, !7}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !523, file: !44, line: 1881, baseType: !590, size: 64, offset: 832)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!220, !454, !593}
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !595)
!595 = !{!596, !597, !598, !599, !600, !603, !610, !611, !612}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !594, file: !44, line: 220, baseType: !7, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !594, file: !44, line: 221, baseType: !393, size: 16, offset: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !594, file: !44, line: 222, baseType: !505, size: 32, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !594, file: !44, line: 223, baseType: !513, size: 32, offset: 96)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !594, file: !44, line: 224, baseType: !601, size: 64, offset: 128)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !184, line: 46, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !386, line: 88, baseType: !244)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !594, file: !44, line: 225, baseType: !604, size: 128, offset: 192)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !605, line: 13, size: 128, elements: !606)
!605 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!606 = !{!607, !609}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !604, file: !605, line: 14, baseType: !608, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !605, line: 8, baseType: !242)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !604, file: !605, line: 15, baseType: !193, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !594, file: !44, line: 226, baseType: !604, size: 128, offset: 320)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !594, file: !44, line: 227, baseType: !604, size: 128, offset: 448)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !594, file: !44, line: 234, baseType: !429, size: 64, offset: 576)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !523, file: !44, line: 1882, baseType: !614, size: 64, offset: 896)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!220, !617, !619, !487, !7}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !446)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !621, line: 22, size: 1152, elements: !622)
!621 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!622 = !{!623, !624, !625, !626, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !620, file: !621, line: 23, baseType: !487, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !620, file: !621, line: 24, baseType: !393, size: 16, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !620, file: !621, line: 25, baseType: !7, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !620, file: !621, line: 26, baseType: !627, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !184, line: 104, baseType: !487)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !620, file: !621, line: 27, baseType: !491, size: 64, offset: 128)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !620, file: !621, line: 28, baseType: !491, size: 64, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !620, file: !621, line: 37, baseType: !491, size: 64, offset: 256)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !620, file: !621, line: 38, baseType: !583, size: 32, offset: 320)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !620, file: !621, line: 39, baseType: !583, size: 32, offset: 352)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !620, file: !621, line: 40, baseType: !505, size: 32, offset: 384)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !620, file: !621, line: 41, baseType: !513, size: 32, offset: 416)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !620, file: !621, line: 42, baseType: !601, size: 64, offset: 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !620, file: !621, line: 43, baseType: !604, size: 128, offset: 512)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !620, file: !621, line: 44, baseType: !604, size: 128, offset: 640)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !620, file: !621, line: 45, baseType: !604, size: 128, offset: 768)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !620, file: !621, line: 46, baseType: !604, size: 128, offset: 896)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !620, file: !621, line: 47, baseType: !491, size: 64, offset: 1024)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !620, file: !621, line: 48, baseType: !491, size: 64, offset: 1088)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !523, file: !44, line: 1883, baseType: !643, size: 64, offset: 960)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!384, !454, !353, !399}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !523, file: !44, line: 1884, baseType: !647, size: 64, offset: 1024)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{!220, !499, !650, !491, !491}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !523, file: !44, line: 1886, baseType: !653, size: 64, offset: 1088)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!220, !499, !656, !220}
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !523, file: !44, line: 1887, baseType: !658, size: 64, offset: 1152)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!220, !499, !454, !429, !7, !393}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !523, file: !44, line: 1890, baseType: !575, size: 64, offset: 1216)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !523, file: !44, line: 1891, baseType: !663, size: 64, offset: 1280)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{!220, !499, !550, !220}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !500, file: !44, line: 623, baseType: !667, size: 64, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !669)
!669 = !{!670, !671, !672, !673, !674, !675, !725, !2499, !2581, !2664, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2680, !2684, !2685, !2688, !2689, !2692, !2693, !2694, !2735, !2762, !2763, !2764, !2765, !2766, !2767, !2770, !2772, !2779, !2780, !2782, !2783, !2784, !2843, !2844, !2859, !2860, !2861, !2862, !2863, !2866, !2867, !2868, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !668, file: !44, line: 1417, baseType: !246, size: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !668, file: !44, line: 1418, baseType: !583, size: 32, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !668, file: !44, line: 1419, baseType: !497, size: 8, offset: 160)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !668, file: !44, line: 1420, baseType: !187, size: 64, offset: 192)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !668, file: !44, line: 1421, baseType: !601, size: 64, offset: 256)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !668, file: !44, line: 1422, baseType: !676, size: 64, offset: 320)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !678)
!678 = !{!679, !680, !681, !688, !692, !696, !700, !704, !705, !715, !718, !719, !720, !722, !723, !724}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !677, file: !44, line: 2229, baseType: !316, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !677, file: !44, line: 2230, baseType: !220, size: 32, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !677, file: !44, line: 2238, baseType: !682, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!220, !685}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !687, line: 28, flags: DIFlagFwdDecl)
!687 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!688 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !677, file: !44, line: 2239, baseType: !689, size: 64, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !677, file: !44, line: 2240, baseType: !693, size: 64, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!454, !676, !220, !316, !185}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !677, file: !44, line: 2242, baseType: !697, size: 64, offset: 320)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{null, !667}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !677, file: !44, line: 2243, baseType: !701, size: 64, offset: 384)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !703, line: 76, flags: DIFlagFwdDecl)
!703 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!704 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !677, file: !44, line: 2244, baseType: !676, size: 64, offset: 448)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !677, file: !44, line: 2245, baseType: !706, size: 64, offset: 512)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !184, line: 182, size: 64, elements: !707)
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !706, file: !184, line: 183, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !184, line: 186, size: 128, elements: !711)
!711 = !{!712, !713}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !710, file: !184, line: 187, baseType: !709, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !710, file: !184, line: 187, baseType: !714, size: 64, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !677, file: !44, line: 2247, baseType: !716, offset: 576)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !717, line: 187, elements: !277)
!717 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!718 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !677, file: !44, line: 2248, baseType: !716, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !677, file: !44, line: 2249, baseType: !716, offset: 576)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !677, file: !44, line: 2250, baseType: !721, offset: 576)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, elements: !354)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !677, file: !44, line: 2252, baseType: !716, offset: 576)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !677, file: !44, line: 2253, baseType: !716, offset: 576)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !677, file: !44, line: 2254, baseType: !716, offset: 576)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !668, file: !44, line: 1423, baseType: !726, size: 64, offset: 384)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !729)
!729 = !{!730, !734, !738, !739, !743, !749, !753, !754, !755, !759, !763, !764, !765, !766, !772, !777, !778, !821, !822, !823, !824, !2483, !2498}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !728, file: !44, line: 1936, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!499, !667}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !728, file: !44, line: 1937, baseType: !735, size: 64, offset: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{null, !499}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !728, file: !44, line: 1938, baseType: !735, size: 64, offset: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !728, file: !44, line: 1940, baseType: !740, size: 64, offset: 192)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{null, !499, !220}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !728, file: !44, line: 1941, baseType: !744, size: 64, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!220, !499, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !728, file: !44, line: 1942, baseType: !750, size: 64, offset: 320)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!220, !499}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !728, file: !44, line: 1943, baseType: !735, size: 64, offset: 384)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !728, file: !44, line: 1944, baseType: !697, size: 64, offset: 448)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !728, file: !44, line: 1945, baseType: !756, size: 64, offset: 512)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!220, !667, !220}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !728, file: !44, line: 1946, baseType: !760, size: 64, offset: 576)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!220, !667}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !728, file: !44, line: 1947, baseType: !760, size: 64, offset: 640)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !728, file: !44, line: 1948, baseType: !760, size: 64, offset: 704)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !728, file: !44, line: 1949, baseType: !760, size: 64, offset: 768)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !728, file: !44, line: 1950, baseType: !767, size: 64, offset: 832)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{!220, !454, !770}
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !728, file: !44, line: 1951, baseType: !773, size: 64, offset: 896)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!220, !667, !776, !353}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !728, file: !44, line: 1952, baseType: !697, size: 64, offset: 960)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !728, file: !44, line: 1954, baseType: !779, size: 64, offset: 1024)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!220, !782, !454}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !784, line: 16, size: 896, elements: !785)
!784 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !787, !788, !789, !790, !791, !792, !793, !794, !816, !817, !820}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !783, file: !784, line: 17, baseType: !353, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !783, file: !784, line: 18, baseType: !399, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !783, file: !784, line: 19, baseType: !399, size: 64, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !783, file: !784, line: 20, baseType: !399, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !783, file: !784, line: 21, baseType: !399, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !783, file: !784, line: 22, baseType: !601, size: 64, offset: 320)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !783, file: !784, line: 23, baseType: !601, size: 64, offset: 384)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !783, file: !784, line: 24, baseType: !258, size: 192, offset: 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !783, file: !784, line: 25, baseType: !795, size: 64, offset: 640)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !784, line: 31, size: 256, elements: !798)
!798 = !{!799, !804, !808, !812}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !797, file: !784, line: 32, baseType: !800, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!185, !782, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !797, file: !784, line: 33, baseType: !805, size: 64, offset: 64)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{null, !782, !185}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !797, file: !784, line: 34, baseType: !809, size: 64, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!185, !782, !185, !803}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !797, file: !784, line: 35, baseType: !813, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!220, !782, !185}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !783, file: !784, line: 26, baseType: !220, size: 32, offset: 704)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !783, file: !784, line: 27, baseType: !818, size: 64, offset: 768)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !430)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !783, file: !784, line: 28, baseType: !185, size: 64, offset: 832)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !728, file: !44, line: 1955, baseType: !779, size: 64, offset: 1088)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !728, file: !44, line: 1956, baseType: !779, size: 64, offset: 1152)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !728, file: !44, line: 1957, baseType: !779, size: 64, offset: 1216)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !728, file: !44, line: 1963, baseType: !825, size: 64, offset: 1280)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!220, !667, !828, !183}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !830, line: 68, size: 512, align: 128, elements: !831)
!830 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!831 = !{!832, !833, !2475, !2482}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !829, file: !830, line: 69, baseType: !187, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, scope: !829, file: !830, line: 77, baseType: !834, size: 320, offset: 64)
!834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 77, size: 320, elements: !835)
!835 = !{!836, !1012, !1017, !1045, !1053, !1059, !2406, !2474}
!836 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 78, baseType: !837, size: 320)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 78, size: 320, elements: !838)
!838 = !{!839, !840, !1010, !1011}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !837, file: !830, line: 84, baseType: !246, size: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !837, file: !830, line: 86, baseType: !841, size: 64, offset: 128)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !843)
!843 = !{!844, !845, !852, !853, !854, !869, !878, !879, !880, !881, !1003, !1004, !1007, !1008, !1009}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !842, file: !44, line: 452, baseType: !499, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !842, file: !44, line: 453, baseType: !846, size: 128, offset: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !847, line: 292, size: 128, elements: !848)
!847 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!848 = !{!849, !850, !851}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !846, file: !847, line: 293, baseType: !263)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !846, file: !847, line: 295, baseType: !183, size: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !846, file: !847, line: 296, baseType: !185, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !842, file: !44, line: 454, baseType: !183, size: 32, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !842, file: !44, line: 455, baseType: !280, size: 32, offset: 224)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !842, file: !44, line: 460, baseType: !855, size: 128, offset: 256)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !856, line: 125, size: 128, elements: !857)
!856 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !868}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !855, file: !856, line: 126, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !856, line: 31, size: 64, elements: !860)
!860 = !{!861}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !859, file: !856, line: 32, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !856, line: 24, size: 192, align: 64, elements: !864)
!864 = !{!865, !866, !867}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !863, file: !856, line: 25, baseType: !187, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !863, file: !856, line: 26, baseType: !862, size: 64, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !863, file: !856, line: 27, baseType: !862, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !855, file: !856, line: 127, baseType: !862, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !842, file: !44, line: 461, baseType: !870, size: 256, offset: 384)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !871, line: 35, size: 256, elements: !872)
!871 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!872 = !{!873, !874, !875, !877}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !870, file: !871, line: 36, baseType: !234, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !870, file: !871, line: 42, baseType: !234, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !870, file: !871, line: 46, baseType: !876, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !264, line: 29, baseType: !271)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !870, file: !871, line: 47, baseType: !246, size: 128, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !842, file: !44, line: 462, baseType: !187, size: 64, offset: 640)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !842, file: !44, line: 463, baseType: !187, size: 64, offset: 704)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !842, file: !44, line: 464, baseType: !187, size: 64, offset: 768)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !842, file: !44, line: 465, baseType: !882, size: 64, offset: 832)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !885)
!885 = !{!886, !890, !894, !898, !902, !906, !912, !918, !922, !927, !931, !935, !939, !967, !971, !977, !978, !979, !983, !988, !992, !999}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !884, file: !44, line: 368, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!220, !828, !747}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !884, file: !44, line: 369, baseType: !891, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!220, !429, !828}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !884, file: !44, line: 372, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!220, !841, !747}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !884, file: !44, line: 375, baseType: !899, size: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{!220, !828}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !884, file: !44, line: 381, baseType: !903, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!220, !429, !841, !249, !7}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !884, file: !44, line: 383, baseType: !907, size: 64, offset: 320)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !884, file: !44, line: 385, baseType: !913, size: 64, offset: 384)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!220, !429, !841, !601, !7, !7, !916, !917}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !884, file: !44, line: 388, baseType: !919, size: 64, offset: 448)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!220, !429, !841, !601, !7, !7, !828, !185}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !884, file: !44, line: 393, baseType: !923, size: 64, offset: 512)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!926, !841, !926}
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !184, line: 125, baseType: !491)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !884, file: !44, line: 394, baseType: !928, size: 64, offset: 576)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{null, !828, !7, !7}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !884, file: !44, line: 395, baseType: !932, size: 64, offset: 640)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!220, !828, !183}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !884, file: !44, line: 396, baseType: !936, size: 64, offset: 704)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !828}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !884, file: !44, line: 397, baseType: !940, size: 64, offset: 768)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!384, !943, !965}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !945)
!945 = !{!946, !947, !948, !952, !953, !954, !957, !958}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !944, file: !44, line: 321, baseType: !429, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !944, file: !44, line: 326, baseType: !601, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !944, file: !44, line: 327, baseType: !949, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{null, !943, !193, !193}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !944, file: !44, line: 328, baseType: !185, size: 64, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !944, file: !44, line: 329, baseType: !220, size: 32, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !944, file: !44, line: 330, baseType: !955, size: 16, offset: 288)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !241, line: 19, baseType: !956)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !243, line: 24, baseType: !394)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !944, file: !44, line: 331, baseType: !955, size: 16, offset: 304)
!958 = !DIDerivedType(tag: DW_TAG_member, scope: !944, file: !44, line: 332, baseType: !959, size: 64, offset: 320)
!959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !944, file: !44, line: 332, size: 64, elements: !960)
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !959, file: !44, line: 333, baseType: !7, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !959, file: !44, line: 334, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !884, file: !44, line: 402, baseType: !968, size: 64, offset: 832)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!220, !841, !828, !828, !5}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !884, file: !44, line: 404, baseType: !972, size: 64, offset: 896)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!560, !828, !975}
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !976, line: 305, baseType: !7)
!976 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!977 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !884, file: !44, line: 405, baseType: !936, size: 64, offset: 960)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !884, file: !44, line: 406, baseType: !899, size: 64, offset: 1024)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !884, file: !44, line: 407, baseType: !980, size: 64, offset: 1088)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!220, !828, !187, !187}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !884, file: !44, line: 409, baseType: !984, size: 64, offset: 1152)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{null, !828, !987, !987}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !884, file: !44, line: 410, baseType: !989, size: 64, offset: 1216)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!220, !841, !828}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !884, file: !44, line: 413, baseType: !993, size: 64, offset: 1280)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!220, !996, !429, !998}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !884, file: !44, line: 415, baseType: !1000, size: 64, offset: 1344)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{null, !429}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !842, file: !44, line: 466, baseType: !187, size: 64, offset: 896)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !842, file: !44, line: 467, baseType: !1005, size: 32, offset: 960)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1006, line: 8, baseType: !487)
!1006 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !842, file: !44, line: 468, baseType: !263, offset: 992)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !842, file: !44, line: 469, baseType: !246, size: 128, offset: 1024)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !842, file: !44, line: 470, baseType: !185, size: 64, offset: 1152)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !837, file: !830, line: 87, baseType: !187, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !837, file: !830, line: 94, baseType: !187, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 96, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 96, size: 64, elements: !1014)
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1013, file: !830, line: 101, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !184, line: 143, baseType: !491)
!1017 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 103, baseType: !1018, size: 320)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 103, size: 320, elements: !1019)
!1019 = !{!1020, !1030, !1033, !1034}
!1020 = !DIDerivedType(tag: DW_TAG_member, scope: !1018, file: !830, line: 104, baseType: !1021, size: 128)
!1021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1018, file: !830, line: 104, size: 128, elements: !1022)
!1022 = !{!1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1021, file: !830, line: 105, baseType: !246, size: 128)
!1024 = !DIDerivedType(tag: DW_TAG_member, scope: !1021, file: !830, line: 106, baseType: !1025, size: 128)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1021, file: !830, line: 106, size: 128, elements: !1026)
!1026 = !{!1027, !1028, !1029}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1025, file: !830, line: 107, baseType: !828, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1025, file: !830, line: 109, baseType: !220, size: 32, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1025, file: !830, line: 110, baseType: !220, size: 32, offset: 96)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1018, file: !830, line: 117, baseType: !1031, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !830, line: 117, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1018, file: !830, line: 119, baseType: !185, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, scope: !1018, file: !830, line: 120, baseType: !1035, size: 64, offset: 256)
!1035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1018, file: !830, line: 120, size: 64, elements: !1036)
!1036 = !{!1037, !1038, !1039}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1035, file: !830, line: 121, baseType: !185, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1035, file: !830, line: 122, baseType: !187, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, scope: !1035, file: !830, line: 123, baseType: !1040, size: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1035, file: !830, line: 123, size: 32, elements: !1041)
!1041 = !{!1042, !1043, !1044}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1040, file: !830, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1040, file: !830, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1040, file: !830, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 130, baseType: !1046, size: 192)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 130, size: 192, elements: !1047)
!1047 = !{!1048, !1049, !1050, !1051, !1052}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1046, file: !830, line: 131, baseType: !187, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1046, file: !830, line: 134, baseType: !497, size: 8, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1046, file: !830, line: 135, baseType: !497, size: 8, offset: 72)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1046, file: !830, line: 136, baseType: !280, size: 32, offset: 96)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1046, file: !830, line: 137, baseType: !7, size: 32, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 139, baseType: !1054, size: 256)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 139, size: 256, elements: !1055)
!1055 = !{!1056, !1057, !1058}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1054, file: !830, line: 140, baseType: !187, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1054, file: !830, line: 141, baseType: !280, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1054, file: !830, line: 143, baseType: !246, size: 128, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 145, baseType: !1060, size: 256)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 145, size: 256, elements: !1061)
!1061 = !{!1062, !1063, !1066, !1067, !2405}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1060, file: !830, line: 146, baseType: !187, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1060, file: !830, line: 147, baseType: !1064, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1065, line: 509, baseType: !828)
!1065 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1060, file: !830, line: 148, baseType: !187, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, scope: !1060, file: !830, line: 149, baseType: !1068, size: 64, offset: 192)
!1068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1060, file: !830, line: 149, size: 64, elements: !1069)
!1069 = !{!1070, !2404}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1068, file: !830, line: 150, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !830, line: 388, size: 7296, elements: !1073)
!1073 = !{!1074, !2403}
!1074 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !830, line: 389, baseType: !1075, size: 7296)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !830, line: 389, size: 7296, elements: !1076)
!1076 = !{!1077, !1195, !1196, !1197, !1201, !1202, !1203, !1204, !1205, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1246, !1254, !1257, !1297, !1298, !2387, !2388, !2391, !2392, !2393, !2396, !2397, !2398, !2401, !2402}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1075, file: !830, line: 390, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !830, line: 305, size: 1472, elements: !1080)
!1080 = !{!1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1095, !1096, !1101, !1102, !1105, !1189, !1190, !1191, !1192, !1193}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1079, file: !830, line: 308, baseType: !187, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1079, file: !830, line: 309, baseType: !187, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1079, file: !830, line: 313, baseType: !1078, size: 64, offset: 128)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1079, file: !830, line: 313, baseType: !1078, size: 64, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1079, file: !830, line: 315, baseType: !863, size: 192, align: 64, offset: 256)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1079, file: !830, line: 323, baseType: !187, size: 64, offset: 448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1079, file: !830, line: 327, baseType: !1071, size: 64, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1079, file: !830, line: 333, baseType: !1089, size: 64, offset: 576)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1065, line: 284, baseType: !1090)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1065, line: 284, size: 64, elements: !1091)
!1091 = !{!1092}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1090, file: !1065, line: 284, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1094, line: 19, baseType: !187)
!1094 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1079, file: !830, line: 334, baseType: !187, size: 64, offset: 640)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1079, file: !830, line: 343, baseType: !1097, size: 256, offset: 704)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1079, file: !830, line: 340, size: 256, elements: !1098)
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1097, file: !830, line: 341, baseType: !863, size: 192, align: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1097, file: !830, line: 342, baseType: !187, size: 64, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1079, file: !830, line: 351, baseType: !246, size: 128, offset: 960)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1079, file: !830, line: 353, baseType: !1103, size: 64, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !830, line: 353, flags: DIFlagFwdDecl)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1079, file: !830, line: 356, baseType: !1106, size: 64, offset: 1152)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1109)
!1109 = !{!1110, !1114, !1115, !1119, !1123, !1163, !1167, !1171, !1175, !1176, !1177, !1181, !1185}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1108, file: !14, line: 558, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1078}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1108, file: !14, line: 559, baseType: !1111, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1108, file: !14, line: 560, baseType: !1116, size: 64, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!220, !1078, !187}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1108, file: !14, line: 561, baseType: !1120, size: 64, offset: 192)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{!220, !1078}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1108, file: !14, line: 562, baseType: !1124, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !830, line: 682, baseType: !7)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1135, !1136, !1143, !1150, !1156, !1157, !1158, !1160, !1162}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1129, file: !14, line: 509, baseType: !1078, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1129, file: !14, line: 511, baseType: !183, size: 32, offset: 96)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1129, file: !14, line: 512, baseType: !187, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1129, file: !14, line: 513, baseType: !187, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1129, file: !14, line: 514, baseType: !1137, size: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1065, line: 385, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 385, size: 64, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1139, file: !1065, line: 385, baseType: !1142, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1094, line: 15, baseType: !187)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1129, file: !14, line: 516, baseType: !1144, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1065, line: 359, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 359, size: 64, elements: !1147)
!1147 = !{!1148}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1146, file: !1065, line: 359, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1094, line: 16, baseType: !187)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1129, file: !14, line: 519, baseType: !1151, size: 64, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1094, line: 21, baseType: !1152)
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 21, size: 64, elements: !1153)
!1153 = !{!1154}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1152, file: !1094, line: 21, baseType: !1155, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1094, line: 14, baseType: !187)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1129, file: !14, line: 521, baseType: !828, size: 64, offset: 448)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1129, file: !14, line: 522, baseType: !828, size: 64, offset: 512)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1129, file: !14, line: 528, baseType: !1159, size: 64, offset: 576)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1129, file: !14, line: 532, baseType: !1161, size: 64, offset: 640)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1129, file: !14, line: 536, baseType: !1064, size: 64, offset: 704)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1108, file: !14, line: 563, baseType: !1164, size: 64, offset: 320)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DISubroutineType(types: !1166)
!1166 = !{!1127, !1128, !13}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1108, file: !14, line: 565, baseType: !1168, size: 64, offset: 384)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{null, !1128, !187, !187}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1108, file: !14, line: 567, baseType: !1172, size: 64, offset: 448)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!187, !1078}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1108, file: !14, line: 571, baseType: !1124, size: 64, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1108, file: !14, line: 574, baseType: !1124, size: 64, offset: 576)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1108, file: !14, line: 579, baseType: !1178, size: 64, offset: 640)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!220, !1078, !187, !185, !220, !220}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1108, file: !14, line: 585, baseType: !1182, size: 64, offset: 704)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!316, !1078}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1108, file: !14, line: 615, baseType: !1186, size: 64, offset: 768)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!828, !1078, !187}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1079, file: !830, line: 359, baseType: !187, size: 64, offset: 1216)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1079, file: !830, line: 361, baseType: !429, size: 64, offset: 1280)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1079, file: !830, line: 362, baseType: !185, size: 64, offset: 1344)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1079, file: !830, line: 365, baseType: !234, size: 64, offset: 1408)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1079, file: !830, line: 373, baseType: !1194, offset: 1472)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !830, line: 296, elements: !277)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1075, file: !830, line: 391, baseType: !859, size: 64, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1075, file: !830, line: 392, baseType: !491, size: 64, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1075, file: !830, line: 394, baseType: !1198, size: 64, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!187, !429, !187, !187, !187, !187}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1075, file: !830, line: 398, baseType: !187, size: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1075, file: !830, line: 399, baseType: !187, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1075, file: !830, line: 405, baseType: !187, size: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1075, file: !830, line: 406, baseType: !187, size: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1075, file: !830, line: 407, baseType: !1206, size: 64, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1065, line: 286, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 286, size: 64, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1208, file: !1065, line: 286, baseType: !1211, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1094, line: 18, baseType: !187)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1075, file: !830, line: 416, baseType: !280, size: 32, offset: 576)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1075, file: !830, line: 428, baseType: !280, size: 32, offset: 608)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1075, file: !830, line: 437, baseType: !280, size: 32, offset: 640)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1075, file: !830, line: 447, baseType: !280, size: 32, offset: 672)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1075, file: !830, line: 450, baseType: !234, size: 64, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1075, file: !830, line: 452, baseType: !220, size: 32, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1075, file: !830, line: 454, baseType: !263, offset: 800)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1075, file: !830, line: 457, baseType: !870, size: 256, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1075, file: !830, line: 459, baseType: !246, size: 128, offset: 1088)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1075, file: !830, line: 466, baseType: !187, size: 64, offset: 1216)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1075, file: !830, line: 467, baseType: !187, size: 64, offset: 1280)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1075, file: !830, line: 469, baseType: !187, size: 64, offset: 1344)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1075, file: !830, line: 470, baseType: !187, size: 64, offset: 1408)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1075, file: !830, line: 471, baseType: !236, size: 64, offset: 1472)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1075, file: !830, line: 472, baseType: !187, size: 64, offset: 1536)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1075, file: !830, line: 473, baseType: !187, size: 64, offset: 1600)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1075, file: !830, line: 474, baseType: !187, size: 64, offset: 1664)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1075, file: !830, line: 475, baseType: !187, size: 64, offset: 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1075, file: !830, line: 477, baseType: !263, offset: 1792)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1075, file: !830, line: 478, baseType: !187, size: 64, offset: 1792)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1075, file: !830, line: 478, baseType: !187, size: 64, offset: 1856)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1075, file: !830, line: 478, baseType: !187, size: 64, offset: 1920)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1075, file: !830, line: 478, baseType: !187, size: 64, offset: 1984)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1075, file: !830, line: 479, baseType: !187, size: 64, offset: 2048)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1075, file: !830, line: 479, baseType: !187, size: 64, offset: 2112)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1075, file: !830, line: 479, baseType: !187, size: 64, offset: 2176)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1075, file: !830, line: 480, baseType: !187, size: 64, offset: 2240)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1075, file: !830, line: 480, baseType: !187, size: 64, offset: 2304)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1075, file: !830, line: 480, baseType: !187, size: 64, offset: 2368)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1075, file: !830, line: 480, baseType: !187, size: 64, offset: 2432)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1075, file: !830, line: 482, baseType: !1243, size: 2816, offset: 2496)
!1243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 2816, elements: !1244)
!1244 = !{!1245}
!1245 = !DISubrange(count: 44)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1075, file: !830, line: 488, baseType: !1247, size: 256, offset: 5312)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1248, line: 60, size: 256, elements: !1249)
!1248 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1249 = !{!1250}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1247, file: !1248, line: 61, baseType: !1251, size: 256)
!1251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !234, size: 256, elements: !1252)
!1252 = !{!1253}
!1253 = !DISubrange(count: 4)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1075, file: !830, line: 490, baseType: !1255, size: 64, offset: 5568)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !830, line: 490, flags: DIFlagFwdDecl)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1075, file: !830, line: 493, baseType: !1258, size: 896, offset: 5632)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1259, line: 53, baseType: !1260)
!1259 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1259, line: 13, size: 896, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1268, !1269, !1270, !1271, !1291, !1292, !1293}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1260, file: !1259, line: 18, baseType: !491, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1260, file: !1259, line: 28, baseType: !236, size: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1260, file: !1259, line: 31, baseType: !870, size: 256, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1260, file: !1259, line: 32, baseType: !1266, size: 64, offset: 384)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1259, line: 32, flags: DIFlagFwdDecl)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1260, file: !1259, line: 37, baseType: !394, size: 16, offset: 448)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1260, file: !1259, line: 40, baseType: !258, size: 192, offset: 512)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1260, file: !1259, line: 41, baseType: !185, size: 64, offset: 704)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1260, file: !1259, line: 42, baseType: !1272, size: 64, offset: 768)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1274)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1275, line: 13, size: 896, elements: !1276)
!1275 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1274, file: !1275, line: 14, baseType: !185, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1274, file: !1275, line: 15, baseType: !187, size: 64, offset: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1274, file: !1275, line: 17, baseType: !187, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1274, file: !1275, line: 17, baseType: !187, size: 64, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1274, file: !1275, line: 19, baseType: !193, size: 64, offset: 256)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1274, file: !1275, line: 21, baseType: !193, size: 64, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1274, file: !1275, line: 22, baseType: !193, size: 64, offset: 384)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1274, file: !1275, line: 23, baseType: !193, size: 64, offset: 448)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1274, file: !1275, line: 24, baseType: !193, size: 64, offset: 512)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1274, file: !1275, line: 25, baseType: !193, size: 64, offset: 576)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1274, file: !1275, line: 26, baseType: !193, size: 64, offset: 640)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1274, file: !1275, line: 27, baseType: !193, size: 64, offset: 704)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1274, file: !1275, line: 28, baseType: !193, size: 64, offset: 768)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1274, file: !1275, line: 29, baseType: !193, size: 64, offset: 832)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1260, file: !1259, line: 44, baseType: !280, size: 32, offset: 832)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1260, file: !1259, line: 50, baseType: !955, size: 16, offset: 864)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1260, file: !1259, line: 51, baseType: !1294, size: 16, offset: 880)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !241, line: 18, baseType: !1295)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !243, line: 23, baseType: !1296)
!1296 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1075, file: !830, line: 495, baseType: !187, size: 64, offset: 6528)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1075, file: !830, line: 497, baseType: !1299, size: 64, offset: 6592)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !830, line: 381, size: 384, elements: !1301)
!1301 = !{!1302, !1303, !2386}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1300, file: !830, line: 382, baseType: !280, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1300, file: !830, line: 383, baseType: !1304, size: 128, offset: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !830, line: 376, size: 128, elements: !1305)
!1305 = !{!1306, !2384}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1304, file: !830, line: 377, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1309, line: 640, size: 48640, elements: !1310)
!1309 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1310 = !{!1311, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1331, !1349, !1360, !1445, !1446, !1447, !1458, !1459, !1461, !1462, !1463, !1464, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1543, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1581, !1583, !1584, !1585, !1597, !1598, !1599, !1600, !1601, !1602, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1626, !1631, !1815, !1816, !1817, !1818, !1822, !1825, !1828, !1831, !1834, !1838, !1937, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1983, !1984, !1985, !1986, !1987, !1992, !1993, !1994, !1997, !1998, !2001, !2004, !2007, !2010, !2042, !2045, !2046, !2125, !2126, !2129, !2130, !2133, !2134, !2135, !2139, !2140, !2141, !2154, !2155, !2156, !2166, !2171, !2174, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1308, file: !1309, line: 646, baseType: !1312, size: 128)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1313, line: 56, size: 128, elements: !1314)
!1313 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1312, file: !1313, line: 57, baseType: !187, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1312, file: !1313, line: 58, baseType: !487, size: 32, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1308, file: !1309, line: 649, baseType: !192, size: 64, offset: 128)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1308, file: !1309, line: 657, baseType: !185, size: 64, offset: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1308, file: !1309, line: 658, baseType: !302, size: 32, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1308, file: !1309, line: 660, baseType: !7, size: 32, offset: 288)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1308, file: !1309, line: 661, baseType: !7, size: 32, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1308, file: !1309, line: 684, baseType: !220, size: 32, offset: 352)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1308, file: !1309, line: 686, baseType: !220, size: 32, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1308, file: !1309, line: 687, baseType: !220, size: 32, offset: 416)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1308, file: !1309, line: 688, baseType: !220, size: 32, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1308, file: !1309, line: 689, baseType: !7, size: 32, offset: 480)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1308, file: !1309, line: 691, baseType: !1328, size: 64, offset: 512)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1309, line: 691, flags: DIFlagFwdDecl)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1308, file: !1309, line: 692, baseType: !1332, size: 832, offset: 576)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1309, line: 451, size: 832, elements: !1333)
!1333 = !{!1334, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1332, file: !1309, line: 453, baseType: !1335, size: 128)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1309, line: 325, size: 128, elements: !1336)
!1336 = !{!1337, !1338}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1335, file: !1309, line: 326, baseType: !187, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1335, file: !1309, line: 327, baseType: !487, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1332, file: !1309, line: 454, baseType: !863, size: 192, align: 64, offset: 128)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1332, file: !1309, line: 455, baseType: !246, size: 128, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1332, file: !1309, line: 456, baseType: !7, size: 32, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1332, file: !1309, line: 458, baseType: !491, size: 64, offset: 512)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1332, file: !1309, line: 459, baseType: !491, size: 64, offset: 576)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1332, file: !1309, line: 460, baseType: !491, size: 64, offset: 640)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1332, file: !1309, line: 461, baseType: !491, size: 64, offset: 704)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1332, file: !1309, line: 463, baseType: !491, size: 64, offset: 768)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1332, file: !1309, line: 465, baseType: !1348, offset: 832)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1309, line: 415, elements: !277)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1308, file: !1309, line: 693, baseType: !1350, size: 384, offset: 1408)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1309, line: 489, size: 384, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1350, file: !1309, line: 490, baseType: !246, size: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1350, file: !1309, line: 491, baseType: !187, size: 64, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1350, file: !1309, line: 492, baseType: !187, size: 64, offset: 192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1350, file: !1309, line: 493, baseType: !7, size: 32, offset: 256)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1350, file: !1309, line: 494, baseType: !394, size: 16, offset: 288)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1350, file: !1309, line: 495, baseType: !394, size: 16, offset: 304)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1350, file: !1309, line: 497, baseType: !1359, size: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1308, file: !1309, line: 697, baseType: !1361, size: 1792, offset: 1792)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1309, line: 507, size: 1792, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1442, !1443}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1361, file: !1309, line: 508, baseType: !863, size: 192, align: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1361, file: !1309, line: 515, baseType: !491, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1361, file: !1309, line: 516, baseType: !491, size: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1361, file: !1309, line: 517, baseType: !491, size: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1361, file: !1309, line: 518, baseType: !491, size: 64, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1361, file: !1309, line: 519, baseType: !491, size: 64, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1361, file: !1309, line: 526, baseType: !240, size: 64, offset: 512)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1361, file: !1309, line: 527, baseType: !491, size: 64, offset: 576)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1361, file: !1309, line: 528, baseType: !7, size: 32, offset: 640)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1361, file: !1309, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1361, file: !1309, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1361, file: !1309, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1361, file: !1309, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1361, file: !1309, line: 563, baseType: !1377, size: 512, offset: 704)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1378)
!1378 = !{!1379, !1387, !1388, !1393, !1436, !1439, !1440, !1441}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1377, file: !20, line: 119, baseType: !1380, size: 256)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1381, line: 9, size: 256, elements: !1382)
!1381 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1382 = !{!1383, !1384}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1380, file: !1381, line: 10, baseType: !863, size: 192, align: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1380, file: !1381, line: 11, baseType: !1385, size: 64, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1386, line: 29, baseType: !240)
!1386 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1377, file: !20, line: 120, baseType: !1385, size: 64, offset: 256)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1377, file: !20, line: 121, baseType: !1389, size: 64, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!19, !1392}
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1377, file: !20, line: 122, baseType: !1394, size: 64, offset: 384)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1396)
!1396 = !{!1397, !1417, !1418, !1421, !1426, !1427, !1431, !1435}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1395, file: !20, line: 160, baseType: !1398, size: 64)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1399, file: !20, line: 215, baseType: !876)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1399, file: !20, line: 216, baseType: !7, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1399, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1399, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1399, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1399, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1399, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1399, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1399, file: !20, line: 233, baseType: !1385, size: 64, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1399, file: !20, line: 234, baseType: !1392, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1399, file: !20, line: 235, baseType: !1385, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1399, file: !20, line: 236, baseType: !1392, size: 64, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1399, file: !20, line: 237, baseType: !1414, size: 4096, offset: 512)
!1414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1395, size: 4096, elements: !1415)
!1415 = !{!1416}
!1416 = !DISubrange(count: 8)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1395, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1395, file: !20, line: 162, baseType: !1419, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !184, line: 27, baseType: !1420)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !386, line: 96, baseType: !220)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1395, file: !20, line: 163, baseType: !1422, size: 32, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !460, line: 276, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !460, line: 276, size: 32, elements: !1424)
!1424 = !{!1425}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1423, file: !460, line: 276, baseType: !464, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1395, file: !20, line: 164, baseType: !1392, size: 64, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1395, file: !20, line: 165, baseType: !1428, size: 128, offset: 256)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1381, line: 14, size: 128, elements: !1429)
!1429 = !{!1430}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1428, file: !1381, line: 15, baseType: !855, size: 128)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1395, file: !20, line: 166, baseType: !1432, size: 64, offset: 384)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!1385}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1395, file: !20, line: 167, baseType: !1385, size: 64, offset: 448)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1377, file: !20, line: 123, baseType: !1437, size: 8, offset: 448)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !241, line: 17, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !243, line: 21, baseType: !497)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1377, file: !20, line: 124, baseType: !1437, size: 8, offset: 456)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1377, file: !20, line: 125, baseType: !1437, size: 8, offset: 464)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1377, file: !20, line: 126, baseType: !1437, size: 8, offset: 472)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1361, file: !1309, line: 572, baseType: !1377, size: 512, offset: 1216)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1361, file: !1309, line: 580, baseType: !1444, size: 64, offset: 1728)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1308, file: !1309, line: 721, baseType: !7, size: 32, offset: 3584)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1308, file: !1309, line: 722, baseType: !220, size: 32, offset: 3616)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1308, file: !1309, line: 723, baseType: !1448, size: 64, offset: 3648)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1450)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1451, line: 17, baseType: !1452)
!1451 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1451, line: 17, size: 64, elements: !1453)
!1453 = !{!1454}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1452, file: !1451, line: 17, baseType: !1455, size: 64)
!1455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !187, size: 64, elements: !1456)
!1456 = !{!1457}
!1457 = !DISubrange(count: 1)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1308, file: !1309, line: 724, baseType: !1450, size: 64, offset: 3712)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1308, file: !1309, line: 749, baseType: !1460, offset: 3776)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1309, line: 290, elements: !277)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1308, file: !1309, line: 751, baseType: !246, size: 128, offset: 3776)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1308, file: !1309, line: 757, baseType: !1071, size: 64, offset: 3904)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1308, file: !1309, line: 758, baseType: !1071, size: 64, offset: 3968)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1308, file: !1309, line: 761, baseType: !1465, size: 320, offset: 4032)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1248, line: 34, size: 320, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1465, file: !1248, line: 35, baseType: !491, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1465, file: !1248, line: 36, baseType: !1469, size: 256, offset: 64)
!1469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1078, size: 256, elements: !1252)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1308, file: !1309, line: 766, baseType: !220, size: 32, offset: 4352)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1308, file: !1309, line: 767, baseType: !220, size: 32, offset: 4384)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1308, file: !1309, line: 768, baseType: !220, size: 32, offset: 4416)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1308, file: !1309, line: 770, baseType: !220, size: 32, offset: 4448)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1308, file: !1309, line: 772, baseType: !187, size: 64, offset: 4480)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1308, file: !1309, line: 775, baseType: !7, size: 32, offset: 4544)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1308, file: !1309, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1308, file: !1309, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1308, file: !1309, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1308, file: !1309, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1308, file: !1309, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1308, file: !1309, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1308, file: !1309, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1308, file: !1309, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1308, file: !1309, line: 831, baseType: !187, size: 64, offset: 4672)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1308, file: !1309, line: 833, baseType: !1486, size: 384, offset: 4736)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1487)
!1487 = !{!1488, !1493}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1486, file: !25, line: 26, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!193, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, scope: !1486, file: !25, line: 27, baseType: !1494, size: 320, offset: 64)
!1494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1486, file: !25, line: 27, size: 320, elements: !1495)
!1495 = !{!1496, !1506, !1533}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1494, file: !25, line: 36, baseType: !1497, size: 320)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1494, file: !25, line: 29, size: 320, elements: !1498)
!1498 = !{!1499, !1501, !1502, !1503, !1504, !1505}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1497, file: !25, line: 30, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1497, file: !25, line: 31, baseType: !487, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1497, file: !25, line: 32, baseType: !487, size: 32, offset: 96)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1497, file: !25, line: 33, baseType: !487, size: 32, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1497, file: !25, line: 34, baseType: !491, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1497, file: !25, line: 35, baseType: !1500, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1494, file: !25, line: 46, baseType: !1507, size: 192)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1494, file: !25, line: 38, size: 192, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1532}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1507, file: !25, line: 39, baseType: !1419, size: 32)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1507, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, scope: !1507, file: !25, line: 41, baseType: !1512, size: 64, offset: 64)
!1512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1507, file: !25, line: 41, size: 64, elements: !1513)
!1513 = !{!1514, !1522}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1512, file: !25, line: 42, baseType: !1515, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1516, size: 64)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1517, line: 7, size: 128, elements: !1518)
!1517 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1518 = !{!1519, !1521}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1516, file: !1517, line: 8, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !386, line: 93, baseType: !244)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1516, file: !1517, line: 9, baseType: !244, size: 64, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1512, file: !25, line: 43, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1525, line: 7, size: 64, elements: !1526)
!1525 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1526 = !{!1527, !1531}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1524, file: !1525, line: 8, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1525, line: 5, baseType: !1529)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !241, line: 20, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !243, line: 26, baseType: !220)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1524, file: !1525, line: 9, baseType: !1529, size: 32, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1507, file: !25, line: 45, baseType: !491, size: 64, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1494, file: !25, line: 54, baseType: !1534, size: 256)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1494, file: !25, line: 48, size: 256, elements: !1535)
!1535 = !{!1536, !1539, !1540, !1541, !1542}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1534, file: !25, line: 49, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1534, file: !25, line: 50, baseType: !220, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1534, file: !25, line: 51, baseType: !220, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1534, file: !25, line: 52, baseType: !187, size: 64, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1534, file: !25, line: 53, baseType: !187, size: 64, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1308, file: !1309, line: 835, baseType: !1544, size: 32, offset: 5120)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !184, line: 22, baseType: !1545)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !386, line: 28, baseType: !220)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1308, file: !1309, line: 836, baseType: !1544, size: 32, offset: 5152)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1308, file: !1309, line: 840, baseType: !187, size: 64, offset: 5184)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1308, file: !1309, line: 849, baseType: !1307, size: 64, offset: 5248)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1308, file: !1309, line: 852, baseType: !1307, size: 64, offset: 5312)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1308, file: !1309, line: 857, baseType: !246, size: 128, offset: 5376)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1308, file: !1309, line: 858, baseType: !246, size: 128, offset: 5504)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1308, file: !1309, line: 859, baseType: !1307, size: 64, offset: 5632)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1308, file: !1309, line: 867, baseType: !246, size: 128, offset: 5696)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1308, file: !1309, line: 868, baseType: !246, size: 128, offset: 5824)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1308, file: !1309, line: 871, baseType: !1556, size: 64, offset: 5952)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1564, !1565, !1572, !1573}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1557, file: !53, line: 61, baseType: !302, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1557, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1557, file: !53, line: 63, baseType: !263, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1557, file: !53, line: 65, baseType: !1563, size: 256, offset: 64)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !706, size: 256, elements: !1252)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1557, file: !53, line: 66, baseType: !706, size: 64, offset: 320)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1557, file: !53, line: 68, baseType: !1566, size: 128, offset: 384)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1567, line: 40, baseType: !1568)
!1567 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1567, line: 36, size: 128, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1568, file: !1567, line: 37, baseType: !263)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1568, file: !1567, line: 38, baseType: !246, size: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1557, file: !53, line: 69, baseType: !437, size: 128, align: 64, offset: 512)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1557, file: !53, line: 70, baseType: !1574, size: 128, offset: 640)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1575, size: 128, elements: !1456)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1575, file: !53, line: 55, baseType: !220, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1575, file: !53, line: 56, baseType: !1579, size: 64, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1308, file: !1309, line: 872, baseType: !1582, size: 512, offset: 6016)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 512, elements: !1252)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1308, file: !1309, line: 873, baseType: !246, size: 128, offset: 6528)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1308, file: !1309, line: 874, baseType: !246, size: 128, offset: 6656)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1308, file: !1309, line: 876, baseType: !1586, size: 64, offset: 6784)
!1586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1588, line: 26, size: 192, elements: !1589)
!1588 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1587, file: !1588, line: 27, baseType: !7, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1587, file: !1588, line: 28, baseType: !1592, size: 128, offset: 64)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1593, line: 43, size: 128, elements: !1594)
!1593 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1592, file: !1593, line: 44, baseType: !876)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1592, file: !1593, line: 45, baseType: !246, size: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1308, file: !1309, line: 879, baseType: !776, size: 64, offset: 6848)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1308, file: !1309, line: 882, baseType: !776, size: 64, offset: 6912)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1308, file: !1309, line: 884, baseType: !491, size: 64, offset: 6976)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1308, file: !1309, line: 885, baseType: !491, size: 64, offset: 7040)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1308, file: !1309, line: 890, baseType: !491, size: 64, offset: 7104)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1308, file: !1309, line: 891, baseType: !1603, size: 128, offset: 7168)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1309, line: 242, size: 128, elements: !1604)
!1604 = !{!1605, !1606, !1607}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1603, file: !1309, line: 244, baseType: !491, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1603, file: !1309, line: 245, baseType: !491, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1603, file: !1309, line: 246, baseType: !876, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1308, file: !1309, line: 900, baseType: !187, size: 64, offset: 7296)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1308, file: !1309, line: 901, baseType: !187, size: 64, offset: 7360)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1308, file: !1309, line: 904, baseType: !491, size: 64, offset: 7424)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1308, file: !1309, line: 907, baseType: !491, size: 64, offset: 7488)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1308, file: !1309, line: 910, baseType: !187, size: 64, offset: 7552)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1308, file: !1309, line: 911, baseType: !187, size: 64, offset: 7616)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1308, file: !1309, line: 914, baseType: !1615, size: 640, offset: 7680)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1616, line: 123, size: 640, elements: !1617)
!1616 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1617 = !{!1618, !1624, !1625}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1615, file: !1616, line: 124, baseType: !1619, size: 576)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1620, size: 576, elements: !354)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1616, line: 108, size: 192, elements: !1621)
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1620, file: !1616, line: 109, baseType: !491, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1620, file: !1616, line: 110, baseType: !1428, size: 128, offset: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1615, file: !1616, line: 125, baseType: !7, size: 32, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1615, file: !1616, line: 126, baseType: !7, size: 32, offset: 608)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1308, file: !1309, line: 917, baseType: !1627, size: 192, offset: 8320)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1616, line: 134, size: 192, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1627, file: !1616, line: 135, baseType: !437, size: 128, align: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1627, file: !1616, line: 136, baseType: !7, size: 32, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1308, file: !1309, line: 923, baseType: !1632, size: 64, offset: 8512)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1635, line: 111, size: 1280, elements: !1636)
!1635 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1656, !1657, !1658, !1659, !1660, !1661, !1768, !1769, !1770, !1771, !1797, !1800, !1810}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1634, file: !1635, line: 112, baseType: !280, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1634, file: !1635, line: 120, baseType: !505, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1634, file: !1635, line: 121, baseType: !513, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1634, file: !1635, line: 122, baseType: !505, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1634, file: !1635, line: 123, baseType: !513, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1634, file: !1635, line: 124, baseType: !505, size: 32, offset: 160)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1634, file: !1635, line: 125, baseType: !513, size: 32, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1634, file: !1635, line: 126, baseType: !505, size: 32, offset: 224)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1634, file: !1635, line: 127, baseType: !513, size: 32, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1634, file: !1635, line: 128, baseType: !7, size: 32, offset: 288)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1634, file: !1635, line: 129, baseType: !1648, size: 64, offset: 320)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1649, line: 26, baseType: !1650)
!1649 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1649, line: 24, size: 64, elements: !1651)
!1651 = !{!1652}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1650, file: !1649, line: 25, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 64, elements: !1654)
!1654 = !{!1655}
!1655 = !DISubrange(count: 2)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1634, file: !1635, line: 130, baseType: !1648, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1634, file: !1635, line: 131, baseType: !1648, size: 64, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1634, file: !1635, line: 132, baseType: !1648, size: 64, offset: 512)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1634, file: !1635, line: 133, baseType: !1648, size: 64, offset: 576)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1634, file: !1635, line: 135, baseType: !497, size: 8, offset: 640)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1634, file: !1635, line: 137, baseType: !1662, size: 64, offset: 704)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1664, line: 189, size: 1664, elements: !1665)
!1664 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1665 = !{!1666, !1667, !1670, !1675, !1676, !1679, !1680, !1685, !1686, !1687, !1688, !1690, !1691, !1692, !1693, !1694, !1732, !1753}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1663, file: !1664, line: 190, baseType: !302, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1663, file: !1664, line: 191, baseType: !1668, size: 32, offset: 32)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1664, line: 28, baseType: !1669)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !184, line: 98, baseType: !1529)
!1670 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1664, line: 192, baseType: !1671, size: 192, offset: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1663, file: !1664, line: 192, size: 192, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1671, file: !1664, line: 193, baseType: !246, size: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1671, file: !1664, line: 194, baseType: !863, size: 192, align: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1663, file: !1664, line: 199, baseType: !870, size: 256, offset: 256)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1663, file: !1664, line: 200, baseType: !1677, size: 64, offset: 512)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1664, line: 200, flags: DIFlagFwdDecl)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1663, file: !1664, line: 201, baseType: !185, size: 64, offset: 576)
!1680 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1664, line: 202, baseType: !1681, size: 64, offset: 640)
!1681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1663, file: !1664, line: 202, size: 64, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1681, file: !1664, line: 203, baseType: !608, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1681, file: !1664, line: 204, baseType: !608, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1663, file: !1664, line: 206, baseType: !608, size: 64, offset: 704)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1663, file: !1664, line: 207, baseType: !505, size: 32, offset: 768)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1663, file: !1664, line: 208, baseType: !513, size: 32, offset: 800)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1663, file: !1664, line: 209, baseType: !1689, size: 32, offset: 832)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1664, line: 31, baseType: !627)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1663, file: !1664, line: 210, baseType: !394, size: 16, offset: 864)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1663, file: !1664, line: 211, baseType: !394, size: 16, offset: 880)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1663, file: !1664, line: 215, baseType: !1296, size: 16, offset: 896)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1663, file: !1664, line: 222, baseType: !187, size: 64, offset: 960)
!1694 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1664, line: 239, baseType: !1695, size: 320, offset: 1024)
!1695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1663, file: !1664, line: 239, size: 320, elements: !1696)
!1696 = !{!1697, !1724}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1695, file: !1664, line: 240, baseType: !1698, size: 320)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1664, line: 108, size: 320, elements: !1699)
!1699 = !{!1700, !1701, !1713, !1716, !1723}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1698, file: !1664, line: 110, baseType: !187, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1698, file: !1664, line: 111, baseType: !1702, size: 64, offset: 64)
!1702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1698, file: !1664, line: 111, size: 64, elements: !1703)
!1703 = !{!1704, !1712}
!1704 = !DIDerivedType(tag: DW_TAG_member, scope: !1702, file: !1664, line: 112, baseType: !1705, size: 64)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1702, file: !1664, line: 112, size: 64, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1705, file: !1664, line: 114, baseType: !955, size: 16)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1705, file: !1664, line: 115, baseType: !1709, size: 48, offset: 16)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 48, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 6)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1702, file: !1664, line: 121, baseType: !187, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1698, file: !1664, line: 123, baseType: !1714, size: 64, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1664, line: 96, flags: DIFlagFwdDecl)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1698, file: !1664, line: 124, baseType: !1717, size: 64, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1664, line: 102, size: 192, elements: !1719)
!1719 = !{!1720, !1721, !1722}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1718, file: !1664, line: 103, baseType: !437, size: 128, align: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1718, file: !1664, line: 104, baseType: !302, size: 32, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1718, file: !1664, line: 105, baseType: !560, size: 8, offset: 160)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1698, file: !1664, line: 125, baseType: !316, size: 64, offset: 256)
!1724 = !DIDerivedType(tag: DW_TAG_member, scope: !1695, file: !1664, line: 241, baseType: !1725, size: 320)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1695, file: !1664, line: 241, size: 320, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1725, file: !1664, line: 242, baseType: !187, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1725, file: !1664, line: 243, baseType: !187, size: 64, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1725, file: !1664, line: 244, baseType: !1714, size: 64, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1725, file: !1664, line: 245, baseType: !1717, size: 64, offset: 192)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1725, file: !1664, line: 246, baseType: !353, size: 64, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1664, line: 254, baseType: !1733, size: 256, offset: 1344)
!1733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1663, file: !1664, line: 254, size: 256, elements: !1734)
!1734 = !{!1735, !1741}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1733, file: !1664, line: 255, baseType: !1736, size: 256)
!1736 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1664, line: 128, size: 256, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1736, file: !1664, line: 129, baseType: !185, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1736, file: !1664, line: 130, baseType: !1740, size: 256)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 256, elements: !1252)
!1741 = !DIDerivedType(tag: DW_TAG_member, scope: !1733, file: !1664, line: 256, baseType: !1742, size: 256)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1733, file: !1664, line: 256, size: 256, elements: !1743)
!1743 = !{!1744, !1745}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1742, file: !1664, line: 258, baseType: !246, size: 128)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1742, file: !1664, line: 259, baseType: !1746, size: 128, offset: 128)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1747, line: 22, size: 128, elements: !1748)
!1747 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1748 = !{!1749, !1752}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1746, file: !1747, line: 23, baseType: !1750, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1747, line: 23, flags: DIFlagFwdDecl)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1746, file: !1747, line: 24, baseType: !187, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1663, file: !1664, line: 274, baseType: !1754, size: 64, offset: 1600)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1664, line: 170, size: 192, elements: !1756)
!1756 = !{!1757, !1766, !1767}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1755, file: !1664, line: 171, baseType: !1758, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1664, line: 165, baseType: !1759)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!220, !1662, !1762, !1764, !1662}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1736)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1755, file: !1664, line: 172, baseType: !1662, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1755, file: !1664, line: 173, baseType: !1714, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1634, file: !1635, line: 138, baseType: !1662, size: 64, offset: 768)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1634, file: !1635, line: 139, baseType: !1662, size: 64, offset: 832)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1634, file: !1635, line: 140, baseType: !1662, size: 64, offset: 896)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1634, file: !1635, line: 145, baseType: !1772, size: 64, offset: 960)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1774, line: 13, size: 896, elements: !1775)
!1774 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1773, file: !1774, line: 14, baseType: !302, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1773, file: !1774, line: 15, baseType: !280, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1773, file: !1774, line: 16, baseType: !280, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1773, file: !1774, line: 21, baseType: !234, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1773, file: !1774, line: 27, baseType: !187, size: 64, offset: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1773, file: !1774, line: 28, baseType: !187, size: 64, offset: 256)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1773, file: !1774, line: 29, baseType: !234, size: 64, offset: 320)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1773, file: !1774, line: 32, baseType: !710, size: 128, offset: 384)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1773, file: !1774, line: 33, baseType: !505, size: 32, offset: 512)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1773, file: !1774, line: 37, baseType: !234, size: 64, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1773, file: !1774, line: 44, baseType: !1787, size: 256, offset: 640)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1788, line: 15, size: 256, elements: !1789)
!1788 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1789 = !{!1790, !1791, !1792, !1793, !1794, !1795, !1796}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1787, file: !1788, line: 16, baseType: !876)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1787, file: !1788, line: 18, baseType: !220, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1787, file: !1788, line: 19, baseType: !220, size: 32, offset: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1787, file: !1788, line: 20, baseType: !220, size: 32, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1787, file: !1788, line: 21, baseType: !220, size: 32, offset: 96)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1787, file: !1788, line: 22, baseType: !187, size: 64, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1787, file: !1788, line: 23, baseType: !187, size: 64, offset: 192)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1634, file: !1635, line: 146, baseType: !1798, size: 64, offset: 1024)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !506, line: 18, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1634, file: !1635, line: 147, baseType: !1801, size: 64, offset: 1088)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1635, line: 25, size: 64, elements: !1803)
!1803 = !{!1804, !1805, !1806}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1802, file: !1635, line: 26, baseType: !280, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1802, file: !1635, line: 27, baseType: !220, size: 32, offset: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1802, file: !1635, line: 28, baseType: !1807, offset: 64)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, elements: !1808)
!1808 = !{!1809}
!1809 = !DISubrange(count: 0)
!1810 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1635, line: 149, baseType: !1811, size: 128, offset: 1152)
!1811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1634, file: !1635, line: 149, size: 128, elements: !1812)
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1811, file: !1635, line: 150, baseType: !220, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1811, file: !1635, line: 151, baseType: !437, size: 128, align: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1308, file: !1309, line: 926, baseType: !1632, size: 64, offset: 8576)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1308, file: !1309, line: 929, baseType: !1632, size: 64, offset: 8640)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1308, file: !1309, line: 933, baseType: !1662, size: 64, offset: 8704)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1308, file: !1309, line: 943, baseType: !1819, size: 128, offset: 8768)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 128, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 16)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1308, file: !1309, line: 945, baseType: !1823, size: 64, offset: 8896)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1309, line: 49, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1308, file: !1309, line: 956, baseType: !1826, size: 64, offset: 8960)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1309, line: 45, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1308, file: !1309, line: 959, baseType: !1829, size: 64, offset: 9024)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1309, line: 959, flags: DIFlagFwdDecl)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1308, file: !1309, line: 962, baseType: !1832, size: 64, offset: 9088)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1309, line: 66, flags: DIFlagFwdDecl)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1308, file: !1309, line: 966, baseType: !1835, size: 64, offset: 9152)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1837, line: 35, flags: DIFlagFwdDecl)
!1837 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1308, file: !1309, line: 969, baseType: !1839, size: 64, offset: 9216)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1841, line: 82, size: 7296, elements: !1842)
!1841 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1878, !1887, !1888, !1890, !1891, !1892, !1893, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1923, !1924, !1931, !1932, !1933, !1934, !1935, !1936}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1840, file: !1841, line: 83, baseType: !302, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1840, file: !1841, line: 84, baseType: !280, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1840, file: !1841, line: 85, baseType: !220, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1840, file: !1841, line: 86, baseType: !246, size: 128, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1840, file: !1841, line: 88, baseType: !1566, size: 128, offset: 256)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1840, file: !1841, line: 91, baseType: !1307, size: 64, offset: 384)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1840, file: !1841, line: 94, baseType: !1850, size: 192, offset: 448)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1851, line: 30, size: 192, elements: !1852)
!1851 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1850, file: !1851, line: 31, baseType: !246, size: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1850, file: !1851, line: 32, baseType: !1855, size: 64, offset: 128)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1856, line: 25, baseType: !1857)
!1856 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1856, line: 23, size: 64, elements: !1858)
!1858 = !{!1859}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1857, file: !1856, line: 24, baseType: !1455, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1840, file: !1841, line: 97, baseType: !706, size: 64, offset: 640)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1840, file: !1841, line: 100, baseType: !220, size: 32, offset: 704)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1840, file: !1841, line: 106, baseType: !220, size: 32, offset: 736)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1840, file: !1841, line: 107, baseType: !1307, size: 64, offset: 768)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1840, file: !1841, line: 110, baseType: !220, size: 32, offset: 832)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1840, file: !1841, line: 111, baseType: !7, size: 32, offset: 864)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1840, file: !1841, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1840, file: !1841, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1840, file: !1841, line: 128, baseType: !220, size: 32, offset: 928)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1840, file: !1841, line: 129, baseType: !246, size: 128, offset: 960)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1840, file: !1841, line: 132, baseType: !1377, size: 512, offset: 1088)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1840, file: !1841, line: 133, baseType: !1385, size: 64, offset: 1600)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1840, file: !1841, line: 140, baseType: !1873, size: 256, offset: 1664)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 256, elements: !1654)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1841, line: 38, size: 128, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1874, file: !1841, line: 39, baseType: !491, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1874, file: !1841, line: 40, baseType: !491, size: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1840, file: !1841, line: 146, baseType: !1879, size: 192, offset: 1920)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1841, line: 66, size: 192, elements: !1880)
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1879, file: !1841, line: 67, baseType: !1882, size: 192)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1841, line: 47, size: 192, elements: !1883)
!1883 = !{!1884, !1885, !1886}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1882, file: !1841, line: 48, baseType: !236, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1882, file: !1841, line: 49, baseType: !236, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1882, file: !1841, line: 50, baseType: !236, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1840, file: !1841, line: 150, baseType: !1615, size: 640, offset: 2112)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1840, file: !1841, line: 153, baseType: !1889, size: 256, offset: 2752)
!1889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1556, size: 256, elements: !1252)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1840, file: !1841, line: 159, baseType: !1556, size: 64, offset: 3008)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1840, file: !1841, line: 162, baseType: !220, size: 32, offset: 3072)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1840, file: !1841, line: 164, baseType: !293, size: 64, offset: 3136)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1840, file: !1841, line: 175, baseType: !1894, size: 32, offset: 3200)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !460, line: 805, baseType: !1895)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !460, line: 798, size: 32, elements: !1896)
!1896 = !{!1897, !1898}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1895, file: !460, line: 803, baseType: !459, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1895, file: !460, line: 804, baseType: !263, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1840, file: !1841, line: 176, baseType: !491, size: 64, offset: 3264)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1840, file: !1841, line: 176, baseType: !491, size: 64, offset: 3328)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1840, file: !1841, line: 176, baseType: !491, size: 64, offset: 3392)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1840, file: !1841, line: 176, baseType: !491, size: 64, offset: 3456)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1840, file: !1841, line: 177, baseType: !491, size: 64, offset: 3520)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1840, file: !1841, line: 178, baseType: !491, size: 64, offset: 3584)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1840, file: !1841, line: 179, baseType: !1603, size: 128, offset: 3648)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1840, file: !1841, line: 180, baseType: !187, size: 64, offset: 3776)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1840, file: !1841, line: 180, baseType: !187, size: 64, offset: 3840)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1840, file: !1841, line: 180, baseType: !187, size: 64, offset: 3904)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1840, file: !1841, line: 180, baseType: !187, size: 64, offset: 3968)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1840, file: !1841, line: 181, baseType: !187, size: 64, offset: 4032)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1840, file: !1841, line: 181, baseType: !187, size: 64, offset: 4096)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1840, file: !1841, line: 181, baseType: !187, size: 64, offset: 4160)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1840, file: !1841, line: 181, baseType: !187, size: 64, offset: 4224)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1840, file: !1841, line: 182, baseType: !187, size: 64, offset: 4288)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1840, file: !1841, line: 182, baseType: !187, size: 64, offset: 4352)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1840, file: !1841, line: 182, baseType: !187, size: 64, offset: 4416)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1840, file: !1841, line: 182, baseType: !187, size: 64, offset: 4480)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1840, file: !1841, line: 183, baseType: !187, size: 64, offset: 4544)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1840, file: !1841, line: 183, baseType: !187, size: 64, offset: 4608)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1840, file: !1841, line: 184, baseType: !1921, offset: 4672)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1922, line: 12, elements: !277)
!1922 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1840, file: !1841, line: 192, baseType: !493, size: 64, offset: 4672)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1840, file: !1841, line: 203, baseType: !1925, size: 2048, offset: 4736)
!1925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1926, size: 2048, elements: !1820)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1927, line: 43, size: 128, elements: !1928)
!1927 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1928 = !{!1929, !1930}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1926, file: !1927, line: 44, baseType: !401, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1926, file: !1927, line: 45, baseType: !401, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1840, file: !1841, line: 220, baseType: !560, size: 8, offset: 6784)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1840, file: !1841, line: 221, baseType: !1296, size: 16, offset: 6800)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1840, file: !1841, line: 222, baseType: !1296, size: 16, offset: 6816)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1840, file: !1841, line: 224, baseType: !1071, size: 64, offset: 6848)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1840, file: !1841, line: 227, baseType: !258, size: 192, offset: 6912)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1840, file: !1841, line: 233, baseType: !258, size: 192, offset: 7104)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1308, file: !1309, line: 970, baseType: !1938, size: 64, offset: 9280)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1841, line: 20, size: 16576, elements: !1940)
!1940 = !{!1941, !1942, !1943, !1944}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1939, file: !1841, line: 21, baseType: !263)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1939, file: !1841, line: 22, baseType: !302, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1939, file: !1841, line: 23, baseType: !1566, size: 128, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1939, file: !1841, line: 24, baseType: !1945, size: 16384, offset: 192)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 16384, elements: !358)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1851, line: 49, size: 256, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1946, file: !1851, line: 50, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1851, line: 35, size: 256, elements: !1950)
!1950 = !{!1951, !1958, !1959, !1965}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1949, file: !1851, line: 37, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1953, line: 19, baseType: !1954)
!1953 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1953, line: 18, baseType: !1956)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !220}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1949, file: !1851, line: 38, baseType: !187, size: 64, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1949, file: !1851, line: 44, baseType: !1960, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1953, line: 22, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1953, line: 21, baseType: !1963)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1949, file: !1851, line: 46, baseType: !1855, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1308, file: !1309, line: 971, baseType: !1855, size: 64, offset: 9344)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1308, file: !1309, line: 972, baseType: !1855, size: 64, offset: 9408)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1308, file: !1309, line: 974, baseType: !1855, size: 64, offset: 9472)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1308, file: !1309, line: 975, baseType: !1850, size: 192, offset: 9536)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1308, file: !1309, line: 976, baseType: !187, size: 64, offset: 9728)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1308, file: !1309, line: 977, baseType: !399, size: 64, offset: 9792)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1308, file: !1309, line: 978, baseType: !7, size: 32, offset: 9856)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1308, file: !1309, line: 980, baseType: !440, size: 64, offset: 9920)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1308, file: !1309, line: 989, baseType: !1975, size: 128, offset: 9984)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1976, line: 35, size: 128, elements: !1977)
!1976 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1977 = !{!1978, !1979, !1980}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1975, file: !1976, line: 36, baseType: !220, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1975, file: !1976, line: 37, baseType: !280, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1975, file: !1976, line: 38, baseType: !1981, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1976, line: 23, flags: DIFlagFwdDecl)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1308, file: !1309, line: 992, baseType: !491, size: 64, offset: 10112)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1308, file: !1309, line: 993, baseType: !491, size: 64, offset: 10176)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1308, file: !1309, line: 996, baseType: !263, offset: 10240)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1308, file: !1309, line: 999, baseType: !876, offset: 10240)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1308, file: !1309, line: 1001, baseType: !1988, size: 64, offset: 10240)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1309, line: 636, size: 64, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1988, file: !1309, line: 637, baseType: !1991, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1308, file: !1309, line: 1005, baseType: !855, size: 128, offset: 10304)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1308, file: !1309, line: 1007, baseType: !1307, size: 64, offset: 10432)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1308, file: !1309, line: 1009, baseType: !1995, size: 64, offset: 10496)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1309, line: 1009, flags: DIFlagFwdDecl)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1308, file: !1309, line: 1043, baseType: !185, size: 64, offset: 10560)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1308, file: !1309, line: 1046, baseType: !1999, size: 64, offset: 10624)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1309, line: 41, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1308, file: !1309, line: 1050, baseType: !2002, size: 64, offset: 10688)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1309, line: 42, flags: DIFlagFwdDecl)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1308, file: !1309, line: 1054, baseType: !2005, size: 64, offset: 10752)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1309, line: 55, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1308, file: !1309, line: 1056, baseType: !2008, size: 64, offset: 10816)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1309, line: 40, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1308, file: !1309, line: 1058, baseType: !2011, size: 64, offset: 10880)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2013, line: 99, size: 704, elements: !2014)
!2013 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2040, !2041}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2012, file: !2013, line: 100, baseType: !234, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2012, file: !2013, line: 101, baseType: !280, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2012, file: !2013, line: 102, baseType: !280, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2012, file: !2013, line: 105, baseType: !263, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2012, file: !2013, line: 107, baseType: !394, size: 16, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2012, file: !2013, line: 109, baseType: !846, size: 128, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2012, file: !2013, line: 110, baseType: !2022, size: 64, offset: 320)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2013, line: 73, size: 448, elements: !2024)
!2024 = !{!2025, !2028, !2029, !2034, !2039}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2023, file: !2013, line: 74, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2013, line: 74, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2023, file: !2013, line: 75, baseType: !2011, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2013, line: 83, baseType: !2030, size: 128, offset: 128)
!2030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !2013, line: 83, size: 128, elements: !2031)
!2031 = !{!2032, !2033}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2030, file: !2013, line: 84, baseType: !246, size: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2030, file: !2013, line: 85, baseType: !1031, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !2013, line: 87, baseType: !2035, size: 128, offset: 256)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2023, file: !2013, line: 87, size: 128, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2035, file: !2013, line: 88, baseType: !710, size: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2035, file: !2013, line: 89, baseType: !437, size: 128, align: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2023, file: !2013, line: 92, baseType: !7, size: 32, offset: 384)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2012, file: !2013, line: 111, baseType: !706, size: 64, offset: 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2012, file: !2013, line: 113, baseType: !230, size: 256, offset: 448)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1308, file: !1309, line: 1061, baseType: !2043, size: 64, offset: 10944)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1309, line: 43, flags: DIFlagFwdDecl)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1308, file: !1309, line: 1064, baseType: !187, size: 64, offset: 11008)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1308, file: !1309, line: 1065, baseType: !2047, size: 64, offset: 11072)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1851, line: 14, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1851, line: 12, size: 384, elements: !2050)
!2050 = !{!2051}
!2051 = !DIDerivedType(tag: DW_TAG_member, scope: !2049, file: !1851, line: 13, baseType: !2052, size: 384)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2049, file: !1851, line: 13, size: 384, elements: !2053)
!2053 = !{!2054, !2055, !2056, !2057}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2052, file: !1851, line: 13, baseType: !220, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2052, file: !1851, line: 13, baseType: !220, size: 32, offset: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2052, file: !1851, line: 13, baseType: !220, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2052, file: !1851, line: 13, baseType: !2058, size: 256, offset: 128)
!2058 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2059, line: 32, size: 256, elements: !2060)
!2059 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !{!2061, !2066, !2079, !2085, !2094, !2114, !2119}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2058, file: !2059, line: 37, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 34, size: 64, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2062, file: !2059, line: 35, baseType: !1545, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2062, file: !2059, line: 36, baseType: !511, size: 32, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2058, file: !2059, line: 45, baseType: !2067, size: 192)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 40, size: 192, elements: !2068)
!2068 = !{!2069, !2071, !2072, !2078}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2067, file: !2059, line: 41, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !386, line: 95, baseType: !220)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2067, file: !2059, line: 42, baseType: !220, size: 32, offset: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2067, file: !2059, line: 43, baseType: !2073, size: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2059, line: 11, baseType: !2074)
!2074 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2059, line: 8, size: 64, elements: !2075)
!2075 = !{!2076, !2077}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2074, file: !2059, line: 9, baseType: !220, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2074, file: !2059, line: 10, baseType: !185, size: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2067, file: !2059, line: 44, baseType: !220, size: 32, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2058, file: !2059, line: 52, baseType: !2080, size: 128)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 48, size: 128, elements: !2081)
!2081 = !{!2082, !2083, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2080, file: !2059, line: 49, baseType: !1545, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2080, file: !2059, line: 50, baseType: !511, size: 32, offset: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2080, file: !2059, line: 51, baseType: !2073, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2058, file: !2059, line: 61, baseType: !2086, size: 256)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 55, size: 256, elements: !2087)
!2087 = !{!2088, !2089, !2090, !2091, !2093}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2086, file: !2059, line: 56, baseType: !1545, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2086, file: !2059, line: 57, baseType: !511, size: 32, offset: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2086, file: !2059, line: 58, baseType: !220, size: 32, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2086, file: !2059, line: 59, baseType: !2092, size: 64, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !386, line: 94, baseType: !387)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2086, file: !2059, line: 60, baseType: !2092, size: 64, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2058, file: !2059, line: 95, baseType: !2095, size: 256)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 64, size: 256, elements: !2096)
!2096 = !{!2097, !2098}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2095, file: !2059, line: 65, baseType: !185, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, scope: !2095, file: !2059, line: 77, baseType: !2099, size: 192, offset: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2095, file: !2059, line: 77, size: 192, elements: !2100)
!2100 = !{!2101, !2102, !2109}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2099, file: !2059, line: 82, baseType: !1296, size: 16)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2099, file: !2059, line: 88, baseType: !2103, size: 192)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !2059, line: 84, size: 192, elements: !2104)
!2104 = !{!2105, !2107, !2108}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2103, file: !2059, line: 85, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 64, elements: !1415)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2103, file: !2059, line: 86, baseType: !185, size: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2103, file: !2059, line: 87, baseType: !185, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2099, file: !2059, line: 93, baseType: !2110, size: 96)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2099, file: !2059, line: 90, size: 96, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2110, file: !2059, line: 91, baseType: !2106, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2110, file: !2059, line: 92, baseType: !488, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2058, file: !2059, line: 101, baseType: !2115, size: 128)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 98, size: 128, elements: !2116)
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2115, file: !2059, line: 99, baseType: !193, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2115, file: !2059, line: 100, baseType: !220, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2058, file: !2059, line: 108, baseType: !2120, size: 128)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2058, file: !2059, line: 104, size: 128, elements: !2121)
!2121 = !{!2122, !2123, !2124}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2120, file: !2059, line: 105, baseType: !185, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2120, file: !2059, line: 106, baseType: !220, size: 32, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2120, file: !2059, line: 107, baseType: !7, size: 32, offset: 96)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1308, file: !1309, line: 1067, baseType: !1921, offset: 11136)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1308, file: !1309, line: 1099, baseType: !2127, size: 64, offset: 11136)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1309, line: 56, flags: DIFlagFwdDecl)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1308, file: !1309, line: 1103, baseType: !246, size: 128, offset: 11200)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1308, file: !1309, line: 1104, baseType: !2131, size: 64, offset: 11328)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1309, line: 46, flags: DIFlagFwdDecl)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1308, file: !1309, line: 1105, baseType: !258, size: 192, offset: 11392)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1308, file: !1309, line: 1106, baseType: !7, size: 32, offset: 11584)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1308, file: !1309, line: 1109, baseType: !2136, size: 128, offset: 11648)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 128, elements: !1654)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1309, line: 51, flags: DIFlagFwdDecl)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1308, file: !1309, line: 1110, baseType: !258, size: 192, offset: 11776)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1308, file: !1309, line: 1111, baseType: !246, size: 128, offset: 11968)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1308, file: !1309, line: 1173, baseType: !2142, size: 64, offset: 12096)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2144, line: 62, size: 256, align: 256, elements: !2145)
!2144 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2145 = !{!2146, !2147, !2148, !2153}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2143, file: !2144, line: 75, baseType: !488, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2143, file: !2144, line: 90, baseType: !488, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2143, file: !2144, line: 124, baseType: !2149, size: 64, offset: 64)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2143, file: !2144, line: 109, size: 64, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2149, file: !2144, line: 110, baseType: !492, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2149, file: !2144, line: 112, baseType: !492, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2143, file: !2144, line: 144, baseType: !488, size: 32, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1308, file: !1309, line: 1174, baseType: !487, size: 32, offset: 12160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1308, file: !1309, line: 1179, baseType: !187, size: 64, offset: 12224)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1308, file: !1309, line: 1182, baseType: !2157, size: 128, offset: 12288)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1248, line: 76, size: 128, elements: !2158)
!2158 = !{!2159, !2164, !2165}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2157, file: !1248, line: 85, baseType: !2160, size: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2161, line: 7, size: 64, elements: !2162)
!2161 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2160, file: !2161, line: 12, baseType: !1452, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2157, file: !1248, line: 88, baseType: !560, size: 8, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2157, file: !1248, line: 95, baseType: !560, size: 8, offset: 72)
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !1308, file: !1309, line: 1184, baseType: !2167, size: 128, offset: 12416)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1308, file: !1309, line: 1184, size: 128, elements: !2168)
!2168 = !{!2169, !2170}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2167, file: !1309, line: 1185, baseType: !302, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2167, file: !1309, line: 1186, baseType: !437, size: 128, align: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1308, file: !1309, line: 1190, baseType: !2172, size: 64, offset: 12544)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1309, line: 53, flags: DIFlagFwdDecl)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1308, file: !1309, line: 1192, baseType: !2175, size: 128, offset: 12608)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1248, line: 64, size: 128, elements: !2176)
!2176 = !{!2177, !2178, !2179}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2175, file: !1248, line: 65, baseType: !828, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2175, file: !1248, line: 67, baseType: !488, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2175, file: !1248, line: 68, baseType: !488, size: 32, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1308, file: !1309, line: 1206, baseType: !220, size: 32, offset: 12736)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1308, file: !1309, line: 1207, baseType: !220, size: 32, offset: 12768)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1308, file: !1309, line: 1209, baseType: !187, size: 64, offset: 12800)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1308, file: !1309, line: 1219, baseType: !491, size: 64, offset: 12864)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1308, file: !1309, line: 1220, baseType: !491, size: 64, offset: 12928)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1308, file: !1309, line: 1317, baseType: !220, size: 32, offset: 12992)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1308, file: !1309, line: 1319, baseType: !1307, size: 64, offset: 13056)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1308, file: !1309, line: 1322, baseType: !2188, size: 64, offset: 13120)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2190, line: 56, size: 512, elements: !2191)
!2190 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2191 = !{!2192, !2193, !2194, !2195, !2196, !2197, !2198, !2200}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2189, file: !2190, line: 57, baseType: !2188, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2189, file: !2190, line: 58, baseType: !185, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2189, file: !2190, line: 59, baseType: !187, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2189, file: !2190, line: 60, baseType: !187, size: 64, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2189, file: !2190, line: 61, baseType: !916, size: 64, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2189, file: !2190, line: 62, baseType: !7, size: 32, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2189, file: !2190, line: 63, baseType: !2199, size: 64, offset: 384)
!2199 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !184, line: 153, baseType: !491)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2189, file: !2190, line: 64, baseType: !2201, size: 64, offset: 448)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1308, file: !1309, line: 1326, baseType: !302, size: 32, offset: 13184)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1308, file: !1309, line: 1342, baseType: !185, size: 64, offset: 13248)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1308, file: !1309, line: 1343, baseType: !492, size: 64, offset: 13312)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1308, file: !1309, line: 1344, baseType: !491, size: 64, offset: 13376)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1308, file: !1309, line: 1345, baseType: !492, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1308, file: !1309, line: 1346, baseType: !492, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1308, file: !1309, line: 1347, baseType: !492, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1308, file: !1309, line: 1348, baseType: !437, size: 128, align: 64, offset: 13504)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1308, file: !1309, line: 1358, baseType: !2212, size: 34816, offset: 13824)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2213, line: 485, size: 34816, elements: !2214)
!2213 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2214 = !{!2215, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2244, !2245, !2246, !2247, !2248, !2249, !2252, !2253, !2254}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2212, file: !2213, line: 487, baseType: !2216, size: 192)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2217, size: 192, elements: !354)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2218, line: 16, size: 64, elements: !2219)
!2218 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2217, file: !2218, line: 17, baseType: !955, size: 16)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2217, file: !2218, line: 18, baseType: !955, size: 16, offset: 16)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2217, file: !2218, line: 19, baseType: !955, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2217, file: !2218, line: 19, baseType: !955, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2217, file: !2218, line: 19, baseType: !955, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2217, file: !2218, line: 19, baseType: !955, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2217, file: !2218, line: 19, baseType: !955, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2217, file: !2218, line: 20, baseType: !955, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2217, file: !2218, line: 20, baseType: !955, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2217, file: !2218, line: 20, baseType: !955, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2217, file: !2218, line: 20, baseType: !955, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2217, file: !2218, line: 20, baseType: !955, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2217, file: !2218, line: 20, baseType: !955, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2212, file: !2213, line: 491, baseType: !187, size: 64, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2212, file: !2213, line: 495, baseType: !394, size: 16, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2212, file: !2213, line: 496, baseType: !394, size: 16, offset: 272)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2212, file: !2213, line: 497, baseType: !394, size: 16, offset: 288)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2212, file: !2213, line: 498, baseType: !394, size: 16, offset: 304)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2212, file: !2213, line: 502, baseType: !187, size: 64, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2212, file: !2213, line: 503, baseType: !187, size: 64, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2212, file: !2213, line: 514, baseType: !2241, size: 256, offset: 448)
!2241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2242, size: 256, elements: !1252)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 64)
!2243 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2213, line: 483, flags: DIFlagFwdDecl)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2212, file: !2213, line: 516, baseType: !187, size: 64, offset: 704)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2212, file: !2213, line: 518, baseType: !187, size: 64, offset: 768)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2212, file: !2213, line: 520, baseType: !187, size: 64, offset: 832)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2212, file: !2213, line: 521, baseType: !187, size: 64, offset: 896)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2212, file: !2213, line: 522, baseType: !187, size: 64, offset: 960)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2212, file: !2213, line: 528, baseType: !2250, size: 64, offset: 1024)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2213, line: 10, flags: DIFlagFwdDecl)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2212, file: !2213, line: 535, baseType: !187, size: 64, offset: 1088)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2212, file: !2213, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2212, file: !2213, line: 540, baseType: !2255, size: 33280, offset: 1536)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2256, line: 317, size: 33280, elements: !2257)
!2256 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2257 = !{!2258, !2259, !2260}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2255, file: !2256, line: 330, baseType: !7, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2255, file: !2256, line: 337, baseType: !187, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2255, file: !2256, line: 348, baseType: !2261, size: 32768, offset: 512)
!2261 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2256, line: 304, size: 32768, elements: !2262)
!2262 = !{!2263, !2278, !2317, !2367, !2380}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2261, file: !2256, line: 305, baseType: !2264, size: 896)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2256, line: 12, size: 896, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2277}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2264, file: !2256, line: 13, baseType: !487, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2264, file: !2256, line: 14, baseType: !487, size: 32, offset: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2264, file: !2256, line: 15, baseType: !487, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2264, file: !2256, line: 16, baseType: !487, size: 32, offset: 96)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2264, file: !2256, line: 17, baseType: !487, size: 32, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2264, file: !2256, line: 18, baseType: !487, size: 32, offset: 160)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2264, file: !2256, line: 19, baseType: !487, size: 32, offset: 192)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2264, file: !2256, line: 22, baseType: !2274, size: 640, offset: 224)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 640, elements: !2275)
!2275 = !{!2276}
!2276 = !DISubrange(count: 20)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2264, file: !2256, line: 25, baseType: !487, size: 32, offset: 864)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2261, file: !2256, line: 306, baseType: !2279, size: 4096, align: 128)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2256, line: 34, size: 4096, align: 128, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2300, !2301, !2302, !2306, !2308, !2312}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2279, file: !2256, line: 35, baseType: !955, size: 16)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2279, file: !2256, line: 36, baseType: !955, size: 16, offset: 16)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2279, file: !2256, line: 37, baseType: !955, size: 16, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2279, file: !2256, line: 38, baseType: !955, size: 16, offset: 48)
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !2256, line: 39, baseType: !2286, size: 128, offset: 64)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2279, file: !2256, line: 39, size: 128, elements: !2287)
!2287 = !{!2288, !2293}
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !2256, line: 40, baseType: !2289, size: 128)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2256, line: 40, size: 128, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2289, file: !2256, line: 41, baseType: !491, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2289, file: !2256, line: 42, baseType: !491, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !2256, line: 44, baseType: !2294, size: 128)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2256, line: 44, size: 128, elements: !2295)
!2295 = !{!2296, !2297, !2298, !2299}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2294, file: !2256, line: 45, baseType: !487, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2294, file: !2256, line: 46, baseType: !487, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2294, file: !2256, line: 47, baseType: !487, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2294, file: !2256, line: 48, baseType: !487, size: 32, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2279, file: !2256, line: 51, baseType: !487, size: 32, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2279, file: !2256, line: 52, baseType: !487, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2279, file: !2256, line: 55, baseType: !2303, size: 1024, offset: 256)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 1024, elements: !2304)
!2304 = !{!2305}
!2305 = !DISubrange(count: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2279, file: !2256, line: 58, baseType: !2307, size: 2048, offset: 1280)
!2307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 2048, elements: !358)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2279, file: !2256, line: 60, baseType: !2309, size: 384, offset: 3328)
!2309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 384, elements: !2310)
!2310 = !{!2311}
!2311 = !DISubrange(count: 12)
!2312 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !2256, line: 62, baseType: !2313, size: 384, offset: 3712)
!2313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2279, file: !2256, line: 62, size: 384, elements: !2314)
!2314 = !{!2315, !2316}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2313, file: !2256, line: 63, baseType: !2309, size: 384)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2313, file: !2256, line: 64, baseType: !2309, size: 384)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2261, file: !2256, line: 307, baseType: !2318, size: 1088)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2256, line: 79, size: 1088, elements: !2319)
!2319 = !{!2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2366}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2318, file: !2256, line: 80, baseType: !487, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2318, file: !2256, line: 81, baseType: !487, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2318, file: !2256, line: 82, baseType: !487, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2318, file: !2256, line: 83, baseType: !487, size: 32, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2318, file: !2256, line: 84, baseType: !487, size: 32, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2318, file: !2256, line: 85, baseType: !487, size: 32, offset: 160)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2318, file: !2256, line: 86, baseType: !487, size: 32, offset: 192)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2318, file: !2256, line: 88, baseType: !2274, size: 640, offset: 224)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2318, file: !2256, line: 89, baseType: !1437, size: 8, offset: 864)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2318, file: !2256, line: 90, baseType: !1437, size: 8, offset: 872)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2318, file: !2256, line: 91, baseType: !1437, size: 8, offset: 880)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2318, file: !2256, line: 92, baseType: !1437, size: 8, offset: 888)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2318, file: !2256, line: 93, baseType: !1437, size: 8, offset: 896)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2318, file: !2256, line: 94, baseType: !1437, size: 8, offset: 904)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2318, file: !2256, line: 95, baseType: !2335, size: 64, offset: 960)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2337, line: 11, size: 128, elements: !2338)
!2337 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2338 = !{!2339, !2340}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2336, file: !2337, line: 12, baseType: !193, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2336, file: !2337, line: 13, baseType: !2341, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 64)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2343, line: 56, size: 1344, elements: !2344)
!2343 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2344 = !{!2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2342, file: !2343, line: 61, baseType: !187, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2342, file: !2343, line: 62, baseType: !187, size: 64, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2342, file: !2343, line: 63, baseType: !187, size: 64, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2342, file: !2343, line: 64, baseType: !187, size: 64, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2342, file: !2343, line: 65, baseType: !187, size: 64, offset: 256)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2342, file: !2343, line: 66, baseType: !187, size: 64, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2342, file: !2343, line: 68, baseType: !187, size: 64, offset: 384)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2342, file: !2343, line: 69, baseType: !187, size: 64, offset: 448)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2342, file: !2343, line: 70, baseType: !187, size: 64, offset: 512)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2342, file: !2343, line: 71, baseType: !187, size: 64, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2342, file: !2343, line: 72, baseType: !187, size: 64, offset: 640)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2342, file: !2343, line: 73, baseType: !187, size: 64, offset: 704)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2342, file: !2343, line: 74, baseType: !187, size: 64, offset: 768)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2342, file: !2343, line: 75, baseType: !187, size: 64, offset: 832)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2342, file: !2343, line: 76, baseType: !187, size: 64, offset: 896)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2342, file: !2343, line: 81, baseType: !187, size: 64, offset: 960)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2342, file: !2343, line: 83, baseType: !187, size: 64, offset: 1024)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2342, file: !2343, line: 84, baseType: !187, size: 64, offset: 1088)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2342, file: !2343, line: 85, baseType: !187, size: 64, offset: 1152)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2342, file: !2343, line: 86, baseType: !187, size: 64, offset: 1216)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2342, file: !2343, line: 87, baseType: !187, size: 64, offset: 1280)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2318, file: !2256, line: 96, baseType: !487, size: 32, offset: 1024)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2261, file: !2256, line: 308, baseType: !2368, size: 4608, align: 512)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2256, line: 289, size: 4608, align: 512, elements: !2369)
!2369 = !{!2370, !2371, !2378}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2368, file: !2256, line: 290, baseType: !2279, size: 4096, align: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2368, file: !2256, line: 291, baseType: !2372, size: 512, offset: 4096)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2256, line: 268, size: 512, elements: !2373)
!2373 = !{!2374, !2375, !2376}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2372, file: !2256, line: 269, baseType: !491, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2372, file: !2256, line: 270, baseType: !491, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2372, file: !2256, line: 271, baseType: !2377, size: 384, offset: 128)
!2377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 384, elements: !1710)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2368, file: !2256, line: 292, baseType: !2379, offset: 4608)
!2379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1437, elements: !1808)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2261, file: !2256, line: 309, baseType: !2381, size: 32768)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1437, size: 32768, elements: !2382)
!2382 = !{!2383}
!2383 = !DISubrange(count: 4096)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1304, file: !830, line: 378, baseType: !2385, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1300, file: !830, line: 384, baseType: !1587, size: 192, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1075, file: !830, line: 500, baseType: !263, offset: 6656)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1075, file: !830, line: 501, baseType: !2389, size: 64, offset: 6656)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !830, line: 387, flags: DIFlagFwdDecl)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1075, file: !830, line: 516, baseType: !1798, size: 64, offset: 6720)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1075, file: !830, line: 519, baseType: !429, size: 64, offset: 6784)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1075, file: !830, line: 521, baseType: !2394, size: 64, offset: 6848)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !830, line: 521, flags: DIFlagFwdDecl)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1075, file: !830, line: 545, baseType: !280, size: 32, offset: 6912)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1075, file: !830, line: 548, baseType: !560, size: 8, offset: 6944)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1075, file: !830, line: 550, baseType: !2399, offset: 6952)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2400, line: 142, elements: !277)
!2400 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1075, file: !830, line: 554, baseType: !230, size: 256, offset: 6976)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1075, file: !830, line: 557, baseType: !487, size: 32, offset: 7232)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1072, file: !830, line: 565, baseType: !226, offset: 7296)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1068, file: !830, line: 151, baseType: !280, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1060, file: !830, line: 156, baseType: !263, offset: 256)
!2406 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !830, line: 159, baseType: !2407, size: 128)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !834, file: !830, line: 159, size: 128, elements: !2408)
!2408 = !{!2409, !2473}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2407, file: !830, line: 161, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2412)
!2412 = !{!2413, !2423, !2444, !2445, !2446, !2447, !2448, !2460, !2461, !2462}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2411, file: !31, line: 111, baseType: !2414, size: 384)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2415)
!2415 = !{!2416, !2418, !2419, !2420, !2421, !2422}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2414, file: !31, line: 20, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2414, file: !31, line: 21, baseType: !2417, size: 64, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2414, file: !31, line: 22, baseType: !2417, size: 64, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2414, file: !31, line: 23, baseType: !187, size: 64, offset: 192)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2414, file: !31, line: 24, baseType: !187, size: 64, offset: 256)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2414, file: !31, line: 25, baseType: !187, size: 64, offset: 320)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2411, file: !31, line: 112, baseType: !2424, size: 64, offset: 384)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2426, line: 105, size: 128, elements: !2427)
!2426 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2427 = !{!2428, !2429}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2425, file: !2426, line: 110, baseType: !187, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2425, file: !2426, line: 118, baseType: !2430, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2426, line: 95, size: 448, elements: !2432)
!2432 = !{!2433, !2434, !2439, !2440, !2441, !2442, !2443}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2431, file: !2426, line: 96, baseType: !234, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2431, file: !2426, line: 97, baseType: !2435, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2426, line: 60, baseType: !2437)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{null, !2424}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2431, file: !2426, line: 98, baseType: !2435, size: 64, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2431, file: !2426, line: 99, baseType: !560, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2431, file: !2426, line: 100, baseType: !560, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2431, file: !2426, line: 101, baseType: !437, size: 128, align: 64, offset: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2431, file: !2426, line: 102, baseType: !2424, size: 64, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2411, file: !31, line: 113, baseType: !2425, size: 128, offset: 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2411, file: !31, line: 114, baseType: !1587, size: 192, offset: 576)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2411, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2411, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2411, file: !31, line: 117, baseType: !2449, size: 64, offset: 832)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2451)
!2451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2452)
!2452 = !{!2453, !2454, !2458, !2459}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2451, file: !31, line: 73, baseType: !936, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2451, file: !31, line: 78, baseType: !2455, size: 64, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{null, !2410}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2451, file: !31, line: 83, baseType: !2455, size: 64, offset: 128)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2451, file: !31, line: 89, baseType: !1124, size: 64, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2411, file: !31, line: 118, baseType: !185, size: 64, offset: 896)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2411, file: !31, line: 119, baseType: !220, size: 32, offset: 960)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2411, file: !31, line: 120, baseType: !2463, size: 128, offset: 1024)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2411, file: !31, line: 120, size: 128, elements: !2464)
!2464 = !{!2465, !2471}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2463, file: !31, line: 121, baseType: !2466, size: 128)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2467, line: 6, size: 128, elements: !2468)
!2467 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2468 = !{!2469, !2470}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2466, file: !2467, line: 7, baseType: !491, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2466, file: !2467, line: 8, baseType: !491, size: 64, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2463, file: !31, line: 122, baseType: !2472)
!2472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2466, elements: !1808)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2407, file: !830, line: 162, baseType: !185, size: 64, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !834, file: !830, line: 176, baseType: !437, size: 128, align: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !829, file: !830, line: 179, baseType: !2476, size: 32, offset: 384)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !829, file: !830, line: 179, size: 32, elements: !2477)
!2477 = !{!2478, !2479, !2480, !2481}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2476, file: !830, line: 184, baseType: !280, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2476, file: !830, line: 192, baseType: !7, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2476, file: !830, line: 194, baseType: !7, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2476, file: !830, line: 195, baseType: !220, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !829, file: !830, line: 199, baseType: !280, size: 32, offset: 416)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !728, file: !44, line: 1964, baseType: !2484, size: 64, offset: 1344)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!193, !667, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2489, line: 12, size: 256, elements: !2490)
!2489 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2490 = !{!2491, !2492, !2493, !2494, !2495}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2488, file: !2489, line: 13, baseType: !183, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2488, file: !2489, line: 16, baseType: !220, size: 32, offset: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2488, file: !2489, line: 23, baseType: !187, size: 64, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2488, file: !2489, line: 30, baseType: !187, size: 64, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2488, file: !2489, line: 33, baseType: !2496, size: 64, offset: 192)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !830, line: 27, flags: DIFlagFwdDecl)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !728, file: !44, line: 1966, baseType: !2484, size: 64, offset: 1408)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !668, file: !44, line: 1424, baseType: !2500, size: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2502)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2503)
!2503 = !{!2504, !2550, !2554, !2558, !2559, !2560, !2561, !2562, !2567, !2572, !2576}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2502, file: !38, line: 323, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DISubroutineType(types: !2507)
!2507 = !{!220, !2508}
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2510)
!2510 = !{!2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2535, !2536, !2537}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2509, file: !38, line: 295, baseType: !710, size: 128)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2509, file: !38, line: 296, baseType: !246, size: 128, offset: 128)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2509, file: !38, line: 297, baseType: !246, size: 128, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2509, file: !38, line: 298, baseType: !246, size: 128, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2509, file: !38, line: 299, baseType: !258, size: 192, offset: 512)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2509, file: !38, line: 300, baseType: !263, offset: 704)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2509, file: !38, line: 301, baseType: !280, size: 32, offset: 704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2509, file: !38, line: 302, baseType: !667, size: 64, offset: 768)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2509, file: !38, line: 303, baseType: !2520, size: 64, offset: 832)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2521)
!2521 = !{!2522, !2534}
!2522 = !DIDerivedType(tag: DW_TAG_member, scope: !2520, file: !38, line: 69, baseType: !2523, size: 32)
!2523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2520, file: !38, line: 69, size: 32, elements: !2524)
!2524 = !{!2525, !2526, !2527}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2523, file: !38, line: 70, baseType: !505, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2523, file: !38, line: 71, baseType: !513, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2523, file: !38, line: 72, baseType: !2528, size: 32)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2529, line: 24, baseType: !2530)
!2529 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2529, line: 22, size: 32, elements: !2531)
!2531 = !{!2532}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2530, file: !2529, line: 23, baseType: !2533, size: 32)
!2533 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2529, line: 20, baseType: !511)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2520, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2509, file: !38, line: 304, baseType: !601, size: 64, offset: 896)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2509, file: !38, line: 305, baseType: !187, size: 64, offset: 960)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2509, file: !38, line: 306, baseType: !2538, size: 576, offset: 1024)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2539)
!2539 = !{!2540, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2538, file: !38, line: 206, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !244)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2538, file: !38, line: 207, baseType: !2541, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2538, file: !38, line: 208, baseType: !2541, size: 64, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2538, file: !38, line: 209, baseType: !2541, size: 64, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2538, file: !38, line: 210, baseType: !2541, size: 64, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2538, file: !38, line: 211, baseType: !2541, size: 64, offset: 320)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2538, file: !38, line: 212, baseType: !2541, size: 64, offset: 384)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2538, file: !38, line: 213, baseType: !608, size: 64, offset: 448)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2538, file: !38, line: 214, baseType: !608, size: 64, offset: 512)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2502, file: !38, line: 324, baseType: !2551, size: 64, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!2508, !667, !220}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2502, file: !38, line: 325, baseType: !2555, size: 64, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{null, !2508}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2502, file: !38, line: 326, baseType: !2505, size: 64, offset: 192)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2502, file: !38, line: 327, baseType: !2505, size: 64, offset: 256)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2502, file: !38, line: 328, baseType: !2505, size: 64, offset: 320)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2502, file: !38, line: 329, baseType: !756, size: 64, offset: 384)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2502, file: !38, line: 332, baseType: !2563, size: 64, offset: 448)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DISubroutineType(types: !2565)
!2565 = !{!2566, !499}
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2502, file: !38, line: 333, baseType: !2568, size: 64, offset: 512)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!220, !499, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2502, file: !38, line: 335, baseType: !2573, size: 64, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{!220, !499, !2566}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2502, file: !38, line: 337, baseType: !2577, size: 64, offset: 640)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{!220, !667, !2580}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !668, file: !44, line: 1425, baseType: !2582, size: 64, offset: 512)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2584)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2585)
!2585 = !{!2586, !2590, !2591, !2595, !2596, !2597, !2612, !2635, !2639, !2640, !2663}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2584, file: !38, line: 429, baseType: !2587, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!220, !667, !220, !220, !617}
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2584, file: !38, line: 430, baseType: !756, size: 64, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2584, file: !38, line: 431, baseType: !2592, size: 64, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!220, !667, !7}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2584, file: !38, line: 432, baseType: !2592, size: 64, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2584, file: !38, line: 433, baseType: !756, size: 64, offset: 256)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2584, file: !38, line: 434, baseType: !2598, size: 64, offset: 320)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = !DISubroutineType(types: !2600)
!2600 = !{!220, !667, !220, !2601}
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2602, file: !38, line: 416, baseType: !220, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2602, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2602, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2602, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2602, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2602, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2602, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2602, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2584, file: !38, line: 435, baseType: !2613, size: 64, offset: 384)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!220, !667, !2520, !2616}
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2618)
!2618 = !{!2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2617, file: !38, line: 344, baseType: !220, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2617, file: !38, line: 345, baseType: !491, size: 64, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2617, file: !38, line: 346, baseType: !491, size: 64, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2617, file: !38, line: 347, baseType: !491, size: 64, offset: 192)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2617, file: !38, line: 348, baseType: !491, size: 64, offset: 256)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2617, file: !38, line: 349, baseType: !491, size: 64, offset: 320)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2617, file: !38, line: 350, baseType: !491, size: 64, offset: 384)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2617, file: !38, line: 351, baseType: !240, size: 64, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2617, file: !38, line: 353, baseType: !240, size: 64, offset: 512)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2617, file: !38, line: 354, baseType: !220, size: 32, offset: 576)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2617, file: !38, line: 355, baseType: !220, size: 32, offset: 608)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2617, file: !38, line: 356, baseType: !491, size: 64, offset: 640)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2617, file: !38, line: 357, baseType: !491, size: 64, offset: 704)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2617, file: !38, line: 358, baseType: !491, size: 64, offset: 768)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2617, file: !38, line: 359, baseType: !240, size: 64, offset: 832)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2617, file: !38, line: 360, baseType: !220, size: 32, offset: 896)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2584, file: !38, line: 436, baseType: !2636, size: 64, offset: 448)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!220, !667, !2580, !2616}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2584, file: !38, line: 438, baseType: !2613, size: 64, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2584, file: !38, line: 439, baseType: !2641, size: 64, offset: 576)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!220, !667, !2644}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2645, file: !38, line: 410, baseType: !7, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2645, file: !38, line: 411, baseType: !2649, size: 1344, offset: 64)
!2649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2650, size: 1344, elements: !354)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2651)
!2651 = !{!2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2662}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2650, file: !38, line: 396, baseType: !7, size: 32)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2650, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2650, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2650, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2650, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2650, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2650, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2650, file: !38, line: 404, baseType: !493, size: 64, offset: 256)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2650, file: !38, line: 405, baseType: !2661, size: 64, offset: 320)
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !184, line: 126, baseType: !491)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2650, file: !38, line: 406, baseType: !2661, size: 64, offset: 384)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2584, file: !38, line: 440, baseType: !2592, size: 64, offset: 640)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !668, file: !44, line: 1426, baseType: !2665, size: 64, offset: 576)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2667)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !668, file: !44, line: 1427, baseType: !187, size: 64, offset: 640)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !668, file: !44, line: 1428, baseType: !187, size: 64, offset: 704)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !668, file: !44, line: 1429, baseType: !187, size: 64, offset: 768)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !668, file: !44, line: 1430, baseType: !454, size: 64, offset: 832)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !668, file: !44, line: 1431, baseType: !870, size: 256, offset: 896)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !668, file: !44, line: 1432, baseType: !220, size: 32, offset: 1152)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !668, file: !44, line: 1433, baseType: !280, size: 32, offset: 1184)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !668, file: !44, line: 1437, baseType: !2676, size: 64, offset: 1216)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2679)
!2679 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !668, file: !44, line: 1449, baseType: !2681, size: 64, offset: 1280)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !470, line: 34, size: 64, elements: !2682)
!2682 = !{!2683}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2681, file: !470, line: 35, baseType: !473, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !668, file: !44, line: 1450, baseType: !246, size: 128, offset: 1344)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !668, file: !44, line: 1451, baseType: !2686, size: 64, offset: 1472)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !668, file: !44, line: 1452, baseType: !2008, size: 64, offset: 1536)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !668, file: !44, line: 1453, baseType: !2690, size: 64, offset: 1600)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !668, file: !44, line: 1454, baseType: !710, size: 128, offset: 1664)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !668, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !668, file: !44, line: 1456, baseType: !2695, size: 2432, offset: 1856)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2701, !2733}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2695, file: !38, line: 519, baseType: !7, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2695, file: !38, line: 520, baseType: !870, size: 256, offset: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2695, file: !38, line: 521, baseType: !2700, size: 192, offset: 320)
!2700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 192, elements: !354)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2695, file: !38, line: 522, baseType: !2702, size: 1728, offset: 512)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2703, size: 1728, elements: !354)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2704)
!2704 = !{!2705, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2703, file: !38, line: 223, baseType: !2706, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2708)
!2708 = !{!2709, !2710, !2723, !2724}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2707, file: !38, line: 444, baseType: !220, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2707, file: !38, line: 445, baseType: !2711, size: 64, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2714)
!2714 = !{!2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2713, file: !38, line: 311, baseType: !756, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2713, file: !38, line: 312, baseType: !756, size: 64, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2713, file: !38, line: 313, baseType: !756, size: 64, offset: 128)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2713, file: !38, line: 314, baseType: !756, size: 64, offset: 192)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2713, file: !38, line: 315, baseType: !2505, size: 64, offset: 256)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2713, file: !38, line: 316, baseType: !2505, size: 64, offset: 320)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2713, file: !38, line: 317, baseType: !2505, size: 64, offset: 384)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2713, file: !38, line: 318, baseType: !2577, size: 64, offset: 448)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2707, file: !38, line: 446, baseType: !701, size: 64, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2707, file: !38, line: 447, baseType: !2706, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2703, file: !38, line: 224, baseType: !220, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2703, file: !38, line: 226, baseType: !246, size: 128, offset: 128)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2703, file: !38, line: 227, baseType: !187, size: 64, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2703, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2703, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2703, file: !38, line: 230, baseType: !2541, size: 64, offset: 384)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2703, file: !38, line: 231, baseType: !2541, size: 64, offset: 448)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2703, file: !38, line: 232, baseType: !185, size: 64, offset: 512)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2695, file: !38, line: 523, baseType: !2734, size: 192, offset: 2240)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2711, size: 192, elements: !354)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !668, file: !44, line: 1458, baseType: !2736, size: 2112, offset: 4288)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2737)
!2737 = !{!2738, !2739, !2740}
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2736, file: !44, line: 1411, baseType: !220, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2736, file: !44, line: 1412, baseType: !1566, size: 128, offset: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2736, file: !44, line: 1413, baseType: !2741, size: 1920, offset: 192)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2742, size: 1920, elements: !354)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2743, line: 12, size: 640, elements: !2744)
!2743 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2744 = !{!2745, !2753, !2755, !2760, !2761}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2742, file: !2743, line: 13, baseType: !2746, size: 320)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2747, line: 17, size: 320, elements: !2748)
!2747 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2748 = !{!2749, !2750, !2751, !2752}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2746, file: !2747, line: 18, baseType: !220, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2746, file: !2747, line: 19, baseType: !220, size: 32, offset: 32)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2746, file: !2747, line: 20, baseType: !1566, size: 128, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2746, file: !2747, line: 22, baseType: !437, size: 128, align: 64, offset: 192)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2742, file: !2743, line: 14, baseType: !2754, size: 64, offset: 320)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2742, file: !2743, line: 15, baseType: !2756, size: 64, offset: 384)
!2756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2757, line: 16, size: 64, elements: !2758)
!2757 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2758 = !{!2759}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2756, file: !2757, line: 17, baseType: !1307, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2742, file: !2743, line: 16, baseType: !1566, size: 128, offset: 448)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2742, file: !2743, line: 17, baseType: !280, size: 32, offset: 576)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !668, file: !44, line: 1465, baseType: !185, size: 64, offset: 6400)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !668, file: !44, line: 1468, baseType: !487, size: 32, offset: 6464)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !668, file: !44, line: 1470, baseType: !608, size: 64, offset: 6528)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !668, file: !44, line: 1471, baseType: !608, size: 64, offset: 6592)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !668, file: !44, line: 1473, baseType: !488, size: 32, offset: 6656)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !668, file: !44, line: 1474, baseType: !2768, size: 64, offset: 6720)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !668, file: !44, line: 1477, baseType: !2771, size: 256, offset: 6784)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 256, elements: !2304)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !668, file: !44, line: 1478, baseType: !2773, size: 128, offset: 7040)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2774, line: 18, baseType: !2775)
!2774 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2774, line: 16, size: 128, elements: !2776)
!2776 = !{!2777}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2775, file: !2774, line: 17, baseType: !2778, size: 128)
!2778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1438, size: 128, elements: !1820)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !668, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !668, file: !44, line: 1481, baseType: !2781, size: 32, offset: 7200)
!2781 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !184, line: 150, baseType: !7)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !668, file: !44, line: 1487, baseType: !258, size: 192, offset: 7232)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !668, file: !44, line: 1493, baseType: !316, size: 64, offset: 7424)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !668, file: !44, line: 1495, baseType: !2785, size: 64, offset: 7488)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !452, line: 135, size: 1024, align: 512, elements: !2788)
!2788 = !{!2789, !2793, !2794, !2801, !2807, !2811, !2815, !2819, !2820, !2824, !2828, !2833, !2837}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2787, file: !452, line: 136, baseType: !2790, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!220, !454, !7}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2787, file: !452, line: 137, baseType: !2790, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2787, file: !452, line: 138, baseType: !2795, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!220, !2798, !2800}
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2787, file: !452, line: 139, baseType: !2802, size: 64, offset: 192)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!220, !2798, !7, !316, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2787, file: !452, line: 141, baseType: !2808, size: 64, offset: 256)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!220, !2798}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2787, file: !452, line: 142, baseType: !2812, size: 64, offset: 320)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!220, !454}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2787, file: !452, line: 143, baseType: !2816, size: 64, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{null, !454}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2787, file: !452, line: 144, baseType: !2816, size: 64, offset: 448)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2787, file: !452, line: 145, baseType: !2821, size: 64, offset: 512)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{null, !454, !499}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2787, file: !452, line: 146, baseType: !2825, size: 64, offset: 576)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!353, !454, !353, !220}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2787, file: !452, line: 147, baseType: !2829, size: 64, offset: 640)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!450, !2832}
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2787, file: !452, line: 148, baseType: !2834, size: 64, offset: 704)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!220, !617, !560}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2787, file: !452, line: 149, baseType: !2838, size: 64, offset: 768)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!454, !454, !2841}
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !668, file: !44, line: 1500, baseType: !220, size: 32, offset: 7552)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !668, file: !44, line: 1502, baseType: !2845, size: 448, offset: 7616)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2489, line: 60, size: 448, elements: !2846)
!2846 = !{!2847, !2852, !2853, !2854, !2855, !2856, !2857}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2845, file: !2489, line: 61, baseType: !2848, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!187, !2851, !2487}
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2845, file: !2489, line: 63, baseType: !2848, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2845, file: !2489, line: 66, baseType: !193, size: 64, offset: 128)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2845, file: !2489, line: 67, baseType: !220, size: 32, offset: 192)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2845, file: !2489, line: 68, baseType: !7, size: 32, offset: 224)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2845, file: !2489, line: 71, baseType: !246, size: 128, offset: 256)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2845, file: !2489, line: 77, baseType: !2858, size: 64, offset: 384)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !668, file: !44, line: 1505, baseType: !234, size: 64, offset: 8064)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !668, file: !44, line: 1508, baseType: !234, size: 64, offset: 8128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !668, file: !44, line: 1511, baseType: !220, size: 32, offset: 8192)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !668, file: !44, line: 1514, baseType: !1005, size: 32, offset: 8224)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !668, file: !44, line: 1517, baseType: !2864, size: 64, offset: 8256)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !231, line: 18, flags: DIFlagFwdDecl)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !668, file: !44, line: 1518, baseType: !706, size: 64, offset: 8320)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !668, file: !44, line: 1525, baseType: !1798, size: 64, offset: 8384)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !668, file: !44, line: 1532, baseType: !2869, size: 64, offset: 8448)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2870, line: 52, size: 64, elements: !2871)
!2870 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2871 = !{!2872}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2869, file: !2870, line: 53, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2870, line: 40, size: 256, elements: !2875)
!2875 = !{!2876, !2877, !2882}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2874, file: !2870, line: 42, baseType: !263)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2874, file: !2870, line: 44, baseType: !2878, size: 192)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2870, line: 28, size: 192, elements: !2879)
!2879 = !{!2880, !2881}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2878, file: !2870, line: 29, baseType: !246, size: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2878, file: !2870, line: 31, baseType: !193, size: 64, offset: 128)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2874, file: !2870, line: 49, baseType: !193, size: 64, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !668, file: !44, line: 1533, baseType: !2869, size: 64, offset: 8512)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !668, file: !44, line: 1534, baseType: !437, size: 128, align: 64, offset: 8576)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !668, file: !44, line: 1535, baseType: !230, size: 256, offset: 8704)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !668, file: !44, line: 1537, baseType: !258, size: 192, offset: 8960)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !668, file: !44, line: 1542, baseType: !220, size: 32, offset: 9152)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !668, file: !44, line: 1545, baseType: !263, offset: 9184)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !668, file: !44, line: 1546, baseType: !246, size: 128, offset: 9216)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !668, file: !44, line: 1548, baseType: !263, offset: 9344)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !668, file: !44, line: 1549, baseType: !246, size: 128, offset: 9344)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !500, file: !44, line: 624, baseType: !841, size: 64, offset: 256)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !500, file: !44, line: 631, baseType: !187, size: 64, offset: 320)
!2894 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !44, line: 639, baseType: !2895, size: 32, offset: 384)
!2895 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !44, line: 639, size: 32, elements: !2896)
!2896 = !{!2897, !2899}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2895, file: !44, line: 640, baseType: !2898, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2895, file: !44, line: 641, baseType: !7, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !500, file: !44, line: 643, baseType: !583, size: 32, offset: 416)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !500, file: !44, line: 644, baseType: !601, size: 64, offset: 448)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !500, file: !44, line: 645, baseType: !604, size: 128, offset: 512)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !500, file: !44, line: 646, baseType: !604, size: 128, offset: 640)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !500, file: !44, line: 647, baseType: !604, size: 128, offset: 768)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !500, file: !44, line: 648, baseType: !263, offset: 896)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !500, file: !44, line: 649, baseType: !394, size: 16, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !500, file: !44, line: 650, baseType: !1437, size: 8, offset: 912)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !500, file: !44, line: 651, baseType: !1437, size: 8, offset: 920)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !500, file: !44, line: 652, baseType: !2661, size: 64, offset: 960)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !500, file: !44, line: 659, baseType: !187, size: 64, offset: 1024)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !500, file: !44, line: 660, baseType: !870, size: 256, offset: 1088)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !500, file: !44, line: 662, baseType: !187, size: 64, offset: 1344)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !500, file: !44, line: 663, baseType: !187, size: 64, offset: 1408)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !500, file: !44, line: 665, baseType: !710, size: 128, offset: 1472)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !500, file: !44, line: 666, baseType: !246, size: 128, offset: 1600)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !500, file: !44, line: 675, baseType: !246, size: 128, offset: 1728)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !500, file: !44, line: 676, baseType: !246, size: 128, offset: 1856)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !500, file: !44, line: 677, baseType: !246, size: 128, offset: 1984)
!2919 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !44, line: 678, baseType: !2920, size: 128, offset: 2112)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !44, line: 678, size: 128, elements: !2921)
!2921 = !{!2922, !2923}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2920, file: !44, line: 679, baseType: !706, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2920, file: !44, line: 680, baseType: !437, size: 128, align: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !500, file: !44, line: 682, baseType: !236, size: 64, offset: 2240)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !500, file: !44, line: 683, baseType: !236, size: 64, offset: 2304)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !500, file: !44, line: 684, baseType: !280, size: 32, offset: 2368)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !500, file: !44, line: 685, baseType: !280, size: 32, offset: 2400)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !500, file: !44, line: 686, baseType: !280, size: 32, offset: 2432)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !500, file: !44, line: 688, baseType: !280, size: 32, offset: 2464)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !44, line: 690, baseType: !2931, size: 64, offset: 2496)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !44, line: 690, size: 64, elements: !2932)
!2932 = !{!2933, !3155}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2931, file: !44, line: 691, baseType: !2934, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2937)
!2937 = !{!2938, !2939, !2943, !2947, !2951, !2952, !2953, !2957, !2970, !2971, !2979, !2983, !2984, !2988, !2989, !2993, !2998, !2999, !3003, !3007, !3115, !3119, !3120, !3124, !3125, !3129, !3133, !3138, !3142, !3146, !3150, !3154}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2936, file: !44, line: 1823, baseType: !701, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2936, file: !44, line: 1824, baseType: !2940, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!601, !429, !601, !220}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2936, file: !44, line: 1825, baseType: !2944, size: 64, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!384, !429, !353, !399, !803}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2936, file: !44, line: 1826, baseType: !2948, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!384, !429, !316, !399, !803}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2936, file: !44, line: 1827, baseType: !940, size: 64, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2936, file: !44, line: 1828, baseType: !940, size: 64, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2936, file: !44, line: 1829, baseType: !2954, size: 64, offset: 384)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!220, !943, !560}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2936, file: !44, line: 1830, baseType: !2958, size: 64, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!220, !429, !2961}
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2963)
!2963 = !{!2964, !2969}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2962, file: !44, line: 1777, baseType: !2965, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2966)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{!220, !2961, !316, !220, !601, !491, !7}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2962, file: !44, line: 1778, baseType: !601, size: 64, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2936, file: !44, line: 1831, baseType: !2958, size: 64, offset: 512)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2936, file: !44, line: 1832, baseType: !2972, size: 64, offset: 576)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!2975, !429, !2977}
!2975 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2976, line: 52, baseType: !7)
!2976 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !687, line: 27, flags: DIFlagFwdDecl)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2936, file: !44, line: 1833, baseType: !2980, size: 64, offset: 640)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!193, !429, !7, !187}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2936, file: !44, line: 1834, baseType: !2980, size: 64, offset: 704)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2936, file: !44, line: 1835, baseType: !2985, size: 64, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!220, !429, !1078}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2936, file: !44, line: 1836, baseType: !187, size: 64, offset: 832)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2936, file: !44, line: 1837, baseType: !2990, size: 64, offset: 896)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!220, !499, !429}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2936, file: !44, line: 1838, baseType: !2994, size: 64, offset: 960)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!220, !429, !2997}
!2997 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !185)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2936, file: !44, line: 1839, baseType: !2990, size: 64, offset: 1024)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2936, file: !44, line: 1840, baseType: !3000, size: 64, offset: 1088)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!220, !429, !601, !601, !220}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2936, file: !44, line: 1841, baseType: !3004, size: 64, offset: 1152)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!220, !220, !429, !220}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2936, file: !44, line: 1842, baseType: !3008, size: 64, offset: 1216)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DISubroutineType(types: !3010)
!3010 = !{!220, !429, !220, !3011}
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3045, !3046, !3047, !3060, !3091}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3012, file: !44, line: 1063, baseType: !3011, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3012, file: !44, line: 1064, baseType: !246, size: 128, offset: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3012, file: !44, line: 1065, baseType: !710, size: 128, offset: 192)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3012, file: !44, line: 1066, baseType: !246, size: 128, offset: 320)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3012, file: !44, line: 1069, baseType: !246, size: 128, offset: 448)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3012, file: !44, line: 1072, baseType: !2997, size: 64, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3012, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3012, file: !44, line: 1074, baseType: !497, size: 8, offset: 672)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3012, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3012, file: !44, line: 1076, baseType: !220, size: 32, offset: 736)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3012, file: !44, line: 1077, baseType: !1566, size: 128, offset: 768)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3012, file: !44, line: 1078, baseType: !429, size: 64, offset: 896)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3012, file: !44, line: 1079, baseType: !601, size: 64, offset: 960)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3012, file: !44, line: 1080, baseType: !601, size: 64, offset: 1024)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3012, file: !44, line: 1082, baseType: !3029, size: 64, offset: 1088)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3031)
!3031 = !{!3032, !3040, !3041, !3042, !3043, !3044}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3030, file: !44, line: 1315, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3034, line: 20, baseType: !3035)
!3034 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3034, line: 11, elements: !3036)
!3036 = !{!3037}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3035, file: !3034, line: 12, baseType: !3038)
!3038 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !275, line: 33, baseType: !3039)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !275, line: 31, elements: !277)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3030, file: !44, line: 1316, baseType: !220, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3030, file: !44, line: 1317, baseType: !220, size: 32, offset: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3030, file: !44, line: 1318, baseType: !3029, size: 64, offset: 64)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3030, file: !44, line: 1319, baseType: !429, size: 64, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3030, file: !44, line: 1320, baseType: !437, size: 128, align: 64, offset: 192)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3012, file: !44, line: 1084, baseType: !187, size: 64, offset: 1152)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3012, file: !44, line: 1085, baseType: !187, size: 64, offset: 1216)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3012, file: !44, line: 1087, baseType: !3048, size: 64, offset: 1280)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3050)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3051)
!3051 = !{!3052, !3056}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3050, file: !44, line: 1012, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{null, !3011, !3011}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3050, file: !44, line: 1013, baseType: !3057, size: 64, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{null, !3011}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3012, file: !44, line: 1088, baseType: !3061, size: 64, offset: 1344)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3064)
!3064 = !{!3065, !3069, !3073, !3074, !3078, !3082, !3086, !3090}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3063, file: !44, line: 1017, baseType: !3066, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!2997, !2997}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3063, file: !44, line: 1018, baseType: !3070, size: 64, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !2997}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3063, file: !44, line: 1019, baseType: !3057, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3063, file: !44, line: 1020, baseType: !3075, size: 64, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!220, !3011, !220}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3063, file: !44, line: 1021, baseType: !3079, size: 64, offset: 256)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!560, !3011}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3063, file: !44, line: 1022, baseType: !3083, size: 64, offset: 320)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{!220, !3011, !220, !249}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3063, file: !44, line: 1023, baseType: !3087, size: 64, offset: 384)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DISubroutineType(types: !3089)
!3089 = !{null, !3011, !917}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3063, file: !44, line: 1024, baseType: !3079, size: 64, offset: 448)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3012, file: !44, line: 1097, baseType: !3092, size: 256, offset: 1408)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3012, file: !44, line: 1089, size: 256, elements: !3093)
!3093 = !{!3094, !3103, !3109}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3092, file: !44, line: 1090, baseType: !3095, size: 256)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3096, line: 10, size: 256, elements: !3097)
!3096 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3097 = !{!3098, !3099, !3102}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3095, file: !3096, line: 11, baseType: !487, size: 32)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3095, file: !3096, line: 12, baseType: !3100, size: 64, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3096, line: 5, flags: DIFlagFwdDecl)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3095, file: !3096, line: 13, baseType: !246, size: 128, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3092, file: !44, line: 1091, baseType: !3104, size: 64)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3096, line: 17, size: 64, elements: !3105)
!3105 = !{!3106}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3104, file: !3096, line: 18, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3096, line: 16, flags: DIFlagFwdDecl)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3092, file: !44, line: 1096, baseType: !3110, size: 192)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3092, file: !44, line: 1092, size: 192, elements: !3111)
!3111 = !{!3112, !3113, !3114}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3110, file: !44, line: 1093, baseType: !246, size: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3110, file: !44, line: 1094, baseType: !220, size: 32, offset: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3110, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2936, file: !44, line: 1843, baseType: !3116, size: 64, offset: 1280)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!384, !429, !828, !220, !399, !803, !220}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2936, file: !44, line: 1844, baseType: !1198, size: 64, offset: 1344)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2936, file: !44, line: 1845, baseType: !3121, size: 64, offset: 1408)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!220, !220}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2936, file: !44, line: 1846, baseType: !3008, size: 64, offset: 1472)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2936, file: !44, line: 1847, baseType: !3126, size: 64, offset: 1536)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!384, !2172, !429, !803, !399, !7}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2936, file: !44, line: 1848, baseType: !3130, size: 64, offset: 1600)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!384, !429, !803, !2172, !399, !7}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2936, file: !44, line: 1849, baseType: !3134, size: 64, offset: 1664)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!220, !429, !193, !3137, !917}
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2936, file: !44, line: 1850, baseType: !3139, size: 64, offset: 1728)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!193, !429, !220, !601, !601}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2936, file: !44, line: 1852, baseType: !3143, size: 64, offset: 1792)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{null, !782, !429}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2936, file: !44, line: 1856, baseType: !3147, size: 64, offset: 1856)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{!384, !429, !601, !429, !601, !399, !7}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2936, file: !44, line: 1858, baseType: !3151, size: 64, offset: 1920)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!601, !429, !601, !429, !601, !601, !7}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2936, file: !44, line: 1861, baseType: !3000, size: 64, offset: 1984)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2931, file: !44, line: 692, baseType: !735, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !500, file: !44, line: 694, baseType: !3157, size: 64, offset: 2560)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3158, file: !44, line: 1101, baseType: !263)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3158, file: !44, line: 1102, baseType: !246, size: 128)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3158, file: !44, line: 1103, baseType: !246, size: 128, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3158, file: !44, line: 1104, baseType: !246, size: 128, offset: 256)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !500, file: !44, line: 695, baseType: !842, size: 1216, align: 64, offset: 2624)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !500, file: !44, line: 696, baseType: !246, size: 128, offset: 3840)
!3166 = !DIDerivedType(tag: DW_TAG_member, scope: !500, file: !44, line: 697, baseType: !3167, size: 64, offset: 3968)
!3167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !500, file: !44, line: 697, size: 64, elements: !3168)
!3168 = !{!3169, !3170, !3171, !3182, !3183}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3167, file: !44, line: 698, baseType: !2172, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3167, file: !44, line: 699, baseType: !2686, size: 64)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3167, file: !44, line: 700, baseType: !3172, size: 64)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3174, line: 14, size: 832, elements: !3175)
!3174 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3175 = !{!3176, !3177, !3178, !3179, !3180, !3181}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3173, file: !3174, line: 15, baseType: !312, size: 512)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3173, file: !3174, line: 16, baseType: !701, size: 64, offset: 512)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3173, file: !3174, line: 17, baseType: !2934, size: 64, offset: 576)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3173, file: !3174, line: 18, baseType: !246, size: 128, offset: 640)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3173, file: !3174, line: 19, baseType: !583, size: 32, offset: 768)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3173, file: !3174, line: 20, baseType: !7, size: 32, offset: 800)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3167, file: !44, line: 701, baseType: !353, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3167, file: !44, line: 702, baseType: !7, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !500, file: !44, line: 705, baseType: !488, size: 32, offset: 4032)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !500, file: !44, line: 708, baseType: !488, size: 32, offset: 4064)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !500, file: !44, line: 709, baseType: !2768, size: 64, offset: 4096)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !500, file: !44, line: 720, baseType: !185, size: 64, offset: 4160)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !455, file: !452, line: 98, baseType: !3189, size: 256, offset: 448)
!3189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 256, elements: !2304)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !455, file: !452, line: 101, baseType: !3191, size: 32, offset: 704)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3192, line: 25, size: 32, elements: !3193)
!3192 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3193 = !{!3194}
!3194 = !DIDerivedType(tag: DW_TAG_member, scope: !3191, file: !3192, line: 26, baseType: !3195, size: 32)
!3195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3191, file: !3192, line: 26, size: 32, elements: !3196)
!3196 = !{!3197}
!3197 = !DIDerivedType(tag: DW_TAG_member, scope: !3195, file: !3192, line: 30, baseType: !3198, size: 32)
!3198 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3195, file: !3192, line: 30, size: 32, elements: !3199)
!3199 = !{!3200, !3201}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3198, file: !3192, line: 31, baseType: !263)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3198, file: !3192, line: 32, baseType: !220, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !455, file: !452, line: 102, baseType: !2785, size: 64, offset: 768)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !455, file: !452, line: 103, baseType: !667, size: 64, offset: 832)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !455, file: !452, line: 104, baseType: !187, size: 64, offset: 896)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !455, file: !452, line: 105, baseType: !185, size: 64, offset: 960)
!3206 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 107, baseType: !3207, size: 128, offset: 1024)
!3207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 107, size: 128, elements: !3208)
!3208 = !{!3209, !3210}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3207, file: !452, line: 108, baseType: !246, size: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3207, file: !452, line: 109, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !455, file: !452, line: 111, baseType: !246, size: 128, offset: 1152)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !455, file: !452, line: 112, baseType: !246, size: 128, offset: 1280)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !455, file: !452, line: 120, baseType: !3215, size: 128, offset: 1408)
!3215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 116, size: 128, elements: !3216)
!3216 = !{!3217, !3218, !3219}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3215, file: !452, line: 117, baseType: !710, size: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3215, file: !452, line: 118, baseType: !469, size: 128)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3215, file: !452, line: 119, baseType: !437, size: 128, align: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !430, file: !44, line: 922, baseType: !499, size: 64, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !430, file: !44, line: 923, baseType: !2934, size: 64, offset: 320)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !430, file: !44, line: 929, baseType: !263, offset: 384)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !430, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !430, file: !44, line: 931, baseType: !234, size: 64, offset: 448)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !430, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !430, file: !44, line: 933, baseType: !2781, size: 32, offset: 544)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !430, file: !44, line: 934, baseType: !258, size: 192, offset: 576)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !430, file: !44, line: 935, baseType: !601, size: 64, offset: 768)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !430, file: !44, line: 936, baseType: !3230, size: 192, offset: 832)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3231)
!3231 = !{!3232, !3233, !3234, !3235, !3236, !3237}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3230, file: !44, line: 886, baseType: !3033)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3230, file: !44, line: 887, baseType: !1556, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3230, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3230, file: !44, line: 889, baseType: !505, size: 32, offset: 96)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3230, file: !44, line: 889, baseType: !505, size: 32, offset: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3230, file: !44, line: 890, baseType: !220, size: 32, offset: 160)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !430, file: !44, line: 937, baseType: !1632, size: 64, offset: 1024)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !430, file: !44, line: 938, baseType: !3240, size: 256, offset: 1088)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246, !3247}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3240, file: !44, line: 897, baseType: !187, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3240, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3240, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3240, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3240, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3240, file: !44, line: 904, baseType: !601, size: 64, offset: 192)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !430, file: !44, line: 940, baseType: !491, size: 64, offset: 1344)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !430, file: !44, line: 945, baseType: !185, size: 64, offset: 1408)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !430, file: !44, line: 949, baseType: !246, size: 128, offset: 1472)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !430, file: !44, line: 950, baseType: !246, size: 128, offset: 1600)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !430, file: !44, line: 952, baseType: !841, size: 64, offset: 1728)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !430, file: !44, line: 953, baseType: !1005, size: 32, offset: 1792)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !430, file: !44, line: 954, baseType: !1005, size: 32, offset: 1824)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !420, file: !378, line: 174, baseType: !426, size: 64, offset: 320)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !420, file: !378, line: 176, baseType: !3257, size: 64, offset: 384)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!220, !429, !320, !419, !1078}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !408, file: !378, line: 90, baseType: !403, size: 64, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !408, file: !378, line: 91, baseType: !3262, size: 64, offset: 256)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !368, file: !313, line: 143, baseType: !3264, size: 64, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!3267, !320}
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3269)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3270)
!3270 = !{!3271, !3272, !3276, !3280, !3286, !3290}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3269, file: !61, line: 40, baseType: !60, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3269, file: !61, line: 41, baseType: !3273, size: 64, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!560}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3269, file: !61, line: 42, baseType: !3277, size: 64, offset: 128)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!185}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3269, file: !61, line: 43, baseType: !3281, size: 64, offset: 192)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!2201, !3284}
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3269, file: !61, line: 44, baseType: !3287, size: 64, offset: 256)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!2201}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3269, file: !61, line: 45, baseType: !538, size: 64, offset: 320)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !368, file: !313, line: 144, baseType: !3292, size: 64, offset: 320)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!2201, !320}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !368, file: !313, line: 145, baseType: !3296, size: 64, offset: 384)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{null, !320, !3299, !3300}
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !312, file: !313, line: 70, baseType: !3302, size: 64, offset: 384)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !687, line: 123, size: 1024, elements: !3304)
!3304 = !{!3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3421, !3422, !3423, !3424, !3425}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3303, file: !687, line: 124, baseType: !280, size: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3303, file: !687, line: 125, baseType: !280, size: 32, offset: 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3303, file: !687, line: 135, baseType: !3302, size: 64, offset: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3303, file: !687, line: 136, baseType: !316, size: 64, offset: 128)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3303, file: !687, line: 138, baseType: !863, size: 192, align: 64, offset: 192)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3303, file: !687, line: 140, baseType: !2201, size: 64, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3303, file: !687, line: 141, baseType: !7, size: 32, offset: 448)
!3312 = !DIDerivedType(tag: DW_TAG_member, scope: !3303, file: !687, line: 142, baseType: !3313, size: 256, offset: 512)
!3313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3303, file: !687, line: 142, size: 256, elements: !3314)
!3314 = !{!3315, !3361, !3365}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3313, file: !687, line: 143, baseType: !3316, size: 192)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !687, line: 91, size: 192, elements: !3317)
!3317 = !{!3318, !3319, !3320}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3316, file: !687, line: 92, baseType: !187, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3316, file: !687, line: 94, baseType: !859, size: 64, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3316, file: !687, line: 100, baseType: !3321, size: 64, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !687, line: 180, size: 704, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3333, !3334, !3335, !3359, !3360}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3322, file: !687, line: 182, baseType: !3302, size: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3322, file: !687, line: 183, baseType: !7, size: 32, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3322, file: !687, line: 186, baseType: !3327, size: 192, offset: 128)
!3327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3328, line: 19, size: 192, elements: !3329)
!3328 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3329 = !{!3330, !3331, !3332}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3327, file: !3328, line: 20, baseType: !846, size: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3327, file: !3328, line: 21, baseType: !7, size: 32, offset: 128)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3327, file: !3328, line: 22, baseType: !7, size: 32, offset: 160)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3322, file: !687, line: 187, baseType: !487, size: 32, offset: 320)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3322, file: !687, line: 188, baseType: !487, size: 32, offset: 352)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3322, file: !687, line: 189, baseType: !3336, size: 64, offset: 384)
!3336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !687, line: 168, size: 320, elements: !3338)
!3338 = !{!3339, !3343, !3347, !3351, !3355}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3337, file: !687, line: 169, baseType: !3340, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!220, !782, !3321}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3337, file: !687, line: 171, baseType: !3344, size: 64, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!220, !3302, !316, !393}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3337, file: !687, line: 173, baseType: !3348, size: 64, offset: 128)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!220, !3302}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3337, file: !687, line: 174, baseType: !3352, size: 64, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!220, !3302, !3302, !316}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3337, file: !687, line: 176, baseType: !3356, size: 64, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = !DISubroutineType(types: !3358)
!3358 = !{!220, !782, !3302, !3321}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3322, file: !687, line: 192, baseType: !246, size: 128, offset: 448)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3322, file: !687, line: 194, baseType: !1566, size: 128, offset: 576)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3313, file: !687, line: 144, baseType: !3362, size: 64)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !687, line: 103, size: 64, elements: !3363)
!3363 = !{!3364}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3362, file: !687, line: 104, baseType: !3302, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3313, file: !687, line: 145, baseType: !3366, size: 256)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !687, line: 107, size: 256, elements: !3367)
!3367 = !{!3368, !3416, !3419, !3420}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3366, file: !687, line: 108, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3371)
!3371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !687, line: 217, size: 768, elements: !3372)
!3372 = !{!3373, !3393, !3397, !3398, !3399, !3400, !3401, !3405, !3406, !3407, !3408, !3412}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3371, file: !687, line: 222, baseType: !3374, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = !DISubroutineType(types: !3376)
!3376 = !{!220, !3377}
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !687, line: 197, size: 1088, elements: !3379)
!3379 = !{!3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3378, file: !687, line: 199, baseType: !3302, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3378, file: !687, line: 200, baseType: !429, size: 64, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3378, file: !687, line: 201, baseType: !782, size: 64, offset: 128)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3378, file: !687, line: 202, baseType: !185, size: 64, offset: 192)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3378, file: !687, line: 205, baseType: !258, size: 192, offset: 256)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3378, file: !687, line: 206, baseType: !258, size: 192, offset: 448)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3378, file: !687, line: 207, baseType: !220, size: 32, offset: 640)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3378, file: !687, line: 208, baseType: !246, size: 128, offset: 704)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3378, file: !687, line: 209, baseType: !353, size: 64, offset: 832)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3378, file: !687, line: 211, baseType: !399, size: 64, offset: 896)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3378, file: !687, line: 212, baseType: !560, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3378, file: !687, line: 213, baseType: !560, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3378, file: !687, line: 214, baseType: !1106, size: 64, offset: 1024)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3371, file: !687, line: 223, baseType: !3394, size: 64, offset: 64)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !3377}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3371, file: !687, line: 236, baseType: !813, size: 64, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3371, file: !687, line: 238, baseType: !800, size: 64, offset: 192)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3371, file: !687, line: 239, baseType: !809, size: 64, offset: 256)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3371, file: !687, line: 240, baseType: !805, size: 64, offset: 320)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3371, file: !687, line: 242, baseType: !3402, size: 64, offset: 384)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!384, !3377, !353, !399, !601}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3371, file: !687, line: 252, baseType: !399, size: 64, offset: 448)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3371, file: !687, line: 259, baseType: !560, size: 8, offset: 512)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3371, file: !687, line: 260, baseType: !3402, size: 64, offset: 576)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3371, file: !687, line: 263, baseType: !3409, size: 64, offset: 640)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!2975, !3377, !2977}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3371, file: !687, line: 266, baseType: !3413, size: 64, offset: 704)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!220, !3377, !1078}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3366, file: !687, line: 109, baseType: !3417, size: 64, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !687, line: 31, flags: DIFlagFwdDecl)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3366, file: !687, line: 110, baseType: !601, size: 64, offset: 128)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3366, file: !687, line: 111, baseType: !3302, size: 64, offset: 192)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3303, file: !687, line: 148, baseType: !185, size: 64, offset: 768)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3303, file: !687, line: 154, baseType: !491, size: 64, offset: 832)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3303, file: !687, line: 156, baseType: !394, size: 16, offset: 896)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3303, file: !687, line: 157, baseType: !393, size: 16, offset: 912)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3303, file: !687, line: 158, baseType: !3426, size: 64, offset: 960)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !687, line: 32, flags: DIFlagFwdDecl)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !312, file: !313, line: 71, baseType: !298, size: 32, offset: 448)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !312, file: !313, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !312, file: !313, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !312, file: !313, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !312, file: !313, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !312, file: !313, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !309, file: !73, line: 463, baseType: !308, size: 64, offset: 512)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !309, file: !73, line: 465, baseType: !3436, size: 64, offset: 576)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !309, file: !73, line: 467, baseType: !316, size: 64, offset: 640)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !309, file: !73, line: 468, baseType: !3440, size: 64, offset: 704)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3442)
!3442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3443)
!3443 = !{!3444, !3445, !3446, !3450, !3455, !3459}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3442, file: !73, line: 88, baseType: !316, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3442, file: !73, line: 89, baseType: !405, size: 64, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3442, file: !73, line: 90, baseType: !3447, size: 64, offset: 128)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!220, !308, !348}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3442, file: !73, line: 91, baseType: !3451, size: 64, offset: 192)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!353, !308, !3454, !3299, !3300}
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3442, file: !73, line: 93, baseType: !3456, size: 64, offset: 256)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !308}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3442, file: !73, line: 95, baseType: !3460, size: 64, offset: 320)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3462)
!3462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3463)
!3463 = !{!3464, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3462, file: !80, line: 279, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{!220, !308}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3462, file: !80, line: 280, baseType: !3456, size: 64, offset: 64)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3462, file: !80, line: 281, baseType: !3465, size: 64, offset: 128)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3462, file: !80, line: 282, baseType: !3465, size: 64, offset: 192)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3462, file: !80, line: 283, baseType: !3465, size: 64, offset: 256)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3462, file: !80, line: 284, baseType: !3465, size: 64, offset: 320)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3462, file: !80, line: 285, baseType: !3465, size: 64, offset: 384)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3462, file: !80, line: 286, baseType: !3465, size: 64, offset: 448)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3462, file: !80, line: 287, baseType: !3465, size: 64, offset: 512)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3462, file: !80, line: 288, baseType: !3465, size: 64, offset: 576)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3462, file: !80, line: 289, baseType: !3465, size: 64, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3462, file: !80, line: 290, baseType: !3465, size: 64, offset: 704)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3462, file: !80, line: 291, baseType: !3465, size: 64, offset: 768)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3462, file: !80, line: 292, baseType: !3465, size: 64, offset: 832)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3462, file: !80, line: 293, baseType: !3465, size: 64, offset: 896)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3462, file: !80, line: 294, baseType: !3465, size: 64, offset: 960)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3462, file: !80, line: 295, baseType: !3465, size: 64, offset: 1024)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3462, file: !80, line: 296, baseType: !3465, size: 64, offset: 1088)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3462, file: !80, line: 297, baseType: !3465, size: 64, offset: 1152)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3462, file: !80, line: 298, baseType: !3465, size: 64, offset: 1216)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3462, file: !80, line: 299, baseType: !3465, size: 64, offset: 1280)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3462, file: !80, line: 300, baseType: !3465, size: 64, offset: 1344)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3462, file: !80, line: 301, baseType: !3465, size: 64, offset: 1408)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !309, file: !73, line: 470, baseType: !3491, size: 64, offset: 768)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3493, line: 82, size: 1408, elements: !3494)
!3493 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3494 = !{!3495, !3496, !3497, !3498, !3499, !3500, !3501, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3576, !3579, !3580}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3492, file: !3493, line: 83, baseType: !316, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3492, file: !3493, line: 84, baseType: !316, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3492, file: !3493, line: 85, baseType: !308, size: 64, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3492, file: !3493, line: 86, baseType: !405, size: 64, offset: 192)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3492, file: !3493, line: 87, baseType: !405, size: 64, offset: 256)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3492, file: !3493, line: 88, baseType: !405, size: 64, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3492, file: !3493, line: 90, baseType: !3502, size: 64, offset: 384)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!220, !308, !3505}
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511, !3512, !3513, !3514, !3527, !3540, !3541, !3542, !3543, !3544, !3552, !3553, !3554, !3555, !3556, !3557}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3506, file: !67, line: 96, baseType: !316, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3506, file: !67, line: 97, baseType: !3491, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3506, file: !67, line: 99, baseType: !701, size: 64, offset: 128)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3506, file: !67, line: 100, baseType: !316, size: 64, offset: 192)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3506, file: !67, line: 102, baseType: !560, size: 8, offset: 256)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3506, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3506, file: !67, line: 105, baseType: !3515, size: 64, offset: 320)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3517)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3518, line: 262, size: 1600, elements: !3519)
!3518 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3519 = !{!3520, !3521, !3522, !3526}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3517, file: !3518, line: 263, baseType: !2771, size: 256)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3517, file: !3518, line: 264, baseType: !2771, size: 256, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3517, file: !3518, line: 265, baseType: !3523, size: 1024, offset: 512)
!3523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 1024, elements: !3524)
!3524 = !{!3525}
!3525 = !DISubrange(count: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3517, file: !3518, line: 266, baseType: !2201, size: 64, offset: 1536)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3506, file: !67, line: 106, baseType: !3528, size: 64, offset: 384)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3530)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3518, line: 210, size: 256, elements: !3531)
!3531 = !{!3532, !3536, !3538, !3539}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3530, file: !3518, line: 211, baseType: !3533, size: 72)
!3533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1438, size: 72, elements: !3534)
!3534 = !{!3535}
!3535 = !DISubrange(count: 9)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3530, file: !3518, line: 212, baseType: !3537, size: 64, offset: 128)
!3537 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3518, line: 14, baseType: !187)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3530, file: !3518, line: 213, baseType: !488, size: 32, offset: 192)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3530, file: !3518, line: 214, baseType: !488, size: 32, offset: 224)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3506, file: !67, line: 108, baseType: !3465, size: 64, offset: 448)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3506, file: !67, line: 109, baseType: !3456, size: 64, offset: 512)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3506, file: !67, line: 110, baseType: !3465, size: 64, offset: 576)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3506, file: !67, line: 111, baseType: !3456, size: 64, offset: 640)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3506, file: !67, line: 112, baseType: !3545, size: 64, offset: 704)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!220, !308, !3548}
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3549)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3550)
!3550 = !{!3551}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3549, file: !80, line: 51, baseType: !220, size: 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3506, file: !67, line: 113, baseType: !3465, size: 64, offset: 768)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3506, file: !67, line: 114, baseType: !405, size: 64, offset: 832)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3506, file: !67, line: 115, baseType: !405, size: 64, offset: 896)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3506, file: !67, line: 117, baseType: !3460, size: 64, offset: 960)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3506, file: !67, line: 118, baseType: !3456, size: 64, offset: 1024)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3506, file: !67, line: 120, baseType: !3558, size: 64, offset: 1088)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3492, file: !3493, line: 91, baseType: !3447, size: 64, offset: 448)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3492, file: !3493, line: 92, baseType: !3465, size: 64, offset: 512)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3492, file: !3493, line: 93, baseType: !3456, size: 64, offset: 576)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3492, file: !3493, line: 94, baseType: !3465, size: 64, offset: 640)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3492, file: !3493, line: 95, baseType: !3456, size: 64, offset: 704)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3492, file: !3493, line: 97, baseType: !3465, size: 64, offset: 768)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3492, file: !3493, line: 98, baseType: !3465, size: 64, offset: 832)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3492, file: !3493, line: 100, baseType: !3545, size: 64, offset: 896)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3492, file: !3493, line: 101, baseType: !3465, size: 64, offset: 960)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3492, file: !3493, line: 103, baseType: !3465, size: 64, offset: 1024)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3492, file: !3493, line: 105, baseType: !3465, size: 64, offset: 1088)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3492, file: !3493, line: 107, baseType: !3460, size: 64, offset: 1152)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3492, file: !3493, line: 109, baseType: !3573, size: 64, offset: 1216)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3575)
!3575 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3493, line: 109, flags: DIFlagFwdDecl)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3492, file: !3493, line: 111, baseType: !3577, size: 64, offset: 1280)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3493, line: 111, flags: DIFlagFwdDecl)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3492, file: !3493, line: 112, baseType: !716, offset: 1344)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3492, file: !3493, line: 114, baseType: !560, size: 8, offset: 1344)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !309, file: !73, line: 471, baseType: !3505, size: 64, offset: 832)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !309, file: !73, line: 473, baseType: !185, size: 64, offset: 896)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !309, file: !73, line: 475, baseType: !185, size: 64, offset: 960)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !309, file: !73, line: 480, baseType: !258, size: 192, offset: 1024)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !309, file: !73, line: 484, baseType: !3586, size: 576, offset: 1216)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3587)
!3587 = !{!3588, !3589, !3590, !3591, !3592, !3593}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3586, file: !73, line: 362, baseType: !246, size: 128)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3586, file: !73, line: 363, baseType: !246, size: 128, offset: 128)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3586, file: !73, line: 364, baseType: !246, size: 128, offset: 256)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3586, file: !73, line: 365, baseType: !246, size: 128, offset: 384)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3586, file: !73, line: 366, baseType: !560, size: 8, offset: 512)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3586, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !309, file: !73, line: 485, baseType: !3595, size: 2304, offset: 1792)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3596)
!3596 = !{!3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3692, !3696}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3595, file: !80, line: 566, baseType: !3548, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3595, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3595, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3595, file: !80, line: 569, baseType: !560, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3595, file: !80, line: 570, baseType: !560, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3595, file: !80, line: 571, baseType: !560, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3595, file: !80, line: 572, baseType: !560, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3595, file: !80, line: 573, baseType: !560, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3595, file: !80, line: 574, baseType: !560, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3595, file: !80, line: 575, baseType: !560, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3595, file: !80, line: 576, baseType: !560, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3595, file: !80, line: 577, baseType: !487, size: 32, offset: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3595, file: !80, line: 578, baseType: !263, offset: 96)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3595, file: !80, line: 580, baseType: !246, size: 128, offset: 128)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3595, file: !80, line: 581, baseType: !1587, size: 192, offset: 256)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3595, file: !80, line: 582, baseType: !3613, size: 64, offset: 448)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3615, line: 43, size: 1472, elements: !3616)
!3615 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3616 = !{!3617, !3618, !3619, !3620, !3621, !3624, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3614, file: !3615, line: 44, baseType: !316, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3614, file: !3615, line: 45, baseType: !220, size: 32, offset: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3614, file: !3615, line: 46, baseType: !246, size: 128, offset: 128)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3614, file: !3615, line: 47, baseType: !263, offset: 256)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3614, file: !3615, line: 48, baseType: !3622, size: 64, offset: 256)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3614, file: !3615, line: 49, baseType: !3625, size: 320, offset: 320)
!3625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3626, line: 11, size: 320, elements: !3627)
!3626 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3627 = !{!3628, !3629, !3630, !3635}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3625, file: !3626, line: 16, baseType: !710, size: 128)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3625, file: !3626, line: 17, baseType: !187, size: 64, offset: 128)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3625, file: !3626, line: 18, baseType: !3631, size: 64, offset: 192)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{null, !3634}
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3625, file: !3626, line: 19, baseType: !487, size: 32, offset: 256)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3614, file: !3615, line: 50, baseType: !187, size: 64, offset: 640)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3614, file: !3615, line: 51, baseType: !1385, size: 64, offset: 704)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3614, file: !3615, line: 52, baseType: !1385, size: 64, offset: 768)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3614, file: !3615, line: 53, baseType: !1385, size: 64, offset: 832)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3614, file: !3615, line: 54, baseType: !1385, size: 64, offset: 896)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3614, file: !3615, line: 55, baseType: !1385, size: 64, offset: 960)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3614, file: !3615, line: 56, baseType: !187, size: 64, offset: 1024)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3614, file: !3615, line: 57, baseType: !187, size: 64, offset: 1088)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3614, file: !3615, line: 58, baseType: !187, size: 64, offset: 1152)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3614, file: !3615, line: 59, baseType: !187, size: 64, offset: 1216)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3614, file: !3615, line: 60, baseType: !187, size: 64, offset: 1280)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3614, file: !3615, line: 61, baseType: !308, size: 64, offset: 1344)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3614, file: !3615, line: 62, baseType: !560, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3614, file: !3615, line: 63, baseType: !560, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3595, file: !80, line: 583, baseType: !560, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3595, file: !80, line: 584, baseType: !560, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3595, file: !80, line: 585, baseType: !560, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3595, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3595, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3595, file: !80, line: 592, baseType: !1377, size: 512, offset: 576)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3595, file: !80, line: 593, baseType: !491, size: 64, offset: 1088)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3595, file: !80, line: 594, baseType: !230, size: 256, offset: 1152)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3595, file: !80, line: 595, baseType: !1566, size: 128, offset: 1408)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3595, file: !80, line: 596, baseType: !3622, size: 64, offset: 1536)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3595, file: !80, line: 597, baseType: !280, size: 32, offset: 1600)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3595, file: !80, line: 598, baseType: !280, size: 32, offset: 1632)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3595, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3595, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3595, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3595, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3595, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3595, file: !80, line: 604, baseType: !560, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3595, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3595, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3595, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3595, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3595, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3595, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3595, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3595, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3595, file: !80, line: 613, baseType: !220, size: 32, offset: 1792)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3595, file: !80, line: 614, baseType: !220, size: 32, offset: 1824)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3595, file: !80, line: 615, baseType: !491, size: 64, offset: 1856)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3595, file: !80, line: 616, baseType: !491, size: 64, offset: 1920)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3595, file: !80, line: 617, baseType: !491, size: 64, offset: 1984)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3595, file: !80, line: 618, baseType: !491, size: 64, offset: 2048)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3595, file: !80, line: 620, baseType: !3683, size: 64, offset: 2112)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3685)
!3685 = !{!3686, !3687, !3688, !3689}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3684, file: !80, line: 537, baseType: !263)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3684, file: !80, line: 538, baseType: !7, size: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3684, file: !80, line: 540, baseType: !246, size: 128, offset: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3684, file: !80, line: 543, baseType: !3690, size: 64, offset: 192)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3595, file: !80, line: 621, baseType: !3693, size: 64, offset: 2176)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{null, !308, !1529}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3595, file: !80, line: 622, baseType: !3697, size: 64, offset: 2240)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !309, file: !73, line: 486, baseType: !3700, size: 64, offset: 4096)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3702)
!3702 = !{!3703, !3704, !3705, !3709, !3710, !3711}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3701, file: !80, line: 643, baseType: !3462, size: 1472)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3701, file: !80, line: 644, baseType: !3465, size: 64, offset: 1472)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3701, file: !80, line: 645, baseType: !3706, size: 64, offset: 1536)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !308, !560}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3701, file: !80, line: 646, baseType: !3465, size: 64, offset: 1600)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3701, file: !80, line: 647, baseType: !3456, size: 64, offset: 1664)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3701, file: !80, line: 648, baseType: !3456, size: 64, offset: 1728)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !309, file: !73, line: 493, baseType: !3713, size: 64, offset: 4160)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !309, file: !73, line: 499, baseType: !246, size: 128, offset: 4224)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !309, file: !73, line: 502, baseType: !3717, size: 64, offset: 4352)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3719)
!3719 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !309, file: !73, line: 504, baseType: !3721, size: 64, offset: 4416)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !309, file: !73, line: 505, baseType: !491, size: 64, offset: 4480)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !309, file: !73, line: 510, baseType: !491, size: 64, offset: 4544)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !309, file: !73, line: 511, baseType: !3725, size: 64, offset: 4608)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3727)
!3727 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !309, file: !73, line: 513, baseType: !3729, size: 64, offset: 4672)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3731)
!3731 = !{!3732, !3733}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3730, file: !73, line: 293, baseType: !7, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3730, file: !73, line: 294, baseType: !187, size: 64, offset: 64)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !309, file: !73, line: 515, baseType: !246, size: 128, offset: 4736)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !309, file: !73, line: 526, baseType: !3736, offset: 4864)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3737, line: 5, elements: !277)
!3737 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !309, file: !73, line: 528, baseType: !3739, size: 64, offset: 4864)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3741, line: 51, size: 1344, elements: !3742)
!3741 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3742 = !{!3743, !3744, !3746, !3747, !3837, !3846, !3847, !3848, !3849, !3850, !3851, !3852}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3740, file: !3741, line: 52, baseType: !316, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3740, file: !3741, line: 53, baseType: !3745, size: 32, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3741, line: 28, baseType: !487)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3740, file: !3741, line: 54, baseType: !316, size: 64, offset: 128)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3740, file: !3741, line: 55, baseType: !3748, size: 192, offset: 192)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3749, line: 17, size: 192, elements: !3750)
!3749 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3750 = !{!3751, !3753, !3836}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3748, file: !3749, line: 18, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3748, file: !3749, line: 19, baseType: !3754, size: 64, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3756)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3749, line: 110, size: 1152, elements: !3757)
!3757 = !{!3758, !3762, !3766, !3772, !3778, !3782, !3786, !3791, !3795, !3796, !3800, !3804, !3808, !3819, !3820, !3821, !3822, !3832}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3756, file: !3749, line: 111, baseType: !3759, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!3752, !3752}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3756, file: !3749, line: 112, baseType: !3763, size: 64, offset: 64)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !3752}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3756, file: !3749, line: 113, baseType: !3767, size: 64, offset: 128)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!560, !3770}
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3748)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3756, file: !3749, line: 114, baseType: !3773, size: 64, offset: 192)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!2201, !3770, !3776}
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3756, file: !3749, line: 116, baseType: !3779, size: 64, offset: 256)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!560, !3770, !316}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3756, file: !3749, line: 118, baseType: !3783, size: 64, offset: 320)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!220, !3770, !316, !7, !185, !399}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3756, file: !3749, line: 123, baseType: !3787, size: 64, offset: 384)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!220, !3770, !316, !3790, !399}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3756, file: !3749, line: 126, baseType: !3792, size: 64, offset: 448)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!316, !3770}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3756, file: !3749, line: 127, baseType: !3792, size: 64, offset: 512)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3756, file: !3749, line: 128, baseType: !3797, size: 64, offset: 576)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!3752, !3770}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3756, file: !3749, line: 130, baseType: !3801, size: 64, offset: 640)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!3752, !3770, !3752}
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3756, file: !3749, line: 133, baseType: !3805, size: 64, offset: 704)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!3752, !3770, !316}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3756, file: !3749, line: 135, baseType: !3809, size: 64, offset: 768)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!220, !3770, !316, !316, !7, !7, !3812}
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3749, line: 43, size: 640, elements: !3814)
!3814 = !{!3815, !3816, !3817}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3813, file: !3749, line: 44, baseType: !3752, size: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3813, file: !3749, line: 45, baseType: !7, size: 32, offset: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3813, file: !3749, line: 46, baseType: !3818, size: 512, offset: 128)
!3818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 512, elements: !1415)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3756, file: !3749, line: 140, baseType: !3801, size: 64, offset: 832)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3756, file: !3749, line: 143, baseType: !3797, size: 64, offset: 896)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3756, file: !3749, line: 145, baseType: !3759, size: 64, offset: 960)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3756, file: !3749, line: 146, baseType: !3823, size: 64, offset: 1024)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!220, !3770, !3826}
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3749, line: 29, size: 128, elements: !3828)
!3828 = !{!3829, !3830, !3831}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3827, file: !3749, line: 30, baseType: !7, size: 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3827, file: !3749, line: 31, baseType: !7, size: 32, offset: 32)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3827, file: !3749, line: 32, baseType: !3770, size: 64, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3756, file: !3749, line: 148, baseType: !3833, size: 64, offset: 1088)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!220, !3770, !308}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3748, file: !3749, line: 20, baseType: !308, size: 64, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3740, file: !3741, line: 57, baseType: !3838, size: 64, offset: 384)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3741, line: 31, size: 704, elements: !3840)
!3840 = !{!3841, !3842, !3843, !3844, !3845}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3839, file: !3741, line: 32, baseType: !353, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3839, file: !3741, line: 33, baseType: !220, size: 32, offset: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3839, file: !3741, line: 34, baseType: !185, size: 64, offset: 128)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3839, file: !3741, line: 35, baseType: !3838, size: 64, offset: 192)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3839, file: !3741, line: 43, baseType: !420, size: 448, offset: 256)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3740, file: !3741, line: 58, baseType: !3838, size: 64, offset: 448)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3740, file: !3741, line: 59, baseType: !3739, size: 64, offset: 512)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3740, file: !3741, line: 60, baseType: !3739, size: 64, offset: 576)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3740, file: !3741, line: 61, baseType: !3739, size: 64, offset: 640)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3740, file: !3741, line: 63, baseType: !312, size: 512, offset: 704)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3740, file: !3741, line: 65, baseType: !187, size: 64, offset: 1216)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3740, file: !3741, line: 66, baseType: !185, size: 64, offset: 1280)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !309, file: !73, line: 529, baseType: !3752, size: 64, offset: 4928)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !309, file: !73, line: 534, baseType: !583, size: 32, offset: 4992)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !309, file: !73, line: 535, baseType: !487, size: 32, offset: 5024)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !309, file: !73, line: 537, baseType: !263, offset: 5056)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !309, file: !73, line: 538, baseType: !246, size: 128, offset: 5056)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !309, file: !73, line: 540, baseType: !3859, size: 64, offset: 5184)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3861, line: 54, size: 960, elements: !3862)
!3861 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3862 = !{!3863, !3864, !3865, !3866, !3867, !3868, !3869, !3873, !3877, !3878, !3879, !3880, !3884, !3888, !3889}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3860, file: !3861, line: 55, baseType: !316, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3860, file: !3861, line: 56, baseType: !701, size: 64, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3860, file: !3861, line: 58, baseType: !405, size: 64, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3860, file: !3861, line: 59, baseType: !405, size: 64, offset: 192)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3860, file: !3861, line: 60, baseType: !320, size: 64, offset: 256)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3860, file: !3861, line: 62, baseType: !3447, size: 64, offset: 320)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3860, file: !3861, line: 63, baseType: !3870, size: 64, offset: 384)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!353, !308, !3454}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3860, file: !3861, line: 65, baseType: !3874, size: 64, offset: 448)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{null, !3859}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3860, file: !3861, line: 66, baseType: !3456, size: 64, offset: 512)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3860, file: !3861, line: 68, baseType: !3465, size: 64, offset: 576)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3860, file: !3861, line: 70, baseType: !3267, size: 64, offset: 640)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3860, file: !3861, line: 71, baseType: !3881, size: 64, offset: 704)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!2201, !308}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3860, file: !3861, line: 73, baseType: !3885, size: 64, offset: 768)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{null, !308, !3299, !3300}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3860, file: !3861, line: 75, baseType: !3460, size: 64, offset: 832)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3860, file: !3861, line: 77, baseType: !3577, size: 64, offset: 896)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !309, file: !73, line: 541, baseType: !405, size: 64, offset: 5248)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !309, file: !73, line: 543, baseType: !3456, size: 64, offset: 5312)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !309, file: !73, line: 544, baseType: !3893, size: 64, offset: 5376)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !309, file: !73, line: 545, baseType: !3896, size: 64, offset: 5440)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !309, file: !73, line: 547, baseType: !560, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !309, file: !73, line: 548, baseType: !560, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !309, file: !73, line: 549, baseType: !560, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !309, file: !73, line: 550, baseType: !560, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !294, file: !200, line: 289, baseType: !3903, size: 64, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !3905, line: 302, size: 1472, elements: !3906)
!3905 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!3906 = !{!3907, !3908, !3909, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3938, !3939, !3942, !3943, !3945, !3948, !3951, !3952, !4113}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3904, file: !3905, line: 303, baseType: !220, size: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3904, file: !3905, line: 304, baseType: !298, size: 32, offset: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !3904, file: !3905, line: 305, baseType: !3910, size: 64, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3904, file: !3905, line: 306, baseType: !701, size: 64, offset: 128)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3904, file: !3905, line: 307, baseType: !316, size: 64, offset: 192)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3904, file: !3905, line: 308, baseType: !316, size: 64, offset: 256)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !3904, file: !3905, line: 309, baseType: !220, size: 32, offset: 320)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3904, file: !3905, line: 310, baseType: !220, size: 32, offset: 352)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !3904, file: !3905, line: 311, baseType: !220, size: 32, offset: 384)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3904, file: !3905, line: 312, baseType: !7, size: 32, offset: 416)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3904, file: !3905, line: 313, baseType: !1296, size: 16, offset: 448)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3904, file: !3905, line: 314, baseType: !1296, size: 16, offset: 464)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !3904, file: !3905, line: 315, baseType: !3921, size: 352, offset: 480)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !3922, line: 32, size: 352, elements: !3923)
!3922 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!3923 = !{!3924, !3926, !3927, !3928, !3929, !3931, !3935, !3937}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3921, file: !3922, line: 33, baseType: !3925, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3922, line: 9, baseType: !7)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3921, file: !3922, line: 34, baseType: !3925, size: 32, offset: 32)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3921, file: !3922, line: 35, baseType: !3925, size: 32, offset: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3921, file: !3922, line: 36, baseType: !3925, size: 32, offset: 96)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3921, file: !3922, line: 37, baseType: !3930, size: 8, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3922, line: 7, baseType: !497)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3921, file: !3922, line: 38, baseType: !3932, size: 152, offset: 136)
!3932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3930, size: 152, elements: !3933)
!3933 = !{!3934}
!3934 = !DISubrange(count: 19)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3921, file: !3922, line: 39, baseType: !3936, size: 32, offset: 288)
!3936 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3922, line: 8, baseType: !7)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3921, file: !3922, line: 40, baseType: !3936, size: 32, offset: 320)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3904, file: !3905, line: 316, baseType: !187, size: 64, offset: 832)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !3904, file: !3905, line: 317, baseType: !3940, size: 64, offset: 896)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3905, line: 317, flags: DIFlagFwdDecl)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3904, file: !3905, line: 318, baseType: !3903, size: 64, offset: 960)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !3904, file: !3905, line: 323, baseType: !3944, size: 64, offset: 1024)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3904, file: !3905, line: 324, baseType: !3946, size: 64, offset: 1088)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3904, file: !3905, line: 325, baseType: !3949, size: 64, offset: 1152)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !3904, file: !3905, line: 326, baseType: !185, size: 64, offset: 1216)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3904, file: !3905, line: 332, baseType: !3953, size: 64, offset: 1280)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3955)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !3905, line: 254, size: 2176, elements: !3956)
!3956 = !{!3957, !3961, !3965, !3969, !3973, !3977, !3981, !3982, !3986, !3990, !3991, !3995, !3996, !4000, !4004, !4008, !4009, !4010, !4011, !4012, !4013, !4017, !4018, !4019, !4023, !4027, !4028, !4032, !4044, !4059, !4080, !4107, !4108, !4112}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3955, file: !3905, line: 255, baseType: !3958, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DISubroutineType(types: !3960)
!3960 = !{!293, !3903, !429, !220}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3955, file: !3905, line: 257, baseType: !3962, size: 64, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!220, !3903, !293}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3955, file: !3905, line: 258, baseType: !3966, size: 64, offset: 128)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !3903, !293}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3955, file: !3905, line: 259, baseType: !3970, size: 64, offset: 192)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!220, !293, !429}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3955, file: !3905, line: 260, baseType: !3974, size: 64, offset: 256)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !293, !429}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3955, file: !3905, line: 261, baseType: !3978, size: 64, offset: 320)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{null, !293}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3955, file: !3905, line: 262, baseType: !3978, size: 64, offset: 384)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3955, file: !3905, line: 263, baseType: !3983, size: 64, offset: 448)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!220, !293, !495, !220}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3955, file: !3905, line: 265, baseType: !3987, size: 64, offset: 512)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!220, !293, !497}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3955, file: !3905, line: 266, baseType: !3978, size: 64, offset: 576)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3955, file: !3905, line: 267, baseType: !3992, size: 64, offset: 640)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{!220, !293}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3955, file: !3905, line: 268, baseType: !3992, size: 64, offset: 704)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3955, file: !3905, line: 269, baseType: !3997, size: 64, offset: 768)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!220, !293, !7, !187}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3955, file: !3905, line: 271, baseType: !4001, size: 64, offset: 832)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!193, !293, !7, !187}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3955, file: !3905, line: 273, baseType: !4005, size: 64, offset: 896)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{null, !293, !3950}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3955, file: !3905, line: 274, baseType: !3978, size: 64, offset: 960)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3955, file: !3905, line: 275, baseType: !3978, size: 64, offset: 1024)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3955, file: !3905, line: 276, baseType: !3978, size: 64, offset: 1088)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3955, file: !3905, line: 277, baseType: !3978, size: 64, offset: 1152)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3955, file: !3905, line: 278, baseType: !3978, size: 64, offset: 1216)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3955, file: !3905, line: 279, baseType: !4014, size: 64, offset: 1280)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!220, !293, !220}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3955, file: !3905, line: 280, baseType: !3978, size: 64, offset: 1344)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3955, file: !3905, line: 281, baseType: !3978, size: 64, offset: 1408)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3955, file: !3905, line: 282, baseType: !4020, size: 64, offset: 1472)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{null, !293, !220}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3955, file: !3905, line: 283, baseType: !4024, size: 64, offset: 1536)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{null, !293, !190}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3955, file: !3905, line: 284, baseType: !3992, size: 64, offset: 1600)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3955, file: !3905, line: 285, baseType: !4029, size: 64, offset: 1664)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!220, !293, !7, !7}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3955, file: !3905, line: 287, baseType: !4033, size: 64, offset: 1728)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!220, !293, !4036}
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4038, line: 15, size: 64, elements: !4039)
!4038 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4039 = !{!4040, !4041, !4042, !4043}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4037, file: !4038, line: 16, baseType: !394, size: 16)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4037, file: !4038, line: 17, baseType: !394, size: 16, offset: 16)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4037, file: !4038, line: 18, baseType: !394, size: 16, offset: 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4037, file: !4038, line: 19, baseType: !394, size: 16, offset: 48)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3955, file: !3905, line: 288, baseType: !4045, size: 64, offset: 1792)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!220, !293, !4048}
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4050, line: 10, size: 128, elements: !4051)
!4050 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4051 = !{!4052, !4053, !4054, !4058}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4049, file: !4050, line: 12, baseType: !956, size: 16)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4049, file: !4050, line: 13, baseType: !956, size: 16, offset: 16)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4049, file: !4050, line: 14, baseType: !4055, size: 80, offset: 32)
!4055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !956, size: 80, elements: !4056)
!4056 = !{!4057}
!4057 = !DISubrange(count: 5)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4049, file: !4050, line: 15, baseType: !956, size: 16, offset: 112)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3955, file: !3905, line: 289, baseType: !4060, size: 64, offset: 1856)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!220, !293, !4063}
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4065, line: 102, size: 640, elements: !4066)
!4065 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4064, file: !4065, line: 103, baseType: !220, size: 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4064, file: !4065, line: 103, baseType: !220, size: 32, offset: 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4064, file: !4065, line: 103, baseType: !220, size: 32, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4064, file: !4065, line: 103, baseType: !220, size: 32, offset: 96)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4064, file: !4065, line: 104, baseType: !220, size: 32, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4064, file: !4065, line: 104, baseType: !220, size: 32, offset: 160)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4064, file: !4065, line: 105, baseType: !220, size: 32, offset: 192)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4064, file: !4065, line: 105, baseType: !220, size: 32, offset: 224)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4064, file: !4065, line: 105, baseType: !220, size: 32, offset: 256)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4064, file: !4065, line: 105, baseType: !220, size: 32, offset: 288)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4064, file: !4065, line: 106, baseType: !220, size: 32, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4064, file: !4065, line: 107, baseType: !4079, size: 288, offset: 352)
!4079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 288, elements: !3534)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3955, file: !3905, line: 291, baseType: !4081, size: 64, offset: 1920)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!220, !293, !4084}
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4065, line: 19, size: 576, elements: !4086)
!4086 = !{!4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4099, !4100, !4101, !4102, !4104, !4105, !4106}
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4085, file: !4065, line: 20, baseType: !220, size: 32)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4085, file: !4065, line: 21, baseType: !220, size: 32, offset: 32)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4085, file: !4065, line: 22, baseType: !7, size: 32, offset: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4085, file: !4065, line: 23, baseType: !220, size: 32, offset: 96)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4085, file: !4065, line: 24, baseType: !220, size: 32, offset: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4085, file: !4065, line: 25, baseType: !220, size: 32, offset: 160)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4085, file: !4065, line: 26, baseType: !220, size: 32, offset: 192)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4085, file: !4065, line: 27, baseType: !220, size: 32, offset: 224)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4085, file: !4065, line: 28, baseType: !394, size: 16, offset: 256)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4085, file: !4065, line: 29, baseType: !190, size: 8, offset: 272)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4085, file: !4065, line: 30, baseType: !4098, size: 8, offset: 280)
!4098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 8, elements: !1456)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4085, file: !4065, line: 31, baseType: !220, size: 32, offset: 288)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4085, file: !4065, line: 32, baseType: !394, size: 16, offset: 320)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4085, file: !4065, line: 33, baseType: !394, size: 16, offset: 336)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4085, file: !4065, line: 34, baseType: !4103, size: 64, offset: 384)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4085, file: !4065, line: 35, baseType: !394, size: 16, offset: 448)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4085, file: !4065, line: 36, baseType: !7, size: 32, offset: 480)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4085, file: !4065, line: 37, baseType: !187, size: 64, offset: 512)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3955, file: !3905, line: 292, baseType: !4081, size: 64, offset: 1984)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3955, file: !3905, line: 293, baseType: !4109, size: 64, offset: 2048)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{null, !293, !782}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3955, file: !3905, line: 299, baseType: !813, size: 64, offset: 2112)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !3904, file: !3905, line: 333, baseType: !246, size: 128, offset: 1344)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !294, file: !200, line: 290, baseType: !3953, size: 64, offset: 192)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !294, file: !200, line: 291, baseType: !220, size: 32, offset: 256)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !294, file: !200, line: 294, baseType: !4117, size: 384, offset: 320)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4118, line: 133, size: 384, elements: !4119)
!4118 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4119 = !{!4120, !4121, !4122, !4123, !4124}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4117, file: !4118, line: 134, baseType: !234, size: 64)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4117, file: !4118, line: 135, baseType: !876, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4117, file: !4118, line: 136, baseType: !7, size: 32, offset: 64)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4117, file: !4118, line: 137, baseType: !246, size: 128, offset: 128)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4117, file: !4118, line: 138, baseType: !246, size: 128, offset: 256)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !294, file: !200, line: 295, baseType: !4126, size: 64, offset: 704)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4118, line: 215, size: 128, elements: !4128)
!4128 = !{!4129, !4174}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4127, file: !4118, line: 216, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4118, line: 175, size: 1216, elements: !4132)
!4132 = !{!4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4144, !4148, !4152, !4153, !4154, !4158, !4159, !4163, !4164, !4168, !4172, !4173}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4131, file: !4118, line: 176, baseType: !220, size: 32)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4131, file: !4118, line: 177, baseType: !353, size: 64, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4131, file: !4118, line: 178, baseType: !220, size: 32, offset: 128)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4131, file: !4118, line: 179, baseType: !220, size: 32, offset: 160)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4131, file: !4118, line: 184, baseType: !3992, size: 64, offset: 192)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4131, file: !4118, line: 185, baseType: !3978, size: 64, offset: 256)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4131, file: !4118, line: 186, baseType: !3978, size: 64, offset: 320)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4131, file: !4118, line: 187, baseType: !4141, size: 64, offset: 384)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!384, !293, !429, !4103, !399}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4131, file: !4118, line: 189, baseType: !4145, size: 64, offset: 448)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!384, !293, !429, !495, !399}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4131, file: !4118, line: 191, baseType: !4149, size: 64, offset: 512)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!220, !293, !429, !7, !187}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4131, file: !4118, line: 193, baseType: !4149, size: 64, offset: 576)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4131, file: !4118, line: 195, baseType: !4005, size: 64, offset: 640)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4131, file: !4118, line: 196, baseType: !4155, size: 64, offset: 704)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!2975, !293, !429, !2977}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4131, file: !4118, line: 198, baseType: !3992, size: 64, offset: 768)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4131, file: !4118, line: 203, baseType: !4160, size: 64, offset: 832)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{null, !293, !495, !353, !220}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4131, file: !4118, line: 205, baseType: !3978, size: 64, offset: 896)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4131, file: !4118, line: 206, baseType: !4165, size: 64, offset: 960)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{null, !293, !7}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4131, file: !4118, line: 207, baseType: !4169, size: 64, offset: 1024)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!220, !293, !495, !353, !220}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4131, file: !4118, line: 210, baseType: !701, size: 64, offset: 1088)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4131, file: !4118, line: 212, baseType: !220, size: 32, offset: 1152)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4127, file: !4118, line: 217, baseType: !293, size: 64, offset: 64)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !294, file: !200, line: 297, baseType: !258, size: 192, offset: 768)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !294, file: !200, line: 298, baseType: !258, size: 192, offset: 960)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !294, file: !200, line: 299, baseType: !258, size: 192, offset: 1152)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !294, file: !200, line: 300, baseType: !870, size: 256, offset: 1344)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !294, file: !200, line: 301, baseType: !258, size: 192, offset: 1600)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !294, file: !200, line: 302, baseType: !263, offset: 1792)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !294, file: !200, line: 303, baseType: !263, offset: 1792)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !294, file: !200, line: 305, baseType: !3921, size: 352, offset: 1792)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !294, file: !200, line: 305, baseType: !3921, size: 352, offset: 2144)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !294, file: !200, line: 306, baseType: !4048, size: 64, offset: 2496)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !200, line: 307, baseType: !4186, size: 512, offset: 2560)
!4186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 512, elements: !358)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !294, file: !200, line: 308, baseType: !1556, size: 64, offset: 3072)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !294, file: !200, line: 313, baseType: !1556, size: 64, offset: 3136)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !294, file: !200, line: 314, baseType: !187, size: 64, offset: 3200)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !294, file: !200, line: 315, baseType: !220, size: 32, offset: 3264)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !294, file: !200, line: 316, baseType: !4037, size: 64, offset: 3296)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !294, file: !200, line: 317, baseType: !187, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !294, file: !200, line: 318, baseType: !187, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !294, file: !200, line: 319, baseType: !187, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !294, file: !200, line: 320, baseType: !220, size: 32, offset: 3456)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !294, file: !200, line: 321, baseType: !187, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !294, file: !200, line: 322, baseType: !187, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !294, file: !200, line: 323, baseType: !187, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !294, file: !200, line: 324, baseType: !7, size: 32, offset: 3584)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !294, file: !200, line: 325, baseType: !220, size: 32, offset: 3616)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !294, file: !200, line: 327, baseType: !293, size: 64, offset: 3648)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !294, file: !200, line: 328, baseType: !3029, size: 64, offset: 3712)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !294, file: !200, line: 329, baseType: !1566, size: 128, offset: 3776)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !294, file: !200, line: 330, baseType: !1566, size: 128, offset: 3904)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !294, file: !200, line: 331, baseType: !230, size: 256, offset: 4032)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !294, file: !200, line: 332, baseType: !185, size: 64, offset: 4288)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !294, file: !200, line: 333, baseType: !185, size: 64, offset: 4352)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !294, file: !200, line: 334, baseType: !263, offset: 4416)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !294, file: !200, line: 335, baseType: !246, size: 128, offset: 4416)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !294, file: !200, line: 339, baseType: !220, size: 32, offset: 4544)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !294, file: !200, line: 340, baseType: !4103, size: 64, offset: 4608)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !294, file: !200, line: 341, baseType: !220, size: 32, offset: 4672)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !294, file: !200, line: 343, baseType: !230, size: 256, offset: 4736)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !294, file: !200, line: 344, baseType: !3947, size: 64, offset: 4992)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !199, file: !200, line: 233, baseType: !293, size: 64, offset: 1088)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !199, file: !200, line: 234, baseType: !4217, size: 64, offset: 1152)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4219)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !200, line: 205, size: 320, elements: !4220)
!4220 = !{!4221, !4225, !4229, !4233, !4237}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4219, file: !200, line: 207, baseType: !4222, size: 64)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!220, !3947}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4219, file: !200, line: 209, baseType: !4226, size: 64, offset: 64)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{null, !3947, !220}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4219, file: !200, line: 213, baseType: !4230, size: 64, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{null, !3947}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4219, file: !200, line: 218, baseType: !4234, size: 64, offset: 192)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!220, !3947, !293}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4219, file: !200, line: 220, baseType: !4230, size: 64, offset: 256)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !199, file: !200, line: 235, baseType: !4239, size: 64, offset: 1216)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4241)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !200, line: 223, size: 128, elements: !4242)
!4242 = !{!4243, !4247}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4241, file: !200, line: 224, baseType: !4244, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!220, !3947, !495, !495, !399}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4241, file: !200, line: 225, baseType: !4230, size: 64, offset: 64)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !199, file: !200, line: 236, baseType: !263, offset: 1280)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !199, file: !200, line: 237, baseType: !220, size: 32, offset: 1280)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !199, file: !200, line: 238, baseType: !220, size: 32, offset: 1312)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !199, file: !200, line: 239, baseType: !1566, size: 128, offset: 1344)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !199, file: !200, line: 240, baseType: !1566, size: 128, offset: 1472)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !199, file: !200, line: 241, baseType: !187, size: 64, offset: 1600)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !199, file: !200, line: 242, baseType: !187, size: 64, offset: 1664)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !199, file: !200, line: 243, baseType: !497, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !199, file: !200, line: 244, baseType: !497, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !199, file: !200, line: 245, baseType: !258, size: 192, offset: 1792)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !199, file: !200, line: 246, baseType: !258, size: 192, offset: 1984)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !199, file: !200, line: 247, baseType: !4103, size: 64, offset: 2176)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !199, file: !200, line: 248, baseType: !7, size: 32, offset: 2240)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !199, file: !200, line: 249, baseType: !7, size: 32, offset: 2272)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !199, file: !200, line: 250, baseType: !220, size: 32, offset: 2304)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !199, file: !200, line: 253, baseType: !298, size: 32, offset: 2336)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !199, file: !200, line: 254, baseType: !185, size: 64, offset: 2368)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "pm_state", scope: !196, file: !94, line: 289, baseType: !93, size: 32, offset: 2432)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !196, file: !94, line: 290, baseType: !4267, size: 128, offset: 2496)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "circ_buf", file: !4268, line: 9, size: 128, elements: !4269)
!4268 = !DIFile(filename: "./include/linux/circ_buf.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271, !4272}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4267, file: !4268, line: 10, baseType: !353, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4267, file: !4268, line: 11, baseType: !220, size: 32, offset: 64)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4267, file: !4268, line: 12, baseType: !220, size: 32, offset: 96)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !196, file: !94, line: 292, baseType: !280, size: 32, offset: 2624)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "remove_wait", scope: !196, file: !94, line: 293, baseType: !1566, size: 128, offset: 2688)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !196, file: !94, line: 294, baseType: !4276, size: 64, offset: 2816)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_port", file: !94, line: 106, size: 3712, elements: !4278)
!4278 = !{!4279, !4280, !4281, !4282, !4286, !4290, !4294, !4298, !4302, !4306, !4310, !4314, !4318, !4322, !4323, !4324, !4325, !4329, !4330, !4342, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4380, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4466, !4467, !4468, !4469, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4483, !4484, !4485, !4488, !4489}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4277, file: !94, line: 107, baseType: !263)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "iobase", scope: !4277, file: !94, line: 108, baseType: !187, size: 64)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !4277, file: !94, line: 109, baseType: !4103, size: 64, offset: 64)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "serial_in", scope: !4277, file: !94, line: 110, baseType: !4283, size: 64, offset: 128)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!7, !4276, !220}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "serial_out", scope: !4277, file: !94, line: 111, baseType: !4287, size: 64, offset: 192)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !4276, !220, !220}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4277, file: !94, line: 112, baseType: !4291, size: 64, offset: 256)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DISubroutineType(types: !4293)
!4293 = !{null, !4276, !3950, !3950}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4277, file: !94, line: 115, baseType: !4295, size: 64, offset: 320)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{null, !4276, !3950}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "get_mctrl", scope: !4277, file: !94, line: 117, baseType: !4299, size: 64, offset: 384)
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = !DISubroutineType(types: !4301)
!4301 = !{!7, !4276}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "set_mctrl", scope: !4277, file: !94, line: 118, baseType: !4303, size: 64, offset: 448)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{null, !4276, !7}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "get_divisor", scope: !4277, file: !94, line: 119, baseType: !4307, size: 64, offset: 512)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!7, !4276, !7, !2754}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "set_divisor", scope: !4277, file: !94, line: 122, baseType: !4311, size: 64, offset: 576)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{null, !4276, !7, !7, !7}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4277, file: !94, line: 126, baseType: !4315, size: 64, offset: 640)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{!220, !4276}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4277, file: !94, line: 127, baseType: !4319, size: 64, offset: 704)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{null, !4276}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4277, file: !94, line: 128, baseType: !4319, size: 64, offset: 768)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4277, file: !94, line: 129, baseType: !4319, size: 64, offset: 832)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4277, file: !94, line: 130, baseType: !4315, size: 64, offset: 896)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4277, file: !94, line: 131, baseType: !4326, size: 64, offset: 960)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{null, !4276, !7, !7}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "handle_break", scope: !4277, file: !94, line: 133, baseType: !4319, size: 64, offset: 1024)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_config", scope: !4277, file: !94, line: 134, baseType: !4331, size: 64, offset: 1088)
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4332, size: 64)
!4332 = !DISubroutineType(types: !4333)
!4333 = !{!220, !4276, !4334}
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_rs485", file: !4065, line: 117, size: 256, elements: !4336)
!4336 = !{!4337, !4338, !4339, !4340}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4335, file: !4065, line: 118, baseType: !488, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "delay_rts_before_send", scope: !4335, file: !4065, line: 129, baseType: !488, size: 32, offset: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "delay_rts_after_send", scope: !4335, file: !4065, line: 130, baseType: !488, size: 32, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4335, file: !4065, line: 131, baseType: !4341, size: 160, offset: 96)
!4341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !488, size: 160, elements: !4056)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "iso7816_config", scope: !4277, file: !94, line: 136, baseType: !4343, size: 64, offset: 1152)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!220, !4276, !4346}
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_iso7816", file: !4065, line: 140, size: 320, elements: !4348)
!4348 = !{!4349, !4350, !4351, !4352, !4353, !4354}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4347, file: !4065, line: 141, baseType: !488, size: 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "tg", scope: !4347, file: !4065, line: 145, baseType: !488, size: 32, offset: 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "sc_fi", scope: !4347, file: !4065, line: 146, baseType: !488, size: 32, offset: 64)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "sc_di", scope: !4347, file: !4065, line: 147, baseType: !488, size: 32, offset: 96)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !4347, file: !4065, line: 148, baseType: !488, size: 32, offset: 128)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4347, file: !4065, line: 149, baseType: !4341, size: 160, offset: 160)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4277, file: !94, line: 138, baseType: !7, size: 32, offset: 1216)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "irqflags", scope: !4277, file: !94, line: 139, baseType: !187, size: 64, offset: 1280)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "uartclk", scope: !4277, file: !94, line: 140, baseType: !7, size: 32, offset: 1344)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "fifosize", scope: !4277, file: !94, line: 141, baseType: !7, size: 32, offset: 1376)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !4277, file: !94, line: 142, baseType: !497, size: 8, offset: 1408)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "regshift", scope: !4277, file: !94, line: 143, baseType: !497, size: 8, offset: 1416)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "iotype", scope: !4277, file: !94, line: 144, baseType: !497, size: 8, offset: 1424)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4277, file: !94, line: 145, baseType: !497, size: 8, offset: 1432)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !4277, file: !94, line: 159, baseType: !7, size: 32, offset: 1440)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !4277, file: !94, line: 160, baseType: !7, size: 32, offset: 1472)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4277, file: !94, line: 161, baseType: !195, size: 64, offset: 1536)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !4277, file: !94, line: 162, baseType: !4367, size: 352, offset: 1600)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_icount", file: !94, line: 89, size: 352, elements: !4368)
!4368 = !{!4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4367, file: !94, line: 90, baseType: !488, size: 32)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4367, file: !94, line: 91, baseType: !488, size: 32, offset: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4367, file: !94, line: 92, baseType: !488, size: 32, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4367, file: !94, line: 93, baseType: !488, size: 32, offset: 96)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4367, file: !94, line: 94, baseType: !488, size: 32, offset: 128)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4367, file: !94, line: 95, baseType: !488, size: 32, offset: 160)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4367, file: !94, line: 96, baseType: !488, size: 32, offset: 192)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4367, file: !94, line: 97, baseType: !488, size: 32, offset: 224)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4367, file: !94, line: 98, baseType: !488, size: 32, offset: 256)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4367, file: !94, line: 99, baseType: !488, size: 32, offset: 288)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4367, file: !94, line: 100, baseType: !488, size: 32, offset: 320)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "cons", scope: !4277, file: !94, line: 164, baseType: !4381, size: 64, offset: 1984)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console", file: !4383, line: 141, size: 768, elements: !4384)
!4383 = !DIFile(filename: "./include/linux/console.h", directory: "/home/lizy2001/genbc/linux")
!4384 = !{!4385, !4386, !4390, !4394, !4398, !4400, !4404, !4408, !4412, !4413, !4414, !4415, !4416}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4382, file: !4383, line: 142, baseType: !1819, size: 128)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4382, file: !4383, line: 143, baseType: !4387, size: 64, offset: 128)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DISubroutineType(types: !4389)
!4389 = !{null, !4381, !316, !7}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4382, file: !4383, line: 144, baseType: !4391, size: 64, offset: 192)
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4392, size: 64)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!220, !4381, !353, !7}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4382, file: !4383, line: 145, baseType: !4395, size: 64, offset: 256)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!3903, !4381, !776}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "unblank", scope: !4382, file: !4383, line: 146, baseType: !4399, size: 64, offset: 320)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4382, file: !4383, line: 147, baseType: !4401, size: 64, offset: 384)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!220, !4381, !353}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !4382, file: !4383, line: 148, baseType: !4405, size: 64, offset: 448)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!220, !4381}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4382, file: !4383, line: 149, baseType: !4409, size: 64, offset: 512)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!220, !4381, !353, !220, !353}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4382, file: !4383, line: 150, baseType: !1296, size: 16, offset: 576)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4382, file: !4383, line: 151, baseType: !1296, size: 16, offset: 592)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !4382, file: !4383, line: 152, baseType: !220, size: 32, offset: 608)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4382, file: !4383, line: 153, baseType: !185, size: 64, offset: 640)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4382, file: !4383, line: 154, baseType: !4381, size: 64, offset: 704)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4277, file: !94, line: 166, baseType: !182, size: 32, offset: 2048)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4277, file: !94, line: 223, baseType: !194, size: 32, offset: 2080)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !4277, file: !94, line: 232, baseType: !220, size: 32, offset: 2112)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "mctrl", scope: !4277, file: !94, line: 233, baseType: !7, size: 32, offset: 2144)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4277, file: !94, line: 234, baseType: !7, size: 32, offset: 2176)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4277, file: !94, line: 235, baseType: !7, size: 32, offset: 2208)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4277, file: !94, line: 236, baseType: !4424, size: 64, offset: 2240)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4426)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_ops", file: !94, line: 38, size: 1472, elements: !4427)
!4427 = !{!4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4439, !4440, !4441, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4455, !4456, !4457, !4458, !4462}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "tx_empty", scope: !4426, file: !94, line: 39, baseType: !4299, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "set_mctrl", scope: !4426, file: !94, line: 40, baseType: !4303, size: 64, offset: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "get_mctrl", scope: !4426, file: !94, line: 41, baseType: !4299, size: 64, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "stop_tx", scope: !4426, file: !94, line: 42, baseType: !4319, size: 64, offset: 192)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "start_tx", scope: !4426, file: !94, line: 43, baseType: !4319, size: 64, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4426, file: !94, line: 44, baseType: !4319, size: 64, offset: 320)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4426, file: !94, line: 45, baseType: !4319, size: 64, offset: 384)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !4426, file: !94, line: 46, baseType: !4436, size: 64, offset: 448)
!4436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4437, size: 64)
!4437 = !DISubroutineType(types: !4438)
!4438 = !{null, !4276, !190}
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "stop_rx", scope: !4426, file: !94, line: 47, baseType: !4319, size: 64, offset: 512)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ms", scope: !4426, file: !94, line: 48, baseType: !4319, size: 64, offset: 576)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !4426, file: !94, line: 49, baseType: !4442, size: 64, offset: 640)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = !DISubroutineType(types: !4444)
!4444 = !{null, !4276, !220}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4426, file: !94, line: 50, baseType: !4315, size: 64, offset: 704)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4426, file: !94, line: 51, baseType: !4319, size: 64, offset: 768)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4426, file: !94, line: 52, baseType: !4319, size: 64, offset: 832)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4426, file: !94, line: 53, baseType: !4291, size: 64, offset: 896)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4426, file: !94, line: 55, baseType: !4295, size: 64, offset: 960)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4426, file: !94, line: 56, baseType: !4326, size: 64, offset: 1024)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4426, file: !94, line: 62, baseType: !4452, size: 64, offset: 1088)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!316, !4276}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "release_port", scope: !4426, file: !94, line: 68, baseType: !4319, size: 64, offset: 1152)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "request_port", scope: !4426, file: !94, line: 74, baseType: !4315, size: 64, offset: 1216)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "config_port", scope: !4426, file: !94, line: 75, baseType: !4442, size: 64, offset: 1280)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "verify_port", scope: !4426, file: !94, line: 76, baseType: !4459, size: 64, offset: 1344)
!4459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 64)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!220, !4276, !4084}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4426, file: !94, line: 77, baseType: !4463, size: 64, offset: 1408)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!220, !4276, !7, !187}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4277, file: !94, line: 237, baseType: !7, size: 32, offset: 2304)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4277, file: !94, line: 238, baseType: !7, size: 32, offset: 2336)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4277, file: !94, line: 239, baseType: !7, size: 32, offset: 2368)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "mapbase", scope: !4277, file: !94, line: 240, baseType: !4470, size: 64, offset: 2432)
!4470 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !184, line: 158, baseType: !2199)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "mapsize", scope: !4277, file: !94, line: 241, baseType: !4470, size: 64, offset: 2496)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4277, file: !94, line: 242, baseType: !308, size: 64, offset: 2560)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq", scope: !4277, file: !94, line: 244, baseType: !187, size: 64, offset: 2624)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq_ch", scope: !4277, file: !94, line: 245, baseType: !7, size: 32, offset: 2688)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "has_sysrq", scope: !4277, file: !94, line: 246, baseType: !497, size: 8, offset: 2720)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq_seq", scope: !4277, file: !94, line: 247, baseType: !497, size: 8, offset: 2728)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4277, file: !94, line: 249, baseType: !497, size: 8, offset: 2736)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !4277, file: !94, line: 250, baseType: !497, size: 8, offset: 2744)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "console_reinit", scope: !4277, file: !94, line: 251, baseType: !497, size: 8, offset: 2752)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4277, file: !94, line: 252, baseType: !316, size: 64, offset: 2816)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "attr_group", scope: !4277, file: !94, line: 253, baseType: !4482, size: 64, offset: 2880)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "tty_groups", scope: !4277, file: !94, line: 254, baseType: !405, size: 64, offset: 2944)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "rs485", scope: !4277, file: !94, line: 255, baseType: !4335, size: 256, offset: 3008)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_term_gpio", scope: !4277, file: !94, line: 256, baseType: !4486, size: 64, offset: 3264)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !100, line: 19, flags: DIFlagFwdDecl)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "iso7816", scope: !4277, file: !94, line: 257, baseType: !4347, size: 320, offset: 3328)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !4277, file: !94, line: 258, baseType: !185, size: 64, offset: 3648)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4492)
!4492 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !220)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !487)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4497 = !{!4498, !4515, !4520, !4525, !0, !4530, !4535, !4537, !4539, !4541, !4543, !4548, !4562, !4564, !4566, !4568, !4570, !4572, !4574, !4576, !4578, !4580, !4582, !4584, !4586}
!4498 = !DIGlobalVariableExpression(var: !4499, expr: !DIExpression())
!4499 = distinct !DIGlobalVariable(name: "__key", scope: !4500, file: !3, line: 2880, type: !716, isLocal: true, isDefinition: true)
!4500 = distinct !DISubprogram(name: "uart_add_one_port", scope: !3, file: !3, line: 2855, type: !4501, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!220, !4503, !4276}
!4503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver", file: !94, line: 306, size: 512, elements: !4505)
!4505 = !{!4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4504, file: !94, line: 307, baseType: !701, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4504, file: !94, line: 308, baseType: !316, size: 64, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4504, file: !94, line: 309, baseType: !316, size: 64, offset: 128)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4504, file: !94, line: 310, baseType: !220, size: 32, offset: 192)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4504, file: !94, line: 311, baseType: !220, size: 32, offset: 224)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4504, file: !94, line: 312, baseType: !220, size: 32, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "cons", scope: !4504, file: !94, line: 313, baseType: !4381, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4504, file: !94, line: 319, baseType: !195, size: 64, offset: 384)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "tty_driver", scope: !4504, file: !94, line: 320, baseType: !3903, size: 64, offset: 448)
!4515 = !DIGlobalVariableExpression(var: !4516, expr: !DIExpression())
!4516 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description251", scope: !2, file: !3, line: 3270, type: !4517, isLocal: true, isDefinition: true, align: 8)
!4517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 344, elements: !4518)
!4518 = !{!4519}
!4519 = !DISubrange(count: 43)
!4520 = !DIGlobalVariableExpression(var: !4521, expr: !DIExpression())
!4521 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file252", scope: !2, file: !3, line: 3271, type: !4522, isLocal: true, isDefinition: true, align: 8)
!4522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 384, elements: !4523)
!4523 = !{!4524}
!4524 = !DISubrange(count: 48)
!4525 = !DIGlobalVariableExpression(var: !4526, expr: !DIExpression())
!4526 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license253", scope: !2, file: !3, line: 3271, type: !4527, isLocal: true, isDefinition: true, align: 8)
!4527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 192, elements: !4528)
!4528 = !{!4529}
!4529 = !DISubrange(count: 24)
!4530 = !DIGlobalVariableExpression(var: !4531, expr: !DIExpression())
!4531 = distinct !DIGlobalVariable(name: "_rs", scope: !4532, file: !3, line: 992, type: !1787, isLocal: true, isDefinition: true)
!4532 = distinct !DISubprogram(name: "uart_set_info", scope: !3, file: !3, line: 807, type: !4533, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!220, !293, !3947, !195, !4084}
!4535 = !DIGlobalVariableExpression(var: !4536, expr: !DIExpression())
!4536 = distinct !DIGlobalVariable(name: "uart_port_ops", scope: !2, file: !3, line: 2513, type: !4218, isLocal: true, isDefinition: true)
!4537 = !DIGlobalVariableExpression(var: !4538, expr: !DIExpression())
!4538 = distinct !DIGlobalVariable(name: "port_mutex", scope: !2, file: !3, line: 35, type: !258, isLocal: true, isDefinition: true)
!4539 = !DIGlobalVariableExpression(var: !4540, expr: !DIExpression())
!4540 = distinct !DIGlobalVariable(name: "port_lock_key", scope: !2, file: !3, line: 41, type: !716, isLocal: true, isDefinition: true)
!4541 = !DIGlobalVariableExpression(var: !4542, expr: !DIExpression())
!4542 = distinct !DIGlobalVariable(name: "tty_dev_attr_group", scope: !2, file: !3, line: 2841, type: !407, isLocal: true, isDefinition: true)
!4543 = !DIGlobalVariableExpression(var: !4544, expr: !DIExpression())
!4544 = distinct !DIGlobalVariable(name: "tty_dev_attrs", scope: !2, file: !3, line: 2823, type: !4545, isLocal: true, isDefinition: true)
!4545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 960, elements: !4546)
!4546 = !{!4547}
!4547 = !DISubrange(count: 15)
!4548 = !DIGlobalVariableExpression(var: !4549, expr: !DIExpression())
!4549 = distinct !DIGlobalVariable(name: "dev_attr_uartclk", scope: !2, file: !3, line: 2808, type: !4550, isLocal: true, isDefinition: true)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4551)
!4551 = !{!4552, !4553, !4558}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4550, file: !73, line: 100, baseType: !389, size: 128)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4550, file: !73, line: 101, baseType: !4554, size: 64, offset: 128)
!4554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4555, size: 64)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!384, !308, !4557, !353}
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4550, file: !73, line: 103, baseType: !4559, size: 64, offset: 192)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!384, !308, !4557, !316, !399}
!4562 = !DIGlobalVariableExpression(var: !4563, expr: !DIExpression())
!4563 = distinct !DIGlobalVariable(name: "dev_attr_type", scope: !2, file: !3, line: 2809, type: !4550, isLocal: true, isDefinition: true)
!4564 = !DIGlobalVariableExpression(var: !4565, expr: !DIExpression())
!4565 = distinct !DIGlobalVariable(name: "dev_attr_line", scope: !2, file: !3, line: 2810, type: !4550, isLocal: true, isDefinition: true)
!4566 = !DIGlobalVariableExpression(var: !4567, expr: !DIExpression())
!4567 = distinct !DIGlobalVariable(name: "dev_attr_port", scope: !2, file: !3, line: 2811, type: !4550, isLocal: true, isDefinition: true)
!4568 = !DIGlobalVariableExpression(var: !4569, expr: !DIExpression())
!4569 = distinct !DIGlobalVariable(name: "dev_attr_irq", scope: !2, file: !3, line: 2812, type: !4550, isLocal: true, isDefinition: true)
!4570 = !DIGlobalVariableExpression(var: !4571, expr: !DIExpression())
!4571 = distinct !DIGlobalVariable(name: "dev_attr_flags", scope: !2, file: !3, line: 2813, type: !4550, isLocal: true, isDefinition: true)
!4572 = !DIGlobalVariableExpression(var: !4573, expr: !DIExpression())
!4573 = distinct !DIGlobalVariable(name: "dev_attr_xmit_fifo_size", scope: !2, file: !3, line: 2814, type: !4550, isLocal: true, isDefinition: true)
!4574 = !DIGlobalVariableExpression(var: !4575, expr: !DIExpression())
!4575 = distinct !DIGlobalVariable(name: "dev_attr_close_delay", scope: !2, file: !3, line: 2815, type: !4550, isLocal: true, isDefinition: true)
!4576 = !DIGlobalVariableExpression(var: !4577, expr: !DIExpression())
!4577 = distinct !DIGlobalVariable(name: "dev_attr_closing_wait", scope: !2, file: !3, line: 2816, type: !4550, isLocal: true, isDefinition: true)
!4578 = !DIGlobalVariableExpression(var: !4579, expr: !DIExpression())
!4579 = distinct !DIGlobalVariable(name: "dev_attr_custom_divisor", scope: !2, file: !3, line: 2817, type: !4550, isLocal: true, isDefinition: true)
!4580 = !DIGlobalVariableExpression(var: !4581, expr: !DIExpression())
!4581 = distinct !DIGlobalVariable(name: "dev_attr_io_type", scope: !2, file: !3, line: 2818, type: !4550, isLocal: true, isDefinition: true)
!4582 = !DIGlobalVariableExpression(var: !4583, expr: !DIExpression())
!4583 = distinct !DIGlobalVariable(name: "dev_attr_iomem_base", scope: !2, file: !3, line: 2819, type: !4550, isLocal: true, isDefinition: true)
!4584 = !DIGlobalVariableExpression(var: !4585, expr: !DIExpression())
!4585 = distinct !DIGlobalVariable(name: "dev_attr_iomem_reg_shift", scope: !2, file: !3, line: 2820, type: !4550, isLocal: true, isDefinition: true)
!4586 = !DIGlobalVariableExpression(var: !4587, expr: !DIExpression())
!4587 = distinct !DIGlobalVariable(name: "dev_attr_console", scope: !2, file: !3, line: 2821, type: !4550, isLocal: true, isDefinition: true)
!4588 = !{!"rsp"}
!4589 = !{i32 7, !"Dwarf Version", i32 4}
!4590 = !{i32 2, !"Debug Info Version", i32 3}
!4591 = !{i32 1, !"wchar_size", i32 2}
!4592 = !{i32 1, !"Code Model", i32 2}
!4593 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4594 = distinct !DISubprogram(name: "uart_write_wakeup", scope: !3, file: !3, line: 98, type: !4320, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4595 = !DILocalVariable(name: "port", arg: 1, scope: !4594, file: !3, line: 98, type: !4276)
!4596 = !DILocation(line: 98, column: 42, scope: !4594)
!4597 = !DILocalVariable(name: "state", scope: !4594, file: !3, line: 100, type: !195)
!4598 = !DILocation(line: 100, column: 21, scope: !4594)
!4599 = !DILocation(line: 100, column: 29, scope: !4594)
!4600 = !DILocation(line: 100, column: 35, scope: !4594)
!4601 = !DILocation(line: 105, column: 2, scope: !4594)
!4602 = !DILocation(line: 105, column: 2, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4604, file: !3, line: 105, column: 2)
!4604 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 105, column: 2)
!4605 = !DILocation(line: 105, column: 2, scope: !4604)
!4606 = !DILocation(line: 105, column: 2, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4603, file: !3, line: 105, column: 2)
!4608 = !DILocation(line: 105, column: 2, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 105, column: 2)
!4610 = !DILocation(line: 105, column: 2, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 105, column: 2)
!4612 = !{i32 -2141564718, i32 -2141564689, i32 -2141564643, i32 -2141564585, i32 -2141564531, i32 -2141564477, i32 -2141564422, i32 -2141564391}
!4613 = !DILocation(line: 105, column: 2, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 105, column: 2)
!4615 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 105, column: 2)
!4616 = !{i32 -2141563936, i32 -2141563929, i32 -2141563875, i32 -2141563844, i32 -2141563814}
!4617 = !DILocation(line: 105, column: 2, scope: !4615)
!4618 = !DILocation(line: 106, column: 23, scope: !4594)
!4619 = !DILocation(line: 106, column: 30, scope: !4594)
!4620 = !DILocation(line: 106, column: 2, scope: !4594)
!4621 = !DILocation(line: 107, column: 1, scope: !4594)
!4622 = distinct !DISubprogram(name: "uart_update_timeout", scope: !3, file: !3, line: 334, type: !4327, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4623 = !DILocalVariable(name: "port", arg: 1, scope: !4622, file: !3, line: 334, type: !4276)
!4624 = !DILocation(line: 334, column: 39, scope: !4622)
!4625 = !DILocalVariable(name: "cflag", arg: 2, scope: !4622, file: !3, line: 334, type: !7)
!4626 = !DILocation(line: 334, column: 58, scope: !4622)
!4627 = !DILocalVariable(name: "baud", arg: 3, scope: !4622, file: !3, line: 335, type: !7)
!4628 = !DILocation(line: 335, column: 20, scope: !4622)
!4629 = !DILocalVariable(name: "bits", scope: !4622, file: !3, line: 337, type: !7)
!4630 = !DILocation(line: 337, column: 15, scope: !4622)
!4631 = !DILocation(line: 340, column: 10, scope: !4622)
!4632 = !DILocation(line: 340, column: 16, scope: !4622)
!4633 = !DILocation(line: 340, column: 2, scope: !4622)
!4634 = !DILocation(line: 342, column: 8, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 340, column: 25)
!4636 = !DILocation(line: 343, column: 3, scope: !4635)
!4637 = !DILocation(line: 345, column: 8, scope: !4635)
!4638 = !DILocation(line: 346, column: 3, scope: !4635)
!4639 = !DILocation(line: 348, column: 8, scope: !4635)
!4640 = !DILocation(line: 349, column: 3, scope: !4635)
!4641 = !DILocation(line: 351, column: 8, scope: !4635)
!4642 = !DILocation(line: 352, column: 3, scope: !4635)
!4643 = !DILocation(line: 355, column: 6, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 355, column: 6)
!4645 = !DILocation(line: 355, column: 12, scope: !4644)
!4646 = !DILocation(line: 355, column: 6, scope: !4622)
!4647 = !DILocation(line: 356, column: 7, scope: !4644)
!4648 = !DILocation(line: 356, column: 3, scope: !4644)
!4649 = !DILocation(line: 357, column: 6, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 357, column: 6)
!4651 = !DILocation(line: 357, column: 12, scope: !4650)
!4652 = !DILocation(line: 357, column: 6, scope: !4622)
!4653 = !DILocation(line: 358, column: 7, scope: !4650)
!4654 = !DILocation(line: 358, column: 3, scope: !4650)
!4655 = !DILocation(line: 363, column: 9, scope: !4622)
!4656 = !DILocation(line: 363, column: 16, scope: !4622)
!4657 = !DILocation(line: 363, column: 22, scope: !4622)
!4658 = !DILocation(line: 363, column: 14, scope: !4622)
!4659 = !DILocation(line: 363, column: 7, scope: !4622)
!4660 = !DILocation(line: 369, column: 24, scope: !4622)
!4661 = !DILocation(line: 369, column: 22, scope: !4622)
!4662 = !DILocation(line: 369, column: 32, scope: !4622)
!4663 = !DILocation(line: 369, column: 30, scope: !4622)
!4664 = !DILocation(line: 369, column: 37, scope: !4622)
!4665 = !DILocation(line: 369, column: 2, scope: !4622)
!4666 = !DILocation(line: 369, column: 8, scope: !4622)
!4667 = !DILocation(line: 369, column: 16, scope: !4622)
!4668 = !DILocation(line: 370, column: 1, scope: !4622)
!4669 = distinct !DISubprogram(name: "uart_get_baud_rate", scope: !3, file: !3, line: 394, type: !4670, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!7, !4276, !3950, !3950, !7, !7}
!4672 = !DILocalVariable(name: "port", arg: 1, scope: !4669, file: !3, line: 394, type: !4276)
!4673 = !DILocation(line: 394, column: 38, scope: !4669)
!4674 = !DILocalVariable(name: "termios", arg: 2, scope: !4669, file: !3, line: 394, type: !3950)
!4675 = !DILocation(line: 394, column: 61, scope: !4669)
!4676 = !DILocalVariable(name: "old", arg: 3, scope: !4669, file: !3, line: 395, type: !3950)
!4677 = !DILocation(line: 395, column: 23, scope: !4669)
!4678 = !DILocalVariable(name: "min", arg: 4, scope: !4669, file: !3, line: 395, type: !7)
!4679 = !DILocation(line: 395, column: 41, scope: !4669)
!4680 = !DILocalVariable(name: "max", arg: 5, scope: !4669, file: !3, line: 395, type: !7)
!4681 = !DILocation(line: 395, column: 59, scope: !4669)
!4682 = !DILocalVariable(name: "try", scope: !4669, file: !3, line: 397, type: !7)
!4683 = !DILocation(line: 397, column: 15, scope: !4669)
!4684 = !DILocalVariable(name: "baud", scope: !4669, file: !3, line: 398, type: !7)
!4685 = !DILocation(line: 398, column: 15, scope: !4669)
!4686 = !DILocalVariable(name: "altbaud", scope: !4669, file: !3, line: 399, type: !7)
!4687 = !DILocation(line: 399, column: 15, scope: !4669)
!4688 = !DILocalVariable(name: "hung_up", scope: !4669, file: !3, line: 400, type: !220)
!4689 = !DILocation(line: 400, column: 6, scope: !4669)
!4690 = !DILocalVariable(name: "flags", scope: !4669, file: !3, line: 401, type: !182)
!4691 = !DILocation(line: 401, column: 8, scope: !4669)
!4692 = !DILocation(line: 401, column: 16, scope: !4669)
!4693 = !DILocation(line: 401, column: 22, scope: !4669)
!4694 = !DILocation(line: 401, column: 28, scope: !4669)
!4695 = !DILocation(line: 403, column: 10, scope: !4669)
!4696 = !DILocation(line: 403, column: 2, scope: !4669)
!4697 = !DILocation(line: 405, column: 11, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 403, column: 17)
!4699 = !DILocation(line: 406, column: 3, scope: !4698)
!4700 = !DILocation(line: 408, column: 11, scope: !4698)
!4701 = !DILocation(line: 409, column: 3, scope: !4698)
!4702 = !DILocation(line: 411, column: 11, scope: !4698)
!4703 = !DILocation(line: 412, column: 3, scope: !4698)
!4704 = !DILocation(line: 414, column: 11, scope: !4698)
!4705 = !DILocation(line: 415, column: 3, scope: !4698)
!4706 = !DILocation(line: 417, column: 11, scope: !4698)
!4707 = !DILocation(line: 418, column: 3, scope: !4698)
!4708 = !DILocation(line: 421, column: 11, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 421, column: 2)
!4710 = !DILocation(line: 421, column: 7, scope: !4709)
!4711 = !DILocation(line: 421, column: 16, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 421, column: 2)
!4713 = !DILocation(line: 421, column: 20, scope: !4712)
!4714 = !DILocation(line: 421, column: 2, scope: !4709)
!4715 = !DILocation(line: 422, column: 32, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 421, column: 32)
!4717 = !DILocation(line: 422, column: 10, scope: !4716)
!4718 = !DILocation(line: 422, column: 8, scope: !4716)
!4719 = !DILocation(line: 428, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 428, column: 7)
!4721 = !DILocation(line: 428, column: 11, scope: !4720)
!4722 = !DILocation(line: 428, column: 16, scope: !4720)
!4723 = !DILocation(line: 428, column: 19, scope: !4720)
!4724 = !DILocation(line: 428, column: 24, scope: !4720)
!4725 = !DILocation(line: 428, column: 7, scope: !4716)
!4726 = !DILocation(line: 429, column: 11, scope: !4720)
!4727 = !DILocation(line: 429, column: 9, scope: !4720)
!4728 = !DILocation(line: 429, column: 4, scope: !4720)
!4729 = !DILocation(line: 434, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 434, column: 7)
!4731 = !DILocation(line: 434, column: 12, scope: !4730)
!4732 = !DILocation(line: 434, column: 7, scope: !4716)
!4733 = !DILocation(line: 435, column: 12, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 434, column: 18)
!4735 = !DILocation(line: 436, column: 9, scope: !4734)
!4736 = !DILocation(line: 437, column: 3, scope: !4734)
!4737 = !DILocation(line: 439, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 439, column: 7)
!4739 = !DILocation(line: 439, column: 15, scope: !4738)
!4740 = !DILocation(line: 439, column: 12, scope: !4738)
!4741 = !DILocation(line: 439, column: 19, scope: !4738)
!4742 = !DILocation(line: 439, column: 22, scope: !4738)
!4743 = !DILocation(line: 439, column: 30, scope: !4738)
!4744 = !DILocation(line: 439, column: 27, scope: !4738)
!4745 = !DILocation(line: 439, column: 7, scope: !4716)
!4746 = !DILocation(line: 440, column: 11, scope: !4738)
!4747 = !DILocation(line: 440, column: 4, scope: !4738)
!4748 = !DILocation(line: 446, column: 3, scope: !4716)
!4749 = !DILocation(line: 446, column: 12, scope: !4716)
!4750 = !DILocation(line: 446, column: 20, scope: !4716)
!4751 = !DILocation(line: 447, column: 7, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 447, column: 7)
!4753 = !DILocation(line: 447, column: 7, scope: !4716)
!4754 = !DILocation(line: 448, column: 33, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 447, column: 12)
!4756 = !DILocation(line: 448, column: 11, scope: !4755)
!4757 = !DILocation(line: 448, column: 9, scope: !4755)
!4758 = !DILocation(line: 449, column: 9, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 449, column: 8)
!4760 = !DILocation(line: 449, column: 8, scope: !4755)
!4761 = !DILocation(line: 450, column: 34, scope: !4759)
!4762 = !DILocation(line: 451, column: 9, scope: !4759)
!4763 = !DILocation(line: 451, column: 15, scope: !4759)
!4764 = !DILocation(line: 450, column: 5, scope: !4759)
!4765 = !DILocation(line: 452, column: 8, scope: !4755)
!4766 = !DILocation(line: 453, column: 4, scope: !4755)
!4767 = !DILocation(line: 460, column: 8, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 460, column: 7)
!4769 = !DILocation(line: 460, column: 7, scope: !4716)
!4770 = !DILocation(line: 461, column: 8, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 461, column: 8)
!4772 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 460, column: 17)
!4773 = !DILocation(line: 461, column: 16, scope: !4771)
!4774 = !DILocation(line: 461, column: 13, scope: !4771)
!4775 = !DILocation(line: 461, column: 8, scope: !4772)
!4776 = !DILocation(line: 462, column: 34, scope: !4771)
!4777 = !DILocation(line: 463, column: 8, scope: !4771)
!4778 = !DILocation(line: 463, column: 12, scope: !4771)
!4779 = !DILocation(line: 463, column: 17, scope: !4771)
!4780 = !DILocation(line: 463, column: 21, scope: !4771)
!4781 = !DILocation(line: 462, column: 5, scope: !4771)
!4782 = !DILocation(line: 465, column: 34, scope: !4771)
!4783 = !DILocation(line: 466, column: 8, scope: !4771)
!4784 = !DILocation(line: 466, column: 12, scope: !4771)
!4785 = !DILocation(line: 466, column: 17, scope: !4771)
!4786 = !DILocation(line: 466, column: 21, scope: !4771)
!4787 = !DILocation(line: 465, column: 5, scope: !4771)
!4788 = !DILocation(line: 467, column: 3, scope: !4772)
!4789 = !DILocation(line: 468, column: 2, scope: !4716)
!4790 = !DILocation(line: 421, column: 28, scope: !4712)
!4791 = !DILocation(line: 421, column: 2, scope: !4712)
!4792 = distinct !{!4792, !4714, !4793}
!4793 = !DILocation(line: 468, column: 2, scope: !4709)
!4794 = !DILocalVariable(name: "__ret_warn_on", scope: !4795, file: !3, line: 470, type: !220)
!4795 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 470, column: 2)
!4796 = !DILocation(line: 470, column: 2, scope: !4795)
!4797 = !DILocation(line: 470, column: 2, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 470, column: 2)
!4799 = !DILocation(line: 470, column: 2, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 470, column: 2)
!4801 = !DILocation(line: 470, column: 2, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 470, column: 2)
!4803 = !DILocation(line: 470, column: 2, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 470, column: 2)
!4805 = !{i32 -2141554965, i32 -2141554936, i32 -2141554890, i32 -2141554832, i32 -2141554778, i32 -2141554724, i32 -2141554669, i32 -2141554638}
!4806 = !DILocation(line: 470, column: 2, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 470, column: 2)
!4808 = !{i32 -2141554224, i32 -2141554217, i32 -2141554165, i32 -2141554134, i32 -2141554104}
!4809 = !DILocation(line: 470, column: 2, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 470, column: 2)
!4811 = !DILocation(line: 471, column: 2, scope: !4669)
!4812 = !DILocation(line: 472, column: 1, scope: !4669)
!4813 = distinct !DISubprogram(name: "uart_get_divisor", scope: !3, file: !3, line: 484, type: !4814, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{!7, !4276, !7}
!4816 = !DILocalVariable(name: "port", arg: 1, scope: !4813, file: !3, line: 484, type: !4276)
!4817 = !DILocation(line: 484, column: 36, scope: !4813)
!4818 = !DILocalVariable(name: "baud", arg: 2, scope: !4813, file: !3, line: 484, type: !7)
!4819 = !DILocation(line: 484, column: 55, scope: !4813)
!4820 = !DILocalVariable(name: "quot", scope: !4813, file: !3, line: 486, type: !7)
!4821 = !DILocation(line: 486, column: 15, scope: !4813)
!4822 = !DILocation(line: 491, column: 6, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 491, column: 6)
!4824 = !DILocation(line: 491, column: 11, scope: !4823)
!4825 = !DILocation(line: 491, column: 20, scope: !4823)
!4826 = !DILocation(line: 491, column: 24, scope: !4823)
!4827 = !DILocation(line: 491, column: 30, scope: !4823)
!4828 = !DILocation(line: 491, column: 36, scope: !4823)
!4829 = !DILocation(line: 491, column: 52, scope: !4823)
!4830 = !DILocation(line: 491, column: 6, scope: !4813)
!4831 = !DILocation(line: 492, column: 10, scope: !4823)
!4832 = !DILocation(line: 492, column: 16, scope: !4823)
!4833 = !DILocation(line: 492, column: 8, scope: !4823)
!4834 = !DILocation(line: 492, column: 3, scope: !4823)
!4835 = !DILocalVariable(name: "__x", scope: !4836, file: !3, line: 494, type: !7)
!4836 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 494, column: 10)
!4837 = !DILocation(line: 494, column: 10, scope: !4836)
!4838 = !DILocalVariable(name: "__d", scope: !4836, file: !3, line: 494, type: !7)
!4839 = !DILocation(line: 494, column: 8, scope: !4823)
!4840 = !DILocation(line: 496, column: 9, scope: !4813)
!4841 = !DILocation(line: 496, column: 2, scope: !4813)
!4842 = distinct !DISubprogram(name: "uart_suspend_port", scope: !3, file: !3, line: 2163, type: !4501, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4843 = !DILocalVariable(name: "lock", arg: 1, scope: !4844, file: !4845, line: 402, type: !1161)
!4844 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4845, file: !4845, line: 402, type: !4846, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4845 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4846 = !DISubroutineType(types: !4847)
!4847 = !{null, !1161}
!4848 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !4849)
!4849 = distinct !DILocation(line: 2198, column: 3, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2187, column: 34)
!4851 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2187, column: 6)
!4852 = !DILocalVariable(name: "lock", arg: 1, scope: !4853, file: !4845, line: 377, type: !1161)
!4853 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4845, file: !4845, line: 377, type: !4846, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!4854 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !4855)
!4855 = distinct !DILocation(line: 2194, column: 3, scope: !4850)
!4856 = !DILocalVariable(name: "drv", arg: 1, scope: !4842, file: !3, line: 2163, type: !4503)
!4857 = !DILocation(line: 2163, column: 43, scope: !4842)
!4858 = !DILocalVariable(name: "uport", arg: 2, scope: !4842, file: !3, line: 2163, type: !4276)
!4859 = !DILocation(line: 2163, column: 66, scope: !4842)
!4860 = !DILocalVariable(name: "state", scope: !4842, file: !3, line: 2165, type: !195)
!4861 = !DILocation(line: 2165, column: 21, scope: !4842)
!4862 = !DILocation(line: 2165, column: 29, scope: !4842)
!4863 = !DILocation(line: 2165, column: 34, scope: !4842)
!4864 = !DILocation(line: 2165, column: 42, scope: !4842)
!4865 = !DILocation(line: 2165, column: 49, scope: !4842)
!4866 = !DILocation(line: 2165, column: 40, scope: !4842)
!4867 = !DILocalVariable(name: "port", scope: !4842, file: !3, line: 2166, type: !3947)
!4868 = !DILocation(line: 2166, column: 19, scope: !4842)
!4869 = !DILocation(line: 2166, column: 27, scope: !4842)
!4870 = !DILocation(line: 2166, column: 34, scope: !4842)
!4871 = !DILocalVariable(name: "tty_dev", scope: !4842, file: !3, line: 2167, type: !308)
!4872 = !DILocation(line: 2167, column: 17, scope: !4842)
!4873 = !DILocalVariable(name: "match", scope: !4842, file: !3, line: 2168, type: !4874)
!4874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_match", file: !3, line: 2148, size: 128, elements: !4875)
!4875 = !{!4876, !4877}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4874, file: !3, line: 2149, baseType: !4276, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4874, file: !3, line: 2150, baseType: !4503, size: 64, offset: 64)
!4878 = !DILocation(line: 2168, column: 20, scope: !4842)
!4879 = !DILocation(line: 2168, column: 28, scope: !4842)
!4880 = !DILocation(line: 2168, column: 29, scope: !4842)
!4881 = !DILocation(line: 2168, column: 36, scope: !4842)
!4882 = !DILocation(line: 2170, column: 14, scope: !4842)
!4883 = !DILocation(line: 2170, column: 20, scope: !4842)
!4884 = !DILocation(line: 2170, column: 2, scope: !4842)
!4885 = !DILocation(line: 2172, column: 30, scope: !4842)
!4886 = !DILocation(line: 2172, column: 37, scope: !4842)
!4887 = !DILocation(line: 2172, column: 42, scope: !4842)
!4888 = !DILocation(line: 2172, column: 12, scope: !4842)
!4889 = !DILocation(line: 2172, column: 10, scope: !4842)
!4890 = !DILocation(line: 2173, column: 6, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2173, column: 6)
!4892 = !DILocation(line: 2173, column: 14, scope: !4891)
!4893 = !DILocation(line: 2173, column: 35, scope: !4891)
!4894 = !DILocation(line: 2173, column: 17, scope: !4891)
!4895 = !DILocation(line: 2173, column: 6, scope: !4842)
!4896 = !DILocation(line: 2174, column: 19, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 2173, column: 45)
!4898 = !DILocation(line: 2174, column: 26, scope: !4897)
!4899 = !DILocation(line: 2174, column: 3, scope: !4897)
!4900 = !DILocation(line: 2175, column: 14, scope: !4897)
!4901 = !DILocation(line: 2175, column: 3, scope: !4897)
!4902 = !DILocation(line: 2176, column: 17, scope: !4897)
!4903 = !DILocation(line: 2176, column: 23, scope: !4897)
!4904 = !DILocation(line: 2176, column: 3, scope: !4897)
!4905 = !DILocation(line: 2177, column: 3, scope: !4897)
!4906 = !DILocation(line: 2179, column: 13, scope: !4842)
!4907 = !DILocation(line: 2179, column: 2, scope: !4842)
!4908 = !DILocation(line: 2182, column: 7, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2182, column: 6)
!4910 = !DILocation(line: 2182, column: 31, scope: !4909)
!4911 = !DILocation(line: 2182, column: 34, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 2182, column: 34)
!4913 = !DILocation(line: 2182, column: 34, scope: !4909)
!4914 = !DILocation(line: 2182, column: 6, scope: !4842)
!4915 = !DILocation(line: 2183, column: 3, scope: !4909)
!4916 = !DILocation(line: 2185, column: 2, scope: !4842)
!4917 = !DILocation(line: 2185, column: 9, scope: !4842)
!4918 = !DILocation(line: 2185, column: 19, scope: !4842)
!4919 = !DILocation(line: 2187, column: 27, scope: !4851)
!4920 = !DILocation(line: 2187, column: 6, scope: !4851)
!4921 = !DILocation(line: 2187, column: 6, scope: !4842)
!4922 = !DILocalVariable(name: "ops", scope: !4850, file: !3, line: 2188, type: !4424)
!4923 = !DILocation(line: 2188, column: 26, scope: !4850)
!4924 = !DILocation(line: 2188, column: 32, scope: !4850)
!4925 = !DILocation(line: 2188, column: 39, scope: !4850)
!4926 = !DILocalVariable(name: "tries", scope: !4850, file: !3, line: 2189, type: !220)
!4927 = !DILocation(line: 2189, column: 7, scope: !4850)
!4928 = !DILocation(line: 2191, column: 26, scope: !4850)
!4929 = !DILocation(line: 2191, column: 3, scope: !4850)
!4930 = !DILocation(line: 2192, column: 28, scope: !4850)
!4931 = !DILocation(line: 2192, column: 3, scope: !4850)
!4932 = !DILocation(line: 2194, column: 18, scope: !4850)
!4933 = !DILocation(line: 2194, column: 25, scope: !4850)
!4934 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !4855)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !4845, line: 379, column: 2)
!4936 = distinct !DILexicalBlock(scope: !4853, file: !4845, line: 379, column: 2)
!4937 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !4855)
!4938 = distinct !DILexicalBlock(scope: !4936, file: !4845, line: 379, column: 2)
!4939 = !{i32 -2145399063}
!4940 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !4855)
!4941 = distinct !DILexicalBlock(scope: !4938, file: !4845, line: 379, column: 2)
!4942 = !DILocation(line: 2195, column: 3, scope: !4850)
!4943 = !DILocation(line: 2195, column: 8, scope: !4850)
!4944 = !DILocation(line: 2195, column: 16, scope: !4850)
!4945 = !DILocation(line: 2196, column: 3, scope: !4850)
!4946 = !DILocation(line: 2196, column: 8, scope: !4850)
!4947 = !DILocation(line: 2196, column: 18, scope: !4850)
!4948 = !DILocation(line: 2197, column: 3, scope: !4850)
!4949 = !DILocation(line: 2197, column: 8, scope: !4850)
!4950 = !DILocation(line: 2197, column: 16, scope: !4850)
!4951 = !DILocation(line: 2198, column: 20, scope: !4850)
!4952 = !DILocation(line: 2198, column: 27, scope: !4850)
!4953 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !4849)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !4845, line: 404, column: 2)
!4955 = distinct !DILexicalBlock(scope: !4844, file: !4845, line: 404, column: 2)
!4956 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !4849)
!4957 = distinct !DILexicalBlock(scope: !4955, file: !4845, line: 404, column: 2)
!4958 = !{i32 -2145397315}
!4959 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !4849)
!4960 = distinct !DILexicalBlock(scope: !4957, file: !4845, line: 404, column: 2)
!4961 = !DILocation(line: 2203, column: 14, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2203, column: 3)
!4963 = !DILocation(line: 2203, column: 8, scope: !4962)
!4964 = !DILocation(line: 2203, column: 20, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 2203, column: 3)
!4966 = !DILocation(line: 2203, column: 25, scope: !4965)
!4967 = !DILocation(line: 2203, column: 34, scope: !4965)
!4968 = !DILocation(line: 2203, column: 41, scope: !4965)
!4969 = !DILocation(line: 2203, column: 44, scope: !4965)
!4970 = !DILocation(line: 0, scope: !4965)
!4971 = !DILocation(line: 2203, column: 3, scope: !4962)
!4972 = !DILocation(line: 2204, column: 4, scope: !4965)
!4973 = !DILocation(line: 2203, column: 56, scope: !4965)
!4974 = !DILocation(line: 2203, column: 3, scope: !4965)
!4975 = distinct !{!4975, !4971, !4976}
!4976 = !DILocation(line: 2204, column: 13, scope: !4962)
!4977 = !DILocation(line: 2205, column: 8, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 2205, column: 7)
!4979 = !DILocation(line: 2205, column: 7, scope: !4850)
!4980 = !DILocation(line: 2206, column: 4, scope: !4978)
!4981 = !DILocation(line: 2209, column: 3, scope: !4850)
!4982 = !DILocation(line: 2209, column: 8, scope: !4850)
!4983 = !DILocation(line: 2209, column: 17, scope: !4850)
!4984 = !DILocation(line: 2210, column: 2, scope: !4850)
!4985 = !DILocation(line: 2215, column: 6, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 2215, column: 6)
!4987 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 2215, column: 6)
!4988 = !DILocation(line: 2215, column: 6, scope: !4987)
!4989 = !DILocation(line: 2215, column: 6, scope: !4842)
!4990 = !DILocation(line: 2216, column: 16, scope: !4987)
!4991 = !DILocation(line: 2216, column: 23, scope: !4987)
!4992 = !DILocation(line: 2216, column: 3, scope: !4987)
!4993 = !DILocation(line: 2218, column: 17, scope: !4842)
!4994 = !DILocation(line: 2218, column: 2, scope: !4842)
!4995 = !DILabel(scope: !4842, name: "unlock", file: !3, line: 2219)
!4996 = !DILocation(line: 2219, column: 1, scope: !4842)
!4997 = !DILocation(line: 2220, column: 16, scope: !4842)
!4998 = !DILocation(line: 2220, column: 22, scope: !4842)
!4999 = !DILocation(line: 2220, column: 2, scope: !4842)
!5000 = !DILocation(line: 2222, column: 2, scope: !4842)
!5001 = !DILocation(line: 2223, column: 1, scope: !4842)
!5002 = distinct !DISubprogram(name: "serial_match_port", scope: !3, file: !3, line: 2153, type: !5003, scopeLine: 2154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5003 = !DISubroutineType(types: !5004)
!5004 = !{!220, !308, !185}
!5005 = !DILocalVariable(name: "dev", arg: 1, scope: !5002, file: !3, line: 2153, type: !308)
!5006 = !DILocation(line: 2153, column: 45, scope: !5002)
!5007 = !DILocalVariable(name: "data", arg: 2, scope: !5002, file: !3, line: 2153, type: !185)
!5008 = !DILocation(line: 2153, column: 56, scope: !5002)
!5009 = !DILocalVariable(name: "match", scope: !5002, file: !3, line: 2155, type: !5010)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!5011 = !DILocation(line: 2155, column: 21, scope: !5002)
!5012 = !DILocation(line: 2155, column: 29, scope: !5002)
!5013 = !DILocalVariable(name: "tty_drv", scope: !5002, file: !3, line: 2156, type: !3903)
!5014 = !DILocation(line: 2156, column: 21, scope: !5002)
!5015 = !DILocation(line: 2156, column: 31, scope: !5002)
!5016 = !DILocation(line: 2156, column: 38, scope: !5002)
!5017 = !DILocation(line: 2156, column: 46, scope: !5002)
!5018 = !DILocalVariable(name: "devt", scope: !5002, file: !3, line: 2157, type: !583)
!5019 = !DILocation(line: 2157, column: 8, scope: !5002)
!5020 = !DILocation(line: 2157, column: 15, scope: !5002)
!5021 = !DILocation(line: 2158, column: 3, scope: !5002)
!5022 = !DILocation(line: 2158, column: 10, scope: !5002)
!5023 = !DILocation(line: 2158, column: 16, scope: !5002)
!5024 = !DILocation(line: 2157, column: 59, scope: !5002)
!5025 = !DILocation(line: 2160, column: 9, scope: !5002)
!5026 = !DILocation(line: 2160, column: 14, scope: !5002)
!5027 = !DILocation(line: 2160, column: 22, scope: !5002)
!5028 = !DILocation(line: 2160, column: 19, scope: !5002)
!5029 = !DILocation(line: 2160, column: 2, scope: !5002)
!5030 = distinct !DISubprogram(name: "device_may_wakeup", scope: !3615, file: !3615, line: 82, type: !5031, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!560, !308}
!5033 = !DILocalVariable(name: "dev", arg: 1, scope: !5030, file: !3615, line: 82, type: !308)
!5034 = !DILocation(line: 82, column: 53, scope: !5030)
!5035 = !DILocation(line: 84, column: 9, scope: !5030)
!5036 = !DILocation(line: 84, column: 14, scope: !5030)
!5037 = !DILocation(line: 84, column: 20, scope: !5030)
!5038 = !DILocation(line: 84, column: 31, scope: !5030)
!5039 = !DILocation(line: 84, column: 36, scope: !5030)
!5040 = !DILocation(line: 84, column: 41, scope: !5030)
!5041 = !DILocation(line: 84, column: 47, scope: !5030)
!5042 = !DILocation(line: 84, column: 35, scope: !5030)
!5043 = !DILocation(line: 84, column: 34, scope: !5030)
!5044 = !DILocation(line: 0, scope: !5030)
!5045 = !DILocation(line: 84, column: 2, scope: !5030)
!5046 = distinct !DISubprogram(name: "enable_irq_wake", scope: !114, file: !114, line: 465, type: !5047, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!220, !7}
!5049 = !DILocalVariable(name: "irq", arg: 1, scope: !5046, file: !114, line: 465, type: !7)
!5050 = !DILocation(line: 465, column: 48, scope: !5046)
!5051 = !DILocation(line: 467, column: 26, scope: !5046)
!5052 = !DILocation(line: 467, column: 9, scope: !5046)
!5053 = !DILocation(line: 467, column: 2, scope: !5046)
!5054 = distinct !DISubprogram(name: "tty_port_initialized", scope: !200, file: !200, line: 664, type: !5055, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!560, !3947}
!5057 = !DILocalVariable(name: "port", arg: 1, scope: !5054, file: !200, line: 664, type: !3947)
!5058 = !DILocation(line: 664, column: 58, scope: !5054)
!5059 = !DILocation(line: 666, column: 41, scope: !5054)
!5060 = !DILocation(line: 666, column: 47, scope: !5054)
!5061 = !DILocation(line: 666, column: 9, scope: !5054)
!5062 = !DILocation(line: 666, column: 2, scope: !5054)
!5063 = distinct !DISubprogram(name: "tty_port_set_suspended", scope: !200, file: !200, line: 656, type: !5064, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{null, !3947, !560}
!5066 = !DILocalVariable(name: "port", arg: 1, scope: !5063, file: !200, line: 656, type: !3947)
!5067 = !DILocation(line: 656, column: 60, scope: !5063)
!5068 = !DILocalVariable(name: "val", arg: 2, scope: !5063, file: !200, line: 656, type: !560)
!5069 = !DILocation(line: 656, column: 71, scope: !5063)
!5070 = !DILocation(line: 658, column: 6, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5063, file: !200, line: 658, column: 6)
!5072 = !DILocation(line: 658, column: 6, scope: !5063)
!5073 = !DILocation(line: 659, column: 32, scope: !5071)
!5074 = !DILocation(line: 659, column: 38, scope: !5071)
!5075 = !DILocation(line: 659, column: 3, scope: !5071)
!5076 = !DILocation(line: 661, column: 34, scope: !5071)
!5077 = !DILocation(line: 661, column: 40, scope: !5071)
!5078 = !DILocation(line: 661, column: 3, scope: !5071)
!5079 = !DILocation(line: 662, column: 1, scope: !5063)
!5080 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !200, file: !200, line: 669, type: !5064, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5081 = !DILocalVariable(name: "port", arg: 1, scope: !5080, file: !200, line: 669, type: !3947)
!5082 = !DILocation(line: 669, column: 62, scope: !5080)
!5083 = !DILocalVariable(name: "val", arg: 2, scope: !5080, file: !200, line: 669, type: !560)
!5084 = !DILocation(line: 669, column: 73, scope: !5080)
!5085 = !DILocation(line: 671, column: 6, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5080, file: !200, line: 671, column: 6)
!5087 = !DILocation(line: 671, column: 6, scope: !5080)
!5088 = !DILocation(line: 672, column: 34, scope: !5086)
!5089 = !DILocation(line: 672, column: 40, scope: !5086)
!5090 = !DILocation(line: 672, column: 3, scope: !5086)
!5091 = !DILocation(line: 674, column: 36, scope: !5086)
!5092 = !DILocation(line: 674, column: 42, scope: !5086)
!5093 = !DILocation(line: 674, column: 3, scope: !5086)
!5094 = !DILocation(line: 675, column: 1, scope: !5080)
!5095 = distinct !DISubprogram(name: "uart_change_pm", scope: !3, file: !3, line: 2136, type: !5096, scopeLine: 2138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5096 = !DISubroutineType(types: !5097)
!5097 = !{null, !195, !93}
!5098 = !DILocalVariable(name: "state", arg: 1, scope: !5095, file: !3, line: 2136, type: !195)
!5099 = !DILocation(line: 2136, column: 47, scope: !5095)
!5100 = !DILocalVariable(name: "pm_state", arg: 2, scope: !5095, file: !3, line: 2137, type: !93)
!5101 = !DILocation(line: 2137, column: 26, scope: !5095)
!5102 = !DILocalVariable(name: "port", scope: !5095, file: !3, line: 2139, type: !4276)
!5103 = !DILocation(line: 2139, column: 20, scope: !5095)
!5104 = !DILocation(line: 2139, column: 43, scope: !5095)
!5105 = !DILocation(line: 2139, column: 27, scope: !5095)
!5106 = !DILocation(line: 2141, column: 6, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 2141, column: 6)
!5108 = !DILocation(line: 2141, column: 13, scope: !5107)
!5109 = !DILocation(line: 2141, column: 25, scope: !5107)
!5110 = !DILocation(line: 2141, column: 22, scope: !5107)
!5111 = !DILocation(line: 2141, column: 6, scope: !5095)
!5112 = !DILocation(line: 2142, column: 7, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2142, column: 7)
!5114 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 2141, column: 35)
!5115 = !DILocation(line: 2142, column: 12, scope: !5113)
!5116 = !DILocation(line: 2142, column: 15, scope: !5113)
!5117 = !DILocation(line: 2142, column: 21, scope: !5113)
!5118 = !DILocation(line: 2142, column: 26, scope: !5113)
!5119 = !DILocation(line: 2142, column: 7, scope: !5114)
!5120 = !DILocation(line: 2143, column: 4, scope: !5113)
!5121 = !DILocation(line: 2143, column: 10, scope: !5113)
!5122 = !DILocation(line: 2143, column: 15, scope: !5113)
!5123 = !DILocation(line: 2143, column: 18, scope: !5113)
!5124 = !DILocation(line: 2143, column: 24, scope: !5113)
!5125 = !DILocation(line: 2143, column: 34, scope: !5113)
!5126 = !DILocation(line: 2143, column: 41, scope: !5113)
!5127 = !DILocation(line: 2144, column: 21, scope: !5114)
!5128 = !DILocation(line: 2144, column: 3, scope: !5114)
!5129 = !DILocation(line: 2144, column: 10, scope: !5114)
!5130 = !DILocation(line: 2144, column: 19, scope: !5114)
!5131 = !DILocation(line: 2145, column: 2, scope: !5114)
!5132 = !DILocation(line: 2146, column: 1, scope: !5095)
!5133 = distinct !DISubprogram(name: "uart_resume_port", scope: !3, file: !3, line: 2225, type: !4501, scopeLine: 2226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5134 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !5135)
!5135 = distinct !DILocation(line: 2288, column: 5, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 2282, column: 18)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 2282, column: 8)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2277, column: 56)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 2277, column: 7)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 2269, column: 32)
!5141 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2269, column: 6)
!5142 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !5143)
!5143 = distinct !DILocation(line: 2285, column: 5, scope: !5136)
!5144 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !5145)
!5145 = distinct !DILocation(line: 2276, column: 3, scope: !5140)
!5146 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !5147)
!5147 = distinct !DILocation(line: 2274, column: 3, scope: !5140)
!5148 = !DILocalVariable(name: "drv", arg: 1, scope: !5133, file: !3, line: 2225, type: !4503)
!5149 = !DILocation(line: 2225, column: 42, scope: !5133)
!5150 = !DILocalVariable(name: "uport", arg: 2, scope: !5133, file: !3, line: 2225, type: !4276)
!5151 = !DILocation(line: 2225, column: 65, scope: !5133)
!5152 = !DILocalVariable(name: "state", scope: !5133, file: !3, line: 2227, type: !195)
!5153 = !DILocation(line: 2227, column: 21, scope: !5133)
!5154 = !DILocation(line: 2227, column: 29, scope: !5133)
!5155 = !DILocation(line: 2227, column: 34, scope: !5133)
!5156 = !DILocation(line: 2227, column: 42, scope: !5133)
!5157 = !DILocation(line: 2227, column: 49, scope: !5133)
!5158 = !DILocation(line: 2227, column: 40, scope: !5133)
!5159 = !DILocalVariable(name: "port", scope: !5133, file: !3, line: 2228, type: !3947)
!5160 = !DILocation(line: 2228, column: 19, scope: !5133)
!5161 = !DILocation(line: 2228, column: 27, scope: !5133)
!5162 = !DILocation(line: 2228, column: 34, scope: !5133)
!5163 = !DILocalVariable(name: "tty_dev", scope: !5133, file: !3, line: 2229, type: !308)
!5164 = !DILocation(line: 2229, column: 17, scope: !5133)
!5165 = !DILocalVariable(name: "match", scope: !5133, file: !3, line: 2230, type: !4874)
!5166 = !DILocation(line: 2230, column: 20, scope: !5133)
!5167 = !DILocation(line: 2230, column: 28, scope: !5133)
!5168 = !DILocation(line: 2230, column: 29, scope: !5133)
!5169 = !DILocation(line: 2230, column: 36, scope: !5133)
!5170 = !DILocalVariable(name: "termios", scope: !5133, file: !3, line: 2231, type: !3921)
!5171 = !DILocation(line: 2231, column: 18, scope: !5133)
!5172 = !DILocation(line: 2233, column: 14, scope: !5133)
!5173 = !DILocation(line: 2233, column: 20, scope: !5133)
!5174 = !DILocation(line: 2233, column: 2, scope: !5133)
!5175 = !DILocation(line: 2235, column: 30, scope: !5133)
!5176 = !DILocation(line: 2235, column: 37, scope: !5133)
!5177 = !DILocation(line: 2235, column: 42, scope: !5133)
!5178 = !DILocation(line: 2235, column: 12, scope: !5133)
!5179 = !DILocation(line: 2235, column: 10, scope: !5133)
!5180 = !DILocation(line: 2236, column: 7, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2236, column: 6)
!5182 = !DILocation(line: 2236, column: 14, scope: !5181)
!5183 = !DILocation(line: 2236, column: 24, scope: !5181)
!5184 = !DILocation(line: 2236, column: 45, scope: !5181)
!5185 = !DILocation(line: 2236, column: 27, scope: !5181)
!5186 = !DILocation(line: 2236, column: 6, scope: !5133)
!5187 = !DILocation(line: 2237, column: 44, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 2237, column: 7)
!5189 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 2236, column: 55)
!5190 = !DILocation(line: 2237, column: 51, scope: !5188)
!5191 = !DILocation(line: 2237, column: 26, scope: !5188)
!5192 = !DILocation(line: 2237, column: 7, scope: !5188)
!5193 = !DILocation(line: 2237, column: 7, scope: !5189)
!5194 = !DILocation(line: 2238, column: 21, scope: !5188)
!5195 = !DILocation(line: 2238, column: 28, scope: !5188)
!5196 = !DILocation(line: 2238, column: 4, scope: !5188)
!5197 = !DILocation(line: 2239, column: 14, scope: !5189)
!5198 = !DILocation(line: 2239, column: 3, scope: !5189)
!5199 = !DILocation(line: 2240, column: 17, scope: !5189)
!5200 = !DILocation(line: 2240, column: 23, scope: !5189)
!5201 = !DILocation(line: 2240, column: 3, scope: !5189)
!5202 = !DILocation(line: 2241, column: 3, scope: !5189)
!5203 = !DILocation(line: 2243, column: 13, scope: !5133)
!5204 = !DILocation(line: 2243, column: 2, scope: !5133)
!5205 = !DILocation(line: 2244, column: 2, scope: !5133)
!5206 = !DILocation(line: 2244, column: 9, scope: !5133)
!5207 = !DILocation(line: 2244, column: 19, scope: !5133)
!5208 = !DILocation(line: 2249, column: 6, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2249, column: 6)
!5210 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 2249, column: 6)
!5211 = !DILocation(line: 2249, column: 6, scope: !5210)
!5212 = !DILocation(line: 2249, column: 6, scope: !5133)
!5213 = !DILocation(line: 2253, column: 3, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2249, column: 27)
!5215 = !DILocation(line: 2254, column: 21, scope: !5214)
!5216 = !DILocation(line: 2254, column: 28, scope: !5214)
!5217 = !DILocation(line: 2254, column: 34, scope: !5214)
!5218 = !DILocation(line: 2254, column: 11, scope: !5214)
!5219 = !DILocation(line: 2254, column: 19, scope: !5214)
!5220 = !DILocation(line: 2259, column: 7, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 2259, column: 7)
!5222 = !DILocation(line: 2259, column: 13, scope: !5221)
!5223 = !DILocation(line: 2259, column: 17, scope: !5221)
!5224 = !DILocation(line: 2259, column: 28, scope: !5221)
!5225 = !DILocation(line: 2259, column: 36, scope: !5221)
!5226 = !DILocation(line: 2259, column: 7, scope: !5214)
!5227 = !DILocation(line: 2260, column: 14, scope: !5221)
!5228 = !DILocation(line: 2260, column: 20, scope: !5221)
!5229 = !DILocation(line: 2260, column: 25, scope: !5221)
!5230 = !DILocation(line: 2260, column: 4, scope: !5221)
!5231 = !DILocation(line: 2262, column: 7, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 2262, column: 7)
!5233 = !DILocation(line: 2262, column: 7, scope: !5214)
!5234 = !DILocation(line: 2263, column: 19, scope: !5232)
!5235 = !DILocation(line: 2263, column: 4, scope: !5232)
!5236 = !DILocation(line: 2264, column: 3, scope: !5214)
!5237 = !DILocation(line: 2264, column: 10, scope: !5214)
!5238 = !DILocation(line: 2264, column: 15, scope: !5214)
!5239 = !DILocation(line: 2264, column: 27, scope: !5214)
!5240 = !DILocation(line: 2265, column: 7, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 2265, column: 7)
!5242 = !DILocation(line: 2265, column: 7, scope: !5214)
!5243 = !DILocation(line: 2266, column: 18, scope: !5241)
!5244 = !DILocation(line: 2266, column: 25, scope: !5241)
!5245 = !DILocation(line: 2266, column: 4, scope: !5241)
!5246 = !DILocation(line: 2267, column: 2, scope: !5214)
!5247 = !DILocation(line: 2269, column: 25, scope: !5141)
!5248 = !DILocation(line: 2269, column: 6, scope: !5141)
!5249 = !DILocation(line: 2269, column: 6, scope: !5133)
!5250 = !DILocalVariable(name: "ops", scope: !5140, file: !3, line: 2270, type: !4424)
!5251 = !DILocation(line: 2270, column: 26, scope: !5140)
!5252 = !DILocation(line: 2270, column: 32, scope: !5140)
!5253 = !DILocation(line: 2270, column: 39, scope: !5140)
!5254 = !DILocalVariable(name: "ret", scope: !5140, file: !3, line: 2271, type: !220)
!5255 = !DILocation(line: 2271, column: 7, scope: !5140)
!5256 = !DILocation(line: 2273, column: 18, scope: !5140)
!5257 = !DILocation(line: 2273, column: 3, scope: !5140)
!5258 = !DILocation(line: 2274, column: 18, scope: !5140)
!5259 = !DILocation(line: 2274, column: 25, scope: !5140)
!5260 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !5147)
!5261 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !5147)
!5262 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !5147)
!5263 = !DILocation(line: 2275, column: 3, scope: !5140)
!5264 = !DILocation(line: 2275, column: 8, scope: !5140)
!5265 = !DILocation(line: 2275, column: 18, scope: !5140)
!5266 = !DILocation(line: 2276, column: 20, scope: !5140)
!5267 = !DILocation(line: 2276, column: 27, scope: !5140)
!5268 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !5145)
!5269 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !5145)
!5270 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !5145)
!5271 = !DILocation(line: 2277, column: 7, scope: !5139)
!5272 = !DILocation(line: 2277, column: 31, scope: !5139)
!5273 = !DILocation(line: 2277, column: 35, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 2277, column: 35)
!5275 = !DILocation(line: 2277, column: 35, scope: !5139)
!5276 = !DILocation(line: 2277, column: 7, scope: !5140)
!5277 = !DILocalVariable(name: "tty", scope: !5138, file: !3, line: 2279, type: !293)
!5278 = !DILocation(line: 2279, column: 23, scope: !5138)
!5279 = !DILocation(line: 2279, column: 29, scope: !5138)
!5280 = !DILocation(line: 2279, column: 35, scope: !5138)
!5281 = !DILocation(line: 2281, column: 10, scope: !5138)
!5282 = !DILocation(line: 2281, column: 15, scope: !5138)
!5283 = !DILocation(line: 2281, column: 23, scope: !5138)
!5284 = !DILocation(line: 2281, column: 8, scope: !5138)
!5285 = !DILocation(line: 2282, column: 8, scope: !5137)
!5286 = !DILocation(line: 2282, column: 12, scope: !5137)
!5287 = !DILocation(line: 2282, column: 8, scope: !5138)
!5288 = !DILocation(line: 2283, column: 9, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 2283, column: 9)
!5290 = !DILocation(line: 2283, column: 9, scope: !5136)
!5291 = !DILocation(line: 2284, column: 24, scope: !5289)
!5292 = !DILocation(line: 2284, column: 29, scope: !5289)
!5293 = !DILocation(line: 2284, column: 6, scope: !5289)
!5294 = !DILocation(line: 2285, column: 20, scope: !5136)
!5295 = !DILocation(line: 2285, column: 27, scope: !5136)
!5296 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !5143)
!5297 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !5143)
!5298 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !5143)
!5299 = !DILocation(line: 2286, column: 5, scope: !5136)
!5300 = !DILocation(line: 2286, column: 10, scope: !5136)
!5301 = !DILocation(line: 2286, column: 20, scope: !5136)
!5302 = !DILocation(line: 2286, column: 27, scope: !5136)
!5303 = !DILocation(line: 2286, column: 34, scope: !5136)
!5304 = !DILocation(line: 2287, column: 5, scope: !5136)
!5305 = !DILocation(line: 2287, column: 10, scope: !5136)
!5306 = !DILocation(line: 2287, column: 19, scope: !5136)
!5307 = !DILocation(line: 2288, column: 22, scope: !5136)
!5308 = !DILocation(line: 2288, column: 29, scope: !5136)
!5309 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !5135)
!5310 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !5135)
!5311 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !5135)
!5312 = !DILocation(line: 2289, column: 30, scope: !5136)
!5313 = !DILocation(line: 2289, column: 5, scope: !5136)
!5314 = !DILocation(line: 2290, column: 4, scope: !5136)
!5315 = !DILocation(line: 2296, column: 19, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 2290, column: 11)
!5317 = !DILocation(line: 2296, column: 24, scope: !5316)
!5318 = !DILocation(line: 2296, column: 5, scope: !5316)
!5319 = !DILocation(line: 2298, column: 3, scope: !5138)
!5320 = !DILocation(line: 2300, column: 26, scope: !5140)
!5321 = !DILocation(line: 2300, column: 3, scope: !5140)
!5322 = !DILocation(line: 2301, column: 2, scope: !5140)
!5323 = !DILocation(line: 2303, column: 16, scope: !5133)
!5324 = !DILocation(line: 2303, column: 22, scope: !5133)
!5325 = !DILocation(line: 2303, column: 2, scope: !5133)
!5326 = !DILocation(line: 2305, column: 2, scope: !5133)
!5327 = !DILocation(line: 2306, column: 1, scope: !5133)
!5328 = distinct !DISubprogram(name: "irqd_is_wakeup_set", scope: !121, file: !121, line: 332, type: !5329, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5329 = !DISubroutineType(types: !5330)
!5330 = !{!560, !5331}
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !121, line: 175, size: 448, elements: !5333)
!5333 = !{!5334, !5335, !5336, !5337, !5349, !5429, !5430, !5431}
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5332, file: !121, line: 176, baseType: !487, size: 32)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5332, file: !121, line: 177, baseType: !7, size: 32, offset: 32)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !5332, file: !121, line: 178, baseType: !187, size: 64, offset: 64)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !5332, file: !121, line: 179, baseType: !5338, size: 64, offset: 128)
!5338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5339, size: 64)
!5339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !121, line: 145, size: 256, elements: !5340)
!5340 = !{!5341, !5342, !5343, !5346}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !5339, file: !121, line: 146, baseType: !7, size: 32)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !5339, file: !121, line: 150, baseType: !185, size: 64, offset: 64)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !5339, file: !121, line: 151, baseType: !5344, size: 64, offset: 128)
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !121, line: 127, flags: DIFlagFwdDecl)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !5339, file: !121, line: 152, baseType: !5347, size: 64, offset: 192)
!5347 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1451, line: 756, baseType: !5348)
!5348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 64, elements: !1456)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !5332, file: !121, line: 180, baseType: !5350, size: 64, offset: 192)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !121, line: 503, size: 2304, elements: !5352)
!5352 = !{!5353, !5354, !5355, !5359, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5376, !5380, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5397, !5398, !5399, !5405, !5406, !5410, !5414, !5418, !5422, !5426, !5427, !5428}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !5351, file: !121, line: 504, baseType: !308, size: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5351, file: !121, line: 505, baseType: !316, size: 64, offset: 64)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !5351, file: !121, line: 506, baseType: !5356, size: 64, offset: 128)
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 64)
!5357 = !DISubroutineType(types: !5358)
!5358 = !{!7, !5331}
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !5351, file: !121, line: 507, baseType: !5360, size: 64, offset: 192)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = !DISubroutineType(types: !5362)
!5362 = !{null, !5331}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !5351, file: !121, line: 508, baseType: !5360, size: 64, offset: 256)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !5351, file: !121, line: 509, baseType: !5360, size: 64, offset: 320)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !5351, file: !121, line: 511, baseType: !5360, size: 64, offset: 384)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !5351, file: !121, line: 512, baseType: !5360, size: 64, offset: 448)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !5351, file: !121, line: 513, baseType: !5360, size: 64, offset: 512)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !5351, file: !121, line: 514, baseType: !5360, size: 64, offset: 576)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !5351, file: !121, line: 515, baseType: !5360, size: 64, offset: 640)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !5351, file: !121, line: 517, baseType: !5371, size: 64, offset: 704)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!220, !5331, !5374, !560}
!5374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5375, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !5351, file: !121, line: 518, baseType: !5377, size: 64, offset: 768)
!5377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5378, size: 64)
!5378 = !DISubroutineType(types: !5379)
!5379 = !{!220, !5331}
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !5351, file: !121, line: 519, baseType: !5381, size: 64, offset: 832)
!5381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5382, size: 64)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!220, !5331, !7}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !5351, file: !121, line: 520, baseType: !5381, size: 64, offset: 896)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !5351, file: !121, line: 522, baseType: !5360, size: 64, offset: 960)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !5351, file: !121, line: 523, baseType: !5360, size: 64, offset: 1024)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !5351, file: !121, line: 525, baseType: !5360, size: 64, offset: 1088)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !5351, file: !121, line: 526, baseType: !5360, size: 64, offset: 1152)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !5351, file: !121, line: 528, baseType: !5360, size: 64, offset: 1216)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !5351, file: !121, line: 529, baseType: !5360, size: 64, offset: 1280)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !5351, file: !121, line: 530, baseType: !5360, size: 64, offset: 1344)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !5351, file: !121, line: 532, baseType: !5360, size: 64, offset: 1408)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !5351, file: !121, line: 534, baseType: !5394, size: 64, offset: 1472)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{null, !5331, !782}
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !5351, file: !121, line: 535, baseType: !5377, size: 64, offset: 1536)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !5351, file: !121, line: 536, baseType: !5360, size: 64, offset: 1600)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !5351, file: !121, line: 538, baseType: !5400, size: 64, offset: 1664)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{null, !5331, !5403}
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !121, line: 29, flags: DIFlagFwdDecl)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !5351, file: !121, line: 539, baseType: !5400, size: 64, offset: 1728)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !5351, file: !121, line: 541, baseType: !5407, size: 64, offset: 1792)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!220, !5331, !113, !987}
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !5351, file: !121, line: 542, baseType: !5411, size: 64, offset: 1856)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!220, !5331, !113, !560}
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !5351, file: !121, line: 544, baseType: !5415, size: 64, offset: 1920)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!220, !5331, !185}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !5351, file: !121, line: 546, baseType: !5419, size: 64, offset: 1984)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !5331, !7}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !5351, file: !121, line: 547, baseType: !5423, size: 64, offset: 2048)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{null, !5331, !5374}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !5351, file: !121, line: 549, baseType: !5377, size: 64, offset: 2112)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !5351, file: !121, line: 550, baseType: !5360, size: 64, offset: 2176)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5351, file: !121, line: 552, baseType: !187, size: 64, offset: 2240)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !5332, file: !121, line: 181, baseType: !3713, size: 64, offset: 256)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !5332, file: !121, line: 183, baseType: !5331, size: 64, offset: 320)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !5332, file: !121, line: 185, baseType: !185, size: 64, offset: 384)
!5432 = !DILocalVariable(name: "d", arg: 1, scope: !5328, file: !121, line: 332, type: !5331)
!5433 = !DILocation(line: 332, column: 56, scope: !5328)
!5434 = !DILocation(line: 334, column: 9, scope: !5328)
!5435 = !DILocation(line: 334, column: 28, scope: !5328)
!5436 = !DILocation(line: 334, column: 2, scope: !5328)
!5437 = distinct !DISubprogram(name: "disable_irq_wake", scope: !114, file: !114, line: 470, type: !5047, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5438 = !DILocalVariable(name: "irq", arg: 1, scope: !5437, file: !114, line: 470, type: !7)
!5439 = !DILocation(line: 470, column: 49, scope: !5437)
!5440 = !DILocation(line: 472, column: 26, scope: !5437)
!5441 = !DILocation(line: 472, column: 9, scope: !5437)
!5442 = !DILocation(line: 472, column: 2, scope: !5437)
!5443 = distinct !DISubprogram(name: "tty_port_suspended", scope: !200, file: !200, line: 651, type: !5055, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5444 = !DILocalVariable(name: "port", arg: 1, scope: !5443, file: !200, line: 651, type: !3947)
!5445 = !DILocation(line: 651, column: 56, scope: !5443)
!5446 = !DILocation(line: 653, column: 39, scope: !5443)
!5447 = !DILocation(line: 653, column: 45, scope: !5443)
!5448 = !DILocation(line: 653, column: 9, scope: !5443)
!5449 = !DILocation(line: 653, column: 2, scope: !5443)
!5450 = distinct !DISubprogram(name: "uart_change_speed", scope: !3, file: !3, line: 502, type: !5451, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{null, !293, !195, !3950}
!5453 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !5454)
!5454 = distinct !DILocation(line: 544, column: 2, scope: !5450)
!5455 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !5456)
!5456 = distinct !DILocation(line: 522, column: 2, scope: !5450)
!5457 = !DILocalVariable(name: "tty", arg: 1, scope: !5450, file: !3, line: 502, type: !293)
!5458 = !DILocation(line: 502, column: 50, scope: !5450)
!5459 = !DILocalVariable(name: "state", arg: 2, scope: !5450, file: !3, line: 502, type: !195)
!5460 = !DILocation(line: 502, column: 74, scope: !5450)
!5461 = !DILocalVariable(name: "old_termios", arg: 3, scope: !5450, file: !3, line: 503, type: !3950)
!5462 = !DILocation(line: 503, column: 23, scope: !5450)
!5463 = !DILocalVariable(name: "uport", scope: !5450, file: !3, line: 505, type: !4276)
!5464 = !DILocation(line: 505, column: 20, scope: !5450)
!5465 = !DILocation(line: 505, column: 44, scope: !5450)
!5466 = !DILocation(line: 505, column: 28, scope: !5450)
!5467 = !DILocalVariable(name: "termios", scope: !5450, file: !3, line: 506, type: !3950)
!5468 = !DILocation(line: 506, column: 19, scope: !5450)
!5469 = !DILocalVariable(name: "hw_stopped", scope: !5450, file: !3, line: 507, type: !220)
!5470 = !DILocation(line: 507, column: 6, scope: !5450)
!5471 = !DILocation(line: 513, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 513, column: 6)
!5473 = !DILocation(line: 513, column: 11, scope: !5472)
!5474 = !DILocation(line: 513, column: 14, scope: !5472)
!5475 = !DILocation(line: 513, column: 21, scope: !5472)
!5476 = !DILocation(line: 513, column: 26, scope: !5472)
!5477 = !DILocation(line: 513, column: 6, scope: !5450)
!5478 = !DILocation(line: 514, column: 3, scope: !5472)
!5479 = !DILocation(line: 516, column: 13, scope: !5450)
!5480 = !DILocation(line: 516, column: 18, scope: !5450)
!5481 = !DILocation(line: 516, column: 10, scope: !5450)
!5482 = !DILocation(line: 517, column: 2, scope: !5450)
!5483 = !DILocation(line: 517, column: 9, scope: !5450)
!5484 = !DILocation(line: 517, column: 14, scope: !5450)
!5485 = !DILocation(line: 517, column: 26, scope: !5450)
!5486 = !DILocation(line: 517, column: 33, scope: !5450)
!5487 = !DILocation(line: 517, column: 42, scope: !5450)
!5488 = !DILocation(line: 522, column: 17, scope: !5450)
!5489 = !DILocation(line: 522, column: 24, scope: !5450)
!5490 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !5456)
!5491 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !5456)
!5492 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !5456)
!5493 = !DILocation(line: 523, column: 6, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 523, column: 6)
!5495 = !DILocation(line: 523, column: 15, scope: !5494)
!5496 = !DILocation(line: 523, column: 23, scope: !5494)
!5497 = !DILocation(line: 523, column: 6, scope: !5450)
!5498 = !DILocation(line: 524, column: 3, scope: !5494)
!5499 = !DILocation(line: 524, column: 10, scope: !5494)
!5500 = !DILocation(line: 524, column: 17, scope: !5494)
!5501 = !DILocation(line: 526, column: 3, scope: !5494)
!5502 = !DILocation(line: 526, column: 10, scope: !5494)
!5503 = !DILocation(line: 526, column: 17, scope: !5494)
!5504 = !DILocation(line: 528, column: 6, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 528, column: 6)
!5506 = !DILocation(line: 528, column: 15, scope: !5505)
!5507 = !DILocation(line: 528, column: 23, scope: !5505)
!5508 = !DILocation(line: 528, column: 6, scope: !5450)
!5509 = !DILocation(line: 529, column: 3, scope: !5505)
!5510 = !DILocation(line: 529, column: 10, scope: !5505)
!5511 = !DILocation(line: 529, column: 17, scope: !5505)
!5512 = !DILocation(line: 531, column: 3, scope: !5505)
!5513 = !DILocation(line: 531, column: 10, scope: !5505)
!5514 = !DILocation(line: 531, column: 17, scope: !5505)
!5515 = !DILocation(line: 534, column: 15, scope: !5450)
!5516 = !DILocation(line: 534, column: 22, scope: !5450)
!5517 = !DILocation(line: 534, column: 13, scope: !5450)
!5518 = !DILocation(line: 535, column: 40, scope: !5450)
!5519 = !DILocation(line: 535, column: 22, scope: !5450)
!5520 = !DILocation(line: 535, column: 47, scope: !5450)
!5521 = !DILocation(line: 536, column: 7, scope: !5450)
!5522 = !DILocation(line: 536, column: 14, scope: !5450)
!5523 = !DILocation(line: 536, column: 19, scope: !5450)
!5524 = !DILocation(line: 536, column: 29, scope: !5450)
!5525 = !DILocation(line: 536, column: 36, scope: !5450)
!5526 = !DILocation(line: 536, column: 5, scope: !5450)
!5527 = !DILocation(line: 0, scope: !5450)
!5528 = !DILocation(line: 535, column: 2, scope: !5450)
!5529 = !DILocation(line: 535, column: 9, scope: !5450)
!5530 = !DILocation(line: 535, column: 20, scope: !5450)
!5531 = !DILocation(line: 537, column: 6, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 537, column: 6)
!5533 = !DILocation(line: 537, column: 13, scope: !5532)
!5534 = !DILocation(line: 537, column: 6, scope: !5450)
!5535 = !DILocation(line: 538, column: 8, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 538, column: 7)
!5537 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 537, column: 25)
!5538 = !DILocation(line: 538, column: 7, scope: !5537)
!5539 = !DILocation(line: 539, column: 4, scope: !5536)
!5540 = !DILocation(line: 539, column: 11, scope: !5536)
!5541 = !DILocation(line: 539, column: 16, scope: !5536)
!5542 = !DILocation(line: 539, column: 24, scope: !5536)
!5543 = !DILocation(line: 540, column: 2, scope: !5537)
!5544 = !DILocation(line: 541, column: 7, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 541, column: 7)
!5546 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 540, column: 9)
!5547 = !DILocation(line: 541, column: 7, scope: !5546)
!5548 = !DILocation(line: 542, column: 17, scope: !5545)
!5549 = !DILocation(line: 542, column: 4, scope: !5545)
!5550 = !DILocation(line: 544, column: 19, scope: !5450)
!5551 = !DILocation(line: 544, column: 26, scope: !5450)
!5552 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !5454)
!5553 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !5454)
!5554 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !5454)
!5555 = !DILocation(line: 545, column: 1, scope: !5450)
!5556 = distinct !DISubprogram(name: "uart_shutdown", scope: !3, file: !3, line: 274, type: !5557, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{null, !293, !195}
!5559 = !DILocalVariable(name: "lock", arg: 1, scope: !5560, file: !4845, line: 407, type: !1161)
!5560 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4845, file: !4845, line: 407, type: !5561, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !1161, !187}
!5563 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !5564)
!5564 = distinct !DILocation(line: 318, column: 2, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 318, column: 2)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 318, column: 2)
!5567 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 318, column: 2)
!5568 = !DILocalVariable(name: "flags", arg: 2, scope: !5560, file: !4845, line: 407, type: !187)
!5569 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !5564)
!5570 = !DILocalVariable(name: "lock", arg: 1, scope: !5571, file: !4845, line: 327, type: !1161)
!5571 = distinct !DISubprogram(name: "spinlock_check", scope: !4845, file: !4845, line: 327, type: !5572, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{!5574, !1161}
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!5575 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !5576)
!5576 = distinct !DILocation(line: 315, column: 2, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 315, column: 2)
!5578 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 315, column: 2)
!5579 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 315, column: 2)
!5580 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 315, column: 2)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 315, column: 2)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 315, column: 2)
!5583 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 315, column: 2)
!5584 = !DILocalVariable(name: "tty", arg: 1, scope: !5556, file: !3, line: 274, type: !293)
!5585 = !DILocation(line: 274, column: 46, scope: !5556)
!5586 = !DILocalVariable(name: "state", arg: 2, scope: !5556, file: !3, line: 274, type: !195)
!5587 = !DILocation(line: 274, column: 70, scope: !5556)
!5588 = !DILocalVariable(name: "uport", scope: !5556, file: !3, line: 276, type: !4276)
!5589 = !DILocation(line: 276, column: 20, scope: !5556)
!5590 = !DILocation(line: 276, column: 44, scope: !5556)
!5591 = !DILocation(line: 276, column: 28, scope: !5556)
!5592 = !DILocalVariable(name: "port", scope: !5556, file: !3, line: 277, type: !3947)
!5593 = !DILocation(line: 277, column: 19, scope: !5556)
!5594 = !DILocation(line: 277, column: 27, scope: !5556)
!5595 = !DILocation(line: 277, column: 34, scope: !5556)
!5596 = !DILocalVariable(name: "flags", scope: !5556, file: !3, line: 278, type: !187)
!5597 = !DILocation(line: 278, column: 16, scope: !5556)
!5598 = !DILocalVariable(name: "xmit_buf", scope: !5556, file: !3, line: 279, type: !353)
!5599 = !DILocation(line: 279, column: 8, scope: !5556)
!5600 = !DILocation(line: 284, column: 6, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 284, column: 6)
!5602 = !DILocation(line: 284, column: 6, scope: !5556)
!5603 = !DILocation(line: 285, column: 26, scope: !5601)
!5604 = !DILocation(line: 285, column: 31, scope: !5601)
!5605 = !DILocation(line: 285, column: 3, scope: !5601)
!5606 = !DILocation(line: 287, column: 27, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 287, column: 6)
!5608 = !DILocation(line: 287, column: 6, scope: !5607)
!5609 = !DILocation(line: 287, column: 6, scope: !5556)
!5610 = !DILocation(line: 288, column: 28, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 287, column: 34)
!5612 = !DILocation(line: 288, column: 3, scope: !5611)
!5613 = !DILocation(line: 293, column: 7, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 293, column: 7)
!5615 = !DILocation(line: 293, column: 13, scope: !5614)
!5616 = !DILocation(line: 293, column: 16, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 293, column: 16)
!5618 = !DILocation(line: 293, column: 16, scope: !5614)
!5619 = !DILocation(line: 293, column: 36, scope: !5614)
!5620 = !DILocation(line: 293, column: 39, scope: !5614)
!5621 = !DILocation(line: 293, column: 7, scope: !5611)
!5622 = !DILocation(line: 294, column: 25, scope: !5614)
!5623 = !DILocation(line: 294, column: 30, scope: !5614)
!5624 = !DILocation(line: 294, column: 38, scope: !5614)
!5625 = !DILocation(line: 294, column: 4, scope: !5614)
!5626 = !DILocation(line: 294, column: 11, scope: !5614)
!5627 = !DILocation(line: 294, column: 17, scope: !5614)
!5628 = !DILocation(line: 294, column: 23, scope: !5614)
!5629 = !DILocation(line: 296, column: 8, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5611, file: !3, line: 296, column: 7)
!5631 = !DILocation(line: 296, column: 12, scope: !5630)
!5632 = !DILocation(line: 296, column: 15, scope: !5630)
!5633 = !DILocation(line: 296, column: 7, scope: !5611)
!5634 = !DILocation(line: 297, column: 22, scope: !5630)
!5635 = !DILocation(line: 297, column: 4, scope: !5630)
!5636 = !DILocation(line: 299, column: 22, scope: !5611)
!5637 = !DILocation(line: 299, column: 3, scope: !5611)
!5638 = !DILocation(line: 300, column: 2, scope: !5611)
!5639 = !DILocation(line: 307, column: 25, scope: !5556)
!5640 = !DILocation(line: 307, column: 2, scope: !5556)
!5641 = !DILocalVariable(name: "__uport", scope: !5583, file: !3, line: 315, type: !4276)
!5642 = !DILocation(line: 315, column: 2, scope: !5583)
!5643 = !DILocation(line: 315, column: 2, scope: !5582)
!5644 = !DILocation(line: 315, column: 2, scope: !5581)
!5645 = !DILocalVariable(name: "__dummy", scope: !5646, file: !3, line: 315, type: !187)
!5646 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 315, column: 2)
!5647 = !DILocation(line: 315, column: 2, scope: !5646)
!5648 = !DILocalVariable(name: "__dummy2", scope: !5646, file: !3, line: 315, type: !187)
!5649 = !DILocation(line: 315, column: 2, scope: !5580)
!5650 = !DILocation(line: 315, column: 2, scope: !5579)
!5651 = !DILocation(line: 315, column: 2, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5579, file: !3, line: 315, column: 2)
!5653 = !DILocalVariable(name: "__dummy", scope: !5654, file: !3, line: 315, type: !187)
!5654 = distinct !DILexicalBlock(scope: !5655, file: !3, line: 315, column: 2)
!5655 = distinct !DILexicalBlock(scope: !5652, file: !3, line: 315, column: 2)
!5656 = !DILocation(line: 315, column: 2, scope: !5654)
!5657 = !DILocalVariable(name: "__dummy2", scope: !5654, file: !3, line: 315, type: !187)
!5658 = !DILocation(line: 315, column: 2, scope: !5655)
!5659 = !DILocation(line: 315, column: 2, scope: !5578)
!5660 = !{i32 -2141556540}
!5661 = !DILocation(line: 315, column: 2, scope: !5577)
!5662 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !5576)
!5663 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !5576)
!5664 = !DILocation(line: 316, column: 13, scope: !5556)
!5665 = !DILocation(line: 316, column: 20, scope: !5556)
!5666 = !DILocation(line: 316, column: 25, scope: !5556)
!5667 = !DILocation(line: 316, column: 11, scope: !5556)
!5668 = !DILocation(line: 317, column: 2, scope: !5556)
!5669 = !DILocation(line: 317, column: 9, scope: !5556)
!5670 = !DILocation(line: 317, column: 14, scope: !5556)
!5671 = !DILocation(line: 317, column: 18, scope: !5556)
!5672 = !DILocalVariable(name: "__uport", scope: !5567, file: !3, line: 318, type: !4276)
!5673 = !DILocation(line: 318, column: 2, scope: !5567)
!5674 = !DILocation(line: 318, column: 2, scope: !5566)
!5675 = !DILocation(line: 318, column: 2, scope: !5565)
!5676 = !DILocalVariable(name: "__dummy", scope: !5677, file: !4845, line: 409, type: !187)
!5677 = distinct !DILexicalBlock(scope: !5678, file: !4845, line: 409, column: 2)
!5678 = distinct !DILexicalBlock(scope: !5560, file: !4845, line: 409, column: 2)
!5679 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !5564)
!5680 = !DILocalVariable(name: "__dummy2", scope: !5677, file: !4845, line: 409, type: !187)
!5681 = !DILocalVariable(name: "__dummy", scope: !5682, file: !4845, line: 409, type: !187)
!5682 = distinct !DILexicalBlock(scope: !5683, file: !4845, line: 409, column: 2)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !4845, line: 409, column: 2)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !4845, line: 409, column: 2)
!5685 = distinct !DILexicalBlock(scope: !5678, file: !4845, line: 409, column: 2)
!5686 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !5564)
!5687 = !DILocalVariable(name: "__dummy2", scope: !5682, file: !4845, line: 409, type: !187)
!5688 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !5564)
!5689 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !5564)
!5690 = distinct !DILexicalBlock(scope: !5685, file: !4845, line: 409, column: 2)
!5691 = !{i32 -2145396271}
!5692 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !5564)
!5693 = distinct !DILexicalBlock(scope: !5690, file: !4845, line: 409, column: 2)
!5694 = !DILocation(line: 320, column: 6, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 320, column: 6)
!5696 = !DILocation(line: 320, column: 6, scope: !5556)
!5697 = !DILocation(line: 321, column: 3, scope: !5695)
!5698 = !DILocation(line: 322, column: 1, scope: !5556)
!5699 = distinct !DISubprogram(name: "uart_register_driver", scope: !3, file: !3, line: 2533, type: !5700, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!220, !4503}
!5702 = !DILocalVariable(name: "drv", arg: 1, scope: !5699, file: !3, line: 2533, type: !4503)
!5703 = !DILocation(line: 2533, column: 46, scope: !5699)
!5704 = !DILocalVariable(name: "normal", scope: !5699, file: !3, line: 2535, type: !3903)
!5705 = !DILocation(line: 2535, column: 21, scope: !5699)
!5706 = !DILocalVariable(name: "i", scope: !5699, file: !3, line: 2536, type: !220)
!5707 = !DILocation(line: 2536, column: 6, scope: !5699)
!5708 = !DILocalVariable(name: "retval", scope: !5699, file: !3, line: 2536, type: !220)
!5709 = !DILocation(line: 2536, column: 9, scope: !5699)
!5710 = !DILocation(line: 2538, column: 2, scope: !5699)
!5711 = !DILocation(line: 2538, column: 2, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 2538, column: 2)
!5713 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2538, column: 2)
!5714 = !DILocation(line: 2538, column: 2, scope: !5713)
!5715 = !DILocation(line: 2538, column: 2, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 2538, column: 2)
!5717 = !DILocation(line: 2538, column: 2, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2538, column: 2)
!5719 = !DILocation(line: 2538, column: 2, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2538, column: 2)
!5721 = !{i32 -2141506955, i32 -2141506926, i32 -2141506880, i32 -2141506822, i32 -2141506768, i32 -2141506714, i32 -2141506659, i32 -2141506628}
!5722 = !DILocation(line: 2538, column: 2, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5724, file: !3, line: 2538, column: 2)
!5724 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 2538, column: 2)
!5725 = !{i32 -2141506172, i32 -2141506165, i32 -2141506111, i32 -2141506080, i32 -2141506050}
!5726 = !DILocation(line: 2538, column: 2, scope: !5724)
!5727 = !DILocation(line: 2544, column: 23, scope: !5699)
!5728 = !DILocation(line: 2544, column: 28, scope: !5699)
!5729 = !DILocation(line: 2544, column: 15, scope: !5699)
!5730 = !DILocation(line: 2544, column: 2, scope: !5699)
!5731 = !DILocation(line: 2544, column: 7, scope: !5699)
!5732 = !DILocation(line: 2544, column: 13, scope: !5699)
!5733 = !DILocation(line: 2545, column: 7, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2545, column: 6)
!5735 = !DILocation(line: 2545, column: 12, scope: !5734)
!5736 = !DILocation(line: 2545, column: 6, scope: !5699)
!5737 = !DILocation(line: 2546, column: 3, scope: !5734)
!5738 = !DILocation(line: 2548, column: 28, scope: !5699)
!5739 = !DILocation(line: 2548, column: 33, scope: !5699)
!5740 = !DILocation(line: 2548, column: 11, scope: !5699)
!5741 = !DILocation(line: 2548, column: 9, scope: !5699)
!5742 = !DILocation(line: 2549, column: 7, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2549, column: 6)
!5744 = !DILocation(line: 2549, column: 6, scope: !5699)
!5745 = !DILocation(line: 2550, column: 3, scope: !5743)
!5746 = !DILocation(line: 2552, column: 20, scope: !5699)
!5747 = !DILocation(line: 2552, column: 2, scope: !5699)
!5748 = !DILocation(line: 2552, column: 7, scope: !5699)
!5749 = !DILocation(line: 2552, column: 18, scope: !5699)
!5750 = !DILocation(line: 2554, column: 24, scope: !5699)
!5751 = !DILocation(line: 2554, column: 29, scope: !5699)
!5752 = !DILocation(line: 2554, column: 2, scope: !5699)
!5753 = !DILocation(line: 2554, column: 10, scope: !5699)
!5754 = !DILocation(line: 2554, column: 22, scope: !5699)
!5755 = !DILocation(line: 2555, column: 18, scope: !5699)
!5756 = !DILocation(line: 2555, column: 23, scope: !5699)
!5757 = !DILocation(line: 2555, column: 2, scope: !5699)
!5758 = !DILocation(line: 2555, column: 10, scope: !5699)
!5759 = !DILocation(line: 2555, column: 16, scope: !5699)
!5760 = !DILocation(line: 2556, column: 19, scope: !5699)
!5761 = !DILocation(line: 2556, column: 24, scope: !5699)
!5762 = !DILocation(line: 2556, column: 2, scope: !5699)
!5763 = !DILocation(line: 2556, column: 10, scope: !5699)
!5764 = !DILocation(line: 2556, column: 17, scope: !5699)
!5765 = !DILocation(line: 2557, column: 24, scope: !5699)
!5766 = !DILocation(line: 2557, column: 29, scope: !5699)
!5767 = !DILocation(line: 2557, column: 2, scope: !5699)
!5768 = !DILocation(line: 2557, column: 10, scope: !5699)
!5769 = !DILocation(line: 2557, column: 22, scope: !5699)
!5770 = !DILocation(line: 2558, column: 2, scope: !5699)
!5771 = !DILocation(line: 2558, column: 10, scope: !5699)
!5772 = !DILocation(line: 2558, column: 16, scope: !5699)
!5773 = !DILocation(line: 2559, column: 2, scope: !5699)
!5774 = !DILocation(line: 2559, column: 10, scope: !5699)
!5775 = !DILocation(line: 2559, column: 19, scope: !5699)
!5776 = !DILocation(line: 2560, column: 2, scope: !5699)
!5777 = !DILocation(line: 2560, column: 10, scope: !5699)
!5778 = !DILocation(line: 2560, column: 25, scope: !5699)
!5779 = !DILocation(line: 2561, column: 2, scope: !5699)
!5780 = !DILocation(line: 2561, column: 10, scope: !5699)
!5781 = !DILocation(line: 2561, column: 23, scope: !5699)
!5782 = !DILocation(line: 2561, column: 31, scope: !5699)
!5783 = !DILocation(line: 2562, column: 34, scope: !5699)
!5784 = !DILocation(line: 2562, column: 42, scope: !5699)
!5785 = !DILocation(line: 2562, column: 55, scope: !5699)
!5786 = !DILocation(line: 2562, column: 64, scope: !5699)
!5787 = !DILocation(line: 2562, column: 2, scope: !5699)
!5788 = !DILocation(line: 2562, column: 10, scope: !5699)
!5789 = !DILocation(line: 2562, column: 23, scope: !5699)
!5790 = !DILocation(line: 2562, column: 32, scope: !5699)
!5791 = !DILocation(line: 2563, column: 2, scope: !5699)
!5792 = !DILocation(line: 2563, column: 10, scope: !5699)
!5793 = !DILocation(line: 2563, column: 17, scope: !5699)
!5794 = !DILocation(line: 2564, column: 28, scope: !5699)
!5795 = !DILocation(line: 2564, column: 2, scope: !5699)
!5796 = !DILocation(line: 2564, column: 10, scope: !5699)
!5797 = !DILocation(line: 2564, column: 26, scope: !5699)
!5798 = !DILocation(line: 2565, column: 21, scope: !5699)
!5799 = !DILocation(line: 2565, column: 2, scope: !5699)
!5800 = !DILocation(line: 2570, column: 9, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2570, column: 2)
!5802 = !DILocation(line: 2570, column: 7, scope: !5801)
!5803 = !DILocation(line: 2570, column: 14, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 2570, column: 2)
!5805 = !DILocation(line: 2570, column: 18, scope: !5804)
!5806 = !DILocation(line: 2570, column: 23, scope: !5804)
!5807 = !DILocation(line: 2570, column: 16, scope: !5804)
!5808 = !DILocation(line: 2570, column: 2, scope: !5801)
!5809 = !DILocalVariable(name: "state", scope: !5810, file: !3, line: 2571, type: !195)
!5810 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 2570, column: 32)
!5811 = !DILocation(line: 2571, column: 22, scope: !5810)
!5812 = !DILocation(line: 2571, column: 30, scope: !5810)
!5813 = !DILocation(line: 2571, column: 35, scope: !5810)
!5814 = !DILocation(line: 2571, column: 43, scope: !5810)
!5815 = !DILocation(line: 2571, column: 41, scope: !5810)
!5816 = !DILocalVariable(name: "port", scope: !5810, file: !3, line: 2572, type: !3947)
!5817 = !DILocation(line: 2572, column: 20, scope: !5810)
!5818 = !DILocation(line: 2572, column: 28, scope: !5810)
!5819 = !DILocation(line: 2572, column: 35, scope: !5810)
!5820 = !DILocation(line: 2574, column: 17, scope: !5810)
!5821 = !DILocation(line: 2574, column: 3, scope: !5810)
!5822 = !DILocation(line: 2575, column: 3, scope: !5810)
!5823 = !DILocation(line: 2575, column: 9, scope: !5810)
!5824 = !DILocation(line: 2575, column: 13, scope: !5810)
!5825 = !DILocation(line: 2576, column: 2, scope: !5810)
!5826 = !DILocation(line: 2570, column: 28, scope: !5804)
!5827 = !DILocation(line: 2570, column: 2, scope: !5804)
!5828 = distinct !{!5828, !5808, !5829}
!5829 = !DILocation(line: 2576, column: 2, scope: !5801)
!5830 = !DILocation(line: 2578, column: 31, scope: !5699)
!5831 = !DILocation(line: 2578, column: 11, scope: !5699)
!5832 = !DILocation(line: 2578, column: 9, scope: !5699)
!5833 = !DILocation(line: 2579, column: 6, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2579, column: 6)
!5835 = !DILocation(line: 2579, column: 13, scope: !5834)
!5836 = !DILocation(line: 2579, column: 6, scope: !5699)
!5837 = !DILocation(line: 2580, column: 10, scope: !5834)
!5838 = !DILocation(line: 2580, column: 3, scope: !5834)
!5839 = !DILocation(line: 2582, column: 9, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 2582, column: 2)
!5841 = !DILocation(line: 2582, column: 7, scope: !5840)
!5842 = !DILocation(line: 2582, column: 14, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 2582, column: 2)
!5844 = !DILocation(line: 2582, column: 18, scope: !5843)
!5845 = !DILocation(line: 2582, column: 23, scope: !5843)
!5846 = !DILocation(line: 2582, column: 16, scope: !5843)
!5847 = !DILocation(line: 2582, column: 2, scope: !5840)
!5848 = !DILocation(line: 2583, column: 21, scope: !5843)
!5849 = !DILocation(line: 2583, column: 26, scope: !5843)
!5850 = !DILocation(line: 2583, column: 32, scope: !5843)
!5851 = !DILocation(line: 2583, column: 35, scope: !5843)
!5852 = !DILocation(line: 2583, column: 3, scope: !5843)
!5853 = !DILocation(line: 2582, column: 28, scope: !5843)
!5854 = !DILocation(line: 2582, column: 2, scope: !5843)
!5855 = distinct !{!5855, !5847, !5856}
!5856 = !DILocation(line: 2583, column: 39, scope: !5840)
!5857 = !DILocation(line: 2584, column: 17, scope: !5699)
!5858 = !DILocation(line: 2584, column: 2, scope: !5699)
!5859 = !DILabel(scope: !5699, name: "out_kfree", file: !3, line: 2585)
!5860 = !DILocation(line: 2585, column: 1, scope: !5699)
!5861 = !DILocation(line: 2586, column: 8, scope: !5699)
!5862 = !DILocation(line: 2586, column: 13, scope: !5699)
!5863 = !DILocation(line: 2586, column: 2, scope: !5699)
!5864 = !DILabel(scope: !5699, name: "out", file: !3, line: 2587)
!5865 = !DILocation(line: 2587, column: 1, scope: !5699)
!5866 = !DILocation(line: 2588, column: 9, scope: !5699)
!5867 = !DILocation(line: 2588, column: 2, scope: !5699)
!5868 = !DILocation(line: 2589, column: 1, scope: !5699)
!5869 = distinct !DISubprogram(name: "kcalloc", scope: !148, file: !148, line: 601, type: !5870, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!185, !399, !399, !183}
!5872 = !DILocalVariable(name: "n", arg: 1, scope: !5869, file: !148, line: 601, type: !399)
!5873 = !DILocation(line: 601, column: 36, scope: !5869)
!5874 = !DILocalVariable(name: "size", arg: 2, scope: !5869, file: !148, line: 601, type: !399)
!5875 = !DILocation(line: 601, column: 46, scope: !5869)
!5876 = !DILocalVariable(name: "flags", arg: 3, scope: !5869, file: !148, line: 601, type: !183)
!5877 = !DILocation(line: 601, column: 58, scope: !5869)
!5878 = !DILocation(line: 603, column: 23, scope: !5869)
!5879 = !DILocation(line: 603, column: 26, scope: !5869)
!5880 = !DILocation(line: 603, column: 32, scope: !5869)
!5881 = !DILocation(line: 603, column: 38, scope: !5869)
!5882 = !DILocation(line: 603, column: 9, scope: !5869)
!5883 = !DILocation(line: 603, column: 2, scope: !5869)
!5884 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !3905, file: !3905, line: 355, type: !5885, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!3903, !7}
!5887 = !DILocalVariable(name: "lines", arg: 1, scope: !5884, file: !3905, line: 355, type: !7)
!5888 = !DILocation(line: 355, column: 64, scope: !5884)
!5889 = !DILocalVariable(name: "ret", scope: !5884, file: !3905, line: 357, type: !3903)
!5890 = !DILocation(line: 357, column: 21, scope: !5884)
!5891 = !DILocation(line: 357, column: 27, scope: !5884)
!5892 = !DILocation(line: 358, column: 13, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5884, file: !3905, line: 358, column: 6)
!5894 = !DILocation(line: 358, column: 6, scope: !5893)
!5895 = !DILocation(line: 358, column: 6, scope: !5884)
!5896 = !DILocation(line: 359, column: 3, scope: !5893)
!5897 = !DILocation(line: 360, column: 9, scope: !5884)
!5898 = !DILocation(line: 360, column: 2, scope: !5884)
!5899 = !DILocation(line: 361, column: 1, scope: !5884)
!5900 = distinct !DISubprogram(name: "uart_unregister_driver", scope: !3, file: !3, line: 2600, type: !5901, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{null, !4503}
!5903 = !DILocalVariable(name: "drv", arg: 1, scope: !5900, file: !3, line: 2600, type: !4503)
!5904 = !DILocation(line: 2600, column: 49, scope: !5900)
!5905 = !DILocalVariable(name: "p", scope: !5900, file: !3, line: 2602, type: !3903)
!5906 = !DILocation(line: 2602, column: 21, scope: !5900)
!5907 = !DILocation(line: 2602, column: 25, scope: !5900)
!5908 = !DILocation(line: 2602, column: 30, scope: !5900)
!5909 = !DILocalVariable(name: "i", scope: !5900, file: !3, line: 2603, type: !7)
!5910 = !DILocation(line: 2603, column: 15, scope: !5900)
!5911 = !DILocation(line: 2605, column: 24, scope: !5900)
!5912 = !DILocation(line: 2605, column: 2, scope: !5900)
!5913 = !DILocation(line: 2606, column: 17, scope: !5900)
!5914 = !DILocation(line: 2606, column: 2, scope: !5900)
!5915 = !DILocation(line: 2607, column: 9, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 2607, column: 2)
!5917 = !DILocation(line: 2607, column: 7, scope: !5916)
!5918 = !DILocation(line: 2607, column: 14, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5916, file: !3, line: 2607, column: 2)
!5920 = !DILocation(line: 2607, column: 18, scope: !5919)
!5921 = !DILocation(line: 2607, column: 23, scope: !5919)
!5922 = !DILocation(line: 2607, column: 16, scope: !5919)
!5923 = !DILocation(line: 2607, column: 2, scope: !5916)
!5924 = !DILocation(line: 2608, column: 21, scope: !5919)
!5925 = !DILocation(line: 2608, column: 26, scope: !5919)
!5926 = !DILocation(line: 2608, column: 32, scope: !5919)
!5927 = !DILocation(line: 2608, column: 35, scope: !5919)
!5928 = !DILocation(line: 2608, column: 3, scope: !5919)
!5929 = !DILocation(line: 2607, column: 28, scope: !5919)
!5930 = !DILocation(line: 2607, column: 2, scope: !5919)
!5931 = distinct !{!5931, !5923, !5932}
!5932 = !DILocation(line: 2608, column: 39, scope: !5916)
!5933 = !DILocation(line: 2609, column: 8, scope: !5900)
!5934 = !DILocation(line: 2609, column: 13, scope: !5900)
!5935 = !DILocation(line: 2609, column: 2, scope: !5900)
!5936 = !DILocation(line: 2610, column: 2, scope: !5900)
!5937 = !DILocation(line: 2610, column: 7, scope: !5900)
!5938 = !DILocation(line: 2610, column: 13, scope: !5900)
!5939 = !DILocation(line: 2611, column: 2, scope: !5900)
!5940 = !DILocation(line: 2611, column: 7, scope: !5900)
!5941 = !DILocation(line: 2611, column: 18, scope: !5900)
!5942 = !DILocation(line: 2612, column: 1, scope: !5900)
!5943 = distinct !DISubprogram(name: "uart_console_device", scope: !3, file: !3, line: 2614, type: !4396, scopeLine: 2615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5944 = !DILocalVariable(name: "co", arg: 1, scope: !5943, file: !3, line: 2614, type: !4381)
!5945 = !DILocation(line: 2614, column: 56, scope: !5943)
!5946 = !DILocalVariable(name: "index", arg: 2, scope: !5943, file: !3, line: 2614, type: !776)
!5947 = !DILocation(line: 2614, column: 65, scope: !5943)
!5948 = !DILocalVariable(name: "p", scope: !5943, file: !3, line: 2616, type: !4503)
!5949 = !DILocation(line: 2616, column: 22, scope: !5943)
!5950 = !DILocation(line: 2616, column: 26, scope: !5943)
!5951 = !DILocation(line: 2616, column: 30, scope: !5943)
!5952 = !DILocation(line: 2617, column: 11, scope: !5943)
!5953 = !DILocation(line: 2617, column: 15, scope: !5943)
!5954 = !DILocation(line: 2617, column: 3, scope: !5943)
!5955 = !DILocation(line: 2617, column: 9, scope: !5943)
!5956 = !DILocation(line: 2618, column: 9, scope: !5943)
!5957 = !DILocation(line: 2618, column: 12, scope: !5943)
!5958 = !DILocation(line: 2618, column: 2, scope: !5943)
!5959 = !DILocalVariable(name: "v", arg: 1, scope: !5960, file: !5961, line: 39, type: !5964)
!5960 = distinct !DISubprogram(name: "arch_atomic_set", scope: !5961, file: !5961, line: 39, type: !5962, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5961 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5962 = !DISubroutineType(types: !5963)
!5963 = !{null, !5964, !220}
!5964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!5965 = !DILocation(line: 39, column: 55, scope: !5960, inlinedAt: !5966)
!5966 = distinct !DILocation(line: 46, column: 2, scope: !5967, inlinedAt: !5969)
!5967 = distinct !DISubprogram(name: "atomic_set", scope: !5968, file: !5968, line: 43, type: !5962, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5968 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5969 = distinct !DILocation(line: 2879, column: 2, scope: !4500)
!5970 = !DILocalVariable(name: "i", arg: 2, scope: !5960, file: !5961, line: 39, type: !220)
!5971 = !DILocation(line: 39, column: 62, scope: !5960, inlinedAt: !5966)
!5972 = !DILocalVariable(name: "v", arg: 1, scope: !5973, file: !5974, line: 84, type: !5977)
!5973 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5974, file: !5974, line: 84, type: !5975, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5974 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5975 = !DISubroutineType(types: !5976)
!5976 = !{null, !5977, !399}
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5979)
!5979 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5980 = !DILocation(line: 84, column: 74, scope: !5973, inlinedAt: !5981)
!5981 = distinct !DILocation(line: 45, column: 2, scope: !5967, inlinedAt: !5969)
!5982 = !DILocalVariable(name: "size", arg: 2, scope: !5973, file: !5974, line: 84, type: !399)
!5983 = !DILocation(line: 84, column: 84, scope: !5973, inlinedAt: !5981)
!5984 = !DILocalVariable(name: "v", arg: 1, scope: !5967, file: !5968, line: 43, type: !5964)
!5985 = !DILocation(line: 43, column: 22, scope: !5967, inlinedAt: !5969)
!5986 = !DILocalVariable(name: "i", arg: 2, scope: !5967, file: !5968, line: 43, type: !220)
!5987 = !DILocation(line: 43, column: 29, scope: !5967, inlinedAt: !5969)
!5988 = !DILocalVariable(name: "pfo_val__", scope: !5989, file: !5990, line: 26, type: !487)
!5989 = distinct !DILexicalBlock(scope: !5991, file: !5990, line: 26, column: 9)
!5990 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!5991 = distinct !DISubprogram(name: "preempt_count", scope: !5990, file: !5990, line: 24, type: !5992, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!220}
!5994 = !DILocation(line: 26, column: 9, scope: !5989, inlinedAt: !5995)
!5995 = distinct !DILocation(line: 2863, column: 2, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 2863, column: 2)
!5997 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2863, column: 2)
!5998 = !DILocalVariable(name: "drv", arg: 1, scope: !4500, file: !3, line: 2855, type: !4503)
!5999 = !DILocation(line: 2855, column: 43, scope: !4500)
!6000 = !DILocalVariable(name: "uport", arg: 2, scope: !4500, file: !3, line: 2855, type: !4276)
!6001 = !DILocation(line: 2855, column: 66, scope: !4500)
!6002 = !DILocalVariable(name: "state", scope: !4500, file: !3, line: 2857, type: !195)
!6003 = !DILocation(line: 2857, column: 21, scope: !4500)
!6004 = !DILocalVariable(name: "port", scope: !4500, file: !3, line: 2858, type: !3947)
!6005 = !DILocation(line: 2858, column: 19, scope: !4500)
!6006 = !DILocalVariable(name: "ret", scope: !4500, file: !3, line: 2859, type: !220)
!6007 = !DILocation(line: 2859, column: 6, scope: !4500)
!6008 = !DILocalVariable(name: "tty_dev", scope: !4500, file: !3, line: 2860, type: !308)
!6009 = !DILocation(line: 2860, column: 17, scope: !4500)
!6010 = !DILocalVariable(name: "num_groups", scope: !4500, file: !3, line: 2861, type: !220)
!6011 = !DILocation(line: 2861, column: 6, scope: !4500)
!6012 = !DILocation(line: 2863, column: 2, scope: !4500)
!6013 = !{i32 -2145476928}
!6014 = !DILocation(line: 26, column: 41, scope: !5991, inlinedAt: !5995)
!6015 = !DILocation(line: 2863, column: 2, scope: !5996)
!6016 = !DILocation(line: 2863, column: 2, scope: !5997)
!6017 = !DILocation(line: 2863, column: 2, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2863, column: 2)
!6019 = !DILocation(line: 2863, column: 2, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2863, column: 2)
!6021 = !DILocation(line: 2863, column: 2, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2863, column: 2)
!6023 = !{i32 -2141496669, i32 -2141496640, i32 -2141496594, i32 -2141496536, i32 -2141496482, i32 -2141496428, i32 -2141496373, i32 -2141496342}
!6024 = !DILocation(line: 2863, column: 2, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2863, column: 2)
!6026 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 2863, column: 2)
!6027 = !{i32 -2141495886, i32 -2141495879, i32 -2141495825, i32 -2141495794, i32 -2141495764}
!6028 = !DILocation(line: 2863, column: 2, scope: !6026)
!6029 = !DILocation(line: 2865, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2865, column: 6)
!6031 = !DILocation(line: 2865, column: 13, scope: !6030)
!6032 = !DILocation(line: 2865, column: 21, scope: !6030)
!6033 = !DILocation(line: 2865, column: 26, scope: !6030)
!6034 = !DILocation(line: 2865, column: 18, scope: !6030)
!6035 = !DILocation(line: 2865, column: 6, scope: !4500)
!6036 = !DILocation(line: 2866, column: 3, scope: !6030)
!6037 = !DILocation(line: 2868, column: 10, scope: !4500)
!6038 = !DILocation(line: 2868, column: 15, scope: !4500)
!6039 = !DILocation(line: 2868, column: 23, scope: !4500)
!6040 = !DILocation(line: 2868, column: 30, scope: !4500)
!6041 = !DILocation(line: 2868, column: 21, scope: !4500)
!6042 = !DILocation(line: 2868, column: 8, scope: !4500)
!6043 = !DILocation(line: 2869, column: 10, scope: !4500)
!6044 = !DILocation(line: 2869, column: 17, scope: !4500)
!6045 = !DILocation(line: 2869, column: 7, scope: !4500)
!6046 = !DILocation(line: 2871, column: 2, scope: !4500)
!6047 = !DILocation(line: 2872, column: 14, scope: !4500)
!6048 = !DILocation(line: 2872, column: 20, scope: !4500)
!6049 = !DILocation(line: 2872, column: 2, scope: !4500)
!6050 = !DILocation(line: 2873, column: 6, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2873, column: 6)
!6052 = !DILocation(line: 2873, column: 13, scope: !6051)
!6053 = !DILocation(line: 2873, column: 6, scope: !4500)
!6054 = !DILocation(line: 2874, column: 7, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 2873, column: 24)
!6056 = !DILocation(line: 2875, column: 3, scope: !6055)
!6057 = !DILocation(line: 2879, column: 14, scope: !4500)
!6058 = !DILocation(line: 2879, column: 21, scope: !4500)
!6059 = !DILocation(line: 45, column: 26, scope: !5967, inlinedAt: !5969)
!6060 = !DILocation(line: 86, column: 20, scope: !5973, inlinedAt: !5981)
!6061 = !DILocation(line: 86, column: 23, scope: !5973, inlinedAt: !5981)
!6062 = !DILocation(line: 86, column: 2, scope: !5973, inlinedAt: !5981)
!6063 = !DILocation(line: 87, column: 2, scope: !5973, inlinedAt: !5981)
!6064 = !DILocation(line: 46, column: 18, scope: !5967, inlinedAt: !5969)
!6065 = !DILocation(line: 46, column: 21, scope: !5967, inlinedAt: !5969)
!6066 = !DILocation(line: 41, column: 2, scope: !6067, inlinedAt: !5966)
!6067 = distinct !DILexicalBlock(scope: !5960, file: !5961, line: 41, column: 2)
!6068 = !DILocation(line: 2880, column: 2, scope: !4500)
!6069 = !DILocation(line: 2880, column: 2, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2880, column: 2)
!6071 = !DILocation(line: 2881, column: 21, scope: !4500)
!6072 = !DILocation(line: 2881, column: 2, scope: !4500)
!6073 = !DILocation(line: 2881, column: 9, scope: !4500)
!6074 = !DILocation(line: 2881, column: 19, scope: !4500)
!6075 = !DILocation(line: 2882, column: 17, scope: !4500)
!6076 = !DILocation(line: 2882, column: 2, scope: !4500)
!6077 = !DILocation(line: 2882, column: 9, scope: !4500)
!6078 = !DILocation(line: 2882, column: 15, scope: !4500)
!6079 = !DILocation(line: 2884, column: 2, scope: !4500)
!6080 = !DILocation(line: 2884, column: 9, scope: !4500)
!6081 = !DILocation(line: 2884, column: 18, scope: !4500)
!6082 = !DILocation(line: 2885, column: 16, scope: !4500)
!6083 = !DILocation(line: 2885, column: 21, scope: !4500)
!6084 = !DILocation(line: 2885, column: 2, scope: !4500)
!6085 = !DILocation(line: 2885, column: 9, scope: !4500)
!6086 = !DILocation(line: 2885, column: 14, scope: !4500)
!6087 = !DILocation(line: 2886, column: 17, scope: !4500)
!6088 = !DILocation(line: 2886, column: 22, scope: !4500)
!6089 = !DILocation(line: 2886, column: 34, scope: !4500)
!6090 = !DILocation(line: 2886, column: 48, scope: !4500)
!6091 = !DILocation(line: 2886, column: 55, scope: !4500)
!6092 = !DILocation(line: 2886, column: 46, scope: !4500)
!6093 = !DILocation(line: 2886, column: 2, scope: !4500)
!6094 = !DILocation(line: 2886, column: 9, scope: !4500)
!6095 = !DILocation(line: 2886, column: 15, scope: !4500)
!6096 = !DILocation(line: 2887, column: 46, scope: !4500)
!6097 = !DILocation(line: 2887, column: 51, scope: !4500)
!6098 = !DILocation(line: 2888, column: 5, scope: !4500)
!6099 = !DILocation(line: 2888, column: 10, scope: !4500)
!6100 = !DILocation(line: 2888, column: 22, scope: !4500)
!6101 = !DILocation(line: 2888, column: 34, scope: !4500)
!6102 = !DILocation(line: 2888, column: 41, scope: !4500)
!6103 = !DILocation(line: 2888, column: 32, scope: !4500)
!6104 = !DILocation(line: 2887, column: 16, scope: !4500)
!6105 = !DILocation(line: 2887, column: 2, scope: !4500)
!6106 = !DILocation(line: 2887, column: 9, scope: !4500)
!6107 = !DILocation(line: 2887, column: 14, scope: !4500)
!6108 = !DILocation(line: 2889, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2889, column: 6)
!6110 = !DILocation(line: 2889, column: 14, scope: !6109)
!6111 = !DILocation(line: 2889, column: 6, scope: !4500)
!6112 = !DILocation(line: 2890, column: 7, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2889, column: 20)
!6114 = !DILocation(line: 2891, column: 3, scope: !6113)
!6115 = !DILocation(line: 2898, column: 28, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2898, column: 6)
!6117 = !DILocation(line: 2898, column: 7, scope: !6116)
!6118 = !DILocation(line: 2898, column: 6, scope: !4500)
!6119 = !DILocation(line: 2899, column: 28, scope: !6116)
!6120 = !DILocation(line: 2899, column: 3, scope: !6116)
!6121 = !DILocation(line: 2901, column: 6, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2901, column: 6)
!6123 = !DILocation(line: 2901, column: 13, scope: !6122)
!6124 = !DILocation(line: 2901, column: 18, scope: !6122)
!6125 = !DILocation(line: 2901, column: 21, scope: !6122)
!6126 = !DILocation(line: 2901, column: 28, scope: !6122)
!6127 = !DILocation(line: 2901, column: 6, scope: !4500)
!6128 = !DILocation(line: 2902, column: 20, scope: !6122)
!6129 = !DILocation(line: 2902, column: 27, scope: !6122)
!6130 = !DILocation(line: 2902, column: 32, scope: !6122)
!6131 = !DILocation(line: 2902, column: 41, scope: !6122)
!6132 = !DILocation(line: 2902, column: 48, scope: !6122)
!6133 = !DILocation(line: 2902, column: 54, scope: !6122)
!6134 = !DILocation(line: 2902, column: 60, scope: !6122)
!6135 = !DILocation(line: 2902, column: 67, scope: !6122)
!6136 = !DILocation(line: 2902, column: 3, scope: !6122)
!6137 = !DILocation(line: 2904, column: 23, scope: !4500)
!6138 = !DILocation(line: 2904, column: 29, scope: !4500)
!6139 = !DILocation(line: 2904, column: 34, scope: !4500)
!6140 = !DILocation(line: 2904, column: 46, scope: !4500)
!6141 = !DILocation(line: 2904, column: 53, scope: !4500)
!6142 = !DILocation(line: 2904, column: 2, scope: !4500)
!6143 = !DILocation(line: 2905, column: 22, scope: !4500)
!6144 = !DILocation(line: 2905, column: 27, scope: !4500)
!6145 = !DILocation(line: 2905, column: 34, scope: !4500)
!6146 = !DILocation(line: 2905, column: 2, scope: !4500)
!6147 = !DILocation(line: 2907, column: 18, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2907, column: 18)
!6149 = !DILocation(line: 2907, column: 18, scope: !4500)
!6150 = !DILocation(line: 2907, column: 2, scope: !4500)
!6151 = !DILocation(line: 2907, column: 8, scope: !4500)
!6152 = !DILocation(line: 2907, column: 16, scope: !4500)
!6153 = !DILocation(line: 2909, column: 13, scope: !4500)
!6154 = !DILocation(line: 2910, column: 6, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2910, column: 6)
!6156 = !DILocation(line: 2910, column: 13, scope: !6155)
!6157 = !DILocation(line: 2910, column: 6, scope: !4500)
!6158 = !DILocation(line: 2911, column: 13, scope: !6155)
!6159 = !DILocation(line: 2911, column: 3, scope: !6155)
!6160 = !DILocation(line: 2913, column: 30, scope: !4500)
!6161 = !DILocation(line: 2913, column: 22, scope: !4500)
!6162 = !DILocation(line: 2913, column: 2, scope: !4500)
!6163 = !DILocation(line: 2913, column: 9, scope: !4500)
!6164 = !DILocation(line: 2913, column: 20, scope: !4500)
!6165 = !DILocation(line: 2915, column: 7, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2915, column: 6)
!6167 = !DILocation(line: 2915, column: 14, scope: !6166)
!6168 = !DILocation(line: 2915, column: 6, scope: !4500)
!6169 = !DILocation(line: 2916, column: 7, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 2915, column: 26)
!6171 = !DILocation(line: 2917, column: 3, scope: !6170)
!6172 = !DILocation(line: 2919, column: 2, scope: !4500)
!6173 = !DILocation(line: 2919, column: 9, scope: !4500)
!6174 = !DILocation(line: 2919, column: 23, scope: !4500)
!6175 = !DILocation(line: 2920, column: 6, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2920, column: 6)
!6177 = !DILocation(line: 2920, column: 13, scope: !6176)
!6178 = !DILocation(line: 2920, column: 6, scope: !4500)
!6179 = !DILocation(line: 2921, column: 26, scope: !6176)
!6180 = !DILocation(line: 2921, column: 33, scope: !6176)
!6181 = !DILocation(line: 2921, column: 3, scope: !6176)
!6182 = !DILocation(line: 2921, column: 10, scope: !6176)
!6183 = !DILocation(line: 2921, column: 24, scope: !6176)
!6184 = !DILocation(line: 2927, column: 49, scope: !4500)
!6185 = !DILocation(line: 2927, column: 55, scope: !4500)
!6186 = !DILocation(line: 2927, column: 60, scope: !4500)
!6187 = !DILocation(line: 2928, column: 4, scope: !4500)
!6188 = !DILocation(line: 2928, column: 11, scope: !4500)
!6189 = !DILocation(line: 2928, column: 17, scope: !4500)
!6190 = !DILocation(line: 2928, column: 24, scope: !4500)
!6191 = !DILocation(line: 2928, column: 29, scope: !4500)
!6192 = !DILocation(line: 2928, column: 35, scope: !4500)
!6193 = !DILocation(line: 2928, column: 42, scope: !4500)
!6194 = !DILocation(line: 2927, column: 12, scope: !4500)
!6195 = !DILocation(line: 2927, column: 10, scope: !4500)
!6196 = !DILocation(line: 2929, column: 14, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 2929, column: 6)
!6198 = !DILocation(line: 2929, column: 7, scope: !6197)
!6199 = !DILocation(line: 2929, column: 6, scope: !4500)
!6200 = !DILocation(line: 2930, column: 29, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2929, column: 24)
!6202 = !DILocation(line: 2930, column: 3, scope: !6201)
!6203 = !DILocation(line: 2931, column: 2, scope: !6201)
!6204 = !DILocation(line: 2932, column: 3, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 2931, column: 9)
!6206 = !DILocation(line: 2939, column: 2, scope: !4500)
!6207 = !DILocation(line: 2939, column: 9, scope: !4500)
!6208 = !DILocation(line: 2939, column: 15, scope: !4500)
!6209 = !DILabel(scope: !4500, name: "out", file: !3, line: 2941)
!6210 = !DILocation(line: 2941, column: 2, scope: !4500)
!6211 = !DILocation(line: 2942, column: 16, scope: !4500)
!6212 = !DILocation(line: 2942, column: 22, scope: !4500)
!6213 = !DILocation(line: 2942, column: 2, scope: !4500)
!6214 = !DILocation(line: 2943, column: 2, scope: !4500)
!6215 = !DILocation(line: 2945, column: 9, scope: !4500)
!6216 = !DILocation(line: 2945, column: 2, scope: !4500)
!6217 = !DILocation(line: 2946, column: 1, scope: !4500)
!6218 = distinct !DISubprogram(name: "uart_console_enabled", scope: !3, file: !3, line: 1914, type: !6219, scopeLine: 1915, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!560, !4276}
!6221 = !DILocalVariable(name: "port", arg: 1, scope: !6218, file: !3, line: 1914, type: !4276)
!6222 = !DILocation(line: 1914, column: 59, scope: !6218)
!6223 = !DILocation(line: 1916, column: 9, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1916, column: 9)
!6225 = !DILocation(line: 1916, column: 9, scope: !6218)
!6226 = !DILocation(line: 1916, column: 28, scope: !6218)
!6227 = !DILocation(line: 1916, column: 32, scope: !6218)
!6228 = !DILocation(line: 1916, column: 38, scope: !6218)
!6229 = !DILocation(line: 1916, column: 44, scope: !6218)
!6230 = !DILocation(line: 1916, column: 50, scope: !6218)
!6231 = !DILocation(line: 0, scope: !6218)
!6232 = !DILocation(line: 1916, column: 2, scope: !6218)
!6233 = distinct !DISubprogram(name: "uart_port_spin_lock_init", scope: !3, file: !3, line: 1919, type: !4320, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6234 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !6235)
!6235 = distinct !DILocation(line: 1921, column: 2, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1921, column: 2)
!6237 = !DILocalVariable(name: "port", arg: 1, scope: !6233, file: !3, line: 1919, type: !4276)
!6238 = !DILocation(line: 1919, column: 56, scope: !6233)
!6239 = !DILocation(line: 1921, column: 2, scope: !6233)
!6240 = !DILocation(line: 1921, column: 2, scope: !6236)
!6241 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !6235)
!6242 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !6235)
!6243 = !DILocation(line: 1922, column: 2, scope: !6233)
!6244 = !DILocation(line: 1922, column: 2, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 1922, column: 2)
!6246 = !DILocation(line: 1923, column: 1, scope: !6233)
!6247 = distinct !DISubprogram(name: "uart_configure_port", scope: !3, file: !3, line: 2343, type: !6248, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{null, !4503, !195, !4276}
!6250 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !6251)
!6251 = distinct !DILocation(line: 2384, column: 3, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 2369, column: 34)
!6253 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2369, column: 6)
!6254 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !6251)
!6255 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !6256)
!6256 = distinct !DILocation(line: 2382, column: 3, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 2382, column: 3)
!6258 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 2382, column: 3)
!6259 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 2382, column: 3)
!6260 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2382, column: 3)
!6261 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2382, column: 3)
!6262 = !DILocalVariable(name: "drv", arg: 1, scope: !6247, file: !3, line: 2343, type: !4503)
!6263 = !DILocation(line: 2343, column: 41, scope: !6247)
!6264 = !DILocalVariable(name: "state", arg: 2, scope: !6247, file: !3, line: 2343, type: !195)
!6265 = !DILocation(line: 2343, column: 65, scope: !6247)
!6266 = !DILocalVariable(name: "port", arg: 3, scope: !6247, file: !3, line: 2344, type: !4276)
!6267 = !DILocation(line: 2344, column: 25, scope: !6247)
!6268 = !DILocalVariable(name: "flags", scope: !6247, file: !3, line: 2346, type: !7)
!6269 = !DILocation(line: 2346, column: 15, scope: !6247)
!6270 = !DILocation(line: 2351, column: 7, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2351, column: 6)
!6272 = !DILocation(line: 2351, column: 13, scope: !6271)
!6273 = !DILocation(line: 2351, column: 20, scope: !6271)
!6274 = !DILocation(line: 2351, column: 24, scope: !6271)
!6275 = !DILocation(line: 2351, column: 30, scope: !6271)
!6276 = !DILocation(line: 2351, column: 38, scope: !6271)
!6277 = !DILocation(line: 2351, column: 42, scope: !6271)
!6278 = !DILocation(line: 2351, column: 48, scope: !6271)
!6279 = !DILocation(line: 2351, column: 6, scope: !6247)
!6280 = !DILocation(line: 2352, column: 3, scope: !6271)
!6281 = !DILocation(line: 2358, column: 8, scope: !6247)
!6282 = !DILocation(line: 2359, column: 6, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2359, column: 6)
!6284 = !DILocation(line: 2359, column: 12, scope: !6283)
!6285 = !DILocation(line: 2359, column: 18, scope: !6283)
!6286 = !DILocation(line: 2359, column: 6, scope: !6247)
!6287 = !DILocation(line: 2360, column: 9, scope: !6283)
!6288 = !DILocation(line: 2360, column: 3, scope: !6283)
!6289 = !DILocation(line: 2361, column: 6, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 2361, column: 6)
!6291 = !DILocation(line: 2361, column: 12, scope: !6290)
!6292 = !DILocation(line: 2361, column: 18, scope: !6290)
!6293 = !DILocation(line: 2361, column: 6, scope: !6247)
!6294 = !DILocation(line: 2362, column: 9, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 2362, column: 7)
!6296 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2361, column: 39)
!6297 = !DILocation(line: 2362, column: 15, scope: !6295)
!6298 = !DILocation(line: 2362, column: 21, scope: !6295)
!6299 = !DILocation(line: 2362, column: 7, scope: !6296)
!6300 = !DILocation(line: 2363, column: 4, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6295, file: !3, line: 2362, column: 40)
!6302 = !DILocation(line: 2363, column: 10, scope: !6301)
!6303 = !DILocation(line: 2363, column: 15, scope: !6301)
!6304 = !DILocation(line: 2364, column: 10, scope: !6301)
!6305 = !DILocation(line: 2365, column: 3, scope: !6301)
!6306 = !DILocation(line: 2366, column: 3, scope: !6296)
!6307 = !DILocation(line: 2366, column: 9, scope: !6296)
!6308 = !DILocation(line: 2366, column: 14, scope: !6296)
!6309 = !DILocation(line: 2366, column: 26, scope: !6296)
!6310 = !DILocation(line: 2366, column: 32, scope: !6296)
!6311 = !DILocation(line: 2367, column: 2, scope: !6296)
!6312 = !DILocation(line: 2369, column: 6, scope: !6253)
!6313 = !DILocation(line: 2369, column: 12, scope: !6253)
!6314 = !DILocation(line: 2369, column: 17, scope: !6253)
!6315 = !DILocation(line: 2369, column: 6, scope: !6247)
!6316 = !DILocalVariable(name: "flags", scope: !6252, file: !3, line: 2370, type: !187)
!6317 = !DILocation(line: 2370, column: 17, scope: !6252)
!6318 = !DILocation(line: 2372, column: 20, scope: !6252)
!6319 = !DILocation(line: 2372, column: 25, scope: !6252)
!6320 = !DILocation(line: 2372, column: 3, scope: !6252)
!6321 = !DILocation(line: 2375, column: 18, scope: !6252)
!6322 = !DILocation(line: 2375, column: 3, scope: !6252)
!6323 = !DILocation(line: 2382, column: 3, scope: !6252)
!6324 = !DILocation(line: 2382, column: 3, scope: !6261)
!6325 = !DILocalVariable(name: "__dummy", scope: !6326, file: !3, line: 2382, type: !187)
!6326 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 2382, column: 3)
!6327 = !DILocation(line: 2382, column: 3, scope: !6326)
!6328 = !DILocalVariable(name: "__dummy2", scope: !6326, file: !3, line: 2382, type: !187)
!6329 = !DILocation(line: 2382, column: 3, scope: !6260)
!6330 = !DILocation(line: 2382, column: 3, scope: !6259)
!6331 = !DILocation(line: 2382, column: 3, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 2382, column: 3)
!6333 = !DILocalVariable(name: "__dummy", scope: !6334, file: !3, line: 2382, type: !187)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 2382, column: 3)
!6335 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 2382, column: 3)
!6336 = !DILocation(line: 2382, column: 3, scope: !6334)
!6337 = !DILocalVariable(name: "__dummy2", scope: !6334, file: !3, line: 2382, type: !187)
!6338 = !DILocation(line: 2382, column: 3, scope: !6335)
!6339 = !DILocation(line: 2382, column: 3, scope: !6258)
!6340 = !{i32 -2141507392}
!6341 = !DILocation(line: 2382, column: 3, scope: !6257)
!6342 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !6256)
!6343 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !6256)
!6344 = !DILocation(line: 2383, column: 3, scope: !6252)
!6345 = !DILocation(line: 2383, column: 9, scope: !6252)
!6346 = !DILocation(line: 2383, column: 14, scope: !6252)
!6347 = !DILocation(line: 2383, column: 24, scope: !6252)
!6348 = !DILocation(line: 2383, column: 30, scope: !6252)
!6349 = !DILocation(line: 2383, column: 36, scope: !6252)
!6350 = !DILocation(line: 2383, column: 42, scope: !6252)
!6351 = !DILocation(line: 2384, column: 27, scope: !6252)
!6352 = !DILocation(line: 2384, column: 33, scope: !6252)
!6353 = !DILocation(line: 2384, column: 39, scope: !6252)
!6354 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !6251)
!6355 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !6251)
!6356 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !6251)
!6357 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !6251)
!6358 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !6251)
!6359 = !DILocation(line: 2391, column: 7, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2391, column: 7)
!6361 = !DILocation(line: 2391, column: 13, scope: !6360)
!6362 = !DILocation(line: 2391, column: 18, scope: !6360)
!6363 = !DILocation(line: 2391, column: 23, scope: !6360)
!6364 = !DILocation(line: 2391, column: 29, scope: !6360)
!6365 = !DILocation(line: 2391, column: 35, scope: !6360)
!6366 = !DILocation(line: 2391, column: 41, scope: !6360)
!6367 = !DILocation(line: 2391, column: 7, scope: !6252)
!6368 = !DILocation(line: 2392, column: 21, scope: !6360)
!6369 = !DILocation(line: 2392, column: 27, scope: !6360)
!6370 = !DILocation(line: 2392, column: 4, scope: !6360)
!6371 = !DILocation(line: 2398, column: 8, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 2398, column: 8)
!6373 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 2398, column: 7)
!6374 = !DILocation(line: 2398, column: 8, scope: !6373)
!6375 = !DILocation(line: 2398, column: 7, scope: !6252)
!6376 = !DILocation(line: 2399, column: 19, scope: !6373)
!6377 = !DILocation(line: 2399, column: 4, scope: !6373)
!6378 = !DILocation(line: 2400, column: 2, scope: !6252)
!6379 = !DILocation(line: 2401, column: 1, scope: !6247)
!6380 = distinct !DISubprogram(name: "IS_ERR", scope: !6381, file: !6381, line: 34, type: !6382, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6381 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6382 = !DISubroutineType(types: !6383)
!6383 = !{!560, !2201}
!6384 = !DILocalVariable(name: "ptr", arg: 1, scope: !6380, file: !6381, line: 34, type: !2201)
!6385 = !DILocation(line: 34, column: 60, scope: !6380)
!6386 = !DILocation(line: 36, column: 9, scope: !6380)
!6387 = !DILocation(line: 36, column: 2, scope: !6380)
!6388 = distinct !DISubprogram(name: "uart_remove_one_port", scope: !3, file: !3, line: 2957, type: !4501, scopeLine: 2958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6389 = !DILocalVariable(name: "v", arg: 1, scope: !6390, file: !5961, line: 23, type: !6393)
!6390 = distinct !DISubprogram(name: "arch_atomic_read", scope: !5961, file: !5961, line: 23, type: !6391, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6391 = !DISubroutineType(types: !6392)
!6392 = !{!220, !6393}
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 64)
!6394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !280)
!6395 = !DILocation(line: 23, column: 61, scope: !6390, inlinedAt: !6396)
!6396 = distinct !DILocation(line: 28, column: 9, scope: !6397, inlinedAt: !6398)
!6397 = distinct !DISubprogram(name: "atomic_read", scope: !5968, file: !5968, line: 25, type: !6391, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6398 = distinct !DILocation(line: 3019, column: 2, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 3019, column: 2)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3019, column: 2)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 3019, column: 2)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 3019, column: 2)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3019, column: 2)
!6404 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3019, column: 2)
!6405 = !DILocalVariable(name: "v", arg: 1, scope: !6406, file: !5974, line: 69, type: !5977)
!6406 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5974, file: !5974, line: 69, type: !5975, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6407 = !DILocation(line: 69, column: 73, scope: !6406, inlinedAt: !6408)
!6408 = distinct !DILocation(line: 27, column: 2, scope: !6397, inlinedAt: !6398)
!6409 = !DILocalVariable(name: "size", arg: 2, scope: !6406, file: !5974, line: 69, type: !399)
!6410 = !DILocation(line: 69, column: 83, scope: !6406, inlinedAt: !6408)
!6411 = !DILocalVariable(name: "v", arg: 1, scope: !6397, file: !5968, line: 25, type: !6393)
!6412 = !DILocation(line: 25, column: 29, scope: !6397, inlinedAt: !6398)
!6413 = !DILocation(line: 23, column: 61, scope: !6390, inlinedAt: !6414)
!6414 = distinct !DILocation(line: 28, column: 9, scope: !6397, inlinedAt: !6415)
!6415 = distinct !DILocation(line: 3019, column: 2, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3019, column: 2)
!6417 = !DILocation(line: 69, column: 73, scope: !6406, inlinedAt: !6418)
!6418 = distinct !DILocation(line: 27, column: 2, scope: !6397, inlinedAt: !6415)
!6419 = !DILocation(line: 69, column: 83, scope: !6406, inlinedAt: !6418)
!6420 = !DILocation(line: 25, column: 29, scope: !6397, inlinedAt: !6415)
!6421 = !DILocalVariable(name: "i", arg: 1, scope: !6422, file: !5961, line: 163, type: !220)
!6422 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !5961, file: !5961, line: 163, type: !6423, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6423 = !DISubroutineType(types: !6424)
!6424 = !{!220, !220, !5964}
!6425 = !DILocation(line: 163, column: 55, scope: !6422, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 178, column: 9, scope: !6427, inlinedAt: !6428)
!6427 = distinct !DISubprogram(name: "arch_atomic_sub_return", scope: !5961, file: !5961, line: 176, type: !6423, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6428 = distinct !DILocation(line: 457, column: 9, scope: !6429, inlinedAt: !6433)
!6429 = distinct !DISubprogram(name: "arch_atomic_dec_return", scope: !6430, file: !6430, line: 455, type: !6431, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6430 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!220, !5964}
!6433 = distinct !DILocation(line: 341, column: 9, scope: !6434, inlinedAt: !6435)
!6434 = distinct !DISubprogram(name: "atomic_dec_return", scope: !5968, file: !5968, line: 338, type: !6431, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6435 = distinct !DILocation(line: 3018, column: 2, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3018, column: 2)
!6437 = !DILocalVariable(name: "v", arg: 2, scope: !6422, file: !5961, line: 163, type: !5964)
!6438 = !DILocation(line: 163, column: 68, scope: !6422, inlinedAt: !6426)
!6439 = !DILocalVariable(name: "__ret", scope: !6440, file: !5961, line: 165, type: !220)
!6440 = distinct !DILexicalBlock(scope: !6422, file: !5961, line: 165, column: 13)
!6441 = !DILocation(line: 165, column: 13, scope: !6440, inlinedAt: !6426)
!6442 = !DILocalVariable(name: "i", arg: 1, scope: !6427, file: !5961, line: 176, type: !220)
!6443 = !DILocation(line: 176, column: 55, scope: !6427, inlinedAt: !6428)
!6444 = !DILocalVariable(name: "v", arg: 2, scope: !6427, file: !5961, line: 176, type: !5964)
!6445 = !DILocation(line: 176, column: 68, scope: !6427, inlinedAt: !6428)
!6446 = !DILocalVariable(name: "v", arg: 1, scope: !6429, file: !6430, line: 455, type: !5964)
!6447 = !DILocation(line: 455, column: 34, scope: !6429, inlinedAt: !6433)
!6448 = !DILocalVariable(name: "v", arg: 1, scope: !6449, file: !5974, line: 99, type: !5977)
!6449 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5974, file: !5974, line: 99, type: !5975, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6450 = !DILocation(line: 99, column: 79, scope: !6449, inlinedAt: !6451)
!6451 = distinct !DILocation(line: 340, column: 2, scope: !6434, inlinedAt: !6435)
!6452 = !DILocalVariable(name: "size", arg: 2, scope: !6449, file: !5974, line: 99, type: !399)
!6453 = !DILocation(line: 99, column: 89, scope: !6449, inlinedAt: !6451)
!6454 = !DILocalVariable(name: "v", arg: 1, scope: !6434, file: !5968, line: 338, type: !5964)
!6455 = !DILocation(line: 338, column: 29, scope: !6434, inlinedAt: !6435)
!6456 = !DILocation(line: 26, column: 9, scope: !5989, inlinedAt: !6457)
!6457 = distinct !DILocation(line: 2965, column: 2, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2965, column: 2)
!6459 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2965, column: 2)
!6460 = !DILocalVariable(name: "drv", arg: 1, scope: !6388, file: !3, line: 2957, type: !4503)
!6461 = !DILocation(line: 2957, column: 46, scope: !6388)
!6462 = !DILocalVariable(name: "uport", arg: 2, scope: !6388, file: !3, line: 2957, type: !4276)
!6463 = !DILocation(line: 2957, column: 69, scope: !6388)
!6464 = !DILocalVariable(name: "state", scope: !6388, file: !3, line: 2959, type: !195)
!6465 = !DILocation(line: 2959, column: 21, scope: !6388)
!6466 = !DILocation(line: 2959, column: 29, scope: !6388)
!6467 = !DILocation(line: 2959, column: 34, scope: !6388)
!6468 = !DILocation(line: 2959, column: 42, scope: !6388)
!6469 = !DILocation(line: 2959, column: 49, scope: !6388)
!6470 = !DILocation(line: 2959, column: 40, scope: !6388)
!6471 = !DILocalVariable(name: "port", scope: !6388, file: !3, line: 2960, type: !3947)
!6472 = !DILocation(line: 2960, column: 19, scope: !6388)
!6473 = !DILocation(line: 2960, column: 27, scope: !6388)
!6474 = !DILocation(line: 2960, column: 34, scope: !6388)
!6475 = !DILocalVariable(name: "uart_port", scope: !6388, file: !3, line: 2961, type: !4276)
!6476 = !DILocation(line: 2961, column: 20, scope: !6388)
!6477 = !DILocalVariable(name: "tty", scope: !6388, file: !3, line: 2962, type: !293)
!6478 = !DILocation(line: 2962, column: 21, scope: !6388)
!6479 = !DILocalVariable(name: "ret", scope: !6388, file: !3, line: 2963, type: !220)
!6480 = !DILocation(line: 2963, column: 6, scope: !6388)
!6481 = !DILocation(line: 2965, column: 2, scope: !6388)
!6482 = !DILocation(line: 26, column: 41, scope: !5991, inlinedAt: !6457)
!6483 = !DILocation(line: 2965, column: 2, scope: !6458)
!6484 = !DILocation(line: 2965, column: 2, scope: !6459)
!6485 = !DILocation(line: 2965, column: 2, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 2965, column: 2)
!6487 = !DILocation(line: 2965, column: 2, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2965, column: 2)
!6489 = !DILocation(line: 2965, column: 2, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2965, column: 2)
!6491 = !{i32 -2141493902, i32 -2141493873, i32 -2141493827, i32 -2141493769, i32 -2141493715, i32 -2141493661, i32 -2141493606, i32 -2141493575}
!6492 = !DILocation(line: 2965, column: 2, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2965, column: 2)
!6494 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2965, column: 2)
!6495 = !{i32 -2141493119, i32 -2141493112, i32 -2141493058, i32 -2141493027, i32 -2141492997}
!6496 = !DILocation(line: 2965, column: 2, scope: !6494)
!6497 = !DILocation(line: 2967, column: 2, scope: !6388)
!6498 = !DILocation(line: 2973, column: 14, scope: !6388)
!6499 = !DILocation(line: 2973, column: 20, scope: !6388)
!6500 = !DILocation(line: 2973, column: 2, scope: !6388)
!6501 = !DILocation(line: 2974, column: 30, scope: !6388)
!6502 = !DILocation(line: 2974, column: 14, scope: !6388)
!6503 = !DILocation(line: 2974, column: 12, scope: !6388)
!6504 = !DILocation(line: 2975, column: 6, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2975, column: 6)
!6506 = !DILocation(line: 2975, column: 19, scope: !6505)
!6507 = !DILocation(line: 2975, column: 16, scope: !6505)
!6508 = !DILocation(line: 2975, column: 6, scope: !6388)
!6509 = !DILocation(line: 2976, column: 3, scope: !6505)
!6510 = !DILocation(line: 2979, column: 7, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2979, column: 6)
!6512 = !DILocation(line: 2979, column: 6, scope: !6388)
!6513 = !DILocation(line: 2980, column: 17, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 2979, column: 18)
!6515 = !DILocation(line: 2980, column: 23, scope: !6514)
!6516 = !DILocation(line: 2980, column: 3, scope: !6514)
!6517 = !DILocation(line: 2981, column: 7, scope: !6514)
!6518 = !DILocation(line: 2982, column: 3, scope: !6514)
!6519 = !DILocation(line: 2984, column: 2, scope: !6388)
!6520 = !DILocation(line: 2984, column: 9, scope: !6388)
!6521 = !DILocation(line: 2984, column: 15, scope: !6388)
!6522 = !DILocation(line: 2985, column: 16, scope: !6388)
!6523 = !DILocation(line: 2985, column: 22, scope: !6388)
!6524 = !DILocation(line: 2985, column: 2, scope: !6388)
!6525 = !DILocation(line: 2990, column: 29, scope: !6388)
!6526 = !DILocation(line: 2990, column: 35, scope: !6388)
!6527 = !DILocation(line: 2990, column: 40, scope: !6388)
!6528 = !DILocation(line: 2990, column: 52, scope: !6388)
!6529 = !DILocation(line: 2990, column: 59, scope: !6388)
!6530 = !DILocation(line: 2990, column: 2, scope: !6388)
!6531 = !DILocation(line: 2992, column: 25, scope: !6388)
!6532 = !DILocation(line: 2992, column: 8, scope: !6388)
!6533 = !DILocation(line: 2992, column: 6, scope: !6388)
!6534 = !DILocation(line: 2993, column: 6, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 2993, column: 6)
!6536 = !DILocation(line: 2993, column: 6, scope: !6388)
!6537 = !DILocation(line: 2994, column: 15, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2993, column: 11)
!6539 = !DILocation(line: 2994, column: 21, scope: !6538)
!6540 = !DILocation(line: 2994, column: 3, scope: !6538)
!6541 = !DILocation(line: 2995, column: 16, scope: !6538)
!6542 = !DILocation(line: 2995, column: 3, scope: !6538)
!6543 = !DILocation(line: 2996, column: 2, scope: !6538)
!6544 = !DILocation(line: 3001, column: 6, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3001, column: 6)
!6546 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3001, column: 6)
!6547 = !DILocation(line: 3001, column: 6, scope: !6546)
!6548 = !DILocation(line: 3001, column: 6, scope: !6388)
!6549 = !DILocation(line: 3002, column: 22, scope: !6546)
!6550 = !DILocation(line: 3002, column: 29, scope: !6546)
!6551 = !DILocation(line: 3002, column: 3, scope: !6546)
!6552 = !DILocation(line: 3007, column: 6, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 3007, column: 6)
!6554 = !DILocation(line: 3007, column: 13, scope: !6553)
!6555 = !DILocation(line: 3007, column: 18, scope: !6553)
!6556 = !DILocation(line: 3007, column: 34, scope: !6553)
!6557 = !DILocation(line: 3007, column: 37, scope: !6553)
!6558 = !DILocation(line: 3007, column: 44, scope: !6553)
!6559 = !DILocation(line: 3007, column: 49, scope: !6553)
!6560 = !DILocation(line: 3007, column: 6, scope: !6388)
!6561 = !DILocation(line: 3008, column: 3, scope: !6553)
!6562 = !DILocation(line: 3008, column: 10, scope: !6553)
!6563 = !DILocation(line: 3008, column: 15, scope: !6553)
!6564 = !DILocation(line: 3008, column: 28, scope: !6553)
!6565 = !DILocation(line: 3009, column: 8, scope: !6388)
!6566 = !DILocation(line: 3009, column: 15, scope: !6388)
!6567 = !DILocation(line: 3009, column: 2, scope: !6388)
!6568 = !DILocation(line: 3010, column: 8, scope: !6388)
!6569 = !DILocation(line: 3010, column: 15, scope: !6388)
!6570 = !DILocation(line: 3010, column: 2, scope: !6388)
!6571 = !DILocation(line: 3015, column: 2, scope: !6388)
!6572 = !DILocation(line: 3015, column: 9, scope: !6388)
!6573 = !DILocation(line: 3015, column: 14, scope: !6388)
!6574 = !DILocation(line: 3017, column: 14, scope: !6388)
!6575 = !DILocation(line: 3017, column: 20, scope: !6388)
!6576 = !DILocation(line: 3017, column: 2, scope: !6388)
!6577 = !DILocalVariable(name: "__ret_warn_on", scope: !6436, file: !3, line: 3018, type: !220)
!6578 = !DILocation(line: 3018, column: 2, scope: !6436)
!6579 = !DILocation(line: 340, column: 31, scope: !6434, inlinedAt: !6435)
!6580 = !DILocation(line: 101, column: 20, scope: !6449, inlinedAt: !6451)
!6581 = !DILocation(line: 101, column: 23, scope: !6449, inlinedAt: !6451)
!6582 = !DILocation(line: 101, column: 2, scope: !6449, inlinedAt: !6451)
!6583 = !DILocation(line: 102, column: 2, scope: !6449, inlinedAt: !6451)
!6584 = !DILocation(line: 341, column: 32, scope: !6434, inlinedAt: !6435)
!6585 = !DILocation(line: 457, column: 35, scope: !6429, inlinedAt: !6433)
!6586 = !DILocation(line: 178, column: 33, scope: !6427, inlinedAt: !6428)
!6587 = !DILocation(line: 178, column: 32, scope: !6427, inlinedAt: !6428)
!6588 = !DILocation(line: 178, column: 36, scope: !6427, inlinedAt: !6428)
!6589 = !DILocation(line: 165, column: 9, scope: !6422, inlinedAt: !6426)
!6590 = !{i32 -2146545625}
!6591 = !DILocation(line: 165, column: 11, scope: !6422, inlinedAt: !6426)
!6592 = !DILocation(line: 3018, column: 2, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 3018, column: 2)
!6594 = !DILocation(line: 3018, column: 2, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 3018, column: 2)
!6596 = !DILocation(line: 3018, column: 2, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 3018, column: 2)
!6598 = !DILocation(line: 3018, column: 2, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 3018, column: 2)
!6600 = !{i32 -2141492217, i32 -2141492188, i32 -2141492142, i32 -2141492084, i32 -2141492030, i32 -2141491976, i32 -2141491921, i32 -2141491890}
!6601 = !DILocation(line: 3018, column: 2, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 3018, column: 2)
!6603 = !{i32 -2141491475, i32 -2141491468, i32 -2141491416, i32 -2141491385, i32 -2141491355}
!6604 = !DILocation(line: 3018, column: 2, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 3018, column: 2)
!6606 = !DILocation(line: 3019, column: 2, scope: !6388)
!6607 = !DILocation(line: 3019, column: 2, scope: !6404)
!6608 = !DILocation(line: 3019, column: 2, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 3019, column: 2)
!6610 = !DILocation(line: 3019, column: 2, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6609, file: !3, line: 3019, column: 2)
!6612 = !DILocation(line: 3019, column: 2, scope: !6416)
!6613 = !DILocation(line: 27, column: 25, scope: !6397, inlinedAt: !6415)
!6614 = !DILocation(line: 71, column: 19, scope: !6406, inlinedAt: !6418)
!6615 = !DILocation(line: 71, column: 22, scope: !6406, inlinedAt: !6418)
!6616 = !DILocation(line: 71, column: 2, scope: !6406, inlinedAt: !6418)
!6617 = !DILocation(line: 72, column: 2, scope: !6406, inlinedAt: !6418)
!6618 = !DILocation(line: 28, column: 26, scope: !6397, inlinedAt: !6415)
!6619 = !DILocation(line: 29, column: 9, scope: !6390, inlinedAt: !6414)
!6620 = !DILocalVariable(name: "__wq_entry", scope: !6403, file: !3, line: 3019, type: !6621)
!6621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1567, line: 29, size: 320, elements: !6622)
!6622 = !{!6623, !6624, !6625, !6631}
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6621, file: !1567, line: 30, baseType: !7, size: 32)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6621, file: !1567, line: 31, baseType: !185, size: 64, offset: 64)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6621, file: !1567, line: 32, baseType: !6626, size: 64, offset: 128)
!6626 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1567, line: 16, baseType: !6627)
!6627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6628, size: 64)
!6628 = !DISubroutineType(types: !6629)
!6629 = !{!220, !6630, !7, !220, !185}
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6621, size: 64)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6621, file: !1567, line: 33, baseType: !246, size: 128, offset: 192)
!6632 = !DILocation(line: 3019, column: 2, scope: !6403)
!6633 = !DILocalVariable(name: "__ret", scope: !6403, file: !3, line: 3019, type: !193)
!6634 = !DILocalVariable(name: "__int", scope: !6400, file: !3, line: 3019, type: !193)
!6635 = !DILocation(line: 3019, column: 2, scope: !6400)
!6636 = !DILocation(line: 3019, column: 2, scope: !6399)
!6637 = !DILocation(line: 27, column: 25, scope: !6397, inlinedAt: !6398)
!6638 = !DILocation(line: 71, column: 19, scope: !6406, inlinedAt: !6408)
!6639 = !DILocation(line: 71, column: 22, scope: !6406, inlinedAt: !6408)
!6640 = !DILocation(line: 71, column: 2, scope: !6406, inlinedAt: !6408)
!6641 = !DILocation(line: 72, column: 2, scope: !6406, inlinedAt: !6408)
!6642 = !DILocation(line: 28, column: 26, scope: !6397, inlinedAt: !6398)
!6643 = !DILocation(line: 29, column: 9, scope: !6390, inlinedAt: !6396)
!6644 = !DILocation(line: 3019, column: 2, scope: !6401)
!6645 = distinct !{!6645, !6646, !6646}
!6646 = !DILocation(line: 3019, column: 2, scope: !6402)
!6647 = !DILabel(scope: !6403, name: "__out", file: !3, line: 3019)
!6648 = !DILocation(line: 3020, column: 2, scope: !6388)
!6649 = !DILocation(line: 3020, column: 9, scope: !6388)
!6650 = !DILocation(line: 3020, column: 19, scope: !6388)
!6651 = !DILocation(line: 3021, column: 16, scope: !6388)
!6652 = !DILocation(line: 3021, column: 22, scope: !6388)
!6653 = !DILocation(line: 3021, column: 2, scope: !6388)
!6654 = !DILabel(scope: !6388, name: "out", file: !3, line: 3022)
!6655 = !DILocation(line: 3022, column: 1, scope: !6388)
!6656 = !DILocation(line: 3023, column: 2, scope: !6388)
!6657 = !DILocation(line: 3025, column: 9, scope: !6388)
!6658 = !DILocation(line: 3025, column: 2, scope: !6388)
!6659 = distinct !DISubprogram(name: "uart_port_check", scope: !3, file: !3, line: 88, type: !6660, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!4276, !195}
!6662 = !DILocalVariable(name: "state", arg: 1, scope: !6659, file: !3, line: 88, type: !195)
!6663 = !DILocation(line: 88, column: 68, scope: !6659)
!6664 = !DILocation(line: 90, column: 2, scope: !6659)
!6665 = !DILocation(line: 90, column: 2, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 90, column: 2)
!6667 = !DILocation(line: 91, column: 9, scope: !6659)
!6668 = !DILocation(line: 91, column: 16, scope: !6659)
!6669 = !DILocation(line: 91, column: 2, scope: !6659)
!6670 = distinct !DISubprogram(name: "uart_match_port", scope: !3, file: !3, line: 3031, type: !6671, scopeLine: 3032, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!220, !4276, !4276}
!6673 = !DILocalVariable(name: "port1", arg: 1, scope: !6670, file: !3, line: 3031, type: !4276)
!6674 = !DILocation(line: 3031, column: 39, scope: !6670)
!6675 = !DILocalVariable(name: "port2", arg: 2, scope: !6670, file: !3, line: 3031, type: !4276)
!6676 = !DILocation(line: 3031, column: 64, scope: !6670)
!6677 = !DILocation(line: 3033, column: 6, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 3033, column: 6)
!6679 = !DILocation(line: 3033, column: 13, scope: !6678)
!6680 = !DILocation(line: 3033, column: 23, scope: !6678)
!6681 = !DILocation(line: 3033, column: 30, scope: !6678)
!6682 = !DILocation(line: 3033, column: 20, scope: !6678)
!6683 = !DILocation(line: 3033, column: 6, scope: !6670)
!6684 = !DILocation(line: 3034, column: 3, scope: !6678)
!6685 = !DILocation(line: 3036, column: 10, scope: !6670)
!6686 = !DILocation(line: 3036, column: 17, scope: !6670)
!6687 = !DILocation(line: 3036, column: 2, scope: !6670)
!6688 = !DILocation(line: 3038, column: 11, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 3036, column: 25)
!6690 = !DILocation(line: 3038, column: 18, scope: !6689)
!6691 = !DILocation(line: 3038, column: 28, scope: !6689)
!6692 = !DILocation(line: 3038, column: 35, scope: !6689)
!6693 = !DILocation(line: 3038, column: 25, scope: !6689)
!6694 = !DILocation(line: 3038, column: 3, scope: !6689)
!6695 = !DILocation(line: 3040, column: 11, scope: !6689)
!6696 = !DILocation(line: 3040, column: 18, scope: !6689)
!6697 = !DILocation(line: 3040, column: 28, scope: !6689)
!6698 = !DILocation(line: 3040, column: 35, scope: !6689)
!6699 = !DILocation(line: 3040, column: 25, scope: !6689)
!6700 = !DILocation(line: 3040, column: 43, scope: !6689)
!6701 = !DILocation(line: 3041, column: 11, scope: !6689)
!6702 = !DILocation(line: 3041, column: 18, scope: !6689)
!6703 = !DILocation(line: 3041, column: 28, scope: !6689)
!6704 = !DILocation(line: 3041, column: 35, scope: !6689)
!6705 = !DILocation(line: 3041, column: 25, scope: !6689)
!6706 = !DILocation(line: 0, scope: !6689)
!6707 = !DILocation(line: 3040, column: 3, scope: !6689)
!6708 = !DILocation(line: 3048, column: 11, scope: !6689)
!6709 = !DILocation(line: 3048, column: 18, scope: !6689)
!6710 = !DILocation(line: 3048, column: 29, scope: !6689)
!6711 = !DILocation(line: 3048, column: 36, scope: !6689)
!6712 = !DILocation(line: 3048, column: 26, scope: !6689)
!6713 = !DILocation(line: 3048, column: 3, scope: !6689)
!6714 = !DILocation(line: 3050, column: 2, scope: !6670)
!6715 = !DILocation(line: 3051, column: 1, scope: !6670)
!6716 = distinct !DISubprogram(name: "uart_handle_dcd_change", scope: !3, file: !3, line: 3061, type: !4304, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6717 = !DILocalVariable(name: "uport", arg: 1, scope: !6716, file: !3, line: 3061, type: !4276)
!6718 = !DILocation(line: 3061, column: 47, scope: !6716)
!6719 = !DILocalVariable(name: "status", arg: 2, scope: !6716, file: !3, line: 3061, type: !7)
!6720 = !DILocation(line: 3061, column: 67, scope: !6716)
!6721 = !DILocalVariable(name: "port", scope: !6716, file: !3, line: 3063, type: !3947)
!6722 = !DILocation(line: 3063, column: 19, scope: !6716)
!6723 = !DILocation(line: 3063, column: 27, scope: !6716)
!6724 = !DILocation(line: 3063, column: 34, scope: !6716)
!6725 = !DILocation(line: 3063, column: 41, scope: !6716)
!6726 = !DILocalVariable(name: "tty", scope: !6716, file: !3, line: 3064, type: !293)
!6727 = !DILocation(line: 3064, column: 21, scope: !6716)
!6728 = !DILocation(line: 3064, column: 27, scope: !6716)
!6729 = !DILocation(line: 3064, column: 33, scope: !6716)
!6730 = !DILocalVariable(name: "ld", scope: !6716, file: !3, line: 3065, type: !4126)
!6731 = !DILocation(line: 3065, column: 20, scope: !6716)
!6732 = !DILocation(line: 3067, column: 2, scope: !6716)
!6733 = !DILocation(line: 3067, column: 2, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3067, column: 2)
!6735 = !DILocation(line: 3069, column: 6, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3069, column: 6)
!6737 = !DILocation(line: 3069, column: 6, scope: !6716)
!6738 = !DILocation(line: 3070, column: 22, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 3069, column: 11)
!6740 = !DILocation(line: 3070, column: 8, scope: !6739)
!6741 = !DILocation(line: 3070, column: 6, scope: !6739)
!6742 = !DILocation(line: 3071, column: 7, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 3071, column: 7)
!6744 = !DILocation(line: 3071, column: 7, scope: !6739)
!6745 = !DILocation(line: 3072, column: 8, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 3072, column: 8)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 3071, column: 11)
!6748 = !DILocation(line: 3072, column: 12, scope: !6746)
!6749 = !DILocation(line: 3072, column: 17, scope: !6746)
!6750 = !DILocation(line: 3072, column: 8, scope: !6747)
!6751 = !DILocation(line: 3073, column: 5, scope: !6746)
!6752 = !DILocation(line: 3073, column: 9, scope: !6746)
!6753 = !DILocation(line: 3073, column: 14, scope: !6746)
!6754 = !DILocation(line: 3073, column: 25, scope: !6746)
!6755 = !DILocation(line: 3073, column: 30, scope: !6746)
!6756 = !DILocation(line: 3074, column: 20, scope: !6747)
!6757 = !DILocation(line: 3074, column: 4, scope: !6747)
!6758 = !DILocation(line: 3075, column: 3, scope: !6747)
!6759 = !DILocation(line: 3076, column: 2, scope: !6739)
!6760 = !DILocation(line: 3078, column: 2, scope: !6716)
!6761 = !DILocation(line: 3078, column: 9, scope: !6716)
!6762 = !DILocation(line: 3078, column: 16, scope: !6716)
!6763 = !DILocation(line: 3078, column: 19, scope: !6716)
!6764 = !DILocation(line: 3080, column: 23, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 3080, column: 6)
!6766 = !DILocation(line: 3080, column: 6, scope: !6765)
!6767 = !DILocation(line: 3080, column: 6, scope: !6716)
!6768 = !DILocation(line: 3081, column: 7, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 3081, column: 7)
!6770 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 3080, column: 31)
!6771 = !DILocation(line: 3081, column: 7, scope: !6770)
!6772 = !DILocation(line: 3082, column: 4, scope: !6769)
!6773 = !DILocation(line: 3083, column: 12, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3083, column: 12)
!6775 = !DILocation(line: 3083, column: 12, scope: !6769)
!6776 = !DILocation(line: 3084, column: 15, scope: !6774)
!6777 = !DILocation(line: 3084, column: 4, scope: !6774)
!6778 = !DILocation(line: 3085, column: 2, scope: !6770)
!6779 = !DILocation(line: 3086, column: 1, scope: !6716)
!6780 = distinct !DISubprogram(name: "uart_dcd_enabled", scope: !3, file: !3, line: 53, type: !4316, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6781 = !DILocalVariable(name: "uport", arg: 1, scope: !6780, file: !3, line: 53, type: !4276)
!6782 = !DILocation(line: 53, column: 47, scope: !6780)
!6783 = !DILocation(line: 55, column: 12, scope: !6780)
!6784 = !DILocation(line: 55, column: 19, scope: !6780)
!6785 = !DILocation(line: 55, column: 26, scope: !6780)
!6786 = !DILocation(line: 55, column: 10, scope: !6780)
!6787 = !DILocation(line: 55, column: 9, scope: !6780)
!6788 = !DILocation(line: 55, column: 2, scope: !6780)
!6789 = distinct !DISubprogram(name: "uart_handle_cts_change", scope: !3, file: !3, line: 3096, type: !4304, scopeLine: 3097, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6790 = !DILocalVariable(name: "uport", arg: 1, scope: !6789, file: !3, line: 3096, type: !4276)
!6791 = !DILocation(line: 3096, column: 47, scope: !6789)
!6792 = !DILocalVariable(name: "status", arg: 2, scope: !6789, file: !3, line: 3096, type: !7)
!6793 = !DILocation(line: 3096, column: 67, scope: !6789)
!6794 = !DILocation(line: 3098, column: 2, scope: !6789)
!6795 = !DILocation(line: 3098, column: 2, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 3098, column: 2)
!6797 = !DILocation(line: 3100, column: 2, scope: !6789)
!6798 = !DILocation(line: 3100, column: 9, scope: !6789)
!6799 = !DILocation(line: 3100, column: 16, scope: !6789)
!6800 = !DILocation(line: 3100, column: 19, scope: !6789)
!6801 = !DILocation(line: 3102, column: 24, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 3102, column: 6)
!6803 = !DILocation(line: 3102, column: 6, scope: !6802)
!6804 = !DILocation(line: 3102, column: 6, scope: !6789)
!6805 = !DILocation(line: 3103, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 3103, column: 7)
!6807 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 3102, column: 32)
!6808 = !DILocation(line: 3103, column: 14, scope: !6806)
!6809 = !DILocation(line: 3103, column: 7, scope: !6807)
!6810 = !DILocation(line: 3104, column: 8, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 3104, column: 8)
!6812 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3103, column: 26)
!6813 = !DILocation(line: 3104, column: 8, scope: !6812)
!6814 = !DILocation(line: 3105, column: 5, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 3104, column: 16)
!6816 = !DILocation(line: 3105, column: 12, scope: !6815)
!6817 = !DILocation(line: 3105, column: 23, scope: !6815)
!6818 = !DILocation(line: 3106, column: 5, scope: !6815)
!6819 = !DILocation(line: 3106, column: 12, scope: !6815)
!6820 = !DILocation(line: 3106, column: 17, scope: !6815)
!6821 = !DILocation(line: 3106, column: 26, scope: !6815)
!6822 = !DILocation(line: 3107, column: 23, scope: !6815)
!6823 = !DILocation(line: 3107, column: 5, scope: !6815)
!6824 = !DILocation(line: 3108, column: 4, scope: !6815)
!6825 = !DILocation(line: 3109, column: 3, scope: !6812)
!6826 = !DILocation(line: 3110, column: 9, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 3110, column: 8)
!6828 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3109, column: 10)
!6829 = !DILocation(line: 3110, column: 8, scope: !6828)
!6830 = !DILocation(line: 3111, column: 5, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 3110, column: 17)
!6832 = !DILocation(line: 3111, column: 12, scope: !6831)
!6833 = !DILocation(line: 3111, column: 23, scope: !6831)
!6834 = !DILocation(line: 3112, column: 5, scope: !6831)
!6835 = !DILocation(line: 3112, column: 12, scope: !6831)
!6836 = !DILocation(line: 3112, column: 17, scope: !6831)
!6837 = !DILocation(line: 3112, column: 25, scope: !6831)
!6838 = !DILocation(line: 3113, column: 4, scope: !6831)
!6839 = !DILocation(line: 3116, column: 2, scope: !6807)
!6840 = !DILocation(line: 3117, column: 1, scope: !6789)
!6841 = distinct !DISubprogram(name: "uart_softcts_mode", scope: !94, file: !94, line: 447, type: !6219, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6842 = !DILocalVariable(name: "uport", arg: 1, scope: !6841, file: !94, line: 447, type: !4276)
!6843 = !DILocation(line: 447, column: 56, scope: !6841)
!6844 = !DILocalVariable(name: "mask", scope: !6841, file: !94, line: 449, type: !194)
!6845 = !DILocation(line: 449, column: 11, scope: !6841)
!6846 = !DILocation(line: 451, column: 11, scope: !6841)
!6847 = !DILocation(line: 451, column: 18, scope: !6841)
!6848 = !DILocation(line: 451, column: 27, scope: !6841)
!6849 = !DILocation(line: 451, column: 25, scope: !6841)
!6850 = !DILocation(line: 451, column: 33, scope: !6841)
!6851 = !DILocation(line: 451, column: 2, scope: !6841)
!6852 = distinct !DISubprogram(name: "uart_insert_char", scope: !3, file: !3, line: 3132, type: !6853, scopeLine: 3134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6853 = !DISubroutineType(types: !6854)
!6854 = !{null, !4276, !7, !7, !7, !7}
!6855 = !DILocalVariable(name: "port", arg: 1, scope: !6852, file: !3, line: 3132, type: !4276)
!6856 = !DILocation(line: 3132, column: 41, scope: !6852)
!6857 = !DILocalVariable(name: "status", arg: 2, scope: !6852, file: !3, line: 3132, type: !7)
!6858 = !DILocation(line: 3132, column: 60, scope: !6852)
!6859 = !DILocalVariable(name: "overrun", arg: 3, scope: !6852, file: !3, line: 3133, type: !7)
!6860 = !DILocation(line: 3133, column: 17, scope: !6852)
!6861 = !DILocalVariable(name: "ch", arg: 4, scope: !6852, file: !3, line: 3133, type: !7)
!6862 = !DILocation(line: 3133, column: 39, scope: !6852)
!6863 = !DILocalVariable(name: "flag", arg: 5, scope: !6852, file: !3, line: 3133, type: !7)
!6864 = !DILocation(line: 3133, column: 56, scope: !6852)
!6865 = !DILocalVariable(name: "tport", scope: !6852, file: !3, line: 3135, type: !3947)
!6866 = !DILocation(line: 3135, column: 19, scope: !6852)
!6867 = !DILocation(line: 3135, column: 28, scope: !6852)
!6868 = !DILocation(line: 3135, column: 34, scope: !6852)
!6869 = !DILocation(line: 3135, column: 41, scope: !6852)
!6870 = !DILocation(line: 3137, column: 7, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 3137, column: 6)
!6872 = !DILocation(line: 3137, column: 16, scope: !6871)
!6873 = !DILocation(line: 3137, column: 22, scope: !6871)
!6874 = !DILocation(line: 3137, column: 14, scope: !6871)
!6875 = !DILocation(line: 3137, column: 44, scope: !6871)
!6876 = !DILocation(line: 3137, column: 43, scope: !6871)
!6877 = !DILocation(line: 3137, column: 41, scope: !6871)
!6878 = !DILocation(line: 3137, column: 53, scope: !6871)
!6879 = !DILocation(line: 3137, column: 6, scope: !6852)
!6880 = !DILocation(line: 3138, column: 28, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 3138, column: 7)
!6882 = !DILocation(line: 3138, column: 35, scope: !6881)
!6883 = !DILocation(line: 3138, column: 39, scope: !6881)
!6884 = !DILocation(line: 3138, column: 7, scope: !6881)
!6885 = !DILocation(line: 3138, column: 45, scope: !6881)
!6886 = !DILocation(line: 3138, column: 7, scope: !6871)
!6887 = !DILocation(line: 3139, column: 6, scope: !6881)
!6888 = !DILocation(line: 3139, column: 12, scope: !6881)
!6889 = !DILocation(line: 3139, column: 19, scope: !6881)
!6890 = !DILocation(line: 3139, column: 4, scope: !6881)
!6891 = !DILocation(line: 3138, column: 48, scope: !6881)
!6892 = !DILocation(line: 3145, column: 6, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 3145, column: 6)
!6894 = !DILocation(line: 3145, column: 16, scope: !6893)
!6895 = !DILocation(line: 3145, column: 22, scope: !6893)
!6896 = !DILocation(line: 3145, column: 15, scope: !6893)
!6897 = !DILocation(line: 3145, column: 13, scope: !6893)
!6898 = !DILocation(line: 3145, column: 43, scope: !6893)
!6899 = !DILocation(line: 3145, column: 41, scope: !6893)
!6900 = !DILocation(line: 3145, column: 6, scope: !6852)
!6901 = !DILocation(line: 3146, column: 28, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 3146, column: 7)
!6903 = !DILocation(line: 3146, column: 7, scope: !6902)
!6904 = !DILocation(line: 3146, column: 51, scope: !6902)
!6905 = !DILocation(line: 3146, column: 7, scope: !6893)
!6906 = !DILocation(line: 3147, column: 6, scope: !6902)
!6907 = !DILocation(line: 3147, column: 12, scope: !6902)
!6908 = !DILocation(line: 3147, column: 19, scope: !6902)
!6909 = !DILocation(line: 3147, column: 4, scope: !6902)
!6910 = !DILocation(line: 3146, column: 54, scope: !6902)
!6911 = !DILocation(line: 3148, column: 1, scope: !6852)
!6912 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !6913, file: !6913, line: 18, type: !6914, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6913 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!220, !3947, !497, !190}
!6916 = !DILocalVariable(name: "port", arg: 1, scope: !6912, file: !6913, line: 18, type: !3947)
!6917 = !DILocation(line: 18, column: 57, scope: !6912)
!6918 = !DILocalVariable(name: "ch", arg: 2, scope: !6912, file: !6913, line: 19, type: !497)
!6919 = !DILocation(line: 19, column: 20, scope: !6912)
!6920 = !DILocalVariable(name: "flag", arg: 3, scope: !6912, file: !6913, line: 19, type: !190)
!6921 = !DILocation(line: 19, column: 29, scope: !6912)
!6922 = !DILocalVariable(name: "tb", scope: !6912, file: !6913, line: 21, type: !206)
!6923 = !DILocation(line: 21, column: 21, scope: !6912)
!6924 = !DILocation(line: 21, column: 26, scope: !6912)
!6925 = !DILocation(line: 21, column: 32, scope: !6912)
!6926 = !DILocation(line: 21, column: 36, scope: !6912)
!6927 = !DILocalVariable(name: "change", scope: !6912, file: !6913, line: 22, type: !220)
!6928 = !DILocation(line: 22, column: 6, scope: !6912)
!6929 = !DILocation(line: 24, column: 12, scope: !6912)
!6930 = !DILocation(line: 24, column: 16, scope: !6912)
!6931 = !DILocation(line: 24, column: 22, scope: !6912)
!6932 = !DILocation(line: 24, column: 37, scope: !6912)
!6933 = !DILocation(line: 24, column: 41, scope: !6912)
!6934 = !DILocation(line: 24, column: 46, scope: !6912)
!6935 = !DILocation(line: 0, scope: !6912)
!6936 = !DILocation(line: 24, column: 9, scope: !6912)
!6937 = !DILocation(line: 25, column: 7, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6912, file: !6913, line: 25, column: 6)
!6939 = !DILocation(line: 25, column: 14, scope: !6938)
!6940 = !DILocation(line: 25, column: 17, scope: !6938)
!6941 = !DILocation(line: 25, column: 21, scope: !6938)
!6942 = !DILocation(line: 25, column: 28, scope: !6938)
!6943 = !DILocation(line: 25, column: 32, scope: !6938)
!6944 = !DILocation(line: 25, column: 26, scope: !6938)
!6945 = !DILocation(line: 25, column: 6, scope: !6912)
!6946 = !DILocation(line: 26, column: 8, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !6913, line: 26, column: 7)
!6948 = distinct !DILexicalBlock(scope: !6938, file: !6913, line: 25, column: 38)
!6949 = !DILocation(line: 26, column: 12, scope: !6947)
!6950 = !DILocation(line: 26, column: 7, scope: !6947)
!6951 = !DILocation(line: 26, column: 18, scope: !6947)
!6952 = !DILocation(line: 26, column: 7, scope: !6948)
!6953 = !DILocation(line: 27, column: 34, scope: !6947)
!6954 = !DILocation(line: 27, column: 18, scope: !6947)
!6955 = !DILocation(line: 27, column: 22, scope: !6947)
!6956 = !DILocation(line: 27, column: 26, scope: !6947)
!6957 = !DILocation(line: 27, column: 5, scope: !6947)
!6958 = !DILocation(line: 27, column: 32, scope: !6947)
!6959 = !DILocation(line: 27, column: 4, scope: !6947)
!6960 = !DILocation(line: 28, column: 35, scope: !6948)
!6961 = !DILocation(line: 28, column: 17, scope: !6948)
!6962 = !DILocation(line: 28, column: 21, scope: !6948)
!6963 = !DILocation(line: 28, column: 25, scope: !6948)
!6964 = !DILocation(line: 28, column: 29, scope: !6948)
!6965 = !DILocation(line: 28, column: 4, scope: !6948)
!6966 = !DILocation(line: 28, column: 33, scope: !6948)
!6967 = !DILocation(line: 29, column: 3, scope: !6948)
!6968 = !DILocation(line: 31, column: 32, scope: !6912)
!6969 = !DILocation(line: 31, column: 38, scope: !6912)
!6970 = !DILocation(line: 31, column: 42, scope: !6912)
!6971 = !DILocation(line: 31, column: 9, scope: !6912)
!6972 = !DILocation(line: 31, column: 2, scope: !6912)
!6973 = !DILocation(line: 32, column: 1, scope: !6912)
!6974 = distinct !DISubprogram(name: "uart_get_rs485_mode", scope: !3, file: !3, line: 3216, type: !4316, scopeLine: 3217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !277)
!6975 = !DILocalVariable(name: "port", arg: 1, scope: !6974, file: !3, line: 3216, type: !4276)
!6976 = !DILocation(line: 3216, column: 43, scope: !6974)
!6977 = !DILocalVariable(name: "rs485conf", scope: !6974, file: !3, line: 3218, type: !4334)
!6978 = !DILocation(line: 3218, column: 23, scope: !6974)
!6979 = !DILocation(line: 3218, column: 36, scope: !6974)
!6980 = !DILocation(line: 3218, column: 42, scope: !6974)
!6981 = !DILocalVariable(name: "dev", scope: !6974, file: !3, line: 3219, type: !308)
!6982 = !DILocation(line: 3219, column: 17, scope: !6974)
!6983 = !DILocation(line: 3219, column: 23, scope: !6974)
!6984 = !DILocation(line: 3219, column: 29, scope: !6974)
!6985 = !DILocalVariable(name: "rs485_delay", scope: !6974, file: !3, line: 3220, type: !6986)
!6986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, size: 64, elements: !1654)
!6987 = !DILocation(line: 3220, column: 6, scope: !6974)
!6988 = !DILocalVariable(name: "ret", scope: !6974, file: !3, line: 3221, type: !220)
!6989 = !DILocation(line: 3221, column: 6, scope: !6974)
!6990 = !DILocation(line: 3223, column: 39, scope: !6974)
!6991 = !DILocation(line: 3224, column: 11, scope: !6974)
!6992 = !DILocation(line: 3223, column: 8, scope: !6974)
!6993 = !DILocation(line: 3223, column: 6, scope: !6974)
!6994 = !DILocation(line: 3225, column: 7, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3225, column: 6)
!6996 = !DILocation(line: 3225, column: 6, scope: !6974)
!6997 = !DILocation(line: 3226, column: 38, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 3225, column: 12)
!6999 = !DILocation(line: 3226, column: 3, scope: !6998)
!7000 = !DILocation(line: 3226, column: 14, scope: !6998)
!7001 = !DILocation(line: 3226, column: 36, scope: !6998)
!7002 = !DILocation(line: 3227, column: 37, scope: !6998)
!7003 = !DILocation(line: 3227, column: 3, scope: !6998)
!7004 = !DILocation(line: 3227, column: 14, scope: !6998)
!7005 = !DILocation(line: 3227, column: 35, scope: !6998)
!7006 = !DILocation(line: 3228, column: 2, scope: !6998)
!7007 = !DILocation(line: 3229, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 3228, column: 9)
!7009 = !DILocation(line: 3229, column: 14, scope: !7008)
!7010 = !DILocation(line: 3229, column: 36, scope: !7008)
!7011 = !DILocation(line: 3230, column: 3, scope: !7008)
!7012 = !DILocation(line: 3230, column: 14, scope: !7008)
!7013 = !DILocation(line: 3230, column: 35, scope: !7008)
!7014 = !DILocation(line: 3237, column: 2, scope: !6974)
!7015 = !DILocation(line: 3237, column: 13, scope: !6974)
!7016 = !DILocation(line: 3237, column: 19, scope: !6974)
!7017 = !DILocation(line: 3240, column: 2, scope: !6974)
!7018 = !DILocation(line: 3240, column: 13, scope: !6974)
!7019 = !DILocation(line: 3240, column: 19, scope: !6974)
!7020 = !DILocation(line: 3242, column: 32, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3242, column: 6)
!7022 = !DILocation(line: 3242, column: 6, scope: !7021)
!7023 = !DILocation(line: 3242, column: 6, scope: !6974)
!7024 = !DILocation(line: 3243, column: 3, scope: !7021)
!7025 = !DILocation(line: 3243, column: 14, scope: !7021)
!7026 = !DILocation(line: 3243, column: 20, scope: !7021)
!7027 = !DILocation(line: 3245, column: 32, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3245, column: 6)
!7029 = !DILocation(line: 3245, column: 6, scope: !7028)
!7030 = !DILocation(line: 3245, column: 6, scope: !6974)
!7031 = !DILocation(line: 3246, column: 3, scope: !7028)
!7032 = !DILocation(line: 3246, column: 14, scope: !7028)
!7033 = !DILocation(line: 3246, column: 20, scope: !7028)
!7034 = !DILocation(line: 3248, column: 32, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3248, column: 6)
!7036 = !DILocation(line: 3248, column: 6, scope: !7035)
!7037 = !DILocation(line: 3248, column: 6, scope: !6974)
!7038 = !DILocation(line: 3249, column: 3, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 3248, column: 62)
!7040 = !DILocation(line: 3249, column: 14, scope: !7039)
!7041 = !DILocation(line: 3249, column: 20, scope: !7039)
!7042 = !DILocation(line: 3250, column: 3, scope: !7039)
!7043 = !DILocation(line: 3250, column: 14, scope: !7039)
!7044 = !DILocation(line: 3250, column: 20, scope: !7039)
!7045 = !DILocation(line: 3251, column: 2, scope: !7039)
!7046 = !DILocation(line: 3258, column: 50, scope: !6974)
!7047 = !DILocation(line: 3258, column: 26, scope: !6974)
!7048 = !DILocation(line: 3258, column: 2, scope: !6974)
!7049 = !DILocation(line: 3258, column: 8, scope: !6974)
!7050 = !DILocation(line: 3258, column: 24, scope: !6974)
!7051 = !DILocation(line: 3260, column: 13, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6974, file: !3, line: 3260, column: 6)
!7053 = !DILocation(line: 3260, column: 19, scope: !7052)
!7054 = !DILocation(line: 3260, column: 6, scope: !7052)
!7055 = !DILocation(line: 3260, column: 6, scope: !6974)
!7056 = !DILocation(line: 3261, column: 17, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 3260, column: 37)
!7058 = !DILocation(line: 3261, column: 23, scope: !7057)
!7059 = !DILocation(line: 3261, column: 9, scope: !7057)
!7060 = !DILocation(line: 3261, column: 7, scope: !7057)
!7061 = !DILocation(line: 3262, column: 3, scope: !7057)
!7062 = !DILocation(line: 3262, column: 9, scope: !7057)
!7063 = !DILocation(line: 3262, column: 25, scope: !7057)
!7064 = !DILocation(line: 3263, column: 24, scope: !7057)
!7065 = !DILocation(line: 3263, column: 29, scope: !7057)
!7066 = !DILocation(line: 3263, column: 10, scope: !7057)
!7067 = !DILocation(line: 3263, column: 3, scope: !7057)
!7068 = !DILocation(line: 3266, column: 2, scope: !6974)
!7069 = !DILocation(line: 3267, column: 1, scope: !6974)
!7070 = distinct !DISubprogram(name: "device_property_read_bool", scope: !7071, file: !7071, line: 123, type: !7072, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7071 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!7072 = !DISubroutineType(types: !7073)
!7073 = !{!560, !308, !316}
!7074 = !DILocalVariable(name: "dev", arg: 1, scope: !7070, file: !7071, line: 123, type: !308)
!7075 = !DILocation(line: 123, column: 61, scope: !7070)
!7076 = !DILocalVariable(name: "propname", arg: 2, scope: !7070, file: !7071, line: 124, type: !316)
!7077 = !DILocation(line: 124, column: 23, scope: !7070)
!7078 = !DILocation(line: 126, column: 33, scope: !7070)
!7079 = !DILocation(line: 126, column: 38, scope: !7070)
!7080 = !DILocation(line: 126, column: 9, scope: !7070)
!7081 = !DILocation(line: 126, column: 2, scope: !7070)
!7082 = distinct !DISubprogram(name: "PTR_ERR", scope: !6381, file: !6381, line: 29, type: !7083, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!193, !2201}
!7085 = !DILocalVariable(name: "ptr", arg: 1, scope: !7082, file: !6381, line: 29, type: !2201)
!7086 = !DILocation(line: 29, column: 61, scope: !7082)
!7087 = !DILocation(line: 31, column: 16, scope: !7082)
!7088 = !DILocation(line: 31, column: 9, scope: !7082)
!7089 = !DILocation(line: 31, column: 2, scope: !7082)
!7090 = distinct !DISubprogram(name: "test_bit", scope: !7091, file: !7091, line: 132, type: !7092, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7091 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7092 = !DISubroutineType(types: !7093)
!7093 = !{!560, !193, !7094}
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7095, size: 64)
!7095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7096)
!7096 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !187)
!7097 = !DILocalVariable(name: "nr", arg: 1, scope: !7098, file: !7099, line: 210, type: !193)
!7098 = distinct !DISubprogram(name: "variable_test_bit", scope: !7099, file: !7099, line: 210, type: !7092, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7099 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7100 = !DILocation(line: 210, column: 52, scope: !7098, inlinedAt: !7101)
!7101 = distinct !DILocation(line: 135, column: 9, scope: !7090)
!7102 = !DILocalVariable(name: "addr", arg: 2, scope: !7098, file: !7099, line: 210, type: !7094)
!7103 = !DILocation(line: 210, column: 86, scope: !7098, inlinedAt: !7101)
!7104 = !DILocalVariable(name: "oldbit", scope: !7098, file: !7099, line: 212, type: !560)
!7105 = !DILocation(line: 212, column: 7, scope: !7098, inlinedAt: !7101)
!7106 = !DILocalVariable(name: "nr", arg: 1, scope: !7107, file: !7099, line: 204, type: !193)
!7107 = distinct !DISubprogram(name: "constant_test_bit", scope: !7099, file: !7099, line: 204, type: !7092, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7108 = !DILocation(line: 204, column: 52, scope: !7107, inlinedAt: !7109)
!7109 = distinct !DILocation(line: 135, column: 9, scope: !7090)
!7110 = !DILocalVariable(name: "addr", arg: 2, scope: !7107, file: !7099, line: 204, type: !7094)
!7111 = !DILocation(line: 204, column: 86, scope: !7107, inlinedAt: !7109)
!7112 = !DILocation(line: 69, column: 73, scope: !6406, inlinedAt: !7113)
!7113 = distinct !DILocation(line: 134, column: 2, scope: !7090)
!7114 = !DILocation(line: 69, column: 83, scope: !6406, inlinedAt: !7113)
!7115 = !DILocalVariable(name: "nr", arg: 1, scope: !7090, file: !7091, line: 132, type: !193)
!7116 = !DILocation(line: 132, column: 34, scope: !7090)
!7117 = !DILocalVariable(name: "addr", arg: 2, scope: !7090, file: !7091, line: 132, type: !7094)
!7118 = !DILocation(line: 132, column: 68, scope: !7090)
!7119 = !DILocation(line: 134, column: 25, scope: !7090)
!7120 = !DILocation(line: 134, column: 32, scope: !7090)
!7121 = !DILocation(line: 134, column: 30, scope: !7090)
!7122 = !DILocation(line: 71, column: 19, scope: !6406, inlinedAt: !7113)
!7123 = !DILocation(line: 71, column: 22, scope: !6406, inlinedAt: !7113)
!7124 = !DILocation(line: 71, column: 2, scope: !6406, inlinedAt: !7113)
!7125 = !DILocation(line: 72, column: 2, scope: !6406, inlinedAt: !7113)
!7126 = !DILocation(line: 135, column: 9, scope: !7090)
!7127 = !DILocation(line: 206, column: 19, scope: !7107, inlinedAt: !7109)
!7128 = !DILocation(line: 206, column: 22, scope: !7107, inlinedAt: !7109)
!7129 = !DILocation(line: 206, column: 15, scope: !7107, inlinedAt: !7109)
!7130 = !DILocation(line: 207, column: 4, scope: !7107, inlinedAt: !7109)
!7131 = !DILocation(line: 207, column: 9, scope: !7107, inlinedAt: !7109)
!7132 = !DILocation(line: 207, column: 12, scope: !7107, inlinedAt: !7109)
!7133 = !DILocation(line: 206, column: 44, scope: !7107, inlinedAt: !7109)
!7134 = !DILocation(line: 207, column: 37, scope: !7107, inlinedAt: !7109)
!7135 = !DILocation(line: 217, column: 33, scope: !7098, inlinedAt: !7101)
!7136 = !DILocation(line: 217, column: 46, scope: !7098, inlinedAt: !7101)
!7137 = !DILocation(line: 214, column: 2, scope: !7098, inlinedAt: !7101)
!7138 = !{i32 -2147064854, i32 -2147064794}
!7139 = !DILocation(line: 219, column: 9, scope: !7098, inlinedAt: !7101)
!7140 = !DILocation(line: 135, column: 2, scope: !7090)
!7141 = distinct !DISubprogram(name: "kasan_check_read", scope: !7142, file: !7142, line: 34, type: !7143, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7142 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7143 = !DISubroutineType(types: !7144)
!7144 = !{!560, !5977, !7}
!7145 = !DILocalVariable(name: "p", arg: 1, scope: !7141, file: !7142, line: 34, type: !5977)
!7146 = !DILocation(line: 34, column: 58, scope: !7141)
!7147 = !DILocalVariable(name: "size", arg: 2, scope: !7141, file: !7142, line: 34, type: !7)
!7148 = !DILocation(line: 34, column: 74, scope: !7141)
!7149 = !DILocation(line: 36, column: 2, scope: !7141)
!7150 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7151, file: !7151, line: 178, type: !7152, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7151 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7152 = !DISubroutineType(types: !7153)
!7153 = !{null, !5977, !399, !220}
!7154 = !DILocalVariable(name: "ptr", arg: 1, scope: !7150, file: !7151, line: 178, type: !5977)
!7155 = !DILocation(line: 178, column: 60, scope: !7150)
!7156 = !DILocalVariable(name: "size", arg: 2, scope: !7150, file: !7151, line: 178, type: !399)
!7157 = !DILocation(line: 178, column: 72, scope: !7150)
!7158 = !DILocalVariable(name: "type", arg: 3, scope: !7150, file: !7151, line: 179, type: !220)
!7159 = !DILocation(line: 179, column: 15, scope: !7150)
!7160 = !DILocation(line: 179, column: 23, scope: !7150)
!7161 = distinct !DISubprogram(name: "set_bit", scope: !7162, file: !7162, line: 26, type: !7163, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7162 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7163 = !DISubroutineType(types: !7164)
!7164 = !{null, !193, !7165}
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7096, size: 64)
!7166 = !DILocalVariable(name: "nr", arg: 1, scope: !7167, file: !7099, line: 52, type: !193)
!7167 = distinct !DISubprogram(name: "arch_set_bit", scope: !7099, file: !7099, line: 52, type: !7163, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7168 = !DILocation(line: 52, column: 19, scope: !7167, inlinedAt: !7169)
!7169 = distinct !DILocation(line: 29, column: 2, scope: !7161)
!7170 = !DILocalVariable(name: "addr", arg: 2, scope: !7167, file: !7099, line: 52, type: !7165)
!7171 = !DILocation(line: 52, column: 47, scope: !7167, inlinedAt: !7169)
!7172 = !DILocation(line: 84, column: 74, scope: !5973, inlinedAt: !7173)
!7173 = distinct !DILocation(line: 28, column: 2, scope: !7161)
!7174 = !DILocation(line: 84, column: 84, scope: !5973, inlinedAt: !7173)
!7175 = !DILocalVariable(name: "nr", arg: 1, scope: !7161, file: !7162, line: 26, type: !193)
!7176 = !DILocation(line: 26, column: 33, scope: !7161)
!7177 = !DILocalVariable(name: "addr", arg: 2, scope: !7161, file: !7162, line: 26, type: !7165)
!7178 = !DILocation(line: 26, column: 61, scope: !7161)
!7179 = !DILocation(line: 28, column: 26, scope: !7161)
!7180 = !DILocation(line: 28, column: 33, scope: !7161)
!7181 = !DILocation(line: 28, column: 31, scope: !7161)
!7182 = !DILocation(line: 86, column: 20, scope: !5973, inlinedAt: !7173)
!7183 = !DILocation(line: 86, column: 23, scope: !5973, inlinedAt: !7173)
!7184 = !DILocation(line: 86, column: 2, scope: !5973, inlinedAt: !7173)
!7185 = !DILocation(line: 87, column: 2, scope: !5973, inlinedAt: !7173)
!7186 = !DILocation(line: 29, column: 15, scope: !7161)
!7187 = !DILocation(line: 29, column: 19, scope: !7161)
!7188 = !DILocation(line: 54, column: 27, scope: !7189, inlinedAt: !7169)
!7189 = distinct !DILexicalBlock(scope: !7167, file: !7099, line: 54, column: 6)
!7190 = !DILocation(line: 54, column: 6, scope: !7189, inlinedAt: !7169)
!7191 = !DILocation(line: 54, column: 6, scope: !7167, inlinedAt: !7169)
!7192 = !DILocation(line: 56, column: 6, scope: !7193, inlinedAt: !7169)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !7099, line: 54, column: 32)
!7194 = !DILocation(line: 57, column: 12, scope: !7193, inlinedAt: !7169)
!7195 = !DILocation(line: 55, column: 3, scope: !7193, inlinedAt: !7169)
!7196 = !{i32 -2147074102}
!7197 = !DILocation(line: 59, column: 2, scope: !7193, inlinedAt: !7169)
!7198 = !DILocation(line: 61, column: 8, scope: !7199, inlinedAt: !7169)
!7199 = distinct !DILexicalBlock(scope: !7189, file: !7099, line: 59, column: 9)
!7200 = !DILocation(line: 61, column: 32, scope: !7199, inlinedAt: !7169)
!7201 = !DILocation(line: 60, column: 3, scope: !7199, inlinedAt: !7169)
!7202 = !{i32 -2147073970}
!7203 = !DILocation(line: 30, column: 1, scope: !7161)
!7204 = distinct !DISubprogram(name: "clear_bit", scope: !7162, file: !7162, line: 39, type: !7163, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7205 = !DILocalVariable(name: "nr", arg: 1, scope: !7206, file: !7099, line: 72, type: !193)
!7206 = distinct !DISubprogram(name: "arch_clear_bit", scope: !7099, file: !7099, line: 72, type: !7163, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7207 = !DILocation(line: 72, column: 21, scope: !7206, inlinedAt: !7208)
!7208 = distinct !DILocation(line: 42, column: 2, scope: !7204)
!7209 = !DILocalVariable(name: "addr", arg: 2, scope: !7206, file: !7099, line: 72, type: !7165)
!7210 = !DILocation(line: 72, column: 49, scope: !7206, inlinedAt: !7208)
!7211 = !DILocation(line: 84, column: 74, scope: !5973, inlinedAt: !7212)
!7212 = distinct !DILocation(line: 41, column: 2, scope: !7204)
!7213 = !DILocation(line: 84, column: 84, scope: !5973, inlinedAt: !7212)
!7214 = !DILocalVariable(name: "nr", arg: 1, scope: !7204, file: !7162, line: 39, type: !193)
!7215 = !DILocation(line: 39, column: 35, scope: !7204)
!7216 = !DILocalVariable(name: "addr", arg: 2, scope: !7204, file: !7162, line: 39, type: !7165)
!7217 = !DILocation(line: 39, column: 63, scope: !7204)
!7218 = !DILocation(line: 41, column: 26, scope: !7204)
!7219 = !DILocation(line: 41, column: 33, scope: !7204)
!7220 = !DILocation(line: 41, column: 31, scope: !7204)
!7221 = !DILocation(line: 86, column: 20, scope: !5973, inlinedAt: !7212)
!7222 = !DILocation(line: 86, column: 23, scope: !5973, inlinedAt: !7212)
!7223 = !DILocation(line: 86, column: 2, scope: !5973, inlinedAt: !7212)
!7224 = !DILocation(line: 87, column: 2, scope: !5973, inlinedAt: !7212)
!7225 = !DILocation(line: 42, column: 17, scope: !7204)
!7226 = !DILocation(line: 42, column: 21, scope: !7204)
!7227 = !DILocation(line: 74, column: 27, scope: !7228, inlinedAt: !7208)
!7228 = distinct !DILexicalBlock(scope: !7206, file: !7099, line: 74, column: 6)
!7229 = !DILocation(line: 74, column: 6, scope: !7228, inlinedAt: !7208)
!7230 = !DILocation(line: 74, column: 6, scope: !7206, inlinedAt: !7208)
!7231 = !DILocation(line: 76, column: 6, scope: !7232, inlinedAt: !7208)
!7232 = distinct !DILexicalBlock(scope: !7228, file: !7099, line: 74, column: 32)
!7233 = !DILocation(line: 77, column: 13, scope: !7232, inlinedAt: !7208)
!7234 = !DILocation(line: 77, column: 12, scope: !7232, inlinedAt: !7208)
!7235 = !DILocation(line: 75, column: 3, scope: !7232, inlinedAt: !7208)
!7236 = !{i32 -2147073148}
!7237 = !DILocation(line: 78, column: 2, scope: !7232, inlinedAt: !7208)
!7238 = !DILocation(line: 80, column: 8, scope: !7239, inlinedAt: !7208)
!7239 = distinct !DILexicalBlock(scope: !7228, file: !7099, line: 78, column: 9)
!7240 = !DILocation(line: 80, column: 32, scope: !7239, inlinedAt: !7208)
!7241 = !DILocation(line: 79, column: 3, scope: !7239, inlinedAt: !7208)
!7242 = !{i32 -2147073016}
!7243 = !DILocation(line: 43, column: 1, scope: !7204)
!7244 = distinct !DISubprogram(name: "kasan_check_write", scope: !7142, file: !7142, line: 38, type: !7143, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7245 = !DILocalVariable(name: "p", arg: 1, scope: !7244, file: !7142, line: 38, type: !5977)
!7246 = !DILocation(line: 38, column: 59, scope: !7244)
!7247 = !DILocalVariable(name: "size", arg: 2, scope: !7244, file: !7142, line: 38, type: !7)
!7248 = !DILocation(line: 38, column: 75, scope: !7244)
!7249 = !DILocation(line: 40, column: 2, scope: !7244)
!7250 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7251, file: !7251, line: 656, type: !1963, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7251 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7252 = !DILocalVariable(name: "__edi", scope: !7253, file: !7251, line: 658, type: !187)
!7253 = distinct !DILexicalBlock(scope: !7250, file: !7251, line: 658, column: 2)
!7254 = !DILocation(line: 658, column: 2, scope: !7253)
!7255 = !DILocalVariable(name: "__esi", scope: !7253, file: !7251, line: 658, type: !187)
!7256 = !DILocalVariable(name: "__edx", scope: !7253, file: !7251, line: 658, type: !187)
!7257 = !DILocalVariable(name: "__ecx", scope: !7253, file: !7251, line: 658, type: !187)
!7258 = !DILocalVariable(name: "__eax", scope: !7253, file: !7251, line: 658, type: !187)
!7259 = !{i32 -2145702746, i32 -2145702014, i32 -2145701780, i32 -2145701729, i32 -2145701701, i32 -2145701676, i32 -2145701992, i32 -2145701979, i32 -2145701541, i32 -2145701422, i32 -2145701887, i32 -2145701860, i32 -2145701832, i32 -2145701802}
!7260 = !DILocation(line: 659, column: 1, scope: !7250)
!7261 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7251, file: !7251, line: 661, type: !1963, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7262 = !DILocalVariable(name: "__edi", scope: !7263, file: !7251, line: 663, type: !187)
!7263 = distinct !DILexicalBlock(scope: !7261, file: !7251, line: 663, column: 2)
!7264 = !DILocation(line: 663, column: 2, scope: !7263)
!7265 = !DILocalVariable(name: "__esi", scope: !7263, file: !7251, line: 663, type: !187)
!7266 = !DILocalVariable(name: "__edx", scope: !7263, file: !7251, line: 663, type: !187)
!7267 = !DILocalVariable(name: "__ecx", scope: !7263, file: !7251, line: 663, type: !187)
!7268 = !DILocalVariable(name: "__eax", scope: !7263, file: !7251, line: 663, type: !187)
!7269 = !{i32 -2145700162, i32 -2145699432, i32 -2145699198, i32 -2145699147, i32 -2145699119, i32 -2145699094, i32 -2145699410, i32 -2145699397, i32 -2145698959, i32 -2145698840, i32 -2145699305, i32 -2145699278, i32 -2145699250, i32 -2145699220}
!7270 = !DILocation(line: 664, column: 1, scope: !7261)
!7271 = distinct !DISubprogram(name: "__uart_start", scope: !3, file: !3, line: 121, type: !3979, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7272 = !DILocalVariable(name: "tty", arg: 1, scope: !7271, file: !3, line: 121, type: !293)
!7273 = !DILocation(line: 121, column: 45, scope: !7271)
!7274 = !DILocalVariable(name: "state", scope: !7271, file: !3, line: 123, type: !195)
!7275 = !DILocation(line: 123, column: 21, scope: !7271)
!7276 = !DILocation(line: 123, column: 29, scope: !7271)
!7277 = !DILocation(line: 123, column: 34, scope: !7271)
!7278 = !DILocalVariable(name: "port", scope: !7271, file: !3, line: 124, type: !4276)
!7279 = !DILocation(line: 124, column: 20, scope: !7271)
!7280 = !DILocation(line: 124, column: 27, scope: !7271)
!7281 = !DILocation(line: 124, column: 34, scope: !7271)
!7282 = !DILocation(line: 126, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 126, column: 6)
!7284 = !DILocation(line: 126, column: 11, scope: !7283)
!7285 = !DILocation(line: 126, column: 31, scope: !7283)
!7286 = !DILocation(line: 126, column: 15, scope: !7283)
!7287 = !DILocation(line: 126, column: 6, scope: !7271)
!7288 = !DILocation(line: 127, column: 3, scope: !7283)
!7289 = !DILocation(line: 127, column: 9, scope: !7283)
!7290 = !DILocation(line: 127, column: 14, scope: !7283)
!7291 = !DILocation(line: 127, column: 23, scope: !7283)
!7292 = !DILocation(line: 128, column: 1, scope: !7271)
!7293 = distinct !DISubprogram(name: "uart_tx_stopped", scope: !94, file: !94, line: 434, type: !4316, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7294 = !DILocalVariable(name: "port", arg: 1, scope: !7293, file: !94, line: 434, type: !4276)
!7295 = !DILocation(line: 434, column: 53, scope: !7293)
!7296 = !DILocalVariable(name: "tty", scope: !7293, file: !94, line: 436, type: !293)
!7297 = !DILocation(line: 436, column: 21, scope: !7293)
!7298 = !DILocation(line: 436, column: 27, scope: !7293)
!7299 = !DILocation(line: 436, column: 33, scope: !7293)
!7300 = !DILocation(line: 436, column: 40, scope: !7293)
!7301 = !DILocation(line: 436, column: 45, scope: !7293)
!7302 = !DILocation(line: 437, column: 7, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7293, file: !94, line: 437, column: 6)
!7304 = !DILocation(line: 437, column: 11, scope: !7303)
!7305 = !DILocation(line: 437, column: 14, scope: !7303)
!7306 = !DILocation(line: 437, column: 19, scope: !7303)
!7307 = !DILocation(line: 437, column: 28, scope: !7303)
!7308 = !DILocation(line: 437, column: 31, scope: !7303)
!7309 = !DILocation(line: 437, column: 37, scope: !7303)
!7310 = !DILocation(line: 437, column: 6, scope: !7293)
!7311 = !DILocation(line: 438, column: 3, scope: !7303)
!7312 = !DILocation(line: 439, column: 2, scope: !7293)
!7313 = !DILocation(line: 440, column: 1, scope: !7293)
!7314 = distinct !DISubprogram(name: "uart_port_dtr_rts", scope: !3, file: !3, line: 158, type: !4443, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7315 = !DILocalVariable(name: "uport", arg: 1, scope: !7314, file: !3, line: 158, type: !4276)
!7316 = !DILocation(line: 158, column: 49, scope: !7314)
!7317 = !DILocalVariable(name: "raise", arg: 2, scope: !7314, file: !3, line: 158, type: !220)
!7318 = !DILocation(line: 158, column: 60, scope: !7314)
!7319 = !DILocalVariable(name: "rs485_on", scope: !7314, file: !3, line: 160, type: !220)
!7320 = !DILocation(line: 160, column: 6, scope: !7314)
!7321 = !DILocation(line: 160, column: 17, scope: !7314)
!7322 = !DILocation(line: 160, column: 24, scope: !7314)
!7323 = !DILocation(line: 160, column: 37, scope: !7314)
!7324 = !DILocation(line: 161, column: 4, scope: !7314)
!7325 = !DILocation(line: 161, column: 11, scope: !7314)
!7326 = !DILocation(line: 161, column: 17, scope: !7314)
!7327 = !DILocation(line: 161, column: 23, scope: !7314)
!7328 = !DILocation(line: 0, scope: !7314)
!7329 = !DILocalVariable(name: "RTS_after_send", scope: !7314, file: !3, line: 162, type: !220)
!7330 = !DILocation(line: 162, column: 6, scope: !7314)
!7331 = !DILocation(line: 162, column: 26, scope: !7314)
!7332 = !DILocation(line: 162, column: 33, scope: !7314)
!7333 = !DILocation(line: 162, column: 39, scope: !7314)
!7334 = !DILocation(line: 162, column: 45, scope: !7314)
!7335 = !DILocation(line: 162, column: 24, scope: !7314)
!7336 = !DILocation(line: 162, column: 23, scope: !7314)
!7337 = !DILocation(line: 164, column: 6, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 164, column: 6)
!7339 = !DILocation(line: 164, column: 6, scope: !7314)
!7340 = !DILocation(line: 165, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 165, column: 7)
!7342 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 164, column: 13)
!7343 = !DILocation(line: 165, column: 16, scope: !7341)
!7344 = !DILocation(line: 165, column: 20, scope: !7341)
!7345 = !DILocation(line: 165, column: 7, scope: !7342)
!7346 = !DILocation(line: 166, column: 4, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 165, column: 36)
!7348 = !DILocation(line: 167, column: 4, scope: !7347)
!7349 = !DILocation(line: 168, column: 3, scope: !7347)
!7350 = !DILocation(line: 169, column: 4, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 168, column: 10)
!7352 = !DILocation(line: 171, column: 2, scope: !7342)
!7353 = !DILocalVariable(name: "clear", scope: !7354, file: !3, line: 172, type: !7)
!7354 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 171, column: 9)
!7355 = !DILocation(line: 172, column: 16, scope: !7354)
!7356 = !DILocation(line: 174, column: 14, scope: !7354)
!7357 = !DILocation(line: 174, column: 23, scope: !7354)
!7358 = !DILocation(line: 174, column: 27, scope: !7354)
!7359 = !DILocation(line: 174, column: 26, scope: !7354)
!7360 = !DILocation(line: 174, column: 12, scope: !7354)
!7361 = !DILocation(line: 174, column: 9, scope: !7354)
!7362 = !DILocation(line: 175, column: 3, scope: !7354)
!7363 = !DILocation(line: 177, column: 1, scope: !7314)
!7364 = distinct !DISubprogram(name: "uart_port_shutdown", scope: !3, file: !3, line: 1688, type: !4231, scopeLine: 1689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7365 = !DILocalVariable(name: "port", arg: 1, scope: !7364, file: !3, line: 1688, type: !3947)
!7366 = !DILocation(line: 1688, column: 49, scope: !7364)
!7367 = !DILocalVariable(name: "state", scope: !7364, file: !3, line: 1690, type: !195)
!7368 = !DILocation(line: 1690, column: 21, scope: !7364)
!7369 = !DILocalVariable(name: "__mptr", scope: !7370, file: !3, line: 1690, type: !185)
!7370 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1690, column: 29)
!7371 = !DILocation(line: 1690, column: 29, scope: !7370)
!7372 = !DILocation(line: 1690, column: 29, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 1690, column: 29)
!7374 = !DILocalVariable(name: "uport", scope: !7364, file: !3, line: 1691, type: !4276)
!7375 = !DILocation(line: 1691, column: 20, scope: !7364)
!7376 = !DILocation(line: 1691, column: 44, scope: !7364)
!7377 = !DILocation(line: 1691, column: 28, scope: !7364)
!7378 = !DILocation(line: 1700, column: 2, scope: !7364)
!7379 = !DILocation(line: 1705, column: 6, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1705, column: 6)
!7381 = !DILocation(line: 1705, column: 6, scope: !7364)
!7382 = !DILocation(line: 1706, column: 3, scope: !7380)
!7383 = !DILocation(line: 1706, column: 10, scope: !7380)
!7384 = !DILocation(line: 1706, column: 15, scope: !7380)
!7385 = !DILocation(line: 1706, column: 24, scope: !7380)
!7386 = !DILocation(line: 1711, column: 6, scope: !7387)
!7387 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1711, column: 6)
!7388 = !DILocation(line: 1711, column: 6, scope: !7364)
!7389 = !DILocation(line: 1712, column: 19, scope: !7387)
!7390 = !DILocation(line: 1712, column: 26, scope: !7387)
!7391 = !DILocation(line: 1712, column: 3, scope: !7387)
!7392 = !DILocation(line: 1713, column: 1, scope: !7364)
!7393 = distinct !DISubprogram(name: "uart_port_ref", scope: !3, file: !3, line: 58, type: !6660, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7394 = !DILocalVariable(name: "v", arg: 1, scope: !7395, file: !5961, line: 200, type: !5964)
!7395 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !5961, file: !5961, line: 200, type: !7396, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!560, !5964, !776, !220}
!7398 = !DILocation(line: 200, column: 63, scope: !7395, inlinedAt: !7399)
!7399 = distinct !DILocation(line: 1093, column: 12, scope: !7400, inlinedAt: !7403)
!7400 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !6430, file: !6430, line: 1086, type: !7401, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7401 = !DISubroutineType(types: !7402)
!7402 = !{!220, !5964, !220, !220}
!7403 = distinct !DILocation(line: 1113, column: 9, scope: !7404, inlinedAt: !7407)
!7404 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !6430, file: !6430, line: 1111, type: !7405, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7405 = !DISubroutineType(types: !7406)
!7406 = !{!560, !5964, !220, !220}
!7407 = distinct !DILocation(line: 789, column: 9, scope: !7408, inlinedAt: !7409)
!7408 = distinct !DISubprogram(name: "atomic_add_unless", scope: !5968, file: !5968, line: 786, type: !7405, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7409 = distinct !DILocation(line: 60, column: 6, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7393, file: !3, line: 60, column: 6)
!7411 = !DILocalVariable(name: "old", arg: 2, scope: !7395, file: !5961, line: 200, type: !776)
!7412 = !DILocation(line: 200, column: 71, scope: !7395, inlinedAt: !7399)
!7413 = !DILocalVariable(name: "new", arg: 3, scope: !7395, file: !5961, line: 200, type: !220)
!7414 = !DILocation(line: 200, column: 80, scope: !7395, inlinedAt: !7399)
!7415 = !DILocalVariable(name: "success", scope: !7416, file: !5961, line: 202, type: !560)
!7416 = distinct !DILexicalBlock(scope: !7395, file: !5961, line: 202, column: 9)
!7417 = !DILocation(line: 202, column: 9, scope: !7416, inlinedAt: !7399)
!7418 = !DILocalVariable(name: "_old", scope: !7416, file: !5961, line: 202, type: !776)
!7419 = !DILocalVariable(name: "__old", scope: !7416, file: !5961, line: 202, type: !220)
!7420 = !DILocalVariable(name: "__new", scope: !7416, file: !5961, line: 202, type: !220)
!7421 = !DILocalVariable(name: "__ptr", scope: !7416, file: !5961, line: 202, type: !4493)
!7422 = !DILocation(line: 23, column: 61, scope: !6390, inlinedAt: !7423)
!7423 = distinct !DILocation(line: 1088, column: 10, scope: !7400, inlinedAt: !7403)
!7424 = !DILocalVariable(name: "v", arg: 1, scope: !7400, file: !6430, line: 1086, type: !5964)
!7425 = !DILocation(line: 1086, column: 40, scope: !7400, inlinedAt: !7403)
!7426 = !DILocalVariable(name: "a", arg: 2, scope: !7400, file: !6430, line: 1086, type: !220)
!7427 = !DILocation(line: 1086, column: 47, scope: !7400, inlinedAt: !7403)
!7428 = !DILocalVariable(name: "u", arg: 3, scope: !7400, file: !6430, line: 1086, type: !220)
!7429 = !DILocation(line: 1086, column: 54, scope: !7400, inlinedAt: !7403)
!7430 = !DILocalVariable(name: "c", scope: !7400, file: !6430, line: 1088, type: !220)
!7431 = !DILocation(line: 1088, column: 6, scope: !7400, inlinedAt: !7403)
!7432 = !DILocalVariable(name: "v", arg: 1, scope: !7404, file: !6430, line: 1111, type: !5964)
!7433 = !DILocation(line: 1111, column: 34, scope: !7404, inlinedAt: !7407)
!7434 = !DILocalVariable(name: "a", arg: 2, scope: !7404, file: !6430, line: 1111, type: !220)
!7435 = !DILocation(line: 1111, column: 41, scope: !7404, inlinedAt: !7407)
!7436 = !DILocalVariable(name: "u", arg: 3, scope: !7404, file: !6430, line: 1111, type: !220)
!7437 = !DILocation(line: 1111, column: 48, scope: !7404, inlinedAt: !7407)
!7438 = !DILocation(line: 99, column: 79, scope: !6449, inlinedAt: !7439)
!7439 = distinct !DILocation(line: 788, column: 2, scope: !7408, inlinedAt: !7409)
!7440 = !DILocation(line: 99, column: 89, scope: !6449, inlinedAt: !7439)
!7441 = !DILocalVariable(name: "v", arg: 1, scope: !7408, file: !5968, line: 786, type: !5964)
!7442 = !DILocation(line: 786, column: 29, scope: !7408, inlinedAt: !7409)
!7443 = !DILocalVariable(name: "a", arg: 2, scope: !7408, file: !5968, line: 786, type: !220)
!7444 = !DILocation(line: 786, column: 36, scope: !7408, inlinedAt: !7409)
!7445 = !DILocalVariable(name: "u", arg: 3, scope: !7408, file: !5968, line: 786, type: !220)
!7446 = !DILocation(line: 786, column: 43, scope: !7408, inlinedAt: !7409)
!7447 = !DILocalVariable(name: "state", arg: 1, scope: !7393, file: !3, line: 58, type: !195)
!7448 = !DILocation(line: 58, column: 66, scope: !7393)
!7449 = !DILocation(line: 60, column: 25, scope: !7410)
!7450 = !DILocation(line: 60, column: 32, scope: !7410)
!7451 = !DILocation(line: 788, column: 31, scope: !7408, inlinedAt: !7409)
!7452 = !DILocation(line: 101, column: 20, scope: !6449, inlinedAt: !7439)
!7453 = !DILocation(line: 101, column: 23, scope: !6449, inlinedAt: !7439)
!7454 = !DILocation(line: 101, column: 2, scope: !6449, inlinedAt: !7439)
!7455 = !DILocation(line: 102, column: 2, scope: !6449, inlinedAt: !7439)
!7456 = !DILocation(line: 789, column: 32, scope: !7408, inlinedAt: !7409)
!7457 = !DILocation(line: 789, column: 35, scope: !7408, inlinedAt: !7409)
!7458 = !DILocation(line: 789, column: 38, scope: !7408, inlinedAt: !7409)
!7459 = !DILocation(line: 1113, column: 38, scope: !7404, inlinedAt: !7407)
!7460 = !DILocation(line: 1113, column: 41, scope: !7404, inlinedAt: !7407)
!7461 = !DILocation(line: 1113, column: 44, scope: !7404, inlinedAt: !7407)
!7462 = !DILocation(line: 1088, column: 27, scope: !7400, inlinedAt: !7403)
!7463 = !DILocation(line: 29, column: 9, scope: !6390, inlinedAt: !7423)
!7464 = !DILocation(line: 1090, column: 2, scope: !7400, inlinedAt: !7403)
!7465 = !DILocation(line: 1091, column: 7, scope: !7466, inlinedAt: !7403)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !6430, line: 1091, column: 7)
!7467 = distinct !DILexicalBlock(scope: !7400, file: !6430, line: 1090, column: 5)
!7468 = !DILocation(line: 1091, column: 7, scope: !7467, inlinedAt: !7403)
!7469 = !DILocation(line: 1092, column: 4, scope: !7466, inlinedAt: !7403)
!7470 = !DILocation(line: 1093, column: 36, scope: !7400, inlinedAt: !7403)
!7471 = !DILocation(line: 1093, column: 43, scope: !7400, inlinedAt: !7403)
!7472 = !DILocation(line: 1093, column: 47, scope: !7400, inlinedAt: !7403)
!7473 = !DILocation(line: 1093, column: 45, scope: !7400, inlinedAt: !7403)
!7474 = !{i32 -2146538381, i32 -2146538226}
!7475 = !DILocation(line: 202, column: 9, scope: !7476, inlinedAt: !7399)
!7476 = distinct !DILexicalBlock(scope: !7416, file: !5961, line: 202, column: 9)
!7477 = !DILocation(line: 202, column: 9, scope: !7395, inlinedAt: !7399)
!7478 = !DILocation(line: 1093, column: 11, scope: !7400, inlinedAt: !7403)
!7479 = !DILocation(line: 1093, column: 2, scope: !7467, inlinedAt: !7403)
!7480 = distinct !{!7480, !7464, !7481}
!7481 = !DILocation(line: 1093, column: 49, scope: !7400, inlinedAt: !7403)
!7482 = !DILocation(line: 1095, column: 9, scope: !7400, inlinedAt: !7403)
!7483 = !DILocation(line: 1113, column: 50, scope: !7404, inlinedAt: !7407)
!7484 = !DILocation(line: 1113, column: 47, scope: !7404, inlinedAt: !7407)
!7485 = !DILocation(line: 60, column: 6, scope: !7393)
!7486 = !DILocation(line: 61, column: 10, scope: !7410)
!7487 = !DILocation(line: 61, column: 17, scope: !7410)
!7488 = !DILocation(line: 61, column: 3, scope: !7410)
!7489 = !DILocation(line: 62, column: 2, scope: !7393)
!7490 = !DILocation(line: 63, column: 1, scope: !7393)
!7491 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7251, file: !7251, line: 666, type: !7492, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7492 = !DISubroutineType(types: !7493)
!7493 = !{!187}
!7494 = !DILocalVariable(name: "f", scope: !7491, file: !7251, line: 668, type: !187)
!7495 = !DILocation(line: 668, column: 16, scope: !7491)
!7496 = !DILocation(line: 670, column: 6, scope: !7491)
!7497 = !DILocation(line: 670, column: 4, scope: !7491)
!7498 = !DILocation(line: 671, column: 2, scope: !7491)
!7499 = !DILocation(line: 672, column: 9, scope: !7491)
!7500 = !DILocation(line: 672, column: 2, scope: !7491)
!7501 = distinct !DISubprogram(name: "uart_port_deref", scope: !3, file: !3, line: 65, type: !4320, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7502 = !DILocalVariable(name: "v", arg: 1, scope: !7503, file: !5961, line: 121, type: !5964)
!7503 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !5961, file: !5961, line: 121, type: !7504, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!560, !5964}
!7506 = !DILocation(line: 121, column: 64, scope: !7503, inlinedAt: !7507)
!7507 = distinct !DILocation(line: 749, column: 9, scope: !7508, inlinedAt: !7509)
!7508 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !5968, file: !5968, line: 746, type: !7504, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7509 = distinct !DILocation(line: 67, column: 6, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7501, file: !3, line: 67, column: 6)
!7511 = !DILocalVariable(name: "c", scope: !7512, file: !5961, line: 123, type: !560)
!7512 = distinct !DILexicalBlock(scope: !7503, file: !5961, line: 123, column: 9)
!7513 = !DILocation(line: 123, column: 9, scope: !7512, inlinedAt: !7507)
!7514 = !DILocation(line: 99, column: 79, scope: !6449, inlinedAt: !7515)
!7515 = distinct !DILocation(line: 748, column: 2, scope: !7508, inlinedAt: !7509)
!7516 = !DILocation(line: 99, column: 89, scope: !6449, inlinedAt: !7515)
!7517 = !DILocalVariable(name: "v", arg: 1, scope: !7508, file: !5968, line: 746, type: !5964)
!7518 = !DILocation(line: 746, column: 31, scope: !7508, inlinedAt: !7509)
!7519 = !DILocalVariable(name: "uport", arg: 1, scope: !7501, file: !3, line: 65, type: !4276)
!7520 = !DILocation(line: 65, column: 54, scope: !7501)
!7521 = !DILocation(line: 67, column: 27, scope: !7510)
!7522 = !DILocation(line: 67, column: 34, scope: !7510)
!7523 = !DILocation(line: 67, column: 41, scope: !7510)
!7524 = !DILocation(line: 748, column: 31, scope: !7508, inlinedAt: !7509)
!7525 = !DILocation(line: 101, column: 20, scope: !6449, inlinedAt: !7515)
!7526 = !DILocation(line: 101, column: 23, scope: !6449, inlinedAt: !7515)
!7527 = !DILocation(line: 101, column: 2, scope: !6449, inlinedAt: !7515)
!7528 = !DILocation(line: 102, column: 2, scope: !6449, inlinedAt: !7515)
!7529 = !DILocation(line: 749, column: 34, scope: !7508, inlinedAt: !7509)
!7530 = !{i32 -2146548968, i32 -2146548901}
!7531 = !DILocation(line: 67, column: 6, scope: !7501)
!7532 = !DILocation(line: 68, column: 3, scope: !7510)
!7533 = !DILocation(line: 69, column: 1, scope: !7501)
!7534 = distinct !DISubprogram(name: "uart_update_mctrl", scope: !3, file: !3, line: 142, type: !4327, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7535 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !7536)
!7536 = distinct !DILocation(line: 152, column: 2, scope: !7534)
!7537 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !7536)
!7538 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !7539)
!7539 = distinct !DILocation(line: 147, column: 2, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7541, file: !3, line: 147, column: 2)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 147, column: 2)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 147, column: 2)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !3, line: 147, column: 2)
!7544 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 147, column: 2)
!7545 = !DILocalVariable(name: "port", arg: 1, scope: !7534, file: !3, line: 142, type: !4276)
!7546 = !DILocation(line: 142, column: 37, scope: !7534)
!7547 = !DILocalVariable(name: "set", arg: 2, scope: !7534, file: !3, line: 142, type: !7)
!7548 = !DILocation(line: 142, column: 56, scope: !7534)
!7549 = !DILocalVariable(name: "clear", arg: 3, scope: !7534, file: !3, line: 142, type: !7)
!7550 = !DILocation(line: 142, column: 74, scope: !7534)
!7551 = !DILocalVariable(name: "flags", scope: !7534, file: !3, line: 144, type: !187)
!7552 = !DILocation(line: 144, column: 16, scope: !7534)
!7553 = !DILocalVariable(name: "old", scope: !7534, file: !3, line: 145, type: !7)
!7554 = !DILocation(line: 145, column: 15, scope: !7534)
!7555 = !DILocation(line: 147, column: 2, scope: !7534)
!7556 = !DILocation(line: 147, column: 2, scope: !7544)
!7557 = !DILocalVariable(name: "__dummy", scope: !7558, file: !3, line: 147, type: !187)
!7558 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 147, column: 2)
!7559 = !DILocation(line: 147, column: 2, scope: !7558)
!7560 = !DILocalVariable(name: "__dummy2", scope: !7558, file: !3, line: 147, type: !187)
!7561 = !DILocation(line: 147, column: 2, scope: !7543)
!7562 = !DILocation(line: 147, column: 2, scope: !7542)
!7563 = !DILocation(line: 147, column: 2, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 147, column: 2)
!7565 = !DILocalVariable(name: "__dummy", scope: !7566, file: !3, line: 147, type: !187)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 147, column: 2)
!7567 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 147, column: 2)
!7568 = !DILocation(line: 147, column: 2, scope: !7566)
!7569 = !DILocalVariable(name: "__dummy2", scope: !7566, file: !3, line: 147, type: !187)
!7570 = !DILocation(line: 147, column: 2, scope: !7567)
!7571 = !DILocation(line: 147, column: 2, scope: !7541)
!7572 = !{i32 -2141560094}
!7573 = !DILocation(line: 147, column: 2, scope: !7540)
!7574 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !7539)
!7575 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !7539)
!7576 = !DILocation(line: 148, column: 8, scope: !7534)
!7577 = !DILocation(line: 148, column: 14, scope: !7534)
!7578 = !DILocation(line: 148, column: 6, scope: !7534)
!7579 = !DILocation(line: 149, column: 17, scope: !7534)
!7580 = !DILocation(line: 149, column: 24, scope: !7534)
!7581 = !DILocation(line: 149, column: 23, scope: !7534)
!7582 = !DILocation(line: 149, column: 21, scope: !7534)
!7583 = !DILocation(line: 149, column: 33, scope: !7534)
!7584 = !DILocation(line: 149, column: 31, scope: !7534)
!7585 = !DILocation(line: 149, column: 2, scope: !7534)
!7586 = !DILocation(line: 149, column: 8, scope: !7534)
!7587 = !DILocation(line: 149, column: 14, scope: !7534)
!7588 = !DILocation(line: 150, column: 6, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 150, column: 6)
!7590 = !DILocation(line: 150, column: 13, scope: !7589)
!7591 = !DILocation(line: 150, column: 19, scope: !7589)
!7592 = !DILocation(line: 150, column: 10, scope: !7589)
!7593 = !DILocation(line: 150, column: 6, scope: !7534)
!7594 = !DILocation(line: 151, column: 3, scope: !7589)
!7595 = !DILocation(line: 151, column: 9, scope: !7589)
!7596 = !DILocation(line: 151, column: 14, scope: !7589)
!7597 = !DILocation(line: 151, column: 24, scope: !7589)
!7598 = !DILocation(line: 151, column: 30, scope: !7589)
!7599 = !DILocation(line: 151, column: 36, scope: !7589)
!7600 = !DILocation(line: 152, column: 26, scope: !7534)
!7601 = !DILocation(line: 152, column: 32, scope: !7534)
!7602 = !DILocation(line: 152, column: 38, scope: !7534)
!7603 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !7536)
!7604 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !7536)
!7605 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !7536)
!7606 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !7536)
!7607 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !7536)
!7608 = !DILocation(line: 153, column: 1, scope: !7534)
!7609 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7251, file: !7251, line: 646, type: !7492, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7610 = !DILocalVariable(name: "__ret", scope: !7611, file: !7251, line: 648, type: !187)
!7611 = distinct !DILexicalBlock(scope: !7609, file: !7251, line: 648, column: 9)
!7612 = !DILocation(line: 648, column: 9, scope: !7611)
!7613 = !DILocalVariable(name: "__edi", scope: !7611, file: !7251, line: 648, type: !187)
!7614 = !DILocalVariable(name: "__esi", scope: !7611, file: !7251, line: 648, type: !187)
!7615 = !DILocalVariable(name: "__edx", scope: !7611, file: !7251, line: 648, type: !187)
!7616 = !DILocalVariable(name: "__ecx", scope: !7611, file: !7251, line: 648, type: !187)
!7617 = !DILocalVariable(name: "__eax", scope: !7611, file: !7251, line: 648, type: !187)
!7618 = !DILocation(line: 648, column: 9, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7620, file: !7251, line: 648, column: 9)
!7620 = distinct !DILexicalBlock(scope: !7611, file: !7251, line: 648, column: 9)
!7621 = !{i32 -2145709840, i32 -2145707525, i32 -2145707291, i32 -2145707240, i32 -2145707212, i32 -2145707187, i32 -2145707503, i32 -2145707490, i32 -2145707052, i32 -2145706933, i32 -2145707398, i32 -2145707371, i32 -2145707343, i32 -2145707313}
!7622 = !DILocalVariable(name: "__mask", scope: !7623, file: !7251, line: 648, type: !187)
!7623 = distinct !DILexicalBlock(scope: !7619, file: !7251, line: 648, column: 9)
!7624 = !DILocation(line: 648, column: 9, scope: !7623)
!7625 = !DILocation(line: 648, column: 9, scope: !7620)
!7626 = !DILocation(line: 648, column: 2, scope: !7609)
!7627 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7251, file: !7251, line: 651, type: !7628, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7628 = !DISubroutineType(types: !7629)
!7629 = !{null, !187}
!7630 = !DILocalVariable(name: "f", arg: 1, scope: !7627, file: !7251, line: 651, type: !187)
!7631 = !DILocation(line: 651, column: 65, scope: !7627)
!7632 = !DILocalVariable(name: "__edi", scope: !7633, file: !7251, line: 653, type: !187)
!7633 = distinct !DILexicalBlock(scope: !7627, file: !7251, line: 653, column: 2)
!7634 = !DILocation(line: 653, column: 2, scope: !7633)
!7635 = !DILocalVariable(name: "__esi", scope: !7633, file: !7251, line: 653, type: !187)
!7636 = !DILocalVariable(name: "__edx", scope: !7633, file: !7251, line: 653, type: !187)
!7637 = !DILocalVariable(name: "__ecx", scope: !7633, file: !7251, line: 653, type: !187)
!7638 = !DILocalVariable(name: "__eax", scope: !7633, file: !7251, line: 653, type: !187)
!7639 = !{i32 -2145705373, i32 -2145704623, i32 -2145704389, i32 -2145704338, i32 -2145704310, i32 -2145704285, i32 -2145704601, i32 -2145704588, i32 -2145704150, i32 -2145704031, i32 -2145704496, i32 -2145704469, i32 -2145704441, i32 -2145704411}
!7640 = !DILocation(line: 654, column: 1, scope: !7627)
!7641 = distinct !DISubprogram(name: "kmalloc_array", scope: !148, file: !148, line: 584, type: !5870, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7642 = !DILocalVariable(name: "s", arg: 1, scope: !7643, file: !148, line: 445, type: !1031)
!7643 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !148, file: !148, line: 445, type: !7644, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{!185, !1031, !183, !399}
!7646 = !DILocation(line: 445, column: 72, scope: !7643, inlinedAt: !7647)
!7647 = distinct !DILocation(line: 552, column: 10, scope: !7648, inlinedAt: !7653)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !148, line: 540, column: 34)
!7649 = distinct !DILexicalBlock(scope: !7650, file: !148, line: 540, column: 6)
!7650 = distinct !DISubprogram(name: "kmalloc", scope: !148, file: !148, line: 538, type: !7651, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!185, !399, !183}
!7653 = distinct !DILocation(line: 591, column: 10, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7641, file: !148, line: 590, column: 6)
!7655 = !DILocalVariable(name: "flags", arg: 2, scope: !7643, file: !148, line: 446, type: !183)
!7656 = !DILocation(line: 446, column: 9, scope: !7643, inlinedAt: !7647)
!7657 = !DILocalVariable(name: "size", arg: 3, scope: !7643, file: !148, line: 446, type: !399)
!7658 = !DILocation(line: 446, column: 23, scope: !7643, inlinedAt: !7647)
!7659 = !DILocalVariable(name: "ret", scope: !7643, file: !148, line: 448, type: !185)
!7660 = !DILocation(line: 448, column: 8, scope: !7643, inlinedAt: !7647)
!7661 = !DILocalVariable(name: "flags", arg: 1, scope: !7662, file: !148, line: 318, type: !183)
!7662 = distinct !DISubprogram(name: "kmalloc_type", scope: !148, file: !148, line: 318, type: !7663, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7663 = !DISubroutineType(types: !7664)
!7664 = !{!147, !183}
!7665 = !DILocation(line: 318, column: 67, scope: !7662, inlinedAt: !7666)
!7666 = distinct !DILocation(line: 553, column: 20, scope: !7648, inlinedAt: !7653)
!7667 = !DILocalVariable(name: "size", arg: 1, scope: !7668, file: !148, line: 346, type: !399)
!7668 = distinct !DISubprogram(name: "kmalloc_index", scope: !148, file: !148, line: 346, type: !7669, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!7, !399}
!7671 = !DILocation(line: 346, column: 58, scope: !7668, inlinedAt: !7672)
!7672 = distinct !DILocation(line: 547, column: 11, scope: !7648, inlinedAt: !7653)
!7673 = !DILocalVariable(name: "size", arg: 1, scope: !7674, file: !148, line: 472, type: !399)
!7674 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !148, file: !148, line: 472, type: !7675, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!185, !399, !183, !7}
!7677 = !DILocation(line: 472, column: 28, scope: !7674, inlinedAt: !7678)
!7678 = distinct !DILocation(line: 481, column: 9, scope: !7679, inlinedAt: !7680)
!7679 = distinct !DISubprogram(name: "kmalloc_large", scope: !148, file: !148, line: 478, type: !7651, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7680 = distinct !DILocation(line: 545, column: 11, scope: !7681, inlinedAt: !7653)
!7681 = distinct !DILexicalBlock(scope: !7648, file: !148, line: 544, column: 7)
!7682 = !DILocalVariable(name: "flags", arg: 2, scope: !7674, file: !148, line: 472, type: !183)
!7683 = !DILocation(line: 472, column: 40, scope: !7674, inlinedAt: !7678)
!7684 = !DILocalVariable(name: "order", arg: 3, scope: !7674, file: !148, line: 472, type: !7)
!7685 = !DILocation(line: 472, column: 60, scope: !7674, inlinedAt: !7678)
!7686 = !DILocalVariable(name: "size", arg: 1, scope: !7679, file: !148, line: 478, type: !399)
!7687 = !DILocation(line: 478, column: 51, scope: !7679, inlinedAt: !7680)
!7688 = !DILocalVariable(name: "flags", arg: 2, scope: !7679, file: !148, line: 478, type: !183)
!7689 = !DILocation(line: 478, column: 63, scope: !7679, inlinedAt: !7680)
!7690 = !DILocalVariable(name: "order", scope: !7679, file: !148, line: 480, type: !7)
!7691 = !DILocation(line: 480, column: 15, scope: !7679, inlinedAt: !7680)
!7692 = !DILocalVariable(name: "size", arg: 1, scope: !7650, file: !148, line: 538, type: !399)
!7693 = !DILocation(line: 538, column: 45, scope: !7650, inlinedAt: !7653)
!7694 = !DILocalVariable(name: "flags", arg: 2, scope: !7650, file: !148, line: 538, type: !183)
!7695 = !DILocation(line: 538, column: 57, scope: !7650, inlinedAt: !7653)
!7696 = !DILocalVariable(name: "index", scope: !7648, file: !148, line: 542, type: !7)
!7697 = !DILocation(line: 542, column: 16, scope: !7648, inlinedAt: !7653)
!7698 = !DILocalVariable(name: "n", arg: 1, scope: !7641, file: !148, line: 584, type: !399)
!7699 = !DILocation(line: 584, column: 42, scope: !7641)
!7700 = !DILocalVariable(name: "size", arg: 2, scope: !7641, file: !148, line: 584, type: !399)
!7701 = !DILocation(line: 584, column: 52, scope: !7641)
!7702 = !DILocalVariable(name: "flags", arg: 3, scope: !7641, file: !148, line: 584, type: !183)
!7703 = !DILocation(line: 584, column: 64, scope: !7641)
!7704 = !DILocalVariable(name: "bytes", scope: !7641, file: !148, line: 586, type: !399)
!7705 = !DILocation(line: 586, column: 9, scope: !7641)
!7706 = !DILocalVariable(name: "__a", scope: !7707, file: !148, line: 588, type: !399)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !148, line: 588, column: 6)
!7708 = distinct !DILexicalBlock(scope: !7641, file: !148, line: 588, column: 6)
!7709 = !DILocation(line: 588, column: 6, scope: !7707)
!7710 = !DILocalVariable(name: "__b", scope: !7707, file: !148, line: 588, type: !399)
!7711 = !DILocalVariable(name: "__d", scope: !7707, file: !148, line: 588, type: !7712)
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!7713 = !DILocation(line: 588, column: 6, scope: !7708)
!7714 = !DILocation(line: 588, column: 6, scope: !7641)
!7715 = !DILocation(line: 589, column: 3, scope: !7708)
!7716 = !DILocation(line: 590, column: 27, scope: !7654)
!7717 = !DILocation(line: 590, column: 6, scope: !7654)
!7718 = !DILocation(line: 590, column: 30, scope: !7654)
!7719 = !DILocation(line: 590, column: 54, scope: !7654)
!7720 = !DILocation(line: 590, column: 33, scope: !7654)
!7721 = !DILocation(line: 590, column: 6, scope: !7641)
!7722 = !DILocation(line: 591, column: 18, scope: !7654)
!7723 = !DILocation(line: 591, column: 25, scope: !7654)
!7724 = !DILocation(line: 540, column: 27, scope: !7649, inlinedAt: !7653)
!7725 = !DILocation(line: 540, column: 6, scope: !7649, inlinedAt: !7653)
!7726 = !DILocation(line: 540, column: 6, scope: !7650, inlinedAt: !7653)
!7727 = !DILocation(line: 544, column: 7, scope: !7681, inlinedAt: !7653)
!7728 = !DILocation(line: 544, column: 12, scope: !7681, inlinedAt: !7653)
!7729 = !DILocation(line: 544, column: 7, scope: !7648, inlinedAt: !7653)
!7730 = !DILocation(line: 545, column: 25, scope: !7681, inlinedAt: !7653)
!7731 = !DILocation(line: 545, column: 31, scope: !7681, inlinedAt: !7653)
!7732 = !DILocation(line: 480, column: 33, scope: !7679, inlinedAt: !7680)
!7733 = !DILocation(line: 480, column: 23, scope: !7679, inlinedAt: !7680)
!7734 = !DILocation(line: 481, column: 29, scope: !7679, inlinedAt: !7680)
!7735 = !DILocation(line: 481, column: 35, scope: !7679, inlinedAt: !7680)
!7736 = !DILocation(line: 481, column: 42, scope: !7679, inlinedAt: !7680)
!7737 = !DILocation(line: 474, column: 23, scope: !7674, inlinedAt: !7678)
!7738 = !DILocation(line: 474, column: 29, scope: !7674, inlinedAt: !7678)
!7739 = !DILocation(line: 474, column: 36, scope: !7674, inlinedAt: !7678)
!7740 = !DILocation(line: 474, column: 9, scope: !7674, inlinedAt: !7678)
!7741 = !DILocation(line: 545, column: 4, scope: !7681, inlinedAt: !7653)
!7742 = !DILocation(line: 547, column: 25, scope: !7648, inlinedAt: !7653)
!7743 = !DILocation(line: 348, column: 7, scope: !7744, inlinedAt: !7672)
!7744 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 348, column: 6)
!7745 = !DILocation(line: 348, column: 6, scope: !7668, inlinedAt: !7672)
!7746 = !DILocation(line: 349, column: 3, scope: !7744, inlinedAt: !7672)
!7747 = !DILocation(line: 351, column: 6, scope: !7748, inlinedAt: !7672)
!7748 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 351, column: 6)
!7749 = !DILocation(line: 351, column: 11, scope: !7748, inlinedAt: !7672)
!7750 = !DILocation(line: 351, column: 6, scope: !7668, inlinedAt: !7672)
!7751 = !DILocation(line: 352, column: 3, scope: !7748, inlinedAt: !7672)
!7752 = !DILocation(line: 354, column: 32, scope: !7753, inlinedAt: !7672)
!7753 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 354, column: 6)
!7754 = !DILocation(line: 354, column: 37, scope: !7753, inlinedAt: !7672)
!7755 = !DILocation(line: 354, column: 42, scope: !7753, inlinedAt: !7672)
!7756 = !DILocation(line: 354, column: 45, scope: !7753, inlinedAt: !7672)
!7757 = !DILocation(line: 354, column: 50, scope: !7753, inlinedAt: !7672)
!7758 = !DILocation(line: 354, column: 6, scope: !7668, inlinedAt: !7672)
!7759 = !DILocation(line: 355, column: 3, scope: !7753, inlinedAt: !7672)
!7760 = !DILocation(line: 356, column: 32, scope: !7761, inlinedAt: !7672)
!7761 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 356, column: 6)
!7762 = !DILocation(line: 356, column: 37, scope: !7761, inlinedAt: !7672)
!7763 = !DILocation(line: 356, column: 43, scope: !7761, inlinedAt: !7672)
!7764 = !DILocation(line: 356, column: 46, scope: !7761, inlinedAt: !7672)
!7765 = !DILocation(line: 356, column: 51, scope: !7761, inlinedAt: !7672)
!7766 = !DILocation(line: 356, column: 6, scope: !7668, inlinedAt: !7672)
!7767 = !DILocation(line: 357, column: 3, scope: !7761, inlinedAt: !7672)
!7768 = !DILocation(line: 358, column: 6, scope: !7769, inlinedAt: !7672)
!7769 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 358, column: 6)
!7770 = !DILocation(line: 358, column: 11, scope: !7769, inlinedAt: !7672)
!7771 = !DILocation(line: 358, column: 6, scope: !7668, inlinedAt: !7672)
!7772 = !DILocation(line: 358, column: 26, scope: !7769, inlinedAt: !7672)
!7773 = !DILocation(line: 359, column: 6, scope: !7774, inlinedAt: !7672)
!7774 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 359, column: 6)
!7775 = !DILocation(line: 359, column: 11, scope: !7774, inlinedAt: !7672)
!7776 = !DILocation(line: 359, column: 6, scope: !7668, inlinedAt: !7672)
!7777 = !DILocation(line: 359, column: 26, scope: !7774, inlinedAt: !7672)
!7778 = !DILocation(line: 360, column: 6, scope: !7779, inlinedAt: !7672)
!7779 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 360, column: 6)
!7780 = !DILocation(line: 360, column: 11, scope: !7779, inlinedAt: !7672)
!7781 = !DILocation(line: 360, column: 6, scope: !7668, inlinedAt: !7672)
!7782 = !DILocation(line: 360, column: 26, scope: !7779, inlinedAt: !7672)
!7783 = !DILocation(line: 361, column: 6, scope: !7784, inlinedAt: !7672)
!7784 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 361, column: 6)
!7785 = !DILocation(line: 361, column: 11, scope: !7784, inlinedAt: !7672)
!7786 = !DILocation(line: 361, column: 6, scope: !7668, inlinedAt: !7672)
!7787 = !DILocation(line: 361, column: 26, scope: !7784, inlinedAt: !7672)
!7788 = !DILocation(line: 362, column: 6, scope: !7789, inlinedAt: !7672)
!7789 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 362, column: 6)
!7790 = !DILocation(line: 362, column: 11, scope: !7789, inlinedAt: !7672)
!7791 = !DILocation(line: 362, column: 6, scope: !7668, inlinedAt: !7672)
!7792 = !DILocation(line: 362, column: 26, scope: !7789, inlinedAt: !7672)
!7793 = !DILocation(line: 363, column: 6, scope: !7794, inlinedAt: !7672)
!7794 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 363, column: 6)
!7795 = !DILocation(line: 363, column: 11, scope: !7794, inlinedAt: !7672)
!7796 = !DILocation(line: 363, column: 6, scope: !7668, inlinedAt: !7672)
!7797 = !DILocation(line: 363, column: 26, scope: !7794, inlinedAt: !7672)
!7798 = !DILocation(line: 364, column: 6, scope: !7799, inlinedAt: !7672)
!7799 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 364, column: 6)
!7800 = !DILocation(line: 364, column: 11, scope: !7799, inlinedAt: !7672)
!7801 = !DILocation(line: 364, column: 6, scope: !7668, inlinedAt: !7672)
!7802 = !DILocation(line: 364, column: 26, scope: !7799, inlinedAt: !7672)
!7803 = !DILocation(line: 365, column: 6, scope: !7804, inlinedAt: !7672)
!7804 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 365, column: 6)
!7805 = !DILocation(line: 365, column: 11, scope: !7804, inlinedAt: !7672)
!7806 = !DILocation(line: 365, column: 6, scope: !7668, inlinedAt: !7672)
!7807 = !DILocation(line: 365, column: 26, scope: !7804, inlinedAt: !7672)
!7808 = !DILocation(line: 366, column: 6, scope: !7809, inlinedAt: !7672)
!7809 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 366, column: 6)
!7810 = !DILocation(line: 366, column: 11, scope: !7809, inlinedAt: !7672)
!7811 = !DILocation(line: 366, column: 6, scope: !7668, inlinedAt: !7672)
!7812 = !DILocation(line: 366, column: 26, scope: !7809, inlinedAt: !7672)
!7813 = !DILocation(line: 367, column: 6, scope: !7814, inlinedAt: !7672)
!7814 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 367, column: 6)
!7815 = !DILocation(line: 367, column: 11, scope: !7814, inlinedAt: !7672)
!7816 = !DILocation(line: 367, column: 6, scope: !7668, inlinedAt: !7672)
!7817 = !DILocation(line: 367, column: 26, scope: !7814, inlinedAt: !7672)
!7818 = !DILocation(line: 368, column: 6, scope: !7819, inlinedAt: !7672)
!7819 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 368, column: 6)
!7820 = !DILocation(line: 368, column: 11, scope: !7819, inlinedAt: !7672)
!7821 = !DILocation(line: 368, column: 6, scope: !7668, inlinedAt: !7672)
!7822 = !DILocation(line: 368, column: 26, scope: !7819, inlinedAt: !7672)
!7823 = !DILocation(line: 369, column: 6, scope: !7824, inlinedAt: !7672)
!7824 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 369, column: 6)
!7825 = !DILocation(line: 369, column: 11, scope: !7824, inlinedAt: !7672)
!7826 = !DILocation(line: 369, column: 6, scope: !7668, inlinedAt: !7672)
!7827 = !DILocation(line: 369, column: 26, scope: !7824, inlinedAt: !7672)
!7828 = !DILocation(line: 370, column: 6, scope: !7829, inlinedAt: !7672)
!7829 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 370, column: 6)
!7830 = !DILocation(line: 370, column: 11, scope: !7829, inlinedAt: !7672)
!7831 = !DILocation(line: 370, column: 6, scope: !7668, inlinedAt: !7672)
!7832 = !DILocation(line: 370, column: 26, scope: !7829, inlinedAt: !7672)
!7833 = !DILocation(line: 371, column: 6, scope: !7834, inlinedAt: !7672)
!7834 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 371, column: 6)
!7835 = !DILocation(line: 371, column: 11, scope: !7834, inlinedAt: !7672)
!7836 = !DILocation(line: 371, column: 6, scope: !7668, inlinedAt: !7672)
!7837 = !DILocation(line: 371, column: 26, scope: !7834, inlinedAt: !7672)
!7838 = !DILocation(line: 372, column: 6, scope: !7839, inlinedAt: !7672)
!7839 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 372, column: 6)
!7840 = !DILocation(line: 372, column: 11, scope: !7839, inlinedAt: !7672)
!7841 = !DILocation(line: 372, column: 6, scope: !7668, inlinedAt: !7672)
!7842 = !DILocation(line: 372, column: 26, scope: !7839, inlinedAt: !7672)
!7843 = !DILocation(line: 373, column: 6, scope: !7844, inlinedAt: !7672)
!7844 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 373, column: 6)
!7845 = !DILocation(line: 373, column: 11, scope: !7844, inlinedAt: !7672)
!7846 = !DILocation(line: 373, column: 6, scope: !7668, inlinedAt: !7672)
!7847 = !DILocation(line: 373, column: 26, scope: !7844, inlinedAt: !7672)
!7848 = !DILocation(line: 374, column: 6, scope: !7849, inlinedAt: !7672)
!7849 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 374, column: 6)
!7850 = !DILocation(line: 374, column: 11, scope: !7849, inlinedAt: !7672)
!7851 = !DILocation(line: 374, column: 6, scope: !7668, inlinedAt: !7672)
!7852 = !DILocation(line: 374, column: 26, scope: !7849, inlinedAt: !7672)
!7853 = !DILocation(line: 375, column: 6, scope: !7854, inlinedAt: !7672)
!7854 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 375, column: 6)
!7855 = !DILocation(line: 375, column: 11, scope: !7854, inlinedAt: !7672)
!7856 = !DILocation(line: 375, column: 6, scope: !7668, inlinedAt: !7672)
!7857 = !DILocation(line: 375, column: 27, scope: !7854, inlinedAt: !7672)
!7858 = !DILocation(line: 376, column: 6, scope: !7859, inlinedAt: !7672)
!7859 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 376, column: 6)
!7860 = !DILocation(line: 376, column: 11, scope: !7859, inlinedAt: !7672)
!7861 = !DILocation(line: 376, column: 6, scope: !7668, inlinedAt: !7672)
!7862 = !DILocation(line: 376, column: 32, scope: !7859, inlinedAt: !7672)
!7863 = !DILocation(line: 377, column: 6, scope: !7864, inlinedAt: !7672)
!7864 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 377, column: 6)
!7865 = !DILocation(line: 377, column: 11, scope: !7864, inlinedAt: !7672)
!7866 = !DILocation(line: 377, column: 6, scope: !7668, inlinedAt: !7672)
!7867 = !DILocation(line: 377, column: 32, scope: !7864, inlinedAt: !7672)
!7868 = !DILocation(line: 378, column: 6, scope: !7869, inlinedAt: !7672)
!7869 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 378, column: 6)
!7870 = !DILocation(line: 378, column: 11, scope: !7869, inlinedAt: !7672)
!7871 = !DILocation(line: 378, column: 6, scope: !7668, inlinedAt: !7672)
!7872 = !DILocation(line: 378, column: 32, scope: !7869, inlinedAt: !7672)
!7873 = !DILocation(line: 379, column: 6, scope: !7874, inlinedAt: !7672)
!7874 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 379, column: 6)
!7875 = !DILocation(line: 379, column: 11, scope: !7874, inlinedAt: !7672)
!7876 = !DILocation(line: 379, column: 6, scope: !7668, inlinedAt: !7672)
!7877 = !DILocation(line: 379, column: 33, scope: !7874, inlinedAt: !7672)
!7878 = !DILocation(line: 380, column: 6, scope: !7879, inlinedAt: !7672)
!7879 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 380, column: 6)
!7880 = !DILocation(line: 380, column: 11, scope: !7879, inlinedAt: !7672)
!7881 = !DILocation(line: 380, column: 6, scope: !7668, inlinedAt: !7672)
!7882 = !DILocation(line: 380, column: 33, scope: !7879, inlinedAt: !7672)
!7883 = !DILocation(line: 381, column: 6, scope: !7884, inlinedAt: !7672)
!7884 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 381, column: 6)
!7885 = !DILocation(line: 381, column: 11, scope: !7884, inlinedAt: !7672)
!7886 = !DILocation(line: 381, column: 6, scope: !7668, inlinedAt: !7672)
!7887 = !DILocation(line: 381, column: 33, scope: !7884, inlinedAt: !7672)
!7888 = !DILocation(line: 382, column: 2, scope: !7889, inlinedAt: !7672)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !148, line: 382, column: 2)
!7890 = distinct !DILexicalBlock(scope: !7668, file: !148, line: 382, column: 2)
!7891 = !{i32 -2142723820, i32 -2142723791, i32 -2142723745, i32 -2142723687, i32 -2142723633, i32 -2142723579, i32 -2142723524, i32 -2142723493}
!7892 = !DILocation(line: 382, column: 2, scope: !7893, inlinedAt: !7672)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !148, line: 382, column: 2)
!7894 = distinct !DILexicalBlock(scope: !7890, file: !148, line: 382, column: 2)
!7895 = !{i32 -2142723050, i32 -2142723043, i32 -2142722989, i32 -2142722958, i32 -2142722928}
!7896 = !DILocation(line: 382, column: 2, scope: !7894, inlinedAt: !7672)
!7897 = !DILocation(line: 386, column: 1, scope: !7668, inlinedAt: !7672)
!7898 = !DILocation(line: 547, column: 9, scope: !7648, inlinedAt: !7653)
!7899 = !DILocation(line: 549, column: 8, scope: !7900, inlinedAt: !7653)
!7900 = distinct !DILexicalBlock(scope: !7648, file: !148, line: 549, column: 7)
!7901 = !DILocation(line: 549, column: 7, scope: !7648, inlinedAt: !7653)
!7902 = !DILocation(line: 550, column: 4, scope: !7900, inlinedAt: !7653)
!7903 = !DILocation(line: 553, column: 33, scope: !7648, inlinedAt: !7653)
!7904 = !DILocation(line: 325, column: 6, scope: !7905, inlinedAt: !7666)
!7905 = distinct !DILexicalBlock(scope: !7662, file: !148, line: 325, column: 6)
!7906 = !DILocation(line: 325, column: 6, scope: !7662, inlinedAt: !7666)
!7907 = !DILocation(line: 326, column: 3, scope: !7905, inlinedAt: !7666)
!7908 = !DILocation(line: 332, column: 9, scope: !7662, inlinedAt: !7666)
!7909 = !DILocation(line: 332, column: 15, scope: !7662, inlinedAt: !7666)
!7910 = !DILocation(line: 332, column: 2, scope: !7662, inlinedAt: !7666)
!7911 = !DILocation(line: 336, column: 1, scope: !7662, inlinedAt: !7666)
!7912 = !DILocation(line: 553, column: 5, scope: !7648, inlinedAt: !7653)
!7913 = !DILocation(line: 553, column: 41, scope: !7648, inlinedAt: !7653)
!7914 = !DILocation(line: 554, column: 5, scope: !7648, inlinedAt: !7653)
!7915 = !DILocation(line: 554, column: 12, scope: !7648, inlinedAt: !7653)
!7916 = !DILocation(line: 448, column: 31, scope: !7643, inlinedAt: !7647)
!7917 = !DILocation(line: 448, column: 34, scope: !7643, inlinedAt: !7647)
!7918 = !DILocation(line: 448, column: 14, scope: !7643, inlinedAt: !7647)
!7919 = !DILocation(line: 450, column: 22, scope: !7643, inlinedAt: !7647)
!7920 = !DILocation(line: 450, column: 25, scope: !7643, inlinedAt: !7647)
!7921 = !DILocation(line: 450, column: 30, scope: !7643, inlinedAt: !7647)
!7922 = !DILocation(line: 450, column: 36, scope: !7643, inlinedAt: !7647)
!7923 = !DILocation(line: 450, column: 8, scope: !7643, inlinedAt: !7647)
!7924 = !DILocation(line: 450, column: 6, scope: !7643, inlinedAt: !7647)
!7925 = !DILocation(line: 451, column: 9, scope: !7643, inlinedAt: !7647)
!7926 = !DILocation(line: 552, column: 3, scope: !7648, inlinedAt: !7653)
!7927 = !DILocation(line: 557, column: 19, scope: !7650, inlinedAt: !7653)
!7928 = !DILocation(line: 557, column: 25, scope: !7650, inlinedAt: !7653)
!7929 = !DILocation(line: 557, column: 9, scope: !7650, inlinedAt: !7653)
!7930 = !DILocation(line: 557, column: 2, scope: !7650, inlinedAt: !7653)
!7931 = !DILocation(line: 558, column: 1, scope: !7650, inlinedAt: !7653)
!7932 = !DILocation(line: 591, column: 3, scope: !7654)
!7933 = !DILocation(line: 592, column: 19, scope: !7641)
!7934 = !DILocation(line: 592, column: 26, scope: !7641)
!7935 = !DILocation(line: 592, column: 9, scope: !7641)
!7936 = !DILocation(line: 592, column: 2, scope: !7641)
!7937 = !DILocation(line: 593, column: 1, scope: !7641)
!7938 = distinct !DISubprogram(name: "__must_check_overflow", scope: !7939, file: !7939, line: 52, type: !7940, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7939 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!7940 = !DISubroutineType(types: !7941)
!7941 = !{!560, !560}
!7942 = !DILocalVariable(name: "overflow", arg: 1, scope: !7938, file: !7939, line: 52, type: !560)
!7943 = !DILocation(line: 52, column: 60, scope: !7938)
!7944 = !DILocation(line: 54, column: 9, scope: !7938)
!7945 = !DILocation(line: 54, column: 2, scope: !7938)
!7946 = distinct !DISubprogram(name: "get_order", scope: !7947, file: !7947, line: 29, type: !7948, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7947 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!220, !187}
!7950 = !DILocalVariable(name: "x", arg: 1, scope: !7951, file: !7099, line: 366, type: !492)
!7951 = distinct !DISubprogram(name: "fls64", scope: !7099, file: !7099, line: 366, type: !7952, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!220, !492}
!7954 = !DILocation(line: 366, column: 40, scope: !7951, inlinedAt: !7955)
!7955 = distinct !DILocation(line: 46, column: 9, scope: !7946)
!7956 = !DILocalVariable(name: "bitpos", scope: !7951, file: !7099, line: 368, type: !220)
!7957 = !DILocation(line: 368, column: 6, scope: !7951, inlinedAt: !7955)
!7958 = !DILocalVariable(name: "size", arg: 1, scope: !7946, file: !7947, line: 29, type: !187)
!7959 = !DILocation(line: 29, column: 63, scope: !7946)
!7960 = !DILocation(line: 31, column: 27, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7946, file: !7947, line: 31, column: 6)
!7962 = !DILocation(line: 31, column: 6, scope: !7961)
!7963 = !DILocation(line: 31, column: 6, scope: !7946)
!7964 = !DILocation(line: 32, column: 8, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7947, line: 32, column: 7)
!7966 = distinct !DILexicalBlock(scope: !7961, file: !7947, line: 31, column: 34)
!7967 = !DILocation(line: 32, column: 7, scope: !7966)
!7968 = !DILocation(line: 33, column: 4, scope: !7965)
!7969 = !DILocation(line: 35, column: 7, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !7947, line: 35, column: 7)
!7971 = !DILocation(line: 35, column: 12, scope: !7970)
!7972 = !DILocation(line: 35, column: 7, scope: !7966)
!7973 = !DILocation(line: 36, column: 4, scope: !7970)
!7974 = !DILocation(line: 38, column: 10, scope: !7966)
!7975 = !DILocation(line: 38, column: 28, scope: !7966)
!7976 = !DILocation(line: 38, column: 41, scope: !7966)
!7977 = !DILocation(line: 38, column: 3, scope: !7966)
!7978 = !DILocation(line: 41, column: 6, scope: !7946)
!7979 = !DILocation(line: 42, column: 7, scope: !7946)
!7980 = !DILocation(line: 46, column: 15, scope: !7946)
!7981 = !DILocation(line: 374, column: 2, scope: !7951, inlinedAt: !7955)
!7982 = !DILocation(line: 376, column: 14, scope: !7951, inlinedAt: !7955)
!7983 = !{i32 378119}
!7984 = !DILocation(line: 377, column: 9, scope: !7951, inlinedAt: !7955)
!7985 = !DILocation(line: 377, column: 16, scope: !7951, inlinedAt: !7955)
!7986 = !DILocation(line: 46, column: 2, scope: !7946)
!7987 = !DILocation(line: 48, column: 1, scope: !7946)
!7988 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7989, file: !7989, line: 30, type: !7990, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!7989 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7990 = !DISubroutineType(types: !7991)
!7991 = !{!220, !491}
!7992 = !DILocation(line: 366, column: 40, scope: !7951, inlinedAt: !7993)
!7993 = distinct !DILocation(line: 32, column: 9, scope: !7988)
!7994 = !DILocation(line: 368, column: 6, scope: !7951, inlinedAt: !7993)
!7995 = !DILocalVariable(name: "n", arg: 1, scope: !7988, file: !7989, line: 30, type: !491)
!7996 = !DILocation(line: 30, column: 21, scope: !7988)
!7997 = !DILocation(line: 32, column: 15, scope: !7988)
!7998 = !DILocation(line: 374, column: 2, scope: !7951, inlinedAt: !7993)
!7999 = !DILocation(line: 376, column: 14, scope: !7951, inlinedAt: !7993)
!8000 = !DILocation(line: 377, column: 9, scope: !7951, inlinedAt: !7993)
!8001 = !DILocation(line: 377, column: 16, scope: !7951, inlinedAt: !7993)
!8002 = !DILocation(line: 32, column: 18, scope: !7988)
!8003 = !DILocation(line: 32, column: 2, scope: !7988)
!8004 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8005, file: !8005, line: 137, type: !8006, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8005 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8006 = !DISubroutineType(types: !8007)
!8007 = !{!185, !1031, !2201, !399, !183}
!8008 = !DILocalVariable(name: "s", arg: 1, scope: !8004, file: !8005, line: 137, type: !1031)
!8009 = !DILocation(line: 137, column: 54, scope: !8004)
!8010 = !DILocalVariable(name: "object", arg: 2, scope: !8004, file: !8005, line: 137, type: !2201)
!8011 = !DILocation(line: 137, column: 69, scope: !8004)
!8012 = !DILocalVariable(name: "size", arg: 3, scope: !8004, file: !8005, line: 138, type: !399)
!8013 = !DILocation(line: 138, column: 12, scope: !8004)
!8014 = !DILocalVariable(name: "flags", arg: 4, scope: !8004, file: !8005, line: 138, type: !183)
!8015 = !DILocation(line: 138, column: 24, scope: !8004)
!8016 = !DILocation(line: 140, column: 17, scope: !8004)
!8017 = !DILocation(line: 140, column: 2, scope: !8004)
!8018 = distinct !DISubprogram(name: "uart_install", scope: !3, file: !3, line: 1752, type: !3963, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8019 = !DILocalVariable(name: "driver", arg: 1, scope: !8018, file: !3, line: 1752, type: !3903)
!8020 = !DILocation(line: 1752, column: 44, scope: !8018)
!8021 = !DILocalVariable(name: "tty", arg: 2, scope: !8018, file: !3, line: 1752, type: !293)
!8022 = !DILocation(line: 1752, column: 71, scope: !8018)
!8023 = !DILocalVariable(name: "drv", scope: !8018, file: !3, line: 1754, type: !4503)
!8024 = !DILocation(line: 1754, column: 22, scope: !8018)
!8025 = !DILocation(line: 1754, column: 28, scope: !8018)
!8026 = !DILocation(line: 1754, column: 36, scope: !8018)
!8027 = !DILocalVariable(name: "state", scope: !8018, file: !3, line: 1755, type: !195)
!8028 = !DILocation(line: 1755, column: 21, scope: !8018)
!8029 = !DILocation(line: 1755, column: 29, scope: !8018)
!8030 = !DILocation(line: 1755, column: 34, scope: !8018)
!8031 = !DILocation(line: 1755, column: 42, scope: !8018)
!8032 = !DILocation(line: 1755, column: 47, scope: !8018)
!8033 = !DILocation(line: 1755, column: 40, scope: !8018)
!8034 = !DILocation(line: 1757, column: 21, scope: !8018)
!8035 = !DILocation(line: 1757, column: 2, scope: !8018)
!8036 = !DILocation(line: 1757, column: 7, scope: !8018)
!8037 = !DILocation(line: 1757, column: 19, scope: !8018)
!8038 = !DILocation(line: 1759, column: 30, scope: !8018)
!8039 = !DILocation(line: 1759, column: 38, scope: !8018)
!8040 = !DILocation(line: 1759, column: 9, scope: !8018)
!8041 = !DILocation(line: 1759, column: 2, scope: !8018)
!8042 = distinct !DISubprogram(name: "uart_open", scope: !3, file: !3, line: 1772, type: !3971, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8043 = !DILocalVariable(name: "tty", arg: 1, scope: !8042, file: !3, line: 1772, type: !293)
!8044 = !DILocation(line: 1772, column: 41, scope: !8042)
!8045 = !DILocalVariable(name: "filp", arg: 2, scope: !8042, file: !3, line: 1772, type: !429)
!8046 = !DILocation(line: 1772, column: 59, scope: !8042)
!8047 = !DILocalVariable(name: "state", scope: !8042, file: !3, line: 1774, type: !195)
!8048 = !DILocation(line: 1774, column: 21, scope: !8042)
!8049 = !DILocation(line: 1774, column: 29, scope: !8042)
!8050 = !DILocation(line: 1774, column: 34, scope: !8042)
!8051 = !DILocalVariable(name: "retval", scope: !8042, file: !3, line: 1775, type: !220)
!8052 = !DILocation(line: 1775, column: 6, scope: !8042)
!8053 = !DILocation(line: 1777, column: 26, scope: !8042)
!8054 = !DILocation(line: 1777, column: 33, scope: !8042)
!8055 = !DILocation(line: 1777, column: 39, scope: !8042)
!8056 = !DILocation(line: 1777, column: 44, scope: !8042)
!8057 = !DILocation(line: 1777, column: 11, scope: !8042)
!8058 = !DILocation(line: 1777, column: 9, scope: !8042)
!8059 = !DILocation(line: 1778, column: 6, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1778, column: 6)
!8061 = !DILocation(line: 1778, column: 13, scope: !8060)
!8062 = !DILocation(line: 1778, column: 6, scope: !8042)
!8063 = !DILocation(line: 1779, column: 10, scope: !8060)
!8064 = !DILocation(line: 1779, column: 3, scope: !8060)
!8065 = !DILocation(line: 1781, column: 9, scope: !8042)
!8066 = !DILocation(line: 1781, column: 2, scope: !8042)
!8067 = distinct !DISubprogram(name: "uart_close", scope: !3, file: !3, line: 1541, type: !3975, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8068 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !8069)
!8069 = distinct !DILocation(line: 1553, column: 3, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 1545, column: 14)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1545, column: 6)
!8072 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !8073)
!8073 = distinct !DILocation(line: 1551, column: 3, scope: !8070)
!8074 = !DILocalVariable(name: "tty", arg: 1, scope: !8067, file: !3, line: 1541, type: !293)
!8075 = !DILocation(line: 1541, column: 43, scope: !8067)
!8076 = !DILocalVariable(name: "filp", arg: 2, scope: !8067, file: !3, line: 1541, type: !429)
!8077 = !DILocation(line: 1541, column: 61, scope: !8067)
!8078 = !DILocalVariable(name: "state", scope: !8067, file: !3, line: 1543, type: !195)
!8079 = !DILocation(line: 1543, column: 21, scope: !8067)
!8080 = !DILocation(line: 1543, column: 29, scope: !8067)
!8081 = !DILocation(line: 1543, column: 34, scope: !8067)
!8082 = !DILocation(line: 1545, column: 7, scope: !8071)
!8083 = !DILocation(line: 1545, column: 6, scope: !8067)
!8084 = !DILocalVariable(name: "drv", scope: !8070, file: !3, line: 1546, type: !4503)
!8085 = !DILocation(line: 1546, column: 23, scope: !8070)
!8086 = !DILocation(line: 1546, column: 29, scope: !8070)
!8087 = !DILocation(line: 1546, column: 34, scope: !8070)
!8088 = !DILocation(line: 1546, column: 42, scope: !8070)
!8089 = !DILocalVariable(name: "port", scope: !8070, file: !3, line: 1547, type: !3947)
!8090 = !DILocation(line: 1547, column: 20, scope: !8070)
!8091 = !DILocation(line: 1549, column: 11, scope: !8070)
!8092 = !DILocation(line: 1549, column: 16, scope: !8070)
!8093 = !DILocation(line: 1549, column: 24, scope: !8070)
!8094 = !DILocation(line: 1549, column: 29, scope: !8070)
!8095 = !DILocation(line: 1549, column: 22, scope: !8070)
!8096 = !DILocation(line: 1549, column: 9, scope: !8070)
!8097 = !DILocation(line: 1550, column: 11, scope: !8070)
!8098 = !DILocation(line: 1550, column: 18, scope: !8070)
!8099 = !DILocation(line: 1550, column: 8, scope: !8070)
!8100 = !DILocation(line: 1551, column: 18, scope: !8070)
!8101 = !DILocation(line: 1551, column: 24, scope: !8070)
!8102 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !8073)
!8103 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !8073)
!8104 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !8073)
!8105 = !DILocation(line: 1552, column: 5, scope: !8070)
!8106 = !DILocation(line: 1552, column: 11, scope: !8070)
!8107 = !DILocation(line: 1552, column: 3, scope: !8070)
!8108 = !DILocation(line: 1553, column: 20, scope: !8070)
!8109 = !DILocation(line: 1553, column: 26, scope: !8070)
!8110 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !8069)
!8111 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !8069)
!8112 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !8069)
!8113 = !DILocation(line: 1554, column: 3, scope: !8070)
!8114 = !DILocation(line: 1557, column: 2, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 1557, column: 2)
!8116 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 1557, column: 2)
!8117 = !DILocation(line: 1557, column: 2, scope: !8116)
!8118 = !DILocation(line: 1559, column: 17, scope: !8067)
!8119 = !DILocation(line: 1559, column: 22, scope: !8067)
!8120 = !DILocation(line: 1559, column: 28, scope: !8067)
!8121 = !DILocation(line: 1559, column: 33, scope: !8067)
!8122 = !DILocation(line: 1559, column: 2, scope: !8067)
!8123 = !DILocation(line: 1560, column: 1, scope: !8067)
!8124 = distinct !DISubprogram(name: "uart_write", scope: !3, file: !3, line: 576, type: !3984, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8125 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8126)
!8126 = distinct !DILocation(line: 615, column: 2, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 615, column: 2)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 615, column: 2)
!8129 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 615, column: 2)
!8130 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8126)
!8131 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8132)
!8132 = distinct !DILocation(line: 597, column: 3, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 597, column: 3)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 597, column: 3)
!8135 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 597, column: 3)
!8136 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 596, column: 18)
!8137 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 596, column: 6)
!8138 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8132)
!8139 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !8140)
!8140 = distinct !DILocation(line: 594, column: 9, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 594, column: 9)
!8142 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 594, column: 9)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 594, column: 9)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 594, column: 9)
!8145 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 594, column: 9)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !3, line: 594, column: 9)
!8147 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 594, column: 9)
!8148 = !DILocalVariable(name: "tty", arg: 1, scope: !8124, file: !3, line: 576, type: !293)
!8149 = !DILocation(line: 576, column: 42, scope: !8124)
!8150 = !DILocalVariable(name: "buf", arg: 2, scope: !8124, file: !3, line: 577, type: !495)
!8151 = !DILocation(line: 577, column: 27, scope: !8124)
!8152 = !DILocalVariable(name: "count", arg: 3, scope: !8124, file: !3, line: 577, type: !220)
!8153 = !DILocation(line: 577, column: 36, scope: !8124)
!8154 = !DILocalVariable(name: "state", scope: !8124, file: !3, line: 579, type: !195)
!8155 = !DILocation(line: 579, column: 21, scope: !8124)
!8156 = !DILocation(line: 579, column: 29, scope: !8124)
!8157 = !DILocation(line: 579, column: 34, scope: !8124)
!8158 = !DILocalVariable(name: "port", scope: !8124, file: !3, line: 580, type: !4276)
!8159 = !DILocation(line: 580, column: 20, scope: !8124)
!8160 = !DILocalVariable(name: "circ", scope: !8124, file: !3, line: 581, type: !8161)
!8161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!8162 = !DILocation(line: 581, column: 19, scope: !8124)
!8163 = !DILocalVariable(name: "flags", scope: !8124, file: !3, line: 582, type: !187)
!8164 = !DILocation(line: 582, column: 16, scope: !8124)
!8165 = !DILocalVariable(name: "c", scope: !8124, file: !3, line: 583, type: !220)
!8166 = !DILocation(line: 583, column: 6, scope: !8124)
!8167 = !DILocalVariable(name: "ret", scope: !8124, file: !3, line: 583, type: !220)
!8168 = !DILocation(line: 583, column: 9, scope: !8124)
!8169 = !DILocation(line: 589, column: 7, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 589, column: 6)
!8171 = !DILocation(line: 589, column: 6, scope: !8124)
!8172 = !DILocalVariable(name: "__ret_warn_on", scope: !8173, file: !3, line: 590, type: !220)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 590, column: 3)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 589, column: 14)
!8175 = !DILocation(line: 590, column: 3, scope: !8173)
!8176 = !DILocation(line: 590, column: 3, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 590, column: 3)
!8178 = !DILocation(line: 590, column: 3, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 590, column: 3)
!8180 = !DILocation(line: 590, column: 3, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 590, column: 3)
!8182 = !DILocation(line: 590, column: 3, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 590, column: 3)
!8184 = !{i32 -2141550590, i32 -2141550561, i32 -2141550515, i32 -2141550457, i32 -2141550403, i32 -2141550349, i32 -2141550294, i32 -2141550263}
!8185 = !DILocation(line: 590, column: 3, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 590, column: 3)
!8187 = !{i32 -2141549849, i32 -2141549842, i32 -2141549790, i32 -2141549759, i32 -2141549729}
!8188 = !DILocation(line: 590, column: 3, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8179, file: !3, line: 590, column: 3)
!8190 = !DILocation(line: 591, column: 3, scope: !8174)
!8191 = !DILocalVariable(name: "__uport", scope: !8147, file: !3, line: 594, type: !4276)
!8192 = !DILocation(line: 594, column: 9, scope: !8147)
!8193 = !DILocation(line: 594, column: 9, scope: !8146)
!8194 = !DILocation(line: 594, column: 9, scope: !8145)
!8195 = !DILocalVariable(name: "__dummy", scope: !8196, file: !3, line: 594, type: !187)
!8196 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 594, column: 9)
!8197 = !DILocation(line: 594, column: 9, scope: !8196)
!8198 = !DILocalVariable(name: "__dummy2", scope: !8196, file: !3, line: 594, type: !187)
!8199 = !DILocation(line: 594, column: 9, scope: !8144)
!8200 = !DILocation(line: 594, column: 9, scope: !8143)
!8201 = !DILocation(line: 594, column: 9, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 594, column: 9)
!8203 = !DILocalVariable(name: "__dummy", scope: !8204, file: !3, line: 594, type: !187)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 594, column: 9)
!8205 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 594, column: 9)
!8206 = !DILocation(line: 594, column: 9, scope: !8204)
!8207 = !DILocalVariable(name: "__dummy2", scope: !8204, file: !3, line: 594, type: !187)
!8208 = !DILocation(line: 594, column: 9, scope: !8205)
!8209 = !DILocation(line: 594, column: 9, scope: !8142)
!8210 = !{i32 -2141548561}
!8211 = !DILocation(line: 594, column: 9, scope: !8141)
!8212 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !8140)
!8213 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !8140)
!8214 = !DILocation(line: 594, column: 7, scope: !8124)
!8215 = !DILocation(line: 595, column: 10, scope: !8124)
!8216 = !DILocation(line: 595, column: 17, scope: !8124)
!8217 = !DILocation(line: 595, column: 7, scope: !8124)
!8218 = !DILocation(line: 596, column: 7, scope: !8137)
!8219 = !DILocation(line: 596, column: 13, scope: !8137)
!8220 = !DILocation(line: 596, column: 6, scope: !8124)
!8221 = !DILocalVariable(name: "__uport", scope: !8135, file: !3, line: 597, type: !4276)
!8222 = !DILocation(line: 597, column: 3, scope: !8135)
!8223 = !DILocation(line: 597, column: 3, scope: !8134)
!8224 = !DILocation(line: 597, column: 3, scope: !8133)
!8225 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8132)
!8226 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8132)
!8227 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8132)
!8228 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8132)
!8229 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8132)
!8230 = !DILocation(line: 598, column: 3, scope: !8136)
!8231 = !DILocation(line: 601, column: 2, scope: !8124)
!8232 = !DILocation(line: 601, column: 9, scope: !8124)
!8233 = !DILocalVariable(name: "end", scope: !8234, file: !3, line: 602, type: !220)
!8234 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 602, column: 7)
!8235 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 601, column: 15)
!8236 = !DILocation(line: 602, column: 7, scope: !8234)
!8237 = !DILocalVariable(name: "n", scope: !8234, file: !3, line: 602, type: !220)
!8238 = !DILocation(line: 602, column: 5, scope: !8235)
!8239 = !DILocation(line: 603, column: 7, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 603, column: 7)
!8241 = !DILocation(line: 603, column: 15, scope: !8240)
!8242 = !DILocation(line: 603, column: 13, scope: !8240)
!8243 = !DILocation(line: 603, column: 7, scope: !8235)
!8244 = !DILocation(line: 604, column: 8, scope: !8240)
!8245 = !DILocation(line: 604, column: 6, scope: !8240)
!8246 = !DILocation(line: 604, column: 4, scope: !8240)
!8247 = !DILocation(line: 605, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8235, file: !3, line: 605, column: 7)
!8249 = !DILocation(line: 605, column: 9, scope: !8248)
!8250 = !DILocation(line: 605, column: 7, scope: !8235)
!8251 = !DILocation(line: 606, column: 4, scope: !8248)
!8252 = !DILocation(line: 607, column: 10, scope: !8235)
!8253 = !DILocation(line: 607, column: 16, scope: !8235)
!8254 = !DILocation(line: 607, column: 22, scope: !8235)
!8255 = !DILocation(line: 607, column: 28, scope: !8235)
!8256 = !DILocation(line: 607, column: 20, scope: !8235)
!8257 = !DILocation(line: 607, column: 34, scope: !8235)
!8258 = !DILocation(line: 607, column: 39, scope: !8235)
!8259 = !DILocation(line: 607, column: 3, scope: !8235)
!8260 = !DILocation(line: 608, column: 17, scope: !8235)
!8261 = !DILocation(line: 608, column: 23, scope: !8235)
!8262 = !DILocation(line: 608, column: 30, scope: !8235)
!8263 = !DILocation(line: 608, column: 28, scope: !8235)
!8264 = !DILocation(line: 608, column: 16, scope: !8235)
!8265 = !DILocation(line: 608, column: 33, scope: !8235)
!8266 = !DILocation(line: 608, column: 3, scope: !8235)
!8267 = !DILocation(line: 608, column: 9, scope: !8235)
!8268 = !DILocation(line: 608, column: 14, scope: !8235)
!8269 = !DILocation(line: 609, column: 10, scope: !8235)
!8270 = !DILocation(line: 609, column: 7, scope: !8235)
!8271 = !DILocation(line: 610, column: 12, scope: !8235)
!8272 = !DILocation(line: 610, column: 9, scope: !8235)
!8273 = !DILocation(line: 611, column: 10, scope: !8235)
!8274 = !DILocation(line: 611, column: 7, scope: !8235)
!8275 = distinct !{!8275, !8231, !8276}
!8276 = !DILocation(line: 612, column: 2, scope: !8124)
!8277 = !DILocation(line: 614, column: 15, scope: !8124)
!8278 = !DILocation(line: 614, column: 2, scope: !8124)
!8279 = !DILocalVariable(name: "__uport", scope: !8129, file: !3, line: 615, type: !4276)
!8280 = !DILocation(line: 615, column: 2, scope: !8129)
!8281 = !DILocation(line: 615, column: 2, scope: !8128)
!8282 = !DILocation(line: 615, column: 2, scope: !8127)
!8283 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8126)
!8284 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8126)
!8285 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8126)
!8286 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8126)
!8287 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8126)
!8288 = !DILocation(line: 616, column: 9, scope: !8124)
!8289 = !DILocation(line: 616, column: 2, scope: !8124)
!8290 = !DILocation(line: 617, column: 1, scope: !8124)
!8291 = distinct !DISubprogram(name: "uart_put_char", scope: !3, file: !3, line: 547, type: !3988, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8292 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8293)
!8293 = distinct !DILocation(line: 567, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 567, column: 2)
!8295 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 567, column: 2)
!8296 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 567, column: 2)
!8297 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8293)
!8298 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8299)
!8299 = distinct !DILocation(line: 558, column: 3, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 558, column: 3)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 558, column: 3)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 558, column: 3)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 557, column: 18)
!8304 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 557, column: 6)
!8305 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8299)
!8306 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !8307)
!8307 = distinct !DILocation(line: 556, column: 9, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 556, column: 9)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 556, column: 9)
!8310 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 556, column: 9)
!8311 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 556, column: 9)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 556, column: 9)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 556, column: 9)
!8314 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 556, column: 9)
!8315 = !DILocalVariable(name: "tty", arg: 1, scope: !8291, file: !3, line: 547, type: !293)
!8316 = !DILocation(line: 547, column: 45, scope: !8291)
!8317 = !DILocalVariable(name: "c", arg: 2, scope: !8291, file: !3, line: 547, type: !497)
!8318 = !DILocation(line: 547, column: 64, scope: !8291)
!8319 = !DILocalVariable(name: "state", scope: !8291, file: !3, line: 549, type: !195)
!8320 = !DILocation(line: 549, column: 21, scope: !8291)
!8321 = !DILocation(line: 549, column: 29, scope: !8291)
!8322 = !DILocation(line: 549, column: 34, scope: !8291)
!8323 = !DILocalVariable(name: "port", scope: !8291, file: !3, line: 550, type: !4276)
!8324 = !DILocation(line: 550, column: 20, scope: !8291)
!8325 = !DILocalVariable(name: "circ", scope: !8291, file: !3, line: 551, type: !8161)
!8326 = !DILocation(line: 551, column: 19, scope: !8291)
!8327 = !DILocalVariable(name: "flags", scope: !8291, file: !3, line: 552, type: !187)
!8328 = !DILocation(line: 552, column: 16, scope: !8291)
!8329 = !DILocalVariable(name: "ret", scope: !8291, file: !3, line: 553, type: !220)
!8330 = !DILocation(line: 553, column: 6, scope: !8291)
!8331 = !DILocation(line: 555, column: 10, scope: !8291)
!8332 = !DILocation(line: 555, column: 17, scope: !8291)
!8333 = !DILocation(line: 555, column: 7, scope: !8291)
!8334 = !DILocalVariable(name: "__uport", scope: !8314, file: !3, line: 556, type: !4276)
!8335 = !DILocation(line: 556, column: 9, scope: !8314)
!8336 = !DILocation(line: 556, column: 9, scope: !8313)
!8337 = !DILocation(line: 556, column: 9, scope: !8312)
!8338 = !DILocalVariable(name: "__dummy", scope: !8339, file: !3, line: 556, type: !187)
!8339 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 556, column: 9)
!8340 = !DILocation(line: 556, column: 9, scope: !8339)
!8341 = !DILocalVariable(name: "__dummy2", scope: !8339, file: !3, line: 556, type: !187)
!8342 = !DILocation(line: 556, column: 9, scope: !8311)
!8343 = !DILocation(line: 556, column: 9, scope: !8310)
!8344 = !DILocation(line: 556, column: 9, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 556, column: 9)
!8346 = !DILocalVariable(name: "__dummy", scope: !8347, file: !3, line: 556, type: !187)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 556, column: 9)
!8348 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 556, column: 9)
!8349 = !DILocation(line: 556, column: 9, scope: !8347)
!8350 = !DILocalVariable(name: "__dummy2", scope: !8347, file: !3, line: 556, type: !187)
!8351 = !DILocation(line: 556, column: 9, scope: !8348)
!8352 = !DILocation(line: 556, column: 9, scope: !8309)
!8353 = !{i32 -2141551972}
!8354 = !DILocation(line: 556, column: 9, scope: !8308)
!8355 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !8307)
!8356 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !8307)
!8357 = !DILocation(line: 556, column: 7, scope: !8291)
!8358 = !DILocation(line: 557, column: 7, scope: !8304)
!8359 = !DILocation(line: 557, column: 13, scope: !8304)
!8360 = !DILocation(line: 557, column: 6, scope: !8291)
!8361 = !DILocalVariable(name: "__uport", scope: !8302, file: !3, line: 558, type: !4276)
!8362 = !DILocation(line: 558, column: 3, scope: !8302)
!8363 = !DILocation(line: 558, column: 3, scope: !8301)
!8364 = !DILocation(line: 558, column: 3, scope: !8300)
!8365 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8299)
!8366 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8299)
!8367 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8299)
!8368 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8299)
!8369 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8299)
!8370 = !DILocation(line: 559, column: 3, scope: !8303)
!8371 = !DILocation(line: 562, column: 6, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 562, column: 6)
!8373 = !DILocation(line: 562, column: 11, scope: !8372)
!8374 = !DILocation(line: 562, column: 14, scope: !8372)
!8375 = !DILocation(line: 562, column: 41, scope: !8372)
!8376 = !DILocation(line: 562, column: 6, scope: !8291)
!8377 = !DILocation(line: 563, column: 27, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 562, column: 47)
!8379 = !DILocation(line: 563, column: 3, scope: !8378)
!8380 = !DILocation(line: 563, column: 9, scope: !8378)
!8381 = !DILocation(line: 563, column: 13, scope: !8378)
!8382 = !DILocation(line: 563, column: 19, scope: !8378)
!8383 = !DILocation(line: 563, column: 25, scope: !8378)
!8384 = !DILocation(line: 564, column: 17, scope: !8378)
!8385 = !DILocation(line: 564, column: 23, scope: !8378)
!8386 = !DILocation(line: 564, column: 28, scope: !8378)
!8387 = !DILocation(line: 564, column: 16, scope: !8378)
!8388 = !DILocation(line: 564, column: 33, scope: !8378)
!8389 = !DILocation(line: 564, column: 3, scope: !8378)
!8390 = !DILocation(line: 564, column: 9, scope: !8378)
!8391 = !DILocation(line: 564, column: 14, scope: !8378)
!8392 = !DILocation(line: 565, column: 7, scope: !8378)
!8393 = !DILocation(line: 566, column: 2, scope: !8378)
!8394 = !DILocalVariable(name: "__uport", scope: !8296, file: !3, line: 567, type: !4276)
!8395 = !DILocation(line: 567, column: 2, scope: !8296)
!8396 = !DILocation(line: 567, column: 2, scope: !8295)
!8397 = !DILocation(line: 567, column: 2, scope: !8294)
!8398 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8293)
!8399 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8293)
!8400 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8293)
!8401 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8293)
!8402 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8293)
!8403 = !DILocation(line: 568, column: 9, scope: !8291)
!8404 = !DILocation(line: 568, column: 2, scope: !8291)
!8405 = !DILocation(line: 569, column: 1, scope: !8291)
!8406 = distinct !DISubprogram(name: "uart_flush_chars", scope: !3, file: !3, line: 571, type: !3979, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8407 = !DILocalVariable(name: "tty", arg: 1, scope: !8406, file: !3, line: 571, type: !293)
!8408 = !DILocation(line: 571, column: 49, scope: !8406)
!8409 = !DILocation(line: 573, column: 13, scope: !8406)
!8410 = !DILocation(line: 573, column: 2, scope: !8406)
!8411 = !DILocation(line: 574, column: 1, scope: !8406)
!8412 = distinct !DISubprogram(name: "uart_write_room", scope: !3, file: !3, line: 619, type: !3993, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8413 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8414)
!8414 = distinct !DILocation(line: 628, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 628, column: 2)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 628, column: 2)
!8417 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 628, column: 2)
!8418 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8414)
!8419 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !8420)
!8420 = distinct !DILocation(line: 626, column: 9, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 626, column: 9)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 626, column: 9)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 626, column: 9)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 626, column: 9)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 626, column: 9)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 626, column: 9)
!8427 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 626, column: 9)
!8428 = !DILocalVariable(name: "tty", arg: 1, scope: !8412, file: !3, line: 619, type: !293)
!8429 = !DILocation(line: 619, column: 47, scope: !8412)
!8430 = !DILocalVariable(name: "state", scope: !8412, file: !3, line: 621, type: !195)
!8431 = !DILocation(line: 621, column: 21, scope: !8412)
!8432 = !DILocation(line: 621, column: 29, scope: !8412)
!8433 = !DILocation(line: 621, column: 34, scope: !8412)
!8434 = !DILocalVariable(name: "port", scope: !8412, file: !3, line: 622, type: !4276)
!8435 = !DILocation(line: 622, column: 20, scope: !8412)
!8436 = !DILocalVariable(name: "flags", scope: !8412, file: !3, line: 623, type: !187)
!8437 = !DILocation(line: 623, column: 16, scope: !8412)
!8438 = !DILocalVariable(name: "ret", scope: !8412, file: !3, line: 624, type: !220)
!8439 = !DILocation(line: 624, column: 6, scope: !8412)
!8440 = !DILocalVariable(name: "__uport", scope: !8427, file: !3, line: 626, type: !4276)
!8441 = !DILocation(line: 626, column: 9, scope: !8427)
!8442 = !DILocation(line: 626, column: 9, scope: !8426)
!8443 = !DILocation(line: 626, column: 9, scope: !8425)
!8444 = !DILocalVariable(name: "__dummy", scope: !8445, file: !3, line: 626, type: !187)
!8445 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 626, column: 9)
!8446 = !DILocation(line: 626, column: 9, scope: !8445)
!8447 = !DILocalVariable(name: "__dummy2", scope: !8445, file: !3, line: 626, type: !187)
!8448 = !DILocation(line: 626, column: 9, scope: !8424)
!8449 = !DILocation(line: 626, column: 9, scope: !8423)
!8450 = !DILocation(line: 626, column: 9, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 626, column: 9)
!8452 = !DILocalVariable(name: "__dummy", scope: !8453, file: !3, line: 626, type: !187)
!8453 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 626, column: 9)
!8454 = distinct !DILexicalBlock(scope: !8451, file: !3, line: 626, column: 9)
!8455 = !DILocation(line: 626, column: 9, scope: !8453)
!8456 = !DILocalVariable(name: "__dummy2", scope: !8453, file: !3, line: 626, type: !187)
!8457 = !DILocation(line: 626, column: 9, scope: !8454)
!8458 = !DILocation(line: 626, column: 9, scope: !8422)
!8459 = !{i32 -2141546672}
!8460 = !DILocation(line: 626, column: 9, scope: !8421)
!8461 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !8420)
!8462 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !8420)
!8463 = !DILocation(line: 626, column: 7, scope: !8412)
!8464 = !DILocation(line: 627, column: 8, scope: !8412)
!8465 = !DILocation(line: 627, column: 6, scope: !8412)
!8466 = !DILocalVariable(name: "__uport", scope: !8417, file: !3, line: 628, type: !4276)
!8467 = !DILocation(line: 628, column: 2, scope: !8417)
!8468 = !DILocation(line: 628, column: 2, scope: !8416)
!8469 = !DILocation(line: 628, column: 2, scope: !8415)
!8470 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8414)
!8471 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8414)
!8472 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8414)
!8473 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8414)
!8474 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8414)
!8475 = !DILocation(line: 629, column: 9, scope: !8412)
!8476 = !DILocation(line: 629, column: 2, scope: !8412)
!8477 = distinct !DISubprogram(name: "uart_chars_in_buffer", scope: !3, file: !3, line: 632, type: !3993, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8478 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8479)
!8479 = distinct !DILocation(line: 641, column: 2, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !3, line: 641, column: 2)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 641, column: 2)
!8482 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 641, column: 2)
!8483 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8479)
!8484 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !8485)
!8485 = distinct !DILocation(line: 639, column: 9, scope: !8486)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 639, column: 9)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 639, column: 9)
!8488 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 639, column: 9)
!8489 = distinct !DILexicalBlock(scope: !8490, file: !3, line: 639, column: 9)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 639, column: 9)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 639, column: 9)
!8492 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 639, column: 9)
!8493 = !DILocalVariable(name: "tty", arg: 1, scope: !8477, file: !3, line: 632, type: !293)
!8494 = !DILocation(line: 632, column: 52, scope: !8477)
!8495 = !DILocalVariable(name: "state", scope: !8477, file: !3, line: 634, type: !195)
!8496 = !DILocation(line: 634, column: 21, scope: !8477)
!8497 = !DILocation(line: 634, column: 29, scope: !8477)
!8498 = !DILocation(line: 634, column: 34, scope: !8477)
!8499 = !DILocalVariable(name: "port", scope: !8477, file: !3, line: 635, type: !4276)
!8500 = !DILocation(line: 635, column: 20, scope: !8477)
!8501 = !DILocalVariable(name: "flags", scope: !8477, file: !3, line: 636, type: !187)
!8502 = !DILocation(line: 636, column: 16, scope: !8477)
!8503 = !DILocalVariable(name: "ret", scope: !8477, file: !3, line: 637, type: !220)
!8504 = !DILocation(line: 637, column: 6, scope: !8477)
!8505 = !DILocalVariable(name: "__uport", scope: !8492, file: !3, line: 639, type: !4276)
!8506 = !DILocation(line: 639, column: 9, scope: !8492)
!8507 = !DILocation(line: 639, column: 9, scope: !8491)
!8508 = !DILocation(line: 639, column: 9, scope: !8490)
!8509 = !DILocalVariable(name: "__dummy", scope: !8510, file: !3, line: 639, type: !187)
!8510 = distinct !DILexicalBlock(scope: !8489, file: !3, line: 639, column: 9)
!8511 = !DILocation(line: 639, column: 9, scope: !8510)
!8512 = !DILocalVariable(name: "__dummy2", scope: !8510, file: !3, line: 639, type: !187)
!8513 = !DILocation(line: 639, column: 9, scope: !8489)
!8514 = !DILocation(line: 639, column: 9, scope: !8488)
!8515 = !DILocation(line: 639, column: 9, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 639, column: 9)
!8517 = !DILocalVariable(name: "__dummy", scope: !8518, file: !3, line: 639, type: !187)
!8518 = distinct !DILexicalBlock(scope: !8519, file: !3, line: 639, column: 9)
!8519 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 639, column: 9)
!8520 = !DILocation(line: 639, column: 9, scope: !8518)
!8521 = !DILocalVariable(name: "__dummy2", scope: !8518, file: !3, line: 639, type: !187)
!8522 = !DILocation(line: 639, column: 9, scope: !8519)
!8523 = !DILocation(line: 639, column: 9, scope: !8487)
!8524 = !{i32 -2141544909}
!8525 = !DILocation(line: 639, column: 9, scope: !8486)
!8526 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !8485)
!8527 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !8485)
!8528 = !DILocation(line: 639, column: 7, scope: !8477)
!8529 = !DILocation(line: 640, column: 8, scope: !8477)
!8530 = !DILocation(line: 640, column: 6, scope: !8477)
!8531 = !DILocalVariable(name: "__uport", scope: !8482, file: !3, line: 641, type: !4276)
!8532 = !DILocation(line: 641, column: 2, scope: !8482)
!8533 = !DILocation(line: 641, column: 2, scope: !8481)
!8534 = !DILocation(line: 641, column: 2, scope: !8480)
!8535 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8479)
!8536 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8479)
!8537 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8479)
!8538 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8479)
!8539 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8479)
!8540 = !DILocation(line: 642, column: 9, scope: !8477)
!8541 = !DILocation(line: 642, column: 2, scope: !8477)
!8542 = distinct !DISubprogram(name: "uart_ioctl", scope: !3, file: !3, line: 1382, type: !3998, scopeLine: 1383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8543 = !DILocalVariable(name: "tty", arg: 1, scope: !8542, file: !3, line: 1382, type: !293)
!8544 = !DILocation(line: 1382, column: 31, scope: !8542)
!8545 = !DILocalVariable(name: "cmd", arg: 2, scope: !8542, file: !3, line: 1382, type: !7)
!8546 = !DILocation(line: 1382, column: 49, scope: !8542)
!8547 = !DILocalVariable(name: "arg", arg: 3, scope: !8542, file: !3, line: 1382, type: !187)
!8548 = !DILocation(line: 1382, column: 68, scope: !8542)
!8549 = !DILocalVariable(name: "state", scope: !8542, file: !3, line: 1384, type: !195)
!8550 = !DILocation(line: 1384, column: 21, scope: !8542)
!8551 = !DILocation(line: 1384, column: 29, scope: !8542)
!8552 = !DILocation(line: 1384, column: 34, scope: !8542)
!8553 = !DILocalVariable(name: "port", scope: !8542, file: !3, line: 1385, type: !3947)
!8554 = !DILocation(line: 1385, column: 19, scope: !8542)
!8555 = !DILocation(line: 1385, column: 27, scope: !8542)
!8556 = !DILocation(line: 1385, column: 34, scope: !8542)
!8557 = !DILocalVariable(name: "uport", scope: !8542, file: !3, line: 1386, type: !4276)
!8558 = !DILocation(line: 1386, column: 20, scope: !8542)
!8559 = !DILocalVariable(name: "uarg", scope: !8542, file: !3, line: 1387, type: !185)
!8560 = !DILocation(line: 1387, column: 15, scope: !8542)
!8561 = !DILocation(line: 1387, column: 37, scope: !8542)
!8562 = !DILocation(line: 1387, column: 22, scope: !8542)
!8563 = !DILocalVariable(name: "ret", scope: !8542, file: !3, line: 1388, type: !220)
!8564 = !DILocation(line: 1388, column: 6, scope: !8542)
!8565 = !DILocation(line: 1394, column: 10, scope: !8542)
!8566 = !DILocation(line: 1394, column: 2, scope: !8542)
!8567 = !DILocation(line: 1396, column: 15, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1394, column: 15)
!8569 = !DILocation(line: 1396, column: 20, scope: !8568)
!8570 = !DILocation(line: 1396, column: 3, scope: !8568)
!8571 = !DILocation(line: 1397, column: 28, scope: !8568)
!8572 = !DILocation(line: 1397, column: 33, scope: !8568)
!8573 = !DILocation(line: 1397, column: 9, scope: !8568)
!8574 = !DILocation(line: 1397, column: 7, scope: !8568)
!8575 = !DILocation(line: 1398, column: 13, scope: !8568)
!8576 = !DILocation(line: 1398, column: 18, scope: !8568)
!8577 = !DILocation(line: 1398, column: 3, scope: !8568)
!8578 = !DILocation(line: 1399, column: 3, scope: !8568)
!8579 = !DILocation(line: 1402, column: 6, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1402, column: 6)
!8581 = !DILocation(line: 1402, column: 10, scope: !8580)
!8582 = !DILocation(line: 1402, column: 6, scope: !8542)
!8583 = !DILocation(line: 1403, column: 3, scope: !8580)
!8584 = !DILocation(line: 1405, column: 19, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1405, column: 6)
!8586 = !DILocation(line: 1405, column: 6, scope: !8585)
!8587 = !DILocation(line: 1405, column: 6, scope: !8542)
!8588 = !DILocation(line: 1406, column: 7, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 1405, column: 25)
!8590 = !DILocation(line: 1407, column: 3, scope: !8589)
!8591 = !DILocation(line: 1413, column: 10, scope: !8542)
!8592 = !DILocation(line: 1413, column: 2, scope: !8542)
!8593 = !DILocation(line: 1415, column: 32, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1413, column: 15)
!8595 = !DILocation(line: 1415, column: 39, scope: !8594)
!8596 = !DILocation(line: 1415, column: 9, scope: !8594)
!8597 = !DILocation(line: 1415, column: 7, scope: !8594)
!8598 = !DILocation(line: 1416, column: 3, scope: !8594)
!8599 = !DILocation(line: 1419, column: 6, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1419, column: 6)
!8601 = !DILocation(line: 1419, column: 10, scope: !8600)
!8602 = !DILocation(line: 1419, column: 6, scope: !8542)
!8603 = !DILocation(line: 1420, column: 3, scope: !8600)
!8604 = !DILocation(line: 1422, column: 14, scope: !8542)
!8605 = !DILocation(line: 1422, column: 20, scope: !8542)
!8606 = !DILocation(line: 1422, column: 2, scope: !8542)
!8607 = !DILocation(line: 1423, column: 26, scope: !8542)
!8608 = !DILocation(line: 1423, column: 10, scope: !8542)
!8609 = !DILocation(line: 1423, column: 8, scope: !8542)
!8610 = !DILocation(line: 1425, column: 7, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1425, column: 6)
!8612 = !DILocation(line: 1425, column: 13, scope: !8611)
!8613 = !DILocation(line: 1425, column: 29, scope: !8611)
!8614 = !DILocation(line: 1425, column: 16, scope: !8611)
!8615 = !DILocation(line: 1425, column: 6, scope: !8542)
!8616 = !DILocation(line: 1426, column: 7, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 1425, column: 35)
!8618 = !DILocation(line: 1427, column: 3, scope: !8617)
!8619 = !DILocation(line: 1435, column: 10, scope: !8542)
!8620 = !DILocation(line: 1435, column: 2, scope: !8542)
!8621 = !DILocation(line: 1437, column: 27, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1435, column: 15)
!8623 = !DILocation(line: 1437, column: 32, scope: !8622)
!8624 = !DILocation(line: 1437, column: 39, scope: !8622)
!8625 = !DILocation(line: 1437, column: 9, scope: !8622)
!8626 = !DILocation(line: 1437, column: 7, scope: !8622)
!8627 = !DILocation(line: 1438, column: 3, scope: !8622)
!8628 = !DILocation(line: 1441, column: 31, scope: !8622)
!8629 = !DILocation(line: 1441, column: 38, scope: !8622)
!8630 = !DILocation(line: 1441, column: 9, scope: !8622)
!8631 = !DILocation(line: 1441, column: 7, scope: !8622)
!8632 = !DILocation(line: 1442, column: 3, scope: !8622)
!8633 = !DILocation(line: 1445, column: 31, scope: !8622)
!8634 = !DILocation(line: 1445, column: 38, scope: !8622)
!8635 = !DILocation(line: 1445, column: 9, scope: !8622)
!8636 = !DILocation(line: 1445, column: 7, scope: !8622)
!8637 = !DILocation(line: 1446, column: 3, scope: !8622)
!8638 = !DILocation(line: 1449, column: 33, scope: !8622)
!8639 = !DILocation(line: 1449, column: 40, scope: !8622)
!8640 = !DILocation(line: 1449, column: 51, scope: !8622)
!8641 = !DILocation(line: 1449, column: 9, scope: !8622)
!8642 = !DILocation(line: 1449, column: 7, scope: !8622)
!8643 = !DILocation(line: 1450, column: 3, scope: !8622)
!8644 = !DILocation(line: 1453, column: 33, scope: !8622)
!8645 = !DILocation(line: 1453, column: 40, scope: !8622)
!8646 = !DILocation(line: 1453, column: 51, scope: !8622)
!8647 = !DILocation(line: 1453, column: 9, scope: !8622)
!8648 = !DILocation(line: 1453, column: 7, scope: !8622)
!8649 = !DILocation(line: 1454, column: 3, scope: !8622)
!8650 = !DILocation(line: 1456, column: 7, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 1456, column: 7)
!8652 = !DILocation(line: 1456, column: 14, scope: !8651)
!8653 = !DILocation(line: 1456, column: 19, scope: !8651)
!8654 = !DILocation(line: 1456, column: 7, scope: !8622)
!8655 = !DILocation(line: 1457, column: 10, scope: !8651)
!8656 = !DILocation(line: 1457, column: 17, scope: !8651)
!8657 = !DILocation(line: 1457, column: 22, scope: !8651)
!8658 = !DILocation(line: 1457, column: 28, scope: !8651)
!8659 = !DILocation(line: 1457, column: 35, scope: !8651)
!8660 = !DILocation(line: 1457, column: 40, scope: !8651)
!8661 = !DILocation(line: 1457, column: 8, scope: !8651)
!8662 = !DILocation(line: 1457, column: 4, scope: !8651)
!8663 = !DILocation(line: 1458, column: 3, scope: !8622)
!8664 = !DILocation(line: 1459, column: 2, scope: !8622)
!8665 = !DILabel(scope: !8542, name: "out_up", file: !3, line: 1460)
!8666 = !DILocation(line: 1460, column: 1, scope: !8542)
!8667 = !DILocation(line: 1461, column: 16, scope: !8542)
!8668 = !DILocation(line: 1461, column: 22, scope: !8542)
!8669 = !DILocation(line: 1461, column: 2, scope: !8542)
!8670 = !DILabel(scope: !8542, name: "out", file: !3, line: 1462)
!8671 = !DILocation(line: 1462, column: 1, scope: !8542)
!8672 = !DILocation(line: 1463, column: 9, scope: !8542)
!8673 = !DILocation(line: 1463, column: 2, scope: !8542)
!8674 = distinct !DISubprogram(name: "uart_set_termios", scope: !3, file: !3, line: 1478, type: !4006, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8675 = !DILocalVariable(name: "tty", arg: 1, scope: !8674, file: !3, line: 1478, type: !293)
!8676 = !DILocation(line: 1478, column: 49, scope: !8674)
!8677 = !DILocalVariable(name: "old_termios", arg: 2, scope: !8674, file: !3, line: 1479, type: !3950)
!8678 = !DILocation(line: 1479, column: 24, scope: !8674)
!8679 = !DILocalVariable(name: "state", scope: !8674, file: !3, line: 1481, type: !195)
!8680 = !DILocation(line: 1481, column: 21, scope: !8674)
!8681 = !DILocation(line: 1481, column: 29, scope: !8674)
!8682 = !DILocation(line: 1481, column: 34, scope: !8674)
!8683 = !DILocalVariable(name: "uport", scope: !8674, file: !3, line: 1482, type: !4276)
!8684 = !DILocation(line: 1482, column: 20, scope: !8674)
!8685 = !DILocalVariable(name: "cflag", scope: !8674, file: !3, line: 1483, type: !7)
!8686 = !DILocation(line: 1483, column: 15, scope: !8674)
!8687 = !DILocation(line: 1483, column: 23, scope: !8674)
!8688 = !DILocation(line: 1483, column: 28, scope: !8674)
!8689 = !DILocation(line: 1483, column: 36, scope: !8674)
!8690 = !DILocalVariable(name: "iflag_mask", scope: !8674, file: !3, line: 1484, type: !7)
!8691 = !DILocation(line: 1484, column: 15, scope: !8674)
!8692 = !DILocalVariable(name: "sw_changed", scope: !8674, file: !3, line: 1485, type: !560)
!8693 = !DILocation(line: 1485, column: 7, scope: !8674)
!8694 = !DILocation(line: 1487, column: 14, scope: !8674)
!8695 = !DILocation(line: 1487, column: 21, scope: !8674)
!8696 = !DILocation(line: 1487, column: 26, scope: !8674)
!8697 = !DILocation(line: 1487, column: 2, scope: !8674)
!8698 = !DILocation(line: 1488, column: 26, scope: !8674)
!8699 = !DILocation(line: 1488, column: 10, scope: !8674)
!8700 = !DILocation(line: 1488, column: 8, scope: !8674)
!8701 = !DILocation(line: 1489, column: 7, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1489, column: 6)
!8703 = !DILocation(line: 1489, column: 6, scope: !8674)
!8704 = !DILocation(line: 1490, column: 3, scope: !8702)
!8705 = !DILocation(line: 1496, column: 6, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1496, column: 6)
!8707 = !DILocation(line: 1496, column: 13, scope: !8706)
!8708 = !DILocation(line: 1496, column: 19, scope: !8706)
!8709 = !DILocation(line: 1496, column: 6, scope: !8674)
!8710 = !DILocation(line: 1497, column: 14, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1496, column: 36)
!8712 = !DILocation(line: 1499, column: 6, scope: !8711)
!8713 = !DILocation(line: 1499, column: 11, scope: !8711)
!8714 = !DILocation(line: 1499, column: 19, scope: !8711)
!8715 = !DILocation(line: 1499, column: 35, scope: !8711)
!8716 = !DILocation(line: 1499, column: 48, scope: !8711)
!8717 = !DILocation(line: 1499, column: 32, scope: !8711)
!8718 = !DILocation(line: 1499, column: 61, scope: !8711)
!8719 = !DILocation(line: 1500, column: 6, scope: !8711)
!8720 = !DILocation(line: 1500, column: 11, scope: !8711)
!8721 = !DILocation(line: 1500, column: 19, scope: !8711)
!8722 = !DILocation(line: 1500, column: 34, scope: !8711)
!8723 = !DILocation(line: 1500, column: 47, scope: !8711)
!8724 = !DILocation(line: 1500, column: 31, scope: !8711)
!8725 = !DILocation(line: 1498, column: 14, scope: !8711)
!8726 = !DILocation(line: 1501, column: 2, scope: !8711)
!8727 = !DILocation(line: 1509, column: 7, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1509, column: 6)
!8729 = !DILocation(line: 1509, column: 15, scope: !8728)
!8730 = !DILocation(line: 1509, column: 28, scope: !8728)
!8731 = !DILocation(line: 1509, column: 13, scope: !8728)
!8732 = !DILocation(line: 1509, column: 37, scope: !8728)
!8733 = !DILocation(line: 1509, column: 42, scope: !8728)
!8734 = !DILocation(line: 1510, column: 6, scope: !8728)
!8735 = !DILocation(line: 1510, column: 11, scope: !8728)
!8736 = !DILocation(line: 1510, column: 19, scope: !8728)
!8737 = !DILocation(line: 1510, column: 31, scope: !8728)
!8738 = !DILocation(line: 1510, column: 44, scope: !8728)
!8739 = !DILocation(line: 1510, column: 28, scope: !8728)
!8740 = !DILocation(line: 1510, column: 53, scope: !8728)
!8741 = !DILocation(line: 1511, column: 6, scope: !8728)
!8742 = !DILocation(line: 1511, column: 11, scope: !8728)
!8743 = !DILocation(line: 1511, column: 19, scope: !8728)
!8744 = !DILocation(line: 1511, column: 31, scope: !8728)
!8745 = !DILocation(line: 1511, column: 44, scope: !8728)
!8746 = !DILocation(line: 1511, column: 28, scope: !8728)
!8747 = !DILocation(line: 1511, column: 53, scope: !8728)
!8748 = !DILocation(line: 1512, column: 8, scope: !8728)
!8749 = !DILocation(line: 1512, column: 13, scope: !8728)
!8750 = !DILocation(line: 1512, column: 21, scope: !8728)
!8751 = !DILocation(line: 1512, column: 31, scope: !8728)
!8752 = !DILocation(line: 1512, column: 44, scope: !8728)
!8753 = !DILocation(line: 1512, column: 29, scope: !8728)
!8754 = !DILocation(line: 1512, column: 55, scope: !8728)
!8755 = !DILocation(line: 1512, column: 53, scope: !8728)
!8756 = !DILocation(line: 1512, column: 67, scope: !8728)
!8757 = !DILocation(line: 1512, column: 72, scope: !8728)
!8758 = !DILocation(line: 1513, column: 7, scope: !8728)
!8759 = !DILocation(line: 1509, column: 6, scope: !8674)
!8760 = !DILocation(line: 1514, column: 3, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 1513, column: 19)
!8762 = !DILocation(line: 1517, column: 20, scope: !8674)
!8763 = !DILocation(line: 1517, column: 25, scope: !8674)
!8764 = !DILocation(line: 1517, column: 32, scope: !8674)
!8765 = !DILocation(line: 1517, column: 2, scope: !8674)
!8766 = !DILocation(line: 1519, column: 10, scope: !8674)
!8767 = !DILocation(line: 1519, column: 15, scope: !8674)
!8768 = !DILocation(line: 1519, column: 23, scope: !8674)
!8769 = !DILocation(line: 1519, column: 8, scope: !8674)
!8770 = !DILocation(line: 1522, column: 7, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8674, file: !3, line: 1522, column: 6)
!8772 = !DILocation(line: 1522, column: 20, scope: !8771)
!8773 = !DILocation(line: 1522, column: 28, scope: !8771)
!8774 = !DILocation(line: 1522, column: 37, scope: !8771)
!8775 = !DILocation(line: 1522, column: 42, scope: !8771)
!8776 = !DILocation(line: 1522, column: 48, scope: !8771)
!8777 = !DILocation(line: 1522, column: 6, scope: !8674)
!8778 = !DILocation(line: 1523, column: 3, scope: !8771)
!8779 = !DILocation(line: 1525, column: 13, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1525, column: 11)
!8781 = !DILocation(line: 1525, column: 26, scope: !8780)
!8782 = !DILocation(line: 1525, column: 34, scope: !8780)
!8783 = !DILocation(line: 1525, column: 43, scope: !8780)
!8784 = !DILocation(line: 1525, column: 47, scope: !8780)
!8785 = !DILocation(line: 1525, column: 53, scope: !8780)
!8786 = !DILocation(line: 1525, column: 11, scope: !8771)
!8787 = !DILocalVariable(name: "mask", scope: !8788, file: !3, line: 1526, type: !7)
!8788 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 1525, column: 63)
!8789 = !DILocation(line: 1526, column: 16, scope: !8788)
!8790 = !DILocation(line: 1528, column: 9, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 1528, column: 7)
!8792 = !DILocation(line: 1528, column: 15, scope: !8791)
!8793 = !DILocation(line: 1528, column: 26, scope: !8791)
!8794 = !DILocation(line: 1528, column: 44, scope: !8791)
!8795 = !DILocation(line: 1528, column: 30, scope: !8791)
!8796 = !DILocation(line: 1528, column: 7, scope: !8788)
!8797 = !DILocation(line: 1529, column: 9, scope: !8791)
!8798 = !DILocation(line: 1529, column: 4, scope: !8791)
!8799 = !DILocation(line: 1530, column: 3, scope: !8788)
!8800 = !DILocation(line: 1531, column: 2, scope: !8788)
!8801 = !DILocation(line: 1522, column: 55, scope: !8771)
!8802 = !DILabel(scope: !8674, name: "out", file: !3, line: 1532)
!8803 = !DILocation(line: 1532, column: 1, scope: !8674)
!8804 = !DILocation(line: 1533, column: 16, scope: !8674)
!8805 = !DILocation(line: 1533, column: 23, scope: !8674)
!8806 = !DILocation(line: 1533, column: 28, scope: !8674)
!8807 = !DILocation(line: 1533, column: 2, scope: !8674)
!8808 = !DILocation(line: 1534, column: 1, scope: !8674)
!8809 = distinct !DISubprogram(name: "uart_throttle", scope: !3, file: !3, line: 698, type: !3979, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8810 = !DILocalVariable(name: "tty", arg: 1, scope: !8809, file: !3, line: 698, type: !293)
!8811 = !DILocation(line: 698, column: 46, scope: !8809)
!8812 = !DILocalVariable(name: "state", scope: !8809, file: !3, line: 700, type: !195)
!8813 = !DILocation(line: 700, column: 21, scope: !8809)
!8814 = !DILocation(line: 700, column: 29, scope: !8809)
!8815 = !DILocation(line: 700, column: 34, scope: !8809)
!8816 = !DILocalVariable(name: "mask", scope: !8809, file: !3, line: 701, type: !194)
!8817 = !DILocation(line: 701, column: 11, scope: !8809)
!8818 = !DILocalVariable(name: "port", scope: !8809, file: !3, line: 702, type: !4276)
!8819 = !DILocation(line: 702, column: 20, scope: !8809)
!8820 = !DILocation(line: 704, column: 23, scope: !8809)
!8821 = !DILocation(line: 704, column: 9, scope: !8809)
!8822 = !DILocation(line: 704, column: 7, scope: !8809)
!8823 = !DILocation(line: 705, column: 7, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 705, column: 6)
!8825 = !DILocation(line: 705, column: 6, scope: !8809)
!8826 = !DILocation(line: 706, column: 3, scope: !8824)
!8827 = !DILocation(line: 708, column: 6, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 708, column: 6)
!8829 = !DILocation(line: 708, column: 6, scope: !8809)
!8830 = !DILocation(line: 709, column: 8, scope: !8828)
!8831 = !DILocation(line: 709, column: 3, scope: !8828)
!8832 = !DILocation(line: 710, column: 6, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 710, column: 6)
!8834 = !DILocation(line: 710, column: 6, scope: !8809)
!8835 = !DILocation(line: 711, column: 8, scope: !8833)
!8836 = !DILocation(line: 711, column: 3, scope: !8833)
!8837 = !DILocation(line: 713, column: 6, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 713, column: 6)
!8839 = !DILocation(line: 713, column: 12, scope: !8838)
!8840 = !DILocation(line: 713, column: 21, scope: !8838)
!8841 = !DILocation(line: 713, column: 19, scope: !8838)
!8842 = !DILocation(line: 713, column: 6, scope: !8809)
!8843 = !DILocation(line: 714, column: 3, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 713, column: 27)
!8845 = !DILocation(line: 714, column: 9, scope: !8844)
!8846 = !DILocation(line: 714, column: 14, scope: !8844)
!8847 = !DILocation(line: 714, column: 23, scope: !8844)
!8848 = !DILocation(line: 715, column: 12, scope: !8844)
!8849 = !DILocation(line: 715, column: 18, scope: !8844)
!8850 = !DILocation(line: 715, column: 11, scope: !8844)
!8851 = !DILocation(line: 715, column: 8, scope: !8844)
!8852 = !DILocation(line: 716, column: 2, scope: !8844)
!8853 = !DILocation(line: 718, column: 6, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 718, column: 6)
!8855 = !DILocation(line: 718, column: 11, scope: !8854)
!8856 = !DILocation(line: 718, column: 6, scope: !8809)
!8857 = !DILocation(line: 719, column: 3, scope: !8854)
!8858 = !DILocation(line: 721, column: 6, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 721, column: 6)
!8860 = !DILocation(line: 721, column: 11, scope: !8859)
!8861 = !DILocation(line: 721, column: 6, scope: !8809)
!8862 = !DILocation(line: 722, column: 19, scope: !8859)
!8863 = !DILocation(line: 722, column: 24, scope: !8859)
!8864 = !DILocation(line: 722, column: 3, scope: !8859)
!8865 = !DILocation(line: 724, column: 18, scope: !8809)
!8866 = !DILocation(line: 724, column: 2, scope: !8809)
!8867 = !DILocation(line: 725, column: 1, scope: !8809)
!8868 = distinct !DISubprogram(name: "uart_unthrottle", scope: !3, file: !3, line: 727, type: !3979, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8869 = !DILocalVariable(name: "tty", arg: 1, scope: !8868, file: !3, line: 727, type: !293)
!8870 = !DILocation(line: 727, column: 48, scope: !8868)
!8871 = !DILocalVariable(name: "state", scope: !8868, file: !3, line: 729, type: !195)
!8872 = !DILocation(line: 729, column: 21, scope: !8868)
!8873 = !DILocation(line: 729, column: 29, scope: !8868)
!8874 = !DILocation(line: 729, column: 34, scope: !8868)
!8875 = !DILocalVariable(name: "mask", scope: !8868, file: !3, line: 730, type: !194)
!8876 = !DILocation(line: 730, column: 11, scope: !8868)
!8877 = !DILocalVariable(name: "port", scope: !8868, file: !3, line: 731, type: !4276)
!8878 = !DILocation(line: 731, column: 20, scope: !8868)
!8879 = !DILocation(line: 733, column: 23, scope: !8868)
!8880 = !DILocation(line: 733, column: 9, scope: !8868)
!8881 = !DILocation(line: 733, column: 7, scope: !8868)
!8882 = !DILocation(line: 734, column: 7, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 734, column: 6)
!8884 = !DILocation(line: 734, column: 6, scope: !8868)
!8885 = !DILocation(line: 735, column: 3, scope: !8883)
!8886 = !DILocation(line: 737, column: 6, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 737, column: 6)
!8888 = !DILocation(line: 737, column: 6, scope: !8868)
!8889 = !DILocation(line: 738, column: 8, scope: !8887)
!8890 = !DILocation(line: 738, column: 3, scope: !8887)
!8891 = !DILocation(line: 739, column: 6, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 739, column: 6)
!8893 = !DILocation(line: 739, column: 6, scope: !8868)
!8894 = !DILocation(line: 740, column: 8, scope: !8892)
!8895 = !DILocation(line: 740, column: 3, scope: !8892)
!8896 = !DILocation(line: 742, column: 6, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 742, column: 6)
!8898 = !DILocation(line: 742, column: 12, scope: !8897)
!8899 = !DILocation(line: 742, column: 21, scope: !8897)
!8900 = !DILocation(line: 742, column: 19, scope: !8897)
!8901 = !DILocation(line: 742, column: 6, scope: !8868)
!8902 = !DILocation(line: 743, column: 3, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 742, column: 27)
!8904 = !DILocation(line: 743, column: 9, scope: !8903)
!8905 = !DILocation(line: 743, column: 14, scope: !8903)
!8906 = !DILocation(line: 743, column: 25, scope: !8903)
!8907 = !DILocation(line: 744, column: 12, scope: !8903)
!8908 = !DILocation(line: 744, column: 18, scope: !8903)
!8909 = !DILocation(line: 744, column: 11, scope: !8903)
!8910 = !DILocation(line: 744, column: 8, scope: !8903)
!8911 = !DILocation(line: 745, column: 2, scope: !8903)
!8912 = !DILocation(line: 747, column: 6, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 747, column: 6)
!8914 = !DILocation(line: 747, column: 11, scope: !8913)
!8915 = !DILocation(line: 747, column: 6, scope: !8868)
!8916 = !DILocation(line: 748, column: 3, scope: !8913)
!8917 = !DILocation(line: 750, column: 6, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 750, column: 6)
!8919 = !DILocation(line: 750, column: 11, scope: !8918)
!8920 = !DILocation(line: 750, column: 6, scope: !8868)
!8921 = !DILocation(line: 751, column: 19, scope: !8918)
!8922 = !DILocation(line: 751, column: 24, scope: !8918)
!8923 = !DILocation(line: 751, column: 3, scope: !8918)
!8924 = !DILocation(line: 753, column: 18, scope: !8868)
!8925 = !DILocation(line: 753, column: 2, scope: !8868)
!8926 = !DILocation(line: 754, column: 1, scope: !8868)
!8927 = distinct !DISubprogram(name: "uart_stop", scope: !3, file: !3, line: 109, type: !3979, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8928 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8929)
!8929 = distinct !DILocation(line: 118, column: 2, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 118, column: 2)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 118, column: 2)
!8932 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 118, column: 2)
!8933 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8929)
!8934 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !8935)
!8935 = distinct !DILocation(line: 115, column: 9, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 115, column: 9)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 115, column: 9)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 115, column: 9)
!8939 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 115, column: 9)
!8940 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 115, column: 9)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 115, column: 9)
!8942 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 115, column: 9)
!8943 = !DILocalVariable(name: "tty", arg: 1, scope: !8927, file: !3, line: 109, type: !293)
!8944 = !DILocation(line: 109, column: 42, scope: !8927)
!8945 = !DILocalVariable(name: "state", scope: !8927, file: !3, line: 111, type: !195)
!8946 = !DILocation(line: 111, column: 21, scope: !8927)
!8947 = !DILocation(line: 111, column: 29, scope: !8927)
!8948 = !DILocation(line: 111, column: 34, scope: !8927)
!8949 = !DILocalVariable(name: "port", scope: !8927, file: !3, line: 112, type: !4276)
!8950 = !DILocation(line: 112, column: 20, scope: !8927)
!8951 = !DILocalVariable(name: "flags", scope: !8927, file: !3, line: 113, type: !187)
!8952 = !DILocation(line: 113, column: 16, scope: !8927)
!8953 = !DILocalVariable(name: "__uport", scope: !8942, file: !3, line: 115, type: !4276)
!8954 = !DILocation(line: 115, column: 9, scope: !8942)
!8955 = !DILocation(line: 115, column: 9, scope: !8941)
!8956 = !DILocation(line: 115, column: 9, scope: !8940)
!8957 = !DILocalVariable(name: "__dummy", scope: !8958, file: !3, line: 115, type: !187)
!8958 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 115, column: 9)
!8959 = !DILocation(line: 115, column: 9, scope: !8958)
!8960 = !DILocalVariable(name: "__dummy2", scope: !8958, file: !3, line: 115, type: !187)
!8961 = !DILocation(line: 115, column: 9, scope: !8939)
!8962 = !DILocation(line: 115, column: 9, scope: !8938)
!8963 = !DILocation(line: 115, column: 9, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 115, column: 9)
!8965 = !DILocalVariable(name: "__dummy", scope: !8966, file: !3, line: 115, type: !187)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 115, column: 9)
!8967 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 115, column: 9)
!8968 = !DILocation(line: 115, column: 9, scope: !8966)
!8969 = !DILocalVariable(name: "__dummy2", scope: !8966, file: !3, line: 115, type: !187)
!8970 = !DILocation(line: 115, column: 9, scope: !8967)
!8971 = !DILocation(line: 115, column: 9, scope: !8937)
!8972 = !{i32 -2141562706}
!8973 = !DILocation(line: 115, column: 9, scope: !8936)
!8974 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !8935)
!8975 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !8935)
!8976 = !DILocation(line: 115, column: 7, scope: !8927)
!8977 = !DILocation(line: 116, column: 6, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 116, column: 6)
!8979 = !DILocation(line: 116, column: 6, scope: !8927)
!8980 = !DILocation(line: 117, column: 3, scope: !8978)
!8981 = !DILocation(line: 117, column: 9, scope: !8978)
!8982 = !DILocation(line: 117, column: 14, scope: !8978)
!8983 = !DILocation(line: 117, column: 22, scope: !8978)
!8984 = !DILocalVariable(name: "__uport", scope: !8932, file: !3, line: 118, type: !4276)
!8985 = !DILocation(line: 118, column: 2, scope: !8932)
!8986 = !DILocation(line: 118, column: 2, scope: !8931)
!8987 = !DILocation(line: 118, column: 2, scope: !8930)
!8988 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8929)
!8989 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8929)
!8990 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8929)
!8991 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8929)
!8992 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8929)
!8993 = !DILocation(line: 119, column: 1, scope: !8927)
!8994 = distinct !DISubprogram(name: "uart_start", scope: !3, file: !3, line: 130, type: !3979, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!8995 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !8996)
!8996 = distinct !DILocation(line: 138, column: 2, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 138, column: 2)
!8998 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 138, column: 2)
!8999 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 138, column: 2)
!9000 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !8996)
!9001 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !9002)
!9002 = distinct !DILocation(line: 136, column: 9, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 136, column: 9)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 136, column: 9)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 136, column: 9)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !3, line: 136, column: 9)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 136, column: 9)
!9008 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 136, column: 9)
!9009 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 136, column: 9)
!9010 = !DILocalVariable(name: "tty", arg: 1, scope: !8994, file: !3, line: 130, type: !293)
!9011 = !DILocation(line: 130, column: 43, scope: !8994)
!9012 = !DILocalVariable(name: "state", scope: !8994, file: !3, line: 132, type: !195)
!9013 = !DILocation(line: 132, column: 21, scope: !8994)
!9014 = !DILocation(line: 132, column: 29, scope: !8994)
!9015 = !DILocation(line: 132, column: 34, scope: !8994)
!9016 = !DILocalVariable(name: "port", scope: !8994, file: !3, line: 133, type: !4276)
!9017 = !DILocation(line: 133, column: 20, scope: !8994)
!9018 = !DILocalVariable(name: "flags", scope: !8994, file: !3, line: 134, type: !187)
!9019 = !DILocation(line: 134, column: 16, scope: !8994)
!9020 = !DILocalVariable(name: "__uport", scope: !9009, file: !3, line: 136, type: !4276)
!9021 = !DILocation(line: 136, column: 9, scope: !9009)
!9022 = !DILocation(line: 136, column: 9, scope: !9008)
!9023 = !DILocation(line: 136, column: 9, scope: !9007)
!9024 = !DILocalVariable(name: "__dummy", scope: !9025, file: !3, line: 136, type: !187)
!9025 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 136, column: 9)
!9026 = !DILocation(line: 136, column: 9, scope: !9025)
!9027 = !DILocalVariable(name: "__dummy2", scope: !9025, file: !3, line: 136, type: !187)
!9028 = !DILocation(line: 136, column: 9, scope: !9006)
!9029 = !DILocation(line: 136, column: 9, scope: !9005)
!9030 = !DILocation(line: 136, column: 9, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 136, column: 9)
!9032 = !DILocalVariable(name: "__dummy", scope: !9033, file: !3, line: 136, type: !187)
!9033 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 136, column: 9)
!9034 = distinct !DILexicalBlock(scope: !9031, file: !3, line: 136, column: 9)
!9035 = !DILocation(line: 136, column: 9, scope: !9033)
!9036 = !DILocalVariable(name: "__dummy2", scope: !9033, file: !3, line: 136, type: !187)
!9037 = !DILocation(line: 136, column: 9, scope: !9034)
!9038 = !DILocation(line: 136, column: 9, scope: !9004)
!9039 = !{i32 -2141561308}
!9040 = !DILocation(line: 136, column: 9, scope: !9003)
!9041 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !9002)
!9042 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !9002)
!9043 = !DILocation(line: 136, column: 7, scope: !8994)
!9044 = !DILocation(line: 137, column: 15, scope: !8994)
!9045 = !DILocation(line: 137, column: 2, scope: !8994)
!9046 = !DILocalVariable(name: "__uport", scope: !8999, file: !3, line: 138, type: !4276)
!9047 = !DILocation(line: 138, column: 2, scope: !8999)
!9048 = !DILocation(line: 138, column: 2, scope: !8998)
!9049 = !DILocation(line: 138, column: 2, scope: !8997)
!9050 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !8996)
!9051 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !8996)
!9052 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !8996)
!9053 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !8996)
!9054 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !8996)
!9055 = !DILocation(line: 139, column: 1, scope: !8994)
!9056 = distinct !DISubprogram(name: "uart_hangup", scope: !3, file: !3, line: 1658, type: !3979, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9057 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !9058)
!9058 = distinct !DILocation(line: 1676, column: 3, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 1671, column: 29)
!9060 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1671, column: 6)
!9061 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !9058)
!9062 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !9063)
!9063 = distinct !DILocation(line: 1674, column: 3, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 1674, column: 3)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 1674, column: 3)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1674, column: 3)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1674, column: 3)
!9068 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 1674, column: 3)
!9069 = !DILocalVariable(name: "tty", arg: 1, scope: !9056, file: !3, line: 1658, type: !293)
!9070 = !DILocation(line: 1658, column: 44, scope: !9056)
!9071 = !DILocalVariable(name: "state", scope: !9056, file: !3, line: 1660, type: !195)
!9072 = !DILocation(line: 1660, column: 21, scope: !9056)
!9073 = !DILocation(line: 1660, column: 29, scope: !9056)
!9074 = !DILocation(line: 1660, column: 34, scope: !9056)
!9075 = !DILocalVariable(name: "port", scope: !9056, file: !3, line: 1661, type: !3947)
!9076 = !DILocation(line: 1661, column: 19, scope: !9056)
!9077 = !DILocation(line: 1661, column: 27, scope: !9056)
!9078 = !DILocation(line: 1661, column: 34, scope: !9056)
!9079 = !DILocalVariable(name: "uport", scope: !9056, file: !3, line: 1662, type: !4276)
!9080 = !DILocation(line: 1662, column: 20, scope: !9056)
!9081 = !DILocalVariable(name: "flags", scope: !9056, file: !3, line: 1663, type: !187)
!9082 = !DILocation(line: 1663, column: 16, scope: !9056)
!9083 = !DILocation(line: 1665, column: 2, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 1665, column: 2)
!9085 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1665, column: 2)
!9086 = !DILocation(line: 1665, column: 2, scope: !9085)
!9087 = !DILocation(line: 1667, column: 14, scope: !9056)
!9088 = !DILocation(line: 1667, column: 20, scope: !9056)
!9089 = !DILocation(line: 1667, column: 2, scope: !9056)
!9090 = !DILocation(line: 1668, column: 26, scope: !9056)
!9091 = !DILocation(line: 1668, column: 10, scope: !9056)
!9092 = !DILocation(line: 1668, column: 8, scope: !9056)
!9093 = !DILocalVariable(name: "__ret_warn_on", scope: !9094, file: !3, line: 1669, type: !220)
!9094 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 1669, column: 2)
!9095 = !DILocation(line: 1669, column: 2, scope: !9094)
!9096 = !DILocation(line: 1669, column: 2, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1669, column: 2)
!9098 = !DILocation(line: 1669, column: 2, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1669, column: 2)
!9100 = !DILocation(line: 1669, column: 2, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1669, column: 2)
!9102 = !DILocation(line: 1669, column: 2, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1669, column: 2)
!9104 = !DILocation(line: 1669, column: 2, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1669, column: 2)
!9106 = !DILocation(line: 1669, column: 2, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1669, column: 2)
!9108 = !{i32 -2141520442, i32 -2141520413, i32 -2141520367, i32 -2141520309, i32 -2141520255, i32 -2141520201, i32 -2141520146, i32 -2141520115}
!9109 = !DILocation(line: 1669, column: 2, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1669, column: 2)
!9111 = !{i32 -2141519689, i32 -2141519682, i32 -2141519630, i32 -2141519599, i32 -2141519569}
!9112 = !DILocation(line: 1669, column: 2, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 1669, column: 2)
!9114 = !DILocation(line: 1669, column: 2, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 1669, column: 2)
!9116 = !DILocation(line: 1671, column: 22, scope: !9060)
!9117 = !DILocation(line: 1671, column: 6, scope: !9060)
!9118 = !DILocation(line: 1671, column: 6, scope: !9056)
!9119 = !DILocation(line: 1672, column: 21, scope: !9059)
!9120 = !DILocation(line: 1672, column: 3, scope: !9059)
!9121 = !DILocation(line: 1673, column: 17, scope: !9059)
!9122 = !DILocation(line: 1673, column: 22, scope: !9059)
!9123 = !DILocation(line: 1673, column: 3, scope: !9059)
!9124 = !DILocation(line: 1674, column: 3, scope: !9059)
!9125 = !DILocation(line: 1674, column: 3, scope: !9068)
!9126 = !DILocalVariable(name: "__dummy", scope: !9127, file: !3, line: 1674, type: !187)
!9127 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1674, column: 3)
!9128 = !DILocation(line: 1674, column: 3, scope: !9127)
!9129 = !DILocalVariable(name: "__dummy2", scope: !9127, file: !3, line: 1674, type: !187)
!9130 = !DILocation(line: 1674, column: 3, scope: !9067)
!9131 = !DILocation(line: 1674, column: 3, scope: !9066)
!9132 = !DILocation(line: 1674, column: 3, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 1674, column: 3)
!9134 = !DILocalVariable(name: "__dummy", scope: !9135, file: !3, line: 1674, type: !187)
!9135 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 1674, column: 3)
!9136 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 1674, column: 3)
!9137 = !DILocation(line: 1674, column: 3, scope: !9135)
!9138 = !DILocalVariable(name: "__dummy2", scope: !9135, file: !3, line: 1674, type: !187)
!9139 = !DILocation(line: 1674, column: 3, scope: !9136)
!9140 = !DILocation(line: 1674, column: 3, scope: !9065)
!9141 = !{i32 -2141518572}
!9142 = !DILocation(line: 1674, column: 3, scope: !9064)
!9143 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !9063)
!9144 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !9063)
!9145 = !DILocation(line: 1675, column: 3, scope: !9059)
!9146 = !DILocation(line: 1675, column: 9, scope: !9059)
!9147 = !DILocation(line: 1675, column: 15, scope: !9059)
!9148 = !DILocation(line: 1676, column: 27, scope: !9059)
!9149 = !DILocation(line: 1676, column: 33, scope: !9059)
!9150 = !DILocation(line: 1676, column: 39, scope: !9059)
!9151 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !9058)
!9152 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !9058)
!9153 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !9058)
!9154 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !9058)
!9155 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !9058)
!9156 = !DILocation(line: 1677, column: 23, scope: !9059)
!9157 = !DILocation(line: 1677, column: 3, scope: !9059)
!9158 = !DILocation(line: 1678, column: 20, scope: !9059)
!9159 = !DILocation(line: 1678, column: 3, scope: !9059)
!9160 = !DILocation(line: 1679, column: 7, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 1679, column: 7)
!9162 = !DILocation(line: 1679, column: 13, scope: !9161)
!9163 = !DILocation(line: 1679, column: 17, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1679, column: 17)
!9165 = !DILocation(line: 1679, column: 17, scope: !9161)
!9166 = !DILocation(line: 1679, column: 7, scope: !9059)
!9167 = !DILocation(line: 1680, column: 19, scope: !9161)
!9168 = !DILocation(line: 1680, column: 4, scope: !9161)
!9169 = !DILocation(line: 1681, column: 3, scope: !9059)
!9170 = !DILocation(line: 1682, column: 3, scope: !9059)
!9171 = !DILocation(line: 1683, column: 2, scope: !9059)
!9172 = !DILocation(line: 1684, column: 16, scope: !9056)
!9173 = !DILocation(line: 1684, column: 22, scope: !9056)
!9174 = !DILocation(line: 1684, column: 2, scope: !9056)
!9175 = !DILocation(line: 1685, column: 1, scope: !9056)
!9176 = distinct !DISubprogram(name: "uart_break_ctl", scope: !3, file: !3, line: 1104, type: !4015, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9177 = !DILocalVariable(name: "tty", arg: 1, scope: !9176, file: !3, line: 1104, type: !293)
!9178 = !DILocation(line: 1104, column: 46, scope: !9176)
!9179 = !DILocalVariable(name: "break_state", arg: 2, scope: !9176, file: !3, line: 1104, type: !220)
!9180 = !DILocation(line: 1104, column: 55, scope: !9176)
!9181 = !DILocalVariable(name: "state", scope: !9176, file: !3, line: 1106, type: !195)
!9182 = !DILocation(line: 1106, column: 21, scope: !9176)
!9183 = !DILocation(line: 1106, column: 29, scope: !9176)
!9184 = !DILocation(line: 1106, column: 34, scope: !9176)
!9185 = !DILocalVariable(name: "port", scope: !9176, file: !3, line: 1107, type: !3947)
!9186 = !DILocation(line: 1107, column: 19, scope: !9176)
!9187 = !DILocation(line: 1107, column: 27, scope: !9176)
!9188 = !DILocation(line: 1107, column: 34, scope: !9176)
!9189 = !DILocalVariable(name: "uport", scope: !9176, file: !3, line: 1108, type: !4276)
!9190 = !DILocation(line: 1108, column: 20, scope: !9176)
!9191 = !DILocalVariable(name: "ret", scope: !9176, file: !3, line: 1109, type: !220)
!9192 = !DILocation(line: 1109, column: 6, scope: !9176)
!9193 = !DILocation(line: 1111, column: 14, scope: !9176)
!9194 = !DILocation(line: 1111, column: 20, scope: !9176)
!9195 = !DILocation(line: 1111, column: 2, scope: !9176)
!9196 = !DILocation(line: 1112, column: 26, scope: !9176)
!9197 = !DILocation(line: 1112, column: 10, scope: !9176)
!9198 = !DILocation(line: 1112, column: 8, scope: !9176)
!9199 = !DILocation(line: 1113, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 1113, column: 6)
!9201 = !DILocation(line: 1113, column: 6, scope: !9176)
!9202 = !DILocation(line: 1114, column: 3, scope: !9200)
!9203 = !DILocation(line: 1116, column: 6, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 1116, column: 6)
!9205 = !DILocation(line: 1116, column: 13, scope: !9204)
!9206 = !DILocation(line: 1116, column: 18, scope: !9204)
!9207 = !DILocation(line: 1116, column: 34, scope: !9204)
!9208 = !DILocation(line: 1116, column: 37, scope: !9204)
!9209 = !DILocation(line: 1116, column: 44, scope: !9204)
!9210 = !DILocation(line: 1116, column: 49, scope: !9204)
!9211 = !DILocation(line: 1116, column: 6, scope: !9176)
!9212 = !DILocation(line: 1117, column: 3, scope: !9204)
!9213 = !DILocation(line: 1117, column: 10, scope: !9204)
!9214 = !DILocation(line: 1117, column: 15, scope: !9204)
!9215 = !DILocation(line: 1117, column: 25, scope: !9204)
!9216 = !DILocation(line: 1117, column: 32, scope: !9204)
!9217 = !DILocation(line: 1118, column: 6, scope: !9176)
!9218 = !DILocation(line: 1118, column: 2, scope: !9176)
!9219 = !DILabel(scope: !9176, name: "out", file: !3, line: 1119)
!9220 = !DILocation(line: 1119, column: 1, scope: !9176)
!9221 = !DILocation(line: 1120, column: 16, scope: !9176)
!9222 = !DILocation(line: 1120, column: 22, scope: !9176)
!9223 = !DILocation(line: 1120, column: 2, scope: !9176)
!9224 = !DILocation(line: 1121, column: 9, scope: !9176)
!9225 = !DILocation(line: 1121, column: 2, scope: !9176)
!9226 = distinct !DISubprogram(name: "uart_flush_buffer", scope: !3, file: !3, line: 645, type: !3979, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9227 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !9228)
!9228 = distinct !DILocation(line: 668, column: 2, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 668, column: 2)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 668, column: 2)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 668, column: 2)
!9232 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !9228)
!9233 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !9234)
!9234 = distinct !DILocation(line: 662, column: 9, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !3, line: 662, column: 9)
!9236 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 662, column: 9)
!9237 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 662, column: 9)
!9238 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 662, column: 9)
!9239 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 662, column: 9)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 662, column: 9)
!9241 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 662, column: 9)
!9242 = !DILocalVariable(name: "tty", arg: 1, scope: !9226, file: !3, line: 645, type: !293)
!9243 = !DILocation(line: 645, column: 50, scope: !9226)
!9244 = !DILocalVariable(name: "state", scope: !9226, file: !3, line: 647, type: !195)
!9245 = !DILocation(line: 647, column: 21, scope: !9226)
!9246 = !DILocation(line: 647, column: 29, scope: !9226)
!9247 = !DILocation(line: 647, column: 34, scope: !9226)
!9248 = !DILocalVariable(name: "port", scope: !9226, file: !3, line: 648, type: !4276)
!9249 = !DILocation(line: 648, column: 20, scope: !9226)
!9250 = !DILocalVariable(name: "flags", scope: !9226, file: !3, line: 649, type: !187)
!9251 = !DILocation(line: 649, column: 16, scope: !9226)
!9252 = !DILocation(line: 655, column: 7, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 655, column: 6)
!9254 = !DILocation(line: 655, column: 6, scope: !9226)
!9255 = !DILocalVariable(name: "__ret_warn_on", scope: !9256, file: !3, line: 656, type: !220)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 656, column: 3)
!9257 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 655, column: 14)
!9258 = !DILocation(line: 656, column: 3, scope: !9256)
!9259 = !DILocation(line: 656, column: 3, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 656, column: 3)
!9261 = !DILocation(line: 656, column: 3, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 656, column: 3)
!9263 = !DILocation(line: 656, column: 3, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 656, column: 3)
!9265 = !DILocation(line: 656, column: 3, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 656, column: 3)
!9267 = !{i32 -2141543855, i32 -2141543826, i32 -2141543780, i32 -2141543722, i32 -2141543668, i32 -2141543614, i32 -2141543559, i32 -2141543528}
!9268 = !DILocation(line: 656, column: 3, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 656, column: 3)
!9270 = !{i32 -2141543114, i32 -2141543107, i32 -2141543055, i32 -2141543024, i32 -2141542994}
!9271 = !DILocation(line: 656, column: 3, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 656, column: 3)
!9273 = !DILocation(line: 657, column: 3, scope: !9257)
!9274 = !DILocation(line: 660, column: 2, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 660, column: 2)
!9276 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 660, column: 2)
!9277 = !DILocation(line: 660, column: 2, scope: !9276)
!9278 = !DILocalVariable(name: "__uport", scope: !9241, file: !3, line: 662, type: !4276)
!9279 = !DILocation(line: 662, column: 9, scope: !9241)
!9280 = !DILocation(line: 662, column: 9, scope: !9240)
!9281 = !DILocation(line: 662, column: 9, scope: !9239)
!9282 = !DILocalVariable(name: "__dummy", scope: !9283, file: !3, line: 662, type: !187)
!9283 = distinct !DILexicalBlock(scope: !9238, file: !3, line: 662, column: 9)
!9284 = !DILocation(line: 662, column: 9, scope: !9283)
!9285 = !DILocalVariable(name: "__dummy2", scope: !9283, file: !3, line: 662, type: !187)
!9286 = !DILocation(line: 662, column: 9, scope: !9238)
!9287 = !DILocation(line: 662, column: 9, scope: !9237)
!9288 = !DILocation(line: 662, column: 9, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 662, column: 9)
!9290 = !DILocalVariable(name: "__dummy", scope: !9291, file: !3, line: 662, type: !187)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 662, column: 9)
!9292 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 662, column: 9)
!9293 = !DILocation(line: 662, column: 9, scope: !9291)
!9294 = !DILocalVariable(name: "__dummy2", scope: !9291, file: !3, line: 662, type: !187)
!9295 = !DILocation(line: 662, column: 9, scope: !9292)
!9296 = !DILocation(line: 662, column: 9, scope: !9236)
!9297 = !{i32 -2141541549}
!9298 = !DILocation(line: 662, column: 9, scope: !9235)
!9299 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !9234)
!9300 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !9234)
!9301 = !DILocation(line: 662, column: 7, scope: !9226)
!9302 = !DILocation(line: 663, column: 7, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 663, column: 6)
!9304 = !DILocation(line: 663, column: 6, scope: !9226)
!9305 = !DILocation(line: 664, column: 3, scope: !9303)
!9306 = !DILocation(line: 665, column: 2, scope: !9226)
!9307 = !DILocation(line: 666, column: 6, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 666, column: 6)
!9309 = !DILocation(line: 666, column: 12, scope: !9308)
!9310 = !DILocation(line: 666, column: 17, scope: !9308)
!9311 = !DILocation(line: 666, column: 6, scope: !9226)
!9312 = !DILocation(line: 667, column: 3, scope: !9308)
!9313 = !DILocation(line: 667, column: 9, scope: !9308)
!9314 = !DILocation(line: 667, column: 14, scope: !9308)
!9315 = !DILocation(line: 667, column: 27, scope: !9308)
!9316 = !DILocalVariable(name: "__uport", scope: !9231, file: !3, line: 668, type: !4276)
!9317 = !DILocation(line: 668, column: 2, scope: !9231)
!9318 = !DILocation(line: 668, column: 2, scope: !9230)
!9319 = !DILocation(line: 668, column: 2, scope: !9229)
!9320 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !9228)
!9321 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !9228)
!9322 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !9228)
!9323 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !9228)
!9324 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !9228)
!9325 = !DILocation(line: 669, column: 23, scope: !9226)
!9326 = !DILocation(line: 669, column: 30, scope: !9226)
!9327 = !DILocation(line: 669, column: 2, scope: !9226)
!9328 = !DILocation(line: 670, column: 1, scope: !9226)
!9329 = distinct !DISubprogram(name: "uart_set_ldisc", scope: !3, file: !3, line: 1466, type: !3979, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9330 = !DILocalVariable(name: "tty", arg: 1, scope: !9329, file: !3, line: 1466, type: !293)
!9331 = !DILocation(line: 1466, column: 47, scope: !9329)
!9332 = !DILocalVariable(name: "state", scope: !9329, file: !3, line: 1468, type: !195)
!9333 = !DILocation(line: 1468, column: 21, scope: !9329)
!9334 = !DILocation(line: 1468, column: 29, scope: !9329)
!9335 = !DILocation(line: 1468, column: 34, scope: !9329)
!9336 = !DILocalVariable(name: "uport", scope: !9329, file: !3, line: 1469, type: !4276)
!9337 = !DILocation(line: 1469, column: 20, scope: !9329)
!9338 = !DILocation(line: 1471, column: 14, scope: !9329)
!9339 = !DILocation(line: 1471, column: 21, scope: !9329)
!9340 = !DILocation(line: 1471, column: 26, scope: !9329)
!9341 = !DILocation(line: 1471, column: 2, scope: !9329)
!9342 = !DILocation(line: 1472, column: 26, scope: !9329)
!9343 = !DILocation(line: 1472, column: 10, scope: !9329)
!9344 = !DILocation(line: 1472, column: 8, scope: !9329)
!9345 = !DILocation(line: 1473, column: 6, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 1473, column: 6)
!9347 = !DILocation(line: 1473, column: 12, scope: !9346)
!9348 = !DILocation(line: 1473, column: 15, scope: !9346)
!9349 = !DILocation(line: 1473, column: 22, scope: !9346)
!9350 = !DILocation(line: 1473, column: 27, scope: !9346)
!9351 = !DILocation(line: 1473, column: 6, scope: !9329)
!9352 = !DILocation(line: 1474, column: 3, scope: !9346)
!9353 = !DILocation(line: 1474, column: 10, scope: !9346)
!9354 = !DILocation(line: 1474, column: 15, scope: !9346)
!9355 = !DILocation(line: 1474, column: 25, scope: !9346)
!9356 = !DILocation(line: 1474, column: 33, scope: !9346)
!9357 = !DILocation(line: 1474, column: 38, scope: !9346)
!9358 = !DILocation(line: 1475, column: 16, scope: !9329)
!9359 = !DILocation(line: 1475, column: 23, scope: !9329)
!9360 = !DILocation(line: 1475, column: 28, scope: !9329)
!9361 = !DILocation(line: 1475, column: 2, scope: !9329)
!9362 = !DILocation(line: 1476, column: 1, scope: !9329)
!9363 = distinct !DISubprogram(name: "uart_wait_until_sent", scope: !3, file: !3, line: 1591, type: !4021, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9364 = !DILocalVariable(name: "pscr_ret__", scope: !9365, file: !9366, line: 15, type: !1307)
!9365 = distinct !DILexicalBlock(scope: !9367, file: !9366, line: 15, column: 9)
!9366 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!9367 = distinct !DISubprogram(name: "get_current", scope: !9366, file: !9366, line: 13, type: !9368, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!1307}
!9370 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 1645, column: 22, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 1645, column: 7)
!9373 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1643, column: 37)
!9374 = !DILocalVariable(name: "__vpp_verify", scope: !9375, file: !9366, line: 15, type: !2201)
!9375 = distinct !DILexicalBlock(scope: !9365, file: !9366, line: 15, column: 9)
!9376 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !9371)
!9377 = !DILocalVariable(name: "pfo_val__", scope: !9378, file: !9366, line: 15, type: !491)
!9378 = distinct !DILexicalBlock(scope: !9365, file: !9366, line: 15, column: 9)
!9379 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !9371)
!9380 = !DILocalVariable(name: "tty", arg: 1, scope: !9363, file: !3, line: 1591, type: !293)
!9381 = !DILocation(line: 1591, column: 53, scope: !9363)
!9382 = !DILocalVariable(name: "timeout", arg: 2, scope: !9363, file: !3, line: 1591, type: !220)
!9383 = !DILocation(line: 1591, column: 62, scope: !9363)
!9384 = !DILocalVariable(name: "state", scope: !9363, file: !3, line: 1593, type: !195)
!9385 = !DILocation(line: 1593, column: 21, scope: !9363)
!9386 = !DILocation(line: 1593, column: 29, scope: !9363)
!9387 = !DILocation(line: 1593, column: 34, scope: !9363)
!9388 = !DILocalVariable(name: "port", scope: !9363, file: !3, line: 1594, type: !4276)
!9389 = !DILocation(line: 1594, column: 20, scope: !9363)
!9390 = !DILocalVariable(name: "char_time", scope: !9363, file: !3, line: 1595, type: !187)
!9391 = !DILocation(line: 1595, column: 16, scope: !9363)
!9392 = !DILocalVariable(name: "expire", scope: !9363, file: !3, line: 1595, type: !187)
!9393 = !DILocation(line: 1595, column: 27, scope: !9363)
!9394 = !DILocation(line: 1597, column: 23, scope: !9363)
!9395 = !DILocation(line: 1597, column: 9, scope: !9363)
!9396 = !DILocation(line: 1597, column: 7, scope: !9363)
!9397 = !DILocation(line: 1598, column: 7, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1598, column: 6)
!9399 = !DILocation(line: 1598, column: 6, scope: !9363)
!9400 = !DILocation(line: 1599, column: 3, scope: !9398)
!9401 = !DILocation(line: 1601, column: 6, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1601, column: 6)
!9403 = !DILocation(line: 1601, column: 12, scope: !9402)
!9404 = !DILocation(line: 1601, column: 17, scope: !9402)
!9405 = !DILocation(line: 1601, column: 33, scope: !9402)
!9406 = !DILocation(line: 1601, column: 36, scope: !9402)
!9407 = !DILocation(line: 1601, column: 42, scope: !9402)
!9408 = !DILocation(line: 1601, column: 51, scope: !9402)
!9409 = !DILocation(line: 1601, column: 6, scope: !9363)
!9410 = !DILocation(line: 1602, column: 19, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 1601, column: 57)
!9412 = !DILocation(line: 1602, column: 3, scope: !9411)
!9413 = !DILocation(line: 1603, column: 3, scope: !9411)
!9414 = !DILocation(line: 1614, column: 15, scope: !9363)
!9415 = !DILocation(line: 1614, column: 21, scope: !9363)
!9416 = !DILocation(line: 1614, column: 29, scope: !9363)
!9417 = !DILocation(line: 1614, column: 40, scope: !9363)
!9418 = !DILocation(line: 1614, column: 46, scope: !9363)
!9419 = !DILocation(line: 1614, column: 38, scope: !9363)
!9420 = !DILocation(line: 1614, column: 14, scope: !9363)
!9421 = !DILocation(line: 1614, column: 12, scope: !9363)
!9422 = !DILocation(line: 1615, column: 14, scope: !9363)
!9423 = !DILocation(line: 1615, column: 24, scope: !9363)
!9424 = !DILocation(line: 1615, column: 12, scope: !9363)
!9425 = !DILocation(line: 1616, column: 6, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1616, column: 6)
!9427 = !DILocation(line: 1616, column: 16, scope: !9426)
!9428 = !DILocation(line: 1616, column: 6, scope: !9363)
!9429 = !DILocation(line: 1617, column: 13, scope: !9426)
!9430 = !DILocation(line: 1617, column: 3, scope: !9426)
!9431 = !DILocation(line: 1618, column: 6, scope: !9432)
!9432 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1618, column: 6)
!9433 = !DILocation(line: 1618, column: 14, scope: !9432)
!9434 = !DILocation(line: 1618, column: 17, scope: !9432)
!9435 = !DILocation(line: 1618, column: 27, scope: !9432)
!9436 = !DILocation(line: 1618, column: 25, scope: !9432)
!9437 = !DILocation(line: 1618, column: 6, scope: !9363)
!9438 = !DILocation(line: 1619, column: 15, scope: !9432)
!9439 = !DILocation(line: 1619, column: 13, scope: !9432)
!9440 = !DILocation(line: 1619, column: 3, scope: !9432)
!9441 = !DILocation(line: 1630, column: 6, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1630, column: 6)
!9443 = !DILocation(line: 1630, column: 14, scope: !9442)
!9444 = !DILocation(line: 1630, column: 19, scope: !9442)
!9445 = !DILocation(line: 1630, column: 22, scope: !9442)
!9446 = !DILocation(line: 1630, column: 36, scope: !9442)
!9447 = !DILocation(line: 1630, column: 42, scope: !9442)
!9448 = !DILocation(line: 1630, column: 34, scope: !9442)
!9449 = !DILocation(line: 1630, column: 30, scope: !9442)
!9450 = !DILocation(line: 1630, column: 6, scope: !9363)
!9451 = !DILocation(line: 1631, column: 17, scope: !9442)
!9452 = !DILocation(line: 1631, column: 23, scope: !9442)
!9453 = !DILocation(line: 1631, column: 15, scope: !9442)
!9454 = !DILocation(line: 1631, column: 11, scope: !9442)
!9455 = !DILocation(line: 1631, column: 3, scope: !9442)
!9456 = !DILocation(line: 1633, column: 11, scope: !9363)
!9457 = !DILocation(line: 1633, column: 21, scope: !9363)
!9458 = !DILocation(line: 1633, column: 19, scope: !9363)
!9459 = !DILocation(line: 1633, column: 9, scope: !9363)
!9460 = !DILocation(line: 1635, column: 2, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 1635, column: 2)
!9462 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1635, column: 2)
!9463 = !DILocation(line: 1635, column: 2, scope: !9462)
!9464 = !DILocation(line: 1643, column: 2, scope: !9363)
!9465 = !DILocation(line: 1643, column: 10, scope: !9363)
!9466 = !DILocation(line: 1643, column: 16, scope: !9363)
!9467 = !DILocation(line: 1643, column: 21, scope: !9363)
!9468 = !DILocation(line: 1643, column: 30, scope: !9363)
!9469 = !DILocation(line: 1643, column: 9, scope: !9363)
!9470 = !DILocation(line: 1644, column: 41, scope: !9373)
!9471 = !DILocation(line: 1644, column: 24, scope: !9373)
!9472 = !DILocation(line: 1644, column: 3, scope: !9373)
!9473 = !{i32 -2146150692}
!9474 = !DILocation(line: 1645, column: 7, scope: !9372)
!9475 = !DILocation(line: 1645, column: 7, scope: !9373)
!9476 = !DILocation(line: 1646, column: 4, scope: !9372)
!9477 = !DILocation(line: 1647, column: 7, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 1647, column: 7)
!9479 = !DILocation(line: 1647, column: 7, scope: !9373)
!9480 = !DILocation(line: 1648, column: 4, scope: !9478)
!9481 = distinct !{!9481, !9464, !9482}
!9482 = !DILocation(line: 1649, column: 2, scope: !9363)
!9483 = !DILocation(line: 1650, column: 18, scope: !9363)
!9484 = !DILocation(line: 1650, column: 2, scope: !9363)
!9485 = !DILocation(line: 1651, column: 1, scope: !9363)
!9486 = distinct !DISubprogram(name: "uart_send_xchar", scope: !3, file: !3, line: 676, type: !4025, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9487 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !9488)
!9488 = distinct !DILocation(line: 693, column: 3, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 688, column: 7)
!9490 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 686, column: 6)
!9491 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !9488)
!9492 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !9493)
!9493 = distinct !DILocation(line: 689, column: 3, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9495, file: !3, line: 689, column: 3)
!9495 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 689, column: 3)
!9496 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 689, column: 3)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 689, column: 3)
!9498 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 689, column: 3)
!9499 = !DILocalVariable(name: "tty", arg: 1, scope: !9486, file: !3, line: 676, type: !293)
!9500 = !DILocation(line: 676, column: 48, scope: !9486)
!9501 = !DILocalVariable(name: "ch", arg: 2, scope: !9486, file: !3, line: 676, type: !190)
!9502 = !DILocation(line: 676, column: 58, scope: !9486)
!9503 = !DILocalVariable(name: "state", scope: !9486, file: !3, line: 678, type: !195)
!9504 = !DILocation(line: 678, column: 21, scope: !9486)
!9505 = !DILocation(line: 678, column: 29, scope: !9486)
!9506 = !DILocation(line: 678, column: 34, scope: !9486)
!9507 = !DILocalVariable(name: "port", scope: !9486, file: !3, line: 679, type: !4276)
!9508 = !DILocation(line: 679, column: 20, scope: !9486)
!9509 = !DILocalVariable(name: "flags", scope: !9486, file: !3, line: 680, type: !187)
!9510 = !DILocation(line: 680, column: 16, scope: !9486)
!9511 = !DILocation(line: 682, column: 23, scope: !9486)
!9512 = !DILocation(line: 682, column: 9, scope: !9486)
!9513 = !DILocation(line: 682, column: 7, scope: !9486)
!9514 = !DILocation(line: 683, column: 7, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 683, column: 6)
!9516 = !DILocation(line: 683, column: 6, scope: !9486)
!9517 = !DILocation(line: 684, column: 3, scope: !9515)
!9518 = !DILocation(line: 686, column: 6, scope: !9490)
!9519 = !DILocation(line: 686, column: 12, scope: !9490)
!9520 = !DILocation(line: 686, column: 17, scope: !9490)
!9521 = !DILocation(line: 686, column: 6, scope: !9486)
!9522 = !DILocation(line: 687, column: 3, scope: !9490)
!9523 = !DILocation(line: 687, column: 9, scope: !9490)
!9524 = !DILocation(line: 687, column: 14, scope: !9490)
!9525 = !DILocation(line: 687, column: 25, scope: !9490)
!9526 = !DILocation(line: 687, column: 31, scope: !9490)
!9527 = !DILocation(line: 689, column: 3, scope: !9489)
!9528 = !DILocation(line: 689, column: 3, scope: !9498)
!9529 = !DILocalVariable(name: "__dummy", scope: !9530, file: !3, line: 689, type: !187)
!9530 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 689, column: 3)
!9531 = !DILocation(line: 689, column: 3, scope: !9530)
!9532 = !DILocalVariable(name: "__dummy2", scope: !9530, file: !3, line: 689, type: !187)
!9533 = !DILocation(line: 689, column: 3, scope: !9497)
!9534 = !DILocation(line: 689, column: 3, scope: !9496)
!9535 = !DILocation(line: 689, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 689, column: 3)
!9537 = !DILocalVariable(name: "__dummy", scope: !9538, file: !3, line: 689, type: !187)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 689, column: 3)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 689, column: 3)
!9540 = !DILocation(line: 689, column: 3, scope: !9538)
!9541 = !DILocalVariable(name: "__dummy2", scope: !9538, file: !3, line: 689, type: !187)
!9542 = !DILocation(line: 689, column: 3, scope: !9539)
!9543 = !DILocation(line: 689, column: 3, scope: !9495)
!9544 = !{i32 -2141540275}
!9545 = !DILocation(line: 689, column: 3, scope: !9494)
!9546 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !9493)
!9547 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !9493)
!9548 = !DILocation(line: 690, column: 18, scope: !9489)
!9549 = !DILocation(line: 690, column: 3, scope: !9489)
!9550 = !DILocation(line: 690, column: 9, scope: !9489)
!9551 = !DILocation(line: 690, column: 16, scope: !9489)
!9552 = !DILocation(line: 691, column: 7, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 691, column: 7)
!9554 = !DILocation(line: 691, column: 7, scope: !9489)
!9555 = !DILocation(line: 692, column: 4, scope: !9553)
!9556 = !DILocation(line: 692, column: 10, scope: !9553)
!9557 = !DILocation(line: 692, column: 15, scope: !9553)
!9558 = !DILocation(line: 692, column: 24, scope: !9553)
!9559 = !DILocation(line: 693, column: 27, scope: !9489)
!9560 = !DILocation(line: 693, column: 33, scope: !9489)
!9561 = !DILocation(line: 693, column: 39, scope: !9489)
!9562 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !9488)
!9563 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !9488)
!9564 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !9488)
!9565 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !9488)
!9566 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !9488)
!9567 = !DILocation(line: 695, column: 18, scope: !9486)
!9568 = !DILocation(line: 695, column: 2, scope: !9486)
!9569 = !DILocation(line: 696, column: 1, scope: !9486)
!9570 = distinct !DISubprogram(name: "uart_tiocmget", scope: !3, file: !3, line: 1059, type: !3993, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9571 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 1075, column: 3, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 1071, column: 26)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 1071, column: 6)
!9575 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !9576)
!9576 = distinct !DILocation(line: 1073, column: 3, scope: !9573)
!9577 = !DILocalVariable(name: "tty", arg: 1, scope: !9570, file: !3, line: 1059, type: !293)
!9578 = !DILocation(line: 1059, column: 45, scope: !9570)
!9579 = !DILocalVariable(name: "state", scope: !9570, file: !3, line: 1061, type: !195)
!9580 = !DILocation(line: 1061, column: 21, scope: !9570)
!9581 = !DILocation(line: 1061, column: 29, scope: !9570)
!9582 = !DILocation(line: 1061, column: 34, scope: !9570)
!9583 = !DILocalVariable(name: "port", scope: !9570, file: !3, line: 1062, type: !3947)
!9584 = !DILocation(line: 1062, column: 19, scope: !9570)
!9585 = !DILocation(line: 1062, column: 27, scope: !9570)
!9586 = !DILocation(line: 1062, column: 34, scope: !9570)
!9587 = !DILocalVariable(name: "uport", scope: !9570, file: !3, line: 1063, type: !4276)
!9588 = !DILocation(line: 1063, column: 20, scope: !9570)
!9589 = !DILocalVariable(name: "result", scope: !9570, file: !3, line: 1064, type: !220)
!9590 = !DILocation(line: 1064, column: 6, scope: !9570)
!9591 = !DILocation(line: 1066, column: 14, scope: !9570)
!9592 = !DILocation(line: 1066, column: 20, scope: !9570)
!9593 = !DILocation(line: 1066, column: 2, scope: !9570)
!9594 = !DILocation(line: 1067, column: 26, scope: !9570)
!9595 = !DILocation(line: 1067, column: 10, scope: !9570)
!9596 = !DILocation(line: 1067, column: 8, scope: !9570)
!9597 = !DILocation(line: 1068, column: 7, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 1068, column: 6)
!9599 = !DILocation(line: 1068, column: 6, scope: !9570)
!9600 = !DILocation(line: 1069, column: 3, scope: !9598)
!9601 = !DILocation(line: 1071, column: 20, scope: !9574)
!9602 = !DILocation(line: 1071, column: 7, scope: !9574)
!9603 = !DILocation(line: 1071, column: 6, scope: !9570)
!9604 = !DILocation(line: 1072, column: 12, scope: !9573)
!9605 = !DILocation(line: 1072, column: 19, scope: !9573)
!9606 = !DILocation(line: 1072, column: 10, scope: !9573)
!9607 = !DILocation(line: 1073, column: 18, scope: !9573)
!9608 = !DILocation(line: 1073, column: 25, scope: !9573)
!9609 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !9576)
!9610 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !9576)
!9611 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !9576)
!9612 = !DILocation(line: 1074, column: 13, scope: !9573)
!9613 = !DILocation(line: 1074, column: 20, scope: !9573)
!9614 = !DILocation(line: 1074, column: 25, scope: !9573)
!9615 = !DILocation(line: 1074, column: 35, scope: !9573)
!9616 = !DILocation(line: 1074, column: 10, scope: !9573)
!9617 = !DILocation(line: 1075, column: 20, scope: !9573)
!9618 = !DILocation(line: 1075, column: 27, scope: !9573)
!9619 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !9572)
!9620 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !9572)
!9621 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !9572)
!9622 = !DILocation(line: 1076, column: 2, scope: !9573)
!9623 = !DILocation(line: 1071, column: 23, scope: !9574)
!9624 = !DILabel(scope: !9570, name: "out", file: !3, line: 1077)
!9625 = !DILocation(line: 1077, column: 1, scope: !9570)
!9626 = !DILocation(line: 1078, column: 16, scope: !9570)
!9627 = !DILocation(line: 1078, column: 22, scope: !9570)
!9628 = !DILocation(line: 1078, column: 2, scope: !9570)
!9629 = !DILocation(line: 1079, column: 9, scope: !9570)
!9630 = !DILocation(line: 1079, column: 2, scope: !9570)
!9631 = distinct !DISubprogram(name: "uart_tiocmset", scope: !3, file: !3, line: 1083, type: !4030, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9632 = !DILocalVariable(name: "tty", arg: 1, scope: !9631, file: !3, line: 1083, type: !293)
!9633 = !DILocation(line: 1083, column: 34, scope: !9631)
!9634 = !DILocalVariable(name: "set", arg: 2, scope: !9631, file: !3, line: 1083, type: !7)
!9635 = !DILocation(line: 1083, column: 52, scope: !9631)
!9636 = !DILocalVariable(name: "clear", arg: 3, scope: !9631, file: !3, line: 1083, type: !7)
!9637 = !DILocation(line: 1083, column: 70, scope: !9631)
!9638 = !DILocalVariable(name: "state", scope: !9631, file: !3, line: 1085, type: !195)
!9639 = !DILocation(line: 1085, column: 21, scope: !9631)
!9640 = !DILocation(line: 1085, column: 29, scope: !9631)
!9641 = !DILocation(line: 1085, column: 34, scope: !9631)
!9642 = !DILocalVariable(name: "port", scope: !9631, file: !3, line: 1086, type: !3947)
!9643 = !DILocation(line: 1086, column: 19, scope: !9631)
!9644 = !DILocation(line: 1086, column: 27, scope: !9631)
!9645 = !DILocation(line: 1086, column: 34, scope: !9631)
!9646 = !DILocalVariable(name: "uport", scope: !9631, file: !3, line: 1087, type: !4276)
!9647 = !DILocation(line: 1087, column: 20, scope: !9631)
!9648 = !DILocalVariable(name: "ret", scope: !9631, file: !3, line: 1088, type: !220)
!9649 = !DILocation(line: 1088, column: 6, scope: !9631)
!9650 = !DILocation(line: 1090, column: 14, scope: !9631)
!9651 = !DILocation(line: 1090, column: 20, scope: !9631)
!9652 = !DILocation(line: 1090, column: 2, scope: !9631)
!9653 = !DILocation(line: 1091, column: 26, scope: !9631)
!9654 = !DILocation(line: 1091, column: 10, scope: !9631)
!9655 = !DILocation(line: 1091, column: 8, scope: !9631)
!9656 = !DILocation(line: 1092, column: 7, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1092, column: 6)
!9658 = !DILocation(line: 1092, column: 6, scope: !9631)
!9659 = !DILocation(line: 1093, column: 3, scope: !9657)
!9660 = !DILocation(line: 1095, column: 20, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1095, column: 6)
!9662 = !DILocation(line: 1095, column: 7, scope: !9661)
!9663 = !DILocation(line: 1095, column: 6, scope: !9631)
!9664 = !DILocation(line: 1096, column: 21, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !3, line: 1095, column: 26)
!9666 = !DILocation(line: 1096, column: 28, scope: !9665)
!9667 = !DILocation(line: 1096, column: 33, scope: !9665)
!9668 = !DILocation(line: 1096, column: 3, scope: !9665)
!9669 = !DILocation(line: 1097, column: 7, scope: !9665)
!9670 = !DILocation(line: 1098, column: 2, scope: !9665)
!9671 = !DILocation(line: 1095, column: 23, scope: !9661)
!9672 = !DILabel(scope: !9631, name: "out", file: !3, line: 1099)
!9673 = !DILocation(line: 1099, column: 1, scope: !9631)
!9674 = !DILocation(line: 1100, column: 16, scope: !9631)
!9675 = !DILocation(line: 1100, column: 22, scope: !9631)
!9676 = !DILocation(line: 1100, column: 2, scope: !9631)
!9677 = !DILocation(line: 1101, column: 9, scope: !9631)
!9678 = !DILocation(line: 1101, column: 2, scope: !9631)
!9679 = distinct !DISubprogram(name: "uart_get_icount", scope: !3, file: !3, line: 1255, type: !4061, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9680 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !9681)
!9681 = distinct !DILocation(line: 1267, column: 2, scope: !9679)
!9682 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !9683)
!9683 = distinct !DILocation(line: 1265, column: 2, scope: !9679)
!9684 = !DILocalVariable(name: "tty", arg: 1, scope: !9679, file: !3, line: 1255, type: !293)
!9685 = !DILocation(line: 1255, column: 47, scope: !9679)
!9686 = !DILocalVariable(name: "icount", arg: 2, scope: !9679, file: !3, line: 1256, type: !4063)
!9687 = !DILocation(line: 1256, column: 37, scope: !9679)
!9688 = !DILocalVariable(name: "state", scope: !9679, file: !3, line: 1258, type: !195)
!9689 = !DILocation(line: 1258, column: 21, scope: !9679)
!9690 = !DILocation(line: 1258, column: 29, scope: !9679)
!9691 = !DILocation(line: 1258, column: 34, scope: !9679)
!9692 = !DILocalVariable(name: "cnow", scope: !9679, file: !3, line: 1259, type: !4367)
!9693 = !DILocation(line: 1259, column: 21, scope: !9679)
!9694 = !DILocalVariable(name: "uport", scope: !9679, file: !3, line: 1260, type: !4276)
!9695 = !DILocation(line: 1260, column: 20, scope: !9679)
!9696 = !DILocation(line: 1262, column: 24, scope: !9679)
!9697 = !DILocation(line: 1262, column: 10, scope: !9679)
!9698 = !DILocation(line: 1262, column: 8, scope: !9679)
!9699 = !DILocation(line: 1263, column: 7, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 1263, column: 6)
!9701 = !DILocation(line: 1263, column: 6, scope: !9679)
!9702 = !DILocation(line: 1264, column: 3, scope: !9700)
!9703 = !DILocation(line: 1265, column: 17, scope: !9679)
!9704 = !DILocation(line: 1265, column: 24, scope: !9679)
!9705 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !9683)
!9706 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !9683)
!9707 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !9683)
!9708 = !DILocation(line: 1266, column: 2, scope: !9679)
!9709 = !DILocation(line: 1266, column: 17, scope: !9679)
!9710 = !DILocation(line: 1266, column: 24, scope: !9679)
!9711 = !DILocation(line: 1267, column: 19, scope: !9679)
!9712 = !DILocation(line: 1267, column: 26, scope: !9679)
!9713 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !9681)
!9714 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !9681)
!9715 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !9681)
!9716 = !DILocation(line: 1268, column: 18, scope: !9679)
!9717 = !DILocation(line: 1268, column: 2, scope: !9679)
!9718 = !DILocation(line: 1270, column: 29, scope: !9679)
!9719 = !DILocation(line: 1270, column: 2, scope: !9679)
!9720 = !DILocation(line: 1270, column: 10, scope: !9679)
!9721 = !DILocation(line: 1270, column: 22, scope: !9679)
!9722 = !DILocation(line: 1271, column: 29, scope: !9679)
!9723 = !DILocation(line: 1271, column: 2, scope: !9679)
!9724 = !DILocation(line: 1271, column: 10, scope: !9679)
!9725 = !DILocation(line: 1271, column: 22, scope: !9679)
!9726 = !DILocation(line: 1272, column: 29, scope: !9679)
!9727 = !DILocation(line: 1272, column: 2, scope: !9679)
!9728 = !DILocation(line: 1272, column: 10, scope: !9679)
!9729 = !DILocation(line: 1272, column: 22, scope: !9679)
!9730 = !DILocation(line: 1273, column: 29, scope: !9679)
!9731 = !DILocation(line: 1273, column: 2, scope: !9679)
!9732 = !DILocation(line: 1273, column: 10, scope: !9679)
!9733 = !DILocation(line: 1273, column: 22, scope: !9679)
!9734 = !DILocation(line: 1274, column: 29, scope: !9679)
!9735 = !DILocation(line: 1274, column: 2, scope: !9679)
!9736 = !DILocation(line: 1274, column: 10, scope: !9679)
!9737 = !DILocation(line: 1274, column: 22, scope: !9679)
!9738 = !DILocation(line: 1275, column: 29, scope: !9679)
!9739 = !DILocation(line: 1275, column: 2, scope: !9679)
!9740 = !DILocation(line: 1275, column: 10, scope: !9679)
!9741 = !DILocation(line: 1275, column: 22, scope: !9679)
!9742 = !DILocation(line: 1276, column: 29, scope: !9679)
!9743 = !DILocation(line: 1276, column: 2, scope: !9679)
!9744 = !DILocation(line: 1276, column: 10, scope: !9679)
!9745 = !DILocation(line: 1276, column: 22, scope: !9679)
!9746 = !DILocation(line: 1277, column: 29, scope: !9679)
!9747 = !DILocation(line: 1277, column: 2, scope: !9679)
!9748 = !DILocation(line: 1277, column: 10, scope: !9679)
!9749 = !DILocation(line: 1277, column: 22, scope: !9679)
!9750 = !DILocation(line: 1278, column: 29, scope: !9679)
!9751 = !DILocation(line: 1278, column: 2, scope: !9679)
!9752 = !DILocation(line: 1278, column: 10, scope: !9679)
!9753 = !DILocation(line: 1278, column: 22, scope: !9679)
!9754 = !DILocation(line: 1279, column: 29, scope: !9679)
!9755 = !DILocation(line: 1279, column: 2, scope: !9679)
!9756 = !DILocation(line: 1279, column: 10, scope: !9679)
!9757 = !DILocation(line: 1279, column: 22, scope: !9679)
!9758 = !DILocation(line: 1280, column: 29, scope: !9679)
!9759 = !DILocation(line: 1280, column: 2, scope: !9679)
!9760 = !DILocation(line: 1280, column: 10, scope: !9679)
!9761 = !DILocation(line: 1280, column: 22, scope: !9679)
!9762 = !DILocation(line: 1282, column: 2, scope: !9679)
!9763 = !DILocation(line: 1283, column: 1, scope: !9679)
!9764 = distinct !DISubprogram(name: "uart_get_info_user", scope: !3, file: !3, line: 798, type: !4082, scopeLine: 800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9765 = !DILocalVariable(name: "tty", arg: 1, scope: !9764, file: !3, line: 798, type: !293)
!9766 = !DILocation(line: 798, column: 50, scope: !9764)
!9767 = !DILocalVariable(name: "ss", arg: 2, scope: !9764, file: !3, line: 799, type: !4084)
!9768 = !DILocation(line: 799, column: 27, scope: !9764)
!9769 = !DILocalVariable(name: "state", scope: !9764, file: !3, line: 801, type: !195)
!9770 = !DILocation(line: 801, column: 21, scope: !9764)
!9771 = !DILocation(line: 801, column: 29, scope: !9764)
!9772 = !DILocation(line: 801, column: 34, scope: !9764)
!9773 = !DILocalVariable(name: "port", scope: !9764, file: !3, line: 802, type: !3947)
!9774 = !DILocation(line: 802, column: 19, scope: !9764)
!9775 = !DILocation(line: 802, column: 27, scope: !9764)
!9776 = !DILocation(line: 802, column: 34, scope: !9764)
!9777 = !DILocation(line: 804, column: 23, scope: !9764)
!9778 = !DILocation(line: 804, column: 29, scope: !9764)
!9779 = !DILocation(line: 804, column: 9, scope: !9764)
!9780 = !DILocation(line: 804, column: 33, scope: !9764)
!9781 = !DILocation(line: 804, column: 2, scope: !9764)
!9782 = distinct !DISubprogram(name: "uart_set_info_user", scope: !3, file: !3, line: 1010, type: !4082, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9783 = !DILocalVariable(name: "tty", arg: 1, scope: !9782, file: !3, line: 1010, type: !293)
!9784 = !DILocation(line: 1010, column: 50, scope: !9782)
!9785 = !DILocalVariable(name: "ss", arg: 2, scope: !9782, file: !3, line: 1010, type: !4084)
!9786 = !DILocation(line: 1010, column: 77, scope: !9782)
!9787 = !DILocalVariable(name: "state", scope: !9782, file: !3, line: 1012, type: !195)
!9788 = !DILocation(line: 1012, column: 21, scope: !9782)
!9789 = !DILocation(line: 1012, column: 29, scope: !9782)
!9790 = !DILocation(line: 1012, column: 34, scope: !9782)
!9791 = !DILocalVariable(name: "port", scope: !9782, file: !3, line: 1013, type: !3947)
!9792 = !DILocation(line: 1013, column: 19, scope: !9782)
!9793 = !DILocation(line: 1013, column: 27, scope: !9782)
!9794 = !DILocation(line: 1013, column: 34, scope: !9782)
!9795 = !DILocalVariable(name: "retval", scope: !9782, file: !3, line: 1014, type: !220)
!9796 = !DILocation(line: 1014, column: 6, scope: !9782)
!9797 = !DILocation(line: 1016, column: 14, scope: !9782)
!9798 = !DILocation(line: 1016, column: 19, scope: !9782)
!9799 = !DILocation(line: 1016, column: 2, scope: !9782)
!9800 = !DILocation(line: 1024, column: 14, scope: !9782)
!9801 = !DILocation(line: 1024, column: 20, scope: !9782)
!9802 = !DILocation(line: 1024, column: 2, scope: !9782)
!9803 = !DILocation(line: 1025, column: 25, scope: !9782)
!9804 = !DILocation(line: 1025, column: 30, scope: !9782)
!9805 = !DILocation(line: 1025, column: 36, scope: !9782)
!9806 = !DILocation(line: 1025, column: 43, scope: !9782)
!9807 = !DILocation(line: 1025, column: 11, scope: !9782)
!9808 = !DILocation(line: 1025, column: 9, scope: !9782)
!9809 = !DILocation(line: 1026, column: 16, scope: !9782)
!9810 = !DILocation(line: 1026, column: 22, scope: !9782)
!9811 = !DILocation(line: 1026, column: 2, scope: !9782)
!9812 = !DILocation(line: 1027, column: 12, scope: !9782)
!9813 = !DILocation(line: 1027, column: 17, scope: !9782)
!9814 = !DILocation(line: 1027, column: 2, scope: !9782)
!9815 = !DILocation(line: 1028, column: 9, scope: !9782)
!9816 = !DILocation(line: 1028, column: 2, scope: !9782)
!9817 = distinct !DISubprogram(name: "uart_proc_show", scope: !3, file: !3, line: 1901, type: !814, scopeLine: 1902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9818 = !DILocalVariable(name: "m", arg: 1, scope: !9817, file: !3, line: 1901, type: !782)
!9819 = !DILocation(line: 1901, column: 44, scope: !9817)
!9820 = !DILocalVariable(name: "v", arg: 2, scope: !9817, file: !3, line: 1901, type: !185)
!9821 = !DILocation(line: 1901, column: 53, scope: !9817)
!9822 = !DILocalVariable(name: "ttydrv", scope: !9817, file: !3, line: 1903, type: !3903)
!9823 = !DILocation(line: 1903, column: 21, scope: !9817)
!9824 = !DILocation(line: 1903, column: 30, scope: !9817)
!9825 = !DILocation(line: 1903, column: 33, scope: !9817)
!9826 = !DILocalVariable(name: "drv", scope: !9817, file: !3, line: 1904, type: !4503)
!9827 = !DILocation(line: 1904, column: 22, scope: !9817)
!9828 = !DILocation(line: 1904, column: 28, scope: !9817)
!9829 = !DILocation(line: 1904, column: 36, scope: !9817)
!9830 = !DILocalVariable(name: "i", scope: !9817, file: !3, line: 1905, type: !220)
!9831 = !DILocation(line: 1905, column: 6, scope: !9817)
!9832 = !DILocation(line: 1907, column: 13, scope: !9817)
!9833 = !DILocation(line: 1907, column: 2, scope: !9817)
!9834 = !DILocation(line: 1908, column: 9, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 1908, column: 2)
!9836 = !DILocation(line: 1908, column: 7, scope: !9835)
!9837 = !DILocation(line: 1908, column: 14, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 1908, column: 2)
!9839 = !DILocation(line: 1908, column: 18, scope: !9838)
!9840 = !DILocation(line: 1908, column: 23, scope: !9838)
!9841 = !DILocation(line: 1908, column: 16, scope: !9838)
!9842 = !DILocation(line: 1908, column: 2, scope: !9835)
!9843 = !DILocation(line: 1909, column: 18, scope: !9838)
!9844 = !DILocation(line: 1909, column: 21, scope: !9838)
!9845 = !DILocation(line: 1909, column: 26, scope: !9838)
!9846 = !DILocation(line: 1909, column: 3, scope: !9838)
!9847 = !DILocation(line: 1908, column: 28, scope: !9838)
!9848 = !DILocation(line: 1908, column: 2, scope: !9838)
!9849 = distinct !{!9849, !9842, !9850}
!9850 = !DILocation(line: 1909, column: 27, scope: !9835)
!9851 = !DILocation(line: 1910, column: 2, scope: !9817)
!9852 = distinct !DISubprogram(name: "uart_do_autoconfig", scope: !3, file: !3, line: 1124, type: !9853, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{!220, !293, !195}
!9855 = !DILocalVariable(name: "tty", arg: 1, scope: !9852, file: !3, line: 1124, type: !293)
!9856 = !DILocation(line: 1124, column: 50, scope: !9852)
!9857 = !DILocalVariable(name: "state", arg: 2, scope: !9852, file: !3, line: 1124, type: !195)
!9858 = !DILocation(line: 1124, column: 74, scope: !9852)
!9859 = !DILocalVariable(name: "port", scope: !9852, file: !3, line: 1126, type: !3947)
!9860 = !DILocation(line: 1126, column: 19, scope: !9852)
!9861 = !DILocation(line: 1126, column: 27, scope: !9852)
!9862 = !DILocation(line: 1126, column: 34, scope: !9852)
!9863 = !DILocalVariable(name: "uport", scope: !9852, file: !3, line: 1127, type: !4276)
!9864 = !DILocation(line: 1127, column: 20, scope: !9852)
!9865 = !DILocalVariable(name: "flags", scope: !9852, file: !3, line: 1128, type: !220)
!9866 = !DILocation(line: 1128, column: 6, scope: !9852)
!9867 = !DILocalVariable(name: "ret", scope: !9852, file: !3, line: 1128, type: !220)
!9868 = !DILocation(line: 1128, column: 13, scope: !9852)
!9869 = !DILocation(line: 1130, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1130, column: 6)
!9871 = !DILocation(line: 1130, column: 6, scope: !9852)
!9872 = !DILocation(line: 1131, column: 3, scope: !9870)
!9873 = !DILocation(line: 1138, column: 32, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1138, column: 6)
!9875 = !DILocation(line: 1138, column: 38, scope: !9874)
!9876 = !DILocation(line: 1138, column: 6, scope: !9874)
!9877 = !DILocation(line: 1138, column: 6, scope: !9852)
!9878 = !DILocation(line: 1139, column: 3, scope: !9874)
!9879 = !DILocation(line: 1141, column: 26, scope: !9852)
!9880 = !DILocation(line: 1141, column: 10, scope: !9852)
!9881 = !DILocation(line: 1141, column: 8, scope: !9852)
!9882 = !DILocation(line: 1142, column: 7, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1142, column: 6)
!9884 = !DILocation(line: 1142, column: 6, scope: !9852)
!9885 = !DILocation(line: 1143, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 1142, column: 14)
!9887 = !DILocation(line: 1144, column: 3, scope: !9886)
!9888 = !DILocation(line: 1147, column: 6, scope: !9852)
!9889 = !DILocation(line: 1148, column: 21, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 1148, column: 6)
!9891 = !DILocation(line: 1148, column: 6, scope: !9890)
!9892 = !DILocation(line: 1148, column: 27, scope: !9890)
!9893 = !DILocation(line: 1148, column: 6, scope: !9852)
!9894 = !DILocation(line: 1149, column: 17, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 1148, column: 33)
!9896 = !DILocation(line: 1149, column: 22, scope: !9895)
!9897 = !DILocation(line: 1149, column: 3, scope: !9895)
!9898 = !DILocation(line: 1155, column: 7, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1155, column: 7)
!9900 = !DILocation(line: 1155, column: 14, scope: !9899)
!9901 = !DILocation(line: 1155, column: 19, scope: !9899)
!9902 = !DILocation(line: 1155, column: 35, scope: !9899)
!9903 = !DILocation(line: 1155, column: 38, scope: !9899)
!9904 = !DILocation(line: 1155, column: 45, scope: !9899)
!9905 = !DILocation(line: 1155, column: 50, scope: !9899)
!9906 = !DILocation(line: 1155, column: 7, scope: !9895)
!9907 = !DILocation(line: 1156, column: 4, scope: !9899)
!9908 = !DILocation(line: 1156, column: 11, scope: !9899)
!9909 = !DILocation(line: 1156, column: 16, scope: !9899)
!9910 = !DILocation(line: 1156, column: 29, scope: !9899)
!9911 = !DILocation(line: 1158, column: 9, scope: !9895)
!9912 = !DILocation(line: 1159, column: 7, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1159, column: 7)
!9914 = !DILocation(line: 1159, column: 14, scope: !9913)
!9915 = !DILocation(line: 1159, column: 20, scope: !9913)
!9916 = !DILocation(line: 1159, column: 7, scope: !9895)
!9917 = !DILocation(line: 1160, column: 10, scope: !9913)
!9918 = !DILocation(line: 1160, column: 4, scope: !9913)
!9919 = !DILocation(line: 1166, column: 3, scope: !9895)
!9920 = !DILocation(line: 1166, column: 10, scope: !9895)
!9921 = !DILocation(line: 1166, column: 15, scope: !9895)
!9922 = !DILocation(line: 1166, column: 27, scope: !9895)
!9923 = !DILocation(line: 1166, column: 34, scope: !9895)
!9924 = !DILocation(line: 1168, column: 22, scope: !9895)
!9925 = !DILocation(line: 1168, column: 27, scope: !9895)
!9926 = !DILocation(line: 1168, column: 9, scope: !9895)
!9927 = !DILocation(line: 1168, column: 7, scope: !9895)
!9928 = !DILocation(line: 1169, column: 7, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1169, column: 7)
!9930 = !DILocation(line: 1169, column: 11, scope: !9929)
!9931 = !DILocation(line: 1169, column: 7, scope: !9895)
!9932 = !DILocation(line: 1170, column: 29, scope: !9929)
!9933 = !DILocation(line: 1170, column: 4, scope: !9929)
!9934 = !DILocation(line: 1171, column: 7, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1171, column: 7)
!9936 = !DILocation(line: 1171, column: 11, scope: !9935)
!9937 = !DILocation(line: 1171, column: 7, scope: !9895)
!9938 = !DILocation(line: 1172, column: 8, scope: !9935)
!9939 = !DILocation(line: 1172, column: 4, scope: !9935)
!9940 = !DILocation(line: 1173, column: 2, scope: !9895)
!9941 = !DILocation(line: 1148, column: 30, scope: !9890)
!9942 = !DILabel(scope: !9852, name: "out", file: !3, line: 1174)
!9943 = !DILocation(line: 1174, column: 1, scope: !9852)
!9944 = !DILocation(line: 1175, column: 16, scope: !9852)
!9945 = !DILocation(line: 1175, column: 22, scope: !9852)
!9946 = !DILocation(line: 1175, column: 2, scope: !9852)
!9947 = !DILocation(line: 1176, column: 9, scope: !9852)
!9948 = !DILocation(line: 1176, column: 2, scope: !9852)
!9949 = !DILocation(line: 1177, column: 1, scope: !9852)
!9950 = distinct !DISubprogram(name: "tty_io_error", scope: !200, file: !200, line: 399, type: !9951, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!560, !293}
!9953 = !DILocalVariable(name: "tty", arg: 1, scope: !9950, file: !200, line: 399, type: !293)
!9954 = !DILocation(line: 399, column: 52, scope: !9950)
!9955 = !DILocation(line: 401, column: 33, scope: !9950)
!9956 = !DILocation(line: 401, column: 38, scope: !9950)
!9957 = !DILocation(line: 401, column: 9, scope: !9950)
!9958 = !DILocation(line: 401, column: 2, scope: !9950)
!9959 = distinct !DISubprogram(name: "uart_wait_modem_status", scope: !3, file: !3, line: 1197, type: !9960, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!9960 = !DISubroutineType(types: !9961)
!9961 = !{!220, !195, !187}
!9962 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !9963)
!9963 = distinct !DILocation(line: 1242, column: 2, scope: !9959)
!9964 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !9963)
!9965 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !9963)
!9966 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !9967)
!9967 = distinct !DILocation(line: 1235, column: 22, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1235, column: 7)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !3, line: 1217, column: 11)
!9970 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 1217, column: 2)
!9971 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1217, column: 2)
!9972 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !9967)
!9973 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !9967)
!9974 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !9975)
!9975 = distinct !DILocation(line: 1222, column: 3, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1222, column: 3)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1222, column: 3)
!9978 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1222, column: 3)
!9979 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !9975)
!9980 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !9975)
!9981 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !9982)
!9982 = distinct !DILocation(line: 1220, column: 3, scope: !9969)
!9983 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !9984)
!9984 = distinct !DILocation(line: 1218, column: 3, scope: !9969)
!9985 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !9986)
!9986 = distinct !DILocation(line: 1214, column: 2, scope: !9959)
!9987 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !9988)
!9988 = distinct !DILocation(line: 1211, column: 2, scope: !9959)
!9989 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !9990)
!9990 = distinct !DILocation(line: 1201, column: 2, scope: !9959)
!9991 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !9990)
!9992 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !9990)
!9993 = !DILocalVariable(name: "state", arg: 1, scope: !9959, file: !3, line: 1197, type: !195)
!9994 = !DILocation(line: 1197, column: 54, scope: !9959)
!9995 = !DILocalVariable(name: "arg", arg: 2, scope: !9959, file: !3, line: 1197, type: !187)
!9996 = !DILocation(line: 1197, column: 75, scope: !9959)
!9997 = !DILocalVariable(name: "uport", scope: !9959, file: !3, line: 1199, type: !4276)
!9998 = !DILocation(line: 1199, column: 20, scope: !9959)
!9999 = !DILocalVariable(name: "port", scope: !9959, file: !3, line: 1200, type: !3947)
!10000 = !DILocation(line: 1200, column: 19, scope: !9959)
!10001 = !DILocation(line: 1200, column: 27, scope: !9959)
!10002 = !DILocation(line: 1200, column: 34, scope: !9959)
!10003 = !DILocalVariable(name: "wait", scope: !9959, file: !3, line: 1201, type: !6621)
!10004 = !DILocation(line: 1201, column: 2, scope: !9959)
!10005 = !DILocalVariable(name: "cprev", scope: !9959, file: !3, line: 1202, type: !4367)
!10006 = !DILocation(line: 1202, column: 21, scope: !9959)
!10007 = !DILocalVariable(name: "cnow", scope: !9959, file: !3, line: 1202, type: !4367)
!10008 = !DILocation(line: 1202, column: 28, scope: !9959)
!10009 = !DILocalVariable(name: "ret", scope: !9959, file: !3, line: 1203, type: !220)
!10010 = !DILocation(line: 1203, column: 6, scope: !9959)
!10011 = !DILocation(line: 1208, column: 24, scope: !9959)
!10012 = !DILocation(line: 1208, column: 10, scope: !9959)
!10013 = !DILocation(line: 1208, column: 8, scope: !9959)
!10014 = !DILocation(line: 1209, column: 7, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9959, file: !3, line: 1209, column: 6)
!10016 = !DILocation(line: 1209, column: 6, scope: !9959)
!10017 = !DILocation(line: 1210, column: 3, scope: !10015)
!10018 = !DILocation(line: 1211, column: 17, scope: !9959)
!10019 = !DILocation(line: 1211, column: 24, scope: !9959)
!10020 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !9988)
!10021 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !9988)
!10022 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !9988)
!10023 = !DILocation(line: 1212, column: 2, scope: !9959)
!10024 = !DILocation(line: 1212, column: 18, scope: !9959)
!10025 = !DILocation(line: 1212, column: 25, scope: !9959)
!10026 = !DILocation(line: 1213, column: 17, scope: !9959)
!10027 = !DILocation(line: 1213, column: 2, scope: !9959)
!10028 = !DILocation(line: 1214, column: 19, scope: !9959)
!10029 = !DILocation(line: 1214, column: 26, scope: !9959)
!10030 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !9986)
!10031 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !9986)
!10032 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !9986)
!10033 = !DILocation(line: 1216, column: 18, scope: !9959)
!10034 = !DILocation(line: 1216, column: 24, scope: !9959)
!10035 = !DILocation(line: 1216, column: 2, scope: !9959)
!10036 = !DILocation(line: 1217, column: 2, scope: !9959)
!10037 = !DILocation(line: 1218, column: 18, scope: !9969)
!10038 = !DILocation(line: 1218, column: 25, scope: !9969)
!10039 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !9984)
!10040 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !9984)
!10041 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !9984)
!10042 = !DILocation(line: 1219, column: 3, scope: !9969)
!10043 = !DILocation(line: 1219, column: 18, scope: !9969)
!10044 = !DILocation(line: 1219, column: 25, scope: !9969)
!10045 = !DILocation(line: 1220, column: 20, scope: !9969)
!10046 = !DILocation(line: 1220, column: 27, scope: !9969)
!10047 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !9982)
!10048 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !9982)
!10049 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !9982)
!10050 = !DILocation(line: 1222, column: 3, scope: !9969)
!10051 = !DILocation(line: 1222, column: 3, scope: !9978)
!10052 = !DILocation(line: 1222, column: 3, scope: !9977)
!10053 = !DILocation(line: 1222, column: 3, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1222, column: 3)
!10055 = !DILocation(line: 1222, column: 3, scope: !9976)
!10056 = !{i32 -2141531958}
!10057 = !DILocation(line: 1224, column: 9, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1224, column: 7)
!10059 = !DILocation(line: 1224, column: 13, scope: !10058)
!10060 = !DILocation(line: 1224, column: 26, scope: !10058)
!10061 = !DILocation(line: 1224, column: 35, scope: !10058)
!10062 = !DILocation(line: 1224, column: 48, scope: !10058)
!10063 = !DILocation(line: 1224, column: 39, scope: !10058)
!10064 = !DILocation(line: 1224, column: 54, scope: !10058)
!10065 = !DILocation(line: 1225, column: 9, scope: !10058)
!10066 = !DILocation(line: 1225, column: 13, scope: !10058)
!10067 = !DILocation(line: 1225, column: 26, scope: !10058)
!10068 = !DILocation(line: 1225, column: 35, scope: !10058)
!10069 = !DILocation(line: 1225, column: 48, scope: !10058)
!10070 = !DILocation(line: 1225, column: 39, scope: !10058)
!10071 = !DILocation(line: 1225, column: 54, scope: !10058)
!10072 = !DILocation(line: 1226, column: 9, scope: !10058)
!10073 = !DILocation(line: 1226, column: 13, scope: !10058)
!10074 = !DILocation(line: 1226, column: 26, scope: !10058)
!10075 = !DILocation(line: 1226, column: 35, scope: !10058)
!10076 = !DILocation(line: 1226, column: 48, scope: !10058)
!10077 = !DILocation(line: 1226, column: 39, scope: !10058)
!10078 = !DILocation(line: 1226, column: 54, scope: !10058)
!10079 = !DILocation(line: 1227, column: 9, scope: !10058)
!10080 = !DILocation(line: 1227, column: 13, scope: !10058)
!10081 = !DILocation(line: 1227, column: 26, scope: !10058)
!10082 = !DILocation(line: 1227, column: 35, scope: !10058)
!10083 = !DILocation(line: 1227, column: 48, scope: !10058)
!10084 = !DILocation(line: 1227, column: 39, scope: !10058)
!10085 = !DILocation(line: 1224, column: 7, scope: !9969)
!10086 = !DILocation(line: 1228, column: 8, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10058, file: !3, line: 1227, column: 55)
!10088 = !DILocation(line: 1229, column: 4, scope: !10087)
!10089 = !DILocation(line: 1232, column: 3, scope: !9969)
!10090 = !DILocation(line: 1235, column: 7, scope: !9968)
!10091 = !DILocation(line: 1235, column: 7, scope: !9969)
!10092 = !DILocation(line: 1236, column: 8, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1235, column: 32)
!10094 = !DILocation(line: 1237, column: 4, scope: !10093)
!10095 = !DILocation(line: 1240, column: 11, scope: !9969)
!10096 = !DILocation(line: 1217, column: 2, scope: !9970)
!10097 = distinct !{!10097, !10098, !10099}
!10098 = !DILocation(line: 1217, column: 2, scope: !9971)
!10099 = !DILocation(line: 1241, column: 2, scope: !9971)
!10100 = !DILocation(line: 1242, column: 2, scope: !9959)
!10101 = !DILocation(line: 1243, column: 21, scope: !9959)
!10102 = !DILocation(line: 1243, column: 27, scope: !9959)
!10103 = !DILocation(line: 1243, column: 2, scope: !9959)
!10104 = !DILocation(line: 1244, column: 18, scope: !9959)
!10105 = !DILocation(line: 1244, column: 2, scope: !9959)
!10106 = !DILocation(line: 1246, column: 9, scope: !9959)
!10107 = !DILocation(line: 1246, column: 2, scope: !9959)
!10108 = !DILocation(line: 1247, column: 1, scope: !9959)
!10109 = distinct !DISubprogram(name: "uart_get_lsr_info", scope: !3, file: !3, line: 1037, type: !10110, scopeLine: 1039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!220, !293, !195, !2754}
!10112 = !DILocalVariable(name: "tty", arg: 1, scope: !10109, file: !3, line: 1037, type: !293)
!10113 = !DILocation(line: 1037, column: 49, scope: !10109)
!10114 = !DILocalVariable(name: "state", arg: 2, scope: !10109, file: !3, line: 1038, type: !195)
!10115 = !DILocation(line: 1038, column: 23, scope: !10109)
!10116 = !DILocalVariable(name: "value", arg: 3, scope: !10109, file: !3, line: 1038, type: !2754)
!10117 = !DILocation(line: 1038, column: 51, scope: !10109)
!10118 = !DILocalVariable(name: "uport", scope: !10109, file: !3, line: 1040, type: !4276)
!10119 = !DILocation(line: 1040, column: 20, scope: !10109)
!10120 = !DILocation(line: 1040, column: 44, scope: !10109)
!10121 = !DILocation(line: 1040, column: 28, scope: !10109)
!10122 = !DILocalVariable(name: "result", scope: !10109, file: !3, line: 1041, type: !7)
!10123 = !DILocation(line: 1041, column: 15, scope: !10109)
!10124 = !DILocation(line: 1043, column: 11, scope: !10109)
!10125 = !DILocation(line: 1043, column: 18, scope: !10109)
!10126 = !DILocation(line: 1043, column: 23, scope: !10109)
!10127 = !DILocation(line: 1043, column: 32, scope: !10109)
!10128 = !DILocation(line: 1043, column: 9, scope: !10109)
!10129 = !DILocation(line: 1051, column: 6, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 1051, column: 6)
!10131 = !DILocation(line: 1051, column: 13, scope: !10130)
!10132 = !DILocation(line: 1051, column: 20, scope: !10130)
!10133 = !DILocation(line: 1052, column: 8, scope: !10130)
!10134 = !DILocation(line: 1052, column: 46, scope: !10130)
!10135 = !DILocation(line: 1052, column: 51, scope: !10130)
!10136 = !DILocation(line: 1053, column: 24, scope: !10130)
!10137 = !DILocation(line: 1053, column: 8, scope: !10130)
!10138 = !DILocation(line: 1051, column: 6, scope: !10109)
!10139 = !DILocation(line: 1054, column: 10, scope: !10130)
!10140 = !DILocation(line: 1054, column: 3, scope: !10130)
!10141 = !DILocation(line: 1056, column: 9, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 1056, column: 9)
!10143 = !DILocalVariable(name: "__ret_pu", scope: !10144, file: !3, line: 1056, type: !220)
!10144 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1056, column: 9)
!10145 = !DILocation(line: 1056, column: 9, scope: !10144)
!10146 = !DILocalVariable(name: "__ptr_pu", scope: !10144, file: !3, line: 1056, type: !185)
!10147 = !DILocalVariable(name: "__val_pu", scope: !10144, file: !3, line: 1056, type: !7)
!10148 = !{i32 -2141534422}
!10149 = !DILocation(line: 1056, column: 9, scope: !10109)
!10150 = !DILocation(line: 1056, column: 2, scope: !10109)
!10151 = distinct !DISubprogram(name: "uart_get_rs485_config", scope: !3, file: !3, line: 1285, type: !4332, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10152 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10153)
!10153 = distinct !DILocation(line: 1293, column: 2, scope: !10151)
!10154 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10153)
!10155 = !DILocalVariable(name: "addr", arg: 1, scope: !10156, file: !10157, line: 138, type: !2201)
!10156 = distinct !DISubprogram(name: "check_copy_size", scope: !10157, file: !10157, line: 138, type: !10158, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10157 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!560, !2201, !399, !560}
!10160 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10161)
!10161 = distinct !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10167)
!10162 = distinct !DILexicalBlock(scope: !10164, file: !10163, line: 199, column: 6)
!10163 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!10164 = distinct !DISubprogram(name: "copy_to_user", scope: !10163, file: !10163, line: 197, type: !10165, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10165 = !DISubroutineType(types: !10166)
!10166 = !{!187, !185, !2201, !187}
!10167 = distinct !DILocation(line: 1295, column: 6, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1295, column: 6)
!10169 = !DILocalVariable(name: "bytes", arg: 2, scope: !10156, file: !10157, line: 138, type: !399)
!10170 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10161)
!10171 = !DILocalVariable(name: "is_source", arg: 3, scope: !10156, file: !10157, line: 138, type: !560)
!10172 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10161)
!10173 = !DILocalVariable(name: "sz", scope: !10156, file: !10157, line: 140, type: !220)
!10174 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10161)
!10175 = !DILocalVariable(name: "__ret_warn_on", scope: !10176, file: !10157, line: 150, type: !220)
!10176 = distinct !DILexicalBlock(scope: !10177, file: !10157, line: 150, column: 6)
!10177 = distinct !DILexicalBlock(scope: !10156, file: !10157, line: 150, column: 6)
!10178 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10161)
!10179 = !DILocalVariable(name: "to", arg: 1, scope: !10164, file: !10163, line: 197, type: !185)
!10180 = !DILocation(line: 197, column: 27, scope: !10164, inlinedAt: !10167)
!10181 = !DILocalVariable(name: "from", arg: 2, scope: !10164, file: !10163, line: 197, type: !2201)
!10182 = !DILocation(line: 197, column: 43, scope: !10164, inlinedAt: !10167)
!10183 = !DILocalVariable(name: "n", arg: 3, scope: !10164, file: !10163, line: 197, type: !187)
!10184 = !DILocation(line: 197, column: 63, scope: !10164, inlinedAt: !10167)
!10185 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !10186)
!10186 = distinct !DILocation(line: 1291, column: 2, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 1291, column: 2)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 1291, column: 2)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 1291, column: 2)
!10190 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 1291, column: 2)
!10191 = distinct !DILexicalBlock(scope: !10151, file: !3, line: 1291, column: 2)
!10192 = !DILocalVariable(name: "port", arg: 1, scope: !10151, file: !3, line: 1285, type: !4276)
!10193 = !DILocation(line: 1285, column: 52, scope: !10151)
!10194 = !DILocalVariable(name: "rs485", arg: 2, scope: !10151, file: !3, line: 1286, type: !4334)
!10195 = !DILocation(line: 1286, column: 33, scope: !10151)
!10196 = !DILocalVariable(name: "flags", scope: !10151, file: !3, line: 1288, type: !187)
!10197 = !DILocation(line: 1288, column: 16, scope: !10151)
!10198 = !DILocalVariable(name: "aux", scope: !10151, file: !3, line: 1289, type: !4335)
!10199 = !DILocation(line: 1289, column: 22, scope: !10151)
!10200 = !DILocation(line: 1291, column: 2, scope: !10151)
!10201 = !DILocation(line: 1291, column: 2, scope: !10191)
!10202 = !DILocalVariable(name: "__dummy", scope: !10203, file: !3, line: 1291, type: !187)
!10203 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 1291, column: 2)
!10204 = !DILocation(line: 1291, column: 2, scope: !10203)
!10205 = !DILocalVariable(name: "__dummy2", scope: !10203, file: !3, line: 1291, type: !187)
!10206 = !DILocation(line: 1291, column: 2, scope: !10190)
!10207 = !DILocation(line: 1291, column: 2, scope: !10189)
!10208 = !DILocation(line: 1291, column: 2, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 1291, column: 2)
!10210 = !DILocalVariable(name: "__dummy", scope: !10211, file: !3, line: 1291, type: !187)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1291, column: 2)
!10212 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 1291, column: 2)
!10213 = !DILocation(line: 1291, column: 2, scope: !10211)
!10214 = !DILocalVariable(name: "__dummy2", scope: !10211, file: !3, line: 1291, type: !187)
!10215 = !DILocation(line: 1291, column: 2, scope: !10212)
!10216 = !DILocation(line: 1291, column: 2, scope: !10188)
!10217 = !{i32 -2141530942}
!10218 = !DILocation(line: 1291, column: 2, scope: !10187)
!10219 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !10186)
!10220 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !10186)
!10221 = !DILocation(line: 1292, column: 8, scope: !10151)
!10222 = !DILocation(line: 1292, column: 14, scope: !10151)
!10223 = !DILocation(line: 1293, column: 26, scope: !10151)
!10224 = !DILocation(line: 1293, column: 32, scope: !10151)
!10225 = !DILocation(line: 1293, column: 38, scope: !10151)
!10226 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10153)
!10227 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10153)
!10228 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10153)
!10229 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10153)
!10230 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10153)
!10231 = !DILocation(line: 1295, column: 19, scope: !10168)
!10232 = !DILocation(line: 1295, column: 26, scope: !10168)
!10233 = !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10167)
!10234 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10161)
!10235 = distinct !DILexicalBlock(scope: !10156, file: !10157, line: 141, column: 6)
!10236 = !DILocation(line: 0, scope: !10235, inlinedAt: !10161)
!10237 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10161)
!10238 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10161)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !10157, line: 142, column: 7)
!10240 = distinct !DILexicalBlock(scope: !10235, file: !10157, line: 141, column: 39)
!10241 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10161)
!10242 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10161)
!10243 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10161)
!10244 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10161)
!10245 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10161)
!10246 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10161)
!10247 = distinct !DILexicalBlock(scope: !10239, file: !10157, line: 144, column: 12)
!10248 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10161)
!10249 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10161)
!10250 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10161)
!10251 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10161)
!10252 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10161)
!10253 = distinct !DILexicalBlock(scope: !10176, file: !10157, line: 150, column: 6)
!10254 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10161)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !10157, line: 150, column: 6)
!10256 = distinct !DILexicalBlock(scope: !10253, file: !10157, line: 150, column: 6)
!10257 = !{i32 -2145478713, i32 -2145478684, i32 -2145478638, i32 -2145478580, i32 -2145478526, i32 -2145478472, i32 -2145478417, i32 -2145478386}
!10258 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10161)
!10259 = distinct !DILexicalBlock(scope: !10256, file: !10157, line: 150, column: 6)
!10260 = !{i32 -2145477966, i32 -2145477959, i32 -2145477907, i32 -2145477876, i32 -2145477846}
!10261 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10161)
!10262 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10161)
!10263 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10161)
!10264 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10161)
!10265 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10161)
!10266 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10161)
!10267 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10161)
!10268 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10161)
!10269 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10161)
!10270 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10161)
!10271 = !DILocation(line: 199, column: 6, scope: !10164, inlinedAt: !10167)
!10272 = !DILocation(line: 200, column: 21, scope: !10162, inlinedAt: !10167)
!10273 = !DILocation(line: 200, column: 25, scope: !10162, inlinedAt: !10167)
!10274 = !DILocation(line: 200, column: 31, scope: !10162, inlinedAt: !10167)
!10275 = !DILocation(line: 200, column: 7, scope: !10162, inlinedAt: !10167)
!10276 = !DILocation(line: 200, column: 5, scope: !10162, inlinedAt: !10167)
!10277 = !DILocation(line: 200, column: 3, scope: !10162, inlinedAt: !10167)
!10278 = !DILocation(line: 201, column: 9, scope: !10164, inlinedAt: !10167)
!10279 = !DILocation(line: 1295, column: 6, scope: !10168)
!10280 = !DILocation(line: 1295, column: 6, scope: !10151)
!10281 = !DILocation(line: 1296, column: 3, scope: !10168)
!10282 = !DILocation(line: 1298, column: 2, scope: !10151)
!10283 = !DILocation(line: 1299, column: 1, scope: !10151)
!10284 = distinct !DISubprogram(name: "uart_set_rs485_config", scope: !3, file: !3, line: 1301, type: !4332, scopeLine: 1303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10285 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10286)
!10286 = distinct !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 1320, column: 6, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1320, column: 6)
!10289 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10286)
!10290 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10286)
!10291 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10286)
!10292 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10286)
!10293 = !DILocation(line: 197, column: 27, scope: !10164, inlinedAt: !10287)
!10294 = !DILocation(line: 197, column: 43, scope: !10164, inlinedAt: !10287)
!10295 = !DILocation(line: 197, column: 63, scope: !10164, inlinedAt: !10287)
!10296 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10297)
!10297 = distinct !DILocation(line: 1316, column: 2, scope: !10284)
!10298 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10297)
!10299 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !10300)
!10300 = distinct !DILocation(line: 1314, column: 2, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 1314, column: 2)
!10302 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 1314, column: 2)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1314, column: 2)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 1314, column: 2)
!10305 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1314, column: 2)
!10306 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10307)
!10307 = distinct !DILocation(line: 191, column: 6, scope: !10308, inlinedAt: !10310)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !10163, line: 191, column: 6)
!10309 = distinct !DISubprogram(name: "copy_from_user", scope: !10163, file: !10163, line: 189, type: !10165, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10310 = distinct !DILocation(line: 1311, column: 6, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1311, column: 6)
!10312 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10307)
!10313 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10307)
!10314 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10307)
!10315 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10307)
!10316 = !DILocalVariable(name: "to", arg: 1, scope: !10309, file: !10163, line: 189, type: !185)
!10317 = !DILocation(line: 189, column: 22, scope: !10309, inlinedAt: !10310)
!10318 = !DILocalVariable(name: "from", arg: 2, scope: !10309, file: !10163, line: 189, type: !2201)
!10319 = !DILocation(line: 189, column: 45, scope: !10309, inlinedAt: !10310)
!10320 = !DILocalVariable(name: "n", arg: 3, scope: !10309, file: !10163, line: 189, type: !187)
!10321 = !DILocation(line: 189, column: 65, scope: !10309, inlinedAt: !10310)
!10322 = !DILocalVariable(name: "port", arg: 1, scope: !10284, file: !3, line: 1301, type: !4276)
!10323 = !DILocation(line: 1301, column: 52, scope: !10284)
!10324 = !DILocalVariable(name: "rs485_user", arg: 2, scope: !10284, file: !3, line: 1302, type: !4334)
!10325 = !DILocation(line: 1302, column: 33, scope: !10284)
!10326 = !DILocalVariable(name: "rs485", scope: !10284, file: !3, line: 1304, type: !4335)
!10327 = !DILocation(line: 1304, column: 22, scope: !10284)
!10328 = !DILocalVariable(name: "ret", scope: !10284, file: !3, line: 1305, type: !220)
!10329 = !DILocation(line: 1305, column: 6, scope: !10284)
!10330 = !DILocalVariable(name: "flags", scope: !10284, file: !3, line: 1306, type: !187)
!10331 = !DILocation(line: 1306, column: 16, scope: !10284)
!10332 = !DILocation(line: 1308, column: 7, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1308, column: 6)
!10334 = !DILocation(line: 1308, column: 13, scope: !10333)
!10335 = !DILocation(line: 1308, column: 6, scope: !10284)
!10336 = !DILocation(line: 1309, column: 3, scope: !10333)
!10337 = !DILocation(line: 1311, column: 21, scope: !10311)
!10338 = !DILocation(line: 1311, column: 29, scope: !10311)
!10339 = !DILocation(line: 191, column: 6, scope: !10308, inlinedAt: !10310)
!10340 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10307)
!10341 = !DILocation(line: 0, scope: !10235, inlinedAt: !10307)
!10342 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10307)
!10343 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10307)
!10344 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10307)
!10345 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10307)
!10346 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10307)
!10347 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10307)
!10348 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10307)
!10349 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10307)
!10350 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10307)
!10351 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10307)
!10352 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10307)
!10353 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10307)
!10354 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10307)
!10355 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10307)
!10356 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10307)
!10357 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10307)
!10358 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10307)
!10359 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10307)
!10360 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10307)
!10361 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10307)
!10362 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10307)
!10363 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10307)
!10364 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10307)
!10365 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10307)
!10366 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10307)
!10367 = !DILocation(line: 191, column: 6, scope: !10309, inlinedAt: !10310)
!10368 = !DILocation(line: 192, column: 23, scope: !10308, inlinedAt: !10310)
!10369 = !DILocation(line: 192, column: 27, scope: !10308, inlinedAt: !10310)
!10370 = !DILocation(line: 192, column: 33, scope: !10308, inlinedAt: !10310)
!10371 = !DILocation(line: 192, column: 7, scope: !10308, inlinedAt: !10310)
!10372 = !DILocation(line: 192, column: 5, scope: !10308, inlinedAt: !10310)
!10373 = !DILocation(line: 192, column: 3, scope: !10308, inlinedAt: !10310)
!10374 = !DILocation(line: 193, column: 9, scope: !10309, inlinedAt: !10310)
!10375 = !DILocation(line: 1311, column: 6, scope: !10311)
!10376 = !DILocation(line: 1311, column: 6, scope: !10284)
!10377 = !DILocation(line: 1312, column: 3, scope: !10311)
!10378 = !DILocation(line: 1314, column: 2, scope: !10284)
!10379 = !DILocation(line: 1314, column: 2, scope: !10305)
!10380 = !DILocalVariable(name: "__dummy", scope: !10381, file: !3, line: 1314, type: !187)
!10381 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1314, column: 2)
!10382 = !DILocation(line: 1314, column: 2, scope: !10381)
!10383 = !DILocalVariable(name: "__dummy2", scope: !10381, file: !3, line: 1314, type: !187)
!10384 = !DILocation(line: 1314, column: 2, scope: !10304)
!10385 = !DILocation(line: 1314, column: 2, scope: !10303)
!10386 = !DILocation(line: 1314, column: 2, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 1314, column: 2)
!10388 = !DILocalVariable(name: "__dummy", scope: !10389, file: !3, line: 1314, type: !187)
!10389 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 1314, column: 2)
!10390 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 1314, column: 2)
!10391 = !DILocation(line: 1314, column: 2, scope: !10389)
!10392 = !DILocalVariable(name: "__dummy2", scope: !10389, file: !3, line: 1314, type: !187)
!10393 = !DILocation(line: 1314, column: 2, scope: !10390)
!10394 = !DILocation(line: 1314, column: 2, scope: !10302)
!10395 = !{i32 -2141529913}
!10396 = !DILocation(line: 1314, column: 2, scope: !10301)
!10397 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !10300)
!10398 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !10300)
!10399 = !DILocation(line: 1315, column: 8, scope: !10284)
!10400 = !DILocation(line: 1315, column: 14, scope: !10284)
!10401 = !DILocation(line: 1315, column: 27, scope: !10284)
!10402 = !DILocation(line: 1315, column: 6, scope: !10284)
!10403 = !DILocation(line: 1316, column: 26, scope: !10284)
!10404 = !DILocation(line: 1316, column: 32, scope: !10284)
!10405 = !DILocation(line: 1316, column: 38, scope: !10284)
!10406 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10297)
!10407 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10297)
!10408 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10297)
!10409 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10297)
!10410 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10297)
!10411 = !DILocation(line: 1317, column: 6, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1317, column: 6)
!10413 = !DILocation(line: 1317, column: 6, scope: !10284)
!10414 = !DILocation(line: 1318, column: 10, scope: !10412)
!10415 = !DILocation(line: 1318, column: 3, scope: !10412)
!10416 = !DILocation(line: 1320, column: 19, scope: !10288)
!10417 = !DILocation(line: 1320, column: 32, scope: !10288)
!10418 = !DILocation(line: 1320, column: 38, scope: !10288)
!10419 = !DILocation(line: 1320, column: 31, scope: !10288)
!10420 = !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10287)
!10421 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10286)
!10422 = !DILocation(line: 0, scope: !10235, inlinedAt: !10286)
!10423 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10286)
!10424 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10286)
!10425 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10286)
!10426 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10286)
!10427 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10286)
!10428 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10286)
!10429 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10286)
!10430 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10286)
!10431 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10286)
!10432 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10286)
!10433 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10286)
!10434 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10286)
!10435 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10286)
!10436 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10286)
!10437 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10286)
!10438 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10286)
!10439 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10286)
!10440 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10286)
!10441 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10286)
!10442 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10286)
!10443 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10286)
!10444 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10286)
!10445 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10286)
!10446 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10286)
!10447 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10286)
!10448 = !DILocation(line: 199, column: 6, scope: !10164, inlinedAt: !10287)
!10449 = !DILocation(line: 200, column: 21, scope: !10162, inlinedAt: !10287)
!10450 = !DILocation(line: 200, column: 25, scope: !10162, inlinedAt: !10287)
!10451 = !DILocation(line: 200, column: 31, scope: !10162, inlinedAt: !10287)
!10452 = !DILocation(line: 200, column: 7, scope: !10162, inlinedAt: !10287)
!10453 = !DILocation(line: 200, column: 5, scope: !10162, inlinedAt: !10287)
!10454 = !DILocation(line: 200, column: 3, scope: !10162, inlinedAt: !10287)
!10455 = !DILocation(line: 201, column: 9, scope: !10164, inlinedAt: !10287)
!10456 = !DILocation(line: 1320, column: 6, scope: !10288)
!10457 = !DILocation(line: 1320, column: 6, scope: !10284)
!10458 = !DILocation(line: 1321, column: 3, scope: !10288)
!10459 = !DILocation(line: 1323, column: 2, scope: !10284)
!10460 = !DILocation(line: 1324, column: 1, scope: !10284)
!10461 = distinct !DISubprogram(name: "uart_set_iso7816_config", scope: !3, file: !3, line: 1345, type: !4344, scopeLine: 1347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10462 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10463)
!10463 = distinct !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 1372, column: 6, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1372, column: 6)
!10466 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10463)
!10467 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10463)
!10468 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10463)
!10469 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10463)
!10470 = !DILocation(line: 197, column: 27, scope: !10164, inlinedAt: !10464)
!10471 = !DILocation(line: 197, column: 43, scope: !10164, inlinedAt: !10464)
!10472 = !DILocation(line: 197, column: 63, scope: !10164, inlinedAt: !10464)
!10473 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10474)
!10474 = distinct !DILocation(line: 1368, column: 2, scope: !10461)
!10475 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10474)
!10476 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !10477)
!10477 = distinct !DILocation(line: 1366, column: 2, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 1366, column: 2)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 1366, column: 2)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1366, column: 2)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 1366, column: 2)
!10482 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1366, column: 2)
!10483 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10484)
!10484 = distinct !DILocation(line: 191, column: 6, scope: !10308, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 1355, column: 6, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1355, column: 6)
!10487 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10484)
!10488 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10484)
!10489 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10484)
!10490 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10484)
!10491 = !DILocation(line: 189, column: 22, scope: !10309, inlinedAt: !10485)
!10492 = !DILocation(line: 189, column: 45, scope: !10309, inlinedAt: !10485)
!10493 = !DILocation(line: 189, column: 65, scope: !10309, inlinedAt: !10485)
!10494 = !DILocalVariable(name: "port", arg: 1, scope: !10461, file: !3, line: 1345, type: !4276)
!10495 = !DILocation(line: 1345, column: 54, scope: !10461)
!10496 = !DILocalVariable(name: "iso7816_user", arg: 2, scope: !10461, file: !3, line: 1346, type: !4346)
!10497 = !DILocation(line: 1346, column: 38, scope: !10461)
!10498 = !DILocalVariable(name: "iso7816", scope: !10461, file: !3, line: 1348, type: !4347)
!10499 = !DILocation(line: 1348, column: 24, scope: !10461)
!10500 = !DILocalVariable(name: "i", scope: !10461, file: !3, line: 1349, type: !220)
!10501 = !DILocation(line: 1349, column: 6, scope: !10461)
!10502 = !DILocalVariable(name: "ret", scope: !10461, file: !3, line: 1349, type: !220)
!10503 = !DILocation(line: 1349, column: 9, scope: !10461)
!10504 = !DILocalVariable(name: "flags", scope: !10461, file: !3, line: 1350, type: !187)
!10505 = !DILocation(line: 1350, column: 16, scope: !10461)
!10506 = !DILocation(line: 1352, column: 7, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1352, column: 6)
!10508 = !DILocation(line: 1352, column: 13, scope: !10507)
!10509 = !DILocation(line: 1352, column: 6, scope: !10461)
!10510 = !DILocation(line: 1353, column: 3, scope: !10507)
!10511 = !DILocation(line: 1355, column: 21, scope: !10486)
!10512 = !DILocation(line: 1355, column: 31, scope: !10486)
!10513 = !DILocation(line: 191, column: 6, scope: !10308, inlinedAt: !10485)
!10514 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10484)
!10515 = !DILocation(line: 0, scope: !10235, inlinedAt: !10484)
!10516 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10484)
!10517 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10484)
!10518 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10484)
!10519 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10484)
!10520 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10484)
!10521 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10484)
!10522 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10484)
!10523 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10484)
!10524 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10484)
!10525 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10484)
!10526 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10484)
!10527 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10484)
!10528 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10484)
!10529 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10484)
!10530 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10484)
!10531 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10484)
!10532 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10484)
!10533 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10484)
!10534 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10484)
!10535 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10484)
!10536 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10484)
!10537 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10484)
!10538 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10484)
!10539 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10484)
!10540 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10484)
!10541 = !DILocation(line: 191, column: 6, scope: !10309, inlinedAt: !10485)
!10542 = !DILocation(line: 192, column: 23, scope: !10308, inlinedAt: !10485)
!10543 = !DILocation(line: 192, column: 27, scope: !10308, inlinedAt: !10485)
!10544 = !DILocation(line: 192, column: 33, scope: !10308, inlinedAt: !10485)
!10545 = !DILocation(line: 192, column: 7, scope: !10308, inlinedAt: !10485)
!10546 = !DILocation(line: 192, column: 5, scope: !10308, inlinedAt: !10485)
!10547 = !DILocation(line: 192, column: 3, scope: !10308, inlinedAt: !10485)
!10548 = !DILocation(line: 193, column: 9, scope: !10309, inlinedAt: !10485)
!10549 = !DILocation(line: 1355, column: 6, scope: !10486)
!10550 = !DILocation(line: 1355, column: 6, scope: !10461)
!10551 = !DILocation(line: 1356, column: 3, scope: !10486)
!10552 = !DILocation(line: 1362, column: 9, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1362, column: 2)
!10554 = !DILocation(line: 1362, column: 7, scope: !10553)
!10555 = !DILocation(line: 1362, column: 14, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 1362, column: 2)
!10557 = !DILocation(line: 1362, column: 16, scope: !10556)
!10558 = !DILocation(line: 1362, column: 2, scope: !10553)
!10559 = !DILocation(line: 1363, column: 15, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 1363, column: 7)
!10561 = !DILocation(line: 1363, column: 24, scope: !10560)
!10562 = !DILocation(line: 1363, column: 7, scope: !10560)
!10563 = !DILocation(line: 1363, column: 7, scope: !10556)
!10564 = !DILocation(line: 1364, column: 4, scope: !10560)
!10565 = !DILocation(line: 1363, column: 25, scope: !10560)
!10566 = !DILocation(line: 1362, column: 22, scope: !10556)
!10567 = !DILocation(line: 1362, column: 2, scope: !10556)
!10568 = distinct !{!10568, !10558, !10569}
!10569 = !DILocation(line: 1364, column: 12, scope: !10553)
!10570 = !DILocation(line: 1366, column: 2, scope: !10461)
!10571 = !DILocation(line: 1366, column: 2, scope: !10482)
!10572 = !DILocalVariable(name: "__dummy", scope: !10573, file: !3, line: 1366, type: !187)
!10573 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1366, column: 2)
!10574 = !DILocation(line: 1366, column: 2, scope: !10573)
!10575 = !DILocalVariable(name: "__dummy2", scope: !10573, file: !3, line: 1366, type: !187)
!10576 = !DILocation(line: 1366, column: 2, scope: !10481)
!10577 = !DILocation(line: 1366, column: 2, scope: !10480)
!10578 = !DILocation(line: 1366, column: 2, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 1366, column: 2)
!10580 = !DILocalVariable(name: "__dummy", scope: !10581, file: !3, line: 1366, type: !187)
!10581 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1366, column: 2)
!10582 = distinct !DILexicalBlock(scope: !10579, file: !3, line: 1366, column: 2)
!10583 = !DILocation(line: 1366, column: 2, scope: !10581)
!10584 = !DILocalVariable(name: "__dummy2", scope: !10581, file: !3, line: 1366, type: !187)
!10585 = !DILocation(line: 1366, column: 2, scope: !10582)
!10586 = !DILocation(line: 1366, column: 2, scope: !10479)
!10587 = !{i32 -2141527855}
!10588 = !DILocation(line: 1366, column: 2, scope: !10478)
!10589 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !10477)
!10590 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !10477)
!10591 = !DILocation(line: 1367, column: 8, scope: !10461)
!10592 = !DILocation(line: 1367, column: 14, scope: !10461)
!10593 = !DILocation(line: 1367, column: 29, scope: !10461)
!10594 = !DILocation(line: 1367, column: 6, scope: !10461)
!10595 = !DILocation(line: 1368, column: 26, scope: !10461)
!10596 = !DILocation(line: 1368, column: 32, scope: !10461)
!10597 = !DILocation(line: 1368, column: 38, scope: !10461)
!10598 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10474)
!10599 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10474)
!10600 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10474)
!10601 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10474)
!10602 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10474)
!10603 = !DILocation(line: 1369, column: 6, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1369, column: 6)
!10605 = !DILocation(line: 1369, column: 6, scope: !10461)
!10606 = !DILocation(line: 1370, column: 10, scope: !10604)
!10607 = !DILocation(line: 1370, column: 3, scope: !10604)
!10608 = !DILocation(line: 1372, column: 19, scope: !10465)
!10609 = !DILocation(line: 1372, column: 34, scope: !10465)
!10610 = !DILocation(line: 1372, column: 40, scope: !10465)
!10611 = !DILocation(line: 1372, column: 33, scope: !10465)
!10612 = !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10464)
!10613 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10463)
!10614 = !DILocation(line: 0, scope: !10235, inlinedAt: !10463)
!10615 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10463)
!10616 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10463)
!10617 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10463)
!10618 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10463)
!10619 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10463)
!10620 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10463)
!10621 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10463)
!10622 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10463)
!10623 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10463)
!10624 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10463)
!10625 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10463)
!10626 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10463)
!10627 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10463)
!10628 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10463)
!10629 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10463)
!10630 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10463)
!10631 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10463)
!10632 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10463)
!10633 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10463)
!10634 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10463)
!10635 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10463)
!10636 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10463)
!10637 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10463)
!10638 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10463)
!10639 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10463)
!10640 = !DILocation(line: 199, column: 6, scope: !10164, inlinedAt: !10464)
!10641 = !DILocation(line: 200, column: 21, scope: !10162, inlinedAt: !10464)
!10642 = !DILocation(line: 200, column: 25, scope: !10162, inlinedAt: !10464)
!10643 = !DILocation(line: 200, column: 31, scope: !10162, inlinedAt: !10464)
!10644 = !DILocation(line: 200, column: 7, scope: !10162, inlinedAt: !10464)
!10645 = !DILocation(line: 200, column: 5, scope: !10162, inlinedAt: !10464)
!10646 = !DILocation(line: 200, column: 3, scope: !10162, inlinedAt: !10464)
!10647 = !DILocation(line: 201, column: 9, scope: !10164, inlinedAt: !10464)
!10648 = !DILocation(line: 1372, column: 6, scope: !10465)
!10649 = !DILocation(line: 1372, column: 6, scope: !10461)
!10650 = !DILocation(line: 1373, column: 3, scope: !10465)
!10651 = !DILocation(line: 1375, column: 2, scope: !10461)
!10652 = !DILocation(line: 1376, column: 1, scope: !10461)
!10653 = distinct !DISubprogram(name: "uart_get_iso7816_config", scope: !3, file: !3, line: 1326, type: !4344, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10654 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10655)
!10655 = distinct !DILocation(line: 1337, column: 2, scope: !10653)
!10656 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10655)
!10657 = !DILocation(line: 138, column: 29, scope: !10156, inlinedAt: !10658)
!10658 = distinct !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10659)
!10659 = distinct !DILocation(line: 1339, column: 6, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1339, column: 6)
!10661 = !DILocation(line: 138, column: 42, scope: !10156, inlinedAt: !10658)
!10662 = !DILocation(line: 138, column: 54, scope: !10156, inlinedAt: !10658)
!10663 = !DILocation(line: 140, column: 6, scope: !10156, inlinedAt: !10658)
!10664 = !DILocation(line: 150, column: 6, scope: !10176, inlinedAt: !10658)
!10665 = !DILocation(line: 197, column: 27, scope: !10164, inlinedAt: !10659)
!10666 = !DILocation(line: 197, column: 43, scope: !10164, inlinedAt: !10659)
!10667 = !DILocation(line: 197, column: 63, scope: !10164, inlinedAt: !10659)
!10668 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !10669)
!10669 = distinct !DILocation(line: 1335, column: 2, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 1335, column: 2)
!10671 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1335, column: 2)
!10672 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 1335, column: 2)
!10673 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 1335, column: 2)
!10674 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1335, column: 2)
!10675 = !DILocalVariable(name: "port", arg: 1, scope: !10653, file: !3, line: 1326, type: !4276)
!10676 = !DILocation(line: 1326, column: 54, scope: !10653)
!10677 = !DILocalVariable(name: "iso7816", arg: 2, scope: !10653, file: !3, line: 1327, type: !4346)
!10678 = !DILocation(line: 1327, column: 38, scope: !10653)
!10679 = !DILocalVariable(name: "flags", scope: !10653, file: !3, line: 1329, type: !187)
!10680 = !DILocation(line: 1329, column: 16, scope: !10653)
!10681 = !DILocalVariable(name: "aux", scope: !10653, file: !3, line: 1330, type: !4347)
!10682 = !DILocation(line: 1330, column: 24, scope: !10653)
!10683 = !DILocation(line: 1332, column: 7, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1332, column: 6)
!10685 = !DILocation(line: 1332, column: 13, scope: !10684)
!10686 = !DILocation(line: 1332, column: 6, scope: !10653)
!10687 = !DILocation(line: 1333, column: 3, scope: !10684)
!10688 = !DILocation(line: 1335, column: 2, scope: !10653)
!10689 = !DILocation(line: 1335, column: 2, scope: !10674)
!10690 = !DILocalVariable(name: "__dummy", scope: !10691, file: !3, line: 1335, type: !187)
!10691 = distinct !DILexicalBlock(scope: !10673, file: !3, line: 1335, column: 2)
!10692 = !DILocation(line: 1335, column: 2, scope: !10691)
!10693 = !DILocalVariable(name: "__dummy2", scope: !10691, file: !3, line: 1335, type: !187)
!10694 = !DILocation(line: 1335, column: 2, scope: !10673)
!10695 = !DILocation(line: 1335, column: 2, scope: !10672)
!10696 = !DILocation(line: 1335, column: 2, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1335, column: 2)
!10698 = !DILocalVariable(name: "__dummy", scope: !10699, file: !3, line: 1335, type: !187)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 1335, column: 2)
!10700 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1335, column: 2)
!10701 = !DILocation(line: 1335, column: 2, scope: !10699)
!10702 = !DILocalVariable(name: "__dummy2", scope: !10699, file: !3, line: 1335, type: !187)
!10703 = !DILocation(line: 1335, column: 2, scope: !10700)
!10704 = !DILocation(line: 1335, column: 2, scope: !10671)
!10705 = !{i32 -2141528887}
!10706 = !DILocation(line: 1335, column: 2, scope: !10670)
!10707 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !10669)
!10708 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !10669)
!10709 = !DILocation(line: 1336, column: 8, scope: !10653)
!10710 = !DILocation(line: 1336, column: 14, scope: !10653)
!10711 = !DILocation(line: 1337, column: 26, scope: !10653)
!10712 = !DILocation(line: 1337, column: 32, scope: !10653)
!10713 = !DILocation(line: 1337, column: 38, scope: !10653)
!10714 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10655)
!10715 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10655)
!10716 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10655)
!10717 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10655)
!10718 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10655)
!10719 = !DILocation(line: 1339, column: 19, scope: !10660)
!10720 = !DILocation(line: 1339, column: 28, scope: !10660)
!10721 = !DILocation(line: 199, column: 6, scope: !10162, inlinedAt: !10659)
!10722 = !DILocation(line: 141, column: 6, scope: !10235, inlinedAt: !10658)
!10723 = !DILocation(line: 0, scope: !10235, inlinedAt: !10658)
!10724 = !DILocation(line: 141, column: 6, scope: !10156, inlinedAt: !10658)
!10725 = !DILocation(line: 142, column: 29, scope: !10239, inlinedAt: !10658)
!10726 = !DILocation(line: 142, column: 8, scope: !10239, inlinedAt: !10658)
!10727 = !DILocation(line: 142, column: 7, scope: !10240, inlinedAt: !10658)
!10728 = !DILocation(line: 143, column: 18, scope: !10239, inlinedAt: !10658)
!10729 = !DILocation(line: 143, column: 22, scope: !10239, inlinedAt: !10658)
!10730 = !DILocation(line: 143, column: 4, scope: !10239, inlinedAt: !10658)
!10731 = !DILocation(line: 144, column: 12, scope: !10247, inlinedAt: !10658)
!10732 = !DILocation(line: 144, column: 12, scope: !10239, inlinedAt: !10658)
!10733 = !DILocation(line: 145, column: 4, scope: !10247, inlinedAt: !10658)
!10734 = !DILocation(line: 147, column: 4, scope: !10247, inlinedAt: !10658)
!10735 = !DILocation(line: 148, column: 3, scope: !10240, inlinedAt: !10658)
!10736 = !DILocation(line: 150, column: 6, scope: !10253, inlinedAt: !10658)
!10737 = !DILocation(line: 150, column: 6, scope: !10255, inlinedAt: !10658)
!10738 = !DILocation(line: 150, column: 6, scope: !10259, inlinedAt: !10658)
!10739 = !DILocation(line: 150, column: 6, scope: !10256, inlinedAt: !10658)
!10740 = !DILocation(line: 150, column: 6, scope: !10177, inlinedAt: !10658)
!10741 = !DILocation(line: 150, column: 6, scope: !10156, inlinedAt: !10658)
!10742 = !DILocation(line: 151, column: 3, scope: !10177, inlinedAt: !10658)
!10743 = !DILocation(line: 152, column: 20, scope: !10156, inlinedAt: !10658)
!10744 = !DILocation(line: 152, column: 26, scope: !10156, inlinedAt: !10658)
!10745 = !DILocation(line: 152, column: 33, scope: !10156, inlinedAt: !10658)
!10746 = !DILocation(line: 152, column: 2, scope: !10156, inlinedAt: !10658)
!10747 = !DILocation(line: 153, column: 2, scope: !10156, inlinedAt: !10658)
!10748 = !DILocation(line: 154, column: 1, scope: !10156, inlinedAt: !10658)
!10749 = !DILocation(line: 199, column: 6, scope: !10164, inlinedAt: !10659)
!10750 = !DILocation(line: 200, column: 21, scope: !10162, inlinedAt: !10659)
!10751 = !DILocation(line: 200, column: 25, scope: !10162, inlinedAt: !10659)
!10752 = !DILocation(line: 200, column: 31, scope: !10162, inlinedAt: !10659)
!10753 = !DILocation(line: 200, column: 7, scope: !10162, inlinedAt: !10659)
!10754 = !DILocation(line: 200, column: 5, scope: !10162, inlinedAt: !10659)
!10755 = !DILocation(line: 200, column: 3, scope: !10162, inlinedAt: !10659)
!10756 = !DILocation(line: 201, column: 9, scope: !10164, inlinedAt: !10659)
!10757 = !DILocation(line: 1339, column: 6, scope: !10660)
!10758 = !DILocation(line: 1339, column: 6, scope: !10653)
!10759 = !DILocation(line: 1340, column: 3, scope: !10660)
!10760 = !DILocation(line: 1342, column: 2, scope: !10653)
!10761 = !DILocation(line: 1343, column: 1, scope: !10653)
!10762 = distinct !DISubprogram(name: "tty_port_users", scope: !200, file: !200, line: 709, type: !4223, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10763 = !DILocalVariable(name: "port", arg: 1, scope: !10762, file: !200, line: 709, type: !3947)
!10764 = !DILocation(line: 709, column: 51, scope: !10762)
!10765 = !DILocation(line: 711, column: 9, scope: !10762)
!10766 = !DILocation(line: 711, column: 15, scope: !10762)
!10767 = !DILocation(line: 711, column: 23, scope: !10762)
!10768 = !DILocation(line: 711, column: 29, scope: !10762)
!10769 = !DILocation(line: 711, column: 21, scope: !10762)
!10770 = !DILocation(line: 711, column: 2, scope: !10762)
!10771 = distinct !DISubprogram(name: "uart_startup", scope: !3, file: !3, line: 251, type: !10772, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!220, !293, !195, !220}
!10774 = !DILocalVariable(name: "tty", arg: 1, scope: !10771, file: !3, line: 251, type: !293)
!10775 = !DILocation(line: 251, column: 44, scope: !10771)
!10776 = !DILocalVariable(name: "state", arg: 2, scope: !10771, file: !3, line: 251, type: !195)
!10777 = !DILocation(line: 251, column: 68, scope: !10771)
!10778 = !DILocalVariable(name: "init_hw", arg: 3, scope: !10771, file: !3, line: 252, type: !220)
!10779 = !DILocation(line: 252, column: 7, scope: !10771)
!10780 = !DILocalVariable(name: "port", scope: !10771, file: !3, line: 254, type: !3947)
!10781 = !DILocation(line: 254, column: 19, scope: !10771)
!10782 = !DILocation(line: 254, column: 27, scope: !10771)
!10783 = !DILocation(line: 254, column: 34, scope: !10771)
!10784 = !DILocalVariable(name: "retval", scope: !10771, file: !3, line: 255, type: !220)
!10785 = !DILocation(line: 255, column: 6, scope: !10771)
!10786 = !DILocation(line: 257, column: 27, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 257, column: 6)
!10788 = !DILocation(line: 257, column: 6, scope: !10787)
!10789 = !DILocation(line: 257, column: 6, scope: !10771)
!10790 = !DILocation(line: 258, column: 3, scope: !10787)
!10791 = !DILocation(line: 260, column: 29, scope: !10771)
!10792 = !DILocation(line: 260, column: 34, scope: !10771)
!10793 = !DILocation(line: 260, column: 41, scope: !10771)
!10794 = !DILocation(line: 260, column: 11, scope: !10771)
!10795 = !DILocation(line: 260, column: 9, scope: !10771)
!10796 = !DILocation(line: 261, column: 6, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 261, column: 6)
!10798 = !DILocation(line: 261, column: 6, scope: !10771)
!10799 = !DILocation(line: 262, column: 26, scope: !10797)
!10800 = !DILocation(line: 262, column: 31, scope: !10797)
!10801 = !DILocation(line: 262, column: 3, scope: !10797)
!10802 = !DILocation(line: 264, column: 9, scope: !10771)
!10803 = !DILocation(line: 264, column: 2, scope: !10771)
!10804 = !DILocation(line: 265, column: 1, scope: !10771)
!10805 = distinct !DISubprogram(name: "uart_port_startup", scope: !3, file: !3, line: 183, type: !10772, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10806 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10807)
!10807 = distinct !DILocation(line: 213, column: 3, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10809, file: !3, line: 213, column: 3)
!10809 = distinct !DILexicalBlock(scope: !10810, file: !3, line: 213, column: 3)
!10810 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 213, column: 3)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 212, column: 9)
!10812 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 208, column: 6)
!10813 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10807)
!10814 = !DILocation(line: 407, column: 64, scope: !5560, inlinedAt: !10815)
!10815 = distinct !DILocation(line: 211, column: 3, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 211, column: 3)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 211, column: 3)
!10818 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 211, column: 3)
!10819 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 208, column: 24)
!10820 = !DILocation(line: 407, column: 84, scope: !5560, inlinedAt: !10815)
!10821 = !DILocation(line: 327, column: 67, scope: !5571, inlinedAt: !10822)
!10822 = distinct !DILocation(line: 207, column: 2, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 207, column: 2)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 207, column: 2)
!10825 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 207, column: 2)
!10826 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 207, column: 2)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !3, line: 207, column: 2)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 207, column: 2)
!10829 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 207, column: 2)
!10830 = !DILocalVariable(name: "tty", arg: 1, scope: !10805, file: !3, line: 183, type: !293)
!10831 = !DILocation(line: 183, column: 49, scope: !10805)
!10832 = !DILocalVariable(name: "state", arg: 2, scope: !10805, file: !3, line: 183, type: !195)
!10833 = !DILocation(line: 183, column: 73, scope: !10805)
!10834 = !DILocalVariable(name: "init_hw", arg: 3, scope: !10805, file: !3, line: 184, type: !220)
!10835 = !DILocation(line: 184, column: 7, scope: !10805)
!10836 = !DILocalVariable(name: "uport", scope: !10805, file: !3, line: 186, type: !4276)
!10837 = !DILocation(line: 186, column: 20, scope: !10805)
!10838 = !DILocation(line: 186, column: 44, scope: !10805)
!10839 = !DILocation(line: 186, column: 28, scope: !10805)
!10840 = !DILocalVariable(name: "page", scope: !10805, file: !3, line: 187, type: !187)
!10841 = !DILocation(line: 187, column: 16, scope: !10805)
!10842 = !DILocalVariable(name: "flags", scope: !10805, file: !3, line: 188, type: !187)
!10843 = !DILocation(line: 188, column: 16, scope: !10805)
!10844 = !DILocalVariable(name: "retval", scope: !10805, file: !3, line: 189, type: !220)
!10845 = !DILocation(line: 189, column: 6, scope: !10805)
!10846 = !DILocation(line: 191, column: 6, scope: !10847)
!10847 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 191, column: 6)
!10848 = !DILocation(line: 191, column: 13, scope: !10847)
!10849 = !DILocation(line: 191, column: 18, scope: !10847)
!10850 = !DILocation(line: 191, column: 6, scope: !10805)
!10851 = !DILocation(line: 192, column: 3, scope: !10847)
!10852 = !DILocation(line: 197, column: 17, scope: !10805)
!10853 = !DILocation(line: 197, column: 2, scope: !10805)
!10854 = !DILocation(line: 203, column: 9, scope: !10805)
!10855 = !DILocation(line: 203, column: 7, scope: !10805)
!10856 = !DILocation(line: 204, column: 7, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 204, column: 6)
!10858 = !DILocation(line: 204, column: 6, scope: !10805)
!10859 = !DILocation(line: 205, column: 3, scope: !10857)
!10860 = !DILocalVariable(name: "__uport", scope: !10829, file: !3, line: 207, type: !4276)
!10861 = !DILocation(line: 207, column: 2, scope: !10829)
!10862 = !DILocation(line: 207, column: 2, scope: !10828)
!10863 = !DILocation(line: 207, column: 2, scope: !10827)
!10864 = !DILocalVariable(name: "__dummy", scope: !10865, file: !3, line: 207, type: !187)
!10865 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 207, column: 2)
!10866 = !DILocation(line: 207, column: 2, scope: !10865)
!10867 = !DILocalVariable(name: "__dummy2", scope: !10865, file: !3, line: 207, type: !187)
!10868 = !DILocation(line: 207, column: 2, scope: !10826)
!10869 = !DILocation(line: 207, column: 2, scope: !10825)
!10870 = !DILocation(line: 207, column: 2, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 207, column: 2)
!10872 = !DILocalVariable(name: "__dummy", scope: !10873, file: !3, line: 207, type: !187)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 207, column: 2)
!10874 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 207, column: 2)
!10875 = !DILocation(line: 207, column: 2, scope: !10873)
!10876 = !DILocalVariable(name: "__dummy2", scope: !10873, file: !3, line: 207, type: !187)
!10877 = !DILocation(line: 207, column: 2, scope: !10874)
!10878 = !DILocation(line: 207, column: 2, scope: !10824)
!10879 = !{i32 -2141558463}
!10880 = !DILocation(line: 207, column: 2, scope: !10823)
!10881 = !DILocation(line: 329, column: 10, scope: !5571, inlinedAt: !10822)
!10882 = !DILocation(line: 329, column: 16, scope: !5571, inlinedAt: !10822)
!10883 = !DILocation(line: 208, column: 7, scope: !10812)
!10884 = !DILocation(line: 208, column: 14, scope: !10812)
!10885 = !DILocation(line: 208, column: 19, scope: !10812)
!10886 = !DILocation(line: 208, column: 6, scope: !10805)
!10887 = !DILocation(line: 209, column: 39, scope: !10819)
!10888 = !DILocation(line: 209, column: 21, scope: !10819)
!10889 = !DILocation(line: 209, column: 3, scope: !10819)
!10890 = !DILocation(line: 209, column: 10, scope: !10819)
!10891 = !DILocation(line: 209, column: 15, scope: !10819)
!10892 = !DILocation(line: 209, column: 19, scope: !10819)
!10893 = !DILocation(line: 210, column: 3, scope: !10819)
!10894 = !DILocalVariable(name: "__uport", scope: !10818, file: !3, line: 211, type: !4276)
!10895 = !DILocation(line: 211, column: 3, scope: !10818)
!10896 = !DILocation(line: 211, column: 3, scope: !10817)
!10897 = !DILocation(line: 211, column: 3, scope: !10816)
!10898 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10815)
!10899 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10815)
!10900 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10815)
!10901 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10815)
!10902 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10815)
!10903 = !DILocation(line: 212, column: 2, scope: !10819)
!10904 = !DILocalVariable(name: "__uport", scope: !10810, file: !3, line: 213, type: !4276)
!10905 = !DILocation(line: 213, column: 3, scope: !10810)
!10906 = !DILocation(line: 213, column: 3, scope: !10809)
!10907 = !DILocation(line: 213, column: 3, scope: !10808)
!10908 = !DILocation(line: 409, column: 2, scope: !5677, inlinedAt: !10807)
!10909 = !DILocation(line: 409, column: 2, scope: !5682, inlinedAt: !10807)
!10910 = !DILocation(line: 409, column: 2, scope: !5683, inlinedAt: !10807)
!10911 = !DILocation(line: 409, column: 2, scope: !5690, inlinedAt: !10807)
!10912 = !DILocation(line: 409, column: 2, scope: !5693, inlinedAt: !10807)
!10913 = !DILocation(line: 218, column: 3, scope: !10811)
!10914 = !DILocation(line: 221, column: 11, scope: !10805)
!10915 = !DILocation(line: 221, column: 18, scope: !10805)
!10916 = !DILocation(line: 221, column: 23, scope: !10805)
!10917 = !DILocation(line: 221, column: 31, scope: !10805)
!10918 = !DILocation(line: 221, column: 9, scope: !10805)
!10919 = !DILocation(line: 222, column: 6, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 222, column: 6)
!10921 = !DILocation(line: 222, column: 13, scope: !10920)
!10922 = !DILocation(line: 222, column: 6, scope: !10805)
!10923 = !DILocation(line: 223, column: 7, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 223, column: 7)
!10925 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 223, column: 7)
!10926 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 222, column: 19)
!10927 = !DILocation(line: 223, column: 7, scope: !10925)
!10928 = !DILocation(line: 223, column: 27, scope: !10925)
!10929 = !DILocation(line: 223, column: 30, scope: !10925)
!10930 = !DILocation(line: 223, column: 37, scope: !10925)
!10931 = !DILocation(line: 223, column: 43, scope: !10925)
!10932 = !DILocation(line: 223, column: 7, scope: !10926)
!10933 = !DILocation(line: 224, column: 27, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10925, file: !3, line: 223, column: 50)
!10935 = !DILocation(line: 224, column: 34, scope: !10934)
!10936 = !DILocation(line: 224, column: 40, scope: !10934)
!10937 = !DILocation(line: 224, column: 4, scope: !10934)
!10938 = !DILocation(line: 224, column: 9, scope: !10934)
!10939 = !DILocation(line: 224, column: 17, scope: !10934)
!10940 = !DILocation(line: 224, column: 25, scope: !10934)
!10941 = !DILocation(line: 225, column: 4, scope: !10934)
!10942 = !DILocation(line: 225, column: 11, scope: !10934)
!10943 = !DILocation(line: 225, column: 17, scope: !10934)
!10944 = !DILocation(line: 225, column: 23, scope: !10934)
!10945 = !DILocation(line: 226, column: 3, scope: !10934)
!10946 = !DILocation(line: 230, column: 21, scope: !10926)
!10947 = !DILocation(line: 230, column: 26, scope: !10926)
!10948 = !DILocation(line: 230, column: 3, scope: !10926)
!10949 = !DILocation(line: 236, column: 7, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10926, file: !3, line: 236, column: 7)
!10951 = !DILocation(line: 236, column: 15, scope: !10950)
!10952 = !DILocation(line: 236, column: 18, scope: !10950)
!10953 = !DILocation(line: 236, column: 7, scope: !10926)
!10954 = !DILocation(line: 237, column: 22, scope: !10950)
!10955 = !DILocation(line: 237, column: 4, scope: !10950)
!10956 = !DILocation(line: 238, column: 2, scope: !10926)
!10957 = !DILocation(line: 245, column: 6, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 245, column: 6)
!10959 = !DILocation(line: 245, column: 13, scope: !10958)
!10960 = !DILocation(line: 245, column: 16, scope: !10958)
!10961 = !DILocation(line: 245, column: 6, scope: !10805)
!10962 = !DILocation(line: 246, column: 3, scope: !10958)
!10963 = !DILocation(line: 248, column: 9, scope: !10805)
!10964 = !DILocation(line: 248, column: 2, scope: !10805)
!10965 = !DILocation(line: 249, column: 1, scope: !10805)
!10966 = distinct !DISubprogram(name: "uart_enable_ms", scope: !3, file: !3, line: 1179, type: !4320, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10967 = !DILocalVariable(name: "uport", arg: 1, scope: !10966, file: !3, line: 1179, type: !4276)
!10968 = !DILocation(line: 1179, column: 46, scope: !10966)
!10969 = !DILocation(line: 1184, column: 6, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10966, file: !3, line: 1184, column: 6)
!10971 = !DILocation(line: 1184, column: 13, scope: !10970)
!10972 = !DILocation(line: 1184, column: 18, scope: !10970)
!10973 = !DILocation(line: 1184, column: 6, scope: !10966)
!10974 = !DILocation(line: 1185, column: 3, scope: !10970)
!10975 = !DILocation(line: 1185, column: 10, scope: !10970)
!10976 = !DILocation(line: 1185, column: 15, scope: !10970)
!10977 = !DILocation(line: 1185, column: 25, scope: !10970)
!10978 = !DILocation(line: 1186, column: 1, scope: !10966)
!10979 = distinct !DISubprogram(name: "signal_pending", scope: !1841, file: !1841, line: 356, type: !10980, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10980 = !DISubroutineType(types: !10981)
!10981 = !{!220, !1307}
!10982 = !DILocalVariable(name: "p", arg: 1, scope: !10979, file: !1841, line: 356, type: !1307)
!10983 = !DILocation(line: 356, column: 54, scope: !10979)
!10984 = !DILocation(line: 358, column: 9, scope: !10979)
!10985 = !DILocation(line: 358, column: 2, scope: !10979)
!10986 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !1309, file: !1309, line: 1828, type: !10987, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10987 = !DISubroutineType(types: !10988)
!10988 = !{!220, !1307, !220}
!10989 = !DILocalVariable(name: "tsk", arg: 1, scope: !10986, file: !1309, line: 1828, type: !1307)
!10990 = !DILocation(line: 1828, column: 60, scope: !10986)
!10991 = !DILocalVariable(name: "flag", arg: 2, scope: !10986, file: !1309, line: 1828, type: !220)
!10992 = !DILocation(line: 1828, column: 69, scope: !10986)
!10993 = !DILocation(line: 1830, column: 46, scope: !10986)
!10994 = !DILocation(line: 1830, column: 29, scope: !10986)
!10995 = !DILocation(line: 1830, column: 52, scope: !10986)
!10996 = !DILocation(line: 1830, column: 9, scope: !10986)
!10997 = !DILocation(line: 1830, column: 2, scope: !10986)
!10998 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !10157, file: !10157, line: 82, type: !10999, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!220, !11001, !220}
!11001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!11002 = !DILocalVariable(name: "ti", arg: 1, scope: !10998, file: !10157, line: 82, type: !11001)
!11003 = !DILocation(line: 82, column: 59, scope: !10998)
!11004 = !DILocalVariable(name: "flag", arg: 2, scope: !10998, file: !10157, line: 82, type: !220)
!11005 = !DILocation(line: 82, column: 67, scope: !10998)
!11006 = !DILocation(line: 84, column: 18, scope: !10998)
!11007 = !DILocation(line: 84, column: 42, scope: !10998)
!11008 = !DILocation(line: 84, column: 46, scope: !10998)
!11009 = !DILocation(line: 84, column: 9, scope: !10998)
!11010 = !DILocation(line: 84, column: 2, scope: !10998)
!11011 = distinct !DISubprogram(name: "task_thread_info", scope: !1309, file: !1309, line: 1729, type: !11012, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11012 = !DISubroutineType(types: !11013)
!11013 = !{!11001, !1307}
!11014 = !DILocalVariable(name: "task", arg: 1, scope: !11011, file: !1309, line: 1729, type: !1307)
!11015 = !DILocation(line: 1729, column: 72, scope: !11011)
!11016 = !DILocation(line: 1731, column: 10, scope: !11011)
!11017 = !DILocation(line: 1731, column: 16, scope: !11011)
!11018 = !DILocation(line: 1731, column: 2, scope: !11011)
!11019 = distinct !DISubprogram(name: "might_fault", scope: !11020, file: !11020, line: 315, type: !1963, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11020 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!11021 = !DILocation(line: 315, column: 40, scope: !11019)
!11022 = distinct !DISubprogram(name: "copy_overflow", scope: !10157, file: !10157, line: 132, type: !11023, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11023 = !DISubroutineType(types: !11024)
!11024 = !{null, !220, !187}
!11025 = !DILocalVariable(name: "size", arg: 1, scope: !11022, file: !10157, line: 132, type: !220)
!11026 = !DILocation(line: 132, column: 38, scope: !11022)
!11027 = !DILocalVariable(name: "count", arg: 2, scope: !11022, file: !10157, line: 132, type: !187)
!11028 = !DILocation(line: 132, column: 58, scope: !11022)
!11029 = !DILocalVariable(name: "__ret_warn_on", scope: !11030, file: !10157, line: 134, type: !220)
!11030 = distinct !DILexicalBlock(scope: !11022, file: !10157, line: 134, column: 2)
!11031 = !DILocation(line: 134, column: 2, scope: !11030)
!11032 = !DILocation(line: 134, column: 2, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11030, file: !10157, line: 134, column: 2)
!11034 = !DILocation(line: 134, column: 2, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11033, file: !10157, line: 134, column: 2)
!11036 = !DILocation(line: 134, column: 2, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11035, file: !10157, line: 134, column: 2)
!11038 = !DILocation(line: 134, column: 2, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11035, file: !10157, line: 134, column: 2)
!11040 = !DILocation(line: 134, column: 2, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11039, file: !10157, line: 134, column: 2)
!11042 = !DILocation(line: 134, column: 2, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11039, file: !10157, line: 134, column: 2)
!11044 = !{i32 -2145480537, i32 -2145480508, i32 -2145480462, i32 -2145480404, i32 -2145480350, i32 -2145480296, i32 -2145480241, i32 -2145480210}
!11045 = !DILocation(line: 134, column: 2, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11039, file: !10157, line: 134, column: 2)
!11047 = !{i32 -2145479790, i32 -2145479783, i32 -2145479731, i32 -2145479700, i32 -2145479670}
!11048 = !DILocation(line: 134, column: 2, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !11039, file: !10157, line: 134, column: 2)
!11050 = !DILocation(line: 134, column: 2, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11035, file: !10157, line: 134, column: 2)
!11052 = !DILocation(line: 135, column: 1, scope: !11022)
!11053 = distinct !DISubprogram(name: "check_object_size", scope: !10157, file: !10157, line: 122, type: !11054, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11054 = !DISubroutineType(types: !11055)
!11055 = !{null, !2201, !187, !560}
!11056 = !DILocalVariable(name: "ptr", arg: 1, scope: !11053, file: !10157, line: 122, type: !2201)
!11057 = !DILocation(line: 122, column: 50, scope: !11053)
!11058 = !DILocalVariable(name: "n", arg: 2, scope: !11053, file: !10157, line: 122, type: !187)
!11059 = !DILocation(line: 122, column: 69, scope: !11053)
!11060 = !DILocalVariable(name: "to_user", arg: 3, scope: !11053, file: !10157, line: 123, type: !560)
!11061 = !DILocation(line: 123, column: 15, scope: !11053)
!11062 = !DILocation(line: 124, column: 3, scope: !11053)
!11063 = distinct !DISubprogram(name: "tty_throttled", scope: !200, file: !200, line: 404, type: !9951, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11064 = !DILocalVariable(name: "tty", arg: 1, scope: !11063, file: !200, line: 404, type: !293)
!11065 = !DILocation(line: 404, column: 53, scope: !11063)
!11066 = !DILocation(line: 406, column: 34, scope: !11063)
!11067 = !DILocation(line: 406, column: 39, scope: !11063)
!11068 = !DILocation(line: 406, column: 9, scope: !11063)
!11069 = !DILocation(line: 406, column: 2, scope: !11063)
!11070 = distinct !DISubprogram(name: "tty_port_active", scope: !200, file: !200, line: 625, type: !5055, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11071 = !DILocalVariable(name: "port", arg: 1, scope: !11070, file: !200, line: 625, type: !3947)
!11072 = !DILocation(line: 625, column: 53, scope: !11070)
!11073 = !DILocation(line: 627, column: 36, scope: !11070)
!11074 = !DILocation(line: 627, column: 42, scope: !11070)
!11075 = !DILocation(line: 627, column: 9, scope: !11070)
!11076 = !DILocation(line: 627, column: 2, scope: !11070)
!11077 = distinct !DISubprogram(name: "tty_port_set_active", scope: !200, file: !200, line: 630, type: !5064, scopeLine: 631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11078 = !DILocalVariable(name: "port", arg: 1, scope: !11077, file: !200, line: 630, type: !3947)
!11079 = !DILocation(line: 630, column: 57, scope: !11077)
!11080 = !DILocalVariable(name: "val", arg: 2, scope: !11077, file: !200, line: 630, type: !560)
!11081 = !DILocation(line: 630, column: 68, scope: !11077)
!11082 = !DILocation(line: 632, column: 6, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11077, file: !200, line: 632, column: 6)
!11084 = !DILocation(line: 632, column: 6, scope: !11077)
!11085 = !DILocation(line: 633, column: 29, scope: !11083)
!11086 = !DILocation(line: 633, column: 35, scope: !11083)
!11087 = !DILocation(line: 633, column: 3, scope: !11083)
!11088 = !DILocation(line: 635, column: 31, scope: !11083)
!11089 = !DILocation(line: 635, column: 37, scope: !11083)
!11090 = !DILocation(line: 635, column: 3, scope: !11083)
!11091 = !DILocation(line: 636, column: 1, scope: !11077)
!11092 = distinct !DISubprogram(name: "uart_get_info", scope: !3, file: !3, line: 756, type: !11093, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11093 = !DISubroutineType(types: !11094)
!11094 = !{!220, !3947, !4084}
!11095 = !DILocalVariable(name: "port", arg: 1, scope: !11092, file: !3, line: 756, type: !3947)
!11096 = !DILocation(line: 756, column: 43, scope: !11092)
!11097 = !DILocalVariable(name: "retinfo", arg: 2, scope: !11092, file: !3, line: 756, type: !4084)
!11098 = !DILocation(line: 756, column: 71, scope: !11092)
!11099 = !DILocalVariable(name: "state", scope: !11092, file: !3, line: 758, type: !195)
!11100 = !DILocation(line: 758, column: 21, scope: !11092)
!11101 = !DILocalVariable(name: "__mptr", scope: !11102, file: !3, line: 758, type: !185)
!11102 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 758, column: 29)
!11103 = !DILocation(line: 758, column: 29, scope: !11102)
!11104 = !DILocation(line: 758, column: 29, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 758, column: 29)
!11106 = !DILocalVariable(name: "uport", scope: !11092, file: !3, line: 759, type: !4276)
!11107 = !DILocation(line: 759, column: 20, scope: !11092)
!11108 = !DILocalVariable(name: "ret", scope: !11092, file: !3, line: 760, type: !220)
!11109 = !DILocation(line: 760, column: 6, scope: !11092)
!11110 = !DILocation(line: 762, column: 9, scope: !11092)
!11111 = !DILocation(line: 762, column: 2, scope: !11092)
!11112 = !DILocation(line: 768, column: 14, scope: !11092)
!11113 = !DILocation(line: 768, column: 20, scope: !11092)
!11114 = !DILocation(line: 768, column: 2, scope: !11092)
!11115 = !DILocation(line: 769, column: 26, scope: !11092)
!11116 = !DILocation(line: 769, column: 10, scope: !11092)
!11117 = !DILocation(line: 769, column: 8, scope: !11092)
!11118 = !DILocation(line: 770, column: 7, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 770, column: 6)
!11120 = !DILocation(line: 770, column: 6, scope: !11092)
!11121 = !DILocation(line: 771, column: 3, scope: !11119)
!11122 = !DILocation(line: 773, column: 22, scope: !11092)
!11123 = !DILocation(line: 773, column: 29, scope: !11092)
!11124 = !DILocation(line: 773, column: 2, scope: !11092)
!11125 = !DILocation(line: 773, column: 11, scope: !11092)
!11126 = !DILocation(line: 773, column: 20, scope: !11092)
!11127 = !DILocation(line: 774, column: 22, scope: !11092)
!11128 = !DILocation(line: 774, column: 29, scope: !11092)
!11129 = !DILocation(line: 774, column: 2, scope: !11092)
!11130 = !DILocation(line: 774, column: 11, scope: !11092)
!11131 = !DILocation(line: 774, column: 20, scope: !11092)
!11132 = !DILocation(line: 775, column: 22, scope: !11092)
!11133 = !DILocation(line: 775, column: 29, scope: !11092)
!11134 = !DILocation(line: 775, column: 2, scope: !11092)
!11135 = !DILocation(line: 775, column: 11, scope: !11092)
!11136 = !DILocation(line: 775, column: 20, scope: !11092)
!11137 = !DILocation(line: 777, column: 31, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 776, column: 6)
!11139 = !DILocation(line: 777, column: 38, scope: !11138)
!11140 = !DILocation(line: 777, column: 45, scope: !11138)
!11141 = !DILocation(line: 777, column: 24, scope: !11138)
!11142 = !DILocation(line: 777, column: 3, scope: !11138)
!11143 = !DILocation(line: 777, column: 12, scope: !11138)
!11144 = !DILocation(line: 777, column: 22, scope: !11138)
!11145 = !DILocation(line: 778, column: 22, scope: !11092)
!11146 = !DILocation(line: 778, column: 29, scope: !11092)
!11147 = !DILocation(line: 778, column: 2, scope: !11092)
!11148 = !DILocation(line: 778, column: 11, scope: !11092)
!11149 = !DILocation(line: 778, column: 20, scope: !11092)
!11150 = !DILocation(line: 779, column: 36, scope: !11092)
!11151 = !DILocation(line: 779, column: 43, scope: !11092)
!11152 = !DILocation(line: 779, column: 2, scope: !11092)
!11153 = !DILocation(line: 779, column: 11, scope: !11092)
!11154 = !DILocation(line: 779, column: 21, scope: !11092)
!11155 = !DILocation(line: 780, column: 29, scope: !11092)
!11156 = !DILocation(line: 780, column: 36, scope: !11092)
!11157 = !DILocation(line: 780, column: 2, scope: !11092)
!11158 = !DILocation(line: 780, column: 11, scope: !11092)
!11159 = !DILocation(line: 780, column: 27, scope: !11092)
!11160 = !DILocation(line: 781, column: 27, scope: !11092)
!11161 = !DILocation(line: 781, column: 34, scope: !11092)
!11162 = !DILocation(line: 781, column: 42, scope: !11092)
!11163 = !DILocation(line: 781, column: 2, scope: !11092)
!11164 = !DILocation(line: 781, column: 11, scope: !11092)
!11165 = !DILocation(line: 781, column: 25, scope: !11092)
!11166 = !DILocation(line: 782, column: 46, scope: !11092)
!11167 = !DILocation(line: 782, column: 52, scope: !11092)
!11168 = !DILocation(line: 782, column: 29, scope: !11092)
!11169 = !DILocation(line: 782, column: 65, scope: !11092)
!11170 = !DILocation(line: 782, column: 2, scope: !11092)
!11171 = !DILocation(line: 782, column: 11, scope: !11092)
!11172 = !DILocation(line: 782, column: 27, scope: !11092)
!11173 = !DILocation(line: 783, column: 29, scope: !11092)
!11174 = !DILocation(line: 783, column: 35, scope: !11092)
!11175 = !DILocation(line: 783, column: 48, scope: !11092)
!11176 = !DILocation(line: 785, column: 22, scope: !11092)
!11177 = !DILocation(line: 785, column: 28, scope: !11092)
!11178 = !DILocation(line: 785, column: 5, scope: !11092)
!11179 = !DILocation(line: 785, column: 42, scope: !11092)
!11180 = !DILocation(line: 783, column: 2, scope: !11092)
!11181 = !DILocation(line: 783, column: 11, scope: !11092)
!11182 = !DILocation(line: 783, column: 27, scope: !11092)
!11183 = !DILocation(line: 786, column: 29, scope: !11092)
!11184 = !DILocation(line: 786, column: 36, scope: !11092)
!11185 = !DILocation(line: 786, column: 2, scope: !11092)
!11186 = !DILocation(line: 786, column: 11, scope: !11092)
!11187 = !DILocation(line: 786, column: 27, scope: !11092)
!11188 = !DILocation(line: 787, column: 22, scope: !11092)
!11189 = !DILocation(line: 787, column: 29, scope: !11092)
!11190 = !DILocation(line: 787, column: 2, scope: !11092)
!11191 = !DILocation(line: 787, column: 11, scope: !11092)
!11192 = !DILocation(line: 787, column: 20, scope: !11092)
!11193 = !DILocation(line: 788, column: 29, scope: !11092)
!11194 = !DILocation(line: 788, column: 36, scope: !11092)
!11195 = !DILocation(line: 788, column: 2, scope: !11092)
!11196 = !DILocation(line: 788, column: 11, scope: !11092)
!11197 = !DILocation(line: 788, column: 27, scope: !11092)
!11198 = !DILocation(line: 789, column: 29, scope: !11092)
!11199 = !DILocation(line: 789, column: 36, scope: !11092)
!11200 = !DILocation(line: 789, column: 2, scope: !11092)
!11201 = !DILocation(line: 789, column: 11, scope: !11092)
!11202 = !DILocation(line: 789, column: 27, scope: !11092)
!11203 = !DILocation(line: 790, column: 52, scope: !11092)
!11204 = !DILocation(line: 790, column: 59, scope: !11092)
!11205 = !DILocation(line: 790, column: 29, scope: !11092)
!11206 = !DILocation(line: 790, column: 2, scope: !11092)
!11207 = !DILocation(line: 790, column: 11, scope: !11092)
!11208 = !DILocation(line: 790, column: 27, scope: !11092)
!11209 = !DILocation(line: 792, column: 6, scope: !11092)
!11210 = !DILocation(line: 792, column: 2, scope: !11092)
!11211 = !DILabel(scope: !11092, name: "out", file: !3, line: 793)
!11212 = !DILocation(line: 793, column: 1, scope: !11092)
!11213 = !DILocation(line: 794, column: 16, scope: !11092)
!11214 = !DILocation(line: 794, column: 22, scope: !11092)
!11215 = !DILocation(line: 794, column: 2, scope: !11092)
!11216 = !DILocation(line: 795, column: 9, scope: !11092)
!11217 = !DILocation(line: 795, column: 2, scope: !11092)
!11218 = !DILocation(line: 15, column: 9, scope: !9365, inlinedAt: !11219)
!11219 = distinct !DILocation(line: 992, column: 5, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 992, column: 5)
!11221 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 992, column: 5)
!11222 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 991, column: 37)
!11223 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 991, column: 8)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 986, column: 52)
!11225 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 985, column: 7)
!11226 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 984, column: 34)
!11227 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 984, column: 6)
!11228 = !DILocation(line: 15, column: 9, scope: !9375, inlinedAt: !11219)
!11229 = !DILocation(line: 15, column: 9, scope: !9378, inlinedAt: !11219)
!11230 = !DILocalVariable(name: "m", arg: 1, scope: !11231, file: !11232, line: 363, type: !2898)
!11231 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !11232, file: !11232, line: 363, type: !11233, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11232 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!11233 = !DISubroutineType(types: !11234)
!11234 = !{!187, !2898}
!11235 = !DILocation(line: 363, column: 74, scope: !11231, inlinedAt: !11236)
!11236 = distinct !DILocation(line: 829, column: 4, scope: !4532)
!11237 = !DILocation(line: 363, column: 74, scope: !11231, inlinedAt: !11238)
!11238 = distinct !DILocation(line: 826, column: 16, scope: !4532)
!11239 = !DILocalVariable(name: "tty", arg: 1, scope: !4532, file: !3, line: 807, type: !293)
!11240 = !DILocation(line: 807, column: 45, scope: !4532)
!11241 = !DILocalVariable(name: "port", arg: 2, scope: !4532, file: !3, line: 807, type: !3947)
!11242 = !DILocation(line: 807, column: 67, scope: !4532)
!11243 = !DILocalVariable(name: "state", arg: 3, scope: !4532, file: !3, line: 808, type: !195)
!11244 = !DILocation(line: 808, column: 24, scope: !4532)
!11245 = !DILocalVariable(name: "new_info", arg: 4, scope: !4532, file: !3, line: 809, type: !4084)
!11246 = !DILocation(line: 809, column: 27, scope: !4532)
!11247 = !DILocalVariable(name: "uport", scope: !4532, file: !3, line: 811, type: !4276)
!11248 = !DILocation(line: 811, column: 20, scope: !4532)
!11249 = !DILocation(line: 811, column: 44, scope: !4532)
!11250 = !DILocation(line: 811, column: 28, scope: !4532)
!11251 = !DILocalVariable(name: "new_port", scope: !4532, file: !3, line: 812, type: !187)
!11252 = !DILocation(line: 812, column: 16, scope: !4532)
!11253 = !DILocalVariable(name: "change_irq", scope: !4532, file: !3, line: 813, type: !7)
!11254 = !DILocation(line: 813, column: 15, scope: !4532)
!11255 = !DILocalVariable(name: "change_port", scope: !4532, file: !3, line: 813, type: !7)
!11256 = !DILocation(line: 813, column: 27, scope: !4532)
!11257 = !DILocalVariable(name: "closing_wait", scope: !4532, file: !3, line: 813, type: !7)
!11258 = !DILocation(line: 813, column: 40, scope: !4532)
!11259 = !DILocalVariable(name: "old_custom_divisor", scope: !4532, file: !3, line: 814, type: !7)
!11260 = !DILocation(line: 814, column: 15, scope: !4532)
!11261 = !DILocalVariable(name: "close_delay", scope: !4532, file: !3, line: 814, type: !7)
!11262 = !DILocation(line: 814, column: 35, scope: !4532)
!11263 = !DILocalVariable(name: "old_flags", scope: !4532, file: !3, line: 815, type: !182)
!11264 = !DILocation(line: 815, column: 8, scope: !4532)
!11265 = !DILocalVariable(name: "new_flags", scope: !4532, file: !3, line: 815, type: !182)
!11266 = !DILocation(line: 815, column: 19, scope: !4532)
!11267 = !DILocalVariable(name: "retval", scope: !4532, file: !3, line: 816, type: !220)
!11268 = !DILocation(line: 816, column: 6, scope: !4532)
!11269 = !DILocation(line: 818, column: 7, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 818, column: 6)
!11271 = !DILocation(line: 818, column: 6, scope: !4532)
!11272 = !DILocation(line: 819, column: 3, scope: !11270)
!11273 = !DILocation(line: 821, column: 13, scope: !4532)
!11274 = !DILocation(line: 821, column: 23, scope: !4532)
!11275 = !DILocation(line: 821, column: 11, scope: !4532)
!11276 = !DILocation(line: 823, column: 31, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 822, column: 6)
!11278 = !DILocation(line: 823, column: 41, scope: !11277)
!11279 = !DILocation(line: 823, column: 15, scope: !11277)
!11280 = !DILocation(line: 823, column: 51, scope: !11277)
!11281 = !DILocation(line: 823, column: 12, scope: !11277)
!11282 = !DILocation(line: 825, column: 35, scope: !4532)
!11283 = !DILocation(line: 825, column: 45, scope: !4532)
!11284 = !DILocation(line: 825, column: 18, scope: !4532)
!11285 = !DILocation(line: 825, column: 2, scope: !4532)
!11286 = !DILocation(line: 825, column: 12, scope: !4532)
!11287 = !DILocation(line: 825, column: 16, scope: !4532)
!11288 = !DILocation(line: 826, column: 33, scope: !4532)
!11289 = !DILocation(line: 826, column: 43, scope: !4532)
!11290 = !DILocation(line: 826, column: 55, scope: !4532)
!11291 = !DILocation(line: 365, column: 27, scope: !11292, inlinedAt: !11238)
!11292 = distinct !DILexicalBlock(scope: !11231, file: !11232, line: 365, column: 6)
!11293 = !DILocation(line: 365, column: 6, scope: !11292, inlinedAt: !11238)
!11294 = !DILocation(line: 365, column: 6, scope: !11231, inlinedAt: !11238)
!11295 = !DILocation(line: 366, column: 12, scope: !11296, inlinedAt: !11238)
!11296 = distinct !DILexicalBlock(scope: !11297, file: !11232, line: 366, column: 7)
!11297 = distinct !DILexicalBlock(scope: !11292, file: !11232, line: 365, column: 31)
!11298 = !DILocation(line: 366, column: 14, scope: !11296, inlinedAt: !11238)
!11299 = !DILocation(line: 366, column: 7, scope: !11297, inlinedAt: !11238)
!11300 = !DILocation(line: 367, column: 4, scope: !11296, inlinedAt: !11238)
!11301 = !DILocation(line: 368, column: 28, scope: !11297, inlinedAt: !11238)
!11302 = !DILocation(line: 368, column: 10, scope: !11297, inlinedAt: !11238)
!11303 = !DILocation(line: 368, column: 3, scope: !11297, inlinedAt: !11238)
!11304 = !DILocation(line: 370, column: 29, scope: !11305, inlinedAt: !11238)
!11305 = distinct !DILexicalBlock(scope: !11292, file: !11232, line: 369, column: 9)
!11306 = !DILocation(line: 370, column: 10, scope: !11305, inlinedAt: !11238)
!11307 = !DILocation(line: 370, column: 3, scope: !11305, inlinedAt: !11238)
!11308 = !DILocation(line: 372, column: 1, scope: !11231, inlinedAt: !11238)
!11309 = !DILocation(line: 826, column: 16, scope: !4532)
!11310 = !DILocation(line: 826, column: 14, scope: !4532)
!11311 = !DILocation(line: 827, column: 17, scope: !4532)
!11312 = !DILocation(line: 827, column: 27, scope: !4532)
!11313 = !DILocation(line: 827, column: 40, scope: !4532)
!11314 = !DILocation(line: 829, column: 21, scope: !4532)
!11315 = !DILocation(line: 829, column: 31, scope: !4532)
!11316 = !DILocation(line: 829, column: 44, scope: !4532)
!11317 = !DILocation(line: 365, column: 27, scope: !11292, inlinedAt: !11236)
!11318 = !DILocation(line: 365, column: 6, scope: !11292, inlinedAt: !11236)
!11319 = !DILocation(line: 365, column: 6, scope: !11231, inlinedAt: !11236)
!11320 = !DILocation(line: 366, column: 12, scope: !11296, inlinedAt: !11236)
!11321 = !DILocation(line: 366, column: 14, scope: !11296, inlinedAt: !11236)
!11322 = !DILocation(line: 366, column: 7, scope: !11297, inlinedAt: !11236)
!11323 = !DILocation(line: 367, column: 4, scope: !11296, inlinedAt: !11236)
!11324 = !DILocation(line: 368, column: 28, scope: !11297, inlinedAt: !11236)
!11325 = !DILocation(line: 368, column: 10, scope: !11297, inlinedAt: !11236)
!11326 = !DILocation(line: 368, column: 3, scope: !11297, inlinedAt: !11236)
!11327 = !DILocation(line: 370, column: 29, scope: !11305, inlinedAt: !11236)
!11328 = !DILocation(line: 370, column: 10, scope: !11305, inlinedAt: !11236)
!11329 = !DILocation(line: 370, column: 3, scope: !11305, inlinedAt: !11236)
!11330 = !DILocation(line: 372, column: 1, scope: !11231, inlinedAt: !11236)
!11331 = !DILocation(line: 827, column: 15, scope: !4532)
!11332 = !DILocation(line: 832, column: 18, scope: !4532)
!11333 = !DILocation(line: 832, column: 25, scope: !4532)
!11334 = !DILocation(line: 832, column: 31, scope: !4532)
!11335 = !DILocation(line: 833, column: 3, scope: !4532)
!11336 = !DILocation(line: 833, column: 6, scope: !4532)
!11337 = !DILocation(line: 833, column: 16, scope: !4532)
!11338 = !DILocation(line: 833, column: 23, scope: !4532)
!11339 = !DILocation(line: 833, column: 30, scope: !4532)
!11340 = !DILocation(line: 833, column: 20, scope: !4532)
!11341 = !DILocation(line: 0, scope: !4532)
!11342 = !DILocation(line: 832, column: 14, scope: !4532)
!11343 = !DILocation(line: 840, column: 18, scope: !4532)
!11344 = !DILocation(line: 840, column: 25, scope: !4532)
!11345 = !DILocation(line: 840, column: 31, scope: !4532)
!11346 = !DILocation(line: 841, column: 3, scope: !4532)
!11347 = !DILocation(line: 841, column: 7, scope: !4532)
!11348 = !DILocation(line: 841, column: 19, scope: !4532)
!11349 = !DILocation(line: 841, column: 26, scope: !4532)
!11350 = !DILocation(line: 841, column: 16, scope: !4532)
!11351 = !DILocation(line: 841, column: 33, scope: !4532)
!11352 = !DILocation(line: 842, column: 22, scope: !4532)
!11353 = !DILocation(line: 842, column: 32, scope: !4532)
!11354 = !DILocation(line: 842, column: 7, scope: !4532)
!11355 = !DILocation(line: 842, column: 46, scope: !4532)
!11356 = !DILocation(line: 842, column: 53, scope: !4532)
!11357 = !DILocation(line: 842, column: 43, scope: !4532)
!11358 = !DILocation(line: 842, column: 61, scope: !4532)
!11359 = !DILocation(line: 843, column: 7, scope: !4532)
!11360 = !DILocation(line: 843, column: 17, scope: !4532)
!11361 = !DILocation(line: 843, column: 25, scope: !4532)
!11362 = !DILocation(line: 843, column: 32, scope: !4532)
!11363 = !DILocation(line: 843, column: 22, scope: !4532)
!11364 = !DILocation(line: 843, column: 37, scope: !4532)
!11365 = !DILocation(line: 844, column: 7, scope: !4532)
!11366 = !DILocation(line: 844, column: 17, scope: !4532)
!11367 = !DILocation(line: 844, column: 28, scope: !4532)
!11368 = !DILocation(line: 844, column: 35, scope: !4532)
!11369 = !DILocation(line: 844, column: 25, scope: !4532)
!11370 = !DILocation(line: 844, column: 42, scope: !4532)
!11371 = !DILocation(line: 845, column: 7, scope: !4532)
!11372 = !DILocation(line: 845, column: 17, scope: !4532)
!11373 = !DILocation(line: 845, column: 36, scope: !4532)
!11374 = !DILocation(line: 845, column: 43, scope: !4532)
!11375 = !DILocation(line: 845, column: 33, scope: !4532)
!11376 = !DILocation(line: 845, column: 52, scope: !4532)
!11377 = !DILocation(line: 846, column: 7, scope: !4532)
!11378 = !DILocation(line: 846, column: 17, scope: !4532)
!11379 = !DILocation(line: 846, column: 25, scope: !4532)
!11380 = !DILocation(line: 846, column: 32, scope: !4532)
!11381 = !DILocation(line: 846, column: 22, scope: !4532)
!11382 = !DILocation(line: 840, column: 14, scope: !4532)
!11383 = !DILocation(line: 848, column: 14, scope: !4532)
!11384 = !DILocation(line: 848, column: 21, scope: !4532)
!11385 = !DILocation(line: 848, column: 12, scope: !4532)
!11386 = !DILocation(line: 849, column: 29, scope: !4532)
!11387 = !DILocation(line: 849, column: 39, scope: !4532)
!11388 = !DILocation(line: 849, column: 12, scope: !4532)
!11389 = !DILocation(line: 850, column: 23, scope: !4532)
!11390 = !DILocation(line: 850, column: 30, scope: !4532)
!11391 = !DILocation(line: 850, column: 21, scope: !4532)
!11392 = !DILocation(line: 852, column: 7, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 852, column: 6)
!11394 = !DILocation(line: 852, column: 6, scope: !4532)
!11395 = !DILocation(line: 853, column: 10, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 852, column: 31)
!11397 = !DILocation(line: 854, column: 7, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11396, file: !3, line: 854, column: 7)
!11399 = !DILocation(line: 854, column: 18, scope: !11398)
!11400 = !DILocation(line: 854, column: 21, scope: !11398)
!11401 = !DILocation(line: 854, column: 33, scope: !11398)
!11402 = !DILocation(line: 855, column: 8, scope: !11398)
!11403 = !DILocation(line: 855, column: 18, scope: !11398)
!11404 = !DILocation(line: 855, column: 31, scope: !11398)
!11405 = !DILocation(line: 855, column: 38, scope: !11398)
!11406 = !DILocation(line: 855, column: 46, scope: !11398)
!11407 = !DILocation(line: 855, column: 28, scope: !11398)
!11408 = !DILocation(line: 855, column: 52, scope: !11398)
!11409 = !DILocation(line: 856, column: 8, scope: !11398)
!11410 = !DILocation(line: 856, column: 23, scope: !11398)
!11411 = !DILocation(line: 856, column: 29, scope: !11398)
!11412 = !DILocation(line: 856, column: 20, scope: !11398)
!11413 = !DILocation(line: 856, column: 42, scope: !11398)
!11414 = !DILocation(line: 857, column: 8, scope: !11398)
!11415 = !DILocation(line: 857, column: 24, scope: !11398)
!11416 = !DILocation(line: 857, column: 30, scope: !11398)
!11417 = !DILocation(line: 857, column: 21, scope: !11398)
!11418 = !DILocation(line: 857, column: 44, scope: !11398)
!11419 = !DILocation(line: 858, column: 8, scope: !11398)
!11420 = !DILocation(line: 858, column: 18, scope: !11398)
!11421 = !DILocation(line: 858, column: 33, scope: !11398)
!11422 = !DILocation(line: 859, column: 8, scope: !11398)
!11423 = !DILocation(line: 859, column: 18, scope: !11398)
!11424 = !DILocation(line: 859, column: 36, scope: !11398)
!11425 = !DILocation(line: 859, column: 43, scope: !11398)
!11426 = !DILocation(line: 859, column: 33, scope: !11398)
!11427 = !DILocation(line: 859, column: 53, scope: !11398)
!11428 = !DILocation(line: 860, column: 10, scope: !11398)
!11429 = !DILocation(line: 860, column: 22, scope: !11398)
!11430 = !DILocation(line: 860, column: 20, scope: !11398)
!11431 = !DILocation(line: 860, column: 33, scope: !11398)
!11432 = !DILocation(line: 860, column: 50, scope: !11398)
!11433 = !DILocation(line: 854, column: 7, scope: !11396)
!11434 = !DILocation(line: 861, column: 4, scope: !11398)
!11435 = !DILocation(line: 862, column: 20, scope: !11396)
!11436 = !DILocation(line: 862, column: 27, scope: !11396)
!11437 = !DILocation(line: 862, column: 33, scope: !11396)
!11438 = !DILocation(line: 863, column: 12, scope: !11396)
!11439 = !DILocation(line: 863, column: 22, scope: !11396)
!11440 = !DILocation(line: 862, column: 50, scope: !11396)
!11441 = !DILocation(line: 862, column: 3, scope: !11396)
!11442 = !DILocation(line: 862, column: 10, scope: !11396)
!11443 = !DILocation(line: 862, column: 16, scope: !11396)
!11444 = !DILocation(line: 864, column: 27, scope: !11396)
!11445 = !DILocation(line: 864, column: 37, scope: !11396)
!11446 = !DILocation(line: 864, column: 3, scope: !11396)
!11447 = !DILocation(line: 864, column: 10, scope: !11396)
!11448 = !DILocation(line: 864, column: 25, scope: !11396)
!11449 = !DILocation(line: 865, column: 3, scope: !11396)
!11450 = !DILocation(line: 868, column: 11, scope: !4532)
!11451 = !DILocation(line: 868, column: 9, scope: !4532)
!11452 = !DILocation(line: 869, column: 6, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 869, column: 6)
!11454 = !DILocation(line: 869, column: 13, scope: !11453)
!11455 = !DILocation(line: 869, column: 17, scope: !11453)
!11456 = !DILocation(line: 869, column: 28, scope: !11453)
!11457 = !DILocation(line: 869, column: 31, scope: !11453)
!11458 = !DILocation(line: 869, column: 6, scope: !4532)
!11459 = !DILocation(line: 870, column: 3, scope: !11453)
!11460 = !DILocation(line: 875, column: 6, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 875, column: 6)
!11462 = !DILocation(line: 875, column: 13, scope: !11461)
!11463 = !DILocation(line: 875, column: 18, scope: !11461)
!11464 = !DILocation(line: 875, column: 6, scope: !4532)
!11465 = !DILocation(line: 876, column: 12, scope: !11461)
!11466 = !DILocation(line: 876, column: 19, scope: !11461)
!11467 = !DILocation(line: 876, column: 24, scope: !11461)
!11468 = !DILocation(line: 876, column: 36, scope: !11461)
!11469 = !DILocation(line: 876, column: 43, scope: !11461)
!11470 = !DILocation(line: 876, column: 10, scope: !11461)
!11471 = !DILocation(line: 876, column: 3, scope: !11461)
!11472 = !DILocation(line: 878, column: 7, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 878, column: 6)
!11474 = !DILocation(line: 878, column: 17, scope: !11473)
!11475 = !DILocation(line: 878, column: 24, scope: !11473)
!11476 = !DILocation(line: 878, column: 21, scope: !11473)
!11477 = !DILocation(line: 878, column: 33, scope: !11473)
!11478 = !DILocation(line: 878, column: 37, scope: !11473)
!11479 = !DILocation(line: 878, column: 47, scope: !11473)
!11480 = !DILocation(line: 878, column: 51, scope: !11473)
!11481 = !DILocation(line: 878, column: 56, scope: !11473)
!11482 = !DILocation(line: 879, column: 7, scope: !11473)
!11483 = !DILocation(line: 879, column: 17, scope: !11473)
!11484 = !DILocation(line: 879, column: 27, scope: !11473)
!11485 = !DILocation(line: 878, column: 6, scope: !4532)
!11486 = !DILocation(line: 880, column: 10, scope: !11473)
!11487 = !DILocation(line: 880, column: 3, scope: !11473)
!11488 = !DILocation(line: 882, column: 6, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 882, column: 6)
!11490 = !DILocation(line: 882, column: 6, scope: !4532)
!11491 = !DILocation(line: 883, column: 3, scope: !11489)
!11492 = !DILocation(line: 885, column: 6, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 885, column: 6)
!11494 = !DILocation(line: 885, column: 18, scope: !11493)
!11495 = !DILocation(line: 885, column: 21, scope: !11493)
!11496 = !DILocation(line: 885, column: 6, scope: !4532)
!11497 = !DILocation(line: 886, column: 10, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 885, column: 33)
!11499 = !DILocation(line: 891, column: 22, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 891, column: 7)
!11501 = !DILocation(line: 891, column: 7, scope: !11500)
!11502 = !DILocation(line: 891, column: 28, scope: !11500)
!11503 = !DILocation(line: 891, column: 7, scope: !11498)
!11504 = !DILocation(line: 892, column: 4, scope: !11500)
!11505 = !DILocation(line: 898, column: 17, scope: !11498)
!11506 = !DILocation(line: 898, column: 22, scope: !11498)
!11507 = !DILocation(line: 898, column: 3, scope: !11498)
!11508 = !DILocation(line: 899, column: 2, scope: !11498)
!11509 = !DILocation(line: 901, column: 6, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 901, column: 6)
!11511 = !DILocation(line: 901, column: 6, scope: !4532)
!11512 = !DILocalVariable(name: "old_iobase", scope: !11513, file: !3, line: 902, type: !187)
!11513 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 901, column: 19)
!11514 = !DILocation(line: 902, column: 17, scope: !11513)
!11515 = !DILocalVariable(name: "old_mapbase", scope: !11513, file: !3, line: 902, type: !187)
!11516 = !DILocation(line: 902, column: 29, scope: !11513)
!11517 = !DILocalVariable(name: "old_type", scope: !11513, file: !3, line: 903, type: !7)
!11518 = !DILocation(line: 903, column: 16, scope: !11513)
!11519 = !DILocalVariable(name: "old_iotype", scope: !11513, file: !3, line: 903, type: !7)
!11520 = !DILocation(line: 903, column: 26, scope: !11513)
!11521 = !DILocalVariable(name: "old_hub6", scope: !11513, file: !3, line: 903, type: !7)
!11522 = !DILocation(line: 903, column: 38, scope: !11513)
!11523 = !DILocalVariable(name: "old_shift", scope: !11513, file: !3, line: 903, type: !7)
!11524 = !DILocation(line: 903, column: 48, scope: !11513)
!11525 = !DILocation(line: 905, column: 16, scope: !11513)
!11526 = !DILocation(line: 905, column: 23, scope: !11513)
!11527 = !DILocation(line: 905, column: 14, scope: !11513)
!11528 = !DILocation(line: 906, column: 17, scope: !11513)
!11529 = !DILocation(line: 906, column: 24, scope: !11513)
!11530 = !DILocation(line: 906, column: 15, scope: !11513)
!11531 = !DILocation(line: 907, column: 14, scope: !11513)
!11532 = !DILocation(line: 907, column: 21, scope: !11513)
!11533 = !DILocation(line: 907, column: 12, scope: !11513)
!11534 = !DILocation(line: 908, column: 14, scope: !11513)
!11535 = !DILocation(line: 908, column: 21, scope: !11513)
!11536 = !DILocation(line: 908, column: 12, scope: !11513)
!11537 = !DILocation(line: 909, column: 16, scope: !11513)
!11538 = !DILocation(line: 909, column: 23, scope: !11513)
!11539 = !DILocation(line: 909, column: 14, scope: !11513)
!11540 = !DILocation(line: 910, column: 15, scope: !11513)
!11541 = !DILocation(line: 910, column: 22, scope: !11513)
!11542 = !DILocation(line: 910, column: 13, scope: !11513)
!11543 = !DILocation(line: 915, column: 7, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 915, column: 7)
!11545 = !DILocation(line: 915, column: 16, scope: !11544)
!11546 = !DILocation(line: 915, column: 32, scope: !11544)
!11547 = !DILocation(line: 915, column: 35, scope: !11544)
!11548 = !DILocation(line: 915, column: 42, scope: !11544)
!11549 = !DILocation(line: 915, column: 47, scope: !11544)
!11550 = !DILocation(line: 915, column: 7, scope: !11513)
!11551 = !DILocation(line: 916, column: 4, scope: !11544)
!11552 = !DILocation(line: 916, column: 11, scope: !11544)
!11553 = !DILocation(line: 916, column: 16, scope: !11544)
!11554 = !DILocation(line: 916, column: 29, scope: !11544)
!11555 = !DILocation(line: 918, column: 19, scope: !11513)
!11556 = !DILocation(line: 918, column: 3, scope: !11513)
!11557 = !DILocation(line: 918, column: 10, scope: !11513)
!11558 = !DILocation(line: 918, column: 17, scope: !11513)
!11559 = !DILocation(line: 919, column: 17, scope: !11513)
!11560 = !DILocation(line: 919, column: 27, scope: !11513)
!11561 = !DILocation(line: 919, column: 3, scope: !11513)
!11562 = !DILocation(line: 919, column: 10, scope: !11513)
!11563 = !DILocation(line: 919, column: 15, scope: !11513)
!11564 = !DILocation(line: 920, column: 17, scope: !11513)
!11565 = !DILocation(line: 920, column: 27, scope: !11513)
!11566 = !DILocation(line: 920, column: 3, scope: !11513)
!11567 = !DILocation(line: 920, column: 10, scope: !11513)
!11568 = !DILocation(line: 920, column: 15, scope: !11513)
!11569 = !DILocation(line: 921, column: 19, scope: !11513)
!11570 = !DILocation(line: 921, column: 29, scope: !11513)
!11571 = !DILocation(line: 921, column: 3, scope: !11513)
!11572 = !DILocation(line: 921, column: 10, scope: !11513)
!11573 = !DILocation(line: 921, column: 17, scope: !11513)
!11574 = !DILocation(line: 922, column: 21, scope: !11513)
!11575 = !DILocation(line: 922, column: 31, scope: !11513)
!11576 = !DILocation(line: 922, column: 3, scope: !11513)
!11577 = !DILocation(line: 922, column: 10, scope: !11513)
!11578 = !DILocation(line: 922, column: 19, scope: !11513)
!11579 = !DILocation(line: 923, column: 35, scope: !11513)
!11580 = !DILocation(line: 923, column: 45, scope: !11513)
!11581 = !DILocation(line: 923, column: 20, scope: !11513)
!11582 = !DILocation(line: 923, column: 3, scope: !11513)
!11583 = !DILocation(line: 923, column: 10, scope: !11513)
!11584 = !DILocation(line: 923, column: 18, scope: !11513)
!11585 = !DILocation(line: 928, column: 7, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 928, column: 7)
!11587 = !DILocation(line: 928, column: 14, scope: !11586)
!11588 = !DILocation(line: 928, column: 19, scope: !11586)
!11589 = !DILocation(line: 928, column: 35, scope: !11586)
!11590 = !DILocation(line: 928, column: 38, scope: !11586)
!11591 = !DILocation(line: 928, column: 45, scope: !11586)
!11592 = !DILocation(line: 928, column: 50, scope: !11586)
!11593 = !DILocation(line: 928, column: 7, scope: !11513)
!11594 = !DILocation(line: 929, column: 13, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 928, column: 64)
!11596 = !DILocation(line: 929, column: 20, scope: !11595)
!11597 = !DILocation(line: 929, column: 25, scope: !11595)
!11598 = !DILocation(line: 929, column: 38, scope: !11595)
!11599 = !DILocation(line: 929, column: 11, scope: !11595)
!11600 = !DILocation(line: 930, column: 3, scope: !11595)
!11601 = !DILocation(line: 932, column: 11, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 930, column: 10)
!11603 = !DILocation(line: 939, column: 7, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 939, column: 7)
!11605 = !DILocation(line: 939, column: 7, scope: !11513)
!11606 = !DILocation(line: 940, column: 20, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11604, file: !3, line: 939, column: 15)
!11608 = !DILocation(line: 940, column: 4, scope: !11607)
!11609 = !DILocation(line: 940, column: 11, scope: !11607)
!11610 = !DILocation(line: 940, column: 18, scope: !11607)
!11611 = !DILocation(line: 941, column: 18, scope: !11607)
!11612 = !DILocation(line: 941, column: 4, scope: !11607)
!11613 = !DILocation(line: 941, column: 11, scope: !11607)
!11614 = !DILocation(line: 941, column: 16, scope: !11607)
!11615 = !DILocation(line: 942, column: 18, scope: !11607)
!11616 = !DILocation(line: 942, column: 4, scope: !11607)
!11617 = !DILocation(line: 942, column: 11, scope: !11607)
!11618 = !DILocation(line: 942, column: 16, scope: !11607)
!11619 = !DILocation(line: 943, column: 20, scope: !11607)
!11620 = !DILocation(line: 943, column: 4, scope: !11607)
!11621 = !DILocation(line: 943, column: 11, scope: !11607)
!11622 = !DILocation(line: 943, column: 18, scope: !11607)
!11623 = !DILocation(line: 944, column: 22, scope: !11607)
!11624 = !DILocation(line: 944, column: 4, scope: !11607)
!11625 = !DILocation(line: 944, column: 11, scope: !11607)
!11626 = !DILocation(line: 944, column: 20, scope: !11607)
!11627 = !DILocation(line: 945, column: 21, scope: !11607)
!11628 = !DILocation(line: 945, column: 4, scope: !11607)
!11629 = !DILocation(line: 945, column: 11, scope: !11607)
!11630 = !DILocation(line: 945, column: 19, scope: !11607)
!11631 = !DILocation(line: 947, column: 8, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 947, column: 8)
!11633 = !DILocation(line: 947, column: 17, scope: !11632)
!11634 = !DILocation(line: 947, column: 8, scope: !11607)
!11635 = !DILocation(line: 948, column: 14, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 947, column: 34)
!11637 = !DILocation(line: 948, column: 21, scope: !11636)
!11638 = !DILocation(line: 948, column: 26, scope: !11636)
!11639 = !DILocation(line: 948, column: 39, scope: !11636)
!11640 = !DILocation(line: 948, column: 12, scope: !11636)
!11641 = !DILocation(line: 953, column: 9, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 953, column: 9)
!11643 = !DILocation(line: 953, column: 9, scope: !11636)
!11644 = !DILocation(line: 954, column: 6, scope: !11642)
!11645 = !DILocation(line: 954, column: 13, scope: !11642)
!11646 = !DILocation(line: 954, column: 18, scope: !11642)
!11647 = !DILocation(line: 959, column: 12, scope: !11636)
!11648 = !DILocation(line: 960, column: 4, scope: !11636)
!11649 = !DILocation(line: 963, column: 4, scope: !11607)
!11650 = !DILocation(line: 965, column: 2, scope: !11513)
!11651 = !DILocation(line: 967, column: 6, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 967, column: 6)
!11653 = !DILocation(line: 967, column: 6, scope: !4532)
!11654 = !DILocation(line: 968, column: 21, scope: !11652)
!11655 = !DILocation(line: 968, column: 31, scope: !11652)
!11656 = !DILocation(line: 968, column: 3, scope: !11652)
!11657 = !DILocation(line: 968, column: 10, scope: !11652)
!11658 = !DILocation(line: 968, column: 19, scope: !11652)
!11659 = !DILocation(line: 969, column: 8, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 969, column: 6)
!11661 = !DILocation(line: 969, column: 15, scope: !11660)
!11662 = !DILocation(line: 969, column: 21, scope: !11660)
!11663 = !DILocation(line: 969, column: 6, scope: !4532)
!11664 = !DILocation(line: 970, column: 21, scope: !11660)
!11665 = !DILocation(line: 970, column: 31, scope: !11660)
!11666 = !DILocation(line: 970, column: 41, scope: !11660)
!11667 = !DILocation(line: 970, column: 3, scope: !11660)
!11668 = !DILocation(line: 970, column: 10, scope: !11660)
!11669 = !DILocation(line: 970, column: 19, scope: !11660)
!11670 = !DILocation(line: 971, column: 29, scope: !4532)
!11671 = !DILocation(line: 971, column: 36, scope: !4532)
!11672 = !DILocation(line: 971, column: 42, scope: !4532)
!11673 = !DILocation(line: 972, column: 7, scope: !4532)
!11674 = !DILocation(line: 972, column: 17, scope: !4532)
!11675 = !DILocation(line: 971, column: 62, scope: !4532)
!11676 = !DILocation(line: 971, column: 2, scope: !4532)
!11677 = !DILocation(line: 971, column: 9, scope: !4532)
!11678 = !DILocation(line: 971, column: 26, scope: !4532)
!11679 = !DILocation(line: 973, column: 28, scope: !4532)
!11680 = !DILocation(line: 973, column: 38, scope: !4532)
!11681 = !DILocation(line: 973, column: 2, scope: !4532)
!11682 = !DILocation(line: 973, column: 9, scope: !4532)
!11683 = !DILocation(line: 973, column: 26, scope: !4532)
!11684 = !DILocation(line: 974, column: 26, scope: !4532)
!11685 = !DILocation(line: 974, column: 2, scope: !4532)
!11686 = !DILocation(line: 974, column: 8, scope: !4532)
!11687 = !DILocation(line: 974, column: 24, scope: !4532)
!11688 = !DILocation(line: 975, column: 26, scope: !4532)
!11689 = !DILocation(line: 975, column: 2, scope: !4532)
!11690 = !DILocation(line: 975, column: 8, scope: !4532)
!11691 = !DILocation(line: 975, column: 24, scope: !4532)
!11692 = !DILocation(line: 976, column: 6, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 976, column: 6)
!11694 = !DILocation(line: 976, column: 16, scope: !11693)
!11695 = !DILocation(line: 976, column: 6, scope: !4532)
!11696 = !DILocation(line: 977, column: 21, scope: !11693)
!11697 = !DILocation(line: 977, column: 31, scope: !11693)
!11698 = !DILocation(line: 977, column: 3, scope: !11693)
!11699 = !DILocation(line: 977, column: 10, scope: !11693)
!11700 = !DILocation(line: 977, column: 19, scope: !11693)
!11701 = !DILocation(line: 978, column: 23, scope: !4532)
!11702 = !DILocation(line: 978, column: 30, scope: !4532)
!11703 = !DILocation(line: 978, column: 36, scope: !4532)
!11704 = !DILocation(line: 978, column: 22, scope: !4532)
!11705 = !DILocation(line: 978, column: 2, scope: !4532)
!11706 = !DILocation(line: 978, column: 8, scope: !4532)
!11707 = !DILocation(line: 978, column: 20, scope: !4532)
!11708 = !DILabel(scope: !4532, name: "check_and_exit", file: !3, line: 980)
!11709 = !DILocation(line: 980, column: 2, scope: !4532)
!11710 = !DILocation(line: 981, column: 9, scope: !4532)
!11711 = !DILocation(line: 982, column: 6, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 982, column: 6)
!11713 = !DILocation(line: 982, column: 13, scope: !11712)
!11714 = !DILocation(line: 982, column: 18, scope: !11712)
!11715 = !DILocation(line: 982, column: 6, scope: !4532)
!11716 = !DILocation(line: 983, column: 3, scope: !11712)
!11717 = !DILocation(line: 984, column: 27, scope: !11227)
!11718 = !DILocation(line: 984, column: 6, scope: !11227)
!11719 = !DILocation(line: 984, column: 6, scope: !4532)
!11720 = !DILocation(line: 985, column: 9, scope: !11225)
!11721 = !DILocation(line: 985, column: 21, scope: !11225)
!11722 = !DILocation(line: 985, column: 28, scope: !11225)
!11723 = !DILocation(line: 985, column: 19, scope: !11225)
!11724 = !DILocation(line: 985, column: 35, scope: !11225)
!11725 = !DILocation(line: 985, column: 51, scope: !11225)
!11726 = !DILocation(line: 986, column: 7, scope: !11225)
!11727 = !DILocation(line: 986, column: 29, scope: !11225)
!11728 = !DILocation(line: 986, column: 36, scope: !11225)
!11729 = !DILocation(line: 986, column: 26, scope: !11225)
!11730 = !DILocation(line: 985, column: 7, scope: !11226)
!11731 = !DILocation(line: 991, column: 8, scope: !11223)
!11732 = !DILocation(line: 991, column: 15, scope: !11223)
!11733 = !DILocation(line: 991, column: 21, scope: !11223)
!11734 = !DILocation(line: 991, column: 8, scope: !11224)
!11735 = !DILocation(line: 992, column: 5, scope: !11222)
!11736 = !DILocation(line: 992, column: 5, scope: !11220)
!11737 = !DILocation(line: 992, column: 5, scope: !11221)
!11738 = !DILocation(line: 996, column: 4, scope: !11222)
!11739 = !DILocation(line: 997, column: 22, scope: !11224)
!11740 = !DILocation(line: 997, column: 27, scope: !11224)
!11741 = !DILocation(line: 997, column: 4, scope: !11224)
!11742 = !DILocation(line: 998, column: 3, scope: !11224)
!11743 = !DILocation(line: 999, column: 2, scope: !11226)
!11744 = !DILocation(line: 1000, column: 25, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11227, file: !3, line: 999, column: 9)
!11746 = !DILocation(line: 1000, column: 30, scope: !11745)
!11747 = !DILocation(line: 1000, column: 12, scope: !11745)
!11748 = !DILocation(line: 1000, column: 10, scope: !11745)
!11749 = !DILocation(line: 1001, column: 7, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 1001, column: 7)
!11751 = !DILocation(line: 1001, column: 14, scope: !11750)
!11752 = !DILocation(line: 1001, column: 7, scope: !11745)
!11753 = !DILocation(line: 1002, column: 29, scope: !11750)
!11754 = !DILocation(line: 1002, column: 4, scope: !11750)
!11755 = !DILocation(line: 1003, column: 7, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 1003, column: 7)
!11757 = !DILocation(line: 1003, column: 14, scope: !11756)
!11758 = !DILocation(line: 1003, column: 7, scope: !11745)
!11759 = !DILocation(line: 1004, column: 11, scope: !11756)
!11760 = !DILocation(line: 1004, column: 4, scope: !11756)
!11761 = !DILocation(line: 984, column: 31, scope: !11227)
!11762 = !DILabel(scope: !4532, name: "exit", file: !3, line: 1006)
!11763 = !DILocation(line: 1006, column: 2, scope: !4532)
!11764 = !DILocation(line: 1007, column: 9, scope: !4532)
!11765 = !DILocation(line: 1007, column: 2, scope: !4532)
!11766 = !DILocation(line: 1008, column: 1, scope: !4532)
!11767 = distinct !DISubprogram(name: "irq_canonicalize", scope: !11768, file: !11768, line: 21, type: !3122, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11768 = !DIFile(filename: "./arch/x86/include/asm/irq.h", directory: "/home/lizy2001/genbc/linux")
!11769 = !DILocalVariable(name: "irq", arg: 1, scope: !11767, file: !11768, line: 21, type: !220)
!11770 = !DILocation(line: 21, column: 40, scope: !11767)
!11771 = !DILocation(line: 23, column: 11, scope: !11767)
!11772 = !DILocation(line: 23, column: 15, scope: !11767)
!11773 = !DILocation(line: 23, column: 10, scope: !11767)
!11774 = !DILocation(line: 23, column: 27, scope: !11767)
!11775 = !DILocation(line: 23, column: 2, scope: !11767)
!11776 = distinct !DISubprogram(name: "security_locked_down", scope: !155, file: !155, line: 1303, type: !11777, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11777 = !DISubroutineType(types: !11778)
!11778 = !{!220, !154}
!11779 = !DILocalVariable(name: "what", arg: 1, scope: !11776, file: !155, line: 1303, type: !154)
!11780 = !DILocation(line: 1303, column: 61, scope: !11776)
!11781 = !DILocation(line: 1305, column: 2, scope: !11776)
!11782 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !11232, file: !11232, line: 308, type: !11233, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11783 = !DILocalVariable(name: "m", arg: 1, scope: !11782, file: !11232, line: 308, type: !2898)
!11784 = !DILocation(line: 308, column: 66, scope: !11782)
!11785 = !DILocation(line: 310, column: 10, scope: !11782)
!11786 = !DILocation(line: 310, column: 12, scope: !11782)
!11787 = !DILocation(line: 310, column: 34, scope: !11782)
!11788 = !DILocation(line: 310, column: 39, scope: !11782)
!11789 = !DILocation(line: 310, column: 2, scope: !11782)
!11790 = distinct !DISubprogram(name: "uart_line_info", scope: !3, file: !3, line: 1821, type: !11791, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11791 = !DISubroutineType(types: !11792)
!11792 = !{null, !782, !4503, !220}
!11793 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !11794)
!11794 = distinct !DILocation(line: 1855, column: 3, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11796, file: !3, line: 1849, column: 30)
!11796 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 1849, column: 6)
!11797 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !11798)
!11798 = distinct !DILocation(line: 1853, column: 3, scope: !11795)
!11799 = !DILocalVariable(name: "m", arg: 1, scope: !11790, file: !3, line: 1821, type: !782)
!11800 = !DILocation(line: 1821, column: 45, scope: !11790)
!11801 = !DILocalVariable(name: "drv", arg: 2, scope: !11790, file: !3, line: 1821, type: !4503)
!11802 = !DILocation(line: 1821, column: 68, scope: !11790)
!11803 = !DILocalVariable(name: "i", arg: 3, scope: !11790, file: !3, line: 1821, type: !220)
!11804 = !DILocation(line: 1821, column: 77, scope: !11790)
!11805 = !DILocalVariable(name: "state", scope: !11790, file: !3, line: 1823, type: !195)
!11806 = !DILocation(line: 1823, column: 21, scope: !11790)
!11807 = !DILocation(line: 1823, column: 29, scope: !11790)
!11808 = !DILocation(line: 1823, column: 34, scope: !11790)
!11809 = !DILocation(line: 1823, column: 42, scope: !11790)
!11810 = !DILocation(line: 1823, column: 40, scope: !11790)
!11811 = !DILocalVariable(name: "port", scope: !11790, file: !3, line: 1824, type: !3947)
!11812 = !DILocation(line: 1824, column: 19, scope: !11790)
!11813 = !DILocation(line: 1824, column: 27, scope: !11790)
!11814 = !DILocation(line: 1824, column: 34, scope: !11790)
!11815 = !DILocalVariable(name: "pm_state", scope: !11790, file: !3, line: 1825, type: !93)
!11816 = !DILocation(line: 1825, column: 21, scope: !11790)
!11817 = !DILocalVariable(name: "uport", scope: !11790, file: !3, line: 1826, type: !4276)
!11818 = !DILocation(line: 1826, column: 20, scope: !11790)
!11819 = !DILocalVariable(name: "stat_buf", scope: !11790, file: !3, line: 1827, type: !2771)
!11820 = !DILocation(line: 1827, column: 7, scope: !11790)
!11821 = !DILocalVariable(name: "status", scope: !11790, file: !3, line: 1828, type: !7)
!11822 = !DILocation(line: 1828, column: 15, scope: !11790)
!11823 = !DILocalVariable(name: "mmio", scope: !11790, file: !3, line: 1829, type: !220)
!11824 = !DILocation(line: 1829, column: 6, scope: !11790)
!11825 = !DILocation(line: 1831, column: 14, scope: !11790)
!11826 = !DILocation(line: 1831, column: 20, scope: !11790)
!11827 = !DILocation(line: 1831, column: 2, scope: !11790)
!11828 = !DILocation(line: 1832, column: 26, scope: !11790)
!11829 = !DILocation(line: 1832, column: 10, scope: !11790)
!11830 = !DILocation(line: 1832, column: 8, scope: !11790)
!11831 = !DILocation(line: 1833, column: 7, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 1833, column: 6)
!11833 = !DILocation(line: 1833, column: 6, scope: !11790)
!11834 = !DILocation(line: 1834, column: 3, scope: !11832)
!11835 = !DILocation(line: 1836, column: 9, scope: !11790)
!11836 = !DILocation(line: 1836, column: 16, scope: !11790)
!11837 = !DILocation(line: 1836, column: 23, scope: !11790)
!11838 = !DILocation(line: 1836, column: 7, scope: !11790)
!11839 = !DILocation(line: 1837, column: 13, scope: !11790)
!11840 = !DILocation(line: 1838, column: 4, scope: !11790)
!11841 = !DILocation(line: 1838, column: 11, scope: !11790)
!11842 = !DILocation(line: 1838, column: 27, scope: !11790)
!11843 = !DILocation(line: 1838, column: 17, scope: !11790)
!11844 = !DILocation(line: 1839, column: 4, scope: !11790)
!11845 = !DILocation(line: 1840, column: 4, scope: !11790)
!11846 = !DILocation(line: 1840, column: 31, scope: !11790)
!11847 = !DILocation(line: 1840, column: 38, scope: !11790)
!11848 = !DILocation(line: 1841, column: 31, scope: !11790)
!11849 = !DILocation(line: 1841, column: 38, scope: !11790)
!11850 = !DILocation(line: 1842, column: 4, scope: !11790)
!11851 = !DILocation(line: 1842, column: 11, scope: !11790)
!11852 = !DILocation(line: 1837, column: 2, scope: !11790)
!11853 = !DILocation(line: 1844, column: 6, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 1844, column: 6)
!11855 = !DILocation(line: 1844, column: 13, scope: !11854)
!11856 = !DILocation(line: 1844, column: 18, scope: !11854)
!11857 = !DILocation(line: 1844, column: 6, scope: !11790)
!11858 = !DILocation(line: 1845, column: 12, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 1844, column: 35)
!11860 = !DILocation(line: 1845, column: 3, scope: !11859)
!11861 = !DILocation(line: 1846, column: 3, scope: !11859)
!11862 = !DILocation(line: 1849, column: 6, scope: !11796)
!11863 = !DILocation(line: 1849, column: 6, scope: !11790)
!11864 = !DILocation(line: 1850, column: 14, scope: !11795)
!11865 = !DILocation(line: 1850, column: 21, scope: !11795)
!11866 = !DILocation(line: 1850, column: 12, scope: !11795)
!11867 = !DILocation(line: 1851, column: 7, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1851, column: 7)
!11869 = !DILocation(line: 1851, column: 16, scope: !11868)
!11870 = !DILocation(line: 1851, column: 7, scope: !11795)
!11871 = !DILocation(line: 1852, column: 19, scope: !11868)
!11872 = !DILocation(line: 1852, column: 4, scope: !11868)
!11873 = !DILocation(line: 1853, column: 18, scope: !11795)
!11874 = !DILocation(line: 1853, column: 25, scope: !11795)
!11875 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !11798)
!11876 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !11798)
!11877 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !11798)
!11878 = !DILocation(line: 1854, column: 12, scope: !11795)
!11879 = !DILocation(line: 1854, column: 19, scope: !11795)
!11880 = !DILocation(line: 1854, column: 24, scope: !11795)
!11881 = !DILocation(line: 1854, column: 34, scope: !11795)
!11882 = !DILocation(line: 1854, column: 10, scope: !11795)
!11883 = !DILocation(line: 1855, column: 20, scope: !11795)
!11884 = !DILocation(line: 1855, column: 27, scope: !11795)
!11885 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !11794)
!11886 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !11794)
!11887 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !11794)
!11888 = !DILocation(line: 1856, column: 7, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1856, column: 7)
!11890 = !DILocation(line: 1856, column: 16, scope: !11889)
!11891 = !DILocation(line: 1856, column: 7, scope: !11795)
!11892 = !DILocation(line: 1857, column: 19, scope: !11889)
!11893 = !DILocation(line: 1857, column: 26, scope: !11889)
!11894 = !DILocation(line: 1857, column: 4, scope: !11889)
!11895 = !DILocation(line: 1859, column: 14, scope: !11795)
!11896 = !DILocation(line: 1860, column: 5, scope: !11795)
!11897 = !DILocation(line: 1860, column: 12, scope: !11795)
!11898 = !DILocation(line: 1860, column: 19, scope: !11795)
!11899 = !DILocation(line: 1860, column: 23, scope: !11795)
!11900 = !DILocation(line: 1860, column: 30, scope: !11795)
!11901 = !DILocation(line: 1860, column: 37, scope: !11795)
!11902 = !DILocation(line: 1859, column: 3, scope: !11795)
!11903 = !DILocation(line: 1861, column: 7, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1861, column: 7)
!11905 = !DILocation(line: 1861, column: 14, scope: !11904)
!11906 = !DILocation(line: 1861, column: 21, scope: !11904)
!11907 = !DILocation(line: 1861, column: 7, scope: !11795)
!11908 = !DILocation(line: 1862, column: 15, scope: !11904)
!11909 = !DILocation(line: 1862, column: 28, scope: !11904)
!11910 = !DILocation(line: 1862, column: 35, scope: !11904)
!11911 = !DILocation(line: 1862, column: 42, scope: !11904)
!11912 = !DILocation(line: 1862, column: 4, scope: !11904)
!11913 = !DILocation(line: 1863, column: 7, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1863, column: 7)
!11915 = !DILocation(line: 1863, column: 14, scope: !11914)
!11916 = !DILocation(line: 1863, column: 21, scope: !11914)
!11917 = !DILocation(line: 1863, column: 7, scope: !11795)
!11918 = !DILocation(line: 1864, column: 15, scope: !11914)
!11919 = !DILocation(line: 1864, column: 28, scope: !11914)
!11920 = !DILocation(line: 1864, column: 35, scope: !11914)
!11921 = !DILocation(line: 1864, column: 42, scope: !11914)
!11922 = !DILocation(line: 1864, column: 4, scope: !11914)
!11923 = !DILocation(line: 1865, column: 7, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1865, column: 7)
!11925 = !DILocation(line: 1865, column: 14, scope: !11924)
!11926 = !DILocation(line: 1865, column: 21, scope: !11924)
!11927 = !DILocation(line: 1865, column: 7, scope: !11795)
!11928 = !DILocation(line: 1866, column: 15, scope: !11924)
!11929 = !DILocation(line: 1866, column: 29, scope: !11924)
!11930 = !DILocation(line: 1866, column: 36, scope: !11924)
!11931 = !DILocation(line: 1866, column: 43, scope: !11924)
!11932 = !DILocation(line: 1866, column: 4, scope: !11924)
!11933 = !DILocation(line: 1867, column: 7, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1867, column: 7)
!11935 = !DILocation(line: 1867, column: 14, scope: !11934)
!11936 = !DILocation(line: 1867, column: 21, scope: !11934)
!11937 = !DILocation(line: 1867, column: 7, scope: !11795)
!11938 = !DILocation(line: 1868, column: 15, scope: !11934)
!11939 = !DILocation(line: 1868, column: 28, scope: !11934)
!11940 = !DILocation(line: 1868, column: 35, scope: !11934)
!11941 = !DILocation(line: 1868, column: 42, scope: !11934)
!11942 = !DILocation(line: 1868, column: 4, scope: !11934)
!11943 = !DILocation(line: 1869, column: 7, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1869, column: 7)
!11945 = !DILocation(line: 1869, column: 14, scope: !11944)
!11946 = !DILocation(line: 1869, column: 21, scope: !11944)
!11947 = !DILocation(line: 1869, column: 7, scope: !11795)
!11948 = !DILocation(line: 1870, column: 15, scope: !11944)
!11949 = !DILocation(line: 1870, column: 28, scope: !11944)
!11950 = !DILocation(line: 1870, column: 35, scope: !11944)
!11951 = !DILocation(line: 1870, column: 42, scope: !11944)
!11952 = !DILocation(line: 1870, column: 4, scope: !11944)
!11953 = !DILocation(line: 1881, column: 3, scope: !11795)
!11954 = !DILocation(line: 1881, column: 15, scope: !11795)
!11955 = !DILocation(line: 1882, column: 3, scope: !11795)
!11956 = !DILocation(line: 1882, column: 15, scope: !11795)
!11957 = !DILocation(line: 1883, column: 3, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1883, column: 3)
!11959 = !DILocation(line: 1883, column: 3, scope: !11795)
!11960 = !DILocation(line: 1884, column: 3, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1884, column: 3)
!11962 = !DILocation(line: 1884, column: 3, scope: !11795)
!11963 = !DILocation(line: 1885, column: 3, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1885, column: 3)
!11965 = !DILocation(line: 1885, column: 3, scope: !11795)
!11966 = !DILocation(line: 1886, column: 3, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1886, column: 3)
!11968 = !DILocation(line: 1886, column: 3, scope: !11795)
!11969 = !DILocation(line: 1887, column: 3, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1887, column: 3)
!11971 = !DILocation(line: 1887, column: 3, scope: !11795)
!11972 = !DILocation(line: 1888, column: 3, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1888, column: 3)
!11974 = !DILocation(line: 1888, column: 3, scope: !11795)
!11975 = !DILocation(line: 1889, column: 7, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 1889, column: 7)
!11977 = !DILocation(line: 1889, column: 7, scope: !11795)
!11978 = !DILocation(line: 1890, column: 4, scope: !11976)
!11979 = !DILocation(line: 1890, column: 16, scope: !11976)
!11980 = !DILocation(line: 1892, column: 12, scope: !11795)
!11981 = !DILocation(line: 1892, column: 15, scope: !11795)
!11982 = !DILocation(line: 1892, column: 3, scope: !11795)
!11983 = !DILocation(line: 1893, column: 2, scope: !11795)
!11984 = !DILocation(line: 1894, column: 11, scope: !11790)
!11985 = !DILocation(line: 1894, column: 2, scope: !11790)
!11986 = !DILabel(scope: !11790, name: "out", file: !3, line: 1897)
!11987 = !DILocation(line: 1897, column: 1, scope: !11790)
!11988 = !DILocation(line: 1898, column: 16, scope: !11790)
!11989 = !DILocation(line: 1898, column: 22, scope: !11790)
!11990 = !DILocation(line: 1898, column: 2, scope: !11790)
!11991 = !DILocation(line: 1899, column: 1, scope: !11790)
!11992 = distinct !DISubprogram(name: "uart_type", scope: !3, file: !3, line: 1806, type: !4453, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!11993 = !DILocalVariable(name: "port", arg: 1, scope: !11992, file: !3, line: 1806, type: !4276)
!11994 = !DILocation(line: 1806, column: 48, scope: !11992)
!11995 = !DILocalVariable(name: "str", scope: !11992, file: !3, line: 1808, type: !316)
!11996 = !DILocation(line: 1808, column: 14, scope: !11992)
!11997 = !DILocation(line: 1810, column: 6, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1810, column: 6)
!11999 = !DILocation(line: 1810, column: 12, scope: !11998)
!12000 = !DILocation(line: 1810, column: 17, scope: !11998)
!12001 = !DILocation(line: 1810, column: 6, scope: !11992)
!12002 = !DILocation(line: 1811, column: 9, scope: !11998)
!12003 = !DILocation(line: 1811, column: 15, scope: !11998)
!12004 = !DILocation(line: 1811, column: 20, scope: !11998)
!12005 = !DILocation(line: 1811, column: 25, scope: !11998)
!12006 = !DILocation(line: 1811, column: 7, scope: !11998)
!12007 = !DILocation(line: 1811, column: 3, scope: !11998)
!12008 = !DILocation(line: 1813, column: 7, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 1813, column: 6)
!12010 = !DILocation(line: 1813, column: 6, scope: !11992)
!12011 = !DILocation(line: 1814, column: 7, scope: !12009)
!12012 = !DILocation(line: 1814, column: 3, scope: !12009)
!12013 = !DILocation(line: 1816, column: 9, scope: !11992)
!12014 = !DILocation(line: 1816, column: 2, scope: !11992)
!12015 = distinct !DISubprogram(name: "uart_carrier_raised", scope: !3, file: !3, line: 1715, type: !4223, scopeLine: 1716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12016 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !12017)
!12017 = distinct !DILocation(line: 1733, column: 2, scope: !12015)
!12018 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !12019)
!12019 = distinct !DILocation(line: 1730, column: 2, scope: !12015)
!12020 = !DILocalVariable(name: "port", arg: 1, scope: !12015, file: !3, line: 1715, type: !3947)
!12021 = !DILocation(line: 1715, column: 49, scope: !12015)
!12022 = !DILocalVariable(name: "state", scope: !12015, file: !3, line: 1717, type: !195)
!12023 = !DILocation(line: 1717, column: 21, scope: !12015)
!12024 = !DILocalVariable(name: "__mptr", scope: !12025, file: !3, line: 1717, type: !185)
!12025 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1717, column: 29)
!12026 = !DILocation(line: 1717, column: 29, scope: !12025)
!12027 = !DILocation(line: 1717, column: 29, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 1717, column: 29)
!12029 = !DILocalVariable(name: "uport", scope: !12015, file: !3, line: 1718, type: !4276)
!12030 = !DILocation(line: 1718, column: 20, scope: !12015)
!12031 = !DILocalVariable(name: "mctrl", scope: !12015, file: !3, line: 1719, type: !220)
!12032 = !DILocation(line: 1719, column: 6, scope: !12015)
!12033 = !DILocation(line: 1721, column: 24, scope: !12015)
!12034 = !DILocation(line: 1721, column: 10, scope: !12015)
!12035 = !DILocation(line: 1721, column: 8, scope: !12015)
!12036 = !DILocalVariable(name: "__ret_warn_on", scope: !12037, file: !3, line: 1728, type: !220)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 1728, column: 6)
!12038 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1728, column: 6)
!12039 = !DILocation(line: 1728, column: 6, scope: !12037)
!12040 = !DILocation(line: 1728, column: 6, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 1728, column: 6)
!12042 = !DILocation(line: 1728, column: 6, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 1728, column: 6)
!12044 = !DILocation(line: 1728, column: 6, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 1728, column: 6)
!12046 = !DILocation(line: 1728, column: 6, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 1728, column: 6)
!12048 = !{i32 -2141514775, i32 -2141514746, i32 -2141514700, i32 -2141514642, i32 -2141514588, i32 -2141514534, i32 -2141514479, i32 -2141514448}
!12049 = !DILocation(line: 1728, column: 6, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 1728, column: 6)
!12051 = !{i32 -2141514033, i32 -2141514026, i32 -2141513974, i32 -2141513943, i32 -2141513913}
!12052 = !DILocation(line: 1728, column: 6, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 1728, column: 6)
!12054 = !DILocation(line: 1728, column: 6, scope: !12038)
!12055 = !DILocation(line: 1728, column: 6, scope: !12015)
!12056 = !DILocation(line: 1729, column: 3, scope: !12038)
!12057 = !DILocation(line: 1730, column: 17, scope: !12015)
!12058 = !DILocation(line: 1730, column: 24, scope: !12015)
!12059 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !12019)
!12060 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !12019)
!12061 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !12019)
!12062 = !DILocation(line: 1731, column: 17, scope: !12015)
!12063 = !DILocation(line: 1731, column: 2, scope: !12015)
!12064 = !DILocation(line: 1732, column: 10, scope: !12015)
!12065 = !DILocation(line: 1732, column: 17, scope: !12015)
!12066 = !DILocation(line: 1732, column: 22, scope: !12015)
!12067 = !DILocation(line: 1732, column: 32, scope: !12015)
!12068 = !DILocation(line: 1732, column: 8, scope: !12015)
!12069 = !DILocation(line: 1733, column: 19, scope: !12015)
!12070 = !DILocation(line: 1733, column: 26, scope: !12015)
!12071 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !12017)
!12072 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !12017)
!12073 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !12017)
!12074 = !DILocation(line: 1734, column: 18, scope: !12015)
!12075 = !DILocation(line: 1734, column: 2, scope: !12015)
!12076 = !DILocation(line: 1735, column: 6, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 1735, column: 6)
!12078 = !DILocation(line: 1735, column: 12, scope: !12077)
!12079 = !DILocation(line: 1735, column: 6, scope: !12015)
!12080 = !DILocation(line: 1736, column: 3, scope: !12077)
!12081 = !DILocation(line: 1737, column: 2, scope: !12015)
!12082 = !DILocation(line: 1738, column: 1, scope: !12015)
!12083 = distinct !DISubprogram(name: "uart_dtr_rts", scope: !3, file: !3, line: 1740, type: !4227, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12084 = !DILocalVariable(name: "port", arg: 1, scope: !12083, file: !3, line: 1740, type: !3947)
!12085 = !DILocation(line: 1740, column: 43, scope: !12083)
!12086 = !DILocalVariable(name: "raise", arg: 2, scope: !12083, file: !3, line: 1740, type: !220)
!12087 = !DILocation(line: 1740, column: 53, scope: !12083)
!12088 = !DILocalVariable(name: "state", scope: !12083, file: !3, line: 1742, type: !195)
!12089 = !DILocation(line: 1742, column: 21, scope: !12083)
!12090 = !DILocalVariable(name: "__mptr", scope: !12091, file: !3, line: 1742, type: !185)
!12091 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 1742, column: 29)
!12092 = !DILocation(line: 1742, column: 29, scope: !12091)
!12093 = !DILocation(line: 1742, column: 29, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12091, file: !3, line: 1742, column: 29)
!12095 = !DILocalVariable(name: "uport", scope: !12083, file: !3, line: 1743, type: !4276)
!12096 = !DILocation(line: 1743, column: 20, scope: !12083)
!12097 = !DILocation(line: 1745, column: 24, scope: !12083)
!12098 = !DILocation(line: 1745, column: 10, scope: !12083)
!12099 = !DILocation(line: 1745, column: 8, scope: !12083)
!12100 = !DILocation(line: 1746, column: 7, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 1746, column: 6)
!12102 = !DILocation(line: 1746, column: 6, scope: !12083)
!12103 = !DILocation(line: 1747, column: 3, scope: !12101)
!12104 = !DILocation(line: 1748, column: 20, scope: !12083)
!12105 = !DILocation(line: 1748, column: 27, scope: !12083)
!12106 = !DILocation(line: 1748, column: 2, scope: !12083)
!12107 = !DILocation(line: 1749, column: 18, scope: !12083)
!12108 = !DILocation(line: 1749, column: 2, scope: !12083)
!12109 = !DILocation(line: 1750, column: 1, scope: !12083)
!12110 = distinct !DISubprogram(name: "uart_tty_port_shutdown", scope: !3, file: !3, line: 1562, type: !4231, scopeLine: 1563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12111 = !DILocation(line: 402, column: 57, scope: !4844, inlinedAt: !12112)
!12112 = distinct !DILocation(line: 1576, column: 2, scope: !12110)
!12113 = !DILocation(line: 377, column: 55, scope: !4853, inlinedAt: !12114)
!12114 = distinct !DILocation(line: 1574, column: 2, scope: !12110)
!12115 = !DILocalVariable(name: "port", arg: 1, scope: !12110, file: !3, line: 1562, type: !3947)
!12116 = !DILocation(line: 1562, column: 53, scope: !12110)
!12117 = !DILocalVariable(name: "state", scope: !12110, file: !3, line: 1564, type: !195)
!12118 = !DILocation(line: 1564, column: 21, scope: !12110)
!12119 = !DILocalVariable(name: "__mptr", scope: !12120, file: !3, line: 1564, type: !185)
!12120 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 1564, column: 29)
!12121 = !DILocation(line: 1564, column: 29, scope: !12120)
!12122 = !DILocation(line: 1564, column: 29, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 1564, column: 29)
!12124 = !DILocalVariable(name: "uport", scope: !12110, file: !3, line: 1565, type: !4276)
!12125 = !DILocation(line: 1565, column: 20, scope: !12110)
!12126 = !DILocation(line: 1565, column: 44, scope: !12110)
!12127 = !DILocation(line: 1565, column: 28, scope: !12110)
!12128 = !DILocalVariable(name: "__ret_warn_on", scope: !12129, file: !3, line: 1571, type: !220)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 1571, column: 6)
!12130 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 1571, column: 6)
!12131 = !DILocation(line: 1571, column: 6, scope: !12129)
!12132 = !DILocation(line: 1571, column: 6, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 1571, column: 6)
!12134 = !DILocation(line: 1571, column: 6, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 1571, column: 6)
!12136 = !DILocation(line: 1571, column: 6, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1571, column: 6)
!12138 = !DILocation(line: 1571, column: 6, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1571, column: 6)
!12140 = !DILocation(line: 1571, column: 6, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1571, column: 6)
!12142 = !DILocation(line: 1571, column: 6, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1571, column: 6)
!12144 = !{i32 -2141523161, i32 -2141523132, i32 -2141523086, i32 -2141523028, i32 -2141522974, i32 -2141522920, i32 -2141522865, i32 -2141522834}
!12145 = !DILocation(line: 1571, column: 6, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1571, column: 6)
!12147 = !{i32 -2141522408, i32 -2141522401, i32 -2141522349, i32 -2141522318, i32 -2141522288}
!12148 = !DILocation(line: 1571, column: 6, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 1571, column: 6)
!12150 = !DILocation(line: 1571, column: 6, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 1571, column: 6)
!12152 = !DILocation(line: 1571, column: 6, scope: !12130)
!12153 = !DILocation(line: 1571, column: 6, scope: !12110)
!12154 = !DILocation(line: 1572, column: 3, scope: !12130)
!12155 = !DILocation(line: 1574, column: 17, scope: !12110)
!12156 = !DILocation(line: 1574, column: 24, scope: !12110)
!12157 = !DILocation(line: 379, column: 2, scope: !4935, inlinedAt: !12114)
!12158 = !DILocation(line: 379, column: 2, scope: !4938, inlinedAt: !12114)
!12159 = !DILocation(line: 379, column: 2, scope: !4941, inlinedAt: !12114)
!12160 = !DILocation(line: 1575, column: 2, scope: !12110)
!12161 = !DILocation(line: 1575, column: 9, scope: !12110)
!12162 = !DILocation(line: 1575, column: 14, scope: !12110)
!12163 = !DILocation(line: 1575, column: 22, scope: !12110)
!12164 = !DILocation(line: 1576, column: 19, scope: !12110)
!12165 = !DILocation(line: 1576, column: 26, scope: !12110)
!12166 = !DILocation(line: 404, column: 2, scope: !4954, inlinedAt: !12112)
!12167 = !DILocation(line: 404, column: 2, scope: !4957, inlinedAt: !12112)
!12168 = !DILocation(line: 404, column: 2, scope: !4960, inlinedAt: !12112)
!12169 = !DILocation(line: 1578, column: 21, scope: !12110)
!12170 = !DILocation(line: 1578, column: 2, scope: !12110)
!12171 = !DILocation(line: 1585, column: 25, scope: !12110)
!12172 = !DILocation(line: 1585, column: 2, scope: !12110)
!12173 = !DILocation(line: 1587, column: 17, scope: !12110)
!12174 = !DILocation(line: 1587, column: 2, scope: !12110)
!12175 = !DILocation(line: 1589, column: 1, scope: !12110)
!12176 = distinct !DISubprogram(name: "uart_port_activate", scope: !3, file: !3, line: 1784, type: !4235, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12177 = !DILocalVariable(name: "port", arg: 1, scope: !12176, file: !3, line: 1784, type: !3947)
!12178 = !DILocation(line: 1784, column: 48, scope: !12176)
!12179 = !DILocalVariable(name: "tty", arg: 2, scope: !12176, file: !3, line: 1784, type: !293)
!12180 = !DILocation(line: 1784, column: 73, scope: !12176)
!12181 = !DILocalVariable(name: "state", scope: !12176, file: !3, line: 1786, type: !195)
!12182 = !DILocation(line: 1786, column: 21, scope: !12176)
!12183 = !DILocalVariable(name: "__mptr", scope: !12184, file: !3, line: 1786, type: !185)
!12184 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1786, column: 29)
!12185 = !DILocation(line: 1786, column: 29, scope: !12184)
!12186 = !DILocation(line: 1786, column: 29, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 1786, column: 29)
!12188 = !DILocalVariable(name: "uport", scope: !12176, file: !3, line: 1787, type: !4276)
!12189 = !DILocation(line: 1787, column: 20, scope: !12176)
!12190 = !DILocalVariable(name: "ret", scope: !12176, file: !3, line: 1788, type: !220)
!12191 = !DILocation(line: 1788, column: 6, scope: !12176)
!12192 = !DILocation(line: 1790, column: 26, scope: !12176)
!12193 = !DILocation(line: 1790, column: 10, scope: !12176)
!12194 = !DILocation(line: 1790, column: 8, scope: !12176)
!12195 = !DILocation(line: 1791, column: 7, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1791, column: 6)
!12197 = !DILocation(line: 1791, column: 13, scope: !12196)
!12198 = !DILocation(line: 1791, column: 16, scope: !12196)
!12199 = !DILocation(line: 1791, column: 23, scope: !12196)
!12200 = !DILocation(line: 1791, column: 29, scope: !12196)
!12201 = !DILocation(line: 1791, column: 6, scope: !12176)
!12202 = !DILocation(line: 1792, column: 3, scope: !12196)
!12203 = !DILocation(line: 1794, column: 23, scope: !12176)
!12204 = !DILocation(line: 1794, column: 30, scope: !12176)
!12205 = !DILocation(line: 1794, column: 36, scope: !12176)
!12206 = !DILocation(line: 1794, column: 22, scope: !12176)
!12207 = !DILocation(line: 1794, column: 2, scope: !12176)
!12208 = !DILocation(line: 1794, column: 8, scope: !12176)
!12209 = !DILocation(line: 1794, column: 20, scope: !12176)
!12210 = !DILocation(line: 1799, column: 21, scope: !12176)
!12211 = !DILocation(line: 1799, column: 26, scope: !12176)
!12212 = !DILocation(line: 1799, column: 8, scope: !12176)
!12213 = !DILocation(line: 1799, column: 6, scope: !12176)
!12214 = !DILocation(line: 1800, column: 6, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 1800, column: 6)
!12216 = !DILocation(line: 1800, column: 10, scope: !12215)
!12217 = !DILocation(line: 1800, column: 6, scope: !12176)
!12218 = !DILocation(line: 1801, column: 23, scope: !12215)
!12219 = !DILocation(line: 1801, column: 3, scope: !12215)
!12220 = !DILocation(line: 1803, column: 9, scope: !12176)
!12221 = !DILocation(line: 1803, column: 2, scope: !12176)
!12222 = !DILocation(line: 1804, column: 1, scope: !12176)
!12223 = distinct !DISubprogram(name: "uart_report_port", scope: !3, file: !3, line: 2309, type: !12224, scopeLine: 2310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12224 = !DISubroutineType(types: !12225)
!12225 = !{null, !4503, !4276}
!12226 = !DILocalVariable(name: "drv", arg: 1, scope: !12223, file: !3, line: 2309, type: !4503)
!12227 = !DILocation(line: 2309, column: 38, scope: !12223)
!12228 = !DILocalVariable(name: "port", arg: 2, scope: !12223, file: !3, line: 2309, type: !4276)
!12229 = !DILocation(line: 2309, column: 61, scope: !12223)
!12230 = !DILocalVariable(name: "address", scope: !12223, file: !3, line: 2311, type: !4186)
!12231 = !DILocation(line: 2311, column: 7, scope: !12223)
!12232 = !DILocation(line: 2313, column: 10, scope: !12223)
!12233 = !DILocation(line: 2313, column: 16, scope: !12223)
!12234 = !DILocation(line: 2313, column: 2, scope: !12223)
!12235 = !DILocation(line: 2315, column: 12, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12223, file: !3, line: 2313, column: 24)
!12237 = !DILocation(line: 2315, column: 51, scope: !12236)
!12238 = !DILocation(line: 2315, column: 57, scope: !12236)
!12239 = !DILocation(line: 2315, column: 3, scope: !12236)
!12240 = !DILocation(line: 2316, column: 3, scope: !12236)
!12241 = !DILocation(line: 2318, column: 12, scope: !12236)
!12242 = !DILocation(line: 2319, column: 30, scope: !12236)
!12243 = !DILocation(line: 2319, column: 36, scope: !12236)
!12244 = !DILocation(line: 2319, column: 44, scope: !12236)
!12245 = !DILocation(line: 2319, column: 50, scope: !12236)
!12246 = !DILocation(line: 2318, column: 3, scope: !12236)
!12247 = !DILocation(line: 2320, column: 3, scope: !12236)
!12248 = !DILocation(line: 2327, column: 12, scope: !12236)
!12249 = !DILocation(line: 2328, column: 40, scope: !12236)
!12250 = !DILocation(line: 2328, column: 46, scope: !12236)
!12251 = !DILocation(line: 2327, column: 3, scope: !12236)
!12252 = !DILocation(line: 2329, column: 3, scope: !12236)
!12253 = !DILocation(line: 2331, column: 11, scope: !12236)
!12254 = !DILocation(line: 2331, column: 3, scope: !12236)
!12255 = !DILocation(line: 2332, column: 3, scope: !12236)
!12256 = !DILocation(line: 2335, column: 2, scope: !12223)
!12257 = !DILocation(line: 2340, column: 1, scope: !12223)
!12258 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !12259, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12259 = !DISubroutineType(types: !12260)
!12260 = !{!316, !3776}
!12261 = !DILocalVariable(name: "dev", arg: 1, scope: !12258, file: !73, line: 609, type: !3776)
!12262 = !DILocation(line: 609, column: 57, scope: !12258)
!12263 = !DILocation(line: 612, column: 6, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12258, file: !73, line: 612, column: 6)
!12265 = !DILocation(line: 612, column: 11, scope: !12264)
!12266 = !DILocation(line: 612, column: 6, scope: !12258)
!12267 = !DILocation(line: 613, column: 10, scope: !12264)
!12268 = !DILocation(line: 613, column: 15, scope: !12264)
!12269 = !DILocation(line: 613, column: 3, scope: !12264)
!12270 = !DILocation(line: 615, column: 23, scope: !12258)
!12271 = !DILocation(line: 615, column: 28, scope: !12258)
!12272 = !DILocation(line: 615, column: 9, scope: !12258)
!12273 = !DILocation(line: 615, column: 2, scope: !12258)
!12274 = !DILocation(line: 616, column: 1, scope: !12258)
!12275 = distinct !DISubprogram(name: "kobject_name", scope: !313, file: !313, line: 88, type: !12276, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12276 = !DISubroutineType(types: !12277)
!12277 = !{!316, !12278}
!12278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12279, size: 64)
!12279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!12280 = !DILocalVariable(name: "kobj", arg: 1, scope: !12275, file: !313, line: 88, type: !12278)
!12281 = !DILocation(line: 88, column: 62, scope: !12275)
!12282 = !DILocation(line: 90, column: 9, scope: !12275)
!12283 = !DILocation(line: 90, column: 15, scope: !12275)
!12284 = !DILocation(line: 90, column: 2, scope: !12275)
!12285 = distinct !DISubprogram(name: "uartclk_show", scope: !3, file: !3, line: 2622, type: !4555, scopeLine: 2624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12286 = !DILocalVariable(name: "dev", arg: 1, scope: !12285, file: !3, line: 2622, type: !308)
!12287 = !DILocation(line: 2622, column: 44, scope: !12285)
!12288 = !DILocalVariable(name: "attr", arg: 2, scope: !12285, file: !3, line: 2623, type: !4557)
!12289 = !DILocation(line: 2623, column: 27, scope: !12285)
!12290 = !DILocalVariable(name: "buf", arg: 3, scope: !12285, file: !3, line: 2623, type: !353)
!12291 = !DILocation(line: 2623, column: 39, scope: !12285)
!12292 = !DILocalVariable(name: "tmp", scope: !12285, file: !3, line: 2625, type: !4085)
!12293 = !DILocation(line: 2625, column: 23, scope: !12285)
!12294 = !DILocalVariable(name: "port", scope: !12285, file: !3, line: 2626, type: !3947)
!12295 = !DILocation(line: 2626, column: 19, scope: !12285)
!12296 = !DILocation(line: 2626, column: 42, scope: !12285)
!12297 = !DILocation(line: 2626, column: 26, scope: !12285)
!12298 = !DILocation(line: 2628, column: 16, scope: !12285)
!12299 = !DILocation(line: 2628, column: 2, scope: !12285)
!12300 = !DILocation(line: 2629, column: 17, scope: !12285)
!12301 = !DILocation(line: 2629, column: 34, scope: !12285)
!12302 = !DILocation(line: 2629, column: 44, scope: !12285)
!12303 = !DILocation(line: 2629, column: 9, scope: !12285)
!12304 = !DILocation(line: 2629, column: 2, scope: !12285)
!12305 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !12306, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12306 = !DISubroutineType(types: !12307)
!12307 = !{!185, !3776}
!12308 = !DILocalVariable(name: "dev", arg: 1, scope: !12305, file: !73, line: 655, type: !3776)
!12309 = !DILocation(line: 655, column: 58, scope: !12305)
!12310 = !DILocation(line: 657, column: 9, scope: !12305)
!12311 = !DILocation(line: 657, column: 14, scope: !12305)
!12312 = !DILocation(line: 657, column: 2, scope: !12305)
!12313 = distinct !DISubprogram(name: "type_show", scope: !3, file: !3, line: 2632, type: !4555, scopeLine: 2634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12314 = !DILocalVariable(name: "dev", arg: 1, scope: !12313, file: !3, line: 2632, type: !308)
!12315 = !DILocation(line: 2632, column: 41, scope: !12313)
!12316 = !DILocalVariable(name: "attr", arg: 2, scope: !12313, file: !3, line: 2633, type: !4557)
!12317 = !DILocation(line: 2633, column: 27, scope: !12313)
!12318 = !DILocalVariable(name: "buf", arg: 3, scope: !12313, file: !3, line: 2633, type: !353)
!12319 = !DILocation(line: 2633, column: 39, scope: !12313)
!12320 = !DILocalVariable(name: "tmp", scope: !12313, file: !3, line: 2635, type: !4085)
!12321 = !DILocation(line: 2635, column: 23, scope: !12313)
!12322 = !DILocalVariable(name: "port", scope: !12313, file: !3, line: 2636, type: !3947)
!12323 = !DILocation(line: 2636, column: 19, scope: !12313)
!12324 = !DILocation(line: 2636, column: 42, scope: !12313)
!12325 = !DILocation(line: 2636, column: 26, scope: !12313)
!12326 = !DILocation(line: 2638, column: 16, scope: !12313)
!12327 = !DILocation(line: 2638, column: 2, scope: !12313)
!12328 = !DILocation(line: 2639, column: 17, scope: !12313)
!12329 = !DILocation(line: 2639, column: 34, scope: !12313)
!12330 = !DILocation(line: 2639, column: 9, scope: !12313)
!12331 = !DILocation(line: 2639, column: 2, scope: !12313)
!12332 = distinct !DISubprogram(name: "line_show", scope: !3, file: !3, line: 2642, type: !4555, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12333 = !DILocalVariable(name: "dev", arg: 1, scope: !12332, file: !3, line: 2642, type: !308)
!12334 = !DILocation(line: 2642, column: 41, scope: !12332)
!12335 = !DILocalVariable(name: "attr", arg: 2, scope: !12332, file: !3, line: 2643, type: !4557)
!12336 = !DILocation(line: 2643, column: 27, scope: !12332)
!12337 = !DILocalVariable(name: "buf", arg: 3, scope: !12332, file: !3, line: 2643, type: !353)
!12338 = !DILocation(line: 2643, column: 39, scope: !12332)
!12339 = !DILocalVariable(name: "tmp", scope: !12332, file: !3, line: 2645, type: !4085)
!12340 = !DILocation(line: 2645, column: 23, scope: !12332)
!12341 = !DILocalVariable(name: "port", scope: !12332, file: !3, line: 2646, type: !3947)
!12342 = !DILocation(line: 2646, column: 19, scope: !12332)
!12343 = !DILocation(line: 2646, column: 42, scope: !12332)
!12344 = !DILocation(line: 2646, column: 26, scope: !12332)
!12345 = !DILocation(line: 2648, column: 16, scope: !12332)
!12346 = !DILocation(line: 2648, column: 2, scope: !12332)
!12347 = !DILocation(line: 2649, column: 17, scope: !12332)
!12348 = !DILocation(line: 2649, column: 34, scope: !12332)
!12349 = !DILocation(line: 2649, column: 9, scope: !12332)
!12350 = !DILocation(line: 2649, column: 2, scope: !12332)
!12351 = distinct !DISubprogram(name: "port_show", scope: !3, file: !3, line: 2652, type: !4555, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12352 = !DILocalVariable(name: "dev", arg: 1, scope: !12351, file: !3, line: 2652, type: !308)
!12353 = !DILocation(line: 2652, column: 41, scope: !12351)
!12354 = !DILocalVariable(name: "attr", arg: 2, scope: !12351, file: !3, line: 2653, type: !4557)
!12355 = !DILocation(line: 2653, column: 27, scope: !12351)
!12356 = !DILocalVariable(name: "buf", arg: 3, scope: !12351, file: !3, line: 2653, type: !353)
!12357 = !DILocation(line: 2653, column: 39, scope: !12351)
!12358 = !DILocalVariable(name: "tmp", scope: !12351, file: !3, line: 2655, type: !4085)
!12359 = !DILocation(line: 2655, column: 23, scope: !12351)
!12360 = !DILocalVariable(name: "port", scope: !12351, file: !3, line: 2656, type: !3947)
!12361 = !DILocation(line: 2656, column: 19, scope: !12351)
!12362 = !DILocation(line: 2656, column: 42, scope: !12351)
!12363 = !DILocation(line: 2656, column: 26, scope: !12351)
!12364 = !DILocalVariable(name: "ioaddr", scope: !12351, file: !3, line: 2657, type: !187)
!12365 = !DILocation(line: 2657, column: 16, scope: !12351)
!12366 = !DILocation(line: 2659, column: 16, scope: !12351)
!12367 = !DILocation(line: 2659, column: 2, scope: !12351)
!12368 = !DILocation(line: 2660, column: 15, scope: !12351)
!12369 = !DILocation(line: 2660, column: 11, scope: !12351)
!12370 = !DILocation(line: 2660, column: 9, scope: !12351)
!12371 = !DILocation(line: 2662, column: 32, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 2661, column: 6)
!12373 = !DILocation(line: 2662, column: 13, scope: !12372)
!12374 = !DILocation(line: 2662, column: 42, scope: !12372)
!12375 = !DILocation(line: 2662, column: 10, scope: !12372)
!12376 = !DILocation(line: 2663, column: 17, scope: !12351)
!12377 = !DILocation(line: 2663, column: 33, scope: !12351)
!12378 = !DILocation(line: 2663, column: 9, scope: !12351)
!12379 = !DILocation(line: 2663, column: 2, scope: !12351)
!12380 = distinct !DISubprogram(name: "irq_show", scope: !3, file: !3, line: 2666, type: !4555, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12381 = !DILocalVariable(name: "dev", arg: 1, scope: !12380, file: !3, line: 2666, type: !308)
!12382 = !DILocation(line: 2666, column: 40, scope: !12380)
!12383 = !DILocalVariable(name: "attr", arg: 2, scope: !12380, file: !3, line: 2667, type: !4557)
!12384 = !DILocation(line: 2667, column: 27, scope: !12380)
!12385 = !DILocalVariable(name: "buf", arg: 3, scope: !12380, file: !3, line: 2667, type: !353)
!12386 = !DILocation(line: 2667, column: 39, scope: !12380)
!12387 = !DILocalVariable(name: "tmp", scope: !12380, file: !3, line: 2669, type: !4085)
!12388 = !DILocation(line: 2669, column: 23, scope: !12380)
!12389 = !DILocalVariable(name: "port", scope: !12380, file: !3, line: 2670, type: !3947)
!12390 = !DILocation(line: 2670, column: 19, scope: !12380)
!12391 = !DILocation(line: 2670, column: 42, scope: !12380)
!12392 = !DILocation(line: 2670, column: 26, scope: !12380)
!12393 = !DILocation(line: 2672, column: 16, scope: !12380)
!12394 = !DILocation(line: 2672, column: 2, scope: !12380)
!12395 = !DILocation(line: 2673, column: 17, scope: !12380)
!12396 = !DILocation(line: 2673, column: 34, scope: !12380)
!12397 = !DILocation(line: 2673, column: 9, scope: !12380)
!12398 = !DILocation(line: 2673, column: 2, scope: !12380)
!12399 = distinct !DISubprogram(name: "flags_show", scope: !3, file: !3, line: 2676, type: !4555, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12400 = !DILocalVariable(name: "dev", arg: 1, scope: !12399, file: !3, line: 2676, type: !308)
!12401 = !DILocation(line: 2676, column: 42, scope: !12399)
!12402 = !DILocalVariable(name: "attr", arg: 2, scope: !12399, file: !3, line: 2677, type: !4557)
!12403 = !DILocation(line: 2677, column: 27, scope: !12399)
!12404 = !DILocalVariable(name: "buf", arg: 3, scope: !12399, file: !3, line: 2677, type: !353)
!12405 = !DILocation(line: 2677, column: 39, scope: !12399)
!12406 = !DILocalVariable(name: "tmp", scope: !12399, file: !3, line: 2679, type: !4085)
!12407 = !DILocation(line: 2679, column: 23, scope: !12399)
!12408 = !DILocalVariable(name: "port", scope: !12399, file: !3, line: 2680, type: !3947)
!12409 = !DILocation(line: 2680, column: 19, scope: !12399)
!12410 = !DILocation(line: 2680, column: 42, scope: !12399)
!12411 = !DILocation(line: 2680, column: 26, scope: !12399)
!12412 = !DILocation(line: 2682, column: 16, scope: !12399)
!12413 = !DILocation(line: 2682, column: 2, scope: !12399)
!12414 = !DILocation(line: 2683, column: 17, scope: !12399)
!12415 = !DILocation(line: 2683, column: 36, scope: !12399)
!12416 = !DILocation(line: 2683, column: 9, scope: !12399)
!12417 = !DILocation(line: 2683, column: 2, scope: !12399)
!12418 = distinct !DISubprogram(name: "xmit_fifo_size_show", scope: !3, file: !3, line: 2686, type: !4555, scopeLine: 2688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12419 = !DILocalVariable(name: "dev", arg: 1, scope: !12418, file: !3, line: 2686, type: !308)
!12420 = !DILocation(line: 2686, column: 51, scope: !12418)
!12421 = !DILocalVariable(name: "attr", arg: 2, scope: !12418, file: !3, line: 2687, type: !4557)
!12422 = !DILocation(line: 2687, column: 27, scope: !12418)
!12423 = !DILocalVariable(name: "buf", arg: 3, scope: !12418, file: !3, line: 2687, type: !353)
!12424 = !DILocation(line: 2687, column: 39, scope: !12418)
!12425 = !DILocalVariable(name: "tmp", scope: !12418, file: !3, line: 2689, type: !4085)
!12426 = !DILocation(line: 2689, column: 23, scope: !12418)
!12427 = !DILocalVariable(name: "port", scope: !12418, file: !3, line: 2690, type: !3947)
!12428 = !DILocation(line: 2690, column: 19, scope: !12418)
!12429 = !DILocation(line: 2690, column: 42, scope: !12418)
!12430 = !DILocation(line: 2690, column: 26, scope: !12418)
!12431 = !DILocation(line: 2692, column: 16, scope: !12418)
!12432 = !DILocation(line: 2692, column: 2, scope: !12418)
!12433 = !DILocation(line: 2693, column: 17, scope: !12418)
!12434 = !DILocation(line: 2693, column: 34, scope: !12418)
!12435 = !DILocation(line: 2693, column: 9, scope: !12418)
!12436 = !DILocation(line: 2693, column: 2, scope: !12418)
!12437 = distinct !DISubprogram(name: "close_delay_show", scope: !3, file: !3, line: 2696, type: !4555, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12438 = !DILocalVariable(name: "dev", arg: 1, scope: !12437, file: !3, line: 2696, type: !308)
!12439 = !DILocation(line: 2696, column: 48, scope: !12437)
!12440 = !DILocalVariable(name: "attr", arg: 2, scope: !12437, file: !3, line: 2697, type: !4557)
!12441 = !DILocation(line: 2697, column: 27, scope: !12437)
!12442 = !DILocalVariable(name: "buf", arg: 3, scope: !12437, file: !3, line: 2697, type: !353)
!12443 = !DILocation(line: 2697, column: 39, scope: !12437)
!12444 = !DILocalVariable(name: "tmp", scope: !12437, file: !3, line: 2699, type: !4085)
!12445 = !DILocation(line: 2699, column: 23, scope: !12437)
!12446 = !DILocalVariable(name: "port", scope: !12437, file: !3, line: 2700, type: !3947)
!12447 = !DILocation(line: 2700, column: 19, scope: !12437)
!12448 = !DILocation(line: 2700, column: 42, scope: !12437)
!12449 = !DILocation(line: 2700, column: 26, scope: !12437)
!12450 = !DILocation(line: 2702, column: 16, scope: !12437)
!12451 = !DILocation(line: 2702, column: 2, scope: !12437)
!12452 = !DILocation(line: 2703, column: 17, scope: !12437)
!12453 = !DILocation(line: 2703, column: 34, scope: !12437)
!12454 = !DILocation(line: 2703, column: 30, scope: !12437)
!12455 = !DILocation(line: 2703, column: 9, scope: !12437)
!12456 = !DILocation(line: 2703, column: 2, scope: !12437)
!12457 = distinct !DISubprogram(name: "closing_wait_show", scope: !3, file: !3, line: 2706, type: !4555, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12458 = !DILocalVariable(name: "dev", arg: 1, scope: !12457, file: !3, line: 2706, type: !308)
!12459 = !DILocation(line: 2706, column: 49, scope: !12457)
!12460 = !DILocalVariable(name: "attr", arg: 2, scope: !12457, file: !3, line: 2707, type: !4557)
!12461 = !DILocation(line: 2707, column: 27, scope: !12457)
!12462 = !DILocalVariable(name: "buf", arg: 3, scope: !12457, file: !3, line: 2707, type: !353)
!12463 = !DILocation(line: 2707, column: 39, scope: !12457)
!12464 = !DILocalVariable(name: "tmp", scope: !12457, file: !3, line: 2709, type: !4085)
!12465 = !DILocation(line: 2709, column: 23, scope: !12457)
!12466 = !DILocalVariable(name: "port", scope: !12457, file: !3, line: 2710, type: !3947)
!12467 = !DILocation(line: 2710, column: 19, scope: !12457)
!12468 = !DILocation(line: 2710, column: 42, scope: !12457)
!12469 = !DILocation(line: 2710, column: 26, scope: !12457)
!12470 = !DILocation(line: 2712, column: 16, scope: !12457)
!12471 = !DILocation(line: 2712, column: 2, scope: !12457)
!12472 = !DILocation(line: 2713, column: 17, scope: !12457)
!12473 = !DILocation(line: 2713, column: 34, scope: !12457)
!12474 = !DILocation(line: 2713, column: 30, scope: !12457)
!12475 = !DILocation(line: 2713, column: 9, scope: !12457)
!12476 = !DILocation(line: 2713, column: 2, scope: !12457)
!12477 = distinct !DISubprogram(name: "custom_divisor_show", scope: !3, file: !3, line: 2716, type: !4555, scopeLine: 2718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12478 = !DILocalVariable(name: "dev", arg: 1, scope: !12477, file: !3, line: 2716, type: !308)
!12479 = !DILocation(line: 2716, column: 51, scope: !12477)
!12480 = !DILocalVariable(name: "attr", arg: 2, scope: !12477, file: !3, line: 2717, type: !4557)
!12481 = !DILocation(line: 2717, column: 27, scope: !12477)
!12482 = !DILocalVariable(name: "buf", arg: 3, scope: !12477, file: !3, line: 2717, type: !353)
!12483 = !DILocation(line: 2717, column: 39, scope: !12477)
!12484 = !DILocalVariable(name: "tmp", scope: !12477, file: !3, line: 2719, type: !4085)
!12485 = !DILocation(line: 2719, column: 23, scope: !12477)
!12486 = !DILocalVariable(name: "port", scope: !12477, file: !3, line: 2720, type: !3947)
!12487 = !DILocation(line: 2720, column: 19, scope: !12477)
!12488 = !DILocation(line: 2720, column: 42, scope: !12477)
!12489 = !DILocation(line: 2720, column: 26, scope: !12477)
!12490 = !DILocation(line: 2722, column: 16, scope: !12477)
!12491 = !DILocation(line: 2722, column: 2, scope: !12477)
!12492 = !DILocation(line: 2723, column: 17, scope: !12477)
!12493 = !DILocation(line: 2723, column: 34, scope: !12477)
!12494 = !DILocation(line: 2723, column: 9, scope: !12477)
!12495 = !DILocation(line: 2723, column: 2, scope: !12477)
!12496 = distinct !DISubprogram(name: "io_type_show", scope: !3, file: !3, line: 2726, type: !4555, scopeLine: 2728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12497 = !DILocalVariable(name: "dev", arg: 1, scope: !12496, file: !3, line: 2726, type: !308)
!12498 = !DILocation(line: 2726, column: 44, scope: !12496)
!12499 = !DILocalVariable(name: "attr", arg: 2, scope: !12496, file: !3, line: 2727, type: !4557)
!12500 = !DILocation(line: 2727, column: 27, scope: !12496)
!12501 = !DILocalVariable(name: "buf", arg: 3, scope: !12496, file: !3, line: 2727, type: !353)
!12502 = !DILocation(line: 2727, column: 39, scope: !12496)
!12503 = !DILocalVariable(name: "tmp", scope: !12496, file: !3, line: 2729, type: !4085)
!12504 = !DILocation(line: 2729, column: 23, scope: !12496)
!12505 = !DILocalVariable(name: "port", scope: !12496, file: !3, line: 2730, type: !3947)
!12506 = !DILocation(line: 2730, column: 19, scope: !12496)
!12507 = !DILocation(line: 2730, column: 42, scope: !12496)
!12508 = !DILocation(line: 2730, column: 26, scope: !12496)
!12509 = !DILocation(line: 2732, column: 16, scope: !12496)
!12510 = !DILocation(line: 2732, column: 2, scope: !12496)
!12511 = !DILocation(line: 2733, column: 17, scope: !12496)
!12512 = !DILocation(line: 2733, column: 34, scope: !12496)
!12513 = !DILocation(line: 2733, column: 30, scope: !12496)
!12514 = !DILocation(line: 2733, column: 9, scope: !12496)
!12515 = !DILocation(line: 2733, column: 2, scope: !12496)
!12516 = distinct !DISubprogram(name: "iomem_base_show", scope: !3, file: !3, line: 2736, type: !4555, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12517 = !DILocalVariable(name: "dev", arg: 1, scope: !12516, file: !3, line: 2736, type: !308)
!12518 = !DILocation(line: 2736, column: 47, scope: !12516)
!12519 = !DILocalVariable(name: "attr", arg: 2, scope: !12516, file: !3, line: 2737, type: !4557)
!12520 = !DILocation(line: 2737, column: 27, scope: !12516)
!12521 = !DILocalVariable(name: "buf", arg: 3, scope: !12516, file: !3, line: 2737, type: !353)
!12522 = !DILocation(line: 2737, column: 39, scope: !12516)
!12523 = !DILocalVariable(name: "tmp", scope: !12516, file: !3, line: 2739, type: !4085)
!12524 = !DILocation(line: 2739, column: 23, scope: !12516)
!12525 = !DILocalVariable(name: "port", scope: !12516, file: !3, line: 2740, type: !3947)
!12526 = !DILocation(line: 2740, column: 19, scope: !12516)
!12527 = !DILocation(line: 2740, column: 42, scope: !12516)
!12528 = !DILocation(line: 2740, column: 26, scope: !12516)
!12529 = !DILocation(line: 2742, column: 16, scope: !12516)
!12530 = !DILocation(line: 2742, column: 2, scope: !12516)
!12531 = !DILocation(line: 2743, column: 17, scope: !12516)
!12532 = !DILocation(line: 2743, column: 52, scope: !12516)
!12533 = !DILocation(line: 2743, column: 33, scope: !12516)
!12534 = !DILocation(line: 2743, column: 9, scope: !12516)
!12535 = !DILocation(line: 2743, column: 2, scope: !12516)
!12536 = distinct !DISubprogram(name: "iomem_reg_shift_show", scope: !3, file: !3, line: 2746, type: !4555, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12537 = !DILocalVariable(name: "dev", arg: 1, scope: !12536, file: !3, line: 2746, type: !308)
!12538 = !DILocation(line: 2746, column: 52, scope: !12536)
!12539 = !DILocalVariable(name: "attr", arg: 2, scope: !12536, file: !3, line: 2747, type: !4557)
!12540 = !DILocation(line: 2747, column: 27, scope: !12536)
!12541 = !DILocalVariable(name: "buf", arg: 3, scope: !12536, file: !3, line: 2747, type: !353)
!12542 = !DILocation(line: 2747, column: 39, scope: !12536)
!12543 = !DILocalVariable(name: "tmp", scope: !12536, file: !3, line: 2749, type: !4085)
!12544 = !DILocation(line: 2749, column: 23, scope: !12536)
!12545 = !DILocalVariable(name: "port", scope: !12536, file: !3, line: 2750, type: !3947)
!12546 = !DILocation(line: 2750, column: 19, scope: !12536)
!12547 = !DILocation(line: 2750, column: 42, scope: !12536)
!12548 = !DILocation(line: 2750, column: 26, scope: !12536)
!12549 = !DILocation(line: 2752, column: 16, scope: !12536)
!12550 = !DILocation(line: 2752, column: 2, scope: !12536)
!12551 = !DILocation(line: 2753, column: 17, scope: !12536)
!12552 = !DILocation(line: 2753, column: 34, scope: !12536)
!12553 = !DILocation(line: 2753, column: 30, scope: !12536)
!12554 = !DILocation(line: 2753, column: 9, scope: !12536)
!12555 = !DILocation(line: 2753, column: 2, scope: !12536)
!12556 = distinct !DISubprogram(name: "console_show", scope: !3, file: !3, line: 2756, type: !4555, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12557 = !DILocalVariable(name: "dev", arg: 1, scope: !12556, file: !3, line: 2756, type: !308)
!12558 = !DILocation(line: 2756, column: 44, scope: !12556)
!12559 = !DILocalVariable(name: "attr", arg: 2, scope: !12556, file: !3, line: 2757, type: !4557)
!12560 = !DILocation(line: 2757, column: 27, scope: !12556)
!12561 = !DILocalVariable(name: "buf", arg: 3, scope: !12556, file: !3, line: 2757, type: !353)
!12562 = !DILocation(line: 2757, column: 39, scope: !12556)
!12563 = !DILocalVariable(name: "port", scope: !12556, file: !3, line: 2759, type: !3947)
!12564 = !DILocation(line: 2759, column: 19, scope: !12556)
!12565 = !DILocation(line: 2759, column: 42, scope: !12556)
!12566 = !DILocation(line: 2759, column: 26, scope: !12556)
!12567 = !DILocalVariable(name: "state", scope: !12556, file: !3, line: 2760, type: !195)
!12568 = !DILocation(line: 2760, column: 21, scope: !12556)
!12569 = !DILocalVariable(name: "__mptr", scope: !12570, file: !3, line: 2760, type: !185)
!12570 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2760, column: 29)
!12571 = !DILocation(line: 2760, column: 29, scope: !12570)
!12572 = !DILocation(line: 2760, column: 29, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12570, file: !3, line: 2760, column: 29)
!12574 = !DILocalVariable(name: "uport", scope: !12556, file: !3, line: 2761, type: !4276)
!12575 = !DILocation(line: 2761, column: 20, scope: !12556)
!12576 = !DILocalVariable(name: "console", scope: !12556, file: !3, line: 2762, type: !560)
!12577 = !DILocation(line: 2762, column: 7, scope: !12556)
!12578 = !DILocation(line: 2764, column: 14, scope: !12556)
!12579 = !DILocation(line: 2764, column: 20, scope: !12556)
!12580 = !DILocation(line: 2764, column: 2, scope: !12556)
!12581 = !DILocation(line: 2765, column: 26, scope: !12556)
!12582 = !DILocation(line: 2765, column: 10, scope: !12556)
!12583 = !DILocation(line: 2765, column: 8, scope: !12556)
!12584 = !DILocation(line: 2766, column: 6, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2766, column: 6)
!12586 = !DILocation(line: 2766, column: 6, scope: !12556)
!12587 = !DILocation(line: 2767, column: 34, scope: !12585)
!12588 = !DILocation(line: 2767, column: 13, scope: !12585)
!12589 = !DILocation(line: 2767, column: 11, scope: !12585)
!12590 = !DILocation(line: 2767, column: 3, scope: !12585)
!12591 = !DILocation(line: 2768, column: 16, scope: !12556)
!12592 = !DILocation(line: 2768, column: 22, scope: !12556)
!12593 = !DILocation(line: 2768, column: 2, scope: !12556)
!12594 = !DILocation(line: 2770, column: 17, scope: !12556)
!12595 = !DILocation(line: 2770, column: 30, scope: !12556)
!12596 = !DILocation(line: 2770, column: 9, scope: !12556)
!12597 = !DILocation(line: 2770, column: 2, scope: !12556)
!12598 = distinct !DISubprogram(name: "console_store", scope: !3, file: !3, line: 2773, type: !4560, scopeLine: 2775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12599 = !DILocalVariable(name: "dev", arg: 1, scope: !12598, file: !3, line: 2773, type: !308)
!12600 = !DILocation(line: 2773, column: 45, scope: !12598)
!12601 = !DILocalVariable(name: "attr", arg: 2, scope: !12598, file: !3, line: 2774, type: !4557)
!12602 = !DILocation(line: 2774, column: 27, scope: !12598)
!12603 = !DILocalVariable(name: "buf", arg: 3, scope: !12598, file: !3, line: 2774, type: !316)
!12604 = !DILocation(line: 2774, column: 45, scope: !12598)
!12605 = !DILocalVariable(name: "count", arg: 4, scope: !12598, file: !3, line: 2774, type: !399)
!12606 = !DILocation(line: 2774, column: 57, scope: !12598)
!12607 = !DILocalVariable(name: "port", scope: !12598, file: !3, line: 2776, type: !3947)
!12608 = !DILocation(line: 2776, column: 19, scope: !12598)
!12609 = !DILocation(line: 2776, column: 42, scope: !12598)
!12610 = !DILocation(line: 2776, column: 26, scope: !12598)
!12611 = !DILocalVariable(name: "state", scope: !12598, file: !3, line: 2777, type: !195)
!12612 = !DILocation(line: 2777, column: 21, scope: !12598)
!12613 = !DILocalVariable(name: "__mptr", scope: !12614, file: !3, line: 2777, type: !185)
!12614 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 2777, column: 29)
!12615 = !DILocation(line: 2777, column: 29, scope: !12614)
!12616 = !DILocation(line: 2777, column: 29, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 2777, column: 29)
!12618 = !DILocalVariable(name: "uport", scope: !12598, file: !3, line: 2778, type: !4276)
!12619 = !DILocation(line: 2778, column: 20, scope: !12598)
!12620 = !DILocalVariable(name: "oldconsole", scope: !12598, file: !3, line: 2779, type: !560)
!12621 = !DILocation(line: 2779, column: 7, scope: !12598)
!12622 = !DILocalVariable(name: "newconsole", scope: !12598, file: !3, line: 2779, type: !560)
!12623 = !DILocation(line: 2779, column: 19, scope: !12598)
!12624 = !DILocalVariable(name: "ret", scope: !12598, file: !3, line: 2780, type: !220)
!12625 = !DILocation(line: 2780, column: 6, scope: !12598)
!12626 = !DILocation(line: 2782, column: 19, scope: !12598)
!12627 = !DILocation(line: 2782, column: 8, scope: !12598)
!12628 = !DILocation(line: 2782, column: 6, scope: !12598)
!12629 = !DILocation(line: 2783, column: 6, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 2783, column: 6)
!12631 = !DILocation(line: 2783, column: 6, scope: !12598)
!12632 = !DILocation(line: 2784, column: 10, scope: !12630)
!12633 = !DILocation(line: 2784, column: 3, scope: !12630)
!12634 = !DILocation(line: 2786, column: 14, scope: !12598)
!12635 = !DILocation(line: 2786, column: 20, scope: !12598)
!12636 = !DILocation(line: 2786, column: 2, scope: !12598)
!12637 = !DILocation(line: 2787, column: 26, scope: !12598)
!12638 = !DILocation(line: 2787, column: 10, scope: !12598)
!12639 = !DILocation(line: 2787, column: 8, scope: !12598)
!12640 = !DILocation(line: 2788, column: 6, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12598, file: !3, line: 2788, column: 6)
!12642 = !DILocation(line: 2788, column: 6, scope: !12598)
!12643 = !DILocation(line: 2789, column: 37, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 2788, column: 13)
!12645 = !DILocation(line: 2789, column: 16, scope: !12644)
!12646 = !DILocation(line: 2789, column: 14, scope: !12644)
!12647 = !DILocation(line: 2790, column: 7, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12644, file: !3, line: 2790, column: 7)
!12649 = !DILocation(line: 2790, column: 18, scope: !12648)
!12650 = !DILocation(line: 2790, column: 22, scope: !12648)
!12651 = !DILocation(line: 2790, column: 7, scope: !12644)
!12652 = !DILocation(line: 2791, column: 29, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12648, file: !3, line: 2790, column: 34)
!12654 = !DILocation(line: 2791, column: 36, scope: !12653)
!12655 = !DILocation(line: 2791, column: 10, scope: !12653)
!12656 = !DILocation(line: 2791, column: 8, scope: !12653)
!12657 = !DILocation(line: 2792, column: 3, scope: !12653)
!12658 = !DILocation(line: 2792, column: 15, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12648, file: !3, line: 2792, column: 14)
!12660 = !DILocation(line: 2792, column: 26, scope: !12659)
!12661 = !DILocation(line: 2792, column: 29, scope: !12659)
!12662 = !DILocation(line: 2792, column: 14, scope: !12648)
!12663 = !DILocation(line: 2793, column: 8, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 2793, column: 8)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 2793, column: 8)
!12666 = distinct !DILexicalBlock(scope: !12659, file: !3, line: 2792, column: 41)
!12667 = !DILocation(line: 2793, column: 8, scope: !12665)
!12668 = !DILocation(line: 2793, column: 8, scope: !12666)
!12669 = !DILocation(line: 2794, column: 5, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 2793, column: 29)
!12671 = !DILocation(line: 2794, column: 12, scope: !12670)
!12672 = !DILocation(line: 2794, column: 27, scope: !12670)
!12673 = !DILocation(line: 2795, column: 22, scope: !12670)
!12674 = !DILocation(line: 2795, column: 29, scope: !12670)
!12675 = !DILocation(line: 2795, column: 5, scope: !12670)
!12676 = !DILocation(line: 2796, column: 4, scope: !12670)
!12677 = !DILocation(line: 2797, column: 9, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 2796, column: 11)
!12679 = !DILocation(line: 2799, column: 3, scope: !12666)
!12680 = !DILocation(line: 2800, column: 2, scope: !12644)
!12681 = !DILocation(line: 2801, column: 7, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 2800, column: 9)
!12683 = !DILocation(line: 2803, column: 16, scope: !12598)
!12684 = !DILocation(line: 2803, column: 22, scope: !12598)
!12685 = !DILocation(line: 2803, column: 2, scope: !12598)
!12686 = !DILocation(line: 2805, column: 9, scope: !12598)
!12687 = !DILocation(line: 2805, column: 13, scope: !12598)
!12688 = !DILocation(line: 2805, column: 19, scope: !12598)
!12689 = !DILocation(line: 2805, column: 25, scope: !12598)
!12690 = !DILocation(line: 2805, column: 2, scope: !12598)
!12691 = !DILocation(line: 2806, column: 1, scope: !12598)
!12692 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !200, file: !200, line: 80, type: !12693, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!353, !206, !220}
!12695 = !DILocalVariable(name: "b", arg: 1, scope: !12692, file: !200, line: 80, type: !206)
!12696 = !DILocation(line: 80, column: 53, scope: !12692)
!12697 = !DILocalVariable(name: "ofs", arg: 2, scope: !12692, file: !200, line: 80, type: !220)
!12698 = !DILocation(line: 80, column: 60, scope: !12692)
!12699 = !DILocation(line: 82, column: 30, scope: !12692)
!12700 = !DILocation(line: 82, column: 33, scope: !12692)
!12701 = !DILocation(line: 82, column: 17, scope: !12692)
!12702 = !DILocation(line: 82, column: 40, scope: !12692)
!12703 = !DILocation(line: 82, column: 43, scope: !12692)
!12704 = !DILocation(line: 82, column: 38, scope: !12692)
!12705 = !DILocation(line: 82, column: 2, scope: !12692)
!12706 = distinct !DISubprogram(name: "char_buf_ptr", scope: !200, file: !200, line: 75, type: !12707, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !277)
!12707 = !DISubroutineType(types: !12708)
!12708 = !{!4103, !206, !220}
!12709 = !DILocalVariable(name: "b", arg: 1, scope: !12706, file: !200, line: 75, type: !206)
!12710 = !DILocation(line: 75, column: 62, scope: !12706)
!12711 = !DILocalVariable(name: "ofs", arg: 2, scope: !12706, file: !200, line: 75, type: !220)
!12712 = !DILocation(line: 75, column: 69, scope: !12706)
!12713 = !DILocation(line: 77, column: 27, scope: !12706)
!12714 = !DILocation(line: 77, column: 30, scope: !12706)
!12715 = !DILocation(line: 77, column: 10, scope: !12706)
!12716 = !DILocation(line: 77, column: 38, scope: !12706)
!12717 = !DILocation(line: 77, column: 36, scope: !12706)
!12718 = !DILocation(line: 77, column: 2, scope: !12706)
