; ModuleID = '../bcout/drivers/tty/serial/8250/8250_port.llvm.bc'
source_filename = "drivers/tty/serial/8250/8250_port.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.serial8250_config = type { i8*, i16, i16, i8, [4 x i8], i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.uart_ops = type { i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*, i8)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, i32, i32)*, i8* (%struct.uart_port*)*, void (%struct.uart_port*)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, %struct.serial_struct*)*, i32 (%struct.uart_port*, i32, i64)* }
%struct.uart_port = type { %struct.spinlock, i64, i8*, i32 (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, i32, i32*)*, void (%struct.uart_port*, i32, i32, i32)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, void (%struct.uart_port*)*, i32 (%struct.uart_port*)*, void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*)*, i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_iso7816*)*, i32, i64, i32, i32, i8, i8, i8, i8, i32, i32, %struct.uart_state*, %struct.uart_icount, %struct.console*, i32, i32, i32, i32, i32, i32, %struct.uart_ops*, i32, i32, i32, i64, i64, %struct.device*, i64, i32, i8, i8, i8, i8, i8, i8*, %struct.attribute_group*, %struct.attribute_group**, %struct.serial_rs485, %struct.gpio_desc*, %struct.serial_iso7816, i8* }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.uart_state = type { %struct.tty_port, i32, %struct.circ_buf, %struct.atomic_t, %struct.wait_queue_head, %struct.uart_port* }
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.atomic64_t = type { i64 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.tty_buffer = type { %union.anon.0, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.0 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.68, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.68 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.66, %struct.list_head, %struct.list_head, %union.anon.67 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.64 }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.56, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.56 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.57, i32 }
%union.anon.57 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.49, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.35, %union.anon.36, i32 }
%struct.request_queue = type opaque
%union.anon.35 = type { %struct.list_head }
%union.anon.36 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.48, i32, [12 x i8] }
%union.anon.48 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.49 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.50, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.53 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i64, i64 }
%union.anon.53 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.66 = type { %struct.list_head }
%union.anon.67 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.58, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.59, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.60, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.63, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.58 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.59 = type { %struct.callback_head }
%union.anon.60 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.63 = type { %struct.pipe_inode_info* }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.61 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.61 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.module = type opaque
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.circ_buf = type { i8*, i32, i32 }
%struct.atomic_t = type { i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.uart_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.console = type { [16 x i8], void (%struct.console*, i8*, i32)*, i32 (%struct.console*, i8*, i32)*, %struct.tty_driver* (%struct.console*, i32*)*, void ()*, i32 (%struct.console*, i8*)*, i32 (%struct.console*)*, i32 (%struct.console*, i8*, i32, i8*)*, i16, i16, i32, i8*, %struct.console* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.serial_rs485 = type { i32, i32, i32, [5 x i32] }
%struct.gpio_desc = type opaque
%struct.serial_iso7816 = type { i32, i32, i32, i32, i32, [5 x i32] }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.uart_8250_port = type { %struct.uart_port, %struct.timer_list, %struct.list_head, i32, i16, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, %struct.mctrl_gpios*, i8, i8, %struct.uart_8250_dma*, %struct.uart_8250_ops*, i32 (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*, i32)*, %struct.uart_8250_em485*, {}*, {}*, %struct.delayed_work, i32 }
%struct.mctrl_gpios = type opaque
%struct.uart_8250_dma = type { i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)*, i1 (%struct.dma_chan*, i8*)*, i8*, i8*, %struct.dma_slave_config, %struct.dma_slave_config, %struct.dma_chan*, %struct.dma_chan*, i64, i64, i64, i64, i32, i32, i8*, i64, i64, i8, i8, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { {}*, i32, %struct.dma_slave_map* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.uart_8250_ops = type { i32 (%struct.uart_8250_port*)*, {}* }
%struct.uart_8250_em485 = type { %struct.hrtimer, %struct.hrtimer, %struct.hrtimer*, %struct.uart_8250_port*, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }

@uart_config = internal constant [122 x %struct.serial8250_config] [%struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i16 16, i16 16, i8 -127, [4 x i8] c"\01\04\08\0E", i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 1792 }, %struct.serial8250_config { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i16 32, i16 16, i8 65, [4 x i8] c"\08\10\18\1C", i32 1792 }, %struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i16 64, i16 64, i8 -95, [4 x i8] c"\01\10 8", i32 3328 }, %struct.serial8250_config { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i32 0, i32 0), i16 1, i16 1, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i16 128, i16 128, i8 -127, [4 x i8] zeroinitializer, i32 1280 }, %struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i16 64, i16 32, i8 97, [4 x i8] c"\08\108<", i32 1792 }, %struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i16 128, i16 128, i8 -127, [4 x i8] zeroinitializer, i32 1792 }, %struct.serial8250_config { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i16 2048, i16 2048, i8 -63, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i16 16, i16 16, i8 -127, [4 x i8] zeroinitializer, i32 264 }, %struct.serial8250_config { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i16 32, i16 32, i8 -127, [4 x i8] zeroinitializer, i32 12544 }, %struct.serial8250_config zeroinitializer, %struct.serial8250_config { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i16 64, i16 64, i8 -127, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i16 16, i16 16, i8 1, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i16 64, i16 64, i8 -127, [4 x i8] zeroinitializer, i32 2304 }, %struct.serial8250_config { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i16 32, i16 8, i8 81, [4 x i8] c"\01\04\08\0E", i32 8448 }, %struct.serial8250_config { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i16 64, i16 64, i8 -127, [4 x i8] zeroinitializer, i32 3840 }, %struct.serial8250_config { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), i16 64, i16 32, i8 9, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0), i16 0, i16 0, i8 0, [4 x i8] zeroinitializer, i32 0 }, %struct.serial8250_config { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i16 256, i16 256, i8 -15, [4 x i8] zeroinitializer, i32 3840 }, %struct.serial8250_config { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i16 1, i16 1024, i8 0, [4 x i8] zeroinitializer, i32 16384 }, %struct.serial8250_config { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i32 0, i32 0), i16 32, i16 32, i8 -127, [4 x i8] c"\01\08\10\1E", i32 2304 }, %struct.serial8250_config { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i32 0, i32 0), i16 64, i16 64, i8 -127, [4 x i8] c"\01\10 >", i32 2304 }, %struct.serial8250_config { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i32 0, i32 0), i16 128, i16 128, i8 -127, [4 x i8] c"\01 @~", i32 2304 }, %struct.serial8250_config { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i16 16, i16 16, i8 -127, [4 x i8] c"\01\04\08\0E", i32 256 }, %struct.serial8250_config { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i32 0, i32 0), i16 64, i16 63, i8 -95, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i32 0, i32 0), i16 16, i16 16, i8 -121, [4 x i8] c"\01\04\08\0E", i32 256 }, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i32 0, i32 0), i16 16, i16 16, i8 -119, [4 x i8] c"\01\04\08\0E", i32 2304 }, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i16 16, i16 16, i8 7, [4 x i8] zeroinitializer, i32 256 }, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config zeroinitializer, %struct.serial8250_config { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i16 128, i16 128, i8 -127, [4 x i8] c"\01 @p", i32 1280 }], align 16, !dbg !0
@serial8250_do_startup._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4893
@__func__.serial8250_do_startup = private unnamed_addr constant [22 x i8] c"serial8250_do_startup\00", align 1
@.str = private unnamed_addr constant [27 x i8] c"LSR safety check engaged!\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"TX FIFO Threshold errors, skipping\0A\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"forbid DMA for kernel console\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"failed to request DMA\00", align 1
@serial8250_do_startup._rs.4 = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4896
@.str.5 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@serial8250_pops = internal constant %struct.uart_ops { i32 (%struct.uart_port*)* @serial8250_tx_empty, void (%struct.uart_port*, i32)* @serial8250_set_mctrl, i32 (%struct.uart_port*)* @serial8250_get_mctrl, void (%struct.uart_port*)* @serial8250_stop_tx, void (%struct.uart_port*)* @serial8250_start_tx, void (%struct.uart_port*)* @serial8250_throttle, void (%struct.uart_port*)* @serial8250_unthrottle, void (%struct.uart_port*, i8)* null, void (%struct.uart_port*)* @serial8250_stop_rx, void (%struct.uart_port*)* @serial8250_enable_ms, void (%struct.uart_port*, i32)* @serial8250_break_ctl, i32 (%struct.uart_port*)* @serial8250_startup, void (%struct.uart_port*)* @serial8250_shutdown, void (%struct.uart_port*)* null, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)* @serial8250_set_termios, void (%struct.uart_port*, %struct.ktermios*)* @serial8250_set_ldisc, void (%struct.uart_port*, i32, i32)* @serial8250_pm, i8* (%struct.uart_port*)* @serial8250_type, void (%struct.uart_port*)* @serial8250_release_port, i32 (%struct.uart_port*)* @serial8250_request_port, void (%struct.uart_port*, i32)* @serial8250_config_port, i32 (%struct.uart_port*, %struct.serial_struct*)* @serial8250_verify_port, i32 (%struct.uart_port*, i32, i64)* null }, align 8, !dbg !4908
@__UNIQUE_ID_file244 = internal constant [49 x i8] c"8250_base.file=drivers/tty/serial/8250/8250_base\00", section ".modinfo", align 1, !dbg !4898
@__UNIQUE_ID_license245 = internal constant [22 x i8] c"8250_base.license=GPL\00", section ".modinfo", align 1, !dbg !4903
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.6 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.7 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"8250\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"16450\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"16550\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"16550A\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"Cirrus\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"ST16650\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"ST16650V2\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"TI16750\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Startech\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"16C950/954\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"ST16654\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"XR16850\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"RSA\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"NS16550A\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"XScale\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"OCTEON\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"AR7\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"U6_16550A\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"Tegra\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"XR17D15X\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"LPC3220\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"CIR port\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"XR17V35X\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"TruManage\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"Altera 16550 FIFO32\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"Altera 16550 FIFO64\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"Altera 16550 FIFO128\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"Palmchip BK-3103\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c"16550A_FSL64\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"Nuvoton 16550\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"TI DA8xx/66AK2x\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"MediaTek BTIF\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"Sunix\00", align 1
@iomem_resource = external dso_local global %struct.resource, align 8
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.41 = private unnamed_addr constant [7 x i8] c"serial\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"detected caps %08x should be %08x\0A\00", align 1
@serial8250_dev_attr_group = internal global %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @serial8250_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4910
@serial8250_dev_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rx_trig_bytes, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4912
@dev_attr_rx_trig_bytes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.43, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @rx_trig_bytes_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @rx_trig_bytes_store }, align 8, !dbg !4915
@.str.43 = private unnamed_addr constant [14 x i8] c"rx_trig_bytes\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@nr_irqs = external dso_local global i32, align 4
@llvm.used = appending global [2 x i8*] [i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_file244, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license245, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_clear_and_reinit_fifos(%struct.uart_8250_port* %p) #0 !dbg !4948 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !4949, metadata !DIExpression()), !dbg !4950
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4951
  call void @serial8250_clear_fifos(%struct.uart_8250_port* %0) #10, !dbg !4952
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4953
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4954
  %fcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 8, !dbg !4955
  %3 = load i8, i8* %fcr, align 1, !dbg !4955
  %conv = zext i8 %3 to i32, !dbg !4954
  call void @serial_out(%struct.uart_8250_port* %1, i32 2, i32 %conv) #10, !dbg !4956
  ret void, !dbg !4957
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_clear_fifos(%struct.uart_8250_port* %p) #0 !dbg !4958 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !4959, metadata !DIExpression()), !dbg !4960
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4961
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 3, !dbg !4963
  %1 = load i32, i32* %capabilities, align 8, !dbg !4963
  %and = and i32 %1, 256, !dbg !4964
  %tobool = icmp ne i32 %and, 0, !dbg !4964
  br i1 %tobool, label %if.then, label %if.end, !dbg !4965

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4966
  call void @serial_out(%struct.uart_8250_port* %2, i32 2, i32 1) #10, !dbg !4968
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4969
  call void @serial_out(%struct.uart_8250_port* %3, i32 2, i32 7) #10, !dbg !4970
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4971
  call void @serial_out(%struct.uart_8250_port* %4, i32 2, i32 0) #10, !dbg !4972
  br label %if.end, !dbg !4973

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial_out(%struct.uart_8250_port* %up, i32 %offset, i32 %value) #0 !dbg !4975 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4982, metadata !DIExpression()), !dbg !4983
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !4984
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !4985
  %serial_out = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 4, !dbg !4986
  %1 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %serial_out, align 8, !dbg !4986
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !4987
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !4988
  %3 = load i32, i32* %offset.addr, align 4, !dbg !4989
  %4 = load i32, i32* %value.addr, align 4, !dbg !4990
  call void %1(%struct.uart_port* %port1, i32 %3, i32 %4) #10, !dbg !4984
  ret void, !dbg !4991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_rpm_get(%struct.uart_8250_port* %p) #0 !dbg !4992 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !4993, metadata !DIExpression()), !dbg !4994
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !4995
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 3, !dbg !4997
  %1 = load i32, i32* %capabilities, align 8, !dbg !4997
  %and = and i32 %1, 32768, !dbg !4998
  %tobool = icmp ne i32 %and, 0, !dbg !4998
  br i1 %tobool, label %if.end, label %if.then, !dbg !4999

if.then:                                          ; preds = %entry
  br label %return, !dbg !5000

if.end:                                           ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5001
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !5002
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 45, !dbg !5003
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5003
  %call = call i32 @pm_runtime_get_sync(%struct.device* %3) #10, !dbg !5004
  br label %return, !dbg !5005

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !5006 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5008, metadata !DIExpression()), !dbg !5009
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5010
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #10, !dbg !5011
  ret i32 %call, !dbg !5012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_rpm_put(%struct.uart_8250_port* %p) #0 !dbg !5013 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5014, metadata !DIExpression()), !dbg !5015
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5016
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 3, !dbg !5018
  %1 = load i32, i32* %capabilities, align 8, !dbg !5018
  %and = and i32 %1, 32768, !dbg !5019
  %tobool = icmp ne i32 %and, 0, !dbg !5019
  br i1 %tobool, label %if.end, label %if.then, !dbg !5020

if.then:                                          ; preds = %entry
  br label %return, !dbg !5021

if.end:                                           ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5022
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !5023
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 45, !dbg !5024
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5024
  call void @pm_runtime_mark_last_busy(%struct.device* %3) #10, !dbg !5025
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5026
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 0, !dbg !5027
  %dev2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port1, i32 0, i32 45, !dbg !5028
  %5 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5028
  %call = call i32 @pm_runtime_put_autosuspend(%struct.device* %5) #10, !dbg !5029
  br label %return, !dbg !5030

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5030
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #0 !dbg !5031 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  br label %do.body, !dbg !5034

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5035

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5037

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5035

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #10, !dbg !5039
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5039
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !5039
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !5039
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !5039
  br label %do.end3, !dbg !5039

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5035

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !5041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_autosuspend(%struct.device* %dev) #0 !dbg !5042 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5045
  %call = call i32 @__pm_runtime_suspend(%struct.device* %0, i32 13) #10, !dbg !5046
  ret i32 %call, !dbg !5047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_em485_destroy(%struct.uart_8250_port* %p) #0 !dbg !5048 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5051
  %em485 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 25, !dbg !5053
  %1 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !5053
  %tobool = icmp ne %struct.uart_8250_em485* %1, null, !dbg !5051
  br i1 %tobool, label %if.end, label %if.then, !dbg !5054

if.then:                                          ; preds = %entry
  br label %return, !dbg !5055

if.end:                                           ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5056
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 25, !dbg !5057
  %3 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4851, align 8, !dbg !5057
  %start_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %3, i32 0, i32 0, !dbg !5058
  %call = call i32 @hrtimer_cancel(%struct.hrtimer* %start_tx_timer) #10, !dbg !5059
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5060
  %em4852 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 25, !dbg !5061
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4852, align 8, !dbg !5061
  %stop_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 1, !dbg !5062
  %call3 = call i32 @hrtimer_cancel(%struct.hrtimer* %stop_tx_timer) #10, !dbg !5063
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5064
  %em4854 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %6, i32 0, i32 25, !dbg !5065
  %7 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4854, align 8, !dbg !5065
  %8 = bitcast %struct.uart_8250_em485* %7 to i8*, !dbg !5064
  call void @kfree(i8* %8) #10, !dbg !5066
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5067
  %em4855 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 25, !dbg !5068
  store %struct.uart_8250_em485* null, %struct.uart_8250_em485** %em4855, align 8, !dbg !5069
  br label %return, !dbg !5070

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5070
}

; Function Attrs: noredzone
declare dso_local i32 @hrtimer_cancel(%struct.hrtimer*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @serial8250_em485_config(%struct.uart_port* %port, %struct.serial_rs485* %rs485) #0 !dbg !5071 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %rs485.addr = alloca %struct.serial_rs485*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %__UNIQUE_ID___x236 = alloca i32, align 4
  %__UNIQUE_ID___y237 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x238 = alloca i32, align 4
  %__UNIQUE_ID___y239 = alloca i32, align 4
  %tmp14 = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !5072, metadata !DIExpression()), !dbg !5073
  store %struct.serial_rs485* %rs485, %struct.serial_rs485** %rs485.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_rs485** %rs485.addr, metadata !5074, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !5076, metadata !DIExpression()), !dbg !5077
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5078
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !5079
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !5077
  %1 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5080
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %1, i32 0, i32 0, !dbg !5082
  %2 = load i32, i32* %flags, align 4, !dbg !5082
  %and = and i32 %2, 2, !dbg !5083
  %tobool = icmp ne i32 %and, 0, !dbg !5084
  %lnot = xor i1 %tobool, true, !dbg !5084
  %lnot1 = xor i1 %lnot, true, !dbg !5085
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5085
  %3 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5086
  %flags2 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %3, i32 0, i32 0, !dbg !5087
  %4 = load i32, i32* %flags2, align 4, !dbg !5087
  %and3 = and i32 %4, 4, !dbg !5088
  %tobool4 = icmp ne i32 %and3, 0, !dbg !5089
  %lnot5 = xor i1 %tobool4, true, !dbg !5089
  %lnot7 = xor i1 %lnot5, true, !dbg !5090
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5090
  %cmp = icmp eq i32 %lnot.ext, %lnot.ext8, !dbg !5091
  br i1 %cmp, label %if.then, label %if.end, !dbg !5092

if.then:                                          ; preds = %entry
  %5 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5093
  %flags9 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %5, i32 0, i32 0, !dbg !5095
  %6 = load i32, i32* %flags9, align 4, !dbg !5096
  %or = or i32 %6, 2, !dbg !5096
  store i32 %or, i32* %flags9, align 4, !dbg !5096
  %7 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5097
  %flags10 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %7, i32 0, i32 0, !dbg !5098
  %8 = load i32, i32* %flags10, align 4, !dbg !5099
  %and11 = and i32 %8, -5, !dbg !5099
  store i32 %and11, i32* %flags10, align 4, !dbg !5099
  br label %if.end, !dbg !5100

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x236, metadata !5101, metadata !DIExpression()), !dbg !5103
  %9 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5103
  %delay_rts_before_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %9, i32 0, i32 1, !dbg !5103
  %10 = load i32, i32* %delay_rts_before_send, align 4, !dbg !5103
  store i32 %10, i32* %__UNIQUE_ID___x236, align 4, !dbg !5103
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y237, metadata !5104, metadata !DIExpression()), !dbg !5103
  store i32 100, i32* %__UNIQUE_ID___y237, align 4, !dbg !5103
  %11 = load i32, i32* %__UNIQUE_ID___x236, align 4, !dbg !5103
  %12 = load i32, i32* %__UNIQUE_ID___y237, align 4, !dbg !5103
  %cmp12 = icmp ult i32 %11, %12, !dbg !5103
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !5103

cond.true:                                        ; preds = %if.end
  %13 = load i32, i32* %__UNIQUE_ID___x236, align 4, !dbg !5103
  br label %cond.end, !dbg !5103

cond.false:                                       ; preds = %if.end
  %14 = load i32, i32* %__UNIQUE_ID___y237, align 4, !dbg !5103
  br label %cond.end, !dbg !5103

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !5103
  store i32 %cond, i32* %tmp, align 4, !dbg !5103
  %15 = load i32, i32* %tmp, align 4, !dbg !5103
  %16 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5105
  %delay_rts_before_send13 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %16, i32 0, i32 1, !dbg !5106
  store i32 %15, i32* %delay_rts_before_send13, align 4, !dbg !5107
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x238, metadata !5108, metadata !DIExpression()), !dbg !5110
  %17 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5110
  %delay_rts_after_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %17, i32 0, i32 2, !dbg !5110
  %18 = load i32, i32* %delay_rts_after_send, align 4, !dbg !5110
  store i32 %18, i32* %__UNIQUE_ID___x238, align 4, !dbg !5110
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y239, metadata !5111, metadata !DIExpression()), !dbg !5110
  store i32 100, i32* %__UNIQUE_ID___y239, align 4, !dbg !5110
  %19 = load i32, i32* %__UNIQUE_ID___x238, align 4, !dbg !5110
  %20 = load i32, i32* %__UNIQUE_ID___y239, align 4, !dbg !5110
  %cmp15 = icmp ult i32 %19, %20, !dbg !5110
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !5110

cond.true16:                                      ; preds = %cond.end
  %21 = load i32, i32* %__UNIQUE_ID___x238, align 4, !dbg !5110
  br label %cond.end18, !dbg !5110

cond.false17:                                     ; preds = %cond.end
  %22 = load i32, i32* %__UNIQUE_ID___y239, align 4, !dbg !5110
  br label %cond.end18, !dbg !5110

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ %21, %cond.true16 ], [ %22, %cond.false17 ], !dbg !5110
  store i32 %cond19, i32* %tmp14, align 4, !dbg !5110
  %23 = load i32, i32* %tmp14, align 4, !dbg !5110
  %24 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5112
  %delay_rts_after_send20 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %24, i32 0, i32 2, !dbg !5113
  store i32 %23, i32* %delay_rts_after_send20, align 4, !dbg !5114
  %25 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5115
  %padding = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %25, i32 0, i32 3, !dbg !5116
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %padding, i64 0, i64 0, !dbg !5117
  %26 = bitcast i32* %arraydecay to i8*, !dbg !5117
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 20, i1 false), !dbg !5117
  %27 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5118
  %rs48521 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %27, i32 0, i32 56, !dbg !5119
  %28 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5120
  %29 = bitcast %struct.serial_rs485* %rs48521 to i8*, !dbg !5121
  %30 = bitcast %struct.serial_rs485* %28 to i8*, !dbg !5121
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 32, i1 false), !dbg !5121
  %31 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5122
  %rs485_term_gpio = getelementptr inbounds %struct.uart_port, %struct.uart_port* %31, i32 0, i32 57, !dbg !5123
  %32 = load %struct.gpio_desc*, %struct.gpio_desc** %rs485_term_gpio, align 8, !dbg !5123
  %33 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5124
  %flags22 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %33, i32 0, i32 0, !dbg !5125
  %34 = load i32, i32* %flags22, align 4, !dbg !5125
  %and23 = and i32 %34, 32, !dbg !5126
  call void @gpiod_set_value(%struct.gpio_desc* %32, i32 %and23) #10, !dbg !5127
  %35 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5128
  %flags24 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %35, i32 0, i32 0, !dbg !5130
  %36 = load i32, i32* %flags24, align 4, !dbg !5130
  %and25 = and i32 %36, 1, !dbg !5131
  %tobool26 = icmp ne i32 %and25, 0, !dbg !5131
  br i1 %tobool26, label %if.then27, label %if.end37, !dbg !5132

if.then27:                                        ; preds = %cond.end18
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5133, metadata !DIExpression()), !dbg !5135
  %37 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5136
  %call28 = call i32 @serial8250_em485_init(%struct.uart_8250_port* %37) #10, !dbg !5137
  store i32 %call28, i32* %ret, align 4, !dbg !5135
  %38 = load i32, i32* %ret, align 4, !dbg !5138
  %tobool29 = icmp ne i32 %38, 0, !dbg !5138
  br i1 %tobool29, label %if.then30, label %if.end36, !dbg !5140

if.then30:                                        ; preds = %if.then27
  %39 = load %struct.serial_rs485*, %struct.serial_rs485** %rs485.addr, align 8, !dbg !5141
  %flags31 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %39, i32 0, i32 0, !dbg !5143
  %40 = load i32, i32* %flags31, align 4, !dbg !5144
  %and32 = and i32 %40, -2, !dbg !5144
  store i32 %and32, i32* %flags31, align 4, !dbg !5144
  %41 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5145
  %rs48533 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %41, i32 0, i32 56, !dbg !5146
  %flags34 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs48533, i32 0, i32 0, !dbg !5147
  %42 = load i32, i32* %flags34, align 8, !dbg !5148
  %and35 = and i32 %42, -2, !dbg !5148
  store i32 %and35, i32* %flags34, align 8, !dbg !5148
  br label %if.end36, !dbg !5149

if.end36:                                         ; preds = %if.then30, %if.then27
  %43 = load i32, i32* %ret, align 4, !dbg !5150
  store i32 %43, i32* %retval, align 4, !dbg !5151
  br label %return, !dbg !5151

if.end37:                                         ; preds = %cond.end18
  %44 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5152
  call void @serial8250_em485_destroy(%struct.uart_8250_port* %44) #10, !dbg !5153
  store i32 0, i32* %retval, align 4, !dbg !5154
  br label %return, !dbg !5154

return:                                           ; preds = %if.end37, %if.end36
  %45 = load i32, i32* %retval, align 4, !dbg !5155
  ret i32 %45, !dbg !5155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %up) #0 !dbg !5156 {
entry:
  %up.addr = alloca %struct.uart_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %up, %struct.uart_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %up.addr, metadata !5159, metadata !DIExpression()), !dbg !5160
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5161, metadata !DIExpression()), !dbg !5163
  %0 = load %struct.uart_port*, %struct.uart_port** %up.addr, align 8, !dbg !5163
  %1 = bitcast %struct.uart_port* %0 to i8*, !dbg !5163
  store i8* %1, i8** %__mptr, align 8, !dbg !5163
  br label %do.body, !dbg !5163

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5164

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5163
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !5163
  %3 = bitcast i8* %add.ptr to %struct.uart_8250_port*, !dbg !5163
  store %struct.uart_8250_port* %3, %struct.uart_8250_port** %tmp, align 8, !dbg !5164
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %tmp, align 8, !dbg !5163
  ret %struct.uart_8250_port* %4, !dbg !5166
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local void @gpiod_set_value(%struct.gpio_desc*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_em485_init(%struct.uart_8250_port* %p) #0 !dbg !5167 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5168, metadata !DIExpression()), !dbg !5172
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5180, metadata !DIExpression()), !dbg !5181
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5182, metadata !DIExpression()), !dbg !5183
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5184, metadata !DIExpression()), !dbg !5185
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5186, metadata !DIExpression()), !dbg !5190
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5192, metadata !DIExpression()), !dbg !5196
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5198, metadata !DIExpression()), !dbg !5202
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5207, metadata !DIExpression()), !dbg !5208
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5209, metadata !DIExpression()), !dbg !5210
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5211, metadata !DIExpression()), !dbg !5212
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5213, metadata !DIExpression()), !dbg !5214
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5215, metadata !DIExpression()), !dbg !5216
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5217, metadata !DIExpression()), !dbg !5218
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5219, metadata !DIExpression()), !dbg !5220
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5221, metadata !DIExpression()), !dbg !5222
  %retval = alloca i32, align 4
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5225
  %em485 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 25, !dbg !5227
  %1 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !5227
  %tobool = icmp ne %struct.uart_8250_em485* %1, null, !dbg !5225
  br i1 %tobool, label %if.then, label %if.end, !dbg !5228

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5229
  br label %return, !dbg !5229

if.end:                                           ; preds = %entry
  store i64 152, i64* %size.addr.i, align 8
  store i32 2592, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5230
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !5231
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5232

if.then.i:                                        ; preds = %if.end
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5233
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5234
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5235

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5236
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5237
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5238
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !5239
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5216
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5240
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5241
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5242
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5243
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5244
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5245
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5246
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5246
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5246
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5246
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !5246
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5247
  br label %kmalloc.exit, !dbg !5247

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5248
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5249
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5249
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5251

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5252
  br label %kmalloc_index.exit.i, !dbg !5252

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5253
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5255
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5256

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5257
  br label %kmalloc_index.exit.i, !dbg !5257

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5258
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5260
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5261

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5262
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5263
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5264

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5265
  br label %kmalloc_index.exit.i, !dbg !5265

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5266
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5268
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5269

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5270
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5271
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5272

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5273
  br label %kmalloc_index.exit.i, !dbg !5273

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5274
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5276
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5277

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5278
  br label %kmalloc_index.exit.i, !dbg !5278

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5279
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5281
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5282

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5283
  br label %kmalloc_index.exit.i, !dbg !5283

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5284
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5286
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5287

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5288
  br label %kmalloc_index.exit.i, !dbg !5288

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5289
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5291
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5292

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5293
  br label %kmalloc_index.exit.i, !dbg !5293

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5294
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5296
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5297

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5298
  br label %kmalloc_index.exit.i, !dbg !5298

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5299
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5301
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5302

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5303
  br label %kmalloc_index.exit.i, !dbg !5303

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5304
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5306
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5307

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5308
  br label %kmalloc_index.exit.i, !dbg !5308

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5309
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5311
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5312

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5313
  br label %kmalloc_index.exit.i, !dbg !5313

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5314
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5316
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5317

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5318
  br label %kmalloc_index.exit.i, !dbg !5318

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5319
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5321
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5322

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5323
  br label %kmalloc_index.exit.i, !dbg !5323

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5324
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5326
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5327

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5328
  br label %kmalloc_index.exit.i, !dbg !5328

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5329
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5331
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5332

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5333
  br label %kmalloc_index.exit.i, !dbg !5333

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5334
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5336
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5337

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5338
  br label %kmalloc_index.exit.i, !dbg !5338

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5339
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5341
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5342

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5343
  br label %kmalloc_index.exit.i, !dbg !5343

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5344
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5346
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5347

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5348
  br label %kmalloc_index.exit.i, !dbg !5348

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5349
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5351
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5352

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5353
  br label %kmalloc_index.exit.i, !dbg !5353

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5354
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5356
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5357

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5358
  br label %kmalloc_index.exit.i, !dbg !5358

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5359
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5361
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5362

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5363
  br label %kmalloc_index.exit.i, !dbg !5363

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5364
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5366
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5367

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5368
  br label %kmalloc_index.exit.i, !dbg !5368

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5369
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5371
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5372

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5373
  br label %kmalloc_index.exit.i, !dbg !5373

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5374
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5376
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5377

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5378
  br label %kmalloc_index.exit.i, !dbg !5378

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5379
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5381
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5382

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5383
  br label %kmalloc_index.exit.i, !dbg !5383

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5384
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5386
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5387

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5388
  br label %kmalloc_index.exit.i, !dbg !5388

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5389
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5391
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5392

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5393
  br label %kmalloc_index.exit.i, !dbg !5393

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !5394, !srcloc !5397
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 205) #9, !dbg !5398, !srcloc !5401
  unreachable, !dbg !5402

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5403
  store i32 %45, i32* %index.i, align 4, !dbg !5404
  %46 = load i32, i32* %index.i, align 4, !dbg !5405
  %tobool.i = icmp ne i32 %46, 0, !dbg !5405
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5407

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5408
  br label %kmalloc.exit, !dbg !5408

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5409
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5410
  %and.i.i = and i32 %48, 17, !dbg !5410
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5410
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5410
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5410
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5410
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5412

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5413
  br label %kmalloc_type.exit.i, !dbg !5413

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5414
  %and2.i.i = and i32 %49, 1, !dbg !5415
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5414
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5414
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5414
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5416
  br label %kmalloc_type.exit.i, !dbg !5416

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5417
  %idxprom.i = zext i32 %51 to i64, !dbg !5418
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5418
  %52 = load i32, i32* %index.i, align 4, !dbg !5419
  %idxprom6.i = zext i32 %52 to i64, !dbg !5418
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5418
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5418
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5420
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5421
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5422
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5423
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5424
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5424
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5424
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5424
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !5424
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5185
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5425
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5426
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5427
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5428
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5429
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5430
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5431
  store i8* %62, i8** %retval.i, align 8, !dbg !5432
  br label %kmalloc.exit, !dbg !5432

if.end9.i:                                        ; preds = %if.end
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5433
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5434
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5435
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5435
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5435
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5435
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !5435
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5436
  br label %kmalloc.exit, !dbg !5436

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5437
  %66 = bitcast i8* %65 to %struct.uart_8250_em485*, !dbg !5438
  %67 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5439
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %67, i32 0, i32 25, !dbg !5440
  store %struct.uart_8250_em485* %66, %struct.uart_8250_em485** %em4851, align 8, !dbg !5441
  %68 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5442
  %em4852 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %68, i32 0, i32 25, !dbg !5444
  %69 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4852, align 8, !dbg !5444
  %tobool3 = icmp ne %struct.uart_8250_em485* %69, null, !dbg !5442
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !5445

if.then4:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !5446
  br label %return, !dbg !5446

if.end5:                                          ; preds = %kmalloc.exit
  %70 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5447
  %em4856 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %70, i32 0, i32 25, !dbg !5448
  %71 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4856, align 8, !dbg !5448
  %stop_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %71, i32 0, i32 1, !dbg !5449
  call void @hrtimer_init(%struct.hrtimer* %stop_tx_timer, i32 1, i32 1) #10, !dbg !5450
  %72 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5451
  %em4857 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %72, i32 0, i32 25, !dbg !5452
  %73 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4857, align 8, !dbg !5452
  %start_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %73, i32 0, i32 0, !dbg !5453
  call void @hrtimer_init(%struct.hrtimer* %start_tx_timer, i32 1, i32 1) #10, !dbg !5454
  %74 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5455
  %em4858 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %74, i32 0, i32 25, !dbg !5456
  %75 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4858, align 8, !dbg !5456
  %stop_tx_timer9 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %75, i32 0, i32 1, !dbg !5457
  %function = getelementptr inbounds %struct.hrtimer, %struct.hrtimer* %stop_tx_timer9, i32 0, i32 2, !dbg !5458
  store i32 (%struct.hrtimer*)* @serial8250_em485_handle_stop_tx, i32 (%struct.hrtimer*)** %function, align 8, !dbg !5459
  %76 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5460
  %em48510 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %76, i32 0, i32 25, !dbg !5461
  %77 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em48510, align 8, !dbg !5461
  %start_tx_timer11 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %77, i32 0, i32 0, !dbg !5462
  %function12 = getelementptr inbounds %struct.hrtimer, %struct.hrtimer* %start_tx_timer11, i32 0, i32 2, !dbg !5463
  store i32 (%struct.hrtimer*)* @serial8250_em485_handle_start_tx, i32 (%struct.hrtimer*)** %function12, align 8, !dbg !5464
  %78 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5465
  %79 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5466
  %em48513 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %79, i32 0, i32 25, !dbg !5467
  %80 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em48513, align 8, !dbg !5467
  %port = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %80, i32 0, i32 3, !dbg !5468
  store %struct.uart_8250_port* %78, %struct.uart_8250_port** %port, align 8, !dbg !5469
  %81 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5470
  %em48514 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %81, i32 0, i32 25, !dbg !5471
  %82 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em48514, align 8, !dbg !5471
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %82, i32 0, i32 2, !dbg !5472
  store %struct.hrtimer* null, %struct.hrtimer** %active_timer, align 8, !dbg !5473
  %83 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5474
  %em48515 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %83, i32 0, i32 25, !dbg !5475
  %84 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em48515, align 8, !dbg !5475
  %tx_stopped = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %84, i32 0, i32 4, !dbg !5476
  %bf.load = load i8, i8* %tx_stopped, align 8, !dbg !5477
  %bf.clear = and i8 %bf.load, -2, !dbg !5477
  %bf.set = or i8 %bf.clear, 1, !dbg !5477
  store i8 %bf.set, i8* %tx_stopped, align 8, !dbg !5477
  %85 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5478
  %rs485_stop_tx = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %85, i32 0, i32 27, !dbg !5479
  %rs485_stop_tx16 = bitcast {}** %rs485_stop_tx to void (%struct.uart_8250_port*)**, !dbg !5479
  %86 = load void (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*)** %rs485_stop_tx16, align 8, !dbg !5479
  %87 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5480
  call void %86(%struct.uart_8250_port* %87) #10, !dbg !5478
  store i32 0, i32* %retval, align 4, !dbg !5481
  br label %return, !dbg !5481

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %88 = load i32, i32* %retval, align 4, !dbg !5482
  ret i32 %88, !dbg !5482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_rpm_get_tx(%struct.uart_8250_port* %p) #0 !dbg !5483 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5484, metadata !DIExpression()), !dbg !5492
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5495, metadata !DIExpression()), !dbg !5496
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %rpm_active = alloca i8, align 1
  %__ai_ptr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %__ret = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5497, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata i8* %rpm_active, metadata !5499, metadata !DIExpression()), !dbg !5500
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5501
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 3, !dbg !5503
  %1 = load i32, i32* %capabilities, align 8, !dbg !5503
  %and = and i32 %1, 32768, !dbg !5504
  %tobool = icmp ne i32 %and, 0, !dbg !5504
  br i1 %tobool, label %if.end, label %if.then, !dbg !5505

if.then:                                          ; preds = %entry
  br label %return, !dbg !5506

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %__ai_ptr, metadata !5507, metadata !DIExpression()), !dbg !5508
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5508
  %rpm_tx_active = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 15, !dbg !5508
  store i32* %rpm_tx_active, i32** %__ai_ptr, align 8, !dbg !5508
  %3 = load i32*, i32** %__ai_ptr, align 8, !dbg !5508
  %4 = bitcast i32* %3 to i8*, !dbg !5508
  store i8* %4, i8** %v.addr.i, align 8
  store i64 4, i64* %size.addr.i, align 8
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5509
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5510
  %conv.i = trunc i64 %6 to i32, !dbg !5510
  %call.i = call zeroext i1 @kasan_check_write(i8* %5, i32 %conv.i) #12, !dbg !5511
  %7 = load i8*, i8** %v.addr.i, align 8, !dbg !5512
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !5512
  call void @kcsan_check_access(i8* %7, i64 %8, i32 5) #12, !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !5513, metadata !DIExpression()), !dbg !5515
  store i32 1, i32* %__ret, align 4, !dbg !5515
  %9 = load i32, i32* %__ret, align 4, !dbg !5515
  %10 = load i32*, i32** %__ai_ptr, align 8, !dbg !5515
  %11 = call i32 asm sideeffect "xchgl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %10, i32 %9, i32* %10) #9, !dbg !5515, !srcloc !5516
  store i32 %11, i32* %__ret, align 4, !dbg !5515
  %12 = load i32, i32* %__ret, align 4, !dbg !5515
  store i32 %12, i32* %tmp1, align 4, !dbg !5515
  %13 = load i32, i32* %tmp1, align 4, !dbg !5515
  store i32 %13, i32* %tmp, align 4, !dbg !5508
  %14 = load i32, i32* %tmp, align 4, !dbg !5508
  %conv = trunc i32 %14 to i8, !dbg !5517
  store i8 %conv, i8* %rpm_active, align 1, !dbg !5518
  %15 = load i8, i8* %rpm_active, align 1, !dbg !5519
  %tobool2 = icmp ne i8 %15, 0, !dbg !5519
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5521

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !5522

if.end4:                                          ; preds = %if.end
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5523
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %16, i32 0, i32 0, !dbg !5524
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 45, !dbg !5525
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5525
  %call = call i32 @pm_runtime_get_sync(%struct.device* %17) #10, !dbg !5526
  br label %return, !dbg !5527

return:                                           ; preds = %if.end4, %if.then3, %if.then
  ret void, !dbg !5527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_rpm_put_tx(%struct.uart_8250_port* %p) #0 !dbg !5528 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5484, metadata !DIExpression()), !dbg !5529
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5495, metadata !DIExpression()), !dbg !5532
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %rpm_active = alloca i8, align 1
  %__ai_ptr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  %__ret = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.declare(metadata i8* %rpm_active, metadata !5535, metadata !DIExpression()), !dbg !5536
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5537
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 3, !dbg !5539
  %1 = load i32, i32* %capabilities, align 8, !dbg !5539
  %and = and i32 %1, 32768, !dbg !5540
  %tobool = icmp ne i32 %and, 0, !dbg !5540
  br i1 %tobool, label %if.end, label %if.then, !dbg !5541

if.then:                                          ; preds = %entry
  br label %return, !dbg !5542

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %__ai_ptr, metadata !5543, metadata !DIExpression()), !dbg !5544
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5544
  %rpm_tx_active = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 15, !dbg !5544
  store i32* %rpm_tx_active, i32** %__ai_ptr, align 8, !dbg !5544
  %3 = load i32*, i32** %__ai_ptr, align 8, !dbg !5544
  %4 = bitcast i32* %3 to i8*, !dbg !5544
  store i8* %4, i8** %v.addr.i, align 8
  store i64 4, i64* %size.addr.i, align 8
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5545
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5546
  %conv.i = trunc i64 %6 to i32, !dbg !5546
  %call.i = call zeroext i1 @kasan_check_write(i8* %5, i32 %conv.i) #12, !dbg !5547
  %7 = load i8*, i8** %v.addr.i, align 8, !dbg !5548
  %8 = load i64, i64* %size.addr.i, align 8, !dbg !5548
  call void @kcsan_check_access(i8* %7, i64 %8, i32 5) #12, !dbg !5548
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !5549, metadata !DIExpression()), !dbg !5551
  store i32 0, i32* %__ret, align 4, !dbg !5551
  %9 = load i32, i32* %__ret, align 4, !dbg !5551
  %10 = load i32*, i32** %__ai_ptr, align 8, !dbg !5551
  %11 = call i32 asm sideeffect "xchgl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %10, i32 %9, i32* %10) #9, !dbg !5551, !srcloc !5552
  store i32 %11, i32* %__ret, align 4, !dbg !5551
  %12 = load i32, i32* %__ret, align 4, !dbg !5551
  store i32 %12, i32* %tmp1, align 4, !dbg !5551
  %13 = load i32, i32* %tmp1, align 4, !dbg !5551
  store i32 %13, i32* %tmp, align 4, !dbg !5544
  %14 = load i32, i32* %tmp, align 4, !dbg !5544
  %conv = trunc i32 %14 to i8, !dbg !5553
  store i8 %conv, i8* %rpm_active, align 1, !dbg !5554
  %15 = load i8, i8* %rpm_active, align 1, !dbg !5555
  %tobool2 = icmp ne i8 %15, 0, !dbg !5555
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5557

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !5558

if.end4:                                          ; preds = %if.end
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5559
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %16, i32 0, i32 0, !dbg !5560
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 45, !dbg !5561
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5561
  call void @pm_runtime_mark_last_busy(%struct.device* %17) #10, !dbg !5562
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5563
  %port5 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %18, i32 0, i32 0, !dbg !5564
  %dev6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port5, i32 0, i32 45, !dbg !5565
  %19 = load %struct.device*, %struct.device** %dev6, align 8, !dbg !5565
  %call = call i32 @pm_runtime_put_autosuspend(%struct.device* %19) #10, !dbg !5566
  br label %return, !dbg !5567

return:                                           ; preds = %if.end4, %if.then3, %if.then
  ret void, !dbg !5567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_em485_stop_tx(%struct.uart_8250_port* %p) #0 !dbg !5568 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %mcr = alloca i8, align 1
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata i8* %mcr, metadata !5571, metadata !DIExpression()), !dbg !5572
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5573
  %call = call i32 @serial8250_in_MCR(%struct.uart_8250_port* %0) #10, !dbg !5574
  %conv = trunc i32 %call to i8, !dbg !5574
  store i8 %conv, i8* %mcr, align 1, !dbg !5572
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5575
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 0, !dbg !5577
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 56, !dbg !5578
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 0, !dbg !5579
  %2 = load i32, i32* %flags, align 8, !dbg !5579
  %and = and i32 %2, 4, !dbg !5580
  %tobool = icmp ne i32 %and, 0, !dbg !5580
  br i1 %tobool, label %if.then, label %if.else, !dbg !5581

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %mcr, align 1, !dbg !5582
  %conv1 = zext i8 %3 to i32, !dbg !5582
  %or = or i32 %conv1, 2, !dbg !5582
  %conv2 = trunc i32 %or to i8, !dbg !5582
  store i8 %conv2, i8* %mcr, align 1, !dbg !5582
  br label %if.end, !dbg !5583

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %mcr, align 1, !dbg !5584
  %conv3 = zext i8 %4 to i32, !dbg !5584
  %and4 = and i32 %conv3, -3, !dbg !5584
  %conv5 = trunc i32 %and4 to i8, !dbg !5584
  store i8 %conv5, i8* %mcr, align 1, !dbg !5584
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5585
  %6 = load i8, i8* %mcr, align 1, !dbg !5586
  %conv6 = zext i8 %6 to i32, !dbg !5586
  call void @serial8250_out_MCR(%struct.uart_8250_port* %5, i32 %conv6) #10, !dbg !5587
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5588
  %port7 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 0, !dbg !5590
  %rs4858 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port7, i32 0, i32 56, !dbg !5591
  %flags9 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs4858, i32 0, i32 0, !dbg !5592
  %8 = load i32, i32* %flags9, align 8, !dbg !5592
  %and10 = and i32 %8, 16, !dbg !5593
  %tobool11 = icmp ne i32 %and10, 0, !dbg !5593
  br i1 %tobool11, label %if.end19, label %if.then12, !dbg !5594

if.then12:                                        ; preds = %if.end
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5595
  call void @serial8250_clear_and_reinit_fifos(%struct.uart_8250_port* %9) #10, !dbg !5597
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5598
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 9, !dbg !5599
  %11 = load i8, i8* %ier, align 2, !dbg !5600
  %conv13 = zext i8 %11 to i32, !dbg !5600
  %or14 = or i32 %conv13, 5, !dbg !5600
  %conv15 = trunc i32 %or14 to i8, !dbg !5600
  store i8 %conv15, i8* %ier, align 2, !dbg !5600
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5601
  %port16 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 0, !dbg !5602
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !5603
  %ier17 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 9, !dbg !5604
  %14 = load i8, i8* %ier17, align 2, !dbg !5604
  %conv18 = zext i8 %14 to i32, !dbg !5603
  call void @serial_port_out(%struct.uart_port* %port16, i32 1, i32 %conv18) #10, !dbg !5605
  br label %if.end19, !dbg !5606

if.end19:                                         ; preds = %if.then12, %if.end
  ret void, !dbg !5607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_in_MCR(%struct.uart_8250_port* %up) #0 !dbg !5608 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %mctrl = alloca i32, align 4
  %mctrl_gpio = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.declare(metadata i32* %mctrl, metadata !5611, metadata !DIExpression()), !dbg !5612
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5613
  %call = call i32 @serial_in(%struct.uart_8250_port* %0, i32 4) #10, !dbg !5614
  store i32 %call, i32* %mctrl, align 4, !dbg !5615
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5616
  %gpios = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 18, !dbg !5618
  %2 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios, align 8, !dbg !5618
  %tobool = icmp ne %struct.mctrl_gpios* %2, null, !dbg !5616
  br i1 %tobool, label %if.then, label %if.end, !dbg !5619

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %mctrl_gpio, metadata !5620, metadata !DIExpression()), !dbg !5622
  store i32 0, i32* %mctrl_gpio, align 4, !dbg !5622
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5623
  %gpios1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 18, !dbg !5624
  %4 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios1, align 8, !dbg !5624
  %call2 = call i32 @mctrl_gpio_get_outputs(%struct.mctrl_gpios* %4, i32* %mctrl_gpio) #10, !dbg !5625
  store i32 %call2, i32* %mctrl_gpio, align 4, !dbg !5626
  %5 = load i32, i32* %mctrl_gpio, align 4, !dbg !5627
  %call3 = call i32 @serial8250_TIOCM_to_MCR(i32 %5) #10, !dbg !5628
  %6 = load i32, i32* %mctrl, align 4, !dbg !5629
  %or = or i32 %6, %call3, !dbg !5629
  store i32 %or, i32* %mctrl, align 4, !dbg !5629
  br label %if.end, !dbg !5630

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %mctrl, align 4, !dbg !5631
  ret i32 %7, !dbg !5632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_out_MCR(%struct.uart_8250_port* %up, i32 %value) #0 !dbg !5633 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %value.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5638
  %1 = load i32, i32* %value.addr, align 4, !dbg !5639
  call void @serial_out(%struct.uart_8250_port* %0, i32 4, i32 %1) #10, !dbg !5640
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5641
  %gpios = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 18, !dbg !5643
  %3 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios, align 8, !dbg !5643
  %tobool = icmp ne %struct.mctrl_gpios* %3, null, !dbg !5641
  br i1 %tobool, label %if.then, label %if.end, !dbg !5644

if.then:                                          ; preds = %entry
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5645
  %gpios1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 18, !dbg !5646
  %5 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios1, align 8, !dbg !5646
  %6 = load i32, i32* %value.addr, align 4, !dbg !5647
  %call = call i32 @serial8250_MCR_to_TIOCM(i32 %6) #10, !dbg !5648
  call void @mctrl_gpio_set(%struct.mctrl_gpios* %5, i32 %call) #10, !dbg !5649
  br label %if.end, !dbg !5649

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial_port_out(%struct.uart_port* %up, i32 %offset, i32 %value) #0 !dbg !5651 {
entry:
  %up.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %up, %struct.uart_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %up.addr, metadata !5652, metadata !DIExpression()), !dbg !5653
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5654, metadata !DIExpression()), !dbg !5655
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !5656, metadata !DIExpression()), !dbg !5657
  %0 = load %struct.uart_port*, %struct.uart_port** %up.addr, align 8, !dbg !5658
  %serial_out = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 4, !dbg !5659
  %1 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %serial_out, align 8, !dbg !5659
  %2 = load %struct.uart_port*, %struct.uart_port** %up.addr, align 8, !dbg !5660
  %3 = load i32, i32* %offset.addr, align 4, !dbg !5661
  %4 = load i32, i32* %value.addr, align 4, !dbg !5662
  call void %1(%struct.uart_port* %2, i32 %3, i32 %4) #10, !dbg !5658
  ret void, !dbg !5663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_em485_start_tx(%struct.uart_8250_port* %up) #0 !dbg !5664 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %mcr = alloca i8, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.declare(metadata i8* %mcr, metadata !5667, metadata !DIExpression()), !dbg !5668
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5669
  %call = call i32 @serial8250_in_MCR(%struct.uart_8250_port* %0) #10, !dbg !5670
  %conv = trunc i32 %call to i8, !dbg !5670
  store i8 %conv, i8* %mcr, align 1, !dbg !5668
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5671
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 0, !dbg !5673
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 56, !dbg !5674
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 0, !dbg !5675
  %2 = load i32, i32* %flags, align 8, !dbg !5675
  %and = and i32 %2, 16, !dbg !5676
  %tobool = icmp ne i32 %and, 0, !dbg !5676
  br i1 %tobool, label %if.end, label %if.then, !dbg !5677

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5678
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 0, !dbg !5679
  call void @serial8250_stop_rx(%struct.uart_port* %port1) #10, !dbg !5680
  br label %if.end, !dbg !5680

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5681
  %port2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 0, !dbg !5683
  %rs4853 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port2, i32 0, i32 56, !dbg !5684
  %flags4 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs4853, i32 0, i32 0, !dbg !5685
  %5 = load i32, i32* %flags4, align 8, !dbg !5685
  %and5 = and i32 %5, 2, !dbg !5686
  %tobool6 = icmp ne i32 %and5, 0, !dbg !5686
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5687

if.then7:                                         ; preds = %if.end
  %6 = load i8, i8* %mcr, align 1, !dbg !5688
  %conv8 = zext i8 %6 to i32, !dbg !5688
  %or = or i32 %conv8, 2, !dbg !5688
  %conv9 = trunc i32 %or to i8, !dbg !5688
  store i8 %conv9, i8* %mcr, align 1, !dbg !5688
  br label %if.end13, !dbg !5689

if.else:                                          ; preds = %if.end
  %7 = load i8, i8* %mcr, align 1, !dbg !5690
  %conv10 = zext i8 %7 to i32, !dbg !5690
  %and11 = and i32 %conv10, -3, !dbg !5690
  %conv12 = trunc i32 %and11 to i8, !dbg !5690
  store i8 %conv12, i8* %mcr, align 1, !dbg !5690
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then7
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5691
  %9 = load i8, i8* %mcr, align 1, !dbg !5692
  %conv14 = zext i8 %9 to i32, !dbg !5692
  call void @serial8250_out_MCR(%struct.uart_8250_port* %8, i32 %conv14) #10, !dbg !5693
  ret void, !dbg !5694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_stop_rx(%struct.uart_port* %port) #0 !dbg !5695 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !5698, metadata !DIExpression()), !dbg !5699
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5700
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !5701
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !5699
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5702
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !5703
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5704
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 9, !dbg !5705
  %3 = load i8, i8* %ier, align 2, !dbg !5706
  %conv = zext i8 %3 to i32, !dbg !5706
  %and = and i32 %conv, -6, !dbg !5706
  %conv1 = trunc i32 %and to i8, !dbg !5706
  store i8 %conv1, i8* %ier, align 2, !dbg !5706
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5707
  %port2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 0, !dbg !5708
  %read_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port2, i32 0, i32 28, !dbg !5709
  %5 = load i32, i32* %read_status_mask, align 4, !dbg !5710
  %and3 = and i32 %5, -2, !dbg !5710
  store i32 %and3, i32* %read_status_mask, align 4, !dbg !5710
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5711
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5712
  %ier4 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 9, !dbg !5713
  %8 = load i8, i8* %ier4, align 2, !dbg !5713
  %conv5 = zext i8 %8 to i32, !dbg !5712
  call void @serial_port_out(%struct.uart_port* %6, i32 1, i32 %conv5) #10, !dbg !5714
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !5715
  call void @serial8250_rpm_put(%struct.uart_8250_port* %9) #10, !dbg !5716
  ret void, !dbg !5717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_read_char(%struct.uart_8250_port* %up, i8 zeroext %lsr) #0 !dbg !5718 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %lsr.addr = alloca i8, align 1
  %port = alloca %struct.uart_port*, align 8
  %ch = alloca i8, align 1
  %flag = alloca i8, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store i8 %lsr, i8* %lsr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lsr.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5727
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !5728
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !5726
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i8 0, i8* %flag, align 1, !dbg !5732
  %1 = load i8, i8* %lsr.addr, align 1, !dbg !5733
  %conv = zext i8 %1 to i32, !dbg !5733
  %and = and i32 %conv, 1, !dbg !5733
  %tobool = icmp ne i32 %and, 0, !dbg !5733
  %lnot = xor i1 %tobool, true, !dbg !5733
  %lnot2 = xor i1 %lnot, true, !dbg !5733
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5733
  %conv3 = sext i32 %lnot.ext to i64, !dbg !5733
  %tobool4 = icmp ne i64 %conv3, 0, !dbg !5733
  br i1 %tobool4, label %if.then, label %if.else, !dbg !5735

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5736
  %call = call i32 @serial_in(%struct.uart_8250_port* %2, i32 0) #10, !dbg !5737
  %conv5 = trunc i32 %call to i8, !dbg !5737
  store i8 %conv5, i8* %ch, align 1, !dbg !5738
  br label %if.end, !dbg !5739

if.else:                                          ; preds = %entry
  store i8 0, i8* %ch, align 1, !dbg !5740
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5741
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 31, !dbg !5742
  %rx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 4, !dbg !5743
  %4 = load i32, i32* %rx, align 8, !dbg !5744
  %inc = add i32 %4, 1, !dbg !5744
  store i32 %inc, i32* %rx, align 8, !dbg !5744
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5745
  %lsr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 19, !dbg !5746
  %6 = load i8, i8* %lsr_saved_flags, align 8, !dbg !5746
  %conv6 = zext i8 %6 to i32, !dbg !5745
  %7 = load i8, i8* %lsr.addr, align 1, !dbg !5747
  %conv7 = zext i8 %7 to i32, !dbg !5747
  %or = or i32 %conv7, %conv6, !dbg !5747
  %conv8 = trunc i32 %or to i8, !dbg !5747
  store i8 %conv8, i8* %lsr.addr, align 1, !dbg !5747
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5748
  %lsr_saved_flags9 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 19, !dbg !5749
  store i8 0, i8* %lsr_saved_flags9, align 8, !dbg !5750
  %9 = load i8, i8* %lsr.addr, align 1, !dbg !5751
  %conv10 = zext i8 %9 to i32, !dbg !5751
  %and11 = and i32 %conv10, 30, !dbg !5751
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5751
  %lnot13 = xor i1 %tobool12, true, !dbg !5751
  %lnot15 = xor i1 %lnot13, true, !dbg !5751
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !5751
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !5751
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !5751
  br i1 %tobool18, label %if.then19, label %if.end77, !dbg !5753

if.then19:                                        ; preds = %if.end
  %10 = load i8, i8* %lsr.addr, align 1, !dbg !5754
  %conv20 = zext i8 %10 to i32, !dbg !5754
  %and21 = and i32 %conv20, 16, !dbg !5757
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5757
  br i1 %tobool22, label %if.then23, label %if.else33, !dbg !5758

if.then23:                                        ; preds = %if.then19
  %11 = load i8, i8* %lsr.addr, align 1, !dbg !5759
  %conv24 = zext i8 %11 to i32, !dbg !5759
  %and25 = and i32 %conv24, -13, !dbg !5759
  %conv26 = trunc i32 %and25 to i8, !dbg !5759
  store i8 %conv26, i8* %lsr.addr, align 1, !dbg !5759
  %12 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5761
  %icount27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 31, !dbg !5762
  %brk = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount27, i32 0, i32 9, !dbg !5763
  %13 = load i32, i32* %brk, align 4, !dbg !5764
  %inc28 = add i32 %13, 1, !dbg !5764
  store i32 %inc28, i32* %brk, align 4, !dbg !5764
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5765
  %call29 = call i32 @uart_handle_break(%struct.uart_port* %14) #10, !dbg !5767
  %tobool30 = icmp ne i32 %call29, 0, !dbg !5767
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5768

if.then31:                                        ; preds = %if.then23
  br label %return, !dbg !5769

if.end32:                                         ; preds = %if.then23
  br label %if.end49, !dbg !5770

if.else33:                                        ; preds = %if.then19
  %15 = load i8, i8* %lsr.addr, align 1, !dbg !5771
  %conv34 = zext i8 %15 to i32, !dbg !5771
  %and35 = and i32 %conv34, 4, !dbg !5773
  %tobool36 = icmp ne i32 %and35, 0, !dbg !5773
  br i1 %tobool36, label %if.then37, label %if.else40, !dbg !5774

if.then37:                                        ; preds = %if.else33
  %16 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5775
  %icount38 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 31, !dbg !5776
  %parity = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount38, i32 0, i32 8, !dbg !5777
  %17 = load i32, i32* %parity, align 8, !dbg !5778
  %inc39 = add i32 %17, 1, !dbg !5778
  store i32 %inc39, i32* %parity, align 8, !dbg !5778
  br label %if.end48, !dbg !5775

if.else40:                                        ; preds = %if.else33
  %18 = load i8, i8* %lsr.addr, align 1, !dbg !5779
  %conv41 = zext i8 %18 to i32, !dbg !5779
  %and42 = and i32 %conv41, 8, !dbg !5781
  %tobool43 = icmp ne i32 %and42, 0, !dbg !5781
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !5782

if.then44:                                        ; preds = %if.else40
  %19 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5783
  %icount45 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 31, !dbg !5784
  %frame = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount45, i32 0, i32 6, !dbg !5785
  %20 = load i32, i32* %frame, align 8, !dbg !5786
  %inc46 = add i32 %20, 1, !dbg !5786
  store i32 %inc46, i32* %frame, align 8, !dbg !5786
  br label %if.end47, !dbg !5783

if.end47:                                         ; preds = %if.then44, %if.else40
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then37
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end32
  %21 = load i8, i8* %lsr.addr, align 1, !dbg !5787
  %conv50 = zext i8 %21 to i32, !dbg !5787
  %and51 = and i32 %conv50, 2, !dbg !5789
  %tobool52 = icmp ne i32 %and51, 0, !dbg !5789
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !5790

if.then53:                                        ; preds = %if.end49
  %22 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5791
  %icount54 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 31, !dbg !5792
  %overrun = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount54, i32 0, i32 7, !dbg !5793
  %23 = load i32, i32* %overrun, align 4, !dbg !5794
  %inc55 = add i32 %23, 1, !dbg !5794
  store i32 %inc55, i32* %overrun, align 4, !dbg !5794
  br label %if.end56, !dbg !5791

if.end56:                                         ; preds = %if.then53, %if.end49
  %24 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5795
  %read_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %24, i32 0, i32 28, !dbg !5796
  %25 = load i32, i32* %read_status_mask, align 4, !dbg !5796
  %26 = load i8, i8* %lsr.addr, align 1, !dbg !5797
  %conv57 = zext i8 %26 to i32, !dbg !5797
  %and58 = and i32 %conv57, %25, !dbg !5797
  %conv59 = trunc i32 %and58 to i8, !dbg !5797
  store i8 %conv59, i8* %lsr.addr, align 1, !dbg !5797
  %27 = load i8, i8* %lsr.addr, align 1, !dbg !5798
  %conv60 = zext i8 %27 to i32, !dbg !5798
  %and61 = and i32 %conv60, 16, !dbg !5800
  %tobool62 = icmp ne i32 %and61, 0, !dbg !5800
  br i1 %tobool62, label %if.then63, label %if.else64, !dbg !5801

if.then63:                                        ; preds = %if.end56
  store i8 1, i8* %flag, align 1, !dbg !5802
  br label %if.end76, !dbg !5804

if.else64:                                        ; preds = %if.end56
  %28 = load i8, i8* %lsr.addr, align 1, !dbg !5805
  %conv65 = zext i8 %28 to i32, !dbg !5805
  %and66 = and i32 %conv65, 4, !dbg !5807
  %tobool67 = icmp ne i32 %and66, 0, !dbg !5807
  br i1 %tobool67, label %if.then68, label %if.else69, !dbg !5808

if.then68:                                        ; preds = %if.else64
  store i8 3, i8* %flag, align 1, !dbg !5809
  br label %if.end75, !dbg !5810

if.else69:                                        ; preds = %if.else64
  %29 = load i8, i8* %lsr.addr, align 1, !dbg !5811
  %conv70 = zext i8 %29 to i32, !dbg !5811
  %and71 = and i32 %conv70, 8, !dbg !5813
  %tobool72 = icmp ne i32 %and71, 0, !dbg !5813
  br i1 %tobool72, label %if.then73, label %if.end74, !dbg !5814

if.then73:                                        ; preds = %if.else69
  store i8 2, i8* %flag, align 1, !dbg !5815
  br label %if.end74, !dbg !5816

if.end74:                                         ; preds = %if.then73, %if.else69
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then68
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then63
  br label %if.end77, !dbg !5817

if.end77:                                         ; preds = %if.end76, %if.end
  %30 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5818
  %31 = load i8, i8* %ch, align 1, !dbg !5820
  %conv78 = zext i8 %31 to i32, !dbg !5820
  %call79 = call i32 @uart_prepare_sysrq_char(%struct.uart_port* %30, i32 %conv78) #10, !dbg !5821
  %tobool80 = icmp ne i32 %call79, 0, !dbg !5821
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !5822

if.then81:                                        ; preds = %if.end77
  br label %return, !dbg !5823

if.end82:                                         ; preds = %if.end77
  %32 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5824
  %33 = load i8, i8* %lsr.addr, align 1, !dbg !5825
  %conv83 = zext i8 %33 to i32, !dbg !5825
  %34 = load i8, i8* %ch, align 1, !dbg !5826
  %conv84 = zext i8 %34 to i32, !dbg !5826
  %35 = load i8, i8* %flag, align 1, !dbg !5827
  %conv85 = sext i8 %35 to i32, !dbg !5827
  call void @uart_insert_char(%struct.uart_port* %32, i32 %conv83, i32 2, i32 %conv84, i32 %conv85) #10, !dbg !5828
  br label %return, !dbg !5829

return:                                           ; preds = %if.end82, %if.then81, %if.then31
  ret void, !dbg !5829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial_in(%struct.uart_8250_port* %up, i32 %offset) #0 !dbg !5830 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5833, metadata !DIExpression()), !dbg !5834
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5837
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !5838
  %serial_in = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 3, !dbg !5839
  %1 = load i32 (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, i32)** %serial_in, align 8, !dbg !5839
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5840
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !5841
  %3 = load i32, i32* %offset.addr, align 4, !dbg !5842
  %call = call i32 %1(%struct.uart_port* %port1, i32 %3) #10, !dbg !5837
  ret i32 %call, !dbg !5843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_handle_break(%struct.uart_port* %port) #0 !dbg !5844 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !5847, metadata !DIExpression()), !dbg !5848
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5849
  %state1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !5850
  %1 = load %struct.uart_state*, %struct.uart_state** %state1, align 8, !dbg !5850
  store %struct.uart_state* %1, %struct.uart_state** %state, align 8, !dbg !5848
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5851
  %handle_break = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 17, !dbg !5853
  %3 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %handle_break, align 8, !dbg !5853
  %tobool = icmp ne void (%struct.uart_port*)* %3, null, !dbg !5851
  br i1 %tobool, label %if.then, label %if.end, !dbg !5854

if.then:                                          ; preds = %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5855
  %handle_break2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 17, !dbg !5856
  %5 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %handle_break2, align 8, !dbg !5856
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5857
  call void %5(%struct.uart_port* %6) #10, !dbg !5855
  br label %if.end, !dbg !5855

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !5858
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 33, !dbg !5860
  %8 = load i32, i32* %flags, align 8, !dbg !5860
  %and = and i32 %8, 4, !dbg !5861
  %tobool3 = icmp ne i32 %and, 0, !dbg !5861
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !5862

if.then4:                                         ; preds = %if.end
  %9 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5863
  %port5 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %9, i32 0, i32 0, !dbg !5864
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 1, !dbg !5865
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !5865
  call void @do_SAK(%struct.tty_struct* %10) #10, !dbg !5866
  br label %if.end6, !dbg !5866

if.end6:                                          ; preds = %if.then4, %if.end
  ret i32 0, !dbg !5867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_prepare_sysrq_char(%struct.uart_port* %port, i32 %ch) #0 !dbg !5868 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %ch.addr = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !5871, metadata !DIExpression()), !dbg !5872
  store i32 %ch, i32* %ch.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.addr, metadata !5873, metadata !DIExpression()), !dbg !5874
  ret i32 0, !dbg !5875
}

; Function Attrs: noredzone
declare dso_local void @uart_insert_char(%struct.uart_port*, i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @serial8250_rx_chars(%struct.uart_8250_port* %up, i8 zeroext %lsr) #0 !dbg !5876 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %lsr.addr = alloca i8, align 1
  %port = alloca %struct.uart_port*, align 8
  %max_count = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5879, metadata !DIExpression()), !dbg !5880
  store i8 %lsr, i8* %lsr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lsr.addr, metadata !5881, metadata !DIExpression()), !dbg !5882
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !5883, metadata !DIExpression()), !dbg !5884
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5885
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !5886
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !5884
  call void @llvm.dbg.declare(metadata i32* %max_count, metadata !5887, metadata !DIExpression()), !dbg !5888
  store i32 256, i32* %max_count, align 4, !dbg !5888
  br label %do.body, !dbg !5889

do.body:                                          ; preds = %do.cond, %entry
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5890
  %2 = load i8, i8* %lsr.addr, align 1, !dbg !5892
  call void @serial8250_read_char(%struct.uart_8250_port* %1, i8 zeroext %2) #10, !dbg !5893
  %3 = load i32, i32* %max_count, align 4, !dbg !5894
  %dec = add i32 %3, -1, !dbg !5894
  store i32 %dec, i32* %max_count, align 4, !dbg !5894
  %cmp = icmp eq i32 %dec, 0, !dbg !5896
  br i1 %cmp, label %if.then, label %if.end, !dbg !5897

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !5898

if.end:                                           ; preds = %do.body
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5899
  %call = call i32 @serial_in(%struct.uart_8250_port* %4, i32 5) #10, !dbg !5900
  %conv = trunc i32 %call to i8, !dbg !5900
  store i8 %conv, i8* %lsr.addr, align 1, !dbg !5901
  br label %do.cond, !dbg !5902

do.cond:                                          ; preds = %if.end
  %5 = load i8, i8* %lsr.addr, align 1, !dbg !5903
  %conv2 = zext i8 %5 to i32, !dbg !5903
  %and = and i32 %conv2, 17, !dbg !5904
  %tobool = icmp ne i32 %and, 0, !dbg !5902
  br i1 %tobool, label %do.body, label %do.end, !dbg !5902, !llvm.loop !5905

do.end:                                           ; preds = %do.cond, %if.then
  %6 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5907
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 30, !dbg !5908
  %7 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5908
  %port3 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %7, i32 0, i32 0, !dbg !5909
  call void @tty_flip_buffer_push(%struct.tty_port* %port3) #10, !dbg !5910
  %8 = load i8, i8* %lsr.addr, align 1, !dbg !5911
  ret i8 %8, !dbg !5912
}

; Function Attrs: noredzone
declare dso_local void @tty_flip_buffer_push(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_tx_chars(%struct.uart_8250_port* %up) #0 !dbg !5913 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %port = alloca %struct.uart_port*, align 8
  %xmit = alloca %struct.circ_buf*, align 8
  %count = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !5914, metadata !DIExpression()), !dbg !5915
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !5916, metadata !DIExpression()), !dbg !5917
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5918
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !5919
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !5917
  call void @llvm.dbg.declare(metadata %struct.circ_buf** %xmit, metadata !5920, metadata !DIExpression()), !dbg !5922
  %1 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5923
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 30, !dbg !5924
  %2 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !5924
  %xmit2 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %2, i32 0, i32 2, !dbg !5925
  store %struct.circ_buf* %xmit2, %struct.circ_buf** %xmit, align 8, !dbg !5922
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5926, metadata !DIExpression()), !dbg !5927
  %3 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5928
  %x_char = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 24, !dbg !5930
  %4 = load i8, i8* %x_char, align 8, !dbg !5930
  %tobool = icmp ne i8 %4, 0, !dbg !5928
  br i1 %tobool, label %if.then, label %if.end, !dbg !5931

if.then:                                          ; preds = %entry
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5932
  %6 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5934
  %x_char3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 24, !dbg !5935
  %7 = load i8, i8* %x_char3, align 8, !dbg !5935
  %conv = zext i8 %7 to i32, !dbg !5934
  call void @serial_out(%struct.uart_8250_port* %5, i32 0, i32 %conv) #10, !dbg !5936
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5937
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 31, !dbg !5938
  %tx = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 5, !dbg !5939
  %9 = load i32, i32* %tx, align 4, !dbg !5940
  %inc = add i32 %9, 1, !dbg !5940
  store i32 %inc, i32* %tx, align 4, !dbg !5940
  %10 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5941
  %x_char4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 24, !dbg !5942
  store i8 0, i8* %x_char4, align 8, !dbg !5943
  br label %if.end62, !dbg !5944

if.end:                                           ; preds = %entry
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5945
  %call = call i32 @uart_tx_stopped(%struct.uart_port* %11) #10, !dbg !5947
  %tobool5 = icmp ne i32 %call, 0, !dbg !5947
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5948

if.then6:                                         ; preds = %if.end
  %12 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5949
  call void @serial8250_stop_tx(%struct.uart_port* %12) #10, !dbg !5951
  br label %if.end62, !dbg !5952

if.end7:                                          ; preds = %if.end
  %13 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5953
  %head = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %13, i32 0, i32 1, !dbg !5953
  %14 = load i32, i32* %head, align 8, !dbg !5953
  %15 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5953
  %tail = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %15, i32 0, i32 2, !dbg !5953
  %16 = load i32, i32* %tail, align 4, !dbg !5953
  %cmp = icmp eq i32 %14, %16, !dbg !5953
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !5955

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5956
  call void @__stop_tx(%struct.uart_8250_port* %17) #10, !dbg !5958
  br label %if.end62, !dbg !5959

if.end10:                                         ; preds = %if.end7
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5960
  %tx_loadsz = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %18, i32 0, i32 6, !dbg !5961
  %19 = load i32, i32* %tx_loadsz, align 8, !dbg !5961
  store i32 %19, i32* %count, align 4, !dbg !5962
  br label %do.body, !dbg !5963

do.body:                                          ; preds = %do.cond, %if.end10
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5964
  %21 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5966
  %buf = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %21, i32 0, i32 0, !dbg !5967
  %22 = load i8*, i8** %buf, align 8, !dbg !5967
  %23 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5968
  %tail11 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %23, i32 0, i32 2, !dbg !5969
  %24 = load i32, i32* %tail11, align 4, !dbg !5969
  %idxprom = sext i32 %24 to i64, !dbg !5966
  %arrayidx = getelementptr i8, i8* %22, i64 %idxprom, !dbg !5966
  %25 = load i8, i8* %arrayidx, align 1, !dbg !5966
  %conv12 = sext i8 %25 to i32, !dbg !5966
  call void @serial_out(%struct.uart_8250_port* %20, i32 0, i32 %conv12) #10, !dbg !5970
  %26 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5971
  %tail13 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %26, i32 0, i32 2, !dbg !5972
  %27 = load i32, i32* %tail13, align 4, !dbg !5972
  %add = add i32 %27, 1, !dbg !5973
  %conv14 = sext i32 %add to i64, !dbg !5974
  %and = and i64 %conv14, 4095, !dbg !5975
  %conv15 = trunc i64 %and to i32, !dbg !5974
  %28 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5976
  %tail16 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %28, i32 0, i32 2, !dbg !5977
  store i32 %conv15, i32* %tail16, align 4, !dbg !5978
  %29 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !5979
  %icount17 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 31, !dbg !5980
  %tx18 = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount17, i32 0, i32 5, !dbg !5981
  %30 = load i32, i32* %tx18, align 4, !dbg !5982
  %inc19 = add i32 %30, 1, !dbg !5982
  store i32 %inc19, i32* %tx18, align 4, !dbg !5982
  %31 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5983
  %head20 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %31, i32 0, i32 1, !dbg !5983
  %32 = load i32, i32* %head20, align 8, !dbg !5983
  %33 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !5983
  %tail21 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %33, i32 0, i32 2, !dbg !5983
  %34 = load i32, i32* %tail21, align 4, !dbg !5983
  %cmp22 = icmp eq i32 %32, %34, !dbg !5983
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5985

if.then24:                                        ; preds = %do.body
  br label %do.end, !dbg !5986

if.end25:                                         ; preds = %do.body
  %35 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5987
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %35, i32 0, i32 3, !dbg !5989
  %36 = load i32, i32* %capabilities, align 8, !dbg !5989
  %and26 = and i32 %36, 16384, !dbg !5990
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5990
  br i1 %tobool27, label %land.lhs.true, label %if.end33, !dbg !5991

land.lhs.true:                                    ; preds = %if.end25
  %37 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5992
  %call28 = call i32 @serial_in(%struct.uart_8250_port* %37, i32 5) #10, !dbg !5993
  %and29 = and i32 %call28, 96, !dbg !5994
  %cmp30 = icmp ne i32 %and29, 96, !dbg !5995
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5996

if.then32:                                        ; preds = %land.lhs.true
  br label %do.end, !dbg !5997

if.end33:                                         ; preds = %land.lhs.true, %if.end25
  %38 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !5998
  %capabilities34 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %38, i32 0, i32 3, !dbg !6000
  %39 = load i32, i32* %capabilities34, align 8, !dbg !6000
  %and35 = and i32 %39, 131072, !dbg !6001
  %tobool36 = icmp ne i32 %and35, 0, !dbg !6001
  br i1 %tobool36, label %land.lhs.true37, label %if.end42, !dbg !6002

land.lhs.true37:                                  ; preds = %if.end33
  %40 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6003
  %call38 = call i32 @serial_in(%struct.uart_8250_port* %40, i32 5) #10, !dbg !6004
  %and39 = and i32 %call38, 32, !dbg !6005
  %tobool40 = icmp ne i32 %and39, 0, !dbg !6005
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !6006

if.then41:                                        ; preds = %land.lhs.true37
  br label %do.end, !dbg !6007

if.end42:                                         ; preds = %land.lhs.true37, %if.end33
  br label %do.cond, !dbg !6008

do.cond:                                          ; preds = %if.end42
  %41 = load i32, i32* %count, align 4, !dbg !6009
  %dec = add i32 %41, -1, !dbg !6009
  store i32 %dec, i32* %count, align 4, !dbg !6009
  %cmp43 = icmp sgt i32 %dec, 0, !dbg !6010
  br i1 %cmp43, label %do.body, label %do.end, !dbg !6008, !llvm.loop !6011

do.end:                                           ; preds = %do.cond, %if.then41, %if.then32, %if.then24
  %42 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !6013
  %head45 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %42, i32 0, i32 1, !dbg !6013
  %43 = load i32, i32* %head45, align 8, !dbg !6013
  %44 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !6013
  %tail46 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %44, i32 0, i32 2, !dbg !6013
  %45 = load i32, i32* %tail46, align 4, !dbg !6013
  %sub = sub i32 %43, %45, !dbg !6013
  %conv47 = sext i32 %sub to i64, !dbg !6013
  %and48 = and i64 %conv47, 4095, !dbg !6013
  %cmp49 = icmp ult i64 %and48, 256, !dbg !6015
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !6016

if.then51:                                        ; preds = %do.end
  %46 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6017
  call void @uart_write_wakeup(%struct.uart_port* %46) #10, !dbg !6018
  br label %if.end52, !dbg !6018

if.end52:                                         ; preds = %if.then51, %do.end
  %47 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !6019
  %head53 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %47, i32 0, i32 1, !dbg !6019
  %48 = load i32, i32* %head53, align 8, !dbg !6019
  %49 = load %struct.circ_buf*, %struct.circ_buf** %xmit, align 8, !dbg !6019
  %tail54 = getelementptr inbounds %struct.circ_buf, %struct.circ_buf* %49, i32 0, i32 2, !dbg !6019
  %50 = load i32, i32* %tail54, align 4, !dbg !6019
  %cmp55 = icmp eq i32 %48, %50, !dbg !6019
  br i1 %cmp55, label %land.lhs.true57, label %if.end62, !dbg !6021

land.lhs.true57:                                  ; preds = %if.end52
  %51 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6022
  %capabilities58 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %51, i32 0, i32 3, !dbg !6023
  %52 = load i32, i32* %capabilities58, align 8, !dbg !6023
  %and59 = and i32 %52, 32768, !dbg !6024
  %tobool60 = icmp ne i32 %and59, 0, !dbg !6024
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !6025

if.then61:                                        ; preds = %land.lhs.true57
  %53 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6026
  call void @__stop_tx(%struct.uart_8250_port* %53) #10, !dbg !6027
  br label %if.end62, !dbg !6027

if.end62:                                         ; preds = %if.then, %if.then6, %if.then9, %if.then61, %land.lhs.true57, %if.end52
  ret void, !dbg !6028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @uart_tx_stopped(%struct.uart_port* %port) #0 !dbg !6029 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !6032, metadata !DIExpression()), !dbg !6033
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6034
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 30, !dbg !6035
  %1 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6035
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %1, i32 0, i32 0, !dbg !6036
  %tty2 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 1, !dbg !6037
  %2 = load %struct.tty_struct*, %struct.tty_struct** %tty2, align 8, !dbg !6037
  store %struct.tty_struct* %2, %struct.tty_struct** %tty, align 8, !dbg !6033
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6038
  %tobool = icmp ne %struct.tty_struct* %3, null, !dbg !6038
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !6040

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6041
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 24, !dbg !6042
  %bf.load = load i8, i8* %stopped, align 4, !dbg !6042
  %bf.clear = and i8 %bf.load, 1, !dbg !6042
  %bf.cast = zext i8 %bf.clear to i64, !dbg !6042
  %conv = trunc i64 %bf.cast to i32, !dbg !6041
  %tobool3 = icmp ne i32 %conv, 0, !dbg !6041
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !6043

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6044
  %hw_stopped = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 35, !dbg !6045
  %6 = load i32, i32* %hw_stopped, align 8, !dbg !6045
  %tobool4 = icmp ne i32 %6, 0, !dbg !6044
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6046

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !6047
  br label %return, !dbg !6047

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !6048
  br label %return, !dbg !6048

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !6049
  ret i32 %7, !dbg !6049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_stop_tx(%struct.uart_port* %port) #0 !dbg !6050 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6051, metadata !DIExpression()), !dbg !6052
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !6053, metadata !DIExpression()), !dbg !6054
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6055
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !6056
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !6054
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6057
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !6058
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6059
  call void @__stop_tx(%struct.uart_8250_port* %2) #10, !dbg !6060
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6061
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 38, !dbg !6063
  %4 = load i32, i32* %type, align 4, !dbg !6063
  %cmp = icmp eq i32 %4, 10, !dbg !6064
  br i1 %cmp, label %if.then, label %if.end, !dbg !6065

if.then:                                          ; preds = %entry
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6066
  %acr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 7, !dbg !6068
  %6 = load i8, i8* %acr, align 4, !dbg !6069
  %conv = zext i8 %6 to i32, !dbg !6069
  %or = or i32 %conv, 2, !dbg !6069
  %conv1 = trunc i32 %or to i8, !dbg !6069
  store i8 %conv1, i8* %acr, align 4, !dbg !6069
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6070
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6071
  %acr2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 7, !dbg !6072
  %9 = load i8, i8* %acr2, align 4, !dbg !6072
  %conv3 = zext i8 %9 to i32, !dbg !6071
  call void @serial_icr_write(%struct.uart_8250_port* %7, i32 0, i32 %conv3) #10, !dbg !6073
  br label %if.end, !dbg !6074

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6075
  call void @serial8250_rpm_put(%struct.uart_8250_port* %10) #10, !dbg !6076
  ret void, !dbg !6077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__stop_tx(%struct.uart_8250_port* %p) #0 !dbg !6078 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  %lsr = alloca i8, align 1
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !6081, metadata !DIExpression()), !dbg !6082
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !6083
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 25, !dbg !6084
  %1 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4851, align 8, !dbg !6084
  store %struct.uart_8250_em485* %1, %struct.uart_8250_em485** %em485, align 8, !dbg !6082
  %2 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !6085
  %tobool = icmp ne %struct.uart_8250_em485* %2, null, !dbg !6085
  br i1 %tobool, label %if.then, label %if.end5, !dbg !6087

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %lsr, metadata !6088, metadata !DIExpression()), !dbg !6090
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !6091
  %call = call i32 @serial_in(%struct.uart_8250_port* %3, i32 5) #10, !dbg !6092
  %conv = trunc i32 %call to i8, !dbg !6092
  store i8 %conv, i8* %lsr, align 1, !dbg !6090
  %4 = load i8, i8* %lsr, align 1, !dbg !6093
  %conv2 = zext i8 %4 to i32, !dbg !6093
  %and = and i32 %conv2, 96, !dbg !6095
  %cmp = icmp ne i32 %and, 96, !dbg !6096
  br i1 %cmp, label %if.then4, label %if.end, !dbg !6097

if.then4:                                         ; preds = %if.then
  br label %return, !dbg !6098

if.end:                                           ; preds = %if.then
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !6099
  call void @__stop_tx_rs485(%struct.uart_8250_port* %5) #10, !dbg !6100
  br label %if.end5, !dbg !6101

if.end5:                                          ; preds = %if.end, %entry
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !6102
  call void @__do_stop_tx(%struct.uart_8250_port* %6) #10, !dbg !6103
  br label %return, !dbg !6104

return:                                           ; preds = %if.end5, %if.then4
  ret void, !dbg !6104
}

; Function Attrs: noredzone
declare dso_local void @uart_write_wakeup(%struct.uart_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @serial8250_modem_status(%struct.uart_8250_port* %up) #0 !dbg !6105 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %port = alloca %struct.uart_port*, align 8
  %status = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !6108, metadata !DIExpression()), !dbg !6109
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !6110, metadata !DIExpression()), !dbg !6111
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6112
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !6113
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !6111
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6114, metadata !DIExpression()), !dbg !6115
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6116
  %call = call i32 @serial_in(%struct.uart_8250_port* %1, i32 6) #10, !dbg !6117
  store i32 %call, i32* %status, align 4, !dbg !6115
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6118
  %msr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 20, !dbg !6119
  %3 = load i8, i8* %msr_saved_flags, align 1, !dbg !6119
  %conv = zext i8 %3 to i32, !dbg !6118
  %4 = load i32, i32* %status, align 4, !dbg !6120
  %or = or i32 %4, %conv, !dbg !6120
  store i32 %or, i32* %status, align 4, !dbg !6120
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6121
  %msr_saved_flags2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 20, !dbg !6122
  store i8 0, i8* %msr_saved_flags2, align 1, !dbg !6123
  %6 = load i32, i32* %status, align 4, !dbg !6124
  %and = and i32 %6, 15, !dbg !6126
  %tobool = icmp ne i32 %and, 0, !dbg !6126
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !6127

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6128
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 9, !dbg !6129
  %8 = load i8, i8* %ier, align 2, !dbg !6129
  %conv3 = zext i8 %8 to i32, !dbg !6128
  %and4 = and i32 %conv3, 8, !dbg !6130
  %tobool5 = icmp ne i32 %and4, 0, !dbg !6130
  br i1 %tobool5, label %land.lhs.true6, label %if.end29, !dbg !6131

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6132
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 30, !dbg !6133
  %10 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !6133
  %cmp = icmp ne %struct.uart_state* %10, null, !dbg !6134
  br i1 %cmp, label %if.then, label %if.end29, !dbg !6135

if.then:                                          ; preds = %land.lhs.true6
  %11 = load i32, i32* %status, align 4, !dbg !6136
  %and8 = and i32 %11, 4, !dbg !6139
  %tobool9 = icmp ne i32 %and8, 0, !dbg !6139
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !6140

if.then10:                                        ; preds = %if.then
  %12 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6141
  %icount = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 31, !dbg !6142
  %rng = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount, i32 0, i32 2, !dbg !6143
  %13 = load i32, i32* %rng, align 8, !dbg !6144
  %inc = add i32 %13, 1, !dbg !6144
  store i32 %inc, i32* %rng, align 8, !dbg !6144
  br label %if.end, !dbg !6141

if.end:                                           ; preds = %if.then10, %if.then
  %14 = load i32, i32* %status, align 4, !dbg !6145
  %and11 = and i32 %14, 2, !dbg !6147
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6147
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !6148

if.then13:                                        ; preds = %if.end
  %15 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6149
  %icount14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 31, !dbg !6150
  %dsr = getelementptr inbounds %struct.uart_icount, %struct.uart_icount* %icount14, i32 0, i32 1, !dbg !6151
  %16 = load i32, i32* %dsr, align 4, !dbg !6152
  %inc15 = add i32 %16, 1, !dbg !6152
  store i32 %inc15, i32* %dsr, align 4, !dbg !6152
  br label %if.end16, !dbg !6149

if.end16:                                         ; preds = %if.then13, %if.end
  %17 = load i32, i32* %status, align 4, !dbg !6153
  %and17 = and i32 %17, 8, !dbg !6155
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6155
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !6156

if.then19:                                        ; preds = %if.end16
  %18 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6157
  %19 = load i32, i32* %status, align 4, !dbg !6158
  %and20 = and i32 %19, 128, !dbg !6159
  call void @uart_handle_dcd_change(%struct.uart_port* %18, i32 %and20) #10, !dbg !6160
  br label %if.end21, !dbg !6160

if.end21:                                         ; preds = %if.then19, %if.end16
  %20 = load i32, i32* %status, align 4, !dbg !6161
  %and22 = and i32 %20, 1, !dbg !6163
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6163
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6164

if.then24:                                        ; preds = %if.end21
  %21 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6165
  %22 = load i32, i32* %status, align 4, !dbg !6166
  %and25 = and i32 %22, 16, !dbg !6167
  call void @uart_handle_cts_change(%struct.uart_port* %21, i32 %and25) #10, !dbg !6168
  br label %if.end26, !dbg !6168

if.end26:                                         ; preds = %if.then24, %if.end21
  %23 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !6169
  %state27 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 30, !dbg !6169
  %24 = load %struct.uart_state*, %struct.uart_state** %state27, align 8, !dbg !6169
  %port28 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %24, i32 0, i32 0, !dbg !6169
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port28, i32 0, i32 9, !dbg !6169
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #10, !dbg !6169
  br label %if.end29, !dbg !6170

if.end29:                                         ; preds = %if.end26, %land.lhs.true6, %land.lhs.true, %entry
  %25 = load i32, i32* %status, align 4, !dbg !6171
  ret i32 %25, !dbg !6172
}

; Function Attrs: noredzone
declare dso_local void @uart_handle_dcd_change(%struct.uart_port*, i32) #2

; Function Attrs: noredzone
declare dso_local void @uart_handle_cts_change(%struct.uart_port*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @serial8250_handle_irq(%struct.uart_port* %port, i32 %iir) #0 !dbg !6173 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !6180
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %iir.addr = alloca i32, align 4
  %status = alloca i8, align 1
  %flags = alloca i64, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %skip_rx = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store i32 %iir, i32* %iir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iir.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata i8* %status, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !6195, metadata !DIExpression()), !dbg !6196
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6197
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !6198
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !6196
  call void @llvm.dbg.declare(metadata i8* %skip_rx, metadata !6199, metadata !DIExpression()), !dbg !6200
  store i8 0, i8* %skip_rx, align 1, !dbg !6200
  %1 = load i32, i32* %iir.addr, align 4, !dbg !6201
  %and = and i32 %1, 1, !dbg !6203
  %tobool = icmp ne i32 %and, 0, !dbg !6203
  br i1 %tobool, label %if.then, label %if.end, !dbg !6204

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6206

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !6207

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6208, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6211, metadata !DIExpression()), !dbg !6210
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6210
  %conv = zext i1 %cmp to i32, !dbg !6210
  store i32 1, i32* %tmp, align 4, !dbg !6210
  %2 = load i32, i32* %tmp, align 4, !dbg !6210
  br label %do.body2, !dbg !6212

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6213

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6214

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6216, metadata !DIExpression()), !dbg !6219
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6220, metadata !DIExpression()), !dbg !6219
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6219
  %conv8 = zext i1 %cmp7 to i32, !dbg !6219
  store i32 1, i32* %tmp9, align 4, !dbg !6219
  %3 = load i32, i32* %tmp9, align 4, !dbg !6219
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !6221
  store i64 %call10, i64* %flags, align 8, !dbg !6221
  br label %do.end, !dbg !6221

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6214

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6213

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6222, !srcloc !6223
  br label %do.body13, !dbg !6222

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6224
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !6224
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6225
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !6226
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !6226
  br label %do.end15, !dbg !6224

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !6222

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6213

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6212

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6207

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6227
  %call20 = call i32 @serial_port_in(%struct.uart_port* %7, i32 5) #10, !dbg !6228
  %conv21 = trunc i32 %call20 to i8, !dbg !6228
  store i8 %conv21, i8* %status, align 1, !dbg !6229
  %8 = load i8, i8* %status, align 1, !dbg !6230
  %conv22 = zext i8 %8 to i32, !dbg !6230
  %and23 = and i32 %conv22, 158, !dbg !6232
  %tobool24 = icmp ne i32 %and23, 0, !dbg !6232
  br i1 %tobool24, label %if.end32, label %land.lhs.true, !dbg !6233

land.lhs.true:                                    ; preds = %do.end19
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6234
  %status25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 34, !dbg !6235
  %10 = load i32, i32* %status25, align 4, !dbg !6235
  %and26 = and i32 %10, 12, !dbg !6236
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6236
  br i1 %tobool27, label %land.lhs.true28, label %if.end32, !dbg !6237

land.lhs.true28:                                  ; preds = %land.lhs.true
  %11 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6238
  %read_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 28, !dbg !6239
  %12 = load i32, i32* %read_status_mask, align 4, !dbg !6239
  %and29 = and i32 %12, 1, !dbg !6240
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6240
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !6241

if.then31:                                        ; preds = %land.lhs.true28
  store i8 1, i8* %skip_rx, align 1, !dbg !6242
  br label %if.end32, !dbg !6243

if.end32:                                         ; preds = %if.then31, %land.lhs.true28, %land.lhs.true, %do.end19
  %13 = load i8, i8* %status, align 1, !dbg !6244
  %conv33 = zext i8 %13 to i32, !dbg !6244
  %and34 = and i32 %conv33, 17, !dbg !6246
  %tobool35 = icmp ne i32 %and34, 0, !dbg !6246
  br i1 %tobool35, label %land.lhs.true36, label %if.end45, !dbg !6247

land.lhs.true36:                                  ; preds = %if.end32
  %14 = load i8, i8* %skip_rx, align 1, !dbg !6248
  %tobool37 = trunc i8 %14 to i1, !dbg !6248
  br i1 %tobool37, label %if.end45, label %if.then38, !dbg !6249

if.then38:                                        ; preds = %land.lhs.true36
  %15 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6250
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %15, i32 0, i32 21, !dbg !6253
  %16 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !6253
  %tobool39 = icmp ne %struct.uart_8250_dma* %16, null, !dbg !6250
  br i1 %tobool39, label %lor.lhs.false, label %if.then42, !dbg !6254

lor.lhs.false:                                    ; preds = %if.then38
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6255
  %18 = load i32, i32* %iir.addr, align 4, !dbg !6256
  %call40 = call zeroext i1 @handle_rx_dma(%struct.uart_8250_port* %17, i32 %18) #10, !dbg !6257
  br i1 %call40, label %if.then42, label %if.end44, !dbg !6258

if.then42:                                        ; preds = %lor.lhs.false, %if.then38
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6259
  %20 = load i8, i8* %status, align 1, !dbg !6260
  %call43 = call zeroext i8 @serial8250_rx_chars(%struct.uart_8250_port* %19, i8 zeroext %20) #10, !dbg !6261
  store i8 %call43, i8* %status, align 1, !dbg !6262
  br label %if.end44, !dbg !6263

if.end44:                                         ; preds = %if.then42, %lor.lhs.false
  br label %if.end45, !dbg !6264

if.end45:                                         ; preds = %if.end44, %land.lhs.true36, %if.end32
  %21 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6265
  %call46 = call i32 @serial8250_modem_status(%struct.uart_8250_port* %21) #10, !dbg !6266
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6267
  %dma47 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %22, i32 0, i32 21, !dbg !6269
  %23 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma47, align 8, !dbg !6269
  %tobool48 = icmp ne %struct.uart_8250_dma* %23, null, !dbg !6267
  br i1 %tobool48, label %lor.lhs.false49, label %land.lhs.true53, !dbg !6270

lor.lhs.false49:                                  ; preds = %if.end45
  %24 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6271
  %dma50 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %24, i32 0, i32 21, !dbg !6272
  %25 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma50, align 8, !dbg !6272
  %tx_err = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %25, i32 0, i32 19, !dbg !6273
  %26 = load i8, i8* %tx_err, align 1, !dbg !6273
  %conv51 = zext i8 %26 to i32, !dbg !6271
  %tobool52 = icmp ne i32 %conv51, 0, !dbg !6271
  br i1 %tobool52, label %land.lhs.true53, label %if.end62, !dbg !6274

land.lhs.true53:                                  ; preds = %lor.lhs.false49, %if.end45
  %27 = load i8, i8* %status, align 1, !dbg !6275
  %conv54 = zext i8 %27 to i32, !dbg !6275
  %and55 = and i32 %conv54, 32, !dbg !6276
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6276
  br i1 %tobool56, label %land.lhs.true57, label %if.end62, !dbg !6277

land.lhs.true57:                                  ; preds = %land.lhs.true53
  %28 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6278
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %28, i32 0, i32 9, !dbg !6279
  %29 = load i8, i8* %ier, align 2, !dbg !6279
  %conv58 = zext i8 %29 to i32, !dbg !6278
  %and59 = and i32 %conv58, 2, !dbg !6280
  %tobool60 = icmp ne i32 %and59, 0, !dbg !6280
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !6281

if.then61:                                        ; preds = %land.lhs.true57
  %30 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6282
  call void @serial8250_tx_chars(%struct.uart_8250_port* %30) #10, !dbg !6283
  br label %if.end62, !dbg !6283

if.end62:                                         ; preds = %if.then61, %land.lhs.true57, %land.lhs.true53, %lor.lhs.false49
  %31 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6284
  %32 = load i64, i64* %flags, align 8, !dbg !6285
  call void @uart_unlock_and_check_sysrq(%struct.uart_port* %31, i64 %32) #10, !dbg !6286
  store i32 1, i32* %retval, align 4, !dbg !6287
  br label %return, !dbg !6287

return:                                           ; preds = %if.end62, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !6288
  ret i32 %33, !dbg !6288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !6289 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6293, metadata !DIExpression()), !dbg !6294
  %call = call i64 @arch_local_save_flags() #10, !dbg !6295
  store i64 %call, i64* %f, align 8, !dbg !6296
  call void @arch_local_irq_disable() #10, !dbg !6297
  %0 = load i64, i64* %f, align 8, !dbg !6298
  ret i64 %0, !dbg !6299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial_port_in(%struct.uart_port* %up, i32 %offset) #0 !dbg !6300 {
entry:
  %up.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %up, %struct.uart_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %up.addr, metadata !6303, metadata !DIExpression()), !dbg !6304
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  %0 = load %struct.uart_port*, %struct.uart_port** %up.addr, align 8, !dbg !6307
  %serial_in = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 3, !dbg !6308
  %1 = load i32 (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, i32)** %serial_in, align 8, !dbg !6308
  %2 = load %struct.uart_port*, %struct.uart_port** %up.addr, align 8, !dbg !6309
  %3 = load i32, i32* %offset.addr, align 4, !dbg !6310
  %call = call i32 %1(%struct.uart_port* %2, i32 %3) #10, !dbg !6307
  ret i32 %call, !dbg !6311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @handle_rx_dma(%struct.uart_8250_port* %up, i32 %iir) #0 !dbg !6312 {
entry:
  %retval = alloca i1, align 1
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %iir.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  store i32 %iir, i32* %iir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iir.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  %0 = load i32, i32* %iir.addr, align 4, !dbg !6319
  %and = and i32 %0, 63, !dbg !6320
  switch i32 %and, label %sw.epilog [
    i32 12, label %sw.bb
    i32 6, label %sw.bb1
  ], !dbg !6321

sw.bb:                                            ; preds = %entry
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6322
  call void @serial8250_rx_dma_flush(%struct.uart_8250_port* %1) #10, !dbg !6324
  br label %sw.bb1, !dbg !6324

sw.bb1:                                           ; preds = %entry, %sw.bb
  store i1 true, i1* %retval, align 1, !dbg !6325
  br label %return, !dbg !6325

sw.epilog:                                        ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6326
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 21, !dbg !6327
  %3 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !6327
  %rx_dma = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %3, i32 0, i32 1, !dbg !6328
  %4 = load i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)** %rx_dma, align 8, !dbg !6328
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !6329
  %call = call i32 %4(%struct.uart_8250_port* %5) #10, !dbg !6326
  %tobool = icmp ne i32 %call, 0, !dbg !6326
  store i1 %tobool, i1* %retval, align 1, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %sw.epilog, %sw.bb1
  %6 = load i1, i1* %retval, align 1, !dbg !6331
  ret i1 %6, !dbg !6331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @uart_unlock_and_check_sysrq(%struct.uart_port* %port, i64 %irqflags) #0 !dbg !6332 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6335, metadata !DIExpression()), !dbg !6339
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !6342
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %irqflags.addr = alloca i64, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6343, metadata !DIExpression()), !dbg !6344
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6347
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 0, !dbg !6348
  %1 = load i64, i64* %irqflags.addr, align 8, !dbg !6349
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  store i64 %1, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !6353
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !6353
  store i32 1, i32* %tmp.i, align 4, !dbg !6353
  %2 = load i32, i32* %tmp.i, align 4, !dbg !6353
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !6360
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !6360
  store i32 1, i32* %tmp8.i, align 4, !dbg !6360
  %3 = load i32, i32* %tmp8.i, align 4, !dbg !6360
  %4 = load i64, i64* %flags.addr.i, align 8, !dbg !6362
  call void @arch_local_irq_restore(i64 %4) #12, !dbg !6362
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6363, !srcloc !6365
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6366
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !6366
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !6366
  ret void, !dbg !6368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @serial8250_do_get_mctrl(%struct.uart_port* %port) #0 !dbg !6369 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %status = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6370, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !6372, metadata !DIExpression()), !dbg !6373
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6374
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !6375
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !6373
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6378, metadata !DIExpression()), !dbg !6379
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6380
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !6381
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6382
  %call1 = call i32 @serial8250_modem_status(%struct.uart_8250_port* %2) #10, !dbg !6383
  store i32 %call1, i32* %status, align 4, !dbg !6384
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6385
  call void @serial8250_rpm_put(%struct.uart_8250_port* %3) #10, !dbg !6386
  %4 = load i32, i32* %status, align 4, !dbg !6387
  %call2 = call i32 @serial8250_MSR_to_TIOCM(i32 %4) #10, !dbg !6388
  store i32 %call2, i32* %val, align 4, !dbg !6389
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6390
  %gpios = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 18, !dbg !6392
  %6 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios, align 8, !dbg !6392
  %tobool = icmp ne %struct.mctrl_gpios* %6, null, !dbg !6390
  br i1 %tobool, label %if.then, label %if.end, !dbg !6393

if.then:                                          ; preds = %entry
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6394
  %gpios3 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 18, !dbg !6395
  %8 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios3, align 8, !dbg !6395
  %call4 = call i32 @mctrl_gpio_get(%struct.mctrl_gpios* %8, i32* %val) #10, !dbg !6396
  store i32 %call4, i32* %retval, align 4, !dbg !6397
  br label %return, !dbg !6397

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %val, align 4, !dbg !6398
  store i32 %9, i32* %retval, align 4, !dbg !6399
  br label %return, !dbg !6399

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6400
  ret i32 %10, !dbg !6400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_MSR_to_TIOCM(i32 %msr) #0 !dbg !6401 {
entry:
  %msr.addr = alloca i32, align 4
  %tiocm = alloca i32, align 4
  store i32 %msr, i32* %msr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msr.addr, metadata !6402, metadata !DIExpression()), !dbg !6403
  call void @llvm.dbg.declare(metadata i32* %tiocm, metadata !6404, metadata !DIExpression()), !dbg !6405
  store i32 0, i32* %tiocm, align 4, !dbg !6405
  %0 = load i32, i32* %msr.addr, align 4, !dbg !6406
  %and = and i32 %0, 128, !dbg !6408
  %tobool = icmp ne i32 %and, 0, !dbg !6408
  br i1 %tobool, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %tiocm, align 4, !dbg !6410
  %or = or i32 %1, 64, !dbg !6410
  store i32 %or, i32* %tiocm, align 4, !dbg !6410
  br label %if.end, !dbg !6411

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %msr.addr, align 4, !dbg !6412
  %and1 = and i32 %2, 64, !dbg !6414
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6414
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !6415

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %tiocm, align 4, !dbg !6416
  %or4 = or i32 %3, 128, !dbg !6416
  store i32 %or4, i32* %tiocm, align 4, !dbg !6416
  br label %if.end5, !dbg !6417

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %msr.addr, align 4, !dbg !6418
  %and6 = and i32 %4, 32, !dbg !6420
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6420
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !6421

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %tiocm, align 4, !dbg !6422
  %or9 = or i32 %5, 256, !dbg !6422
  store i32 %or9, i32* %tiocm, align 4, !dbg !6422
  br label %if.end10, !dbg !6423

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %msr.addr, align 4, !dbg !6424
  %and11 = and i32 %6, 16, !dbg !6426
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6426
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6427

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %tiocm, align 4, !dbg !6428
  %or14 = or i32 %7, 32, !dbg !6428
  store i32 %or14, i32* %tiocm, align 4, !dbg !6428
  br label %if.end15, !dbg !6429

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %tiocm, align 4, !dbg !6430
  ret i32 %8, !dbg !6431
}

; Function Attrs: noredzone
declare dso_local i32 @mctrl_gpio_get(%struct.mctrl_gpios*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_set_mctrl(%struct.uart_port* %port, i32 %mctrl) #0 !dbg !6432 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %mctrl.addr = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  %mcr = alloca i8, align 1
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store i32 %mctrl, i32* %mctrl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mctrl.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !6437, metadata !DIExpression()), !dbg !6438
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6439
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !6440
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata i8* %mcr, metadata !6441, metadata !DIExpression()), !dbg !6442
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6443
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 56, !dbg !6445
  %flags = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 0, !dbg !6446
  %2 = load i32, i32* %flags, align 8, !dbg !6446
  %and = and i32 %2, 1, !dbg !6447
  %tobool = icmp ne i32 %and, 0, !dbg !6447
  br i1 %tobool, label %if.then, label %if.end6, !dbg !6448

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6449
  %call1 = call i32 @serial8250_in_MCR(%struct.uart_8250_port* %3) #10, !dbg !6452
  %and2 = and i32 %call1, 2, !dbg !6453
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6453
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !6454

if.then4:                                         ; preds = %if.then
  %4 = load i32, i32* %mctrl.addr, align 4, !dbg !6455
  %or = or i32 %4, 4, !dbg !6455
  store i32 %or, i32* %mctrl.addr, align 4, !dbg !6455
  br label %if.end, !dbg !6456

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* %mctrl.addr, align 4, !dbg !6457
  %and5 = and i32 %5, -5, !dbg !6457
  store i32 %and5, i32* %mctrl.addr, align 4, !dbg !6457
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end6, !dbg !6458

if.end6:                                          ; preds = %if.end, %entry
  %6 = load i32, i32* %mctrl.addr, align 4, !dbg !6459
  %call7 = call i32 @serial8250_TIOCM_to_MCR(i32 %6) #10, !dbg !6460
  %conv = trunc i32 %call7 to i8, !dbg !6460
  store i8 %conv, i8* %mcr, align 1, !dbg !6461
  %7 = load i8, i8* %mcr, align 1, !dbg !6462
  %conv8 = zext i8 %7 to i32, !dbg !6462
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6463
  %mcr_mask = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 12, !dbg !6464
  %9 = load i8, i8* %mcr_mask, align 1, !dbg !6464
  %conv9 = zext i8 %9 to i32, !dbg !6463
  %and10 = and i32 %conv8, %conv9, !dbg !6465
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6466
  %mcr_force = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 13, !dbg !6467
  %11 = load i8, i8* %mcr_force, align 2, !dbg !6467
  %conv11 = zext i8 %11 to i32, !dbg !6466
  %or12 = or i32 %and10, %conv11, !dbg !6468
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6469
  %mcr13 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 11, !dbg !6470
  %13 = load i8, i8* %mcr13, align 8, !dbg !6470
  %conv14 = zext i8 %13 to i32, !dbg !6469
  %or15 = or i32 %or12, %conv14, !dbg !6471
  %conv16 = trunc i32 %or15 to i8, !dbg !6472
  store i8 %conv16, i8* %mcr, align 1, !dbg !6473
  %14 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6474
  %15 = load i8, i8* %mcr, align 1, !dbg !6475
  %conv17 = zext i8 %15 to i32, !dbg !6475
  call void @serial8250_out_MCR(%struct.uart_8250_port* %14, i32 %conv17) #10, !dbg !6476
  ret void, !dbg !6477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_TIOCM_to_MCR(i32 %tiocm) #0 !dbg !6478 {
entry:
  %tiocm.addr = alloca i32, align 4
  %mcr = alloca i32, align 4
  store i32 %tiocm, i32* %tiocm.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tiocm.addr, metadata !6479, metadata !DIExpression()), !dbg !6480
  call void @llvm.dbg.declare(metadata i32* %mcr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store i32 0, i32* %mcr, align 4, !dbg !6482
  %0 = load i32, i32* %tiocm.addr, align 4, !dbg !6483
  %and = and i32 %0, 4, !dbg !6485
  %tobool = icmp ne i32 %and, 0, !dbg !6485
  br i1 %tobool, label %if.then, label %if.end, !dbg !6486

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %mcr, align 4, !dbg !6487
  %or = or i32 %1, 2, !dbg !6487
  store i32 %or, i32* %mcr, align 4, !dbg !6487
  br label %if.end, !dbg !6488

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %tiocm.addr, align 4, !dbg !6489
  %and1 = and i32 %2, 2, !dbg !6491
  %tobool2 = icmp ne i32 %and1, 0, !dbg !6491
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !6492

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %mcr, align 4, !dbg !6493
  %or4 = or i32 %3, 1, !dbg !6493
  store i32 %or4, i32* %mcr, align 4, !dbg !6493
  br label %if.end5, !dbg !6494

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %tiocm.addr, align 4, !dbg !6495
  %and6 = and i32 %4, 8192, !dbg !6497
  %tobool7 = icmp ne i32 %and6, 0, !dbg !6497
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !6498

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %mcr, align 4, !dbg !6499
  %or9 = or i32 %5, 4, !dbg !6499
  store i32 %or9, i32* %mcr, align 4, !dbg !6499
  br label %if.end10, !dbg !6500

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %tiocm.addr, align 4, !dbg !6501
  %and11 = and i32 %6, 16384, !dbg !6503
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6503
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6504

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %mcr, align 4, !dbg !6505
  %or14 = or i32 %7, 8, !dbg !6505
  store i32 %or14, i32* %mcr, align 4, !dbg !6505
  br label %if.end15, !dbg !6506

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %tiocm.addr, align 4, !dbg !6507
  %and16 = and i32 %8, 32768, !dbg !6509
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6509
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6510

if.then18:                                        ; preds = %if.end15
  %9 = load i32, i32* %mcr, align 4, !dbg !6511
  %or19 = or i32 %9, 16, !dbg !6511
  store i32 %or19, i32* %mcr, align 4, !dbg !6511
  br label %if.end20, !dbg !6512

if.end20:                                         ; preds = %if.then18, %if.end15
  %10 = load i32, i32* %mcr, align 4, !dbg !6513
  ret i32 %10, !dbg !6514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @serial8250_do_startup(%struct.uart_port* %port) #0 !dbg !4895 {
entry:
  %lock.addr.i301 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i301, metadata !6335, metadata !DIExpression()), !dbg !6515
  %flags.addr.i302 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i302, metadata !6341, metadata !DIExpression()), !dbg !6517
  %tmp.i303 = alloca i32, align 4
  %tmp8.i304 = alloca i32, align 4
  %lock.addr.i299 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i299, metadata !6174, metadata !DIExpression()), !dbg !6518
  %lock.addr.i297 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i297, metadata !6335, metadata !DIExpression()), !dbg !6525
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !6529
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !6530
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %lsr = alloca i8, align 1
  %iir = alloca i8, align 1
  %retval1 = alloca i32, align 4
  %__ms = alloca i64, align 8
  %fctr = alloca i8, align 1
  %iir1 = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy128 = alloca i64, align 8
  %__dummy2129 = alloca i64, align 8
  %tmp132 = alloca i32, align 4
  %__dummy179 = alloca i64, align 8
  %__dummy2180 = alloca i64, align 8
  %tmp183 = alloca i32, align 4
  %__dummy187 = alloca i64, align 8
  %__dummy2188 = alloca i64, align 8
  %tmp191 = alloca i32, align 4
  %msg = alloca i8*, align 8
  %tmp267 = alloca i32, align 4
  %icp = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !6537, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !6539, metadata !DIExpression()), !dbg !6540
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6541
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !6542
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !6540
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata i8* %lsr, metadata !6545, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.declare(metadata i8* %iir, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6549, metadata !DIExpression()), !dbg !6550
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6551
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 23, !dbg !6553
  %2 = load i32, i32* %fifosize, align 4, !dbg !6553
  %tobool = icmp ne i32 %2, 0, !dbg !6551
  br i1 %tobool, label %if.end, label %if.then, !dbg !6554

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6555
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 38, !dbg !6556
  %4 = load i32, i32* %type, align 4, !dbg !6556
  %idxprom = zext i32 %4 to i64, !dbg !6557
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !6557
  %fifo_size = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx, i32 0, i32 1, !dbg !6558
  %5 = load i16, i16* %fifo_size, align 8, !dbg !6558
  %conv = zext i16 %5 to i32, !dbg !6557
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6559
  %fifosize2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 23, !dbg !6560
  store i32 %conv, i32* %fifosize2, align 4, !dbg !6561
  br label %if.end, !dbg !6559

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6562
  %tx_loadsz = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 6, !dbg !6564
  %8 = load i32, i32* %tx_loadsz, align 8, !dbg !6564
  %tobool3 = icmp ne i32 %8, 0, !dbg !6562
  br i1 %tobool3, label %if.end11, label %if.then4, !dbg !6565

if.then4:                                         ; preds = %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6566
  %type5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 38, !dbg !6567
  %10 = load i32, i32* %type5, align 4, !dbg !6567
  %idxprom6 = zext i32 %10 to i64, !dbg !6568
  %arrayidx7 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom6, !dbg !6568
  %tx_loadsz8 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx7, i32 0, i32 2, !dbg !6569
  %11 = load i16, i16* %tx_loadsz8, align 2, !dbg !6569
  %conv9 = zext i16 %11 to i32, !dbg !6568
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6570
  %tx_loadsz10 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 6, !dbg !6571
  store i32 %conv9, i32* %tx_loadsz10, align 8, !dbg !6572
  br label %if.end11, !dbg !6570

if.end11:                                         ; preds = %if.then4, %if.end
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6573
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 3, !dbg !6575
  %14 = load i32, i32* %capabilities, align 8, !dbg !6575
  %tobool12 = icmp ne i32 %14, 0, !dbg !6573
  br i1 %tobool12, label %if.end19, label %if.then13, !dbg !6576

if.then13:                                        ; preds = %if.end11
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6577
  %type14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 38, !dbg !6578
  %16 = load i32, i32* %type14, align 4, !dbg !6578
  %idxprom15 = zext i32 %16 to i64, !dbg !6579
  %arrayidx16 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom15, !dbg !6579
  %flags17 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx16, i32 0, i32 5, !dbg !6580
  %17 = load i32, i32* %flags17, align 4, !dbg !6580
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6581
  %capabilities18 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %18, i32 0, i32 3, !dbg !6582
  store i32 %17, i32* %capabilities18, align 8, !dbg !6583
  br label %if.end19, !dbg !6581

if.end19:                                         ; preds = %if.then13, %if.end11
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6584
  %mcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %19, i32 0, i32 11, !dbg !6585
  store i8 0, i8* %mcr, align 8, !dbg !6586
  %20 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6587
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 26, !dbg !6589
  %21 = load i8, i8* %iotype, align 2, !dbg !6589
  %conv20 = zext i8 %21 to i32, !dbg !6587
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6590
  %cur_iotype = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %22, i32 0, i32 14, !dbg !6591
  %23 = load i8, i8* %cur_iotype, align 1, !dbg !6591
  %conv21 = zext i8 %23 to i32, !dbg !6590
  %cmp = icmp ne i32 %conv20, %conv21, !dbg !6592
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !6593

if.then23:                                        ; preds = %if.end19
  %24 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6594
  call void @set_io_from_upio(%struct.uart_port* %24) #10, !dbg !6595
  br label %if.end24, !dbg !6595

if.end24:                                         ; preds = %if.then23, %if.end19
  %25 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6596
  call void @serial8250_rpm_get(%struct.uart_8250_port* %25) #10, !dbg !6597
  %26 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6598
  %type25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %26, i32 0, i32 38, !dbg !6600
  %27 = load i32, i32* %type25, align 4, !dbg !6600
  %cmp26 = icmp eq i32 %27, 10, !dbg !6601
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6602

if.then28:                                        ; preds = %if.end24
  %28 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6603
  %acr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %28, i32 0, i32 7, !dbg !6605
  store i8 0, i8* %acr, align 4, !dbg !6606
  %29 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6607
  call void @serial_port_out(%struct.uart_port* %29, i32 3, i32 191) #10, !dbg !6608
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6609
  call void @serial_port_out(%struct.uart_port* %30, i32 2, i32 16) #10, !dbg !6610
  %31 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6611
  call void @serial_port_out(%struct.uart_port* %31, i32 1, i32 0) #10, !dbg !6612
  %32 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6613
  call void @serial_port_out(%struct.uart_port* %32, i32 3, i32 0) #10, !dbg !6614
  %33 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6615
  call void @serial_icr_write(%struct.uart_8250_port* %33, i32 12, i32 0) #10, !dbg !6616
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6617
  call void @serial_port_out(%struct.uart_port* %34, i32 3, i32 191) #10, !dbg !6618
  %35 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6619
  call void @serial_port_out(%struct.uart_port* %35, i32 2, i32 16) #10, !dbg !6620
  %36 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6621
  call void @serial_port_out(%struct.uart_port* %36, i32 3, i32 0) #10, !dbg !6622
  br label %if.end29, !dbg !6623

if.end29:                                         ; preds = %if.then28, %if.end24
  %37 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6624
  %type30 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 38, !dbg !6626
  %38 = load i32, i32* %type30, align 4, !dbg !6626
  %cmp31 = icmp eq i32 %38, 95, !dbg !6627
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !6628

if.then33:                                        ; preds = %if.end29
  %39 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6629
  call void @serial_port_out(%struct.uart_port* %39, i32 1, i32 0) #10, !dbg !6631
  %40 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6632
  call void @serial_port_out(%struct.uart_port* %40, i32 12, i32 0) #10, !dbg !6633
  call void @llvm.dbg.declare(metadata i64* %__ms, metadata !6634, metadata !DIExpression()), !dbg !6636
  store i64 10, i64* %__ms, align 8, !dbg !6636
  br label %while.cond, !dbg !6636

while.cond:                                       ; preds = %while.body, %if.then33
  %41 = load i64, i64* %__ms, align 8, !dbg !6636
  %dec = add i64 %41, -1, !dbg !6636
  store i64 %dec, i64* %__ms, align 8, !dbg !6636
  %tobool34 = icmp ne i64 %41, 0, !dbg !6636
  br i1 %tobool34, label %while.body, label %while.end, !dbg !6636

while.body:                                       ; preds = %while.cond
  call void @__const_udelay(i64 4295000) #10, !dbg !6637
  br label %while.cond, !dbg !6636, !llvm.loop !6642

while.end:                                        ; preds = %while.cond
  %42 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6643
  call void @serial_port_out(%struct.uart_port* %42, i32 12, i32 24577) #10, !dbg !6644
  br label %if.end35, !dbg !6645

if.end35:                                         ; preds = %while.end, %if.end29
  %43 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6646
  %type36 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %43, i32 0, i32 38, !dbg !6648
  %44 = load i32, i32* %type36, align 4, !dbg !6648
  %cmp37 = icmp eq i32 %44, 40, !dbg !6649
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !6650

if.then39:                                        ; preds = %if.end35
  %45 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6651
  call void @serial_port_out(%struct.uart_port* %45, i32 7, i32 160) #10, !dbg !6653
  br label %if.end40, !dbg !6654

if.end40:                                         ; preds = %if.then39, %if.end35
  %46 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6655
  call void @serial8250_clear_fifos(%struct.uart_8250_port* %46) #10, !dbg !6656
  %47 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6657
  %call41 = call i32 @serial_port_in(%struct.uart_port* %47, i32 5) #10, !dbg !6658
  %48 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6659
  %call42 = call i32 @serial_port_in(%struct.uart_port* %48, i32 0) #10, !dbg !6660
  %49 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6661
  %call43 = call i32 @serial_port_in(%struct.uart_port* %49, i32 2) #10, !dbg !6662
  %50 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6663
  %call44 = call i32 @serial_port_in(%struct.uart_port* %50, i32 6) #10, !dbg !6664
  %51 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6665
  %flags45 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %51, i32 0, i32 33, !dbg !6667
  %52 = load i32, i32* %flags45, align 8, !dbg !6667
  %and = and i32 %52, 16384, !dbg !6668
  %tobool46 = icmp ne i32 %and, 0, !dbg !6668
  br i1 %tobool46, label %if.end55, label %land.lhs.true, !dbg !6669

land.lhs.true:                                    ; preds = %if.end40
  %53 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6670
  %call47 = call i32 @serial_port_in(%struct.uart_port* %53, i32 5) #10, !dbg !6671
  %cmp48 = icmp eq i32 %call47, 255, !dbg !6672
  br i1 %cmp48, label %if.then50, label %if.end55, !dbg !6673

if.then50:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !6674

do.body:                                          ; preds = %if.then50
  %call51 = call i32 @___ratelimit(%struct.ratelimit_state* @serial8250_do_startup._rs, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.serial8250_do_startup, i64 0, i64 0)) #10, !dbg !6676
  %tobool52 = icmp ne i32 %call51, 0, !dbg !6676
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !6679

if.then53:                                        ; preds = %do.body
  %54 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6676
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %54, i32 0, i32 45, !dbg !6676
  %55 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6676
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %55, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)) #13, !dbg !6676
  br label %if.end54, !dbg !6676

if.end54:                                         ; preds = %if.then53, %do.body
  br label %do.end, !dbg !6679

do.end:                                           ; preds = %if.end54
  store i32 -19, i32* %retval1, align 4, !dbg !6680
  br label %out, !dbg !6681

if.end55:                                         ; preds = %land.lhs.true, %if.end40
  %56 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6682
  %type56 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %56, i32 0, i32 38, !dbg !6684
  %57 = load i32, i32* %type56, align 4, !dbg !6684
  %cmp57 = icmp eq i32 %57, 12, !dbg !6685
  br i1 %cmp57, label %if.then59, label %if.end67, !dbg !6686

if.then59:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i8* %fctr, metadata !6687, metadata !DIExpression()), !dbg !6689
  %58 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6690
  call void @serial_out(%struct.uart_8250_port* %58, i32 3, i32 191) #10, !dbg !6691
  %59 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6692
  %call60 = call i32 @serial_in(%struct.uart_8250_port* %59, i32 1) #10, !dbg !6693
  %and61 = and i32 %call60, -129, !dbg !6694
  %conv62 = trunc i32 %and61 to i8, !dbg !6693
  store i8 %conv62, i8* %fctr, align 1, !dbg !6695
  %60 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6696
  %61 = load i8, i8* %fctr, align 1, !dbg !6697
  %conv63 = zext i8 %61 to i32, !dbg !6697
  %or = or i32 %conv63, 48, !dbg !6698
  call void @serial_port_out(%struct.uart_port* %60, i32 1, i32 %or) #10, !dbg !6699
  %62 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6700
  call void @serial_port_out(%struct.uart_port* %62, i32 0, i32 96) #10, !dbg !6701
  %63 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6702
  %64 = load i8, i8* %fctr, align 1, !dbg !6703
  %conv64 = zext i8 %64 to i32, !dbg !6703
  %or65 = or i32 %conv64, 48, !dbg !6704
  %or66 = or i32 %or65, 128, !dbg !6705
  call void @serial_port_out(%struct.uart_port* %63, i32 1, i32 %or66) #10, !dbg !6706
  %65 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6707
  call void @serial_port_out(%struct.uart_port* %65, i32 0, i32 96) #10, !dbg !6708
  %66 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6709
  call void @serial_port_out(%struct.uart_port* %66, i32 3, i32 0) #10, !dbg !6710
  br label %if.end67, !dbg !6711

if.end67:                                         ; preds = %if.then59, %if.end55
  %67 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6712
  %type68 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %67, i32 0, i32 38, !dbg !6714
  %68 = load i32, i32* %type68, align 4, !dbg !6714
  %cmp69 = icmp eq i32 %68, 26, !dbg !6715
  br i1 %cmp69, label %land.lhs.true78, label %lor.lhs.false, !dbg !6716

lor.lhs.false:                                    ; preds = %if.end67
  %69 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6717
  %type71 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %69, i32 0, i32 38, !dbg !6718
  %70 = load i32, i32* %type71, align 4, !dbg !6718
  %cmp72 = icmp eq i32 %70, 27, !dbg !6719
  br i1 %cmp72, label %land.lhs.true78, label %lor.lhs.false74, !dbg !6720

lor.lhs.false74:                                  ; preds = %lor.lhs.false
  %71 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6721
  %type75 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %71, i32 0, i32 38, !dbg !6722
  %72 = load i32, i32* %type75, align 4, !dbg !6722
  %cmp76 = icmp eq i32 %72, 28, !dbg !6723
  br i1 %cmp76, label %land.lhs.true78, label %if.end96, !dbg !6724

land.lhs.true78:                                  ; preds = %lor.lhs.false74, %lor.lhs.false, %if.end67
  %73 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6725
  %fifosize79 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %73, i32 0, i32 23, !dbg !6726
  %74 = load i32, i32* %fifosize79, align 4, !dbg !6726
  %cmp80 = icmp ugt i32 %74, 1, !dbg !6727
  br i1 %cmp80, label %if.then82, label %if.end96, !dbg !6728

if.then82:                                        ; preds = %land.lhs.true78
  %75 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6729
  %tx_loadsz83 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %75, i32 0, i32 6, !dbg !6732
  %76 = load i32, i32* %tx_loadsz83, align 8, !dbg !6732
  %cmp84 = icmp ult i32 %76, 2, !dbg !6733
  br i1 %cmp84, label %if.then91, label %lor.lhs.false86, !dbg !6734

lor.lhs.false86:                                  ; preds = %if.then82
  %77 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6735
  %tx_loadsz87 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %77, i32 0, i32 6, !dbg !6736
  %78 = load i32, i32* %tx_loadsz87, align 8, !dbg !6736
  %79 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6737
  %fifosize88 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %79, i32 0, i32 23, !dbg !6738
  %80 = load i32, i32* %fifosize88, align 4, !dbg !6738
  %cmp89 = icmp ugt i32 %78, %80, !dbg !6739
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !6740

if.then91:                                        ; preds = %lor.lhs.false86, %if.then82
  %81 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6741
  %dev92 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %81, i32 0, i32 45, !dbg !6741
  %82 = load %struct.device*, %struct.device** %dev92, align 8, !dbg !6741
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %82, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #13, !dbg !6741
  br label %if.end95, !dbg !6743

if.else:                                          ; preds = %lor.lhs.false86
  %83 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6744
  call void @serial_port_out(%struct.uart_port* %83, i32 64, i32 1) #10, !dbg !6746
  %84 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6747
  %85 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6748
  %fifosize93 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %85, i32 0, i32 23, !dbg !6749
  %86 = load i32, i32* %fifosize93, align 4, !dbg !6749
  %87 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6750
  %tx_loadsz94 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %87, i32 0, i32 6, !dbg !6751
  %88 = load i32, i32* %tx_loadsz94, align 8, !dbg !6751
  %sub = sub i32 %86, %88, !dbg !6752
  call void @serial_port_out(%struct.uart_port* %84, i32 65, i32 %sub) #10, !dbg !6753
  %89 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6754
  %handle_irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %89, i32 0, i32 15, !dbg !6755
  store i32 (%struct.uart_port*)* @serial8250_tx_threshold_handle_irq, i32 (%struct.uart_port*)** %handle_irq, align 8, !dbg !6756
  br label %if.end95

if.end95:                                         ; preds = %if.else, %if.then91
  br label %if.end96, !dbg !6757

if.end96:                                         ; preds = %if.end95, %land.lhs.true78, %lor.lhs.false74
  %90 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6758
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %90, i32 0, i32 20, !dbg !6760
  %91 = load i32, i32* %irq, align 8, !dbg !6760
  %tobool97 = icmp ne i32 %91, 0, !dbg !6758
  br i1 %tobool97, label %land.lhs.true98, label %if.end106, !dbg !6761

land.lhs.true98:                                  ; preds = %if.end96
  %92 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6762
  %port99 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %92, i32 0, i32 0, !dbg !6763
  %flags100 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port99, i32 0, i32 33, !dbg !6764
  %93 = load i32, i32* %flags100, align 8, !dbg !6764
  %and101 = and i32 %93, 16777216, !dbg !6765
  %tobool102 = icmp ne i32 %and101, 0, !dbg !6765
  br i1 %tobool102, label %if.then103, label %if.end106, !dbg !6766

if.then103:                                       ; preds = %land.lhs.true98
  %94 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6767
  %port104 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %94, i32 0, i32 0, !dbg !6768
  %irqflags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port104, i32 0, i32 21, !dbg !6769
  %95 = load i64, i64* %irqflags, align 8, !dbg !6770
  %or105 = or i64 %95, 128, !dbg !6770
  store i64 %or105, i64* %irqflags, align 8, !dbg !6770
  br label %if.end106, !dbg !6767

if.end106:                                        ; preds = %if.then103, %land.lhs.true98, %if.end96
  %96 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6771
  %irq107 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %96, i32 0, i32 20, !dbg !6772
  %97 = load i32, i32* %irq107, align 8, !dbg !6772
  %tobool108 = icmp ne i32 %97, 0, !dbg !6771
  br i1 %tobool108, label %land.lhs.true109, label %if.end172, !dbg !6773

land.lhs.true109:                                 ; preds = %if.end106
  %98 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6774
  %port110 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %98, i32 0, i32 0, !dbg !6775
  %flags111 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port110, i32 0, i32 33, !dbg !6776
  %99 = load i32, i32* %flags111, align 8, !dbg !6776
  %and112 = and i32 %99, 524288, !dbg !6777
  %tobool113 = icmp ne i32 %and112, 0, !dbg !6777
  br i1 %tobool113, label %if.end172, label %if.then114, !dbg !6778

if.then114:                                       ; preds = %land.lhs.true109
  call void @llvm.dbg.declare(metadata i8* %iir1, metadata !6779, metadata !DIExpression()), !dbg !6780
  %100 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6781
  %irqflags115 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %100, i32 0, i32 21, !dbg !6783
  %101 = load i64, i64* %irqflags115, align 8, !dbg !6783
  %and116 = and i64 %101, 128, !dbg !6784
  %tobool117 = icmp ne i64 %and116, 0, !dbg !6784
  br i1 %tobool117, label %if.then118, label %if.end120, !dbg !6785

if.then118:                                       ; preds = %if.then114
  %102 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6786
  %irq119 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %102, i32 0, i32 20, !dbg !6787
  %103 = load i32, i32* %irq119, align 8, !dbg !6787
  call void @disable_irq_nosync(i32 %103) #10, !dbg !6788
  br label %if.end120, !dbg !6788

if.end120:                                        ; preds = %if.then118, %if.then114
  br label %do.body121, !dbg !6789

do.body121:                                       ; preds = %if.end120
  br label %do.body122, !dbg !6790

do.body122:                                       ; preds = %do.body121
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6791, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6794, metadata !DIExpression()), !dbg !6793
  %cmp123 = icmp eq i64* %__dummy, %__dummy2, !dbg !6793
  %conv124 = zext i1 %cmp123 to i32, !dbg !6793
  store i32 1, i32* %tmp, align 4, !dbg !6793
  %104 = load i32, i32* %tmp, align 4, !dbg !6793
  br label %do.body125, !dbg !6795

do.body125:                                       ; preds = %do.body122
  br label %do.body126, !dbg !6796

do.body126:                                       ; preds = %do.body125
  br label %do.body127, !dbg !6797

do.body127:                                       ; preds = %do.body126
  call void @llvm.dbg.declare(metadata i64* %__dummy128, metadata !6799, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.declare(metadata i64* %__dummy2129, metadata !6803, metadata !DIExpression()), !dbg !6802
  %cmp130 = icmp eq i64* %__dummy128, %__dummy2129, !dbg !6802
  %conv131 = zext i1 %cmp130 to i32, !dbg !6802
  store i32 1, i32* %tmp132, align 4, !dbg !6802
  %105 = load i32, i32* %tmp132, align 4, !dbg !6802
  %call133 = call i64 @arch_local_irq_save() #10, !dbg !6804
  store i64 %call133, i64* %flags, align 8, !dbg !6804
  br label %do.end134, !dbg !6804

do.end134:                                        ; preds = %do.body127
  br label %do.end135, !dbg !6797

do.end135:                                        ; preds = %do.end134
  br label %do.body136, !dbg !6796

do.body136:                                       ; preds = %do.end135
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6805, !srcloc !6806
  br label %do.body137, !dbg !6805

do.body137:                                       ; preds = %do.body136
  %106 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6807
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %106, i32 0, i32 0, !dbg !6807
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6808
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !6809
  %rlock.i = bitcast %union.anon* %108 to %struct.raw_spinlock*, !dbg !6809
  br label %do.end139, !dbg !6807

do.end139:                                        ; preds = %do.body137
  br label %do.end140, !dbg !6805

do.end140:                                        ; preds = %do.end139
  br label %do.end141, !dbg !6796

do.end141:                                        ; preds = %do.end140
  br label %do.end142, !dbg !6795

do.end142:                                        ; preds = %do.end141
  br label %do.end143, !dbg !6790

do.end143:                                        ; preds = %do.end142
  %109 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6810
  call void @wait_for_xmitr(%struct.uart_8250_port* %109, i32 32) #10, !dbg !6811
  %110 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6812
  call void @serial_port_out_sync(%struct.uart_port* %110, i32 1, i32 2) #10, !dbg !6813
  call void @__const_udelay(i64 4295) #10, !dbg !6814
  %111 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6819
  %call144 = call i32 @serial_port_in(%struct.uart_port* %111, i32 2) #10, !dbg !6820
  %conv145 = trunc i32 %call144 to i8, !dbg !6820
  store i8 %conv145, i8* %iir1, align 1, !dbg !6821
  %112 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6822
  call void @serial_port_out(%struct.uart_port* %112, i32 1, i32 0) #10, !dbg !6823
  %113 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6824
  call void @serial_port_out_sync(%struct.uart_port* %113, i32 1, i32 2) #10, !dbg !6825
  call void @__const_udelay(i64 4295) #10, !dbg !6826
  %114 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6831
  %call146 = call i32 @serial_port_in(%struct.uart_port* %114, i32 2) #10, !dbg !6832
  %conv147 = trunc i32 %call146 to i8, !dbg !6832
  store i8 %conv147, i8* %iir, align 1, !dbg !6833
  %115 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6834
  call void @serial_port_out(%struct.uart_port* %115, i32 1, i32 0) #10, !dbg !6835
  %116 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6836
  %lock148 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %116, i32 0, i32 0, !dbg !6837
  %117 = load i64, i64* %flags, align 8, !dbg !6838
  store %struct.spinlock* %lock148, %struct.spinlock** %lock.addr.i297, align 8
  store i64 %117, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !6839
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !6839
  store i32 1, i32* %tmp.i, align 4, !dbg !6839
  %118 = load i32, i32* %tmp.i, align 4, !dbg !6839
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !6840
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !6840
  store i32 1, i32* %tmp8.i, align 4, !dbg !6840
  %119 = load i32, i32* %tmp8.i, align 4, !dbg !6840
  %120 = load i64, i64* %flags.addr.i, align 8, !dbg !6841
  call void @arch_local_irq_restore(i64 %120) #12, !dbg !6841
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6842, !srcloc !6365
  %121 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i297, align 8, !dbg !6843
  %122 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %121, i32 0, i32 0, !dbg !6843
  %rlock.i298 = bitcast %union.anon* %122 to %struct.raw_spinlock*, !dbg !6843
  %123 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6844
  %irqflags149 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %123, i32 0, i32 21, !dbg !6846
  %124 = load i64, i64* %irqflags149, align 8, !dbg !6846
  %and150 = and i64 %124, 128, !dbg !6847
  %tobool151 = icmp ne i64 %and150, 0, !dbg !6847
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !6848

if.then152:                                       ; preds = %do.end143
  %125 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6849
  %irq153 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %125, i32 0, i32 20, !dbg !6850
  %126 = load i32, i32* %irq153, align 8, !dbg !6850
  call void @enable_irq(i32 %126) #10, !dbg !6851
  br label %if.end154, !dbg !6851

if.end154:                                        ; preds = %if.then152, %do.end143
  %127 = load i8, i8* %iir1, align 1, !dbg !6852
  %conv155 = zext i8 %127 to i32, !dbg !6852
  %and156 = and i32 %conv155, 1, !dbg !6854
  %tobool157 = icmp ne i32 %and156, 0, !dbg !6854
  br i1 %tobool157, label %lor.lhs.false162, label %land.lhs.true158, !dbg !6855

land.lhs.true158:                                 ; preds = %if.end154
  %128 = load i8, i8* %iir, align 1, !dbg !6856
  %conv159 = zext i8 %128 to i32, !dbg !6856
  %and160 = and i32 %conv159, 1, !dbg !6857
  %tobool161 = icmp ne i32 %and160, 0, !dbg !6857
  br i1 %tobool161, label %if.then167, label %lor.lhs.false162, !dbg !6858

lor.lhs.false162:                                 ; preds = %land.lhs.true158, %if.end154
  %129 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6859
  %port163 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %129, i32 0, i32 0, !dbg !6860
  %flags164 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port163, i32 0, i32 33, !dbg !6861
  %130 = load i32, i32* %flags164, align 8, !dbg !6861
  %and165 = and i32 %130, 67108864, !dbg !6862
  %tobool166 = icmp ne i32 %and165, 0, !dbg !6862
  br i1 %tobool166, label %if.then167, label %if.end171, !dbg !6863

if.then167:                                       ; preds = %lor.lhs.false162, %land.lhs.true158
  %131 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6864
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %131, i32 0, i32 4, !dbg !6866
  %132 = load i16, i16* %bugs, align 4, !dbg !6867
  %conv168 = zext i16 %132 to i32, !dbg !6867
  %or169 = or i32 %conv168, 8, !dbg !6867
  %conv170 = trunc i32 %or169 to i16, !dbg !6867
  store i16 %conv170, i16* %bugs, align 4, !dbg !6867
  br label %if.end171, !dbg !6868

if.end171:                                        ; preds = %if.then167, %lor.lhs.false162
  br label %if.end172, !dbg !6869

if.end172:                                        ; preds = %if.end171, %land.lhs.true109, %if.end106
  %133 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6870
  %ops = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %133, i32 0, i32 22, !dbg !6871
  %134 = load %struct.uart_8250_ops*, %struct.uart_8250_ops** %ops, align 8, !dbg !6871
  %setup_irq = getelementptr inbounds %struct.uart_8250_ops, %struct.uart_8250_ops* %134, i32 0, i32 0, !dbg !6872
  %135 = load i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)** %setup_irq, align 8, !dbg !6872
  %136 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6873
  %call173 = call i32 %135(%struct.uart_8250_port* %136) #10, !dbg !6870
  store i32 %call173, i32* %retval1, align 4, !dbg !6874
  %137 = load i32, i32* %retval1, align 4, !dbg !6875
  %tobool174 = icmp ne i32 %137, 0, !dbg !6875
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !6877

if.then175:                                       ; preds = %if.end172
  br label %out, !dbg !6878

if.end176:                                        ; preds = %if.end172
  %138 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6879
  call void @serial_port_out(%struct.uart_port* %138, i32 3, i32 3) #10, !dbg !6880
  br label %do.body177, !dbg !6881

do.body177:                                       ; preds = %if.end176
  br label %do.body178, !dbg !6882

do.body178:                                       ; preds = %do.body177
  call void @llvm.dbg.declare(metadata i64* %__dummy179, metadata !6883, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__dummy2180, metadata !6886, metadata !DIExpression()), !dbg !6885
  %cmp181 = icmp eq i64* %__dummy179, %__dummy2180, !dbg !6885
  %conv182 = zext i1 %cmp181 to i32, !dbg !6885
  store i32 1, i32* %tmp183, align 4, !dbg !6885
  %139 = load i32, i32* %tmp183, align 4, !dbg !6885
  br label %do.body184, !dbg !6887

do.body184:                                       ; preds = %do.body178
  br label %do.body185, !dbg !6888

do.body185:                                       ; preds = %do.body184
  br label %do.body186, !dbg !6889

do.body186:                                       ; preds = %do.body185
  call void @llvm.dbg.declare(metadata i64* %__dummy187, metadata !6891, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata i64* %__dummy2188, metadata !6895, metadata !DIExpression()), !dbg !6894
  %cmp189 = icmp eq i64* %__dummy187, %__dummy2188, !dbg !6894
  %conv190 = zext i1 %cmp189 to i32, !dbg !6894
  store i32 1, i32* %tmp191, align 4, !dbg !6894
  %140 = load i32, i32* %tmp191, align 4, !dbg !6894
  %call192 = call i64 @arch_local_irq_save() #10, !dbg !6896
  store i64 %call192, i64* %flags, align 8, !dbg !6896
  br label %do.end193, !dbg !6896

do.end193:                                        ; preds = %do.body186
  br label %do.end194, !dbg !6889

do.end194:                                        ; preds = %do.end193
  br label %do.body195, !dbg !6888

do.body195:                                       ; preds = %do.end194
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6897, !srcloc !6898
  br label %do.body196, !dbg !6897

do.body196:                                       ; preds = %do.body195
  %141 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6899
  %lock197 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %141, i32 0, i32 0, !dbg !6899
  store %struct.spinlock* %lock197, %struct.spinlock** %lock.addr.i299, align 8
  %142 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i299, align 8, !dbg !6900
  %143 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %142, i32 0, i32 0, !dbg !6901
  %rlock.i300 = bitcast %union.anon* %143 to %struct.raw_spinlock*, !dbg !6901
  br label %do.end199, !dbg !6899

do.end199:                                        ; preds = %do.body196
  br label %do.end200, !dbg !6897

do.end200:                                        ; preds = %do.end199
  br label %do.end201, !dbg !6888

do.end201:                                        ; preds = %do.end200
  br label %do.end202, !dbg !6887

do.end202:                                        ; preds = %do.end201
  br label %do.end203, !dbg !6882

do.end203:                                        ; preds = %do.end202
  %144 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6902
  %port204 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %144, i32 0, i32 0, !dbg !6904
  %flags205 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port204, i32 0, i32 33, !dbg !6905
  %145 = load i32, i32* %flags205, align 8, !dbg !6905
  %and206 = and i32 %145, 2, !dbg !6906
  %tobool207 = icmp ne i32 %and206, 0, !dbg !6906
  br i1 %tobool207, label %if.then208, label %if.else216, !dbg !6907

if.then208:                                       ; preds = %do.end203
  %146 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6908
  %port209 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %146, i32 0, i32 0, !dbg !6911
  %irq210 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port209, i32 0, i32 20, !dbg !6912
  %147 = load i32, i32* %irq210, align 8, !dbg !6912
  %tobool211 = icmp ne i32 %147, 0, !dbg !6908
  br i1 %tobool211, label %if.end215, label %if.then212, !dbg !6913

if.then212:                                       ; preds = %if.then208
  %148 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6914
  %port213 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %148, i32 0, i32 0, !dbg !6915
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port213, i32 0, i32 36, !dbg !6916
  %149 = load i32, i32* %mctrl, align 4, !dbg !6917
  %or214 = or i32 %149, 8192, !dbg !6917
  store i32 %or214, i32* %mctrl, align 4, !dbg !6917
  br label %if.end215, !dbg !6914

if.end215:                                        ; preds = %if.then212, %if.then208
  br label %if.end224, !dbg !6918

if.else216:                                       ; preds = %do.end203
  %150 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6919
  %irq217 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %150, i32 0, i32 20, !dbg !6921
  %151 = load i32, i32* %irq217, align 8, !dbg !6921
  %tobool218 = icmp ne i32 %151, 0, !dbg !6919
  br i1 %tobool218, label %if.then219, label %if.end223, !dbg !6922

if.then219:                                       ; preds = %if.else216
  %152 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6923
  %port220 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %152, i32 0, i32 0, !dbg !6924
  %mctrl221 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port220, i32 0, i32 36, !dbg !6925
  %153 = load i32, i32* %mctrl221, align 4, !dbg !6926
  %or222 = or i32 %153, 16384, !dbg !6926
  store i32 %or222, i32* %mctrl221, align 4, !dbg !6926
  br label %if.end223, !dbg !6923

if.end223:                                        ; preds = %if.then219, %if.else216
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %if.end215
  %154 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6927
  %155 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6928
  %mctrl225 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %155, i32 0, i32 36, !dbg !6929
  %156 = load i32, i32* %mctrl225, align 4, !dbg !6929
  call void @serial8250_set_mctrl(%struct.uart_port* %154, i32 %156) #10, !dbg !6930
  %157 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6931
  %port226 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %157, i32 0, i32 0, !dbg !6933
  %quirks = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port226, i32 0, i32 27, !dbg !6934
  %158 = load i8, i8* %quirks, align 1, !dbg !6934
  %conv227 = zext i8 %158 to i64, !dbg !6931
  %and228 = and i64 %conv227, 1, !dbg !6935
  %tobool229 = icmp ne i64 %and228, 0, !dbg !6935
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !6936

if.then230:                                       ; preds = %if.end224
  br label %dont_test_tx_en, !dbg !6937

if.end231:                                        ; preds = %if.end224
  %159 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6938
  call void @serial_port_out(%struct.uart_port* %159, i32 1, i32 2) #10, !dbg !6939
  %160 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6940
  %call232 = call i32 @serial_port_in(%struct.uart_port* %160, i32 5) #10, !dbg !6941
  %conv233 = trunc i32 %call232 to i8, !dbg !6941
  store i8 %conv233, i8* %lsr, align 1, !dbg !6942
  %161 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6943
  %call234 = call i32 @serial_port_in(%struct.uart_port* %161, i32 2) #10, !dbg !6944
  %conv235 = trunc i32 %call234 to i8, !dbg !6944
  store i8 %conv235, i8* %iir, align 1, !dbg !6945
  %162 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6946
  call void @serial_port_out(%struct.uart_port* %162, i32 1, i32 0) #10, !dbg !6947
  %163 = load i8, i8* %lsr, align 1, !dbg !6948
  %conv236 = zext i8 %163 to i32, !dbg !6948
  %and237 = and i32 %conv236, 64, !dbg !6950
  %tobool238 = icmp ne i32 %and237, 0, !dbg !6950
  br i1 %tobool238, label %land.lhs.true239, label %if.else254, !dbg !6951

land.lhs.true239:                                 ; preds = %if.end231
  %164 = load i8, i8* %iir, align 1, !dbg !6952
  %conv240 = zext i8 %164 to i32, !dbg !6952
  %and241 = and i32 %conv240, 1, !dbg !6953
  %tobool242 = icmp ne i32 %and241, 0, !dbg !6953
  br i1 %tobool242, label %if.then243, label %if.else254, !dbg !6954

if.then243:                                       ; preds = %land.lhs.true239
  %165 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6955
  %bugs244 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %165, i32 0, i32 4, !dbg !6958
  %166 = load i16, i16* %bugs244, align 4, !dbg !6958
  %conv245 = zext i16 %166 to i32, !dbg !6955
  %and246 = and i32 %conv245, 2, !dbg !6959
  %tobool247 = icmp ne i32 %and246, 0, !dbg !6959
  br i1 %tobool247, label %if.end253, label %if.then248, !dbg !6960

if.then248:                                       ; preds = %if.then243
  %167 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6961
  %bugs249 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %167, i32 0, i32 4, !dbg !6963
  %168 = load i16, i16* %bugs249, align 4, !dbg !6964
  %conv250 = zext i16 %168 to i32, !dbg !6964
  %or251 = or i32 %conv250, 2, !dbg !6964
  %conv252 = trunc i32 %or251 to i16, !dbg !6964
  store i16 %conv252, i16* %bugs249, align 4, !dbg !6964
  br label %if.end253, !dbg !6965

if.end253:                                        ; preds = %if.then248, %if.then243
  br label %if.end259, !dbg !6966

if.else254:                                       ; preds = %land.lhs.true239, %if.end231
  %169 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6967
  %bugs255 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %169, i32 0, i32 4, !dbg !6969
  %170 = load i16, i16* %bugs255, align 4, !dbg !6970
  %conv256 = zext i16 %170 to i32, !dbg !6970
  %and257 = and i32 %conv256, -3, !dbg !6970
  %conv258 = trunc i32 %and257 to i16, !dbg !6970
  store i16 %conv258, i16* %bugs255, align 4, !dbg !6970
  br label %if.end259

if.end259:                                        ; preds = %if.else254, %if.end253
  br label %dont_test_tx_en, !dbg !6971

dont_test_tx_en:                                  ; preds = %if.end259, %if.then230
  call void @llvm.dbg.label(metadata !6972), !dbg !6973
  %171 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6974
  %lock260 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %171, i32 0, i32 0, !dbg !6975
  %172 = load i64, i64* %flags, align 8, !dbg !6976
  store %struct.spinlock* %lock260, %struct.spinlock** %lock.addr.i301, align 8
  store i64 %172, i64* %flags.addr.i302, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !6977
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !6977
  store i32 1, i32* %tmp.i303, align 4, !dbg !6977
  %173 = load i32, i32* %tmp.i303, align 4, !dbg !6977
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !6978
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !6978
  store i32 1, i32* %tmp8.i304, align 4, !dbg !6978
  %174 = load i32, i32* %tmp8.i304, align 4, !dbg !6978
  %175 = load i64, i64* %flags.addr.i302, align 8, !dbg !6979
  call void @arch_local_irq_restore(i64 %175) #12, !dbg !6979
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6980, !srcloc !6365
  %176 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i301, align 8, !dbg !6981
  %177 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %176, i32 0, i32 0, !dbg !6981
  %rlock.i305 = bitcast %union.anon* %177 to %struct.raw_spinlock*, !dbg !6981
  %178 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6982
  %call261 = call i32 @serial_port_in(%struct.uart_port* %178, i32 5) #10, !dbg !6983
  %179 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6984
  %call262 = call i32 @serial_port_in(%struct.uart_port* %179, i32 0) #10, !dbg !6985
  %180 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6986
  %call263 = call i32 @serial_port_in(%struct.uart_port* %180, i32 2) #10, !dbg !6987
  %181 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !6988
  %call264 = call i32 @serial_port_in(%struct.uart_port* %181, i32 6) #10, !dbg !6989
  %182 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6990
  %lsr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %182, i32 0, i32 19, !dbg !6991
  store i8 0, i8* %lsr_saved_flags, align 8, !dbg !6992
  %183 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6993
  %msr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %183, i32 0, i32 20, !dbg !6994
  store i8 0, i8* %msr_saved_flags, align 1, !dbg !6995
  %184 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !6996
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %184, i32 0, i32 21, !dbg !6998
  %185 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !6998
  %tobool265 = icmp ne %struct.uart_8250_dma* %185, null, !dbg !6996
  br i1 %tobool265, label %if.then266, label %if.end287, !dbg !6999

if.then266:                                       ; preds = %dont_test_tx_en
  call void @llvm.dbg.declare(metadata i8** %msg, metadata !7000, metadata !DIExpression()), !dbg !7002
  store i8* null, i8** %msg, align 8, !dbg !7002
  %186 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7003
  store i32 0, i32* %tmp267, align 4, !dbg !7003
  %187 = load i32, i32* %tmp267, align 4, !dbg !7003
  %tobool268 = icmp ne i32 %187, 0, !dbg !7006
  br i1 %tobool268, label %if.then269, label %if.else270, !dbg !7007

if.then269:                                       ; preds = %if.then266
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8** %msg, align 8, !dbg !7008
  br label %if.end275, !dbg !7009

if.else270:                                       ; preds = %if.then266
  %188 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7010
  %call271 = call i32 @serial8250_request_dma(%struct.uart_8250_port* %188) #10, !dbg !7012
  %tobool272 = icmp ne i32 %call271, 0, !dbg !7012
  br i1 %tobool272, label %if.then273, label %if.end274, !dbg !7013

if.then273:                                       ; preds = %if.else270
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8** %msg, align 8, !dbg !7014
  br label %if.end274, !dbg !7015

if.end274:                                        ; preds = %if.then273, %if.else270
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %if.then269
  %189 = load i8*, i8** %msg, align 8, !dbg !7016
  %tobool276 = icmp ne i8* %189, null, !dbg !7016
  br i1 %tobool276, label %if.then277, label %if.end286, !dbg !7018

if.then277:                                       ; preds = %if.end275
  br label %do.body278, !dbg !7019

do.body278:                                       ; preds = %if.then277
  %call279 = call i32 @___ratelimit(%struct.ratelimit_state* @serial8250_do_startup._rs.4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.serial8250_do_startup, i64 0, i64 0)) #10, !dbg !7021
  %tobool280 = icmp ne i32 %call279, 0, !dbg !7021
  br i1 %tobool280, label %if.then281, label %if.end283, !dbg !7024

if.then281:                                       ; preds = %do.body278
  %190 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7021
  %dev282 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %190, i32 0, i32 45, !dbg !7021
  %191 = load %struct.device*, %struct.device** %dev282, align 8, !dbg !7021
  %192 = load i8*, i8** %msg, align 8, !dbg !7021
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %192) #13, !dbg !7021
  br label %if.end283, !dbg !7021

if.end283:                                        ; preds = %if.then281, %do.body278
  br label %do.end284, !dbg !7024

do.end284:                                        ; preds = %if.end283
  %193 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7025
  %dma285 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %193, i32 0, i32 21, !dbg !7026
  store %struct.uart_8250_dma* null, %struct.uart_8250_dma** %dma285, align 8, !dbg !7027
  br label %if.end286, !dbg !7028

if.end286:                                        ; preds = %do.end284, %if.end275
  br label %if.end287, !dbg !7029

if.end287:                                        ; preds = %if.end286, %dont_test_tx_en
  %194 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7030
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %194, i32 0, i32 9, !dbg !7031
  store i8 5, i8* %ier, align 2, !dbg !7032
  %195 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7033
  %flags288 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %195, i32 0, i32 33, !dbg !7035
  %196 = load i32, i32* %flags288, align 8, !dbg !7035
  %and289 = and i32 %196, 2, !dbg !7036
  %tobool290 = icmp ne i32 %and289, 0, !dbg !7036
  br i1 %tobool290, label %if.then291, label %if.end296, !dbg !7037

if.then291:                                       ; preds = %if.end287
  call void @llvm.dbg.declare(metadata i32* %icp, metadata !7038, metadata !DIExpression()), !dbg !7040
  %197 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7041
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %197, i32 0, i32 1, !dbg !7042
  %198 = load i64, i64* %iobase, align 8, !dbg !7042
  %and292 = and i64 %198, 4064, !dbg !7043
  %or293 = or i64 %and292, 31, !dbg !7044
  %conv294 = trunc i64 %or293 to i32, !dbg !7045
  store i32 %conv294, i32* %icp, align 4, !dbg !7046
  %199 = load i32, i32* %icp, align 4, !dbg !7047
  call void @outb_p(i8 zeroext -128, i32 %199) #10, !dbg !7048
  %200 = load i32, i32* %icp, align 4, !dbg !7049
  %call295 = call zeroext i8 @inb_p(i32 %200) #10, !dbg !7050
  br label %if.end296, !dbg !7051

if.end296:                                        ; preds = %if.then291, %if.end287
  store i32 0, i32* %retval1, align 4, !dbg !7052
  br label %out, !dbg !7053

out:                                              ; preds = %if.end296, %if.then175, %do.end
  call void @llvm.dbg.label(metadata !7054), !dbg !7055
  %201 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7056
  call void @serial8250_rpm_put(%struct.uart_8250_port* %201) #10, !dbg !7057
  %202 = load i32, i32* %retval1, align 4, !dbg !7058
  ret i32 %202, !dbg !7059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_io_from_upio(%struct.uart_port* %p) #0 !dbg !7060 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7063, metadata !DIExpression()), !dbg !7064
  %0 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7065
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !7066
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !7064
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7067
  %dl_read = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 23, !dbg !7068
  store i32 (%struct.uart_8250_port*)* @default_serial_dl_read, i32 (%struct.uart_8250_port*)** %dl_read, align 8, !dbg !7069
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7070
  %dl_write = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 24, !dbg !7071
  store void (%struct.uart_8250_port*, i32)* @default_serial_dl_write, void (%struct.uart_8250_port*, i32)** %dl_write, align 8, !dbg !7072
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7073
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 26, !dbg !7074
  %4 = load i8, i8* %iotype, align 2, !dbg !7074
  %conv = zext i8 %4 to i32, !dbg !7073
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 7, label %sw.bb4
    i32 3, label %sw.bb7
    i32 6, label %sw.bb10
  ], !dbg !7075

sw.bb:                                            ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7076
  %serial_in = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 3, !dbg !7078
  store i32 (%struct.uart_port*, i32)* @hub6_serial_in, i32 (%struct.uart_port*, i32)** %serial_in, align 8, !dbg !7079
  %6 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7080
  %serial_out = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 4, !dbg !7081
  store void (%struct.uart_port*, i32, i32)* @hub6_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out, align 8, !dbg !7082
  br label %sw.epilog, !dbg !7083

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7084
  %serial_in2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 3, !dbg !7085
  store i32 (%struct.uart_port*, i32)* @mem_serial_in, i32 (%struct.uart_port*, i32)** %serial_in2, align 8, !dbg !7086
  %8 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7087
  %serial_out3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 4, !dbg !7088
  store void (%struct.uart_port*, i32, i32)* @mem_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out3, align 8, !dbg !7089
  br label %sw.epilog, !dbg !7090

sw.bb4:                                           ; preds = %entry
  %9 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7091
  %serial_in5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 3, !dbg !7092
  store i32 (%struct.uart_port*, i32)* @mem16_serial_in, i32 (%struct.uart_port*, i32)** %serial_in5, align 8, !dbg !7093
  %10 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7094
  %serial_out6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 4, !dbg !7095
  store void (%struct.uart_port*, i32, i32)* @mem16_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out6, align 8, !dbg !7096
  br label %sw.epilog, !dbg !7097

sw.bb7:                                           ; preds = %entry
  %11 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7098
  %serial_in8 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 3, !dbg !7099
  store i32 (%struct.uart_port*, i32)* @mem32_serial_in, i32 (%struct.uart_port*, i32)** %serial_in8, align 8, !dbg !7100
  %12 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7101
  %serial_out9 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 4, !dbg !7102
  store void (%struct.uart_port*, i32, i32)* @mem32_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out9, align 8, !dbg !7103
  br label %sw.epilog, !dbg !7104

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7105
  %serial_in11 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 3, !dbg !7106
  store i32 (%struct.uart_port*, i32)* @mem32be_serial_in, i32 (%struct.uart_port*, i32)** %serial_in11, align 8, !dbg !7107
  %14 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7108
  %serial_out12 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 4, !dbg !7109
  store void (%struct.uart_port*, i32, i32)* @mem32be_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out12, align 8, !dbg !7110
  br label %sw.epilog, !dbg !7111

sw.default:                                       ; preds = %entry
  %15 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7112
  %serial_in13 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 3, !dbg !7113
  store i32 (%struct.uart_port*, i32)* @io_serial_in, i32 (%struct.uart_port*, i32)** %serial_in13, align 8, !dbg !7114
  %16 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7115
  %serial_out14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 4, !dbg !7116
  store void (%struct.uart_port*, i32, i32)* @io_serial_out, void (%struct.uart_port*, i32, i32)** %serial_out14, align 8, !dbg !7117
  br label %sw.epilog, !dbg !7118

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  %17 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7119
  %iotype15 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 26, !dbg !7120
  %18 = load i8, i8* %iotype15, align 2, !dbg !7120
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7121
  %cur_iotype = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %19, i32 0, i32 14, !dbg !7122
  store i8 %18, i8* %cur_iotype, align 1, !dbg !7123
  %20 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7124
  %handle_irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 15, !dbg !7125
  store i32 (%struct.uart_port*)* @serial8250_default_handle_irq, i32 (%struct.uart_port*)** %handle_irq, align 8, !dbg !7126
  ret void, !dbg !7127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial_icr_write(%struct.uart_8250_port* %up, i32 %offset, i32 %value) #0 !dbg !7128 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !7129, metadata !DIExpression()), !dbg !7130
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7135
  %1 = load i32, i32* %offset.addr, align 4, !dbg !7136
  call void @serial_out(%struct.uart_8250_port* %0, i32 7, i32 %1) #10, !dbg !7137
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7138
  %3 = load i32, i32* %value.addr, align 4, !dbg !7139
  call void @serial_out(%struct.uart_8250_port* %2, i32 5, i32 %3) #10, !dbg !7140
  ret void, !dbg !7141
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_tx_threshold_handle_irq(%struct.uart_port* %port) #0 !dbg !7142 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !6335, metadata !DIExpression()), !dbg !7143
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !7147
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !7148
  %port.addr = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %iir = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata i32* %iir, metadata !7159, metadata !DIExpression()), !dbg !7160
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7161
  %call = call i32 @serial_port_in(%struct.uart_port* %0, i32 2) #10, !dbg !7162
  store i32 %call, i32* %iir, align 4, !dbg !7160
  %1 = load i32, i32* %iir, align 4, !dbg !7163
  %and = and i32 %1, 14, !dbg !7164
  %cmp = icmp eq i32 %and, 2, !dbg !7165
  br i1 %cmp, label %if.then, label %if.end, !dbg !7166

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7167, metadata !DIExpression()), !dbg !7168
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7169
  %call1 = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %2) #10, !dbg !7170
  store %struct.uart_8250_port* %call1, %struct.uart_8250_port** %up, align 8, !dbg !7168
  br label %do.body, !dbg !7171

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !7172

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7173, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7176, metadata !DIExpression()), !dbg !7175
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !7175
  %conv = zext i1 %cmp3 to i32, !dbg !7175
  store i32 1, i32* %tmp, align 4, !dbg !7175
  %3 = load i32, i32* %tmp, align 4, !dbg !7175
  br label %do.body4, !dbg !7177

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !7178

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !7179

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !7181, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !7185, metadata !DIExpression()), !dbg !7184
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !7184
  %conv10 = zext i1 %cmp9 to i32, !dbg !7184
  store i32 1, i32* %tmp11, align 4, !dbg !7184
  %4 = load i32, i32* %tmp11, align 4, !dbg !7184
  %call12 = call i64 @arch_local_irq_save() #10, !dbg !7186
  store i64 %call12, i64* %flags, align 8, !dbg !7186
  br label %do.end, !dbg !7186

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !7179

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !7178

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7187, !srcloc !7188
  br label %do.body15, !dbg !7187

do.body15:                                        ; preds = %do.body14
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7189
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 0, !dbg !7189
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7190
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !7191
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !7191
  br label %do.end17, !dbg !7189

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !7187

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7178

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !7177

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7172

do.end21:                                         ; preds = %do.end20
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7192
  call void @serial8250_tx_chars(%struct.uart_8250_port* %8) #10, !dbg !7193
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7194
  %lock22 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 0, !dbg !7195
  %10 = load i64, i64* %flags, align 8, !dbg !7196
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !7197
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !7197
  store i32 1, i32* %tmp.i, align 4, !dbg !7197
  %11 = load i32, i32* %tmp.i, align 4, !dbg !7197
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !7198
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !7198
  store i32 1, i32* %tmp8.i, align 4, !dbg !7198
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !7198
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !7199
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !7199
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7200, !srcloc !6365
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !7201
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7201
  %rlock.i26 = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !7201
  br label %if.end, !dbg !7202

if.end:                                           ; preds = %do.end21, %entry
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7203
  %call23 = call i32 @serial_port_in(%struct.uart_port* %16, i32 2) #10, !dbg !7204
  store i32 %call23, i32* %iir, align 4, !dbg !7205
  %17 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7206
  %18 = load i32, i32* %iir, align 4, !dbg !7207
  %call24 = call i32 @serial8250_handle_irq(%struct.uart_port* %17, i32 %18) #10, !dbg !7208
  ret i32 %call24, !dbg !7209
}

; Function Attrs: noredzone
declare dso_local void @disable_irq_nosync(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wait_for_xmitr(%struct.uart_8250_port* %up, i32 %bits) #0 !dbg !7210 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %bits.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %tmout = alloca i32, align 4
  %msr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7215, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.declare(metadata i32* %tmout, metadata !7217, metadata !DIExpression()), !dbg !7218
  store i32 10000, i32* %tmout, align 4, !dbg !7218
  br label %for.cond, !dbg !7219

for.cond:                                         ; preds = %if.end7, %entry
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7220
  %call = call i32 @serial_in(%struct.uart_8250_port* %0, i32 5) #10, !dbg !7224
  store i32 %call, i32* %status, align 4, !dbg !7225
  %1 = load i32, i32* %status, align 4, !dbg !7226
  %and = and i32 %1, 30, !dbg !7227
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7228
  %lsr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 19, !dbg !7229
  %3 = load i8, i8* %lsr_saved_flags, align 8, !dbg !7230
  %conv = zext i8 %3 to i32, !dbg !7230
  %or = or i32 %conv, %and, !dbg !7230
  %conv1 = trunc i32 %or to i8, !dbg !7230
  store i8 %conv1, i8* %lsr_saved_flags, align 8, !dbg !7230
  %4 = load i32, i32* %status, align 4, !dbg !7231
  %5 = load i32, i32* %bits.addr, align 4, !dbg !7233
  %and2 = and i32 %4, %5, !dbg !7234
  %6 = load i32, i32* %bits.addr, align 4, !dbg !7235
  %cmp = icmp eq i32 %and2, %6, !dbg !7236
  br i1 %cmp, label %if.then, label %if.end, !dbg !7237

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !7238

if.end:                                           ; preds = %for.cond
  %7 = load i32, i32* %tmout, align 4, !dbg !7239
  %dec = add i32 %7, -1, !dbg !7239
  store i32 %dec, i32* %tmout, align 4, !dbg !7239
  %cmp4 = icmp eq i32 %dec, 0, !dbg !7241
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7242

if.then6:                                         ; preds = %if.end
  br label %for.end, !dbg !7243

if.end7:                                          ; preds = %if.end
  call void @__const_udelay(i64 4295) #10, !dbg !7244
  call void @touch_nmi_watchdog() #10, !dbg !7249
  br label %for.cond, !dbg !7250, !llvm.loop !7251

for.end:                                          ; preds = %if.then6, %if.then
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7254
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 0, !dbg !7256
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 33, !dbg !7257
  %9 = load i32, i32* %flags, align 8, !dbg !7257
  %and8 = and i32 %9, 8388608, !dbg !7258
  %tobool = icmp ne i32 %and8, 0, !dbg !7258
  br i1 %tobool, label %if.then9, label %if.end23, !dbg !7259

if.then9:                                         ; preds = %for.end
  store i32 1000000, i32* %tmout, align 4, !dbg !7260
  br label %for.cond10, !dbg !7263

for.cond10:                                       ; preds = %for.inc, %if.then9
  %10 = load i32, i32* %tmout, align 4, !dbg !7264
  %tobool11 = icmp ne i32 %10, 0, !dbg !7266
  br i1 %tobool11, label %for.body, label %for.end22, !dbg !7266

for.body:                                         ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i32* %msr, metadata !7267, metadata !DIExpression()), !dbg !7269
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7270
  %call12 = call i32 @serial_in(%struct.uart_8250_port* %11, i32 6) #10, !dbg !7271
  store i32 %call12, i32* %msr, align 4, !dbg !7269
  %12 = load i32, i32* %msr, align 4, !dbg !7272
  %and13 = and i32 %12, 15, !dbg !7273
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7274
  %msr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 20, !dbg !7275
  %14 = load i8, i8* %msr_saved_flags, align 1, !dbg !7276
  %conv14 = zext i8 %14 to i32, !dbg !7276
  %or15 = or i32 %conv14, %and13, !dbg !7276
  %conv16 = trunc i32 %or15 to i8, !dbg !7276
  store i8 %conv16, i8* %msr_saved_flags, align 1, !dbg !7276
  %15 = load i32, i32* %msr, align 4, !dbg !7277
  %and17 = and i32 %15, 16, !dbg !7279
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7279
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7280

if.then19:                                        ; preds = %for.body
  br label %for.end22, !dbg !7281

if.end20:                                         ; preds = %for.body
  call void @__const_udelay(i64 4295) #10, !dbg !7282
  call void @touch_nmi_watchdog() #10, !dbg !7287
  br label %for.inc, !dbg !7288

for.inc:                                          ; preds = %if.end20
  %16 = load i32, i32* %tmout, align 4, !dbg !7289
  %dec21 = add i32 %16, -1, !dbg !7289
  store i32 %dec21, i32* %tmout, align 4, !dbg !7289
  br label %for.cond10, !dbg !7290, !llvm.loop !7291

for.end22:                                        ; preds = %if.then19, %for.cond10
  br label %if.end23, !dbg !7293

if.end23:                                         ; preds = %for.end22, %for.end
  ret void, !dbg !7294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial_port_out_sync(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !7295 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !7296, metadata !DIExpression()), !dbg !7297
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7298, metadata !DIExpression()), !dbg !7299
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  %0 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7302
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 26, !dbg !7303
  %1 = load i8, i8* %iotype, align 2, !dbg !7303
  %conv = zext i8 %1 to i32, !dbg !7302
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 7, label %sw.bb
    i32 3, label %sw.bb
    i32 6, label %sw.bb
    i32 4, label %sw.bb
  ], !dbg !7304

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7305
  %serial_out = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 4, !dbg !7307
  %3 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %serial_out, align 8, !dbg !7307
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7308
  %5 = load i32, i32* %offset.addr, align 4, !dbg !7309
  %6 = load i32, i32* %value.addr, align 4, !dbg !7310
  call void %3(%struct.uart_port* %4, i32 %5, i32 %6) #10, !dbg !7305
  %7 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7311
  %serial_in = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 3, !dbg !7312
  %8 = load i32 (%struct.uart_port*, i32)*, i32 (%struct.uart_port*, i32)** %serial_in, align 8, !dbg !7312
  %9 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7313
  %call = call i32 %8(%struct.uart_port* %9, i32 3) #10, !dbg !7311
  br label %sw.epilog, !dbg !7314

sw.default:                                       ; preds = %entry
  %10 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7315
  %serial_out1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 4, !dbg !7316
  %11 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %serial_out1, align 8, !dbg !7316
  %12 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !7317
  %13 = load i32, i32* %offset.addr, align 4, !dbg !7318
  %14 = load i32, i32* %value.addr, align 4, !dbg !7319
  call void %11(%struct.uart_port* %12, i32 %13, i32 %14) #10, !dbg !7315
  br label %sw.epilog, !dbg !7320

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  ret void, !dbg !7321
}

; Function Attrs: noredzone
declare dso_local void @enable_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_set_mctrl(%struct.uart_port* %port, i32 %mctrl) #0 !dbg !7322 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %mctrl.addr = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7323, metadata !DIExpression()), !dbg !7324
  store i32 %mctrl, i32* %mctrl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mctrl.addr, metadata !7325, metadata !DIExpression()), !dbg !7326
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7327
  %set_mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 8, !dbg !7329
  %1 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl, align 8, !dbg !7329
  %tobool = icmp ne void (%struct.uart_port*, i32)* %1, null, !dbg !7327
  br i1 %tobool, label %if.then, label %if.else, !dbg !7330

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7331
  %set_mctrl1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 8, !dbg !7332
  %3 = load void (%struct.uart_port*, i32)*, void (%struct.uart_port*, i32)** %set_mctrl1, align 8, !dbg !7332
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7333
  %5 = load i32, i32* %mctrl.addr, align 4, !dbg !7334
  call void %3(%struct.uart_port* %4, i32 %5) #10, !dbg !7331
  br label %if.end, !dbg !7331

if.else:                                          ; preds = %entry
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7335
  %7 = load i32, i32* %mctrl.addr, align 4, !dbg !7336
  call void @serial8250_do_set_mctrl(%struct.uart_port* %6, i32 %7) #10, !dbg !7337
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7338
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @serial8250_request_dma(%struct.uart_8250_port*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb_p(i8 zeroext %value, i32 %port) #0 !dbg !7339 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !7345, metadata !DIExpression()), !dbg !7344
  %0 = load i8, i8* %value.addr, align 1, !dbg !7344
  %1 = load i32, i32* %port.addr, align 4, !dbg !7344
  call void @outb(i8 zeroext %0, i32 %1) #10, !dbg !7344
  call void @slow_down_io() #10, !dbg !7344
  ret void, !dbg !7344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb_p(i32 %port) #0 !dbg !7346 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !7349, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.declare(metadata i8* %value, metadata !7351, metadata !DIExpression()), !dbg !7350
  %0 = load i32, i32* %port.addr, align 4, !dbg !7350
  %call = call zeroext i8 @inb(i32 %0) #10, !dbg !7350
  store i8 %call, i8* %value, align 1, !dbg !7350
  call void @slow_down_io() #10, !dbg !7350
  %1 = load i8, i8* %value, align 1, !dbg !7350
  ret i8 %1, !dbg !7350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_shutdown(%struct.uart_port* %port) #0 !dbg !7352 {
entry:
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !6335, metadata !DIExpression()), !dbg !7353
  %flags.addr.i69 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i69, metadata !6341, metadata !DIExpression()), !dbg !7355
  %tmp.i70 = alloca i32, align 4
  %tmp8.i71 = alloca i32, align 4
  %lock.addr.i66 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i66, metadata !6174, metadata !DIExpression()), !dbg !7356
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !6335, metadata !DIExpression()), !dbg !7363
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !7365
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !7366
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7375, metadata !DIExpression()), !dbg !7376
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7377
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !7378
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !7376
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7379, metadata !DIExpression()), !dbg !7380
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7381
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !7382
  br label %do.body, !dbg !7383

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7384

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7385, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7388, metadata !DIExpression()), !dbg !7387
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7387
  %conv = zext i1 %cmp to i32, !dbg !7387
  store i32 1, i32* %tmp, align 4, !dbg !7387
  %2 = load i32, i32* %tmp, align 4, !dbg !7387
  br label %do.body2, !dbg !7389

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7390

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7391

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7393, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7397, metadata !DIExpression()), !dbg !7396
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7396
  %conv8 = zext i1 %cmp7 to i32, !dbg !7396
  store i32 1, i32* %tmp9, align 4, !dbg !7396
  %3 = load i32, i32* %tmp9, align 4, !dbg !7396
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !7398
  store i64 %call10, i64* %flags, align 8, !dbg !7398
  br label %do.end, !dbg !7398

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7391

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7390

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7399, !srcloc !7400
  br label %do.body13, !dbg !7399

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7401
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !7401
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7402
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !7403
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !7403
  br label %do.end15, !dbg !7401

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7399

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7390

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7389

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7384

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7404
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 9, !dbg !7405
  store i8 0, i8* %ier, align 2, !dbg !7406
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7407
  call void @serial_port_out(%struct.uart_port* %8, i32 1, i32 0) #10, !dbg !7408
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7409
  %lock20 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 0, !dbg !7410
  %10 = load i64, i64* %flags, align 8, !dbg !7411
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !7412
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !7412
  store i32 1, i32* %tmp.i, align 4, !dbg !7412
  %11 = load i32, i32* %tmp.i, align 4, !dbg !7412
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !7413
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !7413
  store i32 1, i32* %tmp8.i, align 4, !dbg !7413
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !7413
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !7414
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !7414
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7415, !srcloc !6365
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !7416
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7416
  %rlock.i65 = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !7416
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7417
  %irq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 20, !dbg !7418
  %17 = load i32, i32* %irq, align 8, !dbg !7418
  call void @synchronize_irq(i32 %17) #10, !dbg !7419
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7420
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %18, i32 0, i32 21, !dbg !7422
  %19 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !7422
  %tobool = icmp ne %struct.uart_8250_dma* %19, null, !dbg !7420
  br i1 %tobool, label %if.then, label %if.end, !dbg !7423

if.then:                                          ; preds = %do.end19
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7424
  call void @serial8250_release_dma(%struct.uart_8250_port* %20) #10, !dbg !7425
  br label %if.end, !dbg !7425

if.end:                                           ; preds = %if.then, %do.end19
  br label %do.body21, !dbg !7426

do.body21:                                        ; preds = %if.end
  br label %do.body22, !dbg !7427

do.body22:                                        ; preds = %do.body21
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !7428, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !7431, metadata !DIExpression()), !dbg !7430
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !7430
  %conv26 = zext i1 %cmp25 to i32, !dbg !7430
  store i32 1, i32* %tmp27, align 4, !dbg !7430
  %21 = load i32, i32* %tmp27, align 4, !dbg !7430
  br label %do.body28, !dbg !7432

do.body28:                                        ; preds = %do.body22
  br label %do.body29, !dbg !7433

do.body29:                                        ; preds = %do.body28
  br label %do.body30, !dbg !7434

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !7436, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !7440, metadata !DIExpression()), !dbg !7439
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !7439
  %conv34 = zext i1 %cmp33 to i32, !dbg !7439
  store i32 1, i32* %tmp35, align 4, !dbg !7439
  %22 = load i32, i32* %tmp35, align 4, !dbg !7439
  %call36 = call i64 @arch_local_irq_save() #10, !dbg !7441
  store i64 %call36, i64* %flags, align 8, !dbg !7441
  br label %do.end37, !dbg !7441

do.end37:                                         ; preds = %do.body30
  br label %do.end38, !dbg !7434

do.end38:                                         ; preds = %do.end37
  br label %do.body39, !dbg !7433

do.body39:                                        ; preds = %do.end38
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7442, !srcloc !7443
  br label %do.body40, !dbg !7442

do.body40:                                        ; preds = %do.body39
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7444
  %lock41 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 0, !dbg !7444
  store %struct.spinlock* %lock41, %struct.spinlock** %lock.addr.i66, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i66, align 8, !dbg !7445
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !7446
  %rlock.i67 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !7446
  br label %do.end43, !dbg !7444

do.end43:                                         ; preds = %do.body40
  br label %do.end44, !dbg !7442

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !7433

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !7432

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !7427

do.end47:                                         ; preds = %do.end46
  %26 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7447
  %flags48 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %26, i32 0, i32 33, !dbg !7449
  %27 = load i32, i32* %flags48, align 8, !dbg !7449
  %and = and i32 %27, 2, !dbg !7450
  %tobool49 = icmp ne i32 %and, 0, !dbg !7450
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !7451

if.then50:                                        ; preds = %do.end47
  %28 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7452
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %28, i32 0, i32 1, !dbg !7454
  %29 = load i64, i64* %iobase, align 8, !dbg !7454
  %and51 = and i64 %29, 4064, !dbg !7455
  %or = or i64 %and51, 31, !dbg !7456
  %conv52 = trunc i64 %or to i32, !dbg !7457
  %call53 = call zeroext i8 @inb(i32 %conv52) #10, !dbg !7458
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7459
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 36, !dbg !7460
  %31 = load i32, i32* %mctrl, align 4, !dbg !7461
  %or54 = or i32 %31, 8192, !dbg !7461
  store i32 %or54, i32* %mctrl, align 4, !dbg !7461
  br label %if.end57, !dbg !7462

if.else:                                          ; preds = %do.end47
  %32 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7463
  %mctrl55 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %32, i32 0, i32 36, !dbg !7464
  %33 = load i32, i32* %mctrl55, align 4, !dbg !7465
  %and56 = and i32 %33, -16385, !dbg !7465
  store i32 %and56, i32* %mctrl55, align 4, !dbg !7465
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then50
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7466
  %35 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7467
  %mctrl58 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %35, i32 0, i32 36, !dbg !7468
  %36 = load i32, i32* %mctrl58, align 4, !dbg !7468
  call void @serial8250_set_mctrl(%struct.uart_port* %34, i32 %36) #10, !dbg !7469
  %37 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7470
  %lock59 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 0, !dbg !7471
  %38 = load i64, i64* %flags, align 8, !dbg !7472
  store %struct.spinlock* %lock59, %struct.spinlock** %lock.addr.i68, align 8
  store i64 %38, i64* %flags.addr.i69, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !7473
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !7473
  store i32 1, i32* %tmp.i70, align 4, !dbg !7473
  %39 = load i32, i32* %tmp.i70, align 4, !dbg !7473
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !7474
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !7474
  store i32 1, i32* %tmp8.i71, align 4, !dbg !7474
  %40 = load i32, i32* %tmp8.i71, align 4, !dbg !7474
  %41 = load i64, i64* %flags.addr.i69, align 8, !dbg !7475
  call void @arch_local_irq_restore(i64 %41) #12, !dbg !7475
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7476, !srcloc !6365
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !7477
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !7477
  %rlock.i72 = bitcast %union.anon* %43 to %struct.raw_spinlock*, !dbg !7477
  %44 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7478
  %45 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7479
  %call60 = call i32 @serial_port_in(%struct.uart_port* %45, i32 3) #10, !dbg !7480
  %and61 = and i32 %call60, -65, !dbg !7481
  call void @serial_port_out(%struct.uart_port* %44, i32 3, i32 %and61) #10, !dbg !7482
  %46 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7483
  call void @serial8250_clear_fifos(%struct.uart_8250_port* %46) #10, !dbg !7484
  %47 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7485
  %call62 = call i32 @serial_port_in(%struct.uart_port* %47, i32 0) #10, !dbg !7486
  %48 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7487
  call void @serial8250_rpm_put(%struct.uart_8250_port* %48) #10, !dbg !7488
  %49 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7489
  %ops = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %49, i32 0, i32 22, !dbg !7490
  %50 = load %struct.uart_8250_ops*, %struct.uart_8250_ops** %ops, align 8, !dbg !7490
  %release_irq = getelementptr inbounds %struct.uart_8250_ops, %struct.uart_8250_ops* %50, i32 0, i32 1, !dbg !7491
  %release_irq63 = bitcast {}** %release_irq to void (%struct.uart_8250_port*)**, !dbg !7491
  %51 = load void (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*)** %release_irq63, align 8, !dbg !7491
  %52 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7492
  call void %51(%struct.uart_8250_port* %52) #10, !dbg !7489
  ret void, !dbg !7493
}

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #2

; Function Attrs: noredzone
declare dso_local void @serial8250_release_dma(%struct.uart_8250_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !7494 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  call void @llvm.dbg.declare(metadata i8* %value, metadata !7497, metadata !DIExpression()), !dbg !7496
  %0 = load i32, i32* %port.addr, align 4, !dbg !7496
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #9, !dbg !7496, !srcloc !7498
  store i8 %1, i8* %value, align 1, !dbg !7496
  %2 = load i8, i8* %value, align 1, !dbg !7496
  ret i8 %2, !dbg !7496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_set_divisor(%struct.uart_port* %port, i32 %baud, i32 %quot, i32 %quot_frac) #0 !dbg !7499 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %baud.addr = alloca i32, align 4
  %quot.addr = alloca i32, align 4
  %quot_frac.addr = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  store i32 %quot, i32* %quot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quot.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  store i32 %quot_frac, i32* %quot_frac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quot_frac.addr, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7508, metadata !DIExpression()), !dbg !7509
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7510
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !7511
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !7509
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7512
  %call1 = call i32 @is_omap1510_8250(%struct.uart_8250_port* %1) #10, !dbg !7514
  %tobool = icmp ne i32 %call1, 0, !dbg !7514
  br i1 %tobool, label %if.then, label %if.end3, !dbg !7515

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %baud.addr, align 4, !dbg !7516
  %cmp = icmp eq i32 %2, 115200, !dbg !7519
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7520

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %quot.addr, align 4, !dbg !7521
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7523
  call void @serial_port_out(%struct.uart_port* %3, i32 19, i32 1) #10, !dbg !7524
  br label %if.end, !dbg !7525

if.else:                                          ; preds = %if.then
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7526
  call void @serial_port_out(%struct.uart_port* %4, i32 19, i32 0) #10, !dbg !7527
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end3, !dbg !7528

if.end3:                                          ; preds = %if.end, %entry
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7529
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 3, !dbg !7531
  %6 = load i32, i32* %capabilities, align 8, !dbg !7531
  %and = and i32 %6, 8, !dbg !7532
  %tobool4 = icmp ne i32 %and, 0, !dbg !7532
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !7533

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7534
  call void @serial_port_out(%struct.uart_port* %7, i32 3, i32 224) #10, !dbg !7535
  br label %if.end7, !dbg !7535

if.else6:                                         ; preds = %if.end3
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7536
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7537
  %lcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 10, !dbg !7538
  %10 = load i8, i8* %lcr, align 1, !dbg !7538
  %conv = zext i8 %10 to i32, !dbg !7537
  %or = or i32 %conv, 128, !dbg !7539
  call void @serial_port_out(%struct.uart_port* %8, i32 3, i32 %or) #10, !dbg !7540
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7541
  %12 = load i32, i32* %quot.addr, align 4, !dbg !7542
  call void @serial_dl_write(%struct.uart_8250_port* %11, i32 %12) #10, !dbg !7543
  ret void, !dbg !7544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_omap1510_8250(%struct.uart_8250_port* %pt) #0 !dbg !7545 {
entry:
  %pt.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %pt, %struct.uart_8250_port** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %pt.addr, metadata !7546, metadata !DIExpression()), !dbg !7547
  ret i32 0, !dbg !7548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial_dl_write(%struct.uart_8250_port* %up, i32 %value) #0 !dbg !7549 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %value.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7554
  %dl_write = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 24, !dbg !7555
  %1 = load void (%struct.uart_8250_port*, i32)*, void (%struct.uart_8250_port*, i32)** %dl_write, align 8, !dbg !7555
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !7556
  %3 = load i32, i32* %value.addr, align 4, !dbg !7557
  call void %1(%struct.uart_8250_port* %2, i32 %3) #10, !dbg !7554
  ret void, !dbg !7558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_update_uartclk(%struct.uart_port* %port, i32 %uartclk) #0 !dbg !7559 {
entry:
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !6335, metadata !DIExpression()), !dbg !7560
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !7562
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !7563
  %port.addr = alloca %struct.uart_port*, align 8
  %uartclk.addr = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  %baud = alloca i32, align 4
  %quot = alloca i32, align 4
  %frac = alloca i32, align 4
  %termios = alloca %struct.ktermios*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  store i32 %uartclk, i32* %uartclk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uartclk.addr, metadata !7572, metadata !DIExpression()), !dbg !7573
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7574, metadata !DIExpression()), !dbg !7575
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7576
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !7577
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !7575
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !7578, metadata !DIExpression()), !dbg !7579
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata i32* %frac, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i32 0, i32* %frac, align 4, !dbg !7583
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios, metadata !7584, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7586, metadata !DIExpression()), !dbg !7587
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7588
  %state = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 30, !dbg !7589
  %2 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !7589
  %port1 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %2, i32 0, i32 0, !dbg !7590
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port1, i32 0, i32 13, !dbg !7591
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !7592
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7593
  %uartclk2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 22, !dbg !7595
  %4 = load i32, i32* %uartclk2, align 8, !dbg !7595
  %5 = load i32, i32* %uartclk.addr, align 4, !dbg !7596
  %cmp = icmp eq i32 %4, %5, !dbg !7597
  br i1 %cmp, label %if.then, label %if.end, !dbg !7598

if.then:                                          ; preds = %entry
  br label %out_lock, !dbg !7599

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %uartclk.addr, align 4, !dbg !7600
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7601
  %uartclk3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 22, !dbg !7602
  store i32 %6, i32* %uartclk3, align 8, !dbg !7603
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7604
  %state4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 30, !dbg !7606
  %9 = load %struct.uart_state*, %struct.uart_state** %state4, align 8, !dbg !7606
  %port5 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %9, i32 0, i32 0, !dbg !7607
  %call6 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port5) #10, !dbg !7608
  br i1 %call6, label %if.end8, label %if.then7, !dbg !7609

if.then7:                                         ; preds = %if.end
  br label %out_lock, !dbg !7610

if.end8:                                          ; preds = %if.end
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7611
  %state9 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 30, !dbg !7612
  %11 = load %struct.uart_state*, %struct.uart_state** %state9, align 8, !dbg !7612
  %port10 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %11, i32 0, i32 0, !dbg !7613
  %tty = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port10, i32 0, i32 1, !dbg !7614
  %12 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !7614
  %termios11 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %12, i32 0, i32 15, !dbg !7615
  store %struct.ktermios* %termios11, %struct.ktermios** %termios, align 8, !dbg !7616
  %13 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7617
  %14 = load %struct.ktermios*, %struct.ktermios** %termios, align 8, !dbg !7618
  %call12 = call i32 @serial8250_get_baud_rate(%struct.uart_port* %13, %struct.ktermios* %14, %struct.ktermios* null) #10, !dbg !7619
  store i32 %call12, i32* %baud, align 4, !dbg !7620
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7621
  %16 = load i32, i32* %baud, align 4, !dbg !7622
  %call13 = call i32 @serial8250_get_divisor(%struct.uart_port* %15, i32 %16, i32* %frac) #10, !dbg !7623
  store i32 %call13, i32* %quot, align 4, !dbg !7624
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7625
  call void @serial8250_rpm_get(%struct.uart_8250_port* %17) #10, !dbg !7626
  br label %do.body, !dbg !7627

do.body:                                          ; preds = %if.end8
  br label %do.body14, !dbg !7628

do.body14:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7629, metadata !DIExpression()), !dbg !7631
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7632, metadata !DIExpression()), !dbg !7631
  %cmp15 = icmp eq i64* %__dummy, %__dummy2, !dbg !7631
  %conv = zext i1 %cmp15 to i32, !dbg !7631
  store i32 1, i32* %tmp, align 4, !dbg !7631
  %18 = load i32, i32* %tmp, align 4, !dbg !7631
  br label %do.body16, !dbg !7633

do.body16:                                        ; preds = %do.body14
  br label %do.body17, !dbg !7634

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !7635

do.body18:                                        ; preds = %do.body17
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !7637, metadata !DIExpression()), !dbg !7640
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !7641, metadata !DIExpression()), !dbg !7640
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !7640
  %conv22 = zext i1 %cmp21 to i32, !dbg !7640
  store i32 1, i32* %tmp23, align 4, !dbg !7640
  %19 = load i32, i32* %tmp23, align 4, !dbg !7640
  %call24 = call i64 @arch_local_irq_save() #10, !dbg !7642
  store i64 %call24, i64* %flags, align 8, !dbg !7642
  br label %do.end, !dbg !7642

do.end:                                           ; preds = %do.body18
  br label %do.end25, !dbg !7635

do.end25:                                         ; preds = %do.end
  br label %do.body26, !dbg !7634

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7643, !srcloc !7644
  br label %do.body27, !dbg !7643

do.body27:                                        ; preds = %do.body26
  %20 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7645
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 0, !dbg !7645
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7646
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !7647
  %rlock.i = bitcast %union.anon* %22 to %struct.raw_spinlock*, !dbg !7647
  br label %do.end29, !dbg !7645

do.end29:                                         ; preds = %do.body27
  br label %do.end30, !dbg !7643

do.end30:                                         ; preds = %do.end29
  br label %do.end31, !dbg !7634

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !7633

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !7628

do.end33:                                         ; preds = %do.end32
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7648
  %24 = load %struct.ktermios*, %struct.ktermios** %termios, align 8, !dbg !7649
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %24, i32 0, i32 2, !dbg !7650
  %25 = load i32, i32* %c_cflag, align 4, !dbg !7650
  %26 = load i32, i32* %baud, align 4, !dbg !7651
  call void @uart_update_timeout(%struct.uart_port* %23, i32 %25, i32 %26) #10, !dbg !7652
  %27 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7653
  %28 = load i32, i32* %baud, align 4, !dbg !7654
  %29 = load i32, i32* %quot, align 4, !dbg !7655
  %30 = load i32, i32* %frac, align 4, !dbg !7656
  call void @serial8250_set_divisor(%struct.uart_port* %27, i32 %28, i32 %29, i32 %30) #10, !dbg !7657
  %31 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7658
  %32 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7659
  %lcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %32, i32 0, i32 10, !dbg !7660
  %33 = load i8, i8* %lcr, align 1, !dbg !7660
  %conv34 = zext i8 %33 to i32, !dbg !7659
  call void @serial_port_out(%struct.uart_port* %31, i32 3, i32 %conv34) #10, !dbg !7661
  %34 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7662
  %lock35 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 0, !dbg !7663
  %35 = load i64, i64* %flags, align 8, !dbg !7664
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !7665
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !7665
  store i32 1, i32* %tmp.i, align 4, !dbg !7665
  %36 = load i32, i32* %tmp.i, align 4, !dbg !7665
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !7666
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !7666
  store i32 1, i32* %tmp8.i, align 4, !dbg !7666
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !7666
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !7667
  call void @arch_local_irq_restore(i64 %38) #12, !dbg !7667
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7668, !srcloc !6365
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !7669
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !7669
  %rlock.i40 = bitcast %union.anon* %40 to %struct.raw_spinlock*, !dbg !7669
  %41 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7670
  call void @serial8250_rpm_put(%struct.uart_8250_port* %41) #10, !dbg !7671
  br label %out_lock, !dbg !7671

out_lock:                                         ; preds = %do.end33, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !7672), !dbg !7673
  %42 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7674
  %state36 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %42, i32 0, i32 30, !dbg !7675
  %43 = load %struct.uart_state*, %struct.uart_state** %state36, align 8, !dbg !7675
  %port37 = getelementptr inbounds %struct.uart_state, %struct.uart_state* %43, i32 0, i32 0, !dbg !7676
  %mutex38 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port37, i32 0, i32 13, !dbg !7677
  call void @mutex_unlock(%struct.mutex* %mutex38) #10, !dbg !7678
  ret void, !dbg !7679
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #0 !dbg !7680 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7683, metadata !DIExpression()), !dbg !7684
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7685
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !7686
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #10, !dbg !7687
  ret i1 %call, !dbg !7688
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_get_baud_rate(%struct.uart_port* %port, %struct.ktermios* %termios, %struct.ktermios* %old) #0 !dbg !7689 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  %old.addr = alloca %struct.ktermios*, align 8
  %tolerance = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  store %struct.ktermios* %old, %struct.ktermios** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old.addr, metadata !7696, metadata !DIExpression()), !dbg !7697
  call void @llvm.dbg.declare(metadata i32* %tolerance, metadata !7698, metadata !DIExpression()), !dbg !7699
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7700
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 22, !dbg !7701
  %1 = load i32, i32* %uartclk, align 8, !dbg !7701
  %div = udiv i32 %1, 100, !dbg !7702
  store i32 %div, i32* %tolerance, align 4, !dbg !7699
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7703
  %3 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7704
  %4 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !7705
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7706
  %uartclk1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 22, !dbg !7707
  %6 = load i32, i32* %uartclk1, align 8, !dbg !7707
  %div2 = udiv i32 %6, 16, !dbg !7708
  %div3 = udiv i32 %div2, 65535, !dbg !7709
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7710
  %uartclk4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %7, i32 0, i32 22, !dbg !7711
  %8 = load i32, i32* %uartclk4, align 8, !dbg !7711
  %9 = load i32, i32* %tolerance, align 4, !dbg !7712
  %add = add i32 %8, %9, !dbg !7713
  %div5 = udiv i32 %add, 16, !dbg !7714
  %call = call i32 @uart_get_baud_rate(%struct.uart_port* %2, %struct.ktermios* %3, %struct.ktermios* %4, i32 %div3, i32 %div5) #10, !dbg !7715
  ret i32 %call, !dbg !7716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_get_divisor(%struct.uart_port* %port, i32 %baud, i32* %frac) #0 !dbg !7717 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %baud.addr = alloca i32, align 4
  %frac.addr = alloca i32*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store i32* %frac, i32** %frac.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %frac.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7724
  %get_divisor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 9, !dbg !7726
  %1 = load i32 (%struct.uart_port*, i32, i32*)*, i32 (%struct.uart_port*, i32, i32*)** %get_divisor, align 8, !dbg !7726
  %tobool = icmp ne i32 (%struct.uart_port*, i32, i32*)* %1, null, !dbg !7724
  br i1 %tobool, label %if.then, label %if.end, !dbg !7727

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7728
  %get_divisor1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 9, !dbg !7729
  %3 = load i32 (%struct.uart_port*, i32, i32*)*, i32 (%struct.uart_port*, i32, i32*)** %get_divisor1, align 8, !dbg !7729
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7730
  %5 = load i32, i32* %baud.addr, align 4, !dbg !7731
  %6 = load i32*, i32** %frac.addr, align 8, !dbg !7732
  %call = call i32 %3(%struct.uart_port* %4, i32 %5, i32* %6) #10, !dbg !7728
  store i32 %call, i32* %retval, align 4, !dbg !7733
  br label %return, !dbg !7733

if.end:                                           ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7734
  %8 = load i32, i32* %baud.addr, align 4, !dbg !7735
  %9 = load i32*, i32** %frac.addr, align 8, !dbg !7736
  %call2 = call i32 @serial8250_do_get_divisor(%struct.uart_port* %7, i32 %8, i32* %9) #10, !dbg !7737
  store i32 %call2, i32* %retval, align 4, !dbg !7738
  br label %return, !dbg !7738

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !7739
  ret i32 %10, !dbg !7739
}

; Function Attrs: noredzone
declare dso_local void @uart_update_timeout(%struct.uart_port*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_set_divisor(%struct.uart_port* %port, i32 %baud, i32 %quot, i32 %quot_frac) #0 !dbg !7740 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %baud.addr = alloca i32, align 4
  %quot.addr = alloca i32, align 4
  %quot_frac.addr = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  store i32 %quot, i32* %quot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quot.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  store i32 %quot_frac, i32* %quot_frac.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quot_frac.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7749
  %set_divisor = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 10, !dbg !7751
  %1 = load void (%struct.uart_port*, i32, i32, i32)*, void (%struct.uart_port*, i32, i32, i32)** %set_divisor, align 8, !dbg !7751
  %tobool = icmp ne void (%struct.uart_port*, i32, i32, i32)* %1, null, !dbg !7749
  br i1 %tobool, label %if.then, label %if.else, !dbg !7752

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7753
  %set_divisor1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 10, !dbg !7754
  %3 = load void (%struct.uart_port*, i32, i32, i32)*, void (%struct.uart_port*, i32, i32, i32)** %set_divisor1, align 8, !dbg !7754
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7755
  %5 = load i32, i32* %baud.addr, align 4, !dbg !7756
  %6 = load i32, i32* %quot.addr, align 4, !dbg !7757
  %7 = load i32, i32* %quot_frac.addr, align 4, !dbg !7758
  call void %3(%struct.uart_port* %4, i32 %5, i32 %6, i32 %7) #10, !dbg !7753
  br label %if.end, !dbg !7753

if.else:                                          ; preds = %entry
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7759
  %9 = load i32, i32* %baud.addr, align 4, !dbg !7760
  %10 = load i32, i32* %quot.addr, align 4, !dbg !7761
  %11 = load i32, i32* %quot_frac.addr, align 4, !dbg !7762
  call void @serial8250_do_set_divisor(%struct.uart_port* %8, i32 %9, i32 %10, i32 %11) #10, !dbg !7763
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7764
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_set_termios(%struct.uart_port* %port, %struct.ktermios* %termios, %struct.ktermios* %old) #0 !dbg !7765 {
entry:
  %lock.addr.i209 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i209, metadata !6335, metadata !DIExpression()), !dbg !7766
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !7768
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !7769
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  %old.addr = alloca %struct.ktermios*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %cval = alloca i8, align 1
  %flags = alloca i64, align 8
  %baud = alloca i32, align 4
  %quot = alloca i32, align 4
  %frac = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy21 = alloca i64, align 8
  %__dummy222 = alloca i64, align 8
  %tmp25 = alloca i32, align 4
  %efr = alloca i8, align 1
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store %struct.ktermios* %old, %struct.ktermios** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7784
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !7785
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata i8* %cval, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7788, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.declare(metadata i32* %frac, metadata !7794, metadata !DIExpression()), !dbg !7795
  store i32 0, i32* %frac, align 4, !dbg !7795
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7796
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 3, !dbg !7798
  %2 = load i32, i32* %capabilities, align 8, !dbg !7798
  %and = and i32 %2, 131072, !dbg !7799
  %tobool = icmp ne i32 %and, 0, !dbg !7799
  br i1 %tobool, label %if.then, label %if.end11, !dbg !7800

if.then:                                          ; preds = %entry
  %3 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7801
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %3, i32 0, i32 2, !dbg !7803
  %4 = load i32, i32* %c_cflag, align 4, !dbg !7804
  %and1 = and i32 %4, -1073742657, !dbg !7804
  store i32 %and1, i32* %c_cflag, align 4, !dbg !7804
  %5 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7805
  %c_cflag2 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %5, i32 0, i32 2, !dbg !7807
  %6 = load i32, i32* %c_cflag2, align 4, !dbg !7807
  %and3 = and i32 %6, 48, !dbg !7808
  %cmp = icmp eq i32 %and3, 0, !dbg !7809
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !7810

lor.lhs.false:                                    ; preds = %if.then
  %7 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7811
  %c_cflag4 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %7, i32 0, i32 2, !dbg !7812
  %8 = load i32, i32* %c_cflag4, align 4, !dbg !7812
  %and5 = and i32 %8, 48, !dbg !7813
  %cmp6 = icmp eq i32 %and5, 16, !dbg !7814
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !7815

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %9 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7816
  %c_cflag8 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %9, i32 0, i32 2, !dbg !7817
  %10 = load i32, i32* %c_cflag8, align 4, !dbg !7817
  %and9 = and i32 %10, -49, !dbg !7818
  %or = or i32 %and9, 32, !dbg !7819
  %11 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7820
  %c_cflag10 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %11, i32 0, i32 2, !dbg !7821
  store i32 %or, i32* %c_cflag10, align 4, !dbg !7822
  br label %if.end, !dbg !7820

if.end:                                           ; preds = %if.then7, %lor.lhs.false
  br label %if.end11, !dbg !7823

if.end11:                                         ; preds = %if.end, %entry
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7824
  %13 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7825
  %c_cflag12 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %13, i32 0, i32 2, !dbg !7826
  %14 = load i32, i32* %c_cflag12, align 4, !dbg !7826
  %call13 = call zeroext i8 @serial8250_compute_lcr(%struct.uart_8250_port* %12, i32 %14) #10, !dbg !7827
  store i8 %call13, i8* %cval, align 1, !dbg !7828
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7829
  %16 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7830
  %17 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !7831
  %call14 = call i32 @serial8250_get_baud_rate(%struct.uart_port* %15, %struct.ktermios* %16, %struct.ktermios* %17) #10, !dbg !7832
  store i32 %call14, i32* %baud, align 4, !dbg !7833
  %18 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7834
  %19 = load i32, i32* %baud, align 4, !dbg !7835
  %call15 = call i32 @serial8250_get_divisor(%struct.uart_port* %18, i32 %19, i32* %frac) #10, !dbg !7836
  store i32 %call15, i32* %quot, align 4, !dbg !7837
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7838
  call void @serial8250_rpm_get(%struct.uart_8250_port* %20) #10, !dbg !7839
  br label %do.body, !dbg !7840

do.body:                                          ; preds = %if.end11
  br label %do.body16, !dbg !7841

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7845, metadata !DIExpression()), !dbg !7844
  %cmp17 = icmp eq i64* %__dummy, %__dummy2, !dbg !7844
  %conv = zext i1 %cmp17 to i32, !dbg !7844
  store i32 1, i32* %tmp, align 4, !dbg !7844
  %21 = load i32, i32* %tmp, align 4, !dbg !7844
  br label %do.body18, !dbg !7846

do.body18:                                        ; preds = %do.body16
  br label %do.body19, !dbg !7847

do.body19:                                        ; preds = %do.body18
  br label %do.body20, !dbg !7848

do.body20:                                        ; preds = %do.body19
  call void @llvm.dbg.declare(metadata i64* %__dummy21, metadata !7850, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata i64* %__dummy222, metadata !7854, metadata !DIExpression()), !dbg !7853
  %cmp23 = icmp eq i64* %__dummy21, %__dummy222, !dbg !7853
  %conv24 = zext i1 %cmp23 to i32, !dbg !7853
  store i32 1, i32* %tmp25, align 4, !dbg !7853
  %22 = load i32, i32* %tmp25, align 4, !dbg !7853
  %call26 = call i64 @arch_local_irq_save() #10, !dbg !7855
  store i64 %call26, i64* %flags, align 8, !dbg !7855
  br label %do.end, !dbg !7855

do.end:                                           ; preds = %do.body20
  br label %do.end27, !dbg !7848

do.end27:                                         ; preds = %do.end
  br label %do.body28, !dbg !7847

do.body28:                                        ; preds = %do.end27
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7856, !srcloc !7857
  br label %do.body29, !dbg !7856

do.body29:                                        ; preds = %do.body28
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7858
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 0, !dbg !7858
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7859
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !7860
  %rlock.i = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !7860
  br label %do.end31, !dbg !7858

do.end31:                                         ; preds = %do.body29
  br label %do.end32, !dbg !7856

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !7847

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !7846

do.end34:                                         ; preds = %do.end33
  br label %do.end35, !dbg !7841

do.end35:                                         ; preds = %do.end34
  %26 = load i8, i8* %cval, align 1, !dbg !7861
  %27 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7862
  %lcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %27, i32 0, i32 10, !dbg !7863
  store i8 %26, i8* %lcr, align 1, !dbg !7864
  %28 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7865
  %capabilities36 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %28, i32 0, i32 3, !dbg !7867
  %29 = load i32, i32* %capabilities36, align 8, !dbg !7867
  %and37 = and i32 %29, 256, !dbg !7868
  %tobool38 = icmp ne i32 %and37, 0, !dbg !7868
  br i1 %tobool38, label %land.lhs.true, label %if.end57, !dbg !7869

land.lhs.true:                                    ; preds = %do.end35
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7870
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 23, !dbg !7871
  %31 = load i32, i32* %fifosize, align 4, !dbg !7871
  %cmp39 = icmp ugt i32 %31, 1, !dbg !7872
  br i1 %cmp39, label %if.then41, label %if.end57, !dbg !7873

if.then41:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %baud, align 4, !dbg !7874
  %cmp42 = icmp ult i32 %32, 2400, !dbg !7877
  br i1 %cmp42, label %land.lhs.true44, label %lor.lhs.false46, !dbg !7878

land.lhs.true44:                                  ; preds = %if.then41
  %33 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7879
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %33, i32 0, i32 21, !dbg !7880
  %34 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !7880
  %tobool45 = icmp ne %struct.uart_8250_dma* %34, null, !dbg !7879
  br i1 %tobool45, label %lor.lhs.false46, label %if.then49, !dbg !7881

lor.lhs.false46:                                  ; preds = %land.lhs.true44, %if.then41
  %35 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7882
  %fifo_bug = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %35, i32 0, i32 5, !dbg !7883
  %36 = load i8, i8* %fifo_bug, align 2, !dbg !7883
  %tobool47 = trunc i8 %36 to i1, !dbg !7883
  br i1 %tobool47, label %if.then49, label %if.end56, !dbg !7884

if.then49:                                        ; preds = %lor.lhs.false46, %land.lhs.true44
  %37 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7885
  %fcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %37, i32 0, i32 8, !dbg !7887
  %38 = load i8, i8* %fcr, align 1, !dbg !7888
  %conv50 = zext i8 %38 to i32, !dbg !7888
  %and51 = and i32 %conv50, -193, !dbg !7888
  %conv52 = trunc i32 %and51 to i8, !dbg !7888
  store i8 %conv52, i8* %fcr, align 1, !dbg !7888
  %39 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7889
  %fcr53 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %39, i32 0, i32 8, !dbg !7890
  %40 = load i8, i8* %fcr53, align 1, !dbg !7891
  %conv54 = zext i8 %40 to i32, !dbg !7891
  %conv55 = trunc i32 %conv54 to i8, !dbg !7891
  store i8 %conv55, i8* %fcr53, align 1, !dbg !7891
  br label %if.end56, !dbg !7892

if.end56:                                         ; preds = %if.then49, %lor.lhs.false46
  br label %if.end57, !dbg !7893

if.end57:                                         ; preds = %if.end56, %land.lhs.true, %do.end35
  %41 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7894
  %capabilities58 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %41, i32 0, i32 3, !dbg !7896
  %42 = load i32, i32* %capabilities58, align 8, !dbg !7896
  %and59 = and i32 %42, 2048, !dbg !7897
  %tobool60 = icmp ne i32 %and59, 0, !dbg !7897
  br i1 %tobool60, label %if.then61, label %if.end74, !dbg !7898

if.then61:                                        ; preds = %if.end57
  %43 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7899
  %mcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %43, i32 0, i32 11, !dbg !7901
  %44 = load i8, i8* %mcr, align 8, !dbg !7902
  %conv62 = zext i8 %44 to i32, !dbg !7902
  %and63 = and i32 %conv62, -33, !dbg !7902
  %conv64 = trunc i32 %and63 to i8, !dbg !7902
  store i8 %conv64, i8* %mcr, align 8, !dbg !7902
  %45 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7903
  %c_cflag65 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %45, i32 0, i32 2, !dbg !7905
  %46 = load i32, i32* %c_cflag65, align 4, !dbg !7905
  %and66 = and i32 %46, -2147483648, !dbg !7906
  %tobool67 = icmp ne i32 %and66, 0, !dbg !7906
  br i1 %tobool67, label %if.then68, label %if.end73, !dbg !7907

if.then68:                                        ; preds = %if.then61
  %47 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7908
  %mcr69 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %47, i32 0, i32 11, !dbg !7909
  %48 = load i8, i8* %mcr69, align 8, !dbg !7910
  %conv70 = zext i8 %48 to i32, !dbg !7910
  %or71 = or i32 %conv70, 32, !dbg !7910
  %conv72 = trunc i32 %or71 to i8, !dbg !7910
  store i8 %conv72, i8* %mcr69, align 8, !dbg !7910
  br label %if.end73, !dbg !7908

if.end73:                                         ; preds = %if.then68, %if.then61
  br label %if.end74, !dbg !7911

if.end74:                                         ; preds = %if.end73, %if.end57
  %49 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7912
  %50 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7913
  %c_cflag75 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %50, i32 0, i32 2, !dbg !7914
  %51 = load i32, i32* %c_cflag75, align 4, !dbg !7914
  %52 = load i32, i32* %baud, align 4, !dbg !7915
  call void @uart_update_timeout(%struct.uart_port* %49, i32 %51, i32 %52) #10, !dbg !7916
  %53 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7917
  %read_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %53, i32 0, i32 28, !dbg !7918
  store i32 35, i32* %read_status_mask, align 4, !dbg !7919
  %54 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7920
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %54, i32 0, i32 0, !dbg !7922
  %55 = load i32, i32* %c_iflag, align 4, !dbg !7922
  %and76 = and i32 %55, 16, !dbg !7923
  %tobool77 = icmp ne i32 %and76, 0, !dbg !7923
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !7924

if.then78:                                        ; preds = %if.end74
  %56 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7925
  %read_status_mask79 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %56, i32 0, i32 28, !dbg !7926
  %57 = load i32, i32* %read_status_mask79, align 4, !dbg !7927
  %or80 = or i32 %57, 12, !dbg !7927
  store i32 %or80, i32* %read_status_mask79, align 4, !dbg !7927
  br label %if.end81, !dbg !7925

if.end81:                                         ; preds = %if.then78, %if.end74
  %58 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7928
  %c_iflag82 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %58, i32 0, i32 0, !dbg !7930
  %59 = load i32, i32* %c_iflag82, align 4, !dbg !7930
  %and83 = and i32 %59, 11, !dbg !7931
  %tobool84 = icmp ne i32 %and83, 0, !dbg !7931
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !7932

if.then85:                                        ; preds = %if.end81
  %60 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7933
  %read_status_mask86 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %60, i32 0, i32 28, !dbg !7934
  %61 = load i32, i32* %read_status_mask86, align 4, !dbg !7935
  %or87 = or i32 %61, 16, !dbg !7935
  store i32 %or87, i32* %read_status_mask86, align 4, !dbg !7935
  br label %if.end88, !dbg !7933

if.end88:                                         ; preds = %if.then85, %if.end81
  %62 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7936
  %ignore_status_mask = getelementptr inbounds %struct.uart_port, %struct.uart_port* %62, i32 0, i32 29, !dbg !7937
  store i32 0, i32* %ignore_status_mask, align 8, !dbg !7938
  %63 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7939
  %c_iflag89 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %63, i32 0, i32 0, !dbg !7941
  %64 = load i32, i32* %c_iflag89, align 4, !dbg !7941
  %and90 = and i32 %64, 4, !dbg !7942
  %tobool91 = icmp ne i32 %and90, 0, !dbg !7942
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !7943

if.then92:                                        ; preds = %if.end88
  %65 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7944
  %ignore_status_mask93 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %65, i32 0, i32 29, !dbg !7945
  %66 = load i32, i32* %ignore_status_mask93, align 8, !dbg !7946
  %or94 = or i32 %66, 12, !dbg !7946
  store i32 %or94, i32* %ignore_status_mask93, align 8, !dbg !7946
  br label %if.end95, !dbg !7944

if.end95:                                         ; preds = %if.then92, %if.end88
  %67 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7947
  %c_iflag96 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %67, i32 0, i32 0, !dbg !7949
  %68 = load i32, i32* %c_iflag96, align 4, !dbg !7949
  %and97 = and i32 %68, 1, !dbg !7950
  %tobool98 = icmp ne i32 %and97, 0, !dbg !7950
  br i1 %tobool98, label %if.then99, label %if.end109, !dbg !7951

if.then99:                                        ; preds = %if.end95
  %69 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7952
  %ignore_status_mask100 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %69, i32 0, i32 29, !dbg !7954
  %70 = load i32, i32* %ignore_status_mask100, align 8, !dbg !7955
  %or101 = or i32 %70, 16, !dbg !7955
  store i32 %or101, i32* %ignore_status_mask100, align 8, !dbg !7955
  %71 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7956
  %c_iflag102 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %71, i32 0, i32 0, !dbg !7958
  %72 = load i32, i32* %c_iflag102, align 4, !dbg !7958
  %and103 = and i32 %72, 4, !dbg !7959
  %tobool104 = icmp ne i32 %and103, 0, !dbg !7959
  br i1 %tobool104, label %if.then105, label %if.end108, !dbg !7960

if.then105:                                       ; preds = %if.then99
  %73 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7961
  %ignore_status_mask106 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %73, i32 0, i32 29, !dbg !7962
  %74 = load i32, i32* %ignore_status_mask106, align 8, !dbg !7963
  %or107 = or i32 %74, 2, !dbg !7963
  store i32 %or107, i32* %ignore_status_mask106, align 8, !dbg !7963
  br label %if.end108, !dbg !7961

if.end108:                                        ; preds = %if.then105, %if.then99
  br label %if.end109, !dbg !7964

if.end109:                                        ; preds = %if.end108, %if.end95
  %75 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7965
  %c_cflag110 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %75, i32 0, i32 2, !dbg !7967
  %76 = load i32, i32* %c_cflag110, align 4, !dbg !7967
  %and111 = and i32 %76, 128, !dbg !7968
  %cmp112 = icmp eq i32 %and111, 0, !dbg !7969
  br i1 %cmp112, label %if.then114, label %if.end117, !dbg !7970

if.then114:                                       ; preds = %if.end109
  %77 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !7971
  %ignore_status_mask115 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %77, i32 0, i32 29, !dbg !7972
  %78 = load i32, i32* %ignore_status_mask115, align 8, !dbg !7973
  %or116 = or i32 %78, 1, !dbg !7973
  store i32 %or116, i32* %ignore_status_mask115, align 8, !dbg !7973
  br label %if.end117, !dbg !7971

if.end117:                                        ; preds = %if.then114, %if.end109
  %79 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7974
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %79, i32 0, i32 9, !dbg !7975
  %80 = load i8, i8* %ier, align 2, !dbg !7976
  %conv118 = zext i8 %80 to i32, !dbg !7976
  %and119 = and i32 %conv118, -9, !dbg !7976
  %conv120 = trunc i32 %and119 to i8, !dbg !7976
  store i8 %conv120, i8* %ier, align 2, !dbg !7976
  %81 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7977
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %81, i32 0, i32 4, !dbg !7979
  %82 = load i16, i16* %bugs, align 4, !dbg !7979
  %conv121 = zext i16 %82 to i32, !dbg !7977
  %and122 = and i32 %conv121, 4, !dbg !7980
  %tobool123 = icmp ne i32 %and122, 0, !dbg !7980
  br i1 %tobool123, label %if.end142, label %land.lhs.true124, !dbg !7981

land.lhs.true124:                                 ; preds = %if.end117
  %83 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7982
  %port125 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %83, i32 0, i32 0, !dbg !7982
  %flags126 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port125, i32 0, i32 33, !dbg !7982
  %84 = load i32, i32* %flags126, align 8, !dbg !7982
  %and127 = and i32 %84, 2048, !dbg !7982
  %tobool128 = icmp ne i32 %and127, 0, !dbg !7982
  br i1 %tobool128, label %if.then137, label %lor.lhs.false129, !dbg !7982

lor.lhs.false129:                                 ; preds = %land.lhs.true124
  %85 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7982
  %c_cflag130 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %85, i32 0, i32 2, !dbg !7982
  %86 = load i32, i32* %c_cflag130, align 4, !dbg !7982
  %and131 = and i32 %86, -2147483648, !dbg !7982
  %tobool132 = icmp ne i32 %and131, 0, !dbg !7982
  br i1 %tobool132, label %if.then137, label %lor.lhs.false133, !dbg !7982

lor.lhs.false133:                                 ; preds = %lor.lhs.false129
  %87 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !7982
  %c_cflag134 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %87, i32 0, i32 2, !dbg !7982
  %88 = load i32, i32* %c_cflag134, align 4, !dbg !7982
  %and135 = and i32 %88, 2048, !dbg !7982
  %tobool136 = icmp ne i32 %and135, 0, !dbg !7982
  br i1 %tobool136, label %if.end142, label %if.then137, !dbg !7983

if.then137:                                       ; preds = %lor.lhs.false133, %lor.lhs.false129, %land.lhs.true124
  %89 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7984
  %ier138 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %89, i32 0, i32 9, !dbg !7985
  %90 = load i8, i8* %ier138, align 2, !dbg !7986
  %conv139 = zext i8 %90 to i32, !dbg !7986
  %or140 = or i32 %conv139, 8, !dbg !7986
  %conv141 = trunc i32 %or140 to i8, !dbg !7986
  store i8 %conv141, i8* %ier138, align 2, !dbg !7986
  br label %if.end142, !dbg !7984

if.end142:                                        ; preds = %if.then137, %lor.lhs.false133, %if.end117
  %91 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7987
  %capabilities143 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %91, i32 0, i32 3, !dbg !7989
  %92 = load i32, i32* %capabilities143, align 8, !dbg !7989
  %and144 = and i32 %92, 4096, !dbg !7990
  %tobool145 = icmp ne i32 %and144, 0, !dbg !7990
  br i1 %tobool145, label %if.then146, label %if.end151, !dbg !7991

if.then146:                                       ; preds = %if.end142
  %93 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7992
  %ier147 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %93, i32 0, i32 9, !dbg !7993
  %94 = load i8, i8* %ier147, align 2, !dbg !7994
  %conv148 = zext i8 %94 to i32, !dbg !7994
  %or149 = or i32 %conv148, 64, !dbg !7994
  %conv150 = trunc i32 %or149 to i8, !dbg !7994
  store i8 %conv150, i8* %ier147, align 2, !dbg !7994
  br label %if.end151, !dbg !7992

if.end151:                                        ; preds = %if.then146, %if.end142
  %95 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !7995
  %capabilities152 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %95, i32 0, i32 3, !dbg !7997
  %96 = load i32, i32* %capabilities152, align 8, !dbg !7997
  %and153 = and i32 %96, 8192, !dbg !7998
  %tobool154 = icmp ne i32 %and153, 0, !dbg !7998
  br i1 %tobool154, label %if.then155, label %if.end160, !dbg !7999

if.then155:                                       ; preds = %if.end151
  %97 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8000
  %ier156 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %97, i32 0, i32 9, !dbg !8001
  %98 = load i8, i8* %ier156, align 2, !dbg !8002
  %conv157 = zext i8 %98 to i32, !dbg !8002
  %or158 = or i32 %conv157, 16, !dbg !8002
  %conv159 = trunc i32 %or158 to i8, !dbg !8002
  store i8 %conv159, i8* %ier156, align 2, !dbg !8002
  br label %if.end160, !dbg !8000

if.end160:                                        ; preds = %if.then155, %if.end151
  %99 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8003
  %100 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8004
  %ier161 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %100, i32 0, i32 9, !dbg !8005
  %101 = load i8, i8* %ier161, align 2, !dbg !8005
  %conv162 = zext i8 %101 to i32, !dbg !8004
  call void @serial_port_out(%struct.uart_port* %99, i32 1, i32 %conv162) #10, !dbg !8006
  %102 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8007
  %capabilities163 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %102, i32 0, i32 3, !dbg !8009
  %103 = load i32, i32* %capabilities163, align 8, !dbg !8009
  %and164 = and i32 %103, 512, !dbg !8010
  %tobool165 = icmp ne i32 %and164, 0, !dbg !8010
  br i1 %tobool165, label %if.then166, label %if.end182, !dbg !8011

if.then166:                                       ; preds = %if.end160
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !8012, metadata !DIExpression()), !dbg !8014
  store i8 0, i8* %efr, align 1, !dbg !8014
  %104 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8015
  %c_cflag167 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %104, i32 0, i32 2, !dbg !8017
  %105 = load i32, i32* %c_cflag167, align 4, !dbg !8017
  %and168 = and i32 %105, -2147483648, !dbg !8018
  %tobool169 = icmp ne i32 %and168, 0, !dbg !8018
  br i1 %tobool169, label %if.then170, label %if.end174, !dbg !8019

if.then170:                                       ; preds = %if.then166
  %106 = load i8, i8* %efr, align 1, !dbg !8020
  %conv171 = zext i8 %106 to i32, !dbg !8020
  %or172 = or i32 %conv171, 128, !dbg !8020
  %conv173 = trunc i32 %or172 to i8, !dbg !8020
  store i8 %conv173, i8* %efr, align 1, !dbg !8020
  br label %if.end174, !dbg !8021

if.end174:                                        ; preds = %if.then170, %if.then166
  %107 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8022
  call void @serial_port_out(%struct.uart_port* %107, i32 3, i32 191) #10, !dbg !8023
  %108 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8024
  %flags175 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %108, i32 0, i32 33, !dbg !8026
  %109 = load i32, i32* %flags175, align 8, !dbg !8026
  %and176 = and i32 %109, 33554432, !dbg !8027
  %tobool177 = icmp ne i32 %and176, 0, !dbg !8027
  br i1 %tobool177, label %if.then178, label %if.else, !dbg !8028

if.then178:                                       ; preds = %if.end174
  %110 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8029
  %111 = load i8, i8* %efr, align 1, !dbg !8030
  %conv179 = zext i8 %111 to i32, !dbg !8030
  call void @serial_port_out(%struct.uart_port* %110, i32 9, i32 %conv179) #10, !dbg !8031
  br label %if.end181, !dbg !8031

if.else:                                          ; preds = %if.end174
  %112 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8032
  %113 = load i8, i8* %efr, align 1, !dbg !8033
  %conv180 = zext i8 %113 to i32, !dbg !8033
  call void @serial_port_out(%struct.uart_port* %112, i32 2, i32 %conv180) #10, !dbg !8034
  br label %if.end181

if.end181:                                        ; preds = %if.else, %if.then178
  br label %if.end182, !dbg !8035

if.end182:                                        ; preds = %if.end181, %if.end160
  %114 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8036
  %115 = load i32, i32* %baud, align 4, !dbg !8037
  %116 = load i32, i32* %quot, align 4, !dbg !8038
  %117 = load i32, i32* %frac, align 4, !dbg !8039
  call void @serial8250_set_divisor(%struct.uart_port* %114, i32 %115, i32 %116, i32 %117) #10, !dbg !8040
  %118 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8041
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %118, i32 0, i32 38, !dbg !8043
  %119 = load i32, i32* %type, align 4, !dbg !8043
  %cmp183 = icmp eq i32 %119, 8, !dbg !8044
  br i1 %cmp183, label %if.then185, label %if.end188, !dbg !8045

if.then185:                                       ; preds = %if.end182
  %120 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8046
  %121 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8047
  %fcr186 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %121, i32 0, i32 8, !dbg !8048
  %122 = load i8, i8* %fcr186, align 1, !dbg !8048
  %conv187 = zext i8 %122 to i32, !dbg !8047
  call void @serial_port_out(%struct.uart_port* %120, i32 2, i32 %conv187) #10, !dbg !8049
  br label %if.end188, !dbg !8049

if.end188:                                        ; preds = %if.then185, %if.end182
  %123 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8050
  %124 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8051
  %lcr189 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %124, i32 0, i32 10, !dbg !8052
  %125 = load i8, i8* %lcr189, align 1, !dbg !8052
  %conv190 = zext i8 %125 to i32, !dbg !8051
  call void @serial_port_out(%struct.uart_port* %123, i32 3, i32 %conv190) #10, !dbg !8053
  %126 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8054
  %type191 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %126, i32 0, i32 38, !dbg !8056
  %127 = load i32, i32* %type191, align 4, !dbg !8056
  %cmp192 = icmp ne i32 %127, 8, !dbg !8057
  br i1 %cmp192, label %if.then194, label %if.end203, !dbg !8058

if.then194:                                       ; preds = %if.end188
  %128 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8059
  %fcr195 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %128, i32 0, i32 8, !dbg !8062
  %129 = load i8, i8* %fcr195, align 1, !dbg !8062
  %conv196 = zext i8 %129 to i32, !dbg !8059
  %and197 = and i32 %conv196, 1, !dbg !8063
  %tobool198 = icmp ne i32 %and197, 0, !dbg !8063
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !8064

if.then199:                                       ; preds = %if.then194
  %130 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8065
  call void @serial_port_out(%struct.uart_port* %130, i32 2, i32 1) #10, !dbg !8066
  br label %if.end200, !dbg !8066

if.end200:                                        ; preds = %if.then199, %if.then194
  %131 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8067
  %132 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8068
  %fcr201 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %132, i32 0, i32 8, !dbg !8069
  %133 = load i8, i8* %fcr201, align 1, !dbg !8069
  %conv202 = zext i8 %133 to i32, !dbg !8068
  call void @serial_port_out(%struct.uart_port* %131, i32 2, i32 %conv202) #10, !dbg !8070
  br label %if.end203, !dbg !8071

if.end203:                                        ; preds = %if.end200, %if.end188
  %134 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8072
  %135 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8073
  %mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %135, i32 0, i32 36, !dbg !8074
  %136 = load i32, i32* %mctrl, align 4, !dbg !8074
  call void @serial8250_set_mctrl(%struct.uart_port* %134, i32 %136) #10, !dbg !8075
  %137 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8076
  %lock204 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %137, i32 0, i32 0, !dbg !8077
  %138 = load i64, i64* %flags, align 8, !dbg !8078
  store %struct.spinlock* %lock204, %struct.spinlock** %lock.addr.i209, align 8
  store i64 %138, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !8079
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !8079
  store i32 1, i32* %tmp.i, align 4, !dbg !8079
  %139 = load i32, i32* %tmp.i, align 4, !dbg !8079
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !8080
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !8080
  store i32 1, i32* %tmp8.i, align 4, !dbg !8080
  %140 = load i32, i32* %tmp8.i, align 4, !dbg !8080
  %141 = load i64, i64* %flags.addr.i, align 8, !dbg !8081
  call void @arch_local_irq_restore(i64 %141) #12, !dbg !8081
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8082, !srcloc !6365
  %142 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i209, align 8, !dbg !8083
  %143 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %142, i32 0, i32 0, !dbg !8083
  %rlock.i210 = bitcast %union.anon* %143 to %struct.raw_spinlock*, !dbg !8083
  %144 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8084
  call void @serial8250_rpm_put(%struct.uart_8250_port* %144) #10, !dbg !8085
  %145 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8086
  %call205 = call i32 @tty_termios_baud_rate(%struct.ktermios* %145) #10, !dbg !8088
  %tobool206 = icmp ne i32 %call205, 0, !dbg !8088
  br i1 %tobool206, label %if.then207, label %if.end208, !dbg !8089

if.then207:                                       ; preds = %if.end203
  %146 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8090
  %147 = load i32, i32* %baud, align 4, !dbg !8091
  %148 = load i32, i32* %baud, align 4, !dbg !8092
  call void @tty_termios_encode_baud_rate(%struct.ktermios* %146, i32 %147, i32 %148) #10, !dbg !8093
  br label %if.end208, !dbg !8093

if.end208:                                        ; preds = %if.then207, %if.end203
  ret void, !dbg !8094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @serial8250_compute_lcr(%struct.uart_8250_port* %up, i32 %c_cflag) #0 !dbg !8095 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %c_cflag.addr = alloca i32, align 4
  %cval = alloca i8, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i32 %c_cflag, i32* %c_cflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c_cflag.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata i8* %cval, metadata !8102, metadata !DIExpression()), !dbg !8103
  %0 = load i32, i32* %c_cflag.addr, align 4, !dbg !8104
  %and = and i32 %0, 48, !dbg !8105
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb1
    i32 32, label %sw.bb2
    i32 48, label %sw.bb3
  ], !dbg !8106

sw.bb:                                            ; preds = %entry
  store i8 0, i8* %cval, align 1, !dbg !8107
  br label %sw.epilog, !dbg !8109

sw.bb1:                                           ; preds = %entry
  store i8 1, i8* %cval, align 1, !dbg !8110
  br label %sw.epilog, !dbg !8111

sw.bb2:                                           ; preds = %entry
  store i8 2, i8* %cval, align 1, !dbg !8112
  br label %sw.epilog, !dbg !8113

sw.default:                                       ; preds = %entry
  br label %sw.bb3, !dbg !8113

sw.bb3:                                           ; preds = %entry, %sw.default
  store i8 3, i8* %cval, align 1, !dbg !8114
  br label %sw.epilog, !dbg !8115

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %c_cflag.addr, align 4, !dbg !8116
  %and4 = and i32 %1, 64, !dbg !8118
  %tobool = icmp ne i32 %and4, 0, !dbg !8118
  br i1 %tobool, label %if.then, label %if.end, !dbg !8119

if.then:                                          ; preds = %sw.epilog
  %2 = load i8, i8* %cval, align 1, !dbg !8120
  %conv = zext i8 %2 to i32, !dbg !8120
  %or = or i32 %conv, 4, !dbg !8120
  %conv5 = trunc i32 %or to i8, !dbg !8120
  store i8 %conv5, i8* %cval, align 1, !dbg !8120
  br label %if.end, !dbg !8121

if.end:                                           ; preds = %if.then, %sw.epilog
  %3 = load i32, i32* %c_cflag.addr, align 4, !dbg !8122
  %and6 = and i32 %3, 256, !dbg !8124
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8124
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !8125

if.then8:                                         ; preds = %if.end
  %4 = load i8, i8* %cval, align 1, !dbg !8126
  %conv9 = zext i8 %4 to i32, !dbg !8126
  %or10 = or i32 %conv9, 8, !dbg !8126
  %conv11 = trunc i32 %or10 to i8, !dbg !8126
  store i8 %conv11, i8* %cval, align 1, !dbg !8126
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8128
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 4, !dbg !8130
  %6 = load i16, i16* %bugs, align 4, !dbg !8130
  %conv12 = zext i16 %6 to i32, !dbg !8128
  %and13 = and i32 %conv12, 16, !dbg !8131
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8131
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8132

if.then15:                                        ; preds = %if.then8
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8133
  %fifo_bug = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 5, !dbg !8134
  store i8 1, i8* %fifo_bug, align 2, !dbg !8135
  br label %if.end16, !dbg !8133

if.end16:                                         ; preds = %if.then15, %if.then8
  br label %if.end17, !dbg !8136

if.end17:                                         ; preds = %if.end16, %if.end
  %8 = load i32, i32* %c_cflag.addr, align 4, !dbg !8137
  %and18 = and i32 %8, 512, !dbg !8139
  %tobool19 = icmp ne i32 %and18, 0, !dbg !8139
  br i1 %tobool19, label %if.end24, label %if.then20, !dbg !8140

if.then20:                                        ; preds = %if.end17
  %9 = load i8, i8* %cval, align 1, !dbg !8141
  %conv21 = zext i8 %9 to i32, !dbg !8141
  %or22 = or i32 %conv21, 16, !dbg !8141
  %conv23 = trunc i32 %or22 to i8, !dbg !8141
  store i8 %conv23, i8* %cval, align 1, !dbg !8141
  br label %if.end24, !dbg !8142

if.end24:                                         ; preds = %if.then20, %if.end17
  %10 = load i32, i32* %c_cflag.addr, align 4, !dbg !8143
  %and25 = and i32 %10, 1073741824, !dbg !8145
  %tobool26 = icmp ne i32 %and25, 0, !dbg !8145
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !8146

if.then27:                                        ; preds = %if.end24
  %11 = load i8, i8* %cval, align 1, !dbg !8147
  %conv28 = zext i8 %11 to i32, !dbg !8147
  %or29 = or i32 %conv28, 32, !dbg !8147
  %conv30 = trunc i32 %or29 to i8, !dbg !8147
  store i8 %conv30, i8* %cval, align 1, !dbg !8147
  br label %if.end31, !dbg !8148

if.end31:                                         ; preds = %if.then27, %if.end24
  %12 = load i8, i8* %cval, align 1, !dbg !8149
  ret i8 %12, !dbg !8150
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #2

; Function Attrs: noredzone
declare dso_local void @tty_termios_encode_baud_rate(%struct.ktermios*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_set_ldisc(%struct.uart_port* %port, %struct.ktermios* %termios) #0 !dbg !8151 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !8152, metadata !DIExpression()), !dbg !8156
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !8162, metadata !DIExpression()), !dbg !8164
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !8152, metadata !DIExpression()), !dbg !8166
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8162, metadata !DIExpression()), !dbg !8169
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !8173, metadata !DIExpression()), !dbg !8174
  %0 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8175
  %c_line = getelementptr inbounds %struct.ktermios, %struct.ktermios* %0, i32 0, i32 4, !dbg !8176
  %1 = load i8, i8* %c_line, align 4, !dbg !8176
  %conv = zext i8 %1 to i32, !dbg !8175
  %cmp = icmp eq i32 %conv, 18, !dbg !8177
  br i1 %cmp, label %if.then, label %if.else, !dbg !8178

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8179
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 33, !dbg !8180
  %3 = load i32, i32* %flags, align 8, !dbg !8181
  %or = or i32 %3, 2048, !dbg !8181
  store i32 %or, i32* %flags, align 8, !dbg !8181
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8182
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !8183
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8184
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8187, !srcloc !8189
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8190
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !8190
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !8190
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8192
  call void @serial8250_enable_ms(%struct.uart_port* %7) #10, !dbg !8193
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8194
  %lock2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 0, !dbg !8195
  store %struct.spinlock* %lock2, %struct.spinlock** %lock.addr.i16, align 8
  call void @arch_local_irq_enable() #12, !dbg !8196
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8199, !srcloc !8201
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !8202
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8202
  %rlock.i17 = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !8202
  br label %if.end15, !dbg !8204

if.else:                                          ; preds = %entry
  %11 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8205
  %flags3 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 33, !dbg !8206
  %12 = load i32, i32* %flags3, align 8, !dbg !8207
  %and = and i32 %12, -2049, !dbg !8207
  store i32 %and, i32* %flags3, align 8, !dbg !8207
  %13 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8208
  %flags4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %13, i32 0, i32 33, !dbg !8208
  %14 = load i32, i32* %flags4, align 8, !dbg !8208
  %and5 = and i32 %14, 2048, !dbg !8208
  %tobool = icmp ne i32 %and5, 0, !dbg !8208
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !8208

lor.lhs.false:                                    ; preds = %if.else
  %15 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8208
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %15, i32 0, i32 2, !dbg !8208
  %16 = load i32, i32* %c_cflag, align 4, !dbg !8208
  %and6 = and i32 %16, -2147483648, !dbg !8208
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8208
  br i1 %tobool7, label %if.end, label %lor.lhs.false8, !dbg !8208

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %17 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !8208
  %c_cflag9 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %17, i32 0, i32 2, !dbg !8208
  %18 = load i32, i32* %c_cflag9, align 4, !dbg !8208
  %and10 = and i32 %18, 2048, !dbg !8208
  %tobool11 = icmp ne i32 %and10, 0, !dbg !8208
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !8209

if.then12:                                        ; preds = %lor.lhs.false8
  %19 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8210
  %lock13 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %19, i32 0, i32 0, !dbg !8211
  store %struct.spinlock* %lock13, %struct.spinlock** %lock.addr.i18, align 8
  call void @arch_local_irq_disable() #12, !dbg !8212
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8213, !srcloc !8189
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !8214
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !8214
  %rlock.i19 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !8214
  %22 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8215
  call void @serial8250_disable_ms(%struct.uart_port* %22) #10, !dbg !8216
  %23 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8217
  %lock14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %23, i32 0, i32 0, !dbg !8218
  store %struct.spinlock* %lock14, %struct.spinlock** %lock.addr.i20, align 8
  call void @arch_local_irq_enable() #12, !dbg !8219
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8220, !srcloc !8201
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !8221
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8221
  %rlock.i21 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !8221
  br label %if.end, !dbg !8222

if.end:                                           ; preds = %if.then12, %lor.lhs.false8, %lor.lhs.false, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  ret void, !dbg !8223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_enable_ms(%struct.uart_port* %port) #0 !dbg !8224 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !8227, metadata !DIExpression()), !dbg !8228
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8229
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !8230
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !8228
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8231
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 4, !dbg !8233
  %2 = load i16, i16* %bugs, align 4, !dbg !8233
  %conv = zext i16 %2 to i32, !dbg !8231
  %and = and i32 %conv, 4, !dbg !8234
  %tobool = icmp ne i32 %and, 0, !dbg !8234
  br i1 %tobool, label %if.then, label %if.end, !dbg !8235

if.then:                                          ; preds = %entry
  br label %return, !dbg !8236

if.end:                                           ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8237
  %gpios = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 18, !dbg !8238
  %4 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios, align 8, !dbg !8238
  call void @mctrl_gpio_enable_ms(%struct.mctrl_gpios* %4) #10, !dbg !8239
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8240
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 9, !dbg !8241
  %6 = load i8, i8* %ier, align 2, !dbg !8242
  %conv1 = zext i8 %6 to i32, !dbg !8242
  %or = or i32 %conv1, 8, !dbg !8242
  %conv2 = trunc i32 %or to i8, !dbg !8242
  store i8 %conv2, i8* %ier, align 2, !dbg !8242
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8243
  call void @serial8250_rpm_get(%struct.uart_8250_port* %7) #10, !dbg !8244
  %8 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8245
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8246
  %ier3 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 9, !dbg !8247
  %10 = load i8, i8* %ier3, align 2, !dbg !8247
  %conv4 = zext i8 %10 to i32, !dbg !8246
  call void @serial_port_out(%struct.uart_port* %8, i32 1, i32 %conv4) #10, !dbg !8248
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8249
  call void @serial8250_rpm_put(%struct.uart_8250_port* %11) #10, !dbg !8250
  br label %return, !dbg !8251

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_disable_ms(%struct.uart_port* %port) #0 !dbg !8252 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !8255, metadata !DIExpression()), !dbg !8256
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8257
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !8258
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !8256
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8259
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 4, !dbg !8261
  %2 = load i16, i16* %bugs, align 4, !dbg !8261
  %conv = zext i16 %2 to i32, !dbg !8259
  %and = and i32 %conv, 4, !dbg !8262
  %tobool = icmp ne i32 %and, 0, !dbg !8262
  br i1 %tobool, label %if.then, label %if.end, !dbg !8263

if.then:                                          ; preds = %entry
  br label %return, !dbg !8264

if.end:                                           ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8265
  %gpios = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 18, !dbg !8266
  %4 = load %struct.mctrl_gpios*, %struct.mctrl_gpios** %gpios, align 8, !dbg !8266
  call void @mctrl_gpio_disable_ms(%struct.mctrl_gpios* %4) #10, !dbg !8267
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8268
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 9, !dbg !8269
  %6 = load i8, i8* %ier, align 2, !dbg !8270
  %conv1 = zext i8 %6 to i32, !dbg !8270
  %and2 = and i32 %conv1, -9, !dbg !8270
  %conv3 = trunc i32 %and2 to i8, !dbg !8270
  store i8 %conv3, i8* %ier, align 2, !dbg !8270
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8271
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8272
  %ier4 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 9, !dbg !8273
  %9 = load i8, i8* %ier4, align 2, !dbg !8273
  %conv5 = zext i8 %9 to i32, !dbg !8272
  call void @serial_port_out(%struct.uart_port* %7, i32 1, i32 %conv5) #10, !dbg !8274
  br label %return, !dbg !8275

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_do_pm(%struct.uart_port* %port, i32 %state, i32 %oldstate) #0 !dbg !8276 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %state.addr = alloca i32, align 4
  %oldstate.addr = alloca i32, align 4
  %p = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  store i32 %oldstate, i32* %oldstate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldstate.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8285
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !8286
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %p, align 8, !dbg !8284
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8287
  %2 = load i32, i32* %state.addr, align 4, !dbg !8288
  %cmp = icmp ne i32 %2, 0, !dbg !8289
  %conv = zext i1 %cmp to i32, !dbg !8289
  call void @serial8250_set_sleep(%struct.uart_8250_port* %1, i32 %conv) #10, !dbg !8290
  ret void, !dbg !8291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_set_sleep(%struct.uart_8250_port* %p, i32 %sleep) #0 !dbg !8292 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %sleep.addr = alloca i32, align 4
  %lcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !8293, metadata !DIExpression()), !dbg !8294
  store i32 %sleep, i32* %sleep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sleep.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.declare(metadata i8* %lcr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i8 0, i8* %lcr, align 1, !dbg !8298
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !8299, metadata !DIExpression()), !dbg !8300
  store i8 0, i8* %efr, align 1, !dbg !8300
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8301
  call void @serial8250_rpm_get(%struct.uart_8250_port* %0) #10, !dbg !8302
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8303
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 3, !dbg !8305
  %2 = load i32, i32* %capabilities, align 8, !dbg !8305
  %and = and i32 %2, 1024, !dbg !8306
  %tobool = icmp ne i32 %and, 0, !dbg !8306
  br i1 %tobool, label %if.then, label %if.end15, !dbg !8307

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8308
  %capabilities1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 3, !dbg !8311
  %4 = load i32, i32* %capabilities1, align 8, !dbg !8311
  %and2 = and i32 %4, 512, !dbg !8312
  %tobool3 = icmp ne i32 %and2, 0, !dbg !8312
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !8313

if.then4:                                         ; preds = %if.then
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8314
  %call = call i32 @serial_in(%struct.uart_8250_port* %5, i32 3) #10, !dbg !8316
  %conv = trunc i32 %call to i8, !dbg !8316
  store i8 %conv, i8* %lcr, align 1, !dbg !8317
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8318
  %call5 = call i32 @serial_in(%struct.uart_8250_port* %6, i32 2) #10, !dbg !8319
  %conv6 = trunc i32 %call5 to i8, !dbg !8319
  store i8 %conv6, i8* %efr, align 1, !dbg !8320
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8321
  call void @serial_out(%struct.uart_8250_port* %7, i32 3, i32 191) #10, !dbg !8322
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8323
  call void @serial_out(%struct.uart_8250_port* %8, i32 2, i32 16) #10, !dbg !8324
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8325
  call void @serial_out(%struct.uart_8250_port* %9, i32 3, i32 0) #10, !dbg !8326
  br label %if.end, !dbg !8327

if.end:                                           ; preds = %if.then4, %if.then
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8328
  %11 = load i32, i32* %sleep.addr, align 4, !dbg !8329
  %tobool7 = icmp ne i32 %11, 0, !dbg !8329
  %12 = zext i1 %tobool7 to i64, !dbg !8329
  %cond = select i1 %tobool7, i32 16, i32 0, !dbg !8329
  call void @serial_out(%struct.uart_8250_port* %10, i32 1, i32 %cond) #10, !dbg !8330
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8331
  %capabilities8 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 3, !dbg !8333
  %14 = load i32, i32* %capabilities8, align 8, !dbg !8333
  %and9 = and i32 %14, 512, !dbg !8334
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8334
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8335

if.then11:                                        ; preds = %if.end
  %15 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8336
  call void @serial_out(%struct.uart_8250_port* %15, i32 3, i32 191) #10, !dbg !8338
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8339
  %17 = load i8, i8* %efr, align 1, !dbg !8340
  %conv12 = zext i8 %17 to i32, !dbg !8340
  call void @serial_out(%struct.uart_8250_port* %16, i32 2, i32 %conv12) #10, !dbg !8341
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8342
  %19 = load i8, i8* %lcr, align 1, !dbg !8343
  %conv13 = zext i8 %19 to i32, !dbg !8343
  call void @serial_out(%struct.uart_8250_port* %18, i32 3, i32 %conv13) #10, !dbg !8344
  br label %if.end14, !dbg !8345

if.end14:                                         ; preds = %if.then11, %if.end
  br label %if.end15, !dbg !8346

if.end15:                                         ; preds = %if.end14, %entry
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8347
  call void @serial8250_rpm_put(%struct.uart_8250_port* %20) #10, !dbg !8348
  ret void, !dbg !8349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_init_port(%struct.uart_8250_port* %up) #0 !dbg !8350 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !8351
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %port = alloca %struct.uart_port*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8356, metadata !DIExpression()), !dbg !8357
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8358
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !8359
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !8357
  br label %do.body, !dbg !8360

do.body:                                          ; preds = %entry
  %1 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8361
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 0, !dbg !8361
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8362
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !8363
  %rlock.i = bitcast %union.anon* %3 to %struct.raw_spinlock*, !dbg !8363
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8361
  %lock2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !8361
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8361
  %rlock = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !8361
  %6 = bitcast %struct.spinlock* %lock2 to i8*, !dbg !8361
  %7 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 %7, i64 0, i1 false), !dbg !8361
  br label %do.end, !dbg !8361

do.end:                                           ; preds = %do.body
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8364
  %ops = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 39, !dbg !8365
  store %struct.uart_ops* @serial8250_pops, %struct.uart_ops** %ops, align 8, !dbg !8366
  %9 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8367
  %has_sysrq = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 48, !dbg !8368
  store i8 0, i8* %has_sysrq, align 4, !dbg !8369
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8370
  %cur_iotype = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 14, !dbg !8371
  store i8 -1, i8* %cur_iotype, align 1, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @serial8250_set_defaults(%struct.uart_8250_port* %up) #0 !dbg !8374 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %port = alloca %struct.uart_port*, align 8
  %type = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !8377, metadata !DIExpression()), !dbg !8378
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8379
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !8380
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !8378
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8381
  %port2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 0, !dbg !8383
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port2, i32 0, i32 33, !dbg !8384
  %2 = load i32, i32* %flags, align 8, !dbg !8384
  %and = and i32 %2, 134217728, !dbg !8385
  %tobool = icmp ne i32 %and, 0, !dbg !8385
  br i1 %tobool, label %if.then, label %if.end25, !dbg !8386

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %type, metadata !8387, metadata !DIExpression()), !dbg !8389
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8390
  %port3 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 0, !dbg !8391
  %type4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port3, i32 0, i32 38, !dbg !8392
  %4 = load i32, i32* %type4, align 4, !dbg !8392
  store i32 %4, i32* %type, align 4, !dbg !8389
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8393
  %port5 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 0, !dbg !8395
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port5, i32 0, i32 23, !dbg !8396
  %6 = load i32, i32* %fifosize, align 4, !dbg !8396
  %tobool6 = icmp ne i32 %6, 0, !dbg !8393
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !8397

if.then7:                                         ; preds = %if.then
  %7 = load i32, i32* %type, align 4, !dbg !8398
  %idxprom = zext i32 %7 to i64, !dbg !8399
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !8399
  %fifo_size = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx, i32 0, i32 1, !dbg !8400
  %8 = load i16, i16* %fifo_size, align 8, !dbg !8400
  %conv = zext i16 %8 to i32, !dbg !8399
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8401
  %port8 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 0, !dbg !8402
  %fifosize9 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port8, i32 0, i32 23, !dbg !8403
  store i32 %conv, i32* %fifosize9, align 4, !dbg !8404
  br label %if.end, !dbg !8401

if.end:                                           ; preds = %if.then7, %if.then
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8405
  %tx_loadsz = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 6, !dbg !8407
  %11 = load i32, i32* %tx_loadsz, align 8, !dbg !8407
  %tobool10 = icmp ne i32 %11, 0, !dbg !8405
  br i1 %tobool10, label %if.end17, label %if.then11, !dbg !8408

if.then11:                                        ; preds = %if.end
  %12 = load i32, i32* %type, align 4, !dbg !8409
  %idxprom12 = zext i32 %12 to i64, !dbg !8410
  %arrayidx13 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom12, !dbg !8410
  %tx_loadsz14 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx13, i32 0, i32 2, !dbg !8411
  %13 = load i16, i16* %tx_loadsz14, align 2, !dbg !8411
  %conv15 = zext i16 %13 to i32, !dbg !8410
  %14 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8412
  %tx_loadsz16 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %14, i32 0, i32 6, !dbg !8413
  store i32 %conv15, i32* %tx_loadsz16, align 8, !dbg !8414
  br label %if.end17, !dbg !8412

if.end17:                                         ; preds = %if.then11, %if.end
  %15 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8415
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %15, i32 0, i32 3, !dbg !8417
  %16 = load i32, i32* %capabilities, align 8, !dbg !8417
  %tobool18 = icmp ne i32 %16, 0, !dbg !8415
  br i1 %tobool18, label %if.end24, label %if.then19, !dbg !8418

if.then19:                                        ; preds = %if.end17
  %17 = load i32, i32* %type, align 4, !dbg !8419
  %idxprom20 = zext i32 %17 to i64, !dbg !8420
  %arrayidx21 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom20, !dbg !8420
  %flags22 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx21, i32 0, i32 5, !dbg !8421
  %18 = load i32, i32* %flags22, align 4, !dbg !8421
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8422
  %capabilities23 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %19, i32 0, i32 3, !dbg !8423
  store i32 %18, i32* %capabilities23, align 8, !dbg !8424
  br label %if.end24, !dbg !8422

if.end24:                                         ; preds = %if.then19, %if.end17
  br label %if.end25, !dbg !8425

if.end25:                                         ; preds = %if.end24, %entry
  %20 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !8426
  call void @set_io_from_upio(%struct.uart_port* %20) #10, !dbg !8427
  %21 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8428
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %21, i32 0, i32 21, !dbg !8430
  %22 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !8430
  %tobool26 = icmp ne %struct.uart_8250_dma* %22, null, !dbg !8428
  br i1 %tobool26, label %if.then27, label %if.end40, !dbg !8431

if.then27:                                        ; preds = %if.end25
  %23 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8432
  %dma28 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %23, i32 0, i32 21, !dbg !8435
  %24 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma28, align 8, !dbg !8435
  %tx_dma = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %24, i32 0, i32 0, !dbg !8436
  %25 = load i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)** %tx_dma, align 8, !dbg !8436
  %tobool29 = icmp ne i32 (%struct.uart_8250_port*)* %25, null, !dbg !8432
  br i1 %tobool29, label %if.end33, label %if.then30, !dbg !8437

if.then30:                                        ; preds = %if.then27
  %26 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8438
  %dma31 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %26, i32 0, i32 21, !dbg !8439
  %27 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma31, align 8, !dbg !8439
  %tx_dma32 = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %27, i32 0, i32 0, !dbg !8440
  store i32 (%struct.uart_8250_port*)* @serial8250_tx_dma, i32 (%struct.uart_8250_port*)** %tx_dma32, align 8, !dbg !8441
  br label %if.end33, !dbg !8438

if.end33:                                         ; preds = %if.then30, %if.then27
  %28 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8442
  %dma34 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %28, i32 0, i32 21, !dbg !8444
  %29 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma34, align 8, !dbg !8444
  %rx_dma = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %29, i32 0, i32 1, !dbg !8445
  %30 = load i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)** %rx_dma, align 8, !dbg !8445
  %tobool35 = icmp ne i32 (%struct.uart_8250_port*)* %30, null, !dbg !8442
  br i1 %tobool35, label %if.end39, label %if.then36, !dbg !8446

if.then36:                                        ; preds = %if.end33
  %31 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8447
  %dma37 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %31, i32 0, i32 21, !dbg !8448
  %32 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma37, align 8, !dbg !8448
  %rx_dma38 = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %32, i32 0, i32 1, !dbg !8449
  store i32 (%struct.uart_8250_port*)* @serial8250_rx_dma, i32 (%struct.uart_8250_port*)** %rx_dma38, align 8, !dbg !8450
  br label %if.end39, !dbg !8447

if.end39:                                         ; preds = %if.then36, %if.end33
  br label %if.end40, !dbg !8451

if.end40:                                         ; preds = %if.end39, %if.end25
  ret void, !dbg !8452
}

; Function Attrs: noredzone
declare dso_local i32 @serial8250_tx_dma(%struct.uart_8250_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @serial8250_rx_dma(%struct.uart_8250_port*) #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_suspend(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @hrtimer_init(%struct.hrtimer*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_em485_handle_stop_tx(%struct.hrtimer* %t) #0 !dbg !8453 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !6335, metadata !DIExpression()), !dbg !8454
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !8456
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !8457
  %t.addr = alloca %struct.hrtimer*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  %p = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_8250_em485*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.hrtimer* %t, %struct.hrtimer** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %t.addr, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !8466, metadata !DIExpression()), !dbg !8467
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8472, metadata !DIExpression()), !dbg !8474
  %0 = load %struct.hrtimer*, %struct.hrtimer** %t.addr, align 8, !dbg !8474
  %1 = bitcast %struct.hrtimer* %0 to i8*, !dbg !8474
  store i8* %1, i8** %__mptr, align 8, !dbg !8474
  br label %do.body, !dbg !8474

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8475

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8474
  %add.ptr = getelementptr i8, i8* %2, i64 -64, !dbg !8474
  %3 = bitcast i8* %add.ptr to %struct.uart_8250_em485*, !dbg !8474
  store %struct.uart_8250_em485* %3, %struct.uart_8250_em485** %tmp, align 8, !dbg !8475
  %4 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %tmp, align 8, !dbg !8474
  store %struct.uart_8250_em485* %4, %struct.uart_8250_em485** %em485, align 8, !dbg !8477
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8478
  %port = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 3, !dbg !8479
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %port, align 8, !dbg !8479
  store %struct.uart_8250_port* %6, %struct.uart_8250_port** %p, align 8, !dbg !8480
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8481
  call void @serial8250_rpm_get(%struct.uart_8250_port* %7) #10, !dbg !8482
  br label %do.body1, !dbg !8483

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !8484

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8485, metadata !DIExpression()), !dbg !8487
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8488, metadata !DIExpression()), !dbg !8487
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8487
  %conv = zext i1 %cmp to i32, !dbg !8487
  store i32 1, i32* %tmp3, align 4, !dbg !8487
  %8 = load i32, i32* %tmp3, align 4, !dbg !8487
  br label %do.body4, !dbg !8489

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !8490

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8491

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !8493, metadata !DIExpression()), !dbg !8496
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !8497, metadata !DIExpression()), !dbg !8496
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !8496
  %conv10 = zext i1 %cmp9 to i32, !dbg !8496
  store i32 1, i32* %tmp11, align 4, !dbg !8496
  %9 = load i32, i32* %tmp11, align 4, !dbg !8496
  %call = call i64 @arch_local_irq_save() #10, !dbg !8498
  store i64 %call, i64* %flags, align 8, !dbg !8498
  br label %do.end12, !dbg !8498

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !8491

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !8490

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8499, !srcloc !8500
  br label %do.body15, !dbg !8499

do.body15:                                        ; preds = %do.body14
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8501
  %port16 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 0, !dbg !8501
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port16, i32 0, i32 0, !dbg !8501
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8502
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8503
  %rlock.i = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !8503
  br label %do.end18, !dbg !8501

do.end18:                                         ; preds = %do.body15
  br label %do.end19, !dbg !8499

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8490

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8489

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8484

do.end22:                                         ; preds = %do.end21
  %13 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8504
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %13, i32 0, i32 2, !dbg !8506
  %14 = load %struct.hrtimer*, %struct.hrtimer** %active_timer, align 8, !dbg !8506
  %15 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8507
  %stop_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %15, i32 0, i32 1, !dbg !8508
  %cmp23 = icmp eq %struct.hrtimer* %14, %stop_tx_timer, !dbg !8509
  br i1 %cmp23, label %if.then, label %if.end, !dbg !8510

if.then:                                          ; preds = %do.end22
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8511
  %rs485_stop_tx = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %16, i32 0, i32 27, !dbg !8513
  %rs485_stop_tx25 = bitcast {}** %rs485_stop_tx to void (%struct.uart_8250_port*)**, !dbg !8513
  %17 = load void (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*)** %rs485_stop_tx25, align 8, !dbg !8513
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8514
  call void %17(%struct.uart_8250_port* %18) #10, !dbg !8511
  %19 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8515
  %active_timer26 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %19, i32 0, i32 2, !dbg !8516
  store %struct.hrtimer* null, %struct.hrtimer** %active_timer26, align 8, !dbg !8517
  %20 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8518
  %tx_stopped = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %20, i32 0, i32 4, !dbg !8519
  %bf.load = load i8, i8* %tx_stopped, align 8, !dbg !8520
  %bf.clear = and i8 %bf.load, -2, !dbg !8520
  %bf.set = or i8 %bf.clear, 1, !dbg !8520
  store i8 %bf.set, i8* %tx_stopped, align 8, !dbg !8520
  br label %if.end, !dbg !8521

if.end:                                           ; preds = %if.then, %do.end22
  %21 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8522
  %port27 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %21, i32 0, i32 0, !dbg !8523
  %lock28 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port27, i32 0, i32 0, !dbg !8524
  %22 = load i64, i64* %flags, align 8, !dbg !8525
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !8526
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !8526
  store i32 1, i32* %tmp.i, align 4, !dbg !8526
  %23 = load i32, i32* %tmp.i, align 4, !dbg !8526
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !8527
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !8527
  store i32 1, i32* %tmp8.i, align 4, !dbg !8527
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !8527
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !8528
  call void @arch_local_irq_restore(i64 %25) #12, !dbg !8528
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8529, !srcloc !6365
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !8530
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8530
  %rlock.i30 = bitcast %union.anon* %27 to %struct.raw_spinlock*, !dbg !8530
  %28 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8531
  call void @serial8250_rpm_put(%struct.uart_8250_port* %28) #10, !dbg !8532
  ret i32 0, !dbg !8533
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_em485_handle_start_tx(%struct.hrtimer* %t) #0 !dbg !8534 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !6335, metadata !DIExpression()), !dbg !8535
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !8537
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !8538
  %t.addr = alloca %struct.hrtimer*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  %p = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_8250_em485*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.hrtimer* %t, %struct.hrtimer** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %t.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p, metadata !8549, metadata !DIExpression()), !dbg !8550
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8551, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8553, metadata !DIExpression()), !dbg !8555
  %0 = load %struct.hrtimer*, %struct.hrtimer** %t.addr, align 8, !dbg !8555
  %1 = bitcast %struct.hrtimer* %0 to i8*, !dbg !8555
  store i8* %1, i8** %__mptr, align 8, !dbg !8555
  br label %do.body, !dbg !8555

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8556

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8555
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8555
  %3 = bitcast i8* %add.ptr to %struct.uart_8250_em485*, !dbg !8555
  store %struct.uart_8250_em485* %3, %struct.uart_8250_em485** %tmp, align 8, !dbg !8556
  %4 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %tmp, align 8, !dbg !8555
  store %struct.uart_8250_em485* %4, %struct.uart_8250_em485** %em485, align 8, !dbg !8558
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8559
  %port = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 3, !dbg !8560
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %port, align 8, !dbg !8560
  store %struct.uart_8250_port* %6, %struct.uart_8250_port** %p, align 8, !dbg !8561
  br label %do.body1, !dbg !8562

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !8563

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8564, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8567, metadata !DIExpression()), !dbg !8566
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8566
  %conv = zext i1 %cmp to i32, !dbg !8566
  store i32 1, i32* %tmp3, align 4, !dbg !8566
  %7 = load i32, i32* %tmp3, align 4, !dbg !8566
  br label %do.body4, !dbg !8568

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !8569

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !8570

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !8572, metadata !DIExpression()), !dbg !8575
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !8576, metadata !DIExpression()), !dbg !8575
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !8575
  %conv10 = zext i1 %cmp9 to i32, !dbg !8575
  store i32 1, i32* %tmp11, align 4, !dbg !8575
  %8 = load i32, i32* %tmp11, align 4, !dbg !8575
  %call = call i64 @arch_local_irq_save() #10, !dbg !8577
  store i64 %call, i64* %flags, align 8, !dbg !8577
  br label %do.end12, !dbg !8577

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !8570

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !8569

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8578, !srcloc !8579
  br label %do.body15, !dbg !8578

do.body15:                                        ; preds = %do.body14
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8580
  %port16 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 0, !dbg !8580
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port16, i32 0, i32 0, !dbg !8580
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8581
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8582
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !8582
  br label %do.end18, !dbg !8580

do.end18:                                         ; preds = %do.body15
  br label %do.end19, !dbg !8578

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8569

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8568

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8563

do.end22:                                         ; preds = %do.end21
  %12 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8583
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %12, i32 0, i32 2, !dbg !8585
  %13 = load %struct.hrtimer*, %struct.hrtimer** %active_timer, align 8, !dbg !8585
  %14 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8586
  %start_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %14, i32 0, i32 0, !dbg !8587
  %cmp23 = icmp eq %struct.hrtimer* %13, %start_tx_timer, !dbg !8588
  br i1 %cmp23, label %if.then, label %if.end, !dbg !8589

if.then:                                          ; preds = %do.end22
  %15 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8590
  %port25 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %15, i32 0, i32 0, !dbg !8592
  call void @__start_tx(%struct.uart_port* %port25) #10, !dbg !8593
  %16 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8594
  %active_timer26 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %16, i32 0, i32 2, !dbg !8595
  store %struct.hrtimer* null, %struct.hrtimer** %active_timer26, align 8, !dbg !8596
  br label %if.end, !dbg !8597

if.end:                                           ; preds = %if.then, %do.end22
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p, align 8, !dbg !8598
  %port27 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %17, i32 0, i32 0, !dbg !8599
  %lock28 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port27, i32 0, i32 0, !dbg !8600
  %18 = load i64, i64* %flags, align 8, !dbg !8601
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !8602
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !8602
  store i32 1, i32* %tmp.i, align 4, !dbg !8602
  %19 = load i32, i32* %tmp.i, align 4, !dbg !8602
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !8603
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !8603
  store i32 1, i32* %tmp8.i, align 4, !dbg !8603
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !8603
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !8604
  call void @arch_local_irq_restore(i64 %21) #12, !dbg !8604
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !8605, !srcloc !6365
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !8606
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8606
  %rlock.i30 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !8606
  ret i32 0, !dbg !8607
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !8608 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8612, metadata !DIExpression()), !dbg !8617
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8619, metadata !DIExpression()), !dbg !8620
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8621, metadata !DIExpression()), !dbg !8622
  %0 = load i64, i64* %size.addr, align 8, !dbg !8623
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8625
  br i1 %1, label %if.then, label %if.end447, !dbg !8626

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8627
  %tobool = icmp ne i64 %2, 0, !dbg !8627
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8630

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8631
  br label %return, !dbg !8631

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8632
  %cmp = icmp ult i64 %3, 4096, !dbg !8634
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8635

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8636
  br label %return, !dbg !8636

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub = sub i64 %4, 1, !dbg !8637
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8637
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8637

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub4 = sub i64 %6, 1, !dbg !8637
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8637
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8637

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub6 = sub i64 %8, 1, !dbg !8637
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8637
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8637

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8637

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub9 = sub i64 %9, 1, !dbg !8637
  %and = and i64 %sub9, -9223372036854775808, !dbg !8637
  %tobool10 = icmp ne i64 %and, 0, !dbg !8637
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8637

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8637

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub13 = sub i64 %10, 1, !dbg !8637
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8637
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8637
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8637

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8637

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub18 = sub i64 %11, 1, !dbg !8637
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8637
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8637
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8637

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8637

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub23 = sub i64 %12, 1, !dbg !8637
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8637
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8637
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8637

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8637

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub28 = sub i64 %13, 1, !dbg !8637
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8637
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8637
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8637

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8637

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub33 = sub i64 %14, 1, !dbg !8637
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8637
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8637
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8637

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8637

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub38 = sub i64 %15, 1, !dbg !8637
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8637
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8637
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8637

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8637

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub43 = sub i64 %16, 1, !dbg !8637
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8637
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8637
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8637

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8637

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub48 = sub i64 %17, 1, !dbg !8637
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8637
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8637
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8637

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8637

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub53 = sub i64 %18, 1, !dbg !8637
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8637
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8637
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8637

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8637

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub58 = sub i64 %19, 1, !dbg !8637
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8637
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8637
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8637

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8637

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub63 = sub i64 %20, 1, !dbg !8637
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8637
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8637
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8637

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8637

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub68 = sub i64 %21, 1, !dbg !8637
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8637
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8637
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8637

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8637

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub73 = sub i64 %22, 1, !dbg !8637
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8637
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8637
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8637

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8637

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub78 = sub i64 %23, 1, !dbg !8637
  %and79 = and i64 %sub78, 562949953421312, !dbg !8637
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8637
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8637

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8637

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub83 = sub i64 %24, 1, !dbg !8637
  %and84 = and i64 %sub83, 281474976710656, !dbg !8637
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8637
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8637

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8637

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub88 = sub i64 %25, 1, !dbg !8637
  %and89 = and i64 %sub88, 140737488355328, !dbg !8637
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8637
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8637

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8637

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub93 = sub i64 %26, 1, !dbg !8637
  %and94 = and i64 %sub93, 70368744177664, !dbg !8637
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8637
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8637

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8637

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub98 = sub i64 %27, 1, !dbg !8637
  %and99 = and i64 %sub98, 35184372088832, !dbg !8637
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8637
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8637

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8637

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub103 = sub i64 %28, 1, !dbg !8637
  %and104 = and i64 %sub103, 17592186044416, !dbg !8637
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8637
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8637

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8637

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub108 = sub i64 %29, 1, !dbg !8637
  %and109 = and i64 %sub108, 8796093022208, !dbg !8637
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8637
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8637

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8637

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub113 = sub i64 %30, 1, !dbg !8637
  %and114 = and i64 %sub113, 4398046511104, !dbg !8637
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8637
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8637

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8637

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub118 = sub i64 %31, 1, !dbg !8637
  %and119 = and i64 %sub118, 2199023255552, !dbg !8637
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8637
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8637

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8637

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub123 = sub i64 %32, 1, !dbg !8637
  %and124 = and i64 %sub123, 1099511627776, !dbg !8637
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8637
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8637

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8637

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub128 = sub i64 %33, 1, !dbg !8637
  %and129 = and i64 %sub128, 549755813888, !dbg !8637
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8637
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8637

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8637

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub133 = sub i64 %34, 1, !dbg !8637
  %and134 = and i64 %sub133, 274877906944, !dbg !8637
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8637
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8637

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8637

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub138 = sub i64 %35, 1, !dbg !8637
  %and139 = and i64 %sub138, 137438953472, !dbg !8637
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8637
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8637

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8637

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub143 = sub i64 %36, 1, !dbg !8637
  %and144 = and i64 %sub143, 68719476736, !dbg !8637
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8637
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8637

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8637

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub148 = sub i64 %37, 1, !dbg !8637
  %and149 = and i64 %sub148, 34359738368, !dbg !8637
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8637
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8637

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8637

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub153 = sub i64 %38, 1, !dbg !8637
  %and154 = and i64 %sub153, 17179869184, !dbg !8637
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8637
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8637

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8637

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub158 = sub i64 %39, 1, !dbg !8637
  %and159 = and i64 %sub158, 8589934592, !dbg !8637
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8637
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8637

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8637

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub163 = sub i64 %40, 1, !dbg !8637
  %and164 = and i64 %sub163, 4294967296, !dbg !8637
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8637
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8637

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8637

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub168 = sub i64 %41, 1, !dbg !8637
  %and169 = and i64 %sub168, 2147483648, !dbg !8637
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8637
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8637

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8637

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub173 = sub i64 %42, 1, !dbg !8637
  %and174 = and i64 %sub173, 1073741824, !dbg !8637
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8637
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8637

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8637

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub178 = sub i64 %43, 1, !dbg !8637
  %and179 = and i64 %sub178, 536870912, !dbg !8637
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8637
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8637

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8637

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub183 = sub i64 %44, 1, !dbg !8637
  %and184 = and i64 %sub183, 268435456, !dbg !8637
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8637
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8637

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8637

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub188 = sub i64 %45, 1, !dbg !8637
  %and189 = and i64 %sub188, 134217728, !dbg !8637
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8637
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8637

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8637

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub193 = sub i64 %46, 1, !dbg !8637
  %and194 = and i64 %sub193, 67108864, !dbg !8637
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8637
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8637

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8637

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub198 = sub i64 %47, 1, !dbg !8637
  %and199 = and i64 %sub198, 33554432, !dbg !8637
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8637
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8637

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8637

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub203 = sub i64 %48, 1, !dbg !8637
  %and204 = and i64 %sub203, 16777216, !dbg !8637
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8637
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8637

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8637

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub208 = sub i64 %49, 1, !dbg !8637
  %and209 = and i64 %sub208, 8388608, !dbg !8637
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8637
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8637

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8637

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub213 = sub i64 %50, 1, !dbg !8637
  %and214 = and i64 %sub213, 4194304, !dbg !8637
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8637
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8637

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8637

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub218 = sub i64 %51, 1, !dbg !8637
  %and219 = and i64 %sub218, 2097152, !dbg !8637
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8637
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8637

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8637

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub223 = sub i64 %52, 1, !dbg !8637
  %and224 = and i64 %sub223, 1048576, !dbg !8637
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8637
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8637

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8637

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub228 = sub i64 %53, 1, !dbg !8637
  %and229 = and i64 %sub228, 524288, !dbg !8637
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8637
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8637

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8637

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub233 = sub i64 %54, 1, !dbg !8637
  %and234 = and i64 %sub233, 262144, !dbg !8637
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8637
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8637

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8637

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub238 = sub i64 %55, 1, !dbg !8637
  %and239 = and i64 %sub238, 131072, !dbg !8637
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8637
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8637

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8637

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub243 = sub i64 %56, 1, !dbg !8637
  %and244 = and i64 %sub243, 65536, !dbg !8637
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8637
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8637

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8637

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub248 = sub i64 %57, 1, !dbg !8637
  %and249 = and i64 %sub248, 32768, !dbg !8637
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8637
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8637

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8637

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub253 = sub i64 %58, 1, !dbg !8637
  %and254 = and i64 %sub253, 16384, !dbg !8637
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8637
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8637

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8637

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub258 = sub i64 %59, 1, !dbg !8637
  %and259 = and i64 %sub258, 8192, !dbg !8637
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8637
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8637

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8637

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub263 = sub i64 %60, 1, !dbg !8637
  %and264 = and i64 %sub263, 4096, !dbg !8637
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8637
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8637

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8637

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub268 = sub i64 %61, 1, !dbg !8637
  %and269 = and i64 %sub268, 2048, !dbg !8637
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8637
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8637

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8637

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub273 = sub i64 %62, 1, !dbg !8637
  %and274 = and i64 %sub273, 1024, !dbg !8637
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8637
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8637

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8637

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub278 = sub i64 %63, 1, !dbg !8637
  %and279 = and i64 %sub278, 512, !dbg !8637
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8637
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8637

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8637

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub283 = sub i64 %64, 1, !dbg !8637
  %and284 = and i64 %sub283, 256, !dbg !8637
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8637
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8637

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8637

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub288 = sub i64 %65, 1, !dbg !8637
  %and289 = and i64 %sub288, 128, !dbg !8637
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8637
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8637

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8637

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub293 = sub i64 %66, 1, !dbg !8637
  %and294 = and i64 %sub293, 64, !dbg !8637
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8637
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8637

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8637

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub298 = sub i64 %67, 1, !dbg !8637
  %and299 = and i64 %sub298, 32, !dbg !8637
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8637
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8637

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8637

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub303 = sub i64 %68, 1, !dbg !8637
  %and304 = and i64 %sub303, 16, !dbg !8637
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8637
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8637

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8637

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub308 = sub i64 %69, 1, !dbg !8637
  %and309 = and i64 %sub308, 8, !dbg !8637
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8637
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8637

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8637

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub313 = sub i64 %70, 1, !dbg !8637
  %and314 = and i64 %sub313, 4, !dbg !8637
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8637
  %71 = zext i1 %tobool315 to i64, !dbg !8637
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8637
  br label %cond.end, !dbg !8637

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8637
  br label %cond.end317, !dbg !8637

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8637
  br label %cond.end319, !dbg !8637

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8637
  br label %cond.end321, !dbg !8637

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8637
  br label %cond.end323, !dbg !8637

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8637
  br label %cond.end325, !dbg !8637

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8637
  br label %cond.end327, !dbg !8637

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8637
  br label %cond.end329, !dbg !8637

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8637
  br label %cond.end331, !dbg !8637

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8637
  br label %cond.end333, !dbg !8637

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8637
  br label %cond.end335, !dbg !8637

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8637
  br label %cond.end337, !dbg !8637

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8637
  br label %cond.end339, !dbg !8637

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8637
  br label %cond.end341, !dbg !8637

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8637
  br label %cond.end343, !dbg !8637

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8637
  br label %cond.end345, !dbg !8637

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8637
  br label %cond.end347, !dbg !8637

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8637
  br label %cond.end349, !dbg !8637

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8637
  br label %cond.end351, !dbg !8637

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8637
  br label %cond.end353, !dbg !8637

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8637
  br label %cond.end355, !dbg !8637

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8637
  br label %cond.end357, !dbg !8637

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8637
  br label %cond.end359, !dbg !8637

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8637
  br label %cond.end361, !dbg !8637

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8637
  br label %cond.end363, !dbg !8637

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8637
  br label %cond.end365, !dbg !8637

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8637
  br label %cond.end367, !dbg !8637

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8637
  br label %cond.end369, !dbg !8637

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8637
  br label %cond.end371, !dbg !8637

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8637
  br label %cond.end373, !dbg !8637

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8637
  br label %cond.end375, !dbg !8637

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8637
  br label %cond.end377, !dbg !8637

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8637
  br label %cond.end379, !dbg !8637

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8637
  br label %cond.end381, !dbg !8637

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8637
  br label %cond.end383, !dbg !8637

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8637
  br label %cond.end385, !dbg !8637

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8637
  br label %cond.end387, !dbg !8637

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8637
  br label %cond.end389, !dbg !8637

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8637
  br label %cond.end391, !dbg !8637

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8637
  br label %cond.end393, !dbg !8637

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8637
  br label %cond.end395, !dbg !8637

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8637
  br label %cond.end397, !dbg !8637

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8637
  br label %cond.end399, !dbg !8637

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8637
  br label %cond.end401, !dbg !8637

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8637
  br label %cond.end403, !dbg !8637

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8637
  br label %cond.end405, !dbg !8637

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8637
  br label %cond.end407, !dbg !8637

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8637
  br label %cond.end409, !dbg !8637

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8637
  br label %cond.end411, !dbg !8637

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8637
  br label %cond.end413, !dbg !8637

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8637
  br label %cond.end415, !dbg !8637

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8637
  br label %cond.end417, !dbg !8637

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8637
  br label %cond.end419, !dbg !8637

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8637
  br label %cond.end421, !dbg !8637

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8637
  br label %cond.end423, !dbg !8637

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8637
  br label %cond.end425, !dbg !8637

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8637
  br label %cond.end427, !dbg !8637

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8637
  br label %cond.end429, !dbg !8637

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8637
  br label %cond.end431, !dbg !8637

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8637
  br label %cond.end433, !dbg !8637

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8637
  br label %cond.end435, !dbg !8637

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8637
  br label %cond.end437, !dbg !8637

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8637
  br label %cond.end440, !dbg !8637

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8637

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8637
  br label %cond.end444, !dbg !8637

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8637
  %sub443 = sub i64 %72, 1, !dbg !8637
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !8637
  br label %cond.end444, !dbg !8637

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8637
  %sub446 = sub i32 %cond445, 12, !dbg !8638
  %add = add i32 %sub446, 1, !dbg !8639
  store i32 %add, i32* %retval, align 4, !dbg !8640
  br label %return, !dbg !8640

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8641
  %dec = add i64 %73, -1, !dbg !8641
  store i64 %dec, i64* %size.addr, align 8, !dbg !8641
  %74 = load i64, i64* %size.addr, align 8, !dbg !8642
  %shr = lshr i64 %74, 12, !dbg !8642
  store i64 %shr, i64* %size.addr, align 8, !dbg !8642
  %75 = load i64, i64* %size.addr, align 8, !dbg !8643
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8620
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8644
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8645
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #8, !dbg !8644, !srcloc !8646
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8644
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8647
  %add.i = add i32 %79, 1, !dbg !8648
  store i32 %add.i, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8650
  ret i32 %80, !dbg !8650
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !8651 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8612, metadata !DIExpression()), !dbg !8655
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8619, metadata !DIExpression()), !dbg !8657
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8658, metadata !DIExpression()), !dbg !8659
  %0 = load i64, i64* %n.addr, align 8, !dbg !8660
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8657
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8661
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8662
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #8, !dbg !8661, !srcloc !8646
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8661
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8663
  %add.i = add i32 %4, 1, !dbg !8664
  %sub = sub i32 %add.i, 1, !dbg !8665
  ret i32 %sub, !dbg !8666
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8667 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8675, metadata !DIExpression()), !dbg !8676
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8677, metadata !DIExpression()), !dbg !8678
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8679
  ret i8* %0, !dbg !8680
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__start_tx(%struct.uart_port* %port) #0 !dbg !8681 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %lsr = alloca i8, align 1
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !8684, metadata !DIExpression()), !dbg !8685
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8686
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !8687
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !8685
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8688
  %dma = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 21, !dbg !8690
  %2 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma, align 8, !dbg !8690
  %tobool = icmp ne %struct.uart_8250_dma* %2, null, !dbg !8688
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8691

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8692
  %dma1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 21, !dbg !8693
  %4 = load %struct.uart_8250_dma*, %struct.uart_8250_dma** %dma1, align 8, !dbg !8693
  %tx_dma = getelementptr inbounds %struct.uart_8250_dma, %struct.uart_8250_dma* %4, i32 0, i32 0, !dbg !8694
  %5 = load i32 (%struct.uart_8250_port*)*, i32 (%struct.uart_8250_port*)** %tx_dma, align 8, !dbg !8694
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8695
  %call2 = call i32 %5(%struct.uart_8250_port* %6) #10, !dbg !8692
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8692
  br i1 %tobool3, label %if.end, label %if.then, !dbg !8696

if.then:                                          ; preds = %land.lhs.true
  br label %if.end33, !dbg !8697

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8698
  %call4 = call zeroext i1 @serial8250_set_THRI(%struct.uart_8250_port* %7) #10, !dbg !8700
  br i1 %call4, label %if.then5, label %if.end20, !dbg !8701

if.then5:                                         ; preds = %if.end
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8702
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 4, !dbg !8705
  %9 = load i16, i16* %bugs, align 4, !dbg !8705
  %conv = zext i16 %9 to i32, !dbg !8702
  %and = and i32 %conv, 2, !dbg !8706
  %tobool6 = icmp ne i32 %and, 0, !dbg !8706
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !8707

if.then7:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata i8* %lsr, metadata !8708, metadata !DIExpression()), !dbg !8710
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8711
  %call8 = call i32 @serial_in(%struct.uart_8250_port* %10, i32 5) #10, !dbg !8712
  %conv9 = trunc i32 %call8 to i8, !dbg !8712
  store i8 %conv9, i8* %lsr, align 1, !dbg !8713
  %11 = load i8, i8* %lsr, align 1, !dbg !8714
  %conv10 = zext i8 %11 to i32, !dbg !8714
  %and11 = and i32 %conv10, 30, !dbg !8715
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8716
  %lsr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 19, !dbg !8717
  %13 = load i8, i8* %lsr_saved_flags, align 8, !dbg !8718
  %conv12 = zext i8 %13 to i32, !dbg !8718
  %or = or i32 %conv12, %and11, !dbg !8718
  %conv13 = trunc i32 %or to i8, !dbg !8718
  store i8 %conv13, i8* %lsr_saved_flags, align 8, !dbg !8718
  %14 = load i8, i8* %lsr, align 1, !dbg !8719
  %conv14 = zext i8 %14 to i32, !dbg !8719
  %and15 = and i32 %conv14, 32, !dbg !8721
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8721
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8722

if.then17:                                        ; preds = %if.then7
  %15 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8723
  call void @serial8250_tx_chars(%struct.uart_8250_port* %15) #10, !dbg !8724
  br label %if.end18, !dbg !8724

if.end18:                                         ; preds = %if.then17, %if.then7
  br label %if.end19, !dbg !8725

if.end19:                                         ; preds = %if.end18, %if.then5
  br label %if.end20, !dbg !8726

if.end20:                                         ; preds = %if.end19, %if.end
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !8727
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 38, !dbg !8729
  %17 = load i32, i32* %type, align 4, !dbg !8729
  %cmp = icmp eq i32 %17, 10, !dbg !8730
  br i1 %cmp, label %land.lhs.true22, label %if.end33, !dbg !8731

land.lhs.true22:                                  ; preds = %if.end20
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8732
  %acr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %18, i32 0, i32 7, !dbg !8733
  %19 = load i8, i8* %acr, align 4, !dbg !8733
  %conv23 = zext i8 %19 to i32, !dbg !8732
  %and24 = and i32 %conv23, 2, !dbg !8734
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8734
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !8735

if.then26:                                        ; preds = %land.lhs.true22
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8736
  %acr27 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %20, i32 0, i32 7, !dbg !8738
  %21 = load i8, i8* %acr27, align 4, !dbg !8739
  %conv28 = zext i8 %21 to i32, !dbg !8739
  %and29 = and i32 %conv28, -3, !dbg !8739
  %conv30 = trunc i32 %and29 to i8, !dbg !8739
  store i8 %conv30, i8* %acr27, align 4, !dbg !8739
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8740
  %23 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !8741
  %acr31 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %23, i32 0, i32 7, !dbg !8742
  %24 = load i8, i8* %acr31, align 4, !dbg !8742
  %conv32 = zext i8 %24 to i32, !dbg !8741
  call void @serial_icr_write(%struct.uart_8250_port* %22, i32 0, i32 %conv32) #10, !dbg !8743
  br label %if.end33, !dbg !8744

if.end33:                                         ; preds = %if.then, %if.then26, %land.lhs.true22, %if.end20
  ret void, !dbg !8745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @serial8250_set_THRI(%struct.uart_8250_port* %up) #0 !dbg !8746 {
entry:
  %retval = alloca i1, align 1
  %up.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8751
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 9, !dbg !8753
  %1 = load i8, i8* %ier, align 2, !dbg !8753
  %conv = zext i8 %1 to i32, !dbg !8751
  %and = and i32 %conv, 2, !dbg !8754
  %tobool = icmp ne i32 %and, 0, !dbg !8754
  br i1 %tobool, label %if.then, label %if.end, !dbg !8755

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8756
  br label %return, !dbg !8756

if.end:                                           ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8757
  %ier1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 9, !dbg !8758
  %3 = load i8, i8* %ier1, align 2, !dbg !8759
  %conv2 = zext i8 %3 to i32, !dbg !8759
  %or = or i32 %conv2, 2, !dbg !8759
  %conv3 = trunc i32 %or to i8, !dbg !8759
  store i8 %conv3, i8* %ier1, align 2, !dbg !8759
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8760
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8761
  %ier4 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 9, !dbg !8762
  %6 = load i8, i8* %ier4, align 2, !dbg !8762
  %conv5 = zext i8 %6 to i32, !dbg !8761
  call void @serial_out(%struct.uart_8250_port* %4, i32 1, i32 %conv5) #10, !dbg !8763
  store i1 true, i1* %retval, align 1, !dbg !8764
  br label %return, !dbg !8764

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !8765
  ret i1 %7, !dbg !8765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8766 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8770, metadata !DIExpression()), !dbg !8771
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8772, metadata !DIExpression()), !dbg !8773
  ret i1 true, !dbg !8774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !8775 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8779, metadata !DIExpression()), !dbg !8780
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8781, metadata !DIExpression()), !dbg !8782
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8783, metadata !DIExpression()), !dbg !8784
  ret void, !dbg !8785
}

; Function Attrs: noredzone
declare dso_local i32 @mctrl_gpio_get_outputs(%struct.mctrl_gpios*, i32*) #2

; Function Attrs: noredzone
declare dso_local void @mctrl_gpio_set(%struct.mctrl_gpios*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_MCR_to_TIOCM(i32 %mcr) #0 !dbg !8786 {
entry:
  %mcr.addr = alloca i32, align 4
  %tiocm = alloca i32, align 4
  store i32 %mcr, i32* %mcr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mcr.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.declare(metadata i32* %tiocm, metadata !8789, metadata !DIExpression()), !dbg !8790
  store i32 0, i32* %tiocm, align 4, !dbg !8790
  %0 = load i32, i32* %mcr.addr, align 4, !dbg !8791
  %and = and i32 %0, 2, !dbg !8793
  %tobool = icmp ne i32 %and, 0, !dbg !8793
  br i1 %tobool, label %if.then, label %if.end, !dbg !8794

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %tiocm, align 4, !dbg !8795
  %or = or i32 %1, 4, !dbg !8795
  store i32 %or, i32* %tiocm, align 4, !dbg !8795
  br label %if.end, !dbg !8796

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %mcr.addr, align 4, !dbg !8797
  %and1 = and i32 %2, 1, !dbg !8799
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8799
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8800

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %tiocm, align 4, !dbg !8801
  %or4 = or i32 %3, 2, !dbg !8801
  store i32 %or4, i32* %tiocm, align 4, !dbg !8801
  br label %if.end5, !dbg !8802

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %mcr.addr, align 4, !dbg !8803
  %and6 = and i32 %4, 4, !dbg !8805
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8805
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8806

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %tiocm, align 4, !dbg !8807
  %or9 = or i32 %5, 8192, !dbg !8807
  store i32 %or9, i32* %tiocm, align 4, !dbg !8807
  br label %if.end10, !dbg !8808

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i32, i32* %mcr.addr, align 4, !dbg !8809
  %and11 = and i32 %6, 8, !dbg !8811
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8811
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !8812

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %tiocm, align 4, !dbg !8813
  %or14 = or i32 %7, 16384, !dbg !8813
  store i32 %or14, i32* %tiocm, align 4, !dbg !8813
  br label %if.end15, !dbg !8814

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i32, i32* %mcr.addr, align 4, !dbg !8815
  %and16 = and i32 %8, 16, !dbg !8817
  %tobool17 = icmp ne i32 %and16, 0, !dbg !8817
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8818

if.then18:                                        ; preds = %if.end15
  %9 = load i32, i32* %tiocm, align 4, !dbg !8819
  %or19 = or i32 %9, 32768, !dbg !8819
  store i32 %or19, i32* %tiocm, align 4, !dbg !8819
  br label %if.end20, !dbg !8820

if.end20:                                         ; preds = %if.then18, %if.end15
  %10 = load i32, i32* %tiocm, align 4, !dbg !8821
  ret i32 %10, !dbg !8822
}

; Function Attrs: noredzone
declare dso_local void @do_SAK(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__stop_tx_rs485(%struct.uart_8250_port* %p) #0 !dbg !8823 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !8826, metadata !DIExpression()), !dbg !8827
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8828
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 25, !dbg !8829
  %1 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4851, align 8, !dbg !8829
  store %struct.uart_8250_em485* %1, %struct.uart_8250_em485** %em485, align 8, !dbg !8827
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8830
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !8832
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 56, !dbg !8833
  %delay_rts_after_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 2, !dbg !8834
  %3 = load i32, i32* %delay_rts_after_send, align 8, !dbg !8834
  %cmp = icmp ugt i32 %3, 0, !dbg !8835
  br i1 %cmp, label %if.then, label %if.else, !dbg !8836

if.then:                                          ; preds = %entry
  %4 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8837
  %stop_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %4, i32 0, i32 1, !dbg !8839
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8840
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 2, !dbg !8841
  store %struct.hrtimer* %stop_tx_timer, %struct.hrtimer** %active_timer, align 8, !dbg !8842
  %6 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8843
  %stop_tx_timer2 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %6, i32 0, i32 1, !dbg !8844
  %7 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8845
  %port3 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %7, i32 0, i32 0, !dbg !8846
  %rs4854 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port3, i32 0, i32 56, !dbg !8847
  %delay_rts_after_send5 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs4854, i32 0, i32 2, !dbg !8848
  %8 = load i32, i32* %delay_rts_after_send5, align 8, !dbg !8848
  %conv = zext i32 %8 to i64, !dbg !8845
  call void @start_hrtimer_ms(%struct.hrtimer* %stop_tx_timer2, i64 %conv) #10, !dbg !8849
  br label %if.end, !dbg !8850

if.else:                                          ; preds = %entry
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8851
  %rs485_stop_tx = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 27, !dbg !8853
  %rs485_stop_tx6 = bitcast {}** %rs485_stop_tx to void (%struct.uart_8250_port*)**, !dbg !8853
  %10 = load void (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*)** %rs485_stop_tx6, align 8, !dbg !8853
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8854
  call void %10(%struct.uart_8250_port* %11) #10, !dbg !8851
  %12 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8855
  %active_timer7 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %12, i32 0, i32 2, !dbg !8856
  store %struct.hrtimer* null, %struct.hrtimer** %active_timer7, align 8, !dbg !8857
  %13 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !8858
  %tx_stopped = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %13, i32 0, i32 4, !dbg !8859
  %bf.load = load i8, i8* %tx_stopped, align 8, !dbg !8860
  %bf.clear = and i8 %bf.load, -2, !dbg !8860
  %bf.set = or i8 %bf.clear, 1, !dbg !8860
  store i8 %bf.set, i8* %tx_stopped, align 8, !dbg !8860
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__do_stop_tx(%struct.uart_8250_port* %p) #0 !dbg !8862 {
entry:
  %p.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %p, %struct.uart_8250_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %p.addr, metadata !8863, metadata !DIExpression()), !dbg !8864
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8865
  %call = call zeroext i1 @serial8250_clear_THRI(%struct.uart_8250_port* %0) #10, !dbg !8867
  br i1 %call, label %if.then, label %if.end, !dbg !8868

if.then:                                          ; preds = %entry
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %p.addr, align 8, !dbg !8869
  call void @serial8250_rpm_put_tx(%struct.uart_8250_port* %1) #10, !dbg !8870
  br label %if.end, !dbg !8870

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_hrtimer_ms(%struct.hrtimer* %hrt, i64 %msec) #0 !dbg !8872 {
entry:
  %hrt.addr = alloca %struct.hrtimer*, align 8
  %msec.addr = alloca i64, align 8
  %sec = alloca i64, align 8
  %nsec = alloca i64, align 8
  %t = alloca i64, align 8
  store %struct.hrtimer* %hrt, %struct.hrtimer** %hrt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %hrt.addr, metadata !8875, metadata !DIExpression()), !dbg !8876
  store i64 %msec, i64* %msec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %msec.addr, metadata !8877, metadata !DIExpression()), !dbg !8878
  call void @llvm.dbg.declare(metadata i64* %sec, metadata !8879, metadata !DIExpression()), !dbg !8880
  %0 = load i64, i64* %msec.addr, align 8, !dbg !8881
  %div = udiv i64 %0, 1000, !dbg !8882
  store i64 %div, i64* %sec, align 8, !dbg !8880
  call void @llvm.dbg.declare(metadata i64* %nsec, metadata !8883, metadata !DIExpression()), !dbg !8884
  %1 = load i64, i64* %msec.addr, align 8, !dbg !8885
  %rem = urem i64 %1, 1000, !dbg !8886
  %mul = mul i64 %rem, 1000000, !dbg !8887
  store i64 %mul, i64* %nsec, align 8, !dbg !8884
  call void @llvm.dbg.declare(metadata i64* %t, metadata !8888, metadata !DIExpression()), !dbg !8889
  %2 = load i64, i64* %sec, align 8, !dbg !8890
  %3 = load i64, i64* %nsec, align 8, !dbg !8891
  %call = call i64 @ktime_set(i64 %2, i64 %3) #10, !dbg !8892
  store i64 %call, i64* %t, align 8, !dbg !8889
  %4 = load %struct.hrtimer*, %struct.hrtimer** %hrt.addr, align 8, !dbg !8893
  %5 = load i64, i64* %t, align 8, !dbg !8894
  call void @hrtimer_start(%struct.hrtimer* %4, i64 %5, i32 1) #10, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_set(i64 %secs, i64 %nsecs) #0 !dbg !8897 {
entry:
  %retval = alloca i64, align 8
  %secs.addr = alloca i64, align 8
  %nsecs.addr = alloca i64, align 8
  store i64 %secs, i64* %secs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %secs.addr, metadata !8901, metadata !DIExpression()), !dbg !8902
  store i64 %nsecs, i64* %nsecs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nsecs.addr, metadata !8903, metadata !DIExpression()), !dbg !8904
  %0 = load i64, i64* %secs.addr, align 8, !dbg !8905
  %cmp = icmp sge i64 %0, 9223372036, !dbg !8905
  %lnot = xor i1 %cmp, true, !dbg !8905
  %lnot1 = xor i1 %lnot, true, !dbg !8905
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8905
  %conv = sext i32 %lnot.ext to i64, !dbg !8905
  %tobool = icmp ne i64 %conv, 0, !dbg !8905
  br i1 %tobool, label %if.then, label %if.end, !dbg !8907

if.then:                                          ; preds = %entry
  store i64 9223372036854775807, i64* %retval, align 8, !dbg !8908
  br label %return, !dbg !8908

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %secs.addr, align 8, !dbg !8909
  %mul = mul i64 %1, 1000000000, !dbg !8910
  %2 = load i64, i64* %nsecs.addr, align 8, !dbg !8911
  %add = add i64 %mul, %2, !dbg !8912
  store i64 %add, i64* %retval, align 8, !dbg !8913
  br label %return, !dbg !8913

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !8914
  ret i64 %3, !dbg !8914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hrtimer_start(%struct.hrtimer* %timer, i64 %tim, i32 %mode) #0 !dbg !8915 {
entry:
  %timer.addr = alloca %struct.hrtimer*, align 8
  %tim.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  store %struct.hrtimer* %timer, %struct.hrtimer** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %timer.addr, metadata !8919, metadata !DIExpression()), !dbg !8920
  store i64 %tim, i64* %tim.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tim.addr, metadata !8921, metadata !DIExpression()), !dbg !8922
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8923, metadata !DIExpression()), !dbg !8924
  %0 = load %struct.hrtimer*, %struct.hrtimer** %timer.addr, align 8, !dbg !8925
  %1 = load i64, i64* %tim.addr, align 8, !dbg !8926
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8927
  call void @hrtimer_start_range_ns(%struct.hrtimer* %0, i64 %1, i64 0, i32 %2) #10, !dbg !8928
  ret void, !dbg !8929
}

; Function Attrs: noredzone
declare dso_local void @hrtimer_start_range_ns(%struct.hrtimer*, i64, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @serial8250_clear_THRI(%struct.uart_8250_port* %up) #0 !dbg !8930 {
entry:
  %retval = alloca i1, align 1
  %up.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8933
  %ier = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 9, !dbg !8935
  %1 = load i8, i8* %ier, align 2, !dbg !8935
  %conv = zext i8 %1 to i32, !dbg !8933
  %and = and i32 %conv, 2, !dbg !8936
  %tobool = icmp ne i32 %and, 0, !dbg !8936
  br i1 %tobool, label %if.end, label %if.then, !dbg !8937

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8938
  br label %return, !dbg !8938

if.end:                                           ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8939
  %ier1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 9, !dbg !8940
  %3 = load i8, i8* %ier1, align 2, !dbg !8941
  %conv2 = zext i8 %3 to i32, !dbg !8941
  %and3 = and i32 %conv2, -3, !dbg !8941
  %conv4 = trunc i32 %and3 to i8, !dbg !8941
  store i8 %conv4, i8* %ier1, align 2, !dbg !8941
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8942
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8943
  %ier5 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 9, !dbg !8944
  %6 = load i8, i8* %ier5, align 2, !dbg !8944
  %conv6 = zext i8 %6 to i32, !dbg !8943
  call void @serial_out(%struct.uart_8250_port* %4, i32 1, i32 %conv6) #10, !dbg !8945
  store i1 true, i1* %retval, align 1, !dbg !8946
  br label %return, !dbg !8946

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !8947
  ret i1 %7, !dbg !8947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !8948 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8949, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8952, metadata !DIExpression()), !dbg !8951
  %0 = load i64, i64* %__edi, align 8, !dbg !8951
  store i64 %0, i64* %__edi, align 8, !dbg !8951
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8953, metadata !DIExpression()), !dbg !8951
  %1 = load i64, i64* %__esi, align 8, !dbg !8951
  store i64 %1, i64* %__esi, align 8, !dbg !8951
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8954, metadata !DIExpression()), !dbg !8951
  %2 = load i64, i64* %__edx, align 8, !dbg !8951
  store i64 %2, i64* %__edx, align 8, !dbg !8951
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8955, metadata !DIExpression()), !dbg !8951
  %3 = load i64, i64* %__ecx, align 8, !dbg !8951
  store i64 %3, i64* %__ecx, align 8, !dbg !8951
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8956, metadata !DIExpression()), !dbg !8951
  %4 = load i64, i64* %__eax, align 8, !dbg !8951
  store i64 %4, i64* %__eax, align 8, !dbg !8951
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8951
  %6 = call i64 @llvm.read_register.i64(metadata !4942), !dbg !8957
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #9, !dbg !8957, !srcloc !8960
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8957
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8957
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8957
  call void @llvm.write_register.i64(metadata !4942, i64 %asmresult1), !dbg !8957
  %8 = load i64, i64* %__eax, align 8, !dbg !8957
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8961, metadata !DIExpression()), !dbg !8963
  store i64 -1, i64* %__mask, align 8, !dbg !8963
  %9 = load i64, i64* %__mask, align 8, !dbg !8963
  store i64 %9, i64* %tmp, align 8, !dbg !8963
  %10 = load i64, i64* %tmp, align 8, !dbg !8963
  %and = and i64 %8, %10, !dbg !8957
  store i64 %and, i64* %__ret, align 8, !dbg !8957
  %11 = load i64, i64* %__ret, align 8, !dbg !8951
  store i64 %11, i64* %tmp2, align 8, !dbg !8964
  %12 = load i64, i64* %tmp2, align 8, !dbg !8951
  ret i64 %12, !dbg !8965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8966 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8967, metadata !DIExpression()), !dbg !8969
  %0 = load i64, i64* %__edi, align 8, !dbg !8969
  store i64 %0, i64* %__edi, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8970, metadata !DIExpression()), !dbg !8969
  %1 = load i64, i64* %__esi, align 8, !dbg !8969
  store i64 %1, i64* %__esi, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8971, metadata !DIExpression()), !dbg !8969
  %2 = load i64, i64* %__edx, align 8, !dbg !8969
  store i64 %2, i64* %__edx, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8972, metadata !DIExpression()), !dbg !8969
  %3 = load i64, i64* %__ecx, align 8, !dbg !8969
  store i64 %3, i64* %__ecx, align 8, !dbg !8969
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8973, metadata !DIExpression()), !dbg !8969
  %4 = load i64, i64* %__eax, align 8, !dbg !8969
  store i64 %4, i64* %__eax, align 8, !dbg !8969
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8969
  %6 = call i64 @llvm.read_register.i64(metadata !4942), !dbg !8969
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #9, !dbg !8969, !srcloc !8974
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8969
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8969
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8969
  call void @llvm.write_register.i64(metadata !4942, i64 %asmresult1), !dbg !8969
  ret void, !dbg !8975
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #9

; Function Attrs: noredzone
declare dso_local void @serial8250_rx_dma_flush(%struct.uart_8250_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @default_serial_dl_read(%struct.uart_8250_port* %up) #0 !dbg !8976 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8979
  %call = call i32 @serial_in(%struct.uart_8250_port* %0, i32 0) #10, !dbg !8980
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8981
  %call1 = call i32 @serial_in(%struct.uart_8250_port* %1, i32 1) #10, !dbg !8982
  %shl = shl i32 %call1, 8, !dbg !8983
  %or = or i32 %call, %shl, !dbg !8984
  ret i32 %or, !dbg !8985
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @default_serial_dl_write(%struct.uart_8250_port* %up, i32 %value) #0 !dbg !8986 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %value.addr = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !8987, metadata !DIExpression()), !dbg !8988
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8989, metadata !DIExpression()), !dbg !8990
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8991
  %1 = load i32, i32* %value.addr, align 4, !dbg !8992
  %and = and i32 %1, 255, !dbg !8993
  call void @serial_out(%struct.uart_8250_port* %0, i32 0, i32 %and) #10, !dbg !8994
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !8995
  %3 = load i32, i32* %value.addr, align 4, !dbg !8996
  %shr = ashr i32 %3, 8, !dbg !8997
  %and1 = and i32 %shr, 255, !dbg !8998
  call void @serial_out(%struct.uart_8250_port* %2, i32 1, i32 %and1) #10, !dbg !8999
  ret void, !dbg !9000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hub6_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9001 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9006
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9007
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9008
  %2 = load i8, i8* %regshift, align 1, !dbg !9008
  %conv = zext i8 %2 to i32, !dbg !9007
  %shl = shl i32 %0, %conv, !dbg !9009
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9010
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9011
  %hub6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 50, !dbg !9012
  %4 = load i8, i8* %hub6, align 2, !dbg !9012
  %conv1 = zext i8 %4 to i32, !dbg !9011
  %sub = sub i32 %conv1, 1, !dbg !9013
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9014
  %add = add i32 %sub, %5, !dbg !9015
  %conv2 = trunc i32 %add to i8, !dbg !9011
  %6 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9016
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 1, !dbg !9017
  %7 = load i64, i64* %iobase, align 8, !dbg !9017
  %conv3 = trunc i64 %7 to i32, !dbg !9016
  call void @outb(i8 zeroext %conv2, i32 %conv3) #10, !dbg !9018
  %8 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9019
  %iobase4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 1, !dbg !9020
  %9 = load i64, i64* %iobase4, align 8, !dbg !9020
  %add5 = add i64 %9, 1, !dbg !9021
  %conv6 = trunc i64 %add5 to i32, !dbg !9019
  %call = call zeroext i8 @inb(i32 %conv6) #10, !dbg !9022
  %conv7 = zext i8 %call to i32, !dbg !9022
  ret i32 %conv7, !dbg !9023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hub6_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9024 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9025, metadata !DIExpression()), !dbg !9026
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9027, metadata !DIExpression()), !dbg !9028
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9031
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9032
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9033
  %2 = load i8, i8* %regshift, align 1, !dbg !9033
  %conv = zext i8 %2 to i32, !dbg !9032
  %shl = shl i32 %0, %conv, !dbg !9034
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9035
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9036
  %hub6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 50, !dbg !9037
  %4 = load i8, i8* %hub6, align 2, !dbg !9037
  %conv1 = zext i8 %4 to i32, !dbg !9036
  %sub = sub i32 %conv1, 1, !dbg !9038
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9039
  %add = add i32 %sub, %5, !dbg !9040
  %conv2 = trunc i32 %add to i8, !dbg !9036
  %6 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9041
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 1, !dbg !9042
  %7 = load i64, i64* %iobase, align 8, !dbg !9042
  %conv3 = trunc i64 %7 to i32, !dbg !9041
  call void @outb(i8 zeroext %conv2, i32 %conv3) #10, !dbg !9043
  %8 = load i32, i32* %value.addr, align 4, !dbg !9044
  %conv4 = trunc i32 %8 to i8, !dbg !9044
  %9 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9045
  %iobase5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 1, !dbg !9046
  %10 = load i64, i64* %iobase5, align 8, !dbg !9046
  %add6 = add i64 %10, 1, !dbg !9047
  %conv7 = trunc i64 %add6 to i32, !dbg !9045
  call void @outb(i8 zeroext %conv4, i32 %conv7) #10, !dbg !9048
  ret void, !dbg !9049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mem_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9050 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9051, metadata !DIExpression()), !dbg !9052
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9055
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9056
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9057
  %2 = load i8, i8* %regshift, align 1, !dbg !9057
  %conv = zext i8 %2 to i32, !dbg !9056
  %shl = shl i32 %0, %conv, !dbg !9058
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9059
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9060
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 2, !dbg !9061
  %4 = load i8*, i8** %membase, align 8, !dbg !9061
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9062
  %idx.ext = sext i32 %5 to i64, !dbg !9063
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !9063
  %call = call zeroext i8 @readb(i8* %add.ptr) #10, !dbg !9064
  %conv1 = zext i8 %call to i32, !dbg !9064
  ret i32 %conv1, !dbg !9065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mem_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9066 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9069, metadata !DIExpression()), !dbg !9070
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9071, metadata !DIExpression()), !dbg !9072
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9073
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9074
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9075
  %2 = load i8, i8* %regshift, align 1, !dbg !9075
  %conv = zext i8 %2 to i32, !dbg !9074
  %shl = shl i32 %0, %conv, !dbg !9076
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9077
  %3 = load i32, i32* %value.addr, align 4, !dbg !9078
  %conv1 = trunc i32 %3 to i8, !dbg !9078
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9079
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 2, !dbg !9080
  %5 = load i8*, i8** %membase, align 8, !dbg !9080
  %6 = load i32, i32* %offset.addr, align 4, !dbg !9081
  %idx.ext = sext i32 %6 to i64, !dbg !9082
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9082
  call void @writeb(i8 zeroext %conv1, i8* %add.ptr) #10, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mem16_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9085 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9086, metadata !DIExpression()), !dbg !9087
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9088, metadata !DIExpression()), !dbg !9089
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9090
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9091
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9092
  %2 = load i8, i8* %regshift, align 1, !dbg !9092
  %conv = zext i8 %2 to i32, !dbg !9091
  %shl = shl i32 %0, %conv, !dbg !9093
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9094
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9095
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 2, !dbg !9096
  %4 = load i8*, i8** %membase, align 8, !dbg !9096
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9097
  %idx.ext = sext i32 %5 to i64, !dbg !9098
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !9098
  %call = call zeroext i16 @readw(i8* %add.ptr) #10, !dbg !9099
  %conv1 = zext i16 %call to i32, !dbg !9099
  ret i32 %conv1, !dbg !9100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mem16_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9101 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9108
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9109
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9110
  %2 = load i8, i8* %regshift, align 1, !dbg !9110
  %conv = zext i8 %2 to i32, !dbg !9109
  %shl = shl i32 %0, %conv, !dbg !9111
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9112
  %3 = load i32, i32* %value.addr, align 4, !dbg !9113
  %conv1 = trunc i32 %3 to i16, !dbg !9113
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9114
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 2, !dbg !9115
  %5 = load i8*, i8** %membase, align 8, !dbg !9115
  %6 = load i32, i32* %offset.addr, align 4, !dbg !9116
  %idx.ext = sext i32 %6 to i64, !dbg !9117
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9117
  call void @writew(i16 zeroext %conv1, i8* %add.ptr) #10, !dbg !9118
  ret void, !dbg !9119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mem32_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9120 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9121, metadata !DIExpression()), !dbg !9122
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9123, metadata !DIExpression()), !dbg !9124
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9125
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9126
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9127
  %2 = load i8, i8* %regshift, align 1, !dbg !9127
  %conv = zext i8 %2 to i32, !dbg !9126
  %shl = shl i32 %0, %conv, !dbg !9128
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9129
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9130
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 2, !dbg !9131
  %4 = load i8*, i8** %membase, align 8, !dbg !9131
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9132
  %idx.ext = sext i32 %5 to i64, !dbg !9133
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !9133
  %call = call i32 @readl(i8* %add.ptr) #10, !dbg !9134
  ret i32 %call, !dbg !9135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mem32_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9136 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9139, metadata !DIExpression()), !dbg !9140
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9141, metadata !DIExpression()), !dbg !9142
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9143
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9144
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9145
  %2 = load i8, i8* %regshift, align 1, !dbg !9145
  %conv = zext i8 %2 to i32, !dbg !9144
  %shl = shl i32 %0, %conv, !dbg !9146
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9147
  %3 = load i32, i32* %value.addr, align 4, !dbg !9148
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9149
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 2, !dbg !9150
  %5 = load i8*, i8** %membase, align 8, !dbg !9150
  %6 = load i32, i32* %offset.addr, align 4, !dbg !9151
  %idx.ext = sext i32 %6 to i64, !dbg !9152
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9152
  call void @writel(i32 %3, i8* %add.ptr) #10, !dbg !9153
  ret void, !dbg !9154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mem32be_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9155 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9156, metadata !DIExpression()), !dbg !9157
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9158, metadata !DIExpression()), !dbg !9159
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9160
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9161
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9162
  %2 = load i8, i8* %regshift, align 1, !dbg !9162
  %conv = zext i8 %2 to i32, !dbg !9161
  %shl = shl i32 %0, %conv, !dbg !9163
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9164
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9165
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 2, !dbg !9166
  %4 = load i8*, i8** %membase, align 8, !dbg !9166
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9167
  %idx.ext = sext i32 %5 to i64, !dbg !9168
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !9168
  %call = call i32 @ioread32be(i8* %add.ptr) #10, !dbg !9169
  ret i32 %call, !dbg !9170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mem32be_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9171 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9178
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9179
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9180
  %2 = load i8, i8* %regshift, align 1, !dbg !9180
  %conv = zext i8 %2 to i32, !dbg !9179
  %shl = shl i32 %0, %conv, !dbg !9181
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9182
  %3 = load i32, i32* %value.addr, align 4, !dbg !9183
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9184
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 2, !dbg !9185
  %5 = load i8*, i8** %membase, align 8, !dbg !9185
  %6 = load i32, i32* %offset.addr, align 4, !dbg !9186
  %idx.ext = sext i32 %6 to i64, !dbg !9187
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9187
  call void @iowrite32be(i32 %3, i8* %add.ptr) #10, !dbg !9188
  ret void, !dbg !9189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @io_serial_in(%struct.uart_port* %p, i32 %offset) #0 !dbg !9190 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9191, metadata !DIExpression()), !dbg !9192
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9193, metadata !DIExpression()), !dbg !9194
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9195
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9196
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9197
  %2 = load i8, i8* %regshift, align 1, !dbg !9197
  %conv = zext i8 %2 to i32, !dbg !9196
  %shl = shl i32 %0, %conv, !dbg !9198
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9199
  %3 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9200
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 1, !dbg !9201
  %4 = load i64, i64* %iobase, align 8, !dbg !9201
  %5 = load i32, i32* %offset.addr, align 4, !dbg !9202
  %conv1 = sext i32 %5 to i64, !dbg !9202
  %add = add i64 %4, %conv1, !dbg !9203
  %conv2 = trunc i64 %add to i32, !dbg !9200
  %call = call zeroext i8 @inb(i32 %conv2) #10, !dbg !9204
  %conv3 = zext i8 %call to i32, !dbg !9204
  ret i32 %conv3, !dbg !9205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @io_serial_out(%struct.uart_port* %p, i32 %offset, i32 %value) #0 !dbg !9206 {
entry:
  %p.addr = alloca %struct.uart_port*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.uart_port* %p, %struct.uart_port** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %p.addr, metadata !9207, metadata !DIExpression()), !dbg !9208
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  %0 = load i32, i32* %offset.addr, align 4, !dbg !9213
  %1 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9214
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 25, !dbg !9215
  %2 = load i8, i8* %regshift, align 1, !dbg !9215
  %conv = zext i8 %2 to i32, !dbg !9214
  %shl = shl i32 %0, %conv, !dbg !9216
  store i32 %shl, i32* %offset.addr, align 4, !dbg !9217
  %3 = load i32, i32* %value.addr, align 4, !dbg !9218
  %conv1 = trunc i32 %3 to i8, !dbg !9218
  %4 = load %struct.uart_port*, %struct.uart_port** %p.addr, align 8, !dbg !9219
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 1, !dbg !9220
  %5 = load i64, i64* %iobase, align 8, !dbg !9220
  %6 = load i32, i32* %offset.addr, align 4, !dbg !9221
  %conv2 = sext i32 %6 to i64, !dbg !9221
  %add = add i64 %5, %conv2, !dbg !9222
  %conv3 = trunc i64 %add to i32, !dbg !9219
  call void @outb(i8 zeroext %conv1, i32 %conv3) #10, !dbg !9223
  ret void, !dbg !9224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_default_handle_irq(%struct.uart_port* %port) #0 !dbg !9225 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %iir = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9226, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9228, metadata !DIExpression()), !dbg !9229
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9230
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9231
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9229
  call void @llvm.dbg.declare(metadata i32* %iir, metadata !9232, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9234, metadata !DIExpression()), !dbg !9235
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9236
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !9237
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9238
  %call1 = call i32 @serial_port_in(%struct.uart_port* %2, i32 2) #10, !dbg !9239
  store i32 %call1, i32* %iir, align 4, !dbg !9240
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9241
  %4 = load i32, i32* %iir, align 4, !dbg !9242
  %call2 = call i32 @serial8250_handle_irq(%struct.uart_port* %3, i32 %4) #10, !dbg !9243
  store i32 %call2, i32* %ret, align 4, !dbg !9244
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9245
  call void @serial8250_rpm_put(%struct.uart_8250_port* %5) #10, !dbg !9246
  %6 = load i32, i32* %ret, align 4, !dbg !9247
  ret i32 %6, !dbg !9248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !9249 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !9252, metadata !DIExpression()), !dbg !9251
  %0 = load i8, i8* %value.addr, align 1, !dbg !9251
  %1 = load i32, i32* %port.addr, align 4, !dbg !9251
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #9, !dbg !9251, !srcloc !9253
  ret void, !dbg !9251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #0 !dbg !9254 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !9259, metadata !DIExpression()), !dbg !9258
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9258
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #9, !dbg !9258, !srcloc !9260
  store i8 %1, i8* %ret, align 1, !dbg !9258
  %2 = load i8, i8* %ret, align 1, !dbg !9258
  ret i8 %2, !dbg !9258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #0 !dbg !9261 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9267, metadata !DIExpression()), !dbg !9266
  %0 = load i8, i8* %val.addr, align 1, !dbg !9266
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9266
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #9, !dbg !9266, !srcloc !9268
  ret void, !dbg !9266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #0 !dbg !9269 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9272, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !9274, metadata !DIExpression()), !dbg !9273
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9273
  %1 = bitcast i8* %0 to i16*, !dbg !9273
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #9, !dbg !9273, !srcloc !9275
  store i16 %2, i16* %ret, align 2, !dbg !9273
  %3 = load i16, i16* %ret, align 2, !dbg !9273
  ret i16 %3, !dbg !9273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #0 !dbg !9276 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !9279, metadata !DIExpression()), !dbg !9280
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9281, metadata !DIExpression()), !dbg !9280
  %0 = load i16, i16* %val.addr, align 2, !dbg !9280
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9280
  %2 = bitcast i8* %1 to i16*, !dbg !9280
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #9, !dbg !9280, !srcloc !9282
  ret void, !dbg !9280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !9283 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9288, metadata !DIExpression()), !dbg !9287
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9287
  %1 = bitcast i8* %0 to i32*, !dbg !9287
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #9, !dbg !9287, !srcloc !9289
  store i32 %2, i32* %ret, align 4, !dbg !9287
  %3 = load i32, i32* %ret, align 4, !dbg !9287
  ret i32 %3, !dbg !9287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !9290 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9295, metadata !DIExpression()), !dbg !9294
  %0 = load i32, i32* %val.addr, align 4, !dbg !9294
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9294
  %2 = bitcast i8* %1 to i32*, !dbg !9294
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #9, !dbg !9294, !srcloc !9296
  ret void, !dbg !9294
}

; Function Attrs: noredzone
declare dso_local i32 @ioread32be(i8*) #2

; Function Attrs: noredzone
declare dso_local void @iowrite32be(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @touch_nmi_watchdog() #0 !dbg !9297 {
entry:
  call void @arch_touch_nmi_watchdog() #10, !dbg !9299
  call void @touch_softlockup_watchdog() #10, !dbg !9300
  ret void, !dbg !9301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_touch_nmi_watchdog() #0 !dbg !9302 {
entry:
  ret void, !dbg !9303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @touch_softlockup_watchdog() #0 !dbg !9304 {
entry:
  ret void, !dbg !9305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !9306 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9311, metadata !DIExpression()), !dbg !9313
  %0 = load i64, i64* %__edi, align 8, !dbg !9313
  store i64 %0, i64* %__edi, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9314, metadata !DIExpression()), !dbg !9313
  %1 = load i64, i64* %__esi, align 8, !dbg !9313
  store i64 %1, i64* %__esi, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9315, metadata !DIExpression()), !dbg !9313
  %2 = load i64, i64* %__edx, align 8, !dbg !9313
  store i64 %2, i64* %__edx, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9316, metadata !DIExpression()), !dbg !9313
  %3 = load i64, i64* %__ecx, align 8, !dbg !9313
  store i64 %3, i64* %__ecx, align 8, !dbg !9313
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9317, metadata !DIExpression()), !dbg !9313
  %4 = load i64, i64* %__eax, align 8, !dbg !9313
  store i64 %4, i64* %__eax, align 8, !dbg !9313
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9313
  %6 = call i64 @llvm.read_register.i64(metadata !4942), !dbg !9313
  %7 = load i64, i64* %f.addr, align 8, !dbg !9313
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #9, !dbg !9313, !srcloc !9318
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9313
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9313
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9313
  call void @llvm.write_register.i64(metadata !4942, i64 %asmresult1), !dbg !9313
  ret void, !dbg !9319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @slow_down_io() #0 !dbg !9320 {
entry:
  %0 = load void ()*, void ()** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 2, i32 0), align 8, !dbg !9321
  call void %0() #10, !dbg !9322
  ret void, !dbg !9323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !9324 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !9331, metadata !DIExpression()), !dbg !9333
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !9335, metadata !DIExpression()), !dbg !9336
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !9337, metadata !DIExpression()), !dbg !9338
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9339, metadata !DIExpression()), !dbg !9341
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9343, metadata !DIExpression()), !dbg !9344
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9345, metadata !DIExpression()), !dbg !9347
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9349, metadata !DIExpression()), !dbg !9350
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9355
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9356
  %div = sdiv i64 %1, 64, !dbg !9356
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9357
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9355
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9358
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9359
  %conv.i = trunc i64 %4 to i32, !dbg !9359
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !9360
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9361
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9361
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !9361
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9362
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !9362
  br i1 %8, label %cond.true, label %cond.false, !dbg !9362

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !9362
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !9362
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !9363
  %and.i = and i64 %11, 63, !dbg !9364
  %shl.i = shl i64 1, %and.i, !dbg !9365
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !9366
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9367
  %shr.i = ashr i64 %13, 6, !dbg !9368
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !9366
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !9366
  %and1.i = and i64 %shl.i, %14, !dbg !9369
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !9370
  %conv = zext i1 %cmp.i to i32, !dbg !9362
  br label %cond.end, !dbg !9362

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !9362
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !9362
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !9371
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !9372
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #9, !dbg !9373, !srcloc !9374
  store i8 %19, i8* %oldbit.i, align 1, !dbg !9373
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !9375
  %tobool.i = trunc i8 %20 to i1, !dbg !9375
  %conv2 = zext i1 %tobool.i to i32, !dbg !9362
  br label %cond.end, !dbg !9362

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !9362
  %tobool = icmp ne i32 %cond, 0, !dbg !9362
  ret i1 %tobool, !dbg !9376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !9377 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9378, metadata !DIExpression()), !dbg !9379
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9380, metadata !DIExpression()), !dbg !9381
  ret i1 true, !dbg !9382
}

; Function Attrs: noredzone
declare dso_local i32 @uart_get_baud_rate(%struct.uart_port*, %struct.ktermios*, %struct.ktermios*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_do_get_divisor(%struct.uart_port* %port, i32 %baud, i32* %frac) #0 !dbg !9383 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %baud.addr = alloca i32, align 4
  %frac.addr = alloca i32*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %quot = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  store i32* %frac, i32** %frac.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %frac.addr, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9390, metadata !DIExpression()), !dbg !9391
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9392
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9393
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9391
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !9394, metadata !DIExpression()), !dbg !9395
  %1 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9396
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 33, !dbg !9398
  %2 = load i32, i32* %flags, align 8, !dbg !9398
  %and = and i32 %2, 65536, !dbg !9399
  %tobool = icmp ne i32 %and, 0, !dbg !9399
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9400

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %baud.addr, align 4, !dbg !9401
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9402
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 22, !dbg !9403
  %5 = load i32, i32* %uartclk, align 8, !dbg !9403
  %div = udiv i32 %5, 4, !dbg !9404
  %cmp = icmp eq i32 %3, %div, !dbg !9405
  br i1 %cmp, label %if.then, label %if.else, !dbg !9406

if.then:                                          ; preds = %land.lhs.true
  store i32 32769, i32* %quot, align 4, !dbg !9407
  br label %if.end17, !dbg !9408

if.else:                                          ; preds = %land.lhs.true, %entry
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9409
  %flags1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 33, !dbg !9411
  %7 = load i32, i32* %flags1, align 8, !dbg !9411
  %and2 = and i32 %7, 65536, !dbg !9412
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9412
  br i1 %tobool3, label %land.lhs.true4, label %if.else9, !dbg !9413

land.lhs.true4:                                   ; preds = %if.else
  %8 = load i32, i32* %baud.addr, align 4, !dbg !9414
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9415
  %uartclk5 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 22, !dbg !9416
  %10 = load i32, i32* %uartclk5, align 8, !dbg !9416
  %div6 = udiv i32 %10, 8, !dbg !9417
  %cmp7 = icmp eq i32 %8, %div6, !dbg !9418
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !9419

if.then8:                                         ; preds = %land.lhs.true4
  store i32 32770, i32* %quot, align 4, !dbg !9420
  br label %if.end16, !dbg !9421

if.else9:                                         ; preds = %land.lhs.true4, %if.else
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9422
  %port10 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %11, i32 0, i32 0, !dbg !9424
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port10, i32 0, i32 38, !dbg !9425
  %12 = load i32, i32* %type, align 4, !dbg !9425
  %cmp11 = icmp eq i32 %12, 40, !dbg !9426
  br i1 %cmp11, label %if.then12, label %if.else14, !dbg !9427

if.then12:                                        ; preds = %if.else9
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9428
  %14 = load i32, i32* %baud.addr, align 4, !dbg !9429
  %call13 = call i32 @npcm_get_divisor(%struct.uart_8250_port* %13, i32 %14) #10, !dbg !9430
  store i32 %call13, i32* %quot, align 4, !dbg !9431
  br label %if.end, !dbg !9432

if.else14:                                        ; preds = %if.else9
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9433
  %16 = load i32, i32* %baud.addr, align 4, !dbg !9434
  %call15 = call i32 @uart_get_divisor(%struct.uart_port* %15, i32 %16) #10, !dbg !9435
  store i32 %call15, i32* %quot, align 4, !dbg !9436
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then12
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9437
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %17, i32 0, i32 4, !dbg !9439
  %18 = load i16, i16* %bugs, align 4, !dbg !9439
  %conv = zext i16 %18 to i32, !dbg !9437
  %and18 = and i32 %conv, 1, !dbg !9440
  %tobool19 = icmp ne i32 %and18, 0, !dbg !9440
  br i1 %tobool19, label %land.lhs.true20, label %if.end25, !dbg !9441

land.lhs.true20:                                  ; preds = %if.end17
  %19 = load i32, i32* %quot, align 4, !dbg !9442
  %and21 = and i32 %19, 255, !dbg !9443
  %cmp22 = icmp eq i32 %and21, 0, !dbg !9444
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9445

if.then24:                                        ; preds = %land.lhs.true20
  %20 = load i32, i32* %quot, align 4, !dbg !9446
  %inc = add i32 %20, 1, !dbg !9446
  store i32 %inc, i32* %quot, align 4, !dbg !9446
  br label %if.end25, !dbg !9447

if.end25:                                         ; preds = %if.then24, %land.lhs.true20, %if.end17
  %21 = load i32, i32* %quot, align 4, !dbg !9448
  ret i32 %21, !dbg !9449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @npcm_get_divisor(%struct.uart_8250_port* %up, i32 %baud) #0 !dbg !9450 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %baud.addr = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !9453, metadata !DIExpression()), !dbg !9454
  store i32 %baud, i32* %baud.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baud.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9457, metadata !DIExpression()), !dbg !9458
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !9459
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !9460
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !9458
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !9461, metadata !DIExpression()), !dbg !9463
  %1 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9463
  %uartclk = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 22, !dbg !9463
  %2 = load i32, i32* %uartclk, align 8, !dbg !9463
  store i32 %2, i32* %__x, align 4, !dbg !9463
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !9464, metadata !DIExpression()), !dbg !9463
  %3 = load i32, i32* %baud.addr, align 4, !dbg !9463
  %mul = mul i32 16, %3, !dbg !9463
  %add = add i32 %mul, 2, !dbg !9463
  store i32 %add, i32* %__d, align 4, !dbg !9463
  %4 = load i32, i32* %__x, align 4, !dbg !9463
  %5 = load i32, i32* %__d, align 4, !dbg !9463
  %div = udiv i32 %5, 2, !dbg !9463
  %add2 = add i32 %4, %div, !dbg !9463
  %6 = load i32, i32* %__d, align 4, !dbg !9463
  %div3 = udiv i32 %add2, %6, !dbg !9463
  store i32 %div3, i32* %tmp, align 4, !dbg !9463
  %7 = load i32, i32* %tmp, align 4, !dbg !9463
  %sub = sub i32 %7, 2, !dbg !9465
  ret i32 %sub, !dbg !9466
}

; Function Attrs: noredzone
declare dso_local i32 @uart_get_divisor(%struct.uart_port*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mctrl_gpio_enable_ms(%struct.mctrl_gpios*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !9467 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9468, metadata !DIExpression()), !dbg !9470
  %0 = load i64, i64* %__edi, align 8, !dbg !9470
  store i64 %0, i64* %__edi, align 8, !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9471, metadata !DIExpression()), !dbg !9470
  %1 = load i64, i64* %__esi, align 8, !dbg !9470
  store i64 %1, i64* %__esi, align 8, !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9472, metadata !DIExpression()), !dbg !9470
  %2 = load i64, i64* %__edx, align 8, !dbg !9470
  store i64 %2, i64* %__edx, align 8, !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9473, metadata !DIExpression()), !dbg !9470
  %3 = load i64, i64* %__ecx, align 8, !dbg !9470
  store i64 %3, i64* %__ecx, align 8, !dbg !9470
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9474, metadata !DIExpression()), !dbg !9470
  %4 = load i64, i64* %__eax, align 8, !dbg !9470
  store i64 %4, i64* %__eax, align 8, !dbg !9470
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !9470
  %6 = call i64 @llvm.read_register.i64(metadata !4942), !dbg !9470
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #9, !dbg !9470, !srcloc !9475
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9470
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9470
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9470
  call void @llvm.write_register.i64(metadata !4942, i64 %asmresult1), !dbg !9470
  ret void, !dbg !9476
}

; Function Attrs: noredzone
declare dso_local void @mctrl_gpio_disable_ms(%struct.mctrl_gpios*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_tx_empty(%struct.uart_port* %port) #0 !dbg !9477 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !6335, metadata !DIExpression()), !dbg !9478
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !9480
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !9481
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %lsr = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9492
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9493
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9491
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9494, metadata !DIExpression()), !dbg !9495
  call void @llvm.dbg.declare(metadata i32* %lsr, metadata !9496, metadata !DIExpression()), !dbg !9497
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9498
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !9499
  br label %do.body, !dbg !9500

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9501

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9505, metadata !DIExpression()), !dbg !9504
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9504
  %conv = zext i1 %cmp to i32, !dbg !9504
  store i32 1, i32* %tmp, align 4, !dbg !9504
  %2 = load i32, i32* %tmp, align 4, !dbg !9504
  br label %do.body2, !dbg !9506

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9507

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9508

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9510, metadata !DIExpression()), !dbg !9513
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9514, metadata !DIExpression()), !dbg !9513
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9513
  %conv8 = zext i1 %cmp7 to i32, !dbg !9513
  store i32 1, i32* %tmp9, align 4, !dbg !9513
  %3 = load i32, i32* %tmp9, align 4, !dbg !9513
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !9515
  store i64 %call10, i64* %flags, align 8, !dbg !9515
  br label %do.end, !dbg !9515

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9508

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9507

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9516, !srcloc !9517
  br label %do.body13, !dbg !9516

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9518
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !9518
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9519
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9520
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !9520
  br label %do.end15, !dbg !9518

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9516

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9507

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9506

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9501

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9521
  %call20 = call i32 @serial_port_in(%struct.uart_port* %7, i32 5) #10, !dbg !9522
  store i32 %call20, i32* %lsr, align 4, !dbg !9523
  %8 = load i32, i32* %lsr, align 4, !dbg !9524
  %and = and i32 %8, 30, !dbg !9525
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9526
  %lsr_saved_flags = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 19, !dbg !9527
  %10 = load i8, i8* %lsr_saved_flags, align 8, !dbg !9528
  %conv21 = zext i8 %10 to i32, !dbg !9528
  %or = or i32 %conv21, %and, !dbg !9528
  %conv22 = trunc i32 %or to i8, !dbg !9528
  store i8 %conv22, i8* %lsr_saved_flags, align 8, !dbg !9528
  %11 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9529
  %lock23 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 0, !dbg !9530
  %12 = load i64, i64* %flags, align 8, !dbg !9531
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !9532
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !9532
  store i32 1, i32* %tmp.i, align 4, !dbg !9532
  %13 = load i32, i32* %tmp.i, align 4, !dbg !9532
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !9533
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !9533
  store i32 1, i32* %tmp8.i, align 4, !dbg !9533
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !9533
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !9534
  call void @arch_local_irq_restore(i64 %15) #12, !dbg !9534
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9535, !srcloc !6365
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !9536
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !9536
  %rlock.i28 = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !9536
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9537
  call void @serial8250_rpm_put(%struct.uart_8250_port* %18) #10, !dbg !9538
  %19 = load i32, i32* %lsr, align 4, !dbg !9539
  %and24 = and i32 %19, 96, !dbg !9540
  %cmp25 = icmp eq i32 %and24, 96, !dbg !9541
  %20 = zext i1 %cmp25 to i64, !dbg !9542
  %cond = select i1 %cmp25, i32 1, i32 0, !dbg !9542
  ret i32 %cond, !dbg !9543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_get_mctrl(%struct.uart_port* %port) #0 !dbg !9544 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9545, metadata !DIExpression()), !dbg !9546
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9547
  %get_mctrl = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 7, !dbg !9549
  %1 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl, align 8, !dbg !9549
  %tobool = icmp ne i32 (%struct.uart_port*)* %1, null, !dbg !9547
  br i1 %tobool, label %if.then, label %if.end, !dbg !9550

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9551
  %get_mctrl1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 7, !dbg !9552
  %3 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %get_mctrl1, align 8, !dbg !9552
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9553
  %call = call i32 %3(%struct.uart_port* %4) #10, !dbg !9551
  store i32 %call, i32* %retval, align 4, !dbg !9554
  br label %return, !dbg !9554

if.end:                                           ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9555
  %call2 = call i32 @serial8250_do_get_mctrl(%struct.uart_port* %5) #10, !dbg !9556
  store i32 %call2, i32* %retval, align 4, !dbg !9557
  br label %return, !dbg !9557

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9558
  ret i32 %6, !dbg !9558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_start_tx(%struct.uart_port* %port) #0 !dbg !9559 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9562, metadata !DIExpression()), !dbg !9563
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9564
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9565
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9563
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !9566, metadata !DIExpression()), !dbg !9567
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9568
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 25, !dbg !9569
  %2 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4851, align 8, !dbg !9569
  store %struct.uart_8250_em485* %2, %struct.uart_8250_em485** %em485, align 8, !dbg !9567
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9570
  call void @serial8250_rpm_get_tx(%struct.uart_8250_port* %3) #10, !dbg !9571
  %4 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9572
  %tobool = icmp ne %struct.uart_8250_em485* %4, null, !dbg !9572
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9574

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9575
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 2, !dbg !9576
  %6 = load %struct.hrtimer*, %struct.hrtimer** %active_timer, align 8, !dbg !9576
  %7 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9577
  %start_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %7, i32 0, i32 0, !dbg !9578
  %cmp = icmp eq %struct.hrtimer* %6, %start_tx_timer, !dbg !9579
  br i1 %cmp, label %if.then, label %if.end, !dbg !9580

if.then:                                          ; preds = %land.lhs.true
  br label %if.end4, !dbg !9581

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9582
  %tobool2 = icmp ne %struct.uart_8250_em485* %8, null, !dbg !9582
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !9584

if.then3:                                         ; preds = %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9585
  call void @start_tx_rs485(%struct.uart_port* %9) #10, !dbg !9586
  br label %if.end4, !dbg !9586

if.else:                                          ; preds = %if.end
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9587
  call void @__start_tx(%struct.uart_port* %10) #10, !dbg !9588
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !9589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_throttle(%struct.uart_port* %port) #0 !dbg !9590 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9591, metadata !DIExpression()), !dbg !9592
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9593
  %throttle = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 13, !dbg !9594
  %1 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %throttle, align 8, !dbg !9594
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9595
  call void %1(%struct.uart_port* %2) #10, !dbg !9593
  ret void, !dbg !9596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_unthrottle(%struct.uart_port* %port) #0 !dbg !9597 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9600
  %unthrottle = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 14, !dbg !9601
  %1 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %unthrottle, align 8, !dbg !9601
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9602
  call void %1(%struct.uart_port* %2) #10, !dbg !9600
  ret void, !dbg !9603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_break_ctl(%struct.uart_port* %port, i32 %break_state) #0 !dbg !9604 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !6335, metadata !DIExpression()), !dbg !9605
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !9607
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !9608
  %port.addr = alloca %struct.uart_port*, align 8
  %break_state.addr = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9615, metadata !DIExpression()), !dbg !9616
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !9617, metadata !DIExpression()), !dbg !9618
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9619, metadata !DIExpression()), !dbg !9620
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9621
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9622
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9620
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9623, metadata !DIExpression()), !dbg !9624
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9625
  call void @serial8250_rpm_get(%struct.uart_8250_port* %1) #10, !dbg !9626
  br label %do.body, !dbg !9627

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9628

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9629, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9632, metadata !DIExpression()), !dbg !9631
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9631
  %conv = zext i1 %cmp to i32, !dbg !9631
  store i32 1, i32* %tmp, align 4, !dbg !9631
  %2 = load i32, i32* %tmp, align 4, !dbg !9631
  br label %do.body2, !dbg !9633

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9634

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9635

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9637, metadata !DIExpression()), !dbg !9640
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9641, metadata !DIExpression()), !dbg !9640
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9640
  %conv8 = zext i1 %cmp7 to i32, !dbg !9640
  store i32 1, i32* %tmp9, align 4, !dbg !9640
  %3 = load i32, i32* %tmp9, align 4, !dbg !9640
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !9642
  store i64 %call10, i64* %flags, align 8, !dbg !9642
  br label %do.end, !dbg !9642

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !9635

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9634

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9643, !srcloc !9644
  br label %do.body13, !dbg !9643

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9645
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 0, !dbg !9645
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9646
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9647
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !9647
  br label %do.end15, !dbg !9645

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9643

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9634

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9633

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9628

do.end19:                                         ; preds = %do.end18
  %7 = load i32, i32* %break_state.addr, align 4, !dbg !9648
  %cmp20 = icmp eq i32 %7, -1, !dbg !9650
  br i1 %cmp20, label %if.then, label %if.else, !dbg !9651

if.then:                                          ; preds = %do.end19
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9652
  %lcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 10, !dbg !9653
  %9 = load i8, i8* %lcr, align 1, !dbg !9654
  %conv22 = zext i8 %9 to i32, !dbg !9654
  %or = or i32 %conv22, 64, !dbg !9654
  %conv23 = trunc i32 %or to i8, !dbg !9654
  store i8 %conv23, i8* %lcr, align 1, !dbg !9654
  br label %if.end, !dbg !9652

if.else:                                          ; preds = %do.end19
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9655
  %lcr24 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 10, !dbg !9656
  %11 = load i8, i8* %lcr24, align 1, !dbg !9657
  %conv25 = zext i8 %11 to i32, !dbg !9657
  %and = and i32 %conv25, -65, !dbg !9657
  %conv26 = trunc i32 %and to i8, !dbg !9657
  store i8 %conv26, i8* %lcr24, align 1, !dbg !9657
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9658
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9659
  %lcr27 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 10, !dbg !9660
  %14 = load i8, i8* %lcr27, align 1, !dbg !9660
  %conv28 = zext i8 %14 to i32, !dbg !9659
  call void @serial_port_out(%struct.uart_port* %12, i32 3, i32 %conv28) #10, !dbg !9661
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9662
  %lock29 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 0, !dbg !9663
  %16 = load i64, i64* %flags, align 8, !dbg !9664
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !9665
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !9665
  store i32 1, i32* %tmp.i, align 4, !dbg !9665
  %17 = load i32, i32* %tmp.i, align 4, !dbg !9665
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !9666
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !9666
  store i32 1, i32* %tmp8.i, align 4, !dbg !9666
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !9666
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !9667
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !9667
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9668, !srcloc !6365
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !9669
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9669
  %rlock.i31 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !9669
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9670
  call void @serial8250_rpm_put(%struct.uart_8250_port* %22) #10, !dbg !9671
  ret void, !dbg !9672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_startup(%struct.uart_port* %port) #0 !dbg !9673 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9674, metadata !DIExpression()), !dbg !9675
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9676
  %startup = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 11, !dbg !9678
  %1 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %startup, align 8, !dbg !9678
  %tobool = icmp ne i32 (%struct.uart_port*)* %1, null, !dbg !9676
  br i1 %tobool, label %if.then, label %if.end, !dbg !9679

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9680
  %startup1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 11, !dbg !9681
  %3 = load i32 (%struct.uart_port*)*, i32 (%struct.uart_port*)** %startup1, align 8, !dbg !9681
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9682
  %call = call i32 %3(%struct.uart_port* %4) #10, !dbg !9680
  store i32 %call, i32* %retval, align 4, !dbg !9683
  br label %return, !dbg !9683

if.end:                                           ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9684
  %call2 = call i32 @serial8250_do_startup(%struct.uart_port* %5) #10, !dbg !9685
  store i32 %call2, i32* %retval, align 4, !dbg !9686
  br label %return, !dbg !9686

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9687
  ret i32 %6, !dbg !9687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_shutdown(%struct.uart_port* %port) #0 !dbg !9688 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9691
  %shutdown = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 12, !dbg !9693
  %1 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %shutdown, align 8, !dbg !9693
  %tobool = icmp ne void (%struct.uart_port*)* %1, null, !dbg !9691
  br i1 %tobool, label %if.then, label %if.else, !dbg !9694

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9695
  %shutdown1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 12, !dbg !9696
  %3 = load void (%struct.uart_port*)*, void (%struct.uart_port*)** %shutdown1, align 8, !dbg !9696
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9697
  call void %3(%struct.uart_port* %4) #10, !dbg !9695
  br label %if.end, !dbg !9695

if.else:                                          ; preds = %entry
  %5 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9698
  call void @serial8250_do_shutdown(%struct.uart_port* %5) #10, !dbg !9699
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_set_termios(%struct.uart_port* %port, %struct.ktermios* %termios, %struct.ktermios* %old) #0 !dbg !9701 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  %old.addr = alloca %struct.ktermios*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !9704, metadata !DIExpression()), !dbg !9705
  store %struct.ktermios* %old, %struct.ktermios** %old.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9708
  %set_termios = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 5, !dbg !9710
  %1 = load void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)** %set_termios, align 8, !dbg !9710
  %tobool = icmp ne void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)* %1, null, !dbg !9708
  br i1 %tobool, label %if.then, label %if.else, !dbg !9711

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9712
  %set_termios1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 5, !dbg !9713
  %3 = load void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*, %struct.ktermios*)** %set_termios1, align 8, !dbg !9713
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9714
  %5 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !9715
  %6 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !9716
  call void %3(%struct.uart_port* %4, %struct.ktermios* %5, %struct.ktermios* %6) #10, !dbg !9712
  br label %if.end, !dbg !9712

if.else:                                          ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9717
  %8 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !9718
  %9 = load %struct.ktermios*, %struct.ktermios** %old.addr, align 8, !dbg !9719
  call void @serial8250_do_set_termios(%struct.uart_port* %7, %struct.ktermios* %8, %struct.ktermios* %9) #10, !dbg !9720
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_set_ldisc(%struct.uart_port* %port, %struct.ktermios* %termios) #0 !dbg !9722 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %termios.addr = alloca %struct.ktermios*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  store %struct.ktermios* %termios, %struct.ktermios** %termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %termios.addr, metadata !9725, metadata !DIExpression()), !dbg !9726
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9727
  %set_ldisc = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 6, !dbg !9729
  %1 = load void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)** %set_ldisc, align 8, !dbg !9729
  %tobool = icmp ne void (%struct.uart_port*, %struct.ktermios*)* %1, null, !dbg !9727
  br i1 %tobool, label %if.then, label %if.else, !dbg !9730

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9731
  %set_ldisc1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 6, !dbg !9732
  %3 = load void (%struct.uart_port*, %struct.ktermios*)*, void (%struct.uart_port*, %struct.ktermios*)** %set_ldisc1, align 8, !dbg !9732
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9733
  %5 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !9734
  call void %3(%struct.uart_port* %4, %struct.ktermios* %5) #10, !dbg !9731
  br label %if.end, !dbg !9731

if.else:                                          ; preds = %entry
  %6 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9735
  %7 = load %struct.ktermios*, %struct.ktermios** %termios.addr, align 8, !dbg !9736
  call void @serial8250_do_set_ldisc(%struct.uart_port* %6, %struct.ktermios* %7) #10, !dbg !9737
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_pm(%struct.uart_port* %port, i32 %state, i32 %oldstate) #0 !dbg !9739 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %state.addr = alloca i32, align 4
  %oldstate.addr = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i32 %oldstate, i32* %oldstate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldstate.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9746
  %pm = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 16, !dbg !9748
  %1 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %pm, align 8, !dbg !9748
  %tobool = icmp ne void (%struct.uart_port*, i32, i32)* %1, null, !dbg !9746
  br i1 %tobool, label %if.then, label %if.else, !dbg !9749

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9750
  %pm1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 16, !dbg !9751
  %3 = load void (%struct.uart_port*, i32, i32)*, void (%struct.uart_port*, i32, i32)** %pm1, align 8, !dbg !9751
  %4 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9752
  %5 = load i32, i32* %state.addr, align 4, !dbg !9753
  %6 = load i32, i32* %oldstate.addr, align 4, !dbg !9754
  call void %3(%struct.uart_port* %4, i32 %5, i32 %6) #10, !dbg !9750
  br label %if.end, !dbg !9750

if.else:                                          ; preds = %entry
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9755
  %8 = load i32, i32* %state.addr, align 4, !dbg !9756
  %9 = load i32, i32* %oldstate.addr, align 4, !dbg !9757
  call void @serial8250_do_pm(%struct.uart_port* %7, i32 %8, i32 %9) #10, !dbg !9758
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @serial8250_type(%struct.uart_port* %port) #0 !dbg !9760 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %type = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.declare(metadata i32* %type, metadata !9763, metadata !DIExpression()), !dbg !9764
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9765
  %type1 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %0, i32 0, i32 38, !dbg !9766
  %1 = load i32, i32* %type1, align 4, !dbg !9766
  store i32 %1, i32* %type, align 4, !dbg !9764
  %2 = load i32, i32* %type, align 4, !dbg !9767
  %conv = sext i32 %2 to i64, !dbg !9767
  %cmp = icmp uge i64 %conv, 122, !dbg !9769
  br i1 %cmp, label %if.then, label %if.end, !dbg !9770

if.then:                                          ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !9771
  br label %if.end, !dbg !9772

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %type, align 4, !dbg !9773
  %idxprom = sext i32 %3 to i64, !dbg !9774
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !9774
  %name = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx, i32 0, i32 0, !dbg !9775
  %4 = load i8*, i8** %name, align 8, !dbg !9775
  ret i8* %4, !dbg !9776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_release_port(%struct.uart_port* %port) #0 !dbg !9777 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9780, metadata !DIExpression()), !dbg !9781
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9782
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9783
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9781
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9784
  call void @serial8250_release_std_resource(%struct.uart_8250_port* %1) #10, !dbg !9785
  ret void, !dbg !9786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_request_port(%struct.uart_port* %port) #0 !dbg !9787 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9790, metadata !DIExpression()), !dbg !9791
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9792
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9793
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9791
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9794
  %call1 = call i32 @serial8250_request_std_resource(%struct.uart_8250_port* %1) #10, !dbg !9795
  ret i32 %call1, !dbg !9796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_config_port(%struct.uart_port* %port, i32 %flags) #0 !dbg !9797 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %flags.addr = alloca i32, align 4
  %up = alloca %struct.uart_8250_port*, align 8
  %ret = alloca i32, align 4
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9800, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9802, metadata !DIExpression()), !dbg !9803
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9804
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9805
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9803
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9806, metadata !DIExpression()), !dbg !9807
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9808
  %call1 = call i32 @serial8250_request_std_resource(%struct.uart_8250_port* %1) #10, !dbg !9809
  store i32 %call1, i32* %ret, align 4, !dbg !9810
  %2 = load i32, i32* %ret, align 4, !dbg !9811
  %cmp = icmp slt i32 %2, 0, !dbg !9813
  br i1 %cmp, label %if.then, label %if.end, !dbg !9814

if.then:                                          ; preds = %entry
  br label %return, !dbg !9815

if.end:                                           ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9816
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 26, !dbg !9818
  %4 = load i8, i8* %iotype, align 2, !dbg !9818
  %conv = zext i8 %4 to i32, !dbg !9816
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9819
  %cur_iotype = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %5, i32 0, i32 14, !dbg !9820
  %6 = load i8, i8* %cur_iotype, align 1, !dbg !9820
  %conv2 = zext i8 %6 to i32, !dbg !9819
  %cmp3 = icmp ne i32 %conv, %conv2, !dbg !9821
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9822

if.then5:                                         ; preds = %if.end
  %7 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9823
  call void @set_io_from_upio(%struct.uart_port* %7) #10, !dbg !9824
  br label %if.end6, !dbg !9824

if.end6:                                          ; preds = %if.then5, %if.end
  %8 = load i32, i32* %flags.addr, align 4, !dbg !9825
  %and = and i32 %8, 1, !dbg !9827
  %tobool = icmp ne i32 %and, 0, !dbg !9827
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !9828

if.then7:                                         ; preds = %if.end6
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9829
  call void @autoconfig(%struct.uart_8250_port* %9) #10, !dbg !9830
  br label %if.end8, !dbg !9830

if.end8:                                          ; preds = %if.then7, %if.end6
  %10 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9831
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 56, !dbg !9833
  %flags9 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 0, !dbg !9834
  %11 = load i32, i32* %flags9, align 8, !dbg !9834
  %and10 = and i32 %11, 1, !dbg !9835
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9835
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !9836

if.then12:                                        ; preds = %if.end8
  %12 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9837
  %rs485_config = getelementptr inbounds %struct.uart_port, %struct.uart_port* %12, i32 0, i32 18, !dbg !9838
  %13 = load i32 (%struct.uart_port*, %struct.serial_rs485*)*, i32 (%struct.uart_port*, %struct.serial_rs485*)** %rs485_config, align 8, !dbg !9838
  %14 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9839
  %15 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9840
  %rs48513 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 56, !dbg !9841
  %call14 = call i32 %13(%struct.uart_port* %14, %struct.serial_rs485* %rs48513) #10, !dbg !9837
  br label %if.end15, !dbg !9837

if.end15:                                         ; preds = %if.then12, %if.end8
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9842
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %16, i32 0, i32 38, !dbg !9844
  %17 = load i32, i32* %type, align 4, !dbg !9844
  %cmp16 = icmp eq i32 %17, 4, !dbg !9845
  br i1 %cmp16, label %land.lhs.true, label %if.end25, !dbg !9846

land.lhs.true:                                    ; preds = %if.end15
  %18 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9847
  %iotype18 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %18, i32 0, i32 26, !dbg !9848
  %19 = load i8, i8* %iotype18, align 2, !dbg !9848
  %conv19 = zext i8 %19 to i32, !dbg !9847
  %cmp20 = icmp eq i32 %conv19, 4, !dbg !9849
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !9850

if.then22:                                        ; preds = %land.lhs.true
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9851
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %20, i32 0, i32 4, !dbg !9852
  %21 = load i16, i16* %bugs, align 4, !dbg !9853
  %conv23 = zext i16 %21 to i32, !dbg !9853
  %or = or i32 %conv23, 4, !dbg !9853
  %conv24 = trunc i32 %or to i16, !dbg !9853
  store i16 %conv24, i16* %bugs, align 4, !dbg !9853
  br label %if.end25, !dbg !9851

if.end25:                                         ; preds = %if.then22, %land.lhs.true, %if.end15
  %22 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9854
  %type26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %22, i32 0, i32 38, !dbg !9856
  %23 = load i32, i32* %type26, align 4, !dbg !9856
  %cmp27 = icmp eq i32 %23, 20, !dbg !9857
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !9858

if.then29:                                        ; preds = %if.end25
  %24 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9859
  %bugs30 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %24, i32 0, i32 4, !dbg !9860
  %25 = load i16, i16* %bugs30, align 4, !dbg !9861
  %conv31 = zext i16 %25 to i32, !dbg !9861
  %or32 = or i32 %conv31, 4, !dbg !9861
  %conv33 = trunc i32 %or32 to i16, !dbg !9861
  store i16 %conv33, i16* %bugs30, align 4, !dbg !9861
  br label %if.end34, !dbg !9859

if.end34:                                         ; preds = %if.then29, %if.end25
  %26 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9862
  %type35 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %26, i32 0, i32 38, !dbg !9864
  %27 = load i32, i32* %type35, align 4, !dbg !9864
  %cmp36 = icmp ne i32 %27, 0, !dbg !9865
  br i1 %cmp36, label %land.lhs.true38, label %if.end42, !dbg !9866

land.lhs.true38:                                  ; preds = %if.end34
  %28 = load i32, i32* %flags.addr, align 4, !dbg !9867
  %and39 = and i32 %28, 2, !dbg !9868
  %tobool40 = icmp ne i32 %and39, 0, !dbg !9868
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !9869

if.then41:                                        ; preds = %land.lhs.true38
  %29 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9870
  call void @autoconfig_irq(%struct.uart_8250_port* %29) #10, !dbg !9871
  br label %if.end42, !dbg !9871

if.end42:                                         ; preds = %if.then41, %land.lhs.true38, %if.end34
  %30 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9872
  %type43 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %30, i32 0, i32 38, !dbg !9874
  %31 = load i32, i32* %type43, align 4, !dbg !9874
  %cmp44 = icmp eq i32 %31, 0, !dbg !9875
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !9876

if.then46:                                        ; preds = %if.end42
  %32 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9877
  call void @serial8250_release_std_resource(%struct.uart_8250_port* %32) #10, !dbg !9878
  br label %if.end47, !dbg !9878

if.end47:                                         ; preds = %if.then46, %if.end42
  %33 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9879
  call void @register_dev_spec_attr_grp(%struct.uart_8250_port* %33) #10, !dbg !9880
  %34 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9881
  %port48 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %34, i32 0, i32 0, !dbg !9882
  %type49 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port48, i32 0, i32 38, !dbg !9883
  %35 = load i32, i32* %type49, align 4, !dbg !9883
  %idxprom = zext i32 %35 to i64, !dbg !9884
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !9884
  %fcr = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx, i32 0, i32 3, !dbg !9885
  %36 = load i8, i8* %fcr, align 4, !dbg !9885
  %37 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9886
  %fcr50 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %37, i32 0, i32 8, !dbg !9887
  store i8 %36, i8* %fcr50, align 1, !dbg !9888
  br label %return, !dbg !9889

return:                                           ; preds = %if.end47, %if.then
  ret void, !dbg !9889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_verify_port(%struct.uart_port* %port, %struct.serial_struct* %ser) #0 !dbg !9890 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.uart_port*, align 8
  %ser.addr = alloca %struct.serial_struct*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  store %struct.serial_struct* %ser, %struct.serial_struct** %ser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ser.addr, metadata !9893, metadata !DIExpression()), !dbg !9894
  %0 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9895
  %irq = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %0, i32 0, i32 3, !dbg !9897
  %1 = load i32, i32* %irq, align 4, !dbg !9897
  %2 = load i32, i32* @nr_irqs, align 4, !dbg !9898
  %cmp = icmp sge i32 %1, %2, !dbg !9899
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9900

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9901
  %irq1 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %3, i32 0, i32 3, !dbg !9902
  %4 = load i32, i32* %irq1, align 4, !dbg !9902
  %cmp2 = icmp slt i32 %4, 0, !dbg !9903
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !9904

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %5 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9905
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %5, i32 0, i32 7, !dbg !9906
  %6 = load i32, i32* %baud_base, align 4, !dbg !9906
  %cmp4 = icmp slt i32 %6, 9600, !dbg !9907
  br i1 %cmp4, label %if.then, label %lor.lhs.false5, !dbg !9908

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %7 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9909
  %type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %7, i32 0, i32 0, !dbg !9910
  %8 = load i32, i32* %type, align 8, !dbg !9910
  %cmp6 = icmp slt i32 %8, 0, !dbg !9911
  br i1 %cmp6, label %if.then, label %lor.lhs.false7, !dbg !9912

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %9 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9913
  %type8 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %9, i32 0, i32 0, !dbg !9914
  %10 = load i32, i32* %type8, align 8, !dbg !9914
  %conv = sext i32 %10 to i64, !dbg !9913
  %cmp9 = icmp uge i64 %conv, 122, !dbg !9915
  br i1 %cmp9, label %if.then, label %lor.lhs.false11, !dbg !9916

lor.lhs.false11:                                  ; preds = %lor.lhs.false7
  %11 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9917
  %type12 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %11, i32 0, i32 0, !dbg !9918
  %12 = load i32, i32* %type12, align 8, !dbg !9918
  %cmp13 = icmp eq i32 %12, 5, !dbg !9919
  br i1 %cmp13, label %if.then, label %lor.lhs.false15, !dbg !9920

lor.lhs.false15:                                  ; preds = %lor.lhs.false11
  %13 = load %struct.serial_struct*, %struct.serial_struct** %ser.addr, align 8, !dbg !9921
  %type16 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %13, i32 0, i32 0, !dbg !9922
  %14 = load i32, i32* %type16, align 8, !dbg !9922
  %cmp17 = icmp eq i32 %14, 9, !dbg !9923
  br i1 %cmp17, label %if.then, label %if.end, !dbg !9924

if.then:                                          ; preds = %lor.lhs.false15, %lor.lhs.false11, %lor.lhs.false7, %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9925
  br label %return, !dbg !9925

if.end:                                           ; preds = %lor.lhs.false15
  store i32 0, i32* %retval, align 4, !dbg !9926
  br label %return, !dbg !9926

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9927
  ret i32 %15, !dbg !9927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_tx_rs485(%struct.uart_port* %port) #0 !dbg !9928 {
entry:
  %port.addr = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %em485 = alloca %struct.uart_8250_em485*, align 8
  store %struct.uart_port* %port, %struct.uart_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !9931, metadata !DIExpression()), !dbg !9932
  %0 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9933
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %0) #10, !dbg !9934
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !9932
  call void @llvm.dbg.declare(metadata %struct.uart_8250_em485** %em485, metadata !9935, metadata !DIExpression()), !dbg !9936
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9937
  %em4851 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 25, !dbg !9938
  %2 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em4851, align 8, !dbg !9938
  store %struct.uart_8250_em485* %2, %struct.uart_8250_em485** %em485, align 8, !dbg !9936
  %3 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9939
  %active_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %3, i32 0, i32 2, !dbg !9940
  store %struct.hrtimer* null, %struct.hrtimer** %active_timer, align 8, !dbg !9941
  %4 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9942
  %tx_stopped = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %4, i32 0, i32 4, !dbg !9944
  %bf.load = load i8, i8* %tx_stopped, align 8, !dbg !9944
  %bf.clear = and i8 %bf.load, 1, !dbg !9944
  %bf.cast = zext i8 %bf.clear to i32, !dbg !9944
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9942
  br i1 %tobool, label %if.then, label %if.end13, !dbg !9945

if.then:                                          ; preds = %entry
  %5 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9946
  %tx_stopped2 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %5, i32 0, i32 4, !dbg !9948
  %bf.load3 = load i8, i8* %tx_stopped2, align 8, !dbg !9949
  %bf.clear4 = and i8 %bf.load3, -2, !dbg !9949
  store i8 %bf.clear4, i8* %tx_stopped2, align 8, !dbg !9949
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9950
  %rs485_start_tx = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %6, i32 0, i32 26, !dbg !9951
  %rs485_start_tx5 = bitcast {}** %rs485_start_tx to void (%struct.uart_8250_port*)**, !dbg !9951
  %7 = load void (%struct.uart_8250_port*)*, void (%struct.uart_8250_port*)** %rs485_start_tx5, align 8, !dbg !9951
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9952
  call void %7(%struct.uart_8250_port* %8) #10, !dbg !9950
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9953
  %port6 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 0, !dbg !9955
  %rs485 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port6, i32 0, i32 56, !dbg !9956
  %delay_rts_before_send = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs485, i32 0, i32 1, !dbg !9957
  %10 = load i32, i32* %delay_rts_before_send, align 4, !dbg !9957
  %cmp = icmp ugt i32 %10, 0, !dbg !9958
  br i1 %cmp, label %if.then7, label %if.end, !dbg !9959

if.then7:                                         ; preds = %if.then
  %11 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9960
  %start_tx_timer = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %11, i32 0, i32 0, !dbg !9962
  %12 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9963
  %active_timer8 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %12, i32 0, i32 2, !dbg !9964
  store %struct.hrtimer* %start_tx_timer, %struct.hrtimer** %active_timer8, align 8, !dbg !9965
  %13 = load %struct.uart_8250_em485*, %struct.uart_8250_em485** %em485, align 8, !dbg !9966
  %start_tx_timer9 = getelementptr inbounds %struct.uart_8250_em485, %struct.uart_8250_em485* %13, i32 0, i32 0, !dbg !9967
  %14 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !9968
  %port10 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %14, i32 0, i32 0, !dbg !9969
  %rs48511 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port10, i32 0, i32 56, !dbg !9970
  %delay_rts_before_send12 = getelementptr inbounds %struct.serial_rs485, %struct.serial_rs485* %rs48511, i32 0, i32 1, !dbg !9971
  %15 = load i32, i32* %delay_rts_before_send12, align 4, !dbg !9971
  %conv = zext i32 %15 to i64, !dbg !9968
  call void @start_hrtimer_ms(%struct.hrtimer* %start_tx_timer9, i64 %conv) #10, !dbg !9972
  br label %return, !dbg !9973

if.end:                                           ; preds = %if.then
  br label %if.end13, !dbg !9974

if.end13:                                         ; preds = %if.end, %entry
  %16 = load %struct.uart_port*, %struct.uart_port** %port.addr, align 8, !dbg !9975
  call void @__start_tx(%struct.uart_port* %16) #10, !dbg !9976
  br label %return, !dbg !9977

return:                                           ; preds = %if.end13, %if.then7
  ret void, !dbg !9977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @serial8250_release_std_resource(%struct.uart_8250_port* %up) #0 !dbg !9978 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %size = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9981, metadata !DIExpression()), !dbg !9982
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !9983
  %call = call i32 @serial8250_port_size(%struct.uart_8250_port* %0) #10, !dbg !9984
  store i32 %call, i32* %size, align 4, !dbg !9982
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !9985, metadata !DIExpression()), !dbg !9986
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !9987
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 0, !dbg !9988
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !9986
  %2 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9989
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 26, !dbg !9990
  %3 = load i8, i8* %iotype, align 2, !dbg !9990
  %conv = zext i8 %3 to i32, !dbg !9989
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 3, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb8
    i32 0, label %sw.bb8
  ], !dbg !9991

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9992
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 43, !dbg !9995
  %5 = load i64, i64* %mapbase, align 8, !dbg !9995
  %tobool = icmp ne i64 %5, 0, !dbg !9992
  br i1 %tobool, label %if.end, label %if.then, !dbg !9996

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !9997

if.end:                                           ; preds = %sw.bb
  %6 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !9998
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 33, !dbg !10000
  %7 = load i32, i32* %flags, align 8, !dbg !10000
  %and = and i32 %7, -2147483648, !dbg !10001
  %tobool2 = icmp ne i32 %and, 0, !dbg !10001
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !10002

if.then3:                                         ; preds = %if.end
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10003
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %8, i32 0, i32 2, !dbg !10005
  %9 = load i8*, i8** %membase, align 8, !dbg !10005
  call void @iounmap(i8* %9) #10, !dbg !10006
  %10 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10007
  %membase4 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 2, !dbg !10008
  store i8* null, i8** %membase4, align 8, !dbg !10009
  br label %if.end5, !dbg !10010

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10011
  %mapbase6 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 43, !dbg !10011
  %12 = load i64, i64* %mapbase6, align 8, !dbg !10011
  %13 = load i32, i32* %size, align 4, !dbg !10011
  %conv7 = zext i32 %13 to i64, !dbg !10011
  call void @__release_region(%struct.resource* @iomem_resource, i64 %12, i64 %conv7) #10, !dbg !10011
  br label %sw.epilog, !dbg !10012

sw.bb8:                                           ; preds = %entry, %entry
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10013
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 1, !dbg !10013
  %15 = load i64, i64* %iobase, align 8, !dbg !10013
  %16 = load i32, i32* %size, align 4, !dbg !10013
  %conv9 = zext i32 %16 to i64, !dbg !10013
  call void @__release_region(%struct.resource* @ioport_resource, i64 %15, i64 %conv9) #10, !dbg !10013
  br label %sw.epilog, !dbg !10014

sw.epilog:                                        ; preds = %entry, %sw.bb8, %if.end5, %if.then
  ret void, !dbg !10015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_port_size(%struct.uart_8250_port* %pt) #0 !dbg !10016 {
entry:
  %retval = alloca i32, align 4
  %pt.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %pt, %struct.uart_8250_port** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %pt.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10019
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10021
  %mapsize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 44, !dbg !10022
  %1 = load i64, i64* %mapsize, align 8, !dbg !10022
  %tobool = icmp ne i64 %1, 0, !dbg !10019
  br i1 %tobool, label %if.then, label %if.end, !dbg !10023

if.then:                                          ; preds = %entry
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10024
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %2, i32 0, i32 0, !dbg !10025
  %mapsize2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port1, i32 0, i32 44, !dbg !10026
  %3 = load i64, i64* %mapsize2, align 8, !dbg !10026
  %conv = trunc i64 %3 to i32, !dbg !10024
  store i32 %conv, i32* %retval, align 4, !dbg !10027
  br label %return, !dbg !10027

if.end:                                           ; preds = %entry
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10028
  %port3 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 0, !dbg !10030
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port3, i32 0, i32 26, !dbg !10031
  %5 = load i8, i8* %iotype, align 2, !dbg !10031
  %conv4 = zext i8 %5 to i32, !dbg !10028
  %cmp = icmp eq i32 %conv4, 4, !dbg !10032
  br i1 %cmp, label %if.then6, label %if.end12, !dbg !10033

if.then6:                                         ; preds = %if.end
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10034
  %port7 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %6, i32 0, i32 0, !dbg !10037
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port7, i32 0, i32 38, !dbg !10038
  %7 = load i32, i32* %type, align 4, !dbg !10038
  %cmp8 = icmp eq i32 %7, 29, !dbg !10039
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10040

if.then10:                                        ; preds = %if.then6
  store i32 256, i32* %retval, align 4, !dbg !10041
  br label %return, !dbg !10041

if.end11:                                         ; preds = %if.then6
  store i32 4096, i32* %retval, align 4, !dbg !10042
  br label %return, !dbg !10042

if.end12:                                         ; preds = %if.end
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10043
  %call = call i32 @is_omap1_8250(%struct.uart_8250_port* %8) #10, !dbg !10045
  %tobool13 = icmp ne i32 %call, 0, !dbg !10045
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !10046

if.then14:                                        ; preds = %if.end12
  %9 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10047
  %port15 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %9, i32 0, i32 0, !dbg !10048
  %regshift = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port15, i32 0, i32 25, !dbg !10049
  %10 = load i8, i8* %regshift, align 1, !dbg !10049
  %conv16 = zext i8 %10 to i32, !dbg !10047
  %shl = shl i32 22, %conv16, !dbg !10050
  store i32 %shl, i32* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

if.end17:                                         ; preds = %if.end12
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %pt.addr, align 8, !dbg !10052
  %port18 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %11, i32 0, i32 0, !dbg !10053
  %regshift19 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port18, i32 0, i32 25, !dbg !10054
  %12 = load i8, i8* %regshift19, align 1, !dbg !10054
  %conv20 = zext i8 %12 to i32, !dbg !10052
  %shl21 = shl i32 8, %conv20, !dbg !10055
  store i32 %shl21, i32* %retval, align 4, !dbg !10056
  br label %return, !dbg !10056

return:                                           ; preds = %if.end17, %if.then14, %if.end11, %if.then10, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10057
  ret i32 %13, !dbg !10057
}

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_omap1_8250(%struct.uart_8250_port* %pt) #0 !dbg !10058 {
entry:
  %pt.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %pt, %struct.uart_8250_port** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %pt.addr, metadata !10059, metadata !DIExpression()), !dbg !10060
  ret i32 0, !dbg !10061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @serial8250_request_std_resource(%struct.uart_8250_port* %up) #0 !dbg !10062 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %size = alloca i32, align 4
  %port = alloca %struct.uart_port*, align 8
  %ret = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata i32* %size, metadata !10065, metadata !DIExpression()), !dbg !10066
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10067
  %call = call i32 @serial8250_port_size(%struct.uart_8250_port* %0) #10, !dbg !10068
  store i32 %call, i32* %size, align 4, !dbg !10066
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !10069, metadata !DIExpression()), !dbg !10070
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10071
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 0, !dbg !10072
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !10070
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10073, metadata !DIExpression()), !dbg !10074
  store i32 0, i32* %ret, align 4, !dbg !10074
  %2 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10075
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %2, i32 0, i32 26, !dbg !10076
  %3 = load i8, i8* %iotype, align 2, !dbg !10076
  %conv = zext i8 %3 to i32, !dbg !10075
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 3, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 2, label %sw.bb
    i32 1, label %sw.bb20
    i32 0, label %sw.bb20
  ], !dbg !10077

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %4 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10078
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %4, i32 0, i32 43, !dbg !10081
  %5 = load i64, i64* %mapbase, align 8, !dbg !10081
  %tobool = icmp ne i64 %5, 0, !dbg !10078
  br i1 %tobool, label %if.end, label %if.then, !dbg !10082

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !10083

if.end:                                           ; preds = %sw.bb
  %6 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10084
  %mapbase2 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %6, i32 0, i32 43, !dbg !10084
  %7 = load i64, i64* %mapbase2, align 8, !dbg !10084
  %8 = load i32, i32* %size, align 4, !dbg !10084
  %conv3 = zext i32 %8 to i64, !dbg !10084
  %call4 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %7, i64 %conv3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i32 0) #10, !dbg !10084
  %tobool5 = icmp ne %struct.resource* %call4, null, !dbg !10084
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10086

if.then6:                                         ; preds = %if.end
  store i32 -16, i32* %ret, align 4, !dbg !10087
  br label %sw.epilog, !dbg !10089

if.end7:                                          ; preds = %if.end
  %9 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10090
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 33, !dbg !10092
  %10 = load i32, i32* %flags, align 8, !dbg !10092
  %and = and i32 %10, -2147483648, !dbg !10093
  %tobool8 = icmp ne i32 %and, 0, !dbg !10093
  br i1 %tobool8, label %if.then9, label %if.end19, !dbg !10094

if.then9:                                         ; preds = %if.end7
  %11 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10095
  %mapbase10 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %11, i32 0, i32 43, !dbg !10097
  %12 = load i64, i64* %mapbase10, align 8, !dbg !10097
  %13 = load i32, i32* %size, align 4, !dbg !10098
  %conv11 = zext i32 %13 to i64, !dbg !10098
  %call12 = call i8* @ioremap(i64 %12, i64 %conv11) #10, !dbg !10099
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10100
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 2, !dbg !10101
  store i8* %call12, i8** %membase, align 8, !dbg !10102
  %15 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10103
  %membase13 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %15, i32 0, i32 2, !dbg !10105
  %16 = load i8*, i8** %membase13, align 8, !dbg !10105
  %tobool14 = icmp ne i8* %16, null, !dbg !10103
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !10106

if.then15:                                        ; preds = %if.then9
  %17 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10107
  %mapbase16 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %17, i32 0, i32 43, !dbg !10107
  %18 = load i64, i64* %mapbase16, align 8, !dbg !10107
  %19 = load i32, i32* %size, align 4, !dbg !10107
  %conv17 = zext i32 %19 to i64, !dbg !10107
  call void @__release_region(%struct.resource* @iomem_resource, i64 %18, i64 %conv17) #10, !dbg !10107
  store i32 -12, i32* %ret, align 4, !dbg !10109
  br label %if.end18, !dbg !10110

if.end18:                                         ; preds = %if.then15, %if.then9
  br label %if.end19, !dbg !10111

if.end19:                                         ; preds = %if.end18, %if.end7
  br label %sw.epilog, !dbg !10112

sw.bb20:                                          ; preds = %entry, %entry
  %20 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10113
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %20, i32 0, i32 1, !dbg !10113
  %21 = load i64, i64* %iobase, align 8, !dbg !10113
  %22 = load i32, i32* %size, align 4, !dbg !10113
  %conv21 = zext i32 %22 to i64, !dbg !10113
  %call22 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %21, i64 %conv21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i32 0) #10, !dbg !10113
  %tobool23 = icmp ne %struct.resource* %call22, null, !dbg !10113
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !10115

if.then24:                                        ; preds = %sw.bb20
  store i32 -16, i32* %ret, align 4, !dbg !10116
  br label %if.end25, !dbg !10117

if.end25:                                         ; preds = %if.then24, %sw.bb20
  br label %sw.epilog, !dbg !10118

sw.epilog:                                        ; preds = %entry, %if.end25, %if.end19, %if.then6, %if.then
  %23 = load i32, i32* %ret, align 4, !dbg !10119
  ret i32 %23, !dbg !10120
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @ioremap(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @autoconfig(%struct.uart_8250_port* %up) #0 !dbg !10121 {
entry:
  %lock.addr.i132 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i132, metadata !6335, metadata !DIExpression()), !dbg !10122
  %flags.addr.i133 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i133, metadata !6341, metadata !DIExpression()), !dbg !10124
  %tmp.i134 = alloca i32, align 4
  %tmp8.i135 = alloca i32, align 4
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !6335, metadata !DIExpression()), !dbg !10125
  %flags.addr.i128 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i128, metadata !6341, metadata !DIExpression()), !dbg !10131
  %tmp.i129 = alloca i32, align 4
  %tmp8.i130 = alloca i32, align 4
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !6335, metadata !DIExpression()), !dbg !10132
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6341, metadata !DIExpression()), !dbg !10138
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6174, metadata !DIExpression()), !dbg !10139
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %status1 = alloca i8, align 1
  %scratch = alloca i8, align 1
  %scratch2 = alloca i8, align 1
  %scratch3 = alloca i8, align 1
  %save_lcr = alloca i8, align 1
  %save_mcr = alloca i8, align 1
  %port = alloca %struct.uart_port*, align 8
  %flags = alloca i64, align 8
  %old_capabilities = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10146, metadata !DIExpression()), !dbg !10147
  call void @llvm.dbg.declare(metadata i8* %status1, metadata !10148, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.declare(metadata i8* %scratch, metadata !10150, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.declare(metadata i8* %scratch2, metadata !10152, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.declare(metadata i8* %scratch3, metadata !10154, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata i8* %save_lcr, metadata !10156, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.declare(metadata i8* %save_mcr, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10162
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10163
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !10161
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10164, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata i32* %old_capabilities, metadata !10166, metadata !DIExpression()), !dbg !10167
  %1 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10168
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 1, !dbg !10170
  %2 = load i64, i64* %iobase, align 8, !dbg !10170
  %tobool = icmp ne i64 %2, 0, !dbg !10168
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10171

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10172
  %mapbase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 43, !dbg !10173
  %4 = load i64, i64* %mapbase, align 8, !dbg !10173
  %tobool2 = icmp ne i64 %4, 0, !dbg !10172
  br i1 %tobool2, label %if.end, label %land.lhs.true3, !dbg !10174

land.lhs.true3:                                   ; preds = %land.lhs.true
  %5 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10175
  %membase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %5, i32 0, i32 2, !dbg !10176
  %6 = load i8*, i8** %membase, align 8, !dbg !10176
  %tobool4 = icmp ne i8* %6, null, !dbg !10175
  br i1 %tobool4, label %if.end, label %if.then, !dbg !10177

if.then:                                          ; preds = %land.lhs.true3
  br label %do.end124, !dbg !10178

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %entry
  br label %do.body, !dbg !10179

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10180

do.end:                                           ; preds = %do.body
  br label %do.body5, !dbg !10182

do.body5:                                         ; preds = %do.end
  br label %do.body6, !dbg !10183

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10184, metadata !DIExpression()), !dbg !10186
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10187, metadata !DIExpression()), !dbg !10186
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10186
  %conv = zext i1 %cmp to i32, !dbg !10186
  store i32 1, i32* %tmp, align 4, !dbg !10186
  %7 = load i32, i32* %tmp, align 4, !dbg !10186
  br label %do.body7, !dbg !10188

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10189

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !10190

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !10192, metadata !DIExpression()), !dbg !10195
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !10196, metadata !DIExpression()), !dbg !10195
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !10195
  %conv13 = zext i1 %cmp12 to i32, !dbg !10195
  store i32 1, i32* %tmp14, align 4, !dbg !10195
  %8 = load i32, i32* %tmp14, align 4, !dbg !10195
  %call = call i64 @arch_local_irq_save() #10, !dbg !10197
  store i64 %call, i64* %flags, align 8, !dbg !10197
  br label %do.end15, !dbg !10197

do.end15:                                         ; preds = %do.body9
  br label %do.end16, !dbg !10190

do.end16:                                         ; preds = %do.end15
  br label %do.body17, !dbg !10189

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !10198, !srcloc !10199
  br label %do.body18, !dbg !10198

do.body18:                                        ; preds = %do.body17
  %9 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10200
  %lock = getelementptr inbounds %struct.uart_port, %struct.uart_port* %9, i32 0, i32 0, !dbg !10200
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10201
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !10202
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !10202
  br label %do.end20, !dbg !10200

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !10198

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10189

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10188

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !10183

do.end24:                                         ; preds = %do.end23
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10203
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 3, !dbg !10204
  store i32 0, i32* %capabilities, align 8, !dbg !10205
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10206
  %bugs = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %13, i32 0, i32 4, !dbg !10207
  store i16 0, i16* %bugs, align 4, !dbg !10208
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10209
  %flags25 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 33, !dbg !10210
  %15 = load i32, i32* %flags25, align 8, !dbg !10210
  %and = and i32 %15, 16384, !dbg !10211
  %tobool26 = icmp ne i32 %and, 0, !dbg !10211
  br i1 %tobool26, label %if.end48, label %if.then27, !dbg !10212

if.then27:                                        ; preds = %do.end24
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10213
  %call28 = call i32 @serial_in(%struct.uart_8250_port* %16, i32 1) #10, !dbg !10214
  %conv29 = trunc i32 %call28 to i8, !dbg !10214
  store i8 %conv29, i8* %scratch, align 1, !dbg !10215
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10216
  call void @serial_out(%struct.uart_8250_port* %17, i32 1, i32 0) #10, !dbg !10217
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10218
  %call30 = call i32 @serial_in(%struct.uart_8250_port* %18, i32 1) #10, !dbg !10219
  %and31 = and i32 %call30, 15, !dbg !10220
  %conv32 = trunc i32 %and31 to i8, !dbg !10219
  store i8 %conv32, i8* %scratch2, align 1, !dbg !10221
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10222
  call void @serial_out(%struct.uart_8250_port* %19, i32 1, i32 15) #10, !dbg !10223
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10224
  %call33 = call i32 @serial_in(%struct.uart_8250_port* %20, i32 1) #10, !dbg !10225
  %and34 = and i32 %call33, 15, !dbg !10226
  %conv35 = trunc i32 %and34 to i8, !dbg !10225
  store i8 %conv35, i8* %scratch3, align 1, !dbg !10227
  %21 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10228
  %22 = load i8, i8* %scratch, align 1, !dbg !10229
  %conv36 = zext i8 %22 to i32, !dbg !10229
  call void @serial_out(%struct.uart_8250_port* %21, i32 1, i32 %conv36) #10, !dbg !10230
  %23 = load i8, i8* %scratch2, align 1, !dbg !10231
  %conv37 = zext i8 %23 to i32, !dbg !10231
  %cmp38 = icmp ne i32 %conv37, 0, !dbg !10232
  br i1 %cmp38, label %if.then43, label %lor.lhs.false, !dbg !10233

lor.lhs.false:                                    ; preds = %if.then27
  %24 = load i8, i8* %scratch3, align 1, !dbg !10234
  %conv40 = zext i8 %24 to i32, !dbg !10234
  %cmp41 = icmp ne i32 %conv40, 15, !dbg !10235
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !10236

if.then43:                                        ; preds = %lor.lhs.false, %if.then27
  %25 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10237
  %lock44 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %25, i32 0, i32 0, !dbg !10238
  %26 = load i64, i64* %flags, align 8, !dbg !10239
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i125, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !10240
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !10240
  store i32 1, i32* %tmp.i, align 4, !dbg !10240
  %27 = load i32, i32* %tmp.i, align 4, !dbg !10240
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !10241
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !10241
  store i32 1, i32* %tmp8.i, align 4, !dbg !10241
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !10241
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !10242
  call void @arch_local_irq_restore(i64 %29) #12, !dbg !10242
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !10243, !srcloc !6365
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !10244
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !10244
  %rlock.i126 = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !10244
  br label %do.body45, !dbg !10245

do.body45:                                        ; preds = %if.then43
  br label %do.end46, !dbg !10246

do.end46:                                         ; preds = %do.body45
  br label %out, !dbg !10248

if.end47:                                         ; preds = %lor.lhs.false
  br label %if.end48, !dbg !10249

if.end48:                                         ; preds = %if.end47, %do.end24
  %32 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10250
  %call49 = call i32 @serial8250_in_MCR(%struct.uart_8250_port* %32) #10, !dbg !10251
  %conv50 = trunc i32 %call49 to i8, !dbg !10251
  store i8 %conv50, i8* %save_mcr, align 1, !dbg !10252
  %33 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10253
  %call51 = call i32 @serial_in(%struct.uart_8250_port* %33, i32 3) #10, !dbg !10254
  %conv52 = trunc i32 %call51 to i8, !dbg !10254
  store i8 %conv52, i8* %save_lcr, align 1, !dbg !10255
  %34 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10256
  %flags53 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %34, i32 0, i32 33, !dbg !10257
  %35 = load i32, i32* %flags53, align 8, !dbg !10257
  %and54 = and i32 %35, 64, !dbg !10258
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10258
  br i1 %tobool55, label %if.end69, label %if.then56, !dbg !10259

if.then56:                                        ; preds = %if.end48
  %36 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10260
  call void @serial8250_out_MCR(%struct.uart_8250_port* %36, i32 26) #10, !dbg !10261
  %37 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10262
  %call57 = call i32 @serial_in(%struct.uart_8250_port* %37, i32 6) #10, !dbg !10263
  %and58 = and i32 %call57, 240, !dbg !10264
  %conv59 = trunc i32 %and58 to i8, !dbg !10263
  store i8 %conv59, i8* %status1, align 1, !dbg !10265
  %38 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10266
  %39 = load i8, i8* %save_mcr, align 1, !dbg !10267
  %conv60 = zext i8 %39 to i32, !dbg !10267
  call void @serial8250_out_MCR(%struct.uart_8250_port* %38, i32 %conv60) #10, !dbg !10268
  %40 = load i8, i8* %status1, align 1, !dbg !10269
  %conv61 = zext i8 %40 to i32, !dbg !10269
  %cmp62 = icmp ne i32 %conv61, 144, !dbg !10270
  br i1 %cmp62, label %if.then64, label %if.end68, !dbg !10271

if.then64:                                        ; preds = %if.then56
  %41 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10272
  %lock65 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %41, i32 0, i32 0, !dbg !10273
  %42 = load i64, i64* %flags, align 8, !dbg !10274
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i127, align 8
  store i64 %42, i64* %flags.addr.i128, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !10275
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !10275
  store i32 1, i32* %tmp.i129, align 4, !dbg !10275
  %43 = load i32, i32* %tmp.i129, align 4, !dbg !10275
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !10276
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !10276
  store i32 1, i32* %tmp8.i130, align 4, !dbg !10276
  %44 = load i32, i32* %tmp8.i130, align 4, !dbg !10276
  %45 = load i64, i64* %flags.addr.i128, align 8, !dbg !10277
  call void @arch_local_irq_restore(i64 %45) #12, !dbg !10277
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !10278, !srcloc !6365
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !10279
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !10279
  %rlock.i131 = bitcast %union.anon* %47 to %struct.raw_spinlock*, !dbg !10279
  br label %do.body66, !dbg !10280

do.body66:                                        ; preds = %if.then64
  br label %do.end67, !dbg !10281

do.end67:                                         ; preds = %do.body66
  br label %out, !dbg !10283

if.end68:                                         ; preds = %if.then56
  br label %if.end69, !dbg !10284

if.end69:                                         ; preds = %if.end68, %if.end48
  %48 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10285
  call void @serial_out(%struct.uart_8250_port* %48, i32 3, i32 191) #10, !dbg !10286
  %49 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10287
  call void @serial_out(%struct.uart_8250_port* %49, i32 2, i32 0) #10, !dbg !10288
  %50 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10289
  call void @serial_out(%struct.uart_8250_port* %50, i32 3, i32 0) #10, !dbg !10290
  %51 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10291
  call void @serial_out(%struct.uart_8250_port* %51, i32 2, i32 1) #10, !dbg !10292
  %52 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10293
  %call70 = call i32 @serial_in(%struct.uart_8250_port* %52, i32 2) #10, !dbg !10294
  %shr = ashr i32 %call70, 6, !dbg !10295
  %conv71 = trunc i32 %shr to i8, !dbg !10294
  store i8 %conv71, i8* %scratch, align 1, !dbg !10296
  %53 = load i8, i8* %scratch, align 1, !dbg !10297
  %conv72 = zext i8 %53 to i32, !dbg !10297
  switch i32 %conv72, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb73
    i32 2, label %sw.bb74
    i32 3, label %sw.bb76
  ], !dbg !10298

sw.bb:                                            ; preds = %if.end69
  %54 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10299
  call void @autoconfig_8250(%struct.uart_8250_port* %54) #10, !dbg !10301
  br label %sw.epilog, !dbg !10302

sw.bb73:                                          ; preds = %if.end69
  %55 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10303
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %55, i32 0, i32 38, !dbg !10304
  store i32 0, i32* %type, align 4, !dbg !10305
  br label %sw.epilog, !dbg !10306

sw.bb74:                                          ; preds = %if.end69
  %56 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10307
  %type75 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %56, i32 0, i32 38, !dbg !10308
  store i32 3, i32* %type75, align 4, !dbg !10309
  br label %sw.epilog, !dbg !10310

sw.bb76:                                          ; preds = %if.end69
  %57 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10311
  call void @autoconfig_16550a(%struct.uart_8250_port* %57) #10, !dbg !10312
  br label %sw.epilog, !dbg !10313

sw.epilog:                                        ; preds = %if.end69, %sw.bb76, %sw.bb74, %sw.bb73, %sw.bb
  %58 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10314
  %59 = load i8, i8* %save_lcr, align 1, !dbg !10315
  %conv77 = zext i8 %59 to i32, !dbg !10315
  call void @serial_out(%struct.uart_8250_port* %58, i32 3, i32 %conv77) #10, !dbg !10316
  %60 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10317
  %port78 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %60, i32 0, i32 0, !dbg !10318
  %type79 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port78, i32 0, i32 38, !dbg !10319
  %61 = load i32, i32* %type79, align 4, !dbg !10319
  %idxprom = zext i32 %61 to i64, !dbg !10320
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !10320
  %fifo_size = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx, i32 0, i32 1, !dbg !10321
  %62 = load i16, i16* %fifo_size, align 8, !dbg !10321
  %conv80 = zext i16 %62 to i32, !dbg !10320
  %63 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10322
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %63, i32 0, i32 23, !dbg !10323
  store i32 %conv80, i32* %fifosize, align 4, !dbg !10324
  %64 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10325
  %capabilities81 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %64, i32 0, i32 3, !dbg !10326
  %65 = load i32, i32* %capabilities81, align 8, !dbg !10326
  store i32 %65, i32* %old_capabilities, align 4, !dbg !10327
  %66 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10328
  %type82 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %66, i32 0, i32 38, !dbg !10329
  %67 = load i32, i32* %type82, align 4, !dbg !10329
  %idxprom83 = zext i32 %67 to i64, !dbg !10330
  %arrayidx84 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom83, !dbg !10330
  %flags85 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx84, i32 0, i32 5, !dbg !10331
  %68 = load i32, i32* %flags85, align 4, !dbg !10331
  %69 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10332
  %capabilities86 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %69, i32 0, i32 3, !dbg !10333
  store i32 %68, i32* %capabilities86, align 8, !dbg !10334
  %70 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10335
  %type87 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %70, i32 0, i32 38, !dbg !10336
  %71 = load i32, i32* %type87, align 4, !dbg !10336
  %idxprom88 = zext i32 %71 to i64, !dbg !10337
  %arrayidx89 = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom88, !dbg !10337
  %tx_loadsz = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %arrayidx89, i32 0, i32 2, !dbg !10338
  %72 = load i16, i16* %tx_loadsz, align 2, !dbg !10338
  %conv90 = zext i16 %72 to i32, !dbg !10337
  %73 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10339
  %tx_loadsz91 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %73, i32 0, i32 6, !dbg !10340
  store i32 %conv90, i32* %tx_loadsz91, align 8, !dbg !10341
  %74 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10342
  %type92 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %74, i32 0, i32 38, !dbg !10344
  %75 = load i32, i32* %type92, align 4, !dbg !10344
  %cmp93 = icmp eq i32 %75, 0, !dbg !10345
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !10346

if.then95:                                        ; preds = %sw.epilog
  br label %out_lock, !dbg !10347

if.end96:                                         ; preds = %sw.epilog
  %76 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10348
  %77 = load i8, i8* %save_mcr, align 1, !dbg !10349
  %conv97 = zext i8 %77 to i32, !dbg !10349
  call void @serial8250_out_MCR(%struct.uart_8250_port* %76, i32 %conv97) #10, !dbg !10350
  %78 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10351
  call void @serial8250_clear_fifos(%struct.uart_8250_port* %78) #10, !dbg !10352
  %79 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10353
  %call98 = call i32 @serial_in(%struct.uart_8250_port* %79, i32 0) #10, !dbg !10354
  %80 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10355
  %capabilities99 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %80, i32 0, i32 3, !dbg !10357
  %81 = load i32, i32* %capabilities99, align 8, !dbg !10357
  %and100 = and i32 %81, 4096, !dbg !10358
  %tobool101 = icmp ne i32 %and100, 0, !dbg !10358
  br i1 %tobool101, label %if.then102, label %if.else, !dbg !10359

if.then102:                                       ; preds = %if.end96
  %82 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10360
  call void @serial_out(%struct.uart_8250_port* %82, i32 1, i32 64) #10, !dbg !10361
  br label %if.end103, !dbg !10361

if.else:                                          ; preds = %if.end96
  %83 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10362
  call void @serial_out(%struct.uart_8250_port* %83, i32 1, i32 0) #10, !dbg !10363
  br label %if.end103

if.end103:                                        ; preds = %if.else, %if.then102
  br label %out_lock, !dbg !10364

out_lock:                                         ; preds = %if.end103, %if.then95
  call void @llvm.dbg.label(metadata !10365), !dbg !10366
  %84 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10367
  %lock104 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %84, i32 0, i32 0, !dbg !10368
  %85 = load i64, i64* %flags, align 8, !dbg !10369
  store %struct.spinlock* %lock104, %struct.spinlock** %lock.addr.i132, align 8
  store i64 %85, i64* %flags.addr.i133, align 8
  call void @llvm.dbg.declare(metadata !228, metadata !6350, metadata !DIExpression()) #9, !dbg !10370
  call void @llvm.dbg.declare(metadata !228, metadata !6354, metadata !DIExpression()) #9, !dbg !10370
  store i32 1, i32* %tmp.i134, align 4, !dbg !10370
  %86 = load i32, i32* %tmp.i134, align 4, !dbg !10370
  call void @llvm.dbg.declare(metadata !228, metadata !6355, metadata !DIExpression()) #9, !dbg !10371
  call void @llvm.dbg.declare(metadata !228, metadata !6361, metadata !DIExpression()) #9, !dbg !10371
  store i32 1, i32* %tmp8.i135, align 4, !dbg !10371
  %87 = load i32, i32* %tmp8.i135, align 4, !dbg !10371
  %88 = load i64, i64* %flags.addr.i133, align 8, !dbg !10372
  call void @arch_local_irq_restore(i64 %88) #12, !dbg !10372
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !10373, !srcloc !6365
  %89 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i132, align 8, !dbg !10374
  %90 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %89, i32 0, i32 0, !dbg !10374
  %rlock.i136 = bitcast %union.anon* %90 to %struct.raw_spinlock*, !dbg !10374
  %91 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10375
  %type105 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %91, i32 0, i32 38, !dbg !10377
  %92 = load i32, i32* %type105, align 4, !dbg !10377
  %cmp106 = icmp eq i32 %92, 4, !dbg !10378
  br i1 %cmp106, label %land.lhs.true108, label %if.end114, !dbg !10379

land.lhs.true108:                                 ; preds = %out_lock
  %93 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10380
  %iotype = getelementptr inbounds %struct.uart_port, %struct.uart_port* %93, i32 0, i32 26, !dbg !10381
  %94 = load i8, i8* %iotype, align 2, !dbg !10381
  %conv109 = zext i8 %94 to i32, !dbg !10380
  %cmp110 = icmp eq i32 %conv109, 0, !dbg !10382
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !10383

if.then112:                                       ; preds = %land.lhs.true108
  %95 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10384
  %call113 = call i32 @fintek_8250_probe(%struct.uart_8250_port* %95) #10, !dbg !10385
  br label %if.end114, !dbg !10385

if.end114:                                        ; preds = %if.then112, %land.lhs.true108, %out_lock
  %96 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10386
  %capabilities115 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %96, i32 0, i32 3, !dbg !10388
  %97 = load i32, i32* %capabilities115, align 8, !dbg !10388
  %98 = load i32, i32* %old_capabilities, align 4, !dbg !10389
  %cmp116 = icmp ne i32 %97, %98, !dbg !10390
  br i1 %cmp116, label %if.then118, label %if.end120, !dbg !10391

if.then118:                                       ; preds = %if.end114
  %99 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10392
  %dev = getelementptr inbounds %struct.uart_port, %struct.uart_port* %99, i32 0, i32 45, !dbg !10392
  %100 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10392
  %101 = load i32, i32* %old_capabilities, align 4, !dbg !10392
  %102 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10392
  %capabilities119 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %102, i32 0, i32 3, !dbg !10392
  %103 = load i32, i32* %capabilities119, align 8, !dbg !10392
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %100, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), i32 %101, i32 %103) #13, !dbg !10392
  br label %if.end120, !dbg !10394

if.end120:                                        ; preds = %if.then118, %if.end114
  br label %out, !dbg !10389

out:                                              ; preds = %if.end120, %do.end67, %do.end46
  call void @llvm.dbg.label(metadata !10395), !dbg !10396
  br label %do.body121, !dbg !10397

do.body121:                                       ; preds = %out
  br label %do.end122, !dbg !10398

do.end122:                                        ; preds = %do.body121
  br label %do.body123, !dbg !10400

do.body123:                                       ; preds = %do.end122
  br label %do.end124, !dbg !10401

do.end124:                                        ; preds = %if.then, %do.body123
  ret void, !dbg !10403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @autoconfig_irq(%struct.uart_8250_port* %up) #0 !dbg !10404 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %port = alloca %struct.uart_port*, align 8
  %save_mcr = alloca i8, align 1
  %save_ier = alloca i8, align 1
  %save_ICP = alloca i8, align 1
  %ICP = alloca i32, align 4
  %irqs = alloca i64, align 8
  %irq = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10405, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.declare(metadata %struct.uart_port** %port, metadata !10407, metadata !DIExpression()), !dbg !10408
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10409
  %port1 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10410
  store %struct.uart_port* %port1, %struct.uart_port** %port, align 8, !dbg !10408
  call void @llvm.dbg.declare(metadata i8* %save_mcr, metadata !10411, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.declare(metadata i8* %save_ier, metadata !10413, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.declare(metadata i8* %save_ICP, metadata !10415, metadata !DIExpression()), !dbg !10416
  store i8 0, i8* %save_ICP, align 1, !dbg !10416
  call void @llvm.dbg.declare(metadata i32* %ICP, metadata !10417, metadata !DIExpression()), !dbg !10418
  store i32 0, i32* %ICP, align 4, !dbg !10418
  call void @llvm.dbg.declare(metadata i64* %irqs, metadata !10419, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !10421, metadata !DIExpression()), !dbg !10422
  %1 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10423
  %flags = getelementptr inbounds %struct.uart_port, %struct.uart_port* %1, i32 0, i32 33, !dbg !10425
  %2 = load i32, i32* %flags, align 8, !dbg !10425
  %and = and i32 %2, 2, !dbg !10426
  %tobool = icmp ne i32 %and, 0, !dbg !10426
  br i1 %tobool, label %if.then, label %if.end, !dbg !10427

if.then:                                          ; preds = %entry
  %3 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10428
  %iobase = getelementptr inbounds %struct.uart_port, %struct.uart_port* %3, i32 0, i32 1, !dbg !10430
  %4 = load i64, i64* %iobase, align 8, !dbg !10430
  %and2 = and i64 %4, 4064, !dbg !10431
  %or = or i64 %and2, 31, !dbg !10432
  %conv = trunc i64 %or to i32, !dbg !10433
  store i32 %conv, i32* %ICP, align 4, !dbg !10434
  %5 = load i32, i32* %ICP, align 4, !dbg !10435
  %call = call zeroext i8 @inb_p(i32 %5) #10, !dbg !10436
  store i8 %call, i8* %save_ICP, align 1, !dbg !10437
  %6 = load i32, i32* %ICP, align 4, !dbg !10438
  call void @outb_p(i8 zeroext -128, i32 %6) #10, !dbg !10439
  %7 = load i32, i32* %ICP, align 4, !dbg !10440
  %call3 = call zeroext i8 @inb_p(i32 %7) #10, !dbg !10441
  br label %if.end, !dbg !10442

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10443
  store i32 0, i32* %tmp, align 4, !dbg !10443
  %9 = load i32, i32* %tmp, align 4, !dbg !10443
  %tobool4 = icmp ne i32 %9, 0, !dbg !10446
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10447

if.then5:                                         ; preds = %if.end
  call void @console_lock() #10, !dbg !10448
  br label %if.end6, !dbg !10448

if.end6:                                          ; preds = %if.then5, %if.end
  %call7 = call i64 @probe_irq_on() #10, !dbg !10449
  %call8 = call i32 @probe_irq_off(i64 %call7) #10, !dbg !10450
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10451
  %call9 = call i32 @serial8250_in_MCR(%struct.uart_8250_port* %10) #10, !dbg !10452
  %conv10 = trunc i32 %call9 to i8, !dbg !10452
  store i8 %conv10, i8* %save_mcr, align 1, !dbg !10453
  %11 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10454
  %call11 = call i32 @serial_in(%struct.uart_8250_port* %11, i32 1) #10, !dbg !10455
  %conv12 = trunc i32 %call11 to i8, !dbg !10455
  store i8 %conv12, i8* %save_ier, align 1, !dbg !10456
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10457
  call void @serial8250_out_MCR(%struct.uart_8250_port* %12, i32 12) #10, !dbg !10458
  %call13 = call i64 @probe_irq_on() #10, !dbg !10459
  store i64 %call13, i64* %irqs, align 8, !dbg !10460
  %13 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10461
  call void @serial8250_out_MCR(%struct.uart_8250_port* %13, i32 0) #10, !dbg !10462
  call void @__const_udelay(i64 42950) #10, !dbg !10463
  %14 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10468
  %flags14 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %14, i32 0, i32 33, !dbg !10470
  %15 = load i32, i32* %flags14, align 8, !dbg !10470
  %and15 = and i32 %15, 2, !dbg !10471
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10471
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10472

if.then17:                                        ; preds = %if.end6
  %16 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10473
  call void @serial8250_out_MCR(%struct.uart_8250_port* %16, i32 3) #10, !dbg !10475
  br label %if.end18, !dbg !10476

if.else:                                          ; preds = %if.end6
  %17 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10477
  call void @serial8250_out_MCR(%struct.uart_8250_port* %17, i32 11) #10, !dbg !10479
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10480
  call void @serial_out(%struct.uart_8250_port* %18, i32 1, i32 15) #10, !dbg !10481
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10482
  %call19 = call i32 @serial_in(%struct.uart_8250_port* %19, i32 5) #10, !dbg !10483
  %20 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10484
  %call20 = call i32 @serial_in(%struct.uart_8250_port* %20, i32 0) #10, !dbg !10485
  %21 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10486
  %call21 = call i32 @serial_in(%struct.uart_8250_port* %21, i32 2) #10, !dbg !10487
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10488
  %call22 = call i32 @serial_in(%struct.uart_8250_port* %22, i32 6) #10, !dbg !10489
  %23 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10490
  call void @serial_out(%struct.uart_8250_port* %23, i32 0, i32 255) #10, !dbg !10491
  call void @__const_udelay(i64 85900) #10, !dbg !10492
  %24 = load i64, i64* %irqs, align 8, !dbg !10497
  %call23 = call i32 @probe_irq_off(i64 %24) #10, !dbg !10498
  store i32 %call23, i32* %irq, align 4, !dbg !10499
  %25 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10500
  %26 = load i8, i8* %save_mcr, align 1, !dbg !10501
  %conv24 = zext i8 %26 to i32, !dbg !10501
  call void @serial8250_out_MCR(%struct.uart_8250_port* %25, i32 %conv24) #10, !dbg !10502
  %27 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10503
  %28 = load i8, i8* %save_ier, align 1, !dbg !10504
  %conv25 = zext i8 %28 to i32, !dbg !10504
  call void @serial_out(%struct.uart_8250_port* %27, i32 1, i32 %conv25) #10, !dbg !10505
  %29 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10506
  %flags26 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %29, i32 0, i32 33, !dbg !10508
  %30 = load i32, i32* %flags26, align 8, !dbg !10508
  %and27 = and i32 %30, 2, !dbg !10509
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10509
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10510

if.then29:                                        ; preds = %if.end18
  %31 = load i8, i8* %save_ICP, align 1, !dbg !10511
  %32 = load i32, i32* %ICP, align 4, !dbg !10512
  call void @outb_p(i8 zeroext %31, i32 %32) #10, !dbg !10513
  br label %if.end30, !dbg !10513

if.end30:                                         ; preds = %if.then29, %if.end18
  %33 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10514
  store i32 0, i32* %tmp31, align 4, !dbg !10514
  %34 = load i32, i32* %tmp31, align 4, !dbg !10514
  %tobool32 = icmp ne i32 %34, 0, !dbg !10517
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !10518

if.then33:                                        ; preds = %if.end30
  call void @console_unlock() #10, !dbg !10519
  br label %if.end34, !dbg !10519

if.end34:                                         ; preds = %if.then33, %if.end30
  %35 = load i32, i32* %irq, align 4, !dbg !10520
  %cmp = icmp sgt i32 %35, 0, !dbg !10521
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10522

cond.true:                                        ; preds = %if.end34
  %36 = load i32, i32* %irq, align 4, !dbg !10523
  br label %cond.end, !dbg !10522

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !10522

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %36, %cond.true ], [ 0, %cond.false ], !dbg !10522
  %37 = load %struct.uart_port*, %struct.uart_port** %port, align 8, !dbg !10524
  %irq36 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %37, i32 0, i32 20, !dbg !10525
  store i32 %cond, i32* %irq36, align 8, !dbg !10526
  ret void, !dbg !10527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @register_dev_spec_attr_grp(%struct.uart_8250_port* %up) #0 !dbg !10528 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %conf_type = alloca %struct.serial8250_config*, align 8
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.declare(metadata %struct.serial8250_config** %conf_type, metadata !10531, metadata !DIExpression()), !dbg !10533
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10534
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10535
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 38, !dbg !10536
  %1 = load i32, i32* %type, align 4, !dbg !10536
  %idxprom = zext i32 %1 to i64, !dbg !10537
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !10537
  store %struct.serial8250_config* %arrayidx, %struct.serial8250_config** %conf_type, align 8, !dbg !10533
  %2 = load %struct.serial8250_config*, %struct.serial8250_config** %conf_type, align 8, !dbg !10538
  %rxtrig_bytes = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %2, i32 0, i32 4, !dbg !10540
  %arrayidx1 = getelementptr [4 x i8], [4 x i8]* %rxtrig_bytes, i64 0, i64 0, !dbg !10538
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !10538
  %tobool = icmp ne i8 %3, 0, !dbg !10538
  br i1 %tobool, label %if.then, label %if.end, !dbg !10541

if.then:                                          ; preds = %entry
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10542
  %port2 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %4, i32 0, i32 0, !dbg !10543
  %attr_group = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port2, i32 0, i32 54, !dbg !10544
  store %struct.attribute_group* @serial8250_dev_attr_group, %struct.attribute_group** %attr_group, align 8, !dbg !10545
  br label %if.end, !dbg !10542

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @autoconfig_8250(%struct.uart_8250_port* %up) #0 !dbg !10547 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %scratch = alloca i8, align 1
  %status1 = alloca i8, align 1
  %status2 = alloca i8, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10548, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.declare(metadata i8* %scratch, metadata !10550, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.declare(metadata i8* %status1, metadata !10552, metadata !DIExpression()), !dbg !10553
  call void @llvm.dbg.declare(metadata i8* %status2, metadata !10554, metadata !DIExpression()), !dbg !10555
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10556
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10557
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 38, !dbg !10558
  store i32 1, i32* %type, align 4, !dbg !10559
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10560
  %call = call i32 @serial_in(%struct.uart_8250_port* %1, i32 7) #10, !dbg !10561
  %conv = trunc i32 %call to i8, !dbg !10561
  store i8 %conv, i8* %scratch, align 1, !dbg !10562
  %2 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10563
  call void @serial_out(%struct.uart_8250_port* %2, i32 7, i32 165) #10, !dbg !10564
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10565
  %call1 = call i32 @serial_in(%struct.uart_8250_port* %3, i32 7) #10, !dbg !10566
  %conv2 = trunc i32 %call1 to i8, !dbg !10566
  store i8 %conv2, i8* %status1, align 1, !dbg !10567
  %4 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10568
  call void @serial_out(%struct.uart_8250_port* %4, i32 7, i32 90) #10, !dbg !10569
  %5 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10570
  %call3 = call i32 @serial_in(%struct.uart_8250_port* %5, i32 7) #10, !dbg !10571
  %conv4 = trunc i32 %call3 to i8, !dbg !10571
  store i8 %conv4, i8* %status2, align 1, !dbg !10572
  %6 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10573
  %7 = load i8, i8* %scratch, align 1, !dbg !10574
  %conv5 = zext i8 %7 to i32, !dbg !10574
  call void @serial_out(%struct.uart_8250_port* %6, i32 7, i32 %conv5) #10, !dbg !10575
  %8 = load i8, i8* %status1, align 1, !dbg !10576
  %conv6 = zext i8 %8 to i32, !dbg !10576
  %cmp = icmp eq i32 %conv6, 165, !dbg !10578
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10579

land.lhs.true:                                    ; preds = %entry
  %9 = load i8, i8* %status2, align 1, !dbg !10580
  %conv8 = zext i8 %9 to i32, !dbg !10580
  %cmp9 = icmp eq i32 %conv8, 90, !dbg !10581
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10582

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10583
  %port11 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %10, i32 0, i32 0, !dbg !10584
  %type12 = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port11, i32 0, i32 38, !dbg !10585
  store i32 2, i32* %type12, align 4, !dbg !10586
  br label %if.end, !dbg !10583

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !10587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @autoconfig_16550a(%struct.uart_8250_port* %up) #0 !dbg !10588 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %status1 = alloca i8, align 1
  %status2 = alloca i8, align 1
  %iersave = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10589, metadata !DIExpression()), !dbg !10590
  call void @llvm.dbg.declare(metadata i8* %status1, metadata !10591, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.declare(metadata i8* %status2, metadata !10593, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.declare(metadata i32* %iersave, metadata !10595, metadata !DIExpression()), !dbg !10596
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10597
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10598
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 38, !dbg !10599
  store i32 4, i32* %type, align 4, !dbg !10600
  %1 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10601
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %1, i32 0, i32 3, !dbg !10602
  %2 = load i32, i32* %capabilities, align 8, !dbg !10603
  %or = or i32 %2, 256, !dbg !10603
  store i32 %or, i32* %capabilities, align 8, !dbg !10603
  ret void, !dbg !10604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fintek_8250_probe(%struct.uart_8250_port* %uart) #0 !dbg !10606 {
entry:
  %uart.addr = alloca %struct.uart_8250_port*, align 8
  store %struct.uart_8250_port* %uart, %struct.uart_8250_port** %uart.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %uart.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  ret i32 0, !dbg !10609
}

; Function Attrs: noredzone
declare dso_local void @console_lock() #2

; Function Attrs: noredzone
declare dso_local i32 @probe_irq_off(i64) #2

; Function Attrs: noredzone
declare dso_local i64 @probe_irq_on() #2

; Function Attrs: noredzone
declare dso_local void @console_unlock() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rx_trig_bytes_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10610 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %port = alloca %struct.tty_port*, align 8
  %rxtrig_bytes = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10613, metadata !DIExpression()), !dbg !10614
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !10617, metadata !DIExpression()), !dbg !10618
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10619
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !10620
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !10620
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !10618
  call void @llvm.dbg.declare(metadata i32* %rxtrig_bytes, metadata !10621, metadata !DIExpression()), !dbg !10622
  %2 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !10623
  %call1 = call i32 @do_serial8250_get_rxtrig(%struct.tty_port* %2) #10, !dbg !10624
  store i32 %call1, i32* %rxtrig_bytes, align 4, !dbg !10625
  %3 = load i32, i32* %rxtrig_bytes, align 4, !dbg !10626
  %cmp = icmp slt i32 %3, 0, !dbg !10628
  br i1 %cmp, label %if.then, label %if.end, !dbg !10629

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rxtrig_bytes, align 4, !dbg !10630
  %conv = sext i32 %4 to i64, !dbg !10630
  store i64 %conv, i64* %retval, align 8, !dbg !10631
  br label %return, !dbg !10631

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10632
  %6 = load i32, i32* %rxtrig_bytes, align 4, !dbg !10633
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i32 %6) #10, !dbg !10634
  %conv3 = sext i32 %call2 to i64, !dbg !10634
  store i64 %conv3, i64* %retval, align 8, !dbg !10635
  br label %return, !dbg !10635

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !10636
  ret i64 %7, !dbg !10636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @rx_trig_bytes_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !10637 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %port = alloca %struct.tty_port*, align 8
  %bytes = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10638, metadata !DIExpression()), !dbg !10639
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10642, metadata !DIExpression()), !dbg !10643
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10644, metadata !DIExpression()), !dbg !10645
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !10646, metadata !DIExpression()), !dbg !10647
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10648
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #10, !dbg !10649
  %1 = bitcast i8* %call to %struct.tty_port*, !dbg !10649
  store %struct.tty_port* %1, %struct.tty_port** %port, align 8, !dbg !10647
  call void @llvm.dbg.declare(metadata i8* %bytes, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10652, metadata !DIExpression()), !dbg !10653
  %2 = load i64, i64* %count.addr, align 8, !dbg !10654
  %tobool = icmp ne i64 %2, 0, !dbg !10654
  br i1 %tobool, label %if.end, label %if.then, !dbg !10656

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10657
  br label %return, !dbg !10657

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !10658
  %call1 = call i32 @kstrtou8(i8* %3, i32 10, i8* %bytes) #10, !dbg !10659
  store i32 %call1, i32* %ret, align 4, !dbg !10660
  %4 = load i32, i32* %ret, align 4, !dbg !10661
  %cmp = icmp slt i32 %4, 0, !dbg !10663
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10664

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !10665
  %conv = sext i32 %5 to i64, !dbg !10665
  store i64 %conv, i64* %retval, align 8, !dbg !10666
  br label %return, !dbg !10666

if.end3:                                          ; preds = %if.end
  %6 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !10667
  %7 = load i8, i8* %bytes, align 1, !dbg !10668
  %call4 = call i32 @do_serial8250_set_rxtrig(%struct.tty_port* %6, i8 zeroext %7) #10, !dbg !10669
  store i32 %call4, i32* %ret, align 4, !dbg !10670
  %8 = load i32, i32* %ret, align 4, !dbg !10671
  %cmp5 = icmp slt i32 %8, 0, !dbg !10673
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !10674

if.then7:                                         ; preds = %if.end3
  %9 = load i32, i32* %ret, align 4, !dbg !10675
  %conv8 = sext i32 %9 to i64, !dbg !10675
  store i64 %conv8, i64* %retval, align 8, !dbg !10676
  br label %return, !dbg !10676

if.end9:                                          ; preds = %if.end3
  %10 = load i64, i64* %count.addr, align 8, !dbg !10677
  store i64 %10, i64* %retval, align 8, !dbg !10678
  br label %return, !dbg !10678

return:                                           ; preds = %if.end9, %if.then7, %if.then2, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !10679
  ret i64 %11, !dbg !10679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !10680 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10683, metadata !DIExpression()), !dbg !10684
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10685
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10686
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10686
  ret i8* %1, !dbg !10687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_serial8250_get_rxtrig(%struct.tty_port* %port) #0 !dbg !10688 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %rxtrig_bytes = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10689, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.declare(metadata i32* %rxtrig_bytes, metadata !10691, metadata !DIExpression()), !dbg !10692
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10693
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 13, !dbg !10694
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !10695
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10696
  %call = call i32 @do_get_rxtrig(%struct.tty_port* %1) #10, !dbg !10697
  store i32 %call, i32* %rxtrig_bytes, align 4, !dbg !10698
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10699
  %mutex1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 13, !dbg !10700
  call void @mutex_unlock(%struct.mutex* %mutex1) #10, !dbg !10701
  %3 = load i32, i32* %rxtrig_bytes, align 4, !dbg !10702
  ret i32 %3, !dbg !10703
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_get_rxtrig(%struct.tty_port* %port) #0 !dbg !10704 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10705, metadata !DIExpression()), !dbg !10706
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !10707, metadata !DIExpression()), !dbg !10708
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10709, metadata !DIExpression()), !dbg !10711
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10711
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !10711
  store i8* %1, i8** %__mptr, align 8, !dbg !10711
  br label %do.body, !dbg !10711

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10712

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10711
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10711
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !10711
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !10712
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !10711
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !10708
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !10714, metadata !DIExpression()), !dbg !10715
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !10716
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %5, i32 0, i32 5, !dbg !10717
  %6 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !10717
  store %struct.uart_port* %6, %struct.uart_port** %uport, align 8, !dbg !10715
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !10718, metadata !DIExpression()), !dbg !10719
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10720
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %7) #10, !dbg !10721
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !10719
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10722
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 3, !dbg !10724
  %9 = load i32, i32* %capabilities, align 8, !dbg !10724
  %and = and i32 %9, 256, !dbg !10725
  %tobool = icmp ne i32 %and, 0, !dbg !10725
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10726

lor.lhs.false:                                    ; preds = %do.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10727
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 23, !dbg !10728
  %11 = load i32, i32* %fifosize, align 4, !dbg !10728
  %cmp = icmp ule i32 %11, 1, !dbg !10729
  br i1 %cmp, label %if.then, label %if.end, !dbg !10730

if.then:                                          ; preds = %lor.lhs.false, %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10731
  br label %return, !dbg !10731

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10732
  %call1 = call i32 @fcr_get_rxtrig_bytes(%struct.uart_8250_port* %12) #10, !dbg !10733
  store i32 %call1, i32* %retval, align 4, !dbg !10734
  br label %return, !dbg !10734

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10735
  ret i32 %13, !dbg !10735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fcr_get_rxtrig_bytes(%struct.uart_8250_port* %up) #0 !dbg !10736 {
entry:
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %conf_type = alloca %struct.serial8250_config*, align 8
  %bytes = alloca i8, align 1
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  call void @llvm.dbg.declare(metadata %struct.serial8250_config** %conf_type, metadata !10739, metadata !DIExpression()), !dbg !10740
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10741
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10742
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 38, !dbg !10743
  %1 = load i32, i32* %type, align 4, !dbg !10743
  %idxprom = zext i32 %1 to i64, !dbg !10744
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !10744
  store %struct.serial8250_config* %arrayidx, %struct.serial8250_config** %conf_type, align 8, !dbg !10740
  call void @llvm.dbg.declare(metadata i8* %bytes, metadata !10745, metadata !DIExpression()), !dbg !10746
  %2 = load %struct.serial8250_config*, %struct.serial8250_config** %conf_type, align 8, !dbg !10747
  %rxtrig_bytes = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %2, i32 0, i32 4, !dbg !10748
  %3 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10749
  %fcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %3, i32 0, i32 8, !dbg !10749
  %4 = load i8, i8* %fcr, align 1, !dbg !10749
  %conv = zext i8 %4 to i32, !dbg !10749
  %and = and i32 %conv, 192, !dbg !10749
  %shr = ashr i32 %and, 6, !dbg !10749
  %idxprom1 = sext i32 %shr to i64, !dbg !10747
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %rxtrig_bytes, i64 0, i64 %idxprom1, !dbg !10747
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !10747
  store i8 %5, i8* %bytes, align 1, !dbg !10750
  %6 = load i8, i8* %bytes, align 1, !dbg !10751
  %conv3 = zext i8 %6 to i32, !dbg !10751
  %tobool = icmp ne i32 %conv3, 0, !dbg !10751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10751

cond.true:                                        ; preds = %entry
  %7 = load i8, i8* %bytes, align 1, !dbg !10752
  %conv4 = zext i8 %7 to i32, !dbg !10752
  br label %cond.end, !dbg !10751

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv4, %cond.true ], [ -95, %cond.false ], !dbg !10751
  ret i32 %cond, !dbg !10753
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtou8(i8*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_serial8250_set_rxtrig(%struct.tty_port* %port, i8 zeroext %bytes) #0 !dbg !10754 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %bytes.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10757, metadata !DIExpression()), !dbg !10758
  store i8 %bytes, i8* %bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bytes.addr, metadata !10759, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10761, metadata !DIExpression()), !dbg !10762
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10763
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 13, !dbg !10764
  call void @mutex_lock(%struct.mutex* %mutex) #10, !dbg !10765
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10766
  %2 = load i8, i8* %bytes.addr, align 1, !dbg !10767
  %call = call i32 @do_set_rxtrig(%struct.tty_port* %1, i8 zeroext %2) #10, !dbg !10768
  store i32 %call, i32* %ret, align 4, !dbg !10769
  %3 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10770
  %mutex1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %3, i32 0, i32 13, !dbg !10771
  call void @mutex_unlock(%struct.mutex* %mutex1) #10, !dbg !10772
  %4 = load i32, i32* %ret, align 4, !dbg !10773
  ret i32 %4, !dbg !10774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_set_rxtrig(%struct.tty_port* %port, i8 zeroext %bytes) #0 !dbg !10775 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %bytes.addr = alloca i8, align 1
  %state = alloca %struct.uart_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.uart_state*, align 8
  %uport = alloca %struct.uart_port*, align 8
  %up = alloca %struct.uart_8250_port*, align 8
  %rxtrig = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i8 %bytes, i8* %bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bytes.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata %struct.uart_state** %state, metadata !10780, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10782, metadata !DIExpression()), !dbg !10784
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !10784
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !10784
  store i8* %1, i8** %__mptr, align 8, !dbg !10784
  br label %do.body, !dbg !10784

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10785

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10784
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10784
  %3 = bitcast i8* %add.ptr to %struct.uart_state*, !dbg !10784
  store %struct.uart_state* %3, %struct.uart_state** %tmp, align 8, !dbg !10785
  %4 = load %struct.uart_state*, %struct.uart_state** %tmp, align 8, !dbg !10784
  store %struct.uart_state* %4, %struct.uart_state** %state, align 8, !dbg !10781
  call void @llvm.dbg.declare(metadata %struct.uart_port** %uport, metadata !10787, metadata !DIExpression()), !dbg !10788
  %5 = load %struct.uart_state*, %struct.uart_state** %state, align 8, !dbg !10789
  %uart_port = getelementptr inbounds %struct.uart_state, %struct.uart_state* %5, i32 0, i32 5, !dbg !10790
  %6 = load %struct.uart_port*, %struct.uart_port** %uart_port, align 8, !dbg !10790
  store %struct.uart_port* %6, %struct.uart_port** %uport, align 8, !dbg !10788
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up, metadata !10791, metadata !DIExpression()), !dbg !10792
  %7 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10793
  %call = call %struct.uart_8250_port* @up_to_u8250p(%struct.uart_port* %7) #10, !dbg !10794
  store %struct.uart_8250_port* %call, %struct.uart_8250_port** %up, align 8, !dbg !10792
  call void @llvm.dbg.declare(metadata i32* %rxtrig, metadata !10795, metadata !DIExpression()), !dbg !10796
  %8 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10797
  %capabilities = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %8, i32 0, i32 3, !dbg !10799
  %9 = load i32, i32* %capabilities, align 8, !dbg !10799
  %and = and i32 %9, 256, !dbg !10800
  %tobool = icmp ne i32 %and, 0, !dbg !10800
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10801

lor.lhs.false:                                    ; preds = %do.end
  %10 = load %struct.uart_port*, %struct.uart_port** %uport, align 8, !dbg !10802
  %fifosize = getelementptr inbounds %struct.uart_port, %struct.uart_port* %10, i32 0, i32 23, !dbg !10803
  %11 = load i32, i32* %fifosize, align 4, !dbg !10803
  %cmp = icmp ule i32 %11, 1, !dbg !10804
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !10805

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %12 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10806
  %fifo_bug = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %12, i32 0, i32 5, !dbg !10807
  %13 = load i8, i8* %fifo_bug, align 2, !dbg !10807
  %tobool2 = trunc i8 %13 to i1, !dbg !10807
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10808

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10809
  br label %return, !dbg !10809

if.end:                                           ; preds = %lor.lhs.false1
  %14 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10810
  %15 = load i8, i8* %bytes.addr, align 1, !dbg !10811
  %call3 = call i32 @bytes_to_fcr_rxtrig(%struct.uart_8250_port* %14, i8 zeroext %15) #10, !dbg !10812
  store i32 %call3, i32* %rxtrig, align 4, !dbg !10813
  %16 = load i32, i32* %rxtrig, align 4, !dbg !10814
  %cmp4 = icmp slt i32 %16, 0, !dbg !10816
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10817

if.then5:                                         ; preds = %if.end
  %17 = load i32, i32* %rxtrig, align 4, !dbg !10818
  store i32 %17, i32* %retval, align 4, !dbg !10819
  br label %return, !dbg !10819

if.end6:                                          ; preds = %if.end
  %18 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10820
  call void @serial8250_clear_fifos(%struct.uart_8250_port* %18) #10, !dbg !10821
  %19 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10822
  %fcr = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %19, i32 0, i32 8, !dbg !10823
  %20 = load i8, i8* %fcr, align 1, !dbg !10824
  %conv = zext i8 %20 to i32, !dbg !10824
  %and7 = and i32 %conv, -193, !dbg !10824
  %conv8 = trunc i32 %and7 to i8, !dbg !10824
  store i8 %conv8, i8* %fcr, align 1, !dbg !10824
  %21 = load i32, i32* %rxtrig, align 4, !dbg !10825
  %conv9 = trunc i32 %21 to i8, !dbg !10826
  %conv10 = zext i8 %conv9 to i32, !dbg !10826
  %22 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10827
  %fcr11 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %22, i32 0, i32 8, !dbg !10828
  %23 = load i8, i8* %fcr11, align 1, !dbg !10829
  %conv12 = zext i8 %23 to i32, !dbg !10829
  %or = or i32 %conv12, %conv10, !dbg !10829
  %conv13 = trunc i32 %or to i8, !dbg !10829
  store i8 %conv13, i8* %fcr11, align 1, !dbg !10829
  %24 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10830
  %25 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up, align 8, !dbg !10831
  %fcr14 = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %25, i32 0, i32 8, !dbg !10832
  %26 = load i8, i8* %fcr14, align 1, !dbg !10832
  %conv15 = zext i8 %26 to i32, !dbg !10831
  call void @serial_out(%struct.uart_8250_port* %24, i32 2, i32 %conv15) #10, !dbg !10833
  store i32 0, i32* %retval, align 4, !dbg !10834
  br label %return, !dbg !10834

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10835
  ret i32 %27, !dbg !10835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bytes_to_fcr_rxtrig(%struct.uart_8250_port* %up, i8 zeroext %bytes) #0 !dbg !10836 {
entry:
  %retval = alloca i32, align 4
  %up.addr = alloca %struct.uart_8250_port*, align 8
  %bytes.addr = alloca i8, align 1
  %conf_type = alloca %struct.serial8250_config*, align 8
  %i = alloca i32, align 4
  store %struct.uart_8250_port* %up, %struct.uart_8250_port** %up.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.uart_8250_port** %up.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  store i8 %bytes, i8* %bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bytes.addr, metadata !10841, metadata !DIExpression()), !dbg !10842
  call void @llvm.dbg.declare(metadata %struct.serial8250_config** %conf_type, metadata !10843, metadata !DIExpression()), !dbg !10844
  %0 = load %struct.uart_8250_port*, %struct.uart_8250_port** %up.addr, align 8, !dbg !10845
  %port = getelementptr inbounds %struct.uart_8250_port, %struct.uart_8250_port* %0, i32 0, i32 0, !dbg !10846
  %type = getelementptr inbounds %struct.uart_port, %struct.uart_port* %port, i32 0, i32 38, !dbg !10847
  %1 = load i32, i32* %type, align 4, !dbg !10847
  %idxprom = zext i32 %1 to i64, !dbg !10848
  %arrayidx = getelementptr [122 x %struct.serial8250_config], [122 x %struct.serial8250_config]* @uart_config, i64 0, i64 %idxprom, !dbg !10848
  store %struct.serial8250_config* %arrayidx, %struct.serial8250_config** %conf_type, align 8, !dbg !10844
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10849, metadata !DIExpression()), !dbg !10850
  %2 = load %struct.serial8250_config*, %struct.serial8250_config** %conf_type, align 8, !dbg !10851
  %rxtrig_bytes = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %2, i32 0, i32 4, !dbg !10853
  %arrayidx1 = getelementptr [4 x i8], [4 x i8]* %rxtrig_bytes, i64 0, i64 0, !dbg !10851
  %3 = load i8, i8* %arrayidx1, align 1, !dbg !10851
  %tobool = icmp ne i8 %3, 0, !dbg !10851
  br i1 %tobool, label %if.end, label %if.then, !dbg !10854

if.then:                                          ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !10855
  br label %return, !dbg !10855

if.end:                                           ; preds = %entry
  store i32 1, i32* %i, align 4, !dbg !10856
  br label %for.cond, !dbg !10858

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10859
  %cmp = icmp slt i32 %4, 4, !dbg !10861
  br i1 %cmp, label %for.body, label %for.end, !dbg !10862

for.body:                                         ; preds = %for.cond
  %5 = load i8, i8* %bytes.addr, align 1, !dbg !10863
  %conv = zext i8 %5 to i32, !dbg !10863
  %6 = load %struct.serial8250_config*, %struct.serial8250_config** %conf_type, align 8, !dbg !10866
  %rxtrig_bytes2 = getelementptr inbounds %struct.serial8250_config, %struct.serial8250_config* %6, i32 0, i32 4, !dbg !10867
  %7 = load i32, i32* %i, align 4, !dbg !10868
  %idxprom3 = sext i32 %7 to i64, !dbg !10866
  %arrayidx4 = getelementptr [4 x i8], [4 x i8]* %rxtrig_bytes2, i64 0, i64 %idxprom3, !dbg !10866
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !10866
  %conv5 = zext i8 %8 to i32, !dbg !10866
  %cmp6 = icmp slt i32 %conv, %conv5, !dbg !10869
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !10870

if.then8:                                         ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !10871
  %dec = add i32 %9, -1, !dbg !10871
  store i32 %dec, i32* %i, align 4, !dbg !10871
  %shl = shl i32 %dec, 6, !dbg !10872
  store i32 %shl, i32* %retval, align 4, !dbg !10873
  br label %return, !dbg !10873

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !10874

for.inc:                                          ; preds = %if.end9
  %10 = load i32, i32* %i, align 4, !dbg !10875
  %inc = add i32 %10, 1, !dbg !10875
  store i32 %inc, i32* %i, align 4, !dbg !10875
  br label %for.cond, !dbg !10876, !llvm.loop !10877

for.end:                                          ; preds = %for.cond
  store i32 192, i32* %retval, align 4, !dbg !10879
  br label %return, !dbg !10879

return:                                           ; preds = %for.end, %if.then8, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10880
  ret i32 %11, !dbg !10880
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4942}
!llvm.module.flags = !{!4943, !4944, !4945, !4946}
!llvm.ident = !{!4947}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "uart_config", scope: !2, file: !3, line: 58, type: !4929, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !195, globals: !4892, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/serial/8250/8250_port.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !99, !105, !114, !119, !131, !137, !141, !148, !159, !166, !171, !188}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_pm_state", file: !94, line: 277, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/serial_core.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98}
!96 = !DIEnumerator(name: "UART_PM_STATE_ON", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "UART_PM_STATE_OFF", value: 3, isUnsigned: true)
!98 = !DIEnumerator(name: "UART_PM_STATE_UNDEFINED", value: 4, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !100, line: 288, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!101 = !{!102, !103, !104}
!102 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !100, line: 732, baseType: !7, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110, !111, !112, !113}
!107 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !100, line: 468, baseType: !7, size: 32, elements: !115)
!115 = !{!116, !117, !118}
!116 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !100, line: 194, baseType: !7, size: 32, elements: !120)
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130}
!121 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!124 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!125 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!126 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!127 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!128 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!129 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!130 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !100, line: 533, baseType: !7, size: 32, elements: !132)
!132 = !{!133, !134, !135, !136}
!133 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!135 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!136 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !100, line: 220, baseType: !7, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !100, line: 79, baseType: !7, size: 32, elements: !142)
!142 = !{!143, !144, !145, !146, !147}
!143 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!145 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!146 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!147 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !100, line: 371, baseType: !7, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158}
!150 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!154 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!155 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!157 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!158 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !100, line: 37, baseType: !7, size: 32, elements: !160)
!160 = !{!161, !162, !163, !164, !165}
!161 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!164 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!165 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !167, line: 10, baseType: !7, size: 32, elements: !168)
!167 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170}
!169 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_mode", file: !20, line: 39, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!173 = !DIEnumerator(name: "HRTIMER_MODE_ABS", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "HRTIMER_MODE_REL", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "HRTIMER_MODE_PINNED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "HRTIMER_MODE_SOFT", value: 4, isUnsigned: true)
!177 = !DIEnumerator(name: "HRTIMER_MODE_HARD", value: 8, isUnsigned: true)
!178 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "HRTIMER_MODE_ABS_SOFT", value: 4, isUnsigned: true)
!181 = !DIEnumerator(name: "HRTIMER_MODE_REL_SOFT", value: 5, isUnsigned: true)
!182 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_SOFT", value: 6, isUnsigned: true)
!183 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_SOFT", value: 7, isUnsigned: true)
!184 = !DIEnumerator(name: "HRTIMER_MODE_ABS_HARD", value: 8, isUnsigned: true)
!185 = !DIEnumerator(name: "HRTIMER_MODE_REL_HARD", value: 9, isUnsigned: true)
!186 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_HARD", value: 10, isUnsigned: true)
!187 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_HARD", value: 11, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !189, line: 305, baseType: !7, size: 32, elements: !190)
!189 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!190 = !{!191, !192, !193, !194}
!191 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!195 = !{!196, !197, !198, !199, !206, !979, !4867, !388, !201, !230, !4885, !4887, !4889, !4891, !239, !343, !233}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "upstat_t", file: !94, line: 104, baseType: !7)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "upf_t", file: !94, line: 103, baseType: !7)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !201)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !202, line: 23, baseType: !203)
!202 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !204, line: 31, baseType: !205)
!204 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!205 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_8250_port", file: !208, line: 94, size: 5760, elements: !209)
!208 = !DIFile(filename: "./include/linux/serial_8250.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4527, !4528, !4529, !4851, !4861, !4862, !4866, !4875, !4876, !4877, !4884}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !207, file: !208, line: 95, baseType: !211, size: 3712)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_port", file: !94, line: 106, size: 3712, elements: !212)
!212 = !{!213, !229, !231, !234, !240, !244, !266, !270, !274, !278, !283, !287, !291, !295, !296, !297, !298, !302, !303, !319, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !4382, !4396, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4482, !4483, !4484, !4485, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4499, !4500, !4501, !4505, !4506}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !211, file: !94, line: 107, baseType: !214)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !215, line: 83, baseType: !216)
!215 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !215, line: 71, elements: !217)
!217 = !{!218}
!218 = !DIDerivedType(tag: DW_TAG_member, scope: !216, file: !215, line: 72, baseType: !219)
!219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !216, file: !215, line: 72, elements: !220)
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !219, file: !215, line: 73, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !215, line: 20, elements: !223)
!223 = !{!224}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !222, file: !215, line: 21, baseType: !225)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !226, line: 25, baseType: !227)
!226 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 25, elements: !228)
!228 = !{}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "iobase", scope: !211, file: !94, line: 108, baseType: !230, size: 64)
!230 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !211, file: !94, line: 109, baseType: !232, size: 64, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "serial_in", scope: !211, file: !94, line: 110, baseType: !235, size: 64, offset: 128)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DISubroutineType(types: !237)
!237 = !{!7, !238, !239}
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!239 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "serial_out", scope: !211, file: !94, line: 111, baseType: !241, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !238, !239, !239}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !211, file: !94, line: 112, baseType: !245, size: 64, offset: 256)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DISubroutineType(types: !247)
!247 = !{null, !238, !248, !248}
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !250, line: 32, size: 352, elements: !251)
!250 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!251 = !{!252, !254, !255, !256, !257, !259, !263, !265}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !249, file: !250, line: 33, baseType: !253, size: 32)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !250, line: 9, baseType: !7)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !249, file: !250, line: 34, baseType: !253, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !249, file: !250, line: 35, baseType: !253, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !249, file: !250, line: 36, baseType: !253, size: 32, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !249, file: !250, line: 37, baseType: !258, size: 8, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !250, line: 7, baseType: !233)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !249, file: !250, line: 38, baseType: !260, size: 152, offset: 136)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !258, size: 152, elements: !261)
!261 = !{!262}
!262 = !DISubrange(count: 19)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !249, file: !250, line: 39, baseType: !264, size: 32, offset: 288)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !250, line: 8, baseType: !7)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !249, file: !250, line: 40, baseType: !264, size: 32, offset: 320)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !211, file: !94, line: 115, baseType: !267, size: 64, offset: 320)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{null, !238, !248}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "get_mctrl", scope: !211, file: !94, line: 117, baseType: !271, size: 64, offset: 384)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!7, !238}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "set_mctrl", scope: !211, file: !94, line: 118, baseType: !275, size: 64, offset: 448)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{null, !238, !7}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "get_divisor", scope: !211, file: !94, line: 119, baseType: !279, size: 64, offset: 512)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{!7, !238, !7, !282}
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "set_divisor", scope: !211, file: !94, line: 122, baseType: !284, size: 64, offset: 576)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !238, !7, !7, !7}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !211, file: !94, line: 126, baseType: !288, size: 64, offset: 640)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DISubroutineType(types: !290)
!290 = !{!239, !238}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !211, file: !94, line: 127, baseType: !292, size: 64, offset: 704)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !238}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !211, file: !94, line: 128, baseType: !292, size: 64, offset: 768)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !211, file: !94, line: 129, baseType: !292, size: 64, offset: 832)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !211, file: !94, line: 130, baseType: !288, size: 64, offset: 896)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !211, file: !94, line: 131, baseType: !299, size: 64, offset: 960)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{null, !238, !7, !7}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "handle_break", scope: !211, file: !94, line: 133, baseType: !292, size: 64, offset: 1024)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_config", scope: !211, file: !94, line: 134, baseType: !304, size: 64, offset: 1088)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!239, !238, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_rs485", file: !309, line: 117, size: 256, elements: !310)
!309 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!310 = !{!311, !313, !314, !315}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !308, file: !309, line: 118, baseType: !312, size: 32)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !204, line: 27, baseType: !7)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "delay_rts_before_send", scope: !308, file: !309, line: 129, baseType: !312, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "delay_rts_after_send", scope: !308, file: !309, line: 130, baseType: !312, size: 32, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !308, file: !309, line: 131, baseType: !316, size: 160, offset: 96)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 160, elements: !317)
!317 = !{!318}
!318 = !DISubrange(count: 5)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "iso7816_config", scope: !211, file: !94, line: 136, baseType: !320, size: 64, offset: 1152)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!239, !238, !323}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_iso7816", file: !309, line: 140, size: 320, elements: !325)
!325 = !{!326, !327, !328, !329, !330, !331}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !324, file: !309, line: 141, baseType: !312, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "tg", scope: !324, file: !309, line: 145, baseType: !312, size: 32, offset: 32)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "sc_fi", scope: !324, file: !309, line: 146, baseType: !312, size: 32, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "sc_di", scope: !324, file: !309, line: 147, baseType: !312, size: 32, offset: 96)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !324, file: !309, line: 148, baseType: !312, size: 32, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !324, file: !309, line: 149, baseType: !316, size: 160, offset: 160)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !211, file: !94, line: 138, baseType: !7, size: 32, offset: 1216)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "irqflags", scope: !211, file: !94, line: 139, baseType: !230, size: 64, offset: 1280)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "uartclk", scope: !211, file: !94, line: 140, baseType: !7, size: 32, offset: 1344)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "fifosize", scope: !211, file: !94, line: 141, baseType: !7, size: 32, offset: 1376)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !211, file: !94, line: 142, baseType: !233, size: 8, offset: 1408)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "regshift", scope: !211, file: !94, line: 143, baseType: !233, size: 8, offset: 1416)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "iotype", scope: !211, file: !94, line: 144, baseType: !233, size: 8, offset: 1424)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !211, file: !94, line: 145, baseType: !233, size: 8, offset: 1432)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !211, file: !94, line: 159, baseType: !7, size: 32, offset: 1440)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !211, file: !94, line: 160, baseType: !7, size: 32, offset: 1472)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !211, file: !94, line: 161, baseType: !343, size: 64, offset: 1536)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_state", file: !94, line: 286, size: 2880, elements: !345)
!345 = !{!346, !4371, !4372, !4379, !4380, !4381}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !344, file: !94, line: 287, baseType: !347, size: 2432)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !348, line: 230, size: 2432, elements: !349)
!348 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!349 = !{!350, !423, !4321, !4322, !4344, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !347, file: !348, line: 231, baseType: !351, size: 1024)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !348, line: 85, size: 1024, elements: !352)
!352 = !{!353, !376, !403, !410, !415, !416, !420, !421, !422}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !351, file: !348, line: 86, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !348, line: 58, size: 256, elements: !356)
!356 = !{!357, !367, !368, !369, !370, !371, !372}
!357 = !DIDerivedType(tag: DW_TAG_member, scope: !355, file: !348, line: 59, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !355, file: !348, line: 59, size: 64, elements: !359)
!359 = !{!360, !361}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !358, file: !348, line: 60, baseType: !354, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !358, file: !348, line: 61, baseType: !362, size: 64)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !363, line: 58, size: 64, elements: !364)
!363 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!364 = !{!365}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !362, file: !363, line: 59, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !355, file: !348, line: 63, baseType: !239, size: 32, offset: 64)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !355, file: !348, line: 64, baseType: !239, size: 32, offset: 96)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !355, file: !348, line: 65, baseType: !239, size: 32, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !355, file: !348, line: 66, baseType: !239, size: 32, offset: 160)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !355, file: !348, line: 67, baseType: !239, size: 32, offset: 192)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !355, file: !348, line: 69, baseType: !373, offset: 256)
!373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, elements: !374)
!374 = !{!375}
!375 = !DISubrange(count: -1)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !351, file: !348, line: 87, baseType: !377, size: 256, offset: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !378, line: 102, size: 256, elements: !379)
!378 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!379 = !{!380, !391, !397}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !377, file: !378, line: 103, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !382, line: 13, baseType: !383)
!382 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !384, line: 175, baseType: !385)
!384 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !384, line: 173, size: 64, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !385, file: !384, line: 174, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !202, line: 22, baseType: !389)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !204, line: 30, baseType: !390)
!390 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !377, file: !378, line: 104, baseType: !392, size: 128, offset: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !384, line: 178, size: 128, elements: !393)
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !392, file: !384, line: 179, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !392, file: !384, line: 179, baseType: !395, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !377, file: !378, line: 105, baseType: !398, size: 64, offset: 192)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !378, line: 21, baseType: !399)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{null, !402}
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !351, file: !348, line: 88, baseType: !404, size: 192, offset: 320)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !405, line: 53, size: 192, elements: !406)
!405 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!406 = !{!407, !408, !409}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !404, file: !405, line: 54, baseType: !381, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !404, file: !405, line: 55, baseType: !214, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !404, file: !405, line: 59, baseType: !392, size: 128, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !351, file: !348, line: 89, baseType: !411, size: 32, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !384, line: 168, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !384, line: 166, size: 32, elements: !413)
!413 = !{!414}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !412, file: !384, line: 167, baseType: !239, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !351, file: !348, line: 90, baseType: !355, size: 256, offset: 576)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !351, file: !348, line: 91, baseType: !417, size: 64, offset: 832)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !363, line: 54, size: 64, elements: !418)
!418 = !{!419}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !417, file: !363, line: 55, baseType: !366, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !351, file: !348, line: 92, baseType: !411, size: 32, offset: 896)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !351, file: !348, line: 93, baseType: !239, size: 32, offset: 928)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !351, file: !348, line: 94, baseType: !354, size: 64, offset: 960)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !347, file: !348, line: 232, baseType: !424, size: 64, offset: 1024)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !348, line: 285, size: 5056, elements: !426)
!426 = !{!427, !428, !438, !4028, !4220, !4221, !4222, !4231, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !425, file: !348, line: 286, baseType: !239, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !425, file: !348, line: 287, baseType: !429, size: 32, offset: 32)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !430, line: 19, size: 32, elements: !431)
!430 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !429, file: !430, line: 20, baseType: !433, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !434, line: 113, baseType: !435)
!434 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !434, line: 111, size: 32, elements: !436)
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !435, file: !434, line: 112, baseType: !411, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !425, file: !348, line: 288, baseType: !439, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !441)
!441 = !{!442, !3600, !3601, !3604, !3605, !3656, !3729, !3730, !3731, !3732, !3733, !3742, !3847, !3860, !3863, !3864, !3868, !3870, !3871, !3872, !3876, !3882, !3883, !3886, !3890, !3980, !3981, !3982, !3983, !3984, !4016, !4017, !4018, !4021, !4024, !4025, !4026, !4027}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !440, file: !73, line: 462, baseType: !443, size: 512)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !444, line: 64, size: 512, elements: !445)
!444 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!445 = !{!446, !450, !451, !453, !498, !3467, !3594, !3595, !3596, !3597, !3598, !3599}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !443, file: !444, line: 65, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !449)
!449 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !443, file: !444, line: 66, baseType: !392, size: 128, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !443, file: !444, line: 67, baseType: !452, size: 64, offset: 192)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !443, file: !444, line: 68, baseType: !454, size: 64, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !444, line: 192, size: 704, elements: !456)
!456 = !{!457, !458, !459, !460}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !455, file: !444, line: 193, baseType: !392, size: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !455, file: !444, line: 194, baseType: !214, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !455, file: !444, line: 195, baseType: !443, size: 512, offset: 128)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !455, file: !444, line: 196, baseType: !461, size: 64, offset: 640)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !444, line: 156, size: 192, elements: !464)
!464 = !{!465, !470, !475}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !463, file: !444, line: 157, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !467)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DISubroutineType(types: !469)
!469 = !{!239, !454, !452}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !463, file: !444, line: 158, baseType: !471, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DISubroutineType(types: !474)
!474 = !{!447, !454, !452}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !463, file: !444, line: 159, baseType: !476, size: 64, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!239, !454, !452, !480}
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !444, line: 148, size: 20736, elements: !482)
!482 = !{!483, !488, !492, !493, !497}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !481, file: !444, line: 149, baseType: !484, size: 192)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 192, elements: !486)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!486 = !{!487}
!487 = !DISubrange(count: 3)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !481, file: !444, line: 150, baseType: !489, size: 4096, offset: 192)
!489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 4096, elements: !490)
!490 = !{!491}
!491 = !DISubrange(count: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !481, file: !444, line: 151, baseType: !239, size: 32, offset: 4288)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !481, file: !444, line: 152, baseType: !494, size: 16384, offset: 4320)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 16384, elements: !495)
!495 = !{!496}
!496 = !DISubrange(count: 2048)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !481, file: !444, line: 153, baseType: !239, size: 32, offset: 20704)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !443, file: !444, line: 69, baseType: !499, size: 64, offset: 320)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !444, line: 138, size: 448, elements: !501)
!501 = !{!502, !506, !535, !537, !3429, !3457, !3461}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !500, file: !444, line: 139, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{null, !452}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !500, file: !444, line: 140, baseType: !507, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !510, line: 230, size: 128, elements: !511)
!510 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!511 = !{!512, !528}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !509, file: !510, line: 231, baseType: !513, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DISubroutineType(types: !515)
!515 = !{!516, !452, !521, !485}
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !384, line: 60, baseType: !517)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !518, line: 73, baseType: !519)
!518 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !518, line: 15, baseType: !520)
!520 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !510, line: 30, size: 128, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !510, line: 31, baseType: !447, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !522, file: !510, line: 32, baseType: !526, size: 16, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !384, line: 19, baseType: !527)
!527 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !509, file: !510, line: 232, baseType: !529, size: 64, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DISubroutineType(types: !531)
!531 = !{!516, !452, !521, !447, !532}
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !384, line: 55, baseType: !533)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !518, line: 72, baseType: !534)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !518, line: 16, baseType: !230)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !500, file: !444, line: 141, baseType: !536, size: 64, offset: 128)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !500, file: !444, line: 142, baseType: !538, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !510, line: 84, size: 320, elements: !542)
!542 = !{!543, !544, !548, !3426, !3427}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !541, file: !510, line: 85, baseType: !447, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !541, file: !510, line: 86, baseType: !545, size: 64, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DISubroutineType(types: !547)
!547 = !{!526, !452, !521, !239}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !541, file: !510, line: 88, baseType: !549, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{!526, !452, !552, !239}
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !510, line: 168, size: 448, elements: !554)
!554 = !{!555, !556, !557, !558, !3421, !3422}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !553, file: !510, line: 169, baseType: !522, size: 128)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !553, file: !510, line: 170, baseType: !532, size: 64, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !553, file: !510, line: 171, baseType: !196, size: 64, offset: 192)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !553, file: !510, line: 172, baseType: !559, size: 64, offset: 256)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!516, !562, !452, !552, !485, !729, !532}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !564)
!564 = !{!565, !578, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3404, !3405, !3414, !3415, !3416, !3417, !3418, !3419, !3420}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !563, file: !44, line: 920, baseType: !566, size: 128)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !563, file: !44, line: 917, size: 128, elements: !567)
!567 = !{!568, !569}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !566, file: !44, line: 918, baseType: !362, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !566, file: !44, line: 919, baseType: !570, size: 128, align: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !384, line: 216, size: 128, align: 64, elements: !571)
!571 = !{!572, !574}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !570, file: !384, line: 217, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !570, file: !384, line: 218, baseType: !575, size: 64, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{null, !573}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !563, file: !44, line: 921, baseType: !579, size: 128, offset: 128)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !580, line: 8, size: 128, elements: !581)
!580 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!581 = !{!582, !586}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !579, file: !580, line: 9, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !585, line: 18, flags: DIFlagFwdDecl)
!585 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !579, file: !580, line: 10, baseType: !587, size: 64, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !585, line: 89, size: 1536, elements: !589)
!589 = !{!590, !591, !601, !609, !610, !626, !3354, !3356, !3368, !3369, !3370, !3371, !3372, !3378, !3379, !3380}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !588, file: !585, line: 91, baseType: !7, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !588, file: !585, line: 92, baseType: !592, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !593, line: 277, baseType: !594)
!593 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !593, line: 277, size: 32, elements: !595)
!595 = !{!596}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !594, file: !593, line: 277, baseType: !597, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !593, line: 70, baseType: !598)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !593, line: 65, size: 32, elements: !599)
!599 = !{!600}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !598, file: !593, line: 66, baseType: !7, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !588, file: !585, line: 93, baseType: !602, size: 128, offset: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !603, line: 38, size: 128, elements: !604)
!603 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!604 = !{!605, !607}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !602, file: !603, line: 39, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !602, file: !603, line: 39, baseType: !608, size: 64, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !588, file: !585, line: 94, baseType: !587, size: 64, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !588, file: !585, line: 95, baseType: !611, size: 128, offset: 256)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !585, line: 47, size: 128, elements: !612)
!612 = !{!613, !623}
!613 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !585, line: 48, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !585, line: 48, size: 64, elements: !615)
!615 = !{!616, !622}
!616 = !DIDerivedType(tag: DW_TAG_member, scope: !614, file: !585, line: 49, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !614, file: !585, line: 49, size: 64, elements: !618)
!618 = !{!619, !621}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !617, file: !585, line: 50, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !202, line: 21, baseType: !312)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !617, file: !585, line: 50, baseType: !620, size: 32, offset: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !614, file: !585, line: 52, baseType: !201, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !611, file: !585, line: 54, baseType: !624, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !588, file: !585, line: 96, baseType: !627, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !629)
!629 = !{!630, !631, !632, !640, !647, !648, !794, !3058, !3059, !3060, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3322, !3330, !3331, !3332, !3350, !3351, !3352, !3353}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !628, file: !44, line: 611, baseType: !526, size: 16)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !628, file: !44, line: 612, baseType: !527, size: 16, offset: 16)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !628, file: !44, line: 613, baseType: !633, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !634, line: 23, baseType: !635)
!634 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !634, line: 21, size: 32, elements: !636)
!636 = !{!637}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !635, file: !634, line: 22, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !384, line: 32, baseType: !639)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !518, line: 49, baseType: !7)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !628, file: !44, line: 614, baseType: !641, size: 32, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !634, line: 28, baseType: !642)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !634, line: 26, size: 32, elements: !643)
!643 = !{!644}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !642, file: !634, line: 27, baseType: !645, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !384, line: 33, baseType: !646)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !518, line: 50, baseType: !7)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !628, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !628, file: !44, line: 622, baseType: !649, size: 64, offset: 128)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !652)
!652 = !{!653, !657, !670, !674, !680, !684, !690, !694, !698, !702, !706, !707, !713, !717, !741, !770, !774, !780, !785, !789, !790}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !651, file: !44, line: 1865, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{!587, !627, !587, !7}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !651, file: !44, line: 1866, baseType: !658, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!447, !587, !627, !661}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !663, line: 10, size: 128, elements: !664)
!663 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!664 = !{!665, !669}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !662, file: !663, line: 11, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !196}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !662, file: !663, line: 12, baseType: !196, size: 64, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !651, file: !44, line: 1867, baseType: !671, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!239, !627, !239}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !651, file: !44, line: 1868, baseType: !675, size: 64, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!678, !627, !239}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !651, file: !44, line: 1870, baseType: !681, size: 64, offset: 256)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!239, !587, !485, !239}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !651, file: !44, line: 1872, baseType: !685, size: 64, offset: 320)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!239, !627, !587, !526, !688}
!688 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !384, line: 30, baseType: !689)
!689 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !651, file: !44, line: 1873, baseType: !691, size: 64, offset: 384)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!239, !587, !627, !587}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !651, file: !44, line: 1874, baseType: !695, size: 64, offset: 448)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!239, !627, !587}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !651, file: !44, line: 1875, baseType: !699, size: 64, offset: 512)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!239, !627, !587, !447}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !651, file: !44, line: 1876, baseType: !703, size: 64, offset: 576)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!239, !627, !587, !526}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !651, file: !44, line: 1877, baseType: !695, size: 64, offset: 640)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !651, file: !44, line: 1878, baseType: !708, size: 64, offset: 704)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!239, !627, !587, !526, !711}
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !384, line: 16, baseType: !712)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !384, line: 13, baseType: !620)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !651, file: !44, line: 1879, baseType: !714, size: 64, offset: 768)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DISubroutineType(types: !716)
!716 = !{!239, !627, !587, !627, !587, !7}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !651, file: !44, line: 1881, baseType: !718, size: 64, offset: 832)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!239, !587, !721}
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !723)
!723 = !{!724, !725, !726, !727, !728, !731, !738, !739, !740}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !722, file: !44, line: 220, baseType: !7, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !722, file: !44, line: 221, baseType: !526, size: 16, offset: 32)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !722, file: !44, line: 222, baseType: !633, size: 32, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !722, file: !44, line: 223, baseType: !641, size: 32, offset: 96)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !722, file: !44, line: 224, baseType: !729, size: 64, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !384, line: 46, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !518, line: 88, baseType: !390)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !722, file: !44, line: 225, baseType: !732, size: 128, offset: 192)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !733, line: 13, size: 128, elements: !734)
!733 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!734 = !{!735, !737}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !732, file: !733, line: 14, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !733, line: 8, baseType: !389)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !732, file: !733, line: 15, baseType: !520, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !722, file: !44, line: 226, baseType: !732, size: 128, offset: 320)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !722, file: !44, line: 227, baseType: !732, size: 128, offset: 448)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !722, file: !44, line: 234, baseType: !562, size: 64, offset: 576)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !651, file: !44, line: 1882, baseType: !742, size: 64, offset: 896)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!239, !745, !747, !620, !7}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !749, line: 22, size: 1152, elements: !750)
!749 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!750 = !{!751, !752, !753, !754, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !748, file: !749, line: 23, baseType: !620, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !748, file: !749, line: 24, baseType: !526, size: 16, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !748, file: !749, line: 25, baseType: !7, size: 32, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !748, file: !749, line: 26, baseType: !755, size: 32, offset: 96)
!755 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !384, line: 104, baseType: !620)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !748, file: !749, line: 27, baseType: !201, size: 64, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !748, file: !749, line: 28, baseType: !201, size: 64, offset: 192)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !748, file: !749, line: 37, baseType: !201, size: 64, offset: 256)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !748, file: !749, line: 38, baseType: !711, size: 32, offset: 320)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !748, file: !749, line: 39, baseType: !711, size: 32, offset: 352)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !748, file: !749, line: 40, baseType: !633, size: 32, offset: 384)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !748, file: !749, line: 41, baseType: !641, size: 32, offset: 416)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !748, file: !749, line: 42, baseType: !729, size: 64, offset: 448)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !748, file: !749, line: 43, baseType: !732, size: 128, offset: 512)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !748, file: !749, line: 44, baseType: !732, size: 128, offset: 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !748, file: !749, line: 45, baseType: !732, size: 128, offset: 768)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !748, file: !749, line: 46, baseType: !732, size: 128, offset: 896)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !748, file: !749, line: 47, baseType: !201, size: 64, offset: 1024)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !748, file: !749, line: 48, baseType: !201, size: 64, offset: 1088)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !651, file: !44, line: 1883, baseType: !771, size: 64, offset: 960)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!516, !587, !485, !532}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !651, file: !44, line: 1884, baseType: !775, size: 64, offset: 1024)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!239, !627, !778, !201, !201}
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !651, file: !44, line: 1886, baseType: !781, size: 64, offset: 1088)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!239, !627, !784, !239}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !651, file: !44, line: 1887, baseType: !786, size: 64, offset: 1152)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!239, !627, !587, !562, !7, !526}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !651, file: !44, line: 1890, baseType: !703, size: 64, offset: 1216)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !651, file: !44, line: 1891, baseType: !791, size: 64, offset: 1280)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!239, !627, !678, !239}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !628, file: !44, line: 623, baseType: !795, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !797)
!797 = !{!798, !799, !800, !801, !802, !803, !853, !2666, !2748, !2831, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2847, !2851, !2852, !2855, !2856, !2859, !2860, !2861, !2902, !2928, !2929, !2930, !2931, !2932, !2933, !2936, !2938, !2945, !2946, !2948, !2949, !2950, !3009, !3010, !3025, !3026, !3027, !3028, !3029, !3032, !3033, !3034, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !796, file: !44, line: 1417, baseType: !392, size: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !796, file: !44, line: 1418, baseType: !711, size: 32, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !796, file: !44, line: 1419, baseType: !233, size: 8, offset: 160)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !796, file: !44, line: 1420, baseType: !230, size: 64, offset: 192)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !796, file: !44, line: 1421, baseType: !729, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !796, file: !44, line: 1422, baseType: !804, size: 64, offset: 320)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !806)
!806 = !{!807, !808, !809, !816, !820, !824, !828, !832, !833, !843, !846, !847, !848, !850, !851, !852}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !805, file: !44, line: 2229, baseType: !447, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !805, file: !44, line: 2230, baseType: !239, size: 32, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !805, file: !44, line: 2238, baseType: !810, size: 64, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!239, !813}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !815, line: 28, flags: DIFlagFwdDecl)
!815 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!816 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !805, file: !44, line: 2239, baseType: !817, size: 64, offset: 192)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !805, file: !44, line: 2240, baseType: !821, size: 64, offset: 256)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!587, !804, !239, !447, !196}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !805, file: !44, line: 2242, baseType: !825, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{null, !795}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !805, file: !44, line: 2243, baseType: !829, size: 64, offset: 384)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !831, line: 76, flags: DIFlagFwdDecl)
!831 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!832 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !805, file: !44, line: 2244, baseType: !804, size: 64, offset: 448)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !805, file: !44, line: 2245, baseType: !834, size: 64, offset: 512)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !384, line: 182, size: 64, elements: !835)
!835 = !{!836}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !834, file: !384, line: 183, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !384, line: 186, size: 128, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !838, file: !384, line: 187, baseType: !837, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !838, file: !384, line: 187, baseType: !842, size: 64, offset: 64)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !805, file: !44, line: 2247, baseType: !844, offset: 576)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !845, line: 187, elements: !228)
!845 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!846 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !805, file: !44, line: 2248, baseType: !844, offset: 576)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !805, file: !44, line: 2249, baseType: !844, offset: 576)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !805, file: !44, line: 2250, baseType: !849, offset: 576)
!849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, elements: !486)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !805, file: !44, line: 2252, baseType: !844, offset: 576)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !805, file: !44, line: 2253, baseType: !844, offset: 576)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !805, file: !44, line: 2254, baseType: !844, offset: 576)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !796, file: !44, line: 1423, baseType: !854, size: 64, offset: 384)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !857)
!857 = !{!858, !862, !866, !867, !871, !877, !881, !882, !883, !887, !891, !892, !893, !894, !900, !905, !906, !949, !950, !951, !952, !2650, !2665}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !856, file: !44, line: 1936, baseType: !859, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!627, !795}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !856, file: !44, line: 1937, baseType: !863, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !627}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !856, file: !44, line: 1938, baseType: !863, size: 64, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !856, file: !44, line: 1940, baseType: !868, size: 64, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{null, !627, !239}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !856, file: !44, line: 1941, baseType: !872, size: 64, offset: 256)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!239, !627, !875}
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !856, file: !44, line: 1942, baseType: !878, size: 64, offset: 320)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!239, !627}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !856, file: !44, line: 1943, baseType: !863, size: 64, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !856, file: !44, line: 1944, baseType: !825, size: 64, offset: 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !856, file: !44, line: 1945, baseType: !884, size: 64, offset: 512)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!239, !795, !239}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !856, file: !44, line: 1946, baseType: !888, size: 64, offset: 576)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!239, !795}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !856, file: !44, line: 1947, baseType: !888, size: 64, offset: 640)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !856, file: !44, line: 1948, baseType: !888, size: 64, offset: 704)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !856, file: !44, line: 1949, baseType: !888, size: 64, offset: 768)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !856, file: !44, line: 1950, baseType: !895, size: 64, offset: 832)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!239, !587, !898}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !856, file: !44, line: 1951, baseType: !901, size: 64, offset: 896)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!239, !795, !904, !485}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !856, file: !44, line: 1952, baseType: !825, size: 64, offset: 960)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !856, file: !44, line: 1954, baseType: !907, size: 64, offset: 1024)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!239, !910, !587}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !912, line: 16, size: 896, elements: !913)
!912 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!913 = !{!914, !915, !916, !917, !918, !919, !920, !921, !922, !944, !945, !948}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !911, file: !912, line: 17, baseType: !485, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !911, file: !912, line: 18, baseType: !532, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !911, file: !912, line: 19, baseType: !532, size: 64, offset: 128)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !911, file: !912, line: 20, baseType: !532, size: 64, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !911, file: !912, line: 21, baseType: !532, size: 64, offset: 256)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !911, file: !912, line: 22, baseType: !729, size: 64, offset: 320)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !911, file: !912, line: 23, baseType: !729, size: 64, offset: 384)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !911, file: !912, line: 24, baseType: !404, size: 192, offset: 448)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !911, file: !912, line: 25, baseType: !923, size: 64, offset: 640)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !912, line: 31, size: 256, elements: !926)
!926 = !{!927, !932, !936, !940}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !925, file: !912, line: 32, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!196, !910, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !925, file: !912, line: 33, baseType: !933, size: 64, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !910, !196}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !925, file: !912, line: 34, baseType: !937, size: 64, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DISubroutineType(types: !939)
!939 = !{!196, !910, !196, !931}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !925, file: !912, line: 35, baseType: !941, size: 64, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!239, !910, !196}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !911, file: !912, line: 26, baseType: !239, size: 32, offset: 704)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !911, file: !912, line: 27, baseType: !946, size: 64, offset: 768)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !911, file: !912, line: 28, baseType: !196, size: 64, offset: 832)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !856, file: !44, line: 1955, baseType: !907, size: 64, offset: 1088)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !856, file: !44, line: 1956, baseType: !907, size: 64, offset: 1152)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !856, file: !44, line: 1957, baseType: !907, size: 64, offset: 1216)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !856, file: !44, line: 1963, baseType: !953, size: 64, offset: 1280)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!239, !795, !956, !979}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !958, line: 68, size: 512, align: 128, elements: !959)
!958 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!959 = !{!960, !961, !2642, !2649}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !957, file: !958, line: 69, baseType: !230, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !958, line: 77, baseType: !962, size: 320, offset: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !958, line: 77, size: 320, elements: !963)
!963 = !{!964, !1181, !1186, !1214, !1222, !1228, !2573, !2641}
!964 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 78, baseType: !965, size: 320)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 78, size: 320, elements: !966)
!966 = !{!967, !968, !1179, !1180}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !965, file: !958, line: 84, baseType: !392, size: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !965, file: !958, line: 86, baseType: !969, size: 64, offset: 128)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !971)
!971 = !{!972, !973, !981, !982, !983, !998, !1007, !1008, !1009, !1010, !1172, !1173, !1176, !1177, !1178}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !970, file: !44, line: 452, baseType: !627, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !970, file: !44, line: 453, baseType: !974, size: 128, offset: 64)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !975, line: 292, size: 128, elements: !976)
!975 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!976 = !{!977, !978, !980}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !974, file: !975, line: 293, baseType: !214)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !974, file: !975, line: 295, baseType: !979, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !384, line: 148, baseType: !7)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !974, file: !975, line: 296, baseType: !196, size: 64, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !970, file: !44, line: 454, baseType: !979, size: 32, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !970, file: !44, line: 455, baseType: !411, size: 32, offset: 224)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !970, file: !44, line: 460, baseType: !984, size: 128, offset: 256)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !985, line: 125, size: 128, elements: !986)
!985 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!986 = !{!987, !997}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !984, file: !985, line: 126, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !985, line: 31, size: 64, elements: !989)
!989 = !{!990}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !988, file: !985, line: 32, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !985, line: 24, size: 192, align: 64, elements: !993)
!993 = !{!994, !995, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !992, file: !985, line: 25, baseType: !230, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !992, file: !985, line: 26, baseType: !991, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !992, file: !985, line: 27, baseType: !991, size: 64, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !984, file: !985, line: 127, baseType: !991, size: 64, offset: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !970, file: !44, line: 461, baseType: !999, size: 256, offset: 384)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1000, line: 35, size: 256, elements: !1001)
!1000 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1001 = !{!1002, !1003, !1004, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !999, file: !1000, line: 36, baseType: !381, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !999, file: !1000, line: 42, baseType: !381, size: 64, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !999, file: !1000, line: 46, baseType: !1005, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !215, line: 29, baseType: !222)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !999, file: !1000, line: 47, baseType: !392, size: 128, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !970, file: !44, line: 462, baseType: !230, size: 64, offset: 640)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !970, file: !44, line: 463, baseType: !230, size: 64, offset: 704)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !970, file: !44, line: 464, baseType: !230, size: 64, offset: 768)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !970, file: !44, line: 465, baseType: !1011, size: 64, offset: 832)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !1014)
!1014 = !{!1015, !1019, !1023, !1027, !1031, !1035, !1041, !1047, !1051, !1056, !1060, !1064, !1068, !1136, !1140, !1146, !1147, !1148, !1152, !1157, !1161, !1168}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1013, file: !44, line: 368, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!239, !956, !875}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1013, file: !44, line: 369, baseType: !1020, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!239, !562, !956}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1013, file: !44, line: 372, baseType: !1024, size: 64, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!239, !969, !875}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1013, file: !44, line: 375, baseType: !1028, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!239, !956}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1013, file: !44, line: 381, baseType: !1032, size: 64, offset: 256)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!239, !562, !969, !395, !7}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1013, file: !44, line: 383, baseType: !1036, size: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !1039}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1013, file: !44, line: 385, baseType: !1042, size: 64, offset: 384)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!239, !562, !969, !729, !7, !7, !1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1013, file: !44, line: 388, baseType: !1048, size: 64, offset: 448)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!239, !562, !969, !729, !7, !7, !956, !196}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1013, file: !44, line: 393, baseType: !1052, size: 64, offset: 512)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!1055, !969, !1055}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !384, line: 125, baseType: !201)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1013, file: !44, line: 394, baseType: !1057, size: 64, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{null, !956, !7, !7}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1013, file: !44, line: 395, baseType: !1061, size: 64, offset: 640)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!239, !956, !979}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1013, file: !44, line: 396, baseType: !1065, size: 64, offset: 704)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{null, !956}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1013, file: !44, line: 397, baseType: !1069, size: 64, offset: 768)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!516, !1072, !1094}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1081, !1082, !1083, !1086, !1087}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1073, file: !44, line: 321, baseType: !562, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1073, file: !44, line: 326, baseType: !729, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1073, file: !44, line: 327, baseType: !1078, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !1072, !520, !520}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1073, file: !44, line: 328, baseType: !196, size: 64, offset: 192)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1073, file: !44, line: 329, baseType: !239, size: 32, offset: 256)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1073, file: !44, line: 330, baseType: !1084, size: 16, offset: 288)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !202, line: 19, baseType: !1085)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !204, line: 24, baseType: !527)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1073, file: !44, line: 331, baseType: !1084, size: 16, offset: 304)
!1087 = !DIDerivedType(tag: DW_TAG_member, scope: !1073, file: !44, line: 332, baseType: !1088, size: 64, offset: 320)
!1088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1073, file: !44, line: 332, size: 64, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1088, file: !44, line: 333, baseType: !7, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1088, file: !44, line: 334, baseType: !1092, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1096, line: 29, size: 320, elements: !1097)
!1096 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1097 = !{!1098, !1099, !1100, !1101, !1127}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1095, file: !1096, line: 35, baseType: !7, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1095, file: !1096, line: 36, baseType: !532, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1095, file: !1096, line: 37, baseType: !532, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, scope: !1095, file: !1096, line: 38, baseType: !1102, size: 64, offset: 192)
!1102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1095, file: !1096, line: 38, size: 64, elements: !1103)
!1103 = !{!1104, !1112, !1119, !1123}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1102, file: !1096, line: 39, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1108, line: 17, size: 128, elements: !1109)
!1108 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1109 = !{!1110, !1111}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1107, file: !1108, line: 19, baseType: !196, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1107, file: !1108, line: 20, baseType: !533, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1102, file: !1096, line: 40, baseType: !1113, size: 64)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1096, line: 15, size: 128, elements: !1116)
!1116 = !{!1117, !1118}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1115, file: !1096, line: 16, baseType: !196, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1115, file: !1096, line: 17, baseType: !532, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1102, file: !1096, line: 41, baseType: !1120, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1122)
!1122 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1096, line: 41, flags: DIFlagFwdDecl)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1102, file: !1096, line: 42, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1126, line: 53, flags: DIFlagFwdDecl)
!1126 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1095, file: !1096, line: 44, baseType: !1128, size: 64, offset: 256)
!1128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1095, file: !1096, line: 44, size: 64, elements: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1128, file: !1096, line: 45, baseType: !230, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, scope: !1128, file: !1096, line: 46, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1128, file: !1096, line: 46, size: 64, elements: !1133)
!1133 = !{!1134, !1135}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1132, file: !1096, line: 47, baseType: !7, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1132, file: !1096, line: 48, baseType: !7, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1013, file: !44, line: 402, baseType: !1137, size: 64, offset: 832)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!239, !969, !956, !956, !5}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1013, file: !44, line: 404, baseType: !1141, size: 64, offset: 896)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!688, !956, !1144}
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1145, line: 305, baseType: !7)
!1145 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1013, file: !44, line: 405, baseType: !1065, size: 64, offset: 960)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1013, file: !44, line: 406, baseType: !1028, size: 64, offset: 1024)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1013, file: !44, line: 407, baseType: !1149, size: 64, offset: 1088)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!239, !956, !230, !230}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1013, file: !44, line: 409, baseType: !1153, size: 64, offset: 1152)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{null, !956, !1156, !1156}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1013, file: !44, line: 410, baseType: !1158, size: 64, offset: 1216)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!239, !969, !956}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1013, file: !44, line: 413, baseType: !1162, size: 64, offset: 1280)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!239, !1165, !562, !1167}
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1013, file: !44, line: 415, baseType: !1169, size: 64, offset: 1344)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !562}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !970, file: !44, line: 466, baseType: !230, size: 64, offset: 896)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !970, file: !44, line: 467, baseType: !1174, size: 32, offset: 960)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1175, line: 8, baseType: !620)
!1175 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !970, file: !44, line: 468, baseType: !214, offset: 992)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !970, file: !44, line: 469, baseType: !392, size: 128, offset: 1024)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !970, file: !44, line: 470, baseType: !196, size: 64, offset: 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !965, file: !958, line: 87, baseType: !230, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !965, file: !958, line: 94, baseType: !230, size: 64, offset: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 96, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 96, size: 64, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1182, file: !958, line: 101, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !384, line: 143, baseType: !201)
!1186 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 103, baseType: !1187, size: 320)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 103, size: 320, elements: !1188)
!1188 = !{!1189, !1199, !1202, !1203}
!1189 = !DIDerivedType(tag: DW_TAG_member, scope: !1187, file: !958, line: 104, baseType: !1190, size: 128)
!1190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1187, file: !958, line: 104, size: 128, elements: !1191)
!1191 = !{!1192, !1193}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1190, file: !958, line: 105, baseType: !392, size: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, scope: !1190, file: !958, line: 106, baseType: !1194, size: 128)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1190, file: !958, line: 106, size: 128, elements: !1195)
!1195 = !{!1196, !1197, !1198}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1194, file: !958, line: 107, baseType: !956, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1194, file: !958, line: 109, baseType: !239, size: 32, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1194, file: !958, line: 110, baseType: !239, size: 32, offset: 96)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1187, file: !958, line: 117, baseType: !1200, size: 64, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !958, line: 117, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1187, file: !958, line: 119, baseType: !196, size: 64, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, scope: !1187, file: !958, line: 120, baseType: !1204, size: 64, offset: 256)
!1204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1187, file: !958, line: 120, size: 64, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1204, file: !958, line: 121, baseType: !196, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1204, file: !958, line: 122, baseType: !230, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, scope: !1204, file: !958, line: 123, baseType: !1209, size: 32)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1204, file: !958, line: 123, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1209, file: !958, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1209, file: !958, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1209, file: !958, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1214 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 130, baseType: !1215, size: 192)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 130, size: 192, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220, !1221}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1215, file: !958, line: 131, baseType: !230, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1215, file: !958, line: 134, baseType: !233, size: 8, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1215, file: !958, line: 135, baseType: !233, size: 8, offset: 72)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1215, file: !958, line: 136, baseType: !411, size: 32, offset: 96)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1215, file: !958, line: 137, baseType: !7, size: 32, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 139, baseType: !1223, size: 256)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 139, size: 256, elements: !1224)
!1224 = !{!1225, !1226, !1227}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1223, file: !958, line: 140, baseType: !230, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1223, file: !958, line: 141, baseType: !411, size: 32, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1223, file: !958, line: 143, baseType: !392, size: 128, offset: 128)
!1228 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 145, baseType: !1229, size: 256)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 145, size: 256, elements: !1230)
!1230 = !{!1231, !1232, !1235, !1236, !2572}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1229, file: !958, line: 146, baseType: !230, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1229, file: !958, line: 147, baseType: !1233, size: 64, offset: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1234, line: 509, baseType: !956)
!1234 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1229, file: !958, line: 148, baseType: !230, size: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, scope: !1229, file: !958, line: 149, baseType: !1237, size: 64, offset: 192)
!1237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1229, file: !958, line: 149, size: 64, elements: !1238)
!1238 = !{!1239, !2571}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1237, file: !958, line: 150, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !958, line: 388, size: 7296, elements: !1242)
!1242 = !{!1243, !2570}
!1243 = !DIDerivedType(tag: DW_TAG_member, scope: !1241, file: !958, line: 389, baseType: !1244, size: 7296)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1241, file: !958, line: 389, size: 7296, elements: !1245)
!1245 = !{!1246, !1364, !1365, !1366, !1370, !1371, !1372, !1373, !1374, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1415, !1423, !1426, !1466, !1467, !2554, !2555, !2558, !2559, !2560, !2563, !2564, !2565, !2568, !2569}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1244, file: !958, line: 390, baseType: !1247, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !958, line: 305, size: 1472, elements: !1249)
!1249 = !{!1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1264, !1265, !1270, !1271, !1274, !1358, !1359, !1360, !1361, !1362}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1248, file: !958, line: 308, baseType: !230, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1248, file: !958, line: 309, baseType: !230, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1248, file: !958, line: 313, baseType: !1247, size: 64, offset: 128)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1248, file: !958, line: 313, baseType: !1247, size: 64, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1248, file: !958, line: 315, baseType: !992, size: 192, align: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1248, file: !958, line: 323, baseType: !230, size: 64, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1248, file: !958, line: 327, baseType: !1240, size: 64, offset: 512)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1248, file: !958, line: 333, baseType: !1258, size: 64, offset: 576)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1234, line: 284, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1234, line: 284, size: 64, elements: !1260)
!1260 = !{!1261}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1259, file: !1234, line: 284, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1263, line: 19, baseType: !230)
!1263 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1248, file: !958, line: 334, baseType: !230, size: 64, offset: 640)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1248, file: !958, line: 343, baseType: !1266, size: 256, offset: 704)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1248, file: !958, line: 340, size: 256, elements: !1267)
!1267 = !{!1268, !1269}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1266, file: !958, line: 341, baseType: !992, size: 192, align: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1266, file: !958, line: 342, baseType: !230, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1248, file: !958, line: 351, baseType: !392, size: 128, offset: 960)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1248, file: !958, line: 353, baseType: !1272, size: 64, offset: 1088)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !958, line: 353, flags: DIFlagFwdDecl)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1248, file: !958, line: 356, baseType: !1275, size: 64, offset: 1152)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1278)
!1278 = !{!1279, !1283, !1284, !1288, !1292, !1332, !1336, !1340, !1344, !1345, !1346, !1350, !1354}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1277, file: !14, line: 558, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{null, !1247}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1277, file: !14, line: 559, baseType: !1280, size: 64, offset: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1277, file: !14, line: 560, baseType: !1285, size: 64, offset: 128)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!239, !1247, !230}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1277, file: !14, line: 561, baseType: !1289, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!239, !1247}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1277, file: !14, line: 562, baseType: !1293, size: 64, offset: 256)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !958, line: 682, baseType: !7)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !1304, !1305, !1312, !1319, !1325, !1326, !1327, !1329, !1331}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1298, file: !14, line: 509, baseType: !1247, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1298, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1298, file: !14, line: 511, baseType: !979, size: 32, offset: 96)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1298, file: !14, line: 512, baseType: !230, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1298, file: !14, line: 513, baseType: !230, size: 64, offset: 192)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1298, file: !14, line: 514, baseType: !1306, size: 64, offset: 256)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1234, line: 385, baseType: !1308)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1234, line: 385, size: 64, elements: !1309)
!1309 = !{!1310}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1308, file: !1234, line: 385, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1263, line: 15, baseType: !230)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1298, file: !14, line: 516, baseType: !1313, size: 64, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1234, line: 359, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1234, line: 359, size: 64, elements: !1316)
!1316 = !{!1317}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1315, file: !1234, line: 359, baseType: !1318, size: 64)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1263, line: 16, baseType: !230)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1298, file: !14, line: 519, baseType: !1320, size: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1263, line: 21, baseType: !1321)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 21, size: 64, elements: !1322)
!1322 = !{!1323}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1321, file: !1263, line: 21, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1263, line: 14, baseType: !230)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1298, file: !14, line: 521, baseType: !956, size: 64, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1298, file: !14, line: 522, baseType: !956, size: 64, offset: 512)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1298, file: !14, line: 528, baseType: !1328, size: 64, offset: 576)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1298, file: !14, line: 532, baseType: !1330, size: 64, offset: 640)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1298, file: !14, line: 536, baseType: !1233, size: 64, offset: 704)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1277, file: !14, line: 563, baseType: !1333, size: 64, offset: 320)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!1296, !1297, !13}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1277, file: !14, line: 565, baseType: !1337, size: 64, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !1297, !230, !230}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1277, file: !14, line: 567, baseType: !1341, size: 64, offset: 448)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!230, !1247}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1277, file: !14, line: 571, baseType: !1293, size: 64, offset: 512)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1277, file: !14, line: 574, baseType: !1293, size: 64, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1277, file: !14, line: 579, baseType: !1347, size: 64, offset: 640)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DISubroutineType(types: !1349)
!1349 = !{!239, !1247, !230, !196, !239, !239}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1277, file: !14, line: 585, baseType: !1351, size: 64, offset: 704)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!447, !1247}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1277, file: !14, line: 615, baseType: !1355, size: 64, offset: 768)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!956, !1247, !230}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1248, file: !958, line: 359, baseType: !230, size: 64, offset: 1216)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1248, file: !958, line: 361, baseType: !562, size: 64, offset: 1280)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1248, file: !958, line: 362, baseType: !196, size: 64, offset: 1344)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1248, file: !958, line: 365, baseType: !381, size: 64, offset: 1408)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1248, file: !958, line: 373, baseType: !1363, offset: 1472)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !958, line: 296, elements: !228)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1244, file: !958, line: 391, baseType: !988, size: 64, offset: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1244, file: !958, line: 392, baseType: !201, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1244, file: !958, line: 394, baseType: !1367, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!230, !562, !230, !230, !230, !230}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1244, file: !958, line: 398, baseType: !230, size: 64, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1244, file: !958, line: 399, baseType: !230, size: 64, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1244, file: !958, line: 405, baseType: !230, size: 64, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1244, file: !958, line: 406, baseType: !230, size: 64, offset: 448)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1244, file: !958, line: 407, baseType: !1375, size: 64, offset: 512)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1234, line: 286, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1234, line: 286, size: 64, elements: !1378)
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1377, file: !1234, line: 286, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1263, line: 18, baseType: !230)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1244, file: !958, line: 416, baseType: !411, size: 32, offset: 576)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1244, file: !958, line: 428, baseType: !411, size: 32, offset: 608)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1244, file: !958, line: 437, baseType: !411, size: 32, offset: 640)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1244, file: !958, line: 447, baseType: !411, size: 32, offset: 672)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1244, file: !958, line: 450, baseType: !381, size: 64, offset: 704)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1244, file: !958, line: 452, baseType: !239, size: 32, offset: 768)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1244, file: !958, line: 454, baseType: !214, offset: 800)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1244, file: !958, line: 457, baseType: !999, size: 256, offset: 832)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1244, file: !958, line: 459, baseType: !392, size: 128, offset: 1088)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1244, file: !958, line: 466, baseType: !230, size: 64, offset: 1216)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1244, file: !958, line: 467, baseType: !230, size: 64, offset: 1280)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1244, file: !958, line: 469, baseType: !230, size: 64, offset: 1344)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1244, file: !958, line: 470, baseType: !230, size: 64, offset: 1408)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1244, file: !958, line: 471, baseType: !383, size: 64, offset: 1472)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1244, file: !958, line: 472, baseType: !230, size: 64, offset: 1536)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1244, file: !958, line: 473, baseType: !230, size: 64, offset: 1600)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1244, file: !958, line: 474, baseType: !230, size: 64, offset: 1664)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1244, file: !958, line: 475, baseType: !230, size: 64, offset: 1728)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1244, file: !958, line: 477, baseType: !214, offset: 1792)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1244, file: !958, line: 478, baseType: !230, size: 64, offset: 1792)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1244, file: !958, line: 478, baseType: !230, size: 64, offset: 1856)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1244, file: !958, line: 478, baseType: !230, size: 64, offset: 1920)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1244, file: !958, line: 478, baseType: !230, size: 64, offset: 1984)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1244, file: !958, line: 479, baseType: !230, size: 64, offset: 2048)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1244, file: !958, line: 479, baseType: !230, size: 64, offset: 2112)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1244, file: !958, line: 479, baseType: !230, size: 64, offset: 2176)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1244, file: !958, line: 480, baseType: !230, size: 64, offset: 2240)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1244, file: !958, line: 480, baseType: !230, size: 64, offset: 2304)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1244, file: !958, line: 480, baseType: !230, size: 64, offset: 2368)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1244, file: !958, line: 480, baseType: !230, size: 64, offset: 2432)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1244, file: !958, line: 482, baseType: !1412, size: 2816, offset: 2496)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 2816, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: 44)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1244, file: !958, line: 488, baseType: !1416, size: 256, offset: 5312)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1417, line: 60, size: 256, elements: !1418)
!1417 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1416, file: !1417, line: 61, baseType: !1420, size: 256)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 256, elements: !1421)
!1421 = !{!1422}
!1422 = !DISubrange(count: 4)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1244, file: !958, line: 490, baseType: !1424, size: 64, offset: 5568)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !958, line: 490, flags: DIFlagFwdDecl)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1244, file: !958, line: 493, baseType: !1427, size: 896, offset: 5632)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1428, line: 53, baseType: !1429)
!1428 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1428, line: 13, size: 896, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1434, !1437, !1438, !1439, !1440, !1460, !1461, !1462}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1429, file: !1428, line: 18, baseType: !201, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1429, file: !1428, line: 28, baseType: !383, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1429, file: !1428, line: 31, baseType: !999, size: 256, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1429, file: !1428, line: 32, baseType: !1435, size: 64, offset: 384)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1428, line: 32, flags: DIFlagFwdDecl)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1429, file: !1428, line: 37, baseType: !527, size: 16, offset: 448)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1429, file: !1428, line: 40, baseType: !404, size: 192, offset: 512)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1429, file: !1428, line: 41, baseType: !196, size: 64, offset: 704)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1429, file: !1428, line: 42, baseType: !1441, size: 64, offset: 768)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1444, line: 13, size: 896, elements: !1445)
!1444 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1445 = !{!1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1443, file: !1444, line: 14, baseType: !196, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1443, file: !1444, line: 15, baseType: !230, size: 64, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1443, file: !1444, line: 17, baseType: !230, size: 64, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1443, file: !1444, line: 17, baseType: !230, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1443, file: !1444, line: 19, baseType: !520, size: 64, offset: 256)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1443, file: !1444, line: 21, baseType: !520, size: 64, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1443, file: !1444, line: 22, baseType: !520, size: 64, offset: 384)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1443, file: !1444, line: 23, baseType: !520, size: 64, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1443, file: !1444, line: 24, baseType: !520, size: 64, offset: 512)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1443, file: !1444, line: 25, baseType: !520, size: 64, offset: 576)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1443, file: !1444, line: 26, baseType: !520, size: 64, offset: 640)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1443, file: !1444, line: 27, baseType: !520, size: 64, offset: 704)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1443, file: !1444, line: 28, baseType: !520, size: 64, offset: 768)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1443, file: !1444, line: 29, baseType: !520, size: 64, offset: 832)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1429, file: !1428, line: 44, baseType: !411, size: 32, offset: 832)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1429, file: !1428, line: 50, baseType: !1084, size: 16, offset: 864)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1429, file: !1428, line: 51, baseType: !1463, size: 16, offset: 880)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !202, line: 18, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !204, line: 23, baseType: !1465)
!1465 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1244, file: !958, line: 495, baseType: !230, size: 64, offset: 6528)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1244, file: !958, line: 497, baseType: !1468, size: 64, offset: 6592)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !958, line: 381, size: 384, elements: !1470)
!1470 = !{!1471, !1472, !2553}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1469, file: !958, line: 382, baseType: !411, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1469, file: !958, line: 383, baseType: !1473, size: 128, offset: 64)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !958, line: 376, size: 128, elements: !1474)
!1474 = !{!1475, !2551}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1473, file: !958, line: 377, baseType: !1476, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1126, line: 640, size: 48640, elements: !1478)
!1478 = !{!1479, !1485, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1500, !1518, !1529, !1614, !1615, !1616, !1627, !1628, !1630, !1631, !1632, !1633, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1712, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1750, !1752, !1753, !1754, !1766, !1767, !1768, !1769, !1770, !1771, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1795, !1800, !1984, !1985, !1986, !1987, !1991, !1994, !1997, !2000, !2003, !2007, !2106, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2152, !2153, !2154, !2155, !2156, !2161, !2162, !2163, !2166, !2167, !2170, !2173, !2176, !2179, !2211, !2214, !2215, !2294, !2295, !2298, !2299, !2302, !2303, !2304, !2308, !2309, !2310, !2323, !2324, !2325, !2335, !2340, !2341, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1477, file: !1126, line: 646, baseType: !1480, size: 128)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1481, line: 56, size: 128, elements: !1482)
!1481 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1482 = !{!1483, !1484}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1480, file: !1481, line: 57, baseType: !230, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1480, file: !1481, line: 58, baseType: !620, size: 32, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1477, file: !1126, line: 649, baseType: !1486, size: 64, offset: 128)
!1486 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !520)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1477, file: !1126, line: 657, baseType: !196, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1477, file: !1126, line: 658, baseType: !433, size: 32, offset: 256)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1477, file: !1126, line: 660, baseType: !7, size: 32, offset: 288)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1477, file: !1126, line: 661, baseType: !7, size: 32, offset: 320)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1477, file: !1126, line: 684, baseType: !239, size: 32, offset: 352)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1477, file: !1126, line: 686, baseType: !239, size: 32, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1477, file: !1126, line: 687, baseType: !239, size: 32, offset: 416)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1477, file: !1126, line: 688, baseType: !239, size: 32, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1477, file: !1126, line: 689, baseType: !7, size: 32, offset: 480)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1477, file: !1126, line: 691, baseType: !1497, size: 64, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1499)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1126, line: 691, flags: DIFlagFwdDecl)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1477, file: !1126, line: 692, baseType: !1501, size: 832, offset: 576)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1126, line: 451, size: 832, elements: !1502)
!1502 = !{!1503, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1501, file: !1126, line: 453, baseType: !1504, size: 128)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1126, line: 325, size: 128, elements: !1505)
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1504, file: !1126, line: 326, baseType: !230, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1504, file: !1126, line: 327, baseType: !620, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1501, file: !1126, line: 454, baseType: !992, size: 192, align: 64, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1501, file: !1126, line: 455, baseType: !392, size: 128, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1501, file: !1126, line: 456, baseType: !7, size: 32, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1501, file: !1126, line: 458, baseType: !201, size: 64, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1501, file: !1126, line: 459, baseType: !201, size: 64, offset: 576)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1501, file: !1126, line: 460, baseType: !201, size: 64, offset: 640)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1501, file: !1126, line: 461, baseType: !201, size: 64, offset: 704)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1501, file: !1126, line: 463, baseType: !201, size: 64, offset: 768)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1501, file: !1126, line: 465, baseType: !1517, offset: 832)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1126, line: 415, elements: !228)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1477, file: !1126, line: 693, baseType: !1519, size: 384, offset: 1408)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1126, line: 489, size: 384, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1519, file: !1126, line: 490, baseType: !392, size: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1519, file: !1126, line: 491, baseType: !230, size: 64, offset: 128)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1519, file: !1126, line: 492, baseType: !230, size: 64, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1519, file: !1126, line: 493, baseType: !7, size: 32, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1519, file: !1126, line: 494, baseType: !527, size: 16, offset: 288)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1519, file: !1126, line: 495, baseType: !527, size: 16, offset: 304)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1519, file: !1126, line: 497, baseType: !1528, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1477, file: !1126, line: 697, baseType: !1530, size: 1792, offset: 1792)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1126, line: 507, size: 1792, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1611, !1612}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1530, file: !1126, line: 508, baseType: !992, size: 192, align: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1530, file: !1126, line: 515, baseType: !201, size: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1530, file: !1126, line: 516, baseType: !201, size: 64, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1530, file: !1126, line: 517, baseType: !201, size: 64, offset: 320)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1530, file: !1126, line: 518, baseType: !201, size: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1530, file: !1126, line: 519, baseType: !201, size: 64, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1530, file: !1126, line: 526, baseType: !388, size: 64, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1530, file: !1126, line: 527, baseType: !201, size: 64, offset: 576)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1530, file: !1126, line: 528, baseType: !7, size: 32, offset: 640)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1530, file: !1126, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1530, file: !1126, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1530, file: !1126, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1530, file: !1126, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1530, file: !1126, line: 563, baseType: !1546, size: 512, offset: 704)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1547)
!1547 = !{!1548, !1556, !1557, !1562, !1605, !1608, !1609, !1610}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1546, file: !20, line: 119, baseType: !1549, size: 256)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1550, line: 9, size: 256, elements: !1551)
!1550 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1549, file: !1550, line: 10, baseType: !992, size: 192, align: 64)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1549, file: !1550, line: 11, baseType: !1554, size: 64, offset: 192)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1555, line: 29, baseType: !388)
!1555 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1546, file: !20, line: 120, baseType: !1554, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1546, file: !20, line: 121, baseType: !1558, size: 64, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!19, !1561}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1546, file: !20, line: 122, baseType: !1563, size: 64, offset: 384)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1565)
!1565 = !{!1566, !1586, !1587, !1590, !1595, !1596, !1600, !1604}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1564, file: !20, line: 160, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1568, file: !20, line: 215, baseType: !1005)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1568, file: !20, line: 216, baseType: !7, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1568, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1568, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1568, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1568, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1568, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1568, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1568, file: !20, line: 233, baseType: !1554, size: 64, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1568, file: !20, line: 234, baseType: !1561, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1568, file: !20, line: 235, baseType: !1554, size: 64, offset: 256)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1568, file: !20, line: 236, baseType: !1561, size: 64, offset: 320)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1568, file: !20, line: 237, baseType: !1583, size: 4096, offset: 512)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1564, size: 4096, elements: !1584)
!1584 = !{!1585}
!1585 = !DISubrange(count: 8)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1564, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1564, file: !20, line: 162, baseType: !1588, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !384, line: 27, baseType: !1589)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !518, line: 96, baseType: !239)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1564, file: !20, line: 163, baseType: !1591, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !593, line: 276, baseType: !1592)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !593, line: 276, size: 32, elements: !1593)
!1593 = !{!1594}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1592, file: !593, line: 276, baseType: !597, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1564, file: !20, line: 164, baseType: !1561, size: 64, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1564, file: !20, line: 165, baseType: !1597, size: 128, offset: 256)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1550, line: 14, size: 128, elements: !1598)
!1598 = !{!1599}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1597, file: !1550, line: 15, baseType: !984, size: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1564, file: !20, line: 166, baseType: !1601, size: 64, offset: 384)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DISubroutineType(types: !1603)
!1603 = !{!1554}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1564, file: !20, line: 167, baseType: !1554, size: 64, offset: 448)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1546, file: !20, line: 123, baseType: !1606, size: 8, offset: 448)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !202, line: 17, baseType: !1607)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !204, line: 21, baseType: !233)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1546, file: !20, line: 124, baseType: !1606, size: 8, offset: 456)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1546, file: !20, line: 125, baseType: !1606, size: 8, offset: 464)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1546, file: !20, line: 126, baseType: !1606, size: 8, offset: 472)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1530, file: !1126, line: 572, baseType: !1546, size: 512, offset: 1216)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1530, file: !1126, line: 580, baseType: !1613, size: 64, offset: 1728)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1477, file: !1126, line: 721, baseType: !7, size: 32, offset: 3584)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1477, file: !1126, line: 722, baseType: !239, size: 32, offset: 3616)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1477, file: !1126, line: 723, baseType: !1617, size: 64, offset: 3648)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1619)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1620, line: 17, baseType: !1621)
!1620 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1620, line: 17, size: 64, elements: !1622)
!1622 = !{!1623}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1621, file: !1620, line: 17, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 64, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 1)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1477, file: !1126, line: 724, baseType: !1619, size: 64, offset: 3712)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1477, file: !1126, line: 749, baseType: !1629, offset: 3776)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1126, line: 290, elements: !228)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1477, file: !1126, line: 751, baseType: !392, size: 128, offset: 3776)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1477, file: !1126, line: 757, baseType: !1240, size: 64, offset: 3904)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1477, file: !1126, line: 758, baseType: !1240, size: 64, offset: 3968)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1477, file: !1126, line: 761, baseType: !1634, size: 320, offset: 4032)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1417, line: 34, size: 320, elements: !1635)
!1635 = !{!1636, !1637}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1634, file: !1417, line: 35, baseType: !201, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1634, file: !1417, line: 36, baseType: !1638, size: 256, offset: 64)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1247, size: 256, elements: !1421)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1477, file: !1126, line: 766, baseType: !239, size: 32, offset: 4352)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1477, file: !1126, line: 767, baseType: !239, size: 32, offset: 4384)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1477, file: !1126, line: 768, baseType: !239, size: 32, offset: 4416)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1477, file: !1126, line: 770, baseType: !239, size: 32, offset: 4448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1477, file: !1126, line: 772, baseType: !230, size: 64, offset: 4480)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1477, file: !1126, line: 775, baseType: !7, size: 32, offset: 4544)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1477, file: !1126, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1477, file: !1126, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1477, file: !1126, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1477, file: !1126, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1477, file: !1126, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1477, file: !1126, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1477, file: !1126, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1477, file: !1126, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1477, file: !1126, line: 831, baseType: !230, size: 64, offset: 4672)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1477, file: !1126, line: 833, baseType: !1655, size: 384, offset: 4736)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1656)
!1656 = !{!1657, !1662}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1655, file: !25, line: 26, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!520, !1661}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !25, line: 27, baseType: !1663, size: 320, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1655, file: !25, line: 27, size: 320, elements: !1664)
!1664 = !{!1665, !1675, !1702}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1663, file: !25, line: 36, baseType: !1666, size: 320)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 29, size: 320, elements: !1667)
!1667 = !{!1668, !1670, !1671, !1672, !1673, !1674}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1666, file: !25, line: 30, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1666, file: !25, line: 31, baseType: !620, size: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1666, file: !25, line: 32, baseType: !620, size: 32, offset: 96)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1666, file: !25, line: 33, baseType: !620, size: 32, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1666, file: !25, line: 34, baseType: !201, size: 64, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1666, file: !25, line: 35, baseType: !1669, size: 64, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1663, file: !25, line: 46, baseType: !1676, size: 192)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 38, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1701}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1676, file: !25, line: 39, baseType: !1588, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1676, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, scope: !1676, file: !25, line: 41, baseType: !1681, size: 64, offset: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1676, file: !25, line: 41, size: 64, elements: !1682)
!1682 = !{!1683, !1691}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1681, file: !25, line: 42, baseType: !1684, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1686, line: 7, size: 128, elements: !1687)
!1686 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1687 = !{!1688, !1690}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1685, file: !1686, line: 8, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !518, line: 93, baseType: !390)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1685, file: !1686, line: 9, baseType: !390, size: 64, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1681, file: !25, line: 43, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1694, line: 7, size: 64, elements: !1695)
!1694 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1695 = !{!1696, !1700}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1693, file: !1694, line: 8, baseType: !1697, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1694, line: 5, baseType: !1698)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !202, line: 20, baseType: !1699)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !204, line: 26, baseType: !239)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1693, file: !1694, line: 9, baseType: !1698, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1676, file: !25, line: 45, baseType: !201, size: 64, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1663, file: !25, line: 54, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !25, line: 48, size: 256, elements: !1704)
!1704 = !{!1705, !1708, !1709, !1710, !1711}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1703, file: !25, line: 49, baseType: !1706, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1703, file: !25, line: 50, baseType: !239, size: 32, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1703, file: !25, line: 51, baseType: !239, size: 32, offset: 96)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1703, file: !25, line: 52, baseType: !230, size: 64, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1703, file: !25, line: 53, baseType: !230, size: 64, offset: 192)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1477, file: !1126, line: 835, baseType: !1713, size: 32, offset: 5120)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !384, line: 22, baseType: !1714)
!1714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !518, line: 28, baseType: !239)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1477, file: !1126, line: 836, baseType: !1713, size: 32, offset: 5152)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1477, file: !1126, line: 840, baseType: !230, size: 64, offset: 5184)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1477, file: !1126, line: 849, baseType: !1476, size: 64, offset: 5248)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1477, file: !1126, line: 852, baseType: !1476, size: 64, offset: 5312)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1477, file: !1126, line: 857, baseType: !392, size: 128, offset: 5376)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1477, file: !1126, line: 858, baseType: !392, size: 128, offset: 5504)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1477, file: !1126, line: 859, baseType: !1476, size: 64, offset: 5632)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1477, file: !1126, line: 867, baseType: !392, size: 128, offset: 5696)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1477, file: !1126, line: 868, baseType: !392, size: 128, offset: 5824)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1477, file: !1126, line: 871, baseType: !1725, size: 64, offset: 5952)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1727)
!1727 = !{!1728, !1729, !1730, !1731, !1733, !1734, !1741, !1742}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1726, file: !53, line: 61, baseType: !433, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1726, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1726, file: !53, line: 63, baseType: !214, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1726, file: !53, line: 65, baseType: !1732, size: 256, offset: 64)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !834, size: 256, elements: !1421)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1726, file: !53, line: 66, baseType: !834, size: 64, offset: 320)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1726, file: !53, line: 68, baseType: !1735, size: 128, offset: 384)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1736, line: 40, baseType: !1737)
!1736 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1736, line: 36, size: 128, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1737, file: !1736, line: 37, baseType: !214)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1737, file: !1736, line: 38, baseType: !392, size: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1726, file: !53, line: 69, baseType: !570, size: 128, align: 64, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1726, file: !53, line: 70, baseType: !1743, size: 128, offset: 640)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1744, size: 128, elements: !1625)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1745)
!1745 = !{!1746, !1747}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1744, file: !53, line: 55, baseType: !239, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1744, file: !53, line: 56, baseType: !1748, size: 64, offset: 64)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1477, file: !1126, line: 872, baseType: !1751, size: 512, offset: 6016)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !838, size: 512, elements: !1421)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1477, file: !1126, line: 873, baseType: !392, size: 128, offset: 6528)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1477, file: !1126, line: 874, baseType: !392, size: 128, offset: 6656)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1477, file: !1126, line: 876, baseType: !1755, size: 64, offset: 6784)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1757, line: 26, size: 192, elements: !1758)
!1757 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1758 = !{!1759, !1760}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1756, file: !1757, line: 27, baseType: !7, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1756, file: !1757, line: 28, baseType: !1761, size: 128, offset: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1762, line: 43, size: 128, elements: !1763)
!1762 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1761, file: !1762, line: 44, baseType: !1005)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1761, file: !1762, line: 45, baseType: !392, size: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1477, file: !1126, line: 879, baseType: !904, size: 64, offset: 6848)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1477, file: !1126, line: 882, baseType: !904, size: 64, offset: 6912)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1477, file: !1126, line: 884, baseType: !201, size: 64, offset: 6976)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1477, file: !1126, line: 885, baseType: !201, size: 64, offset: 7040)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1477, file: !1126, line: 890, baseType: !201, size: 64, offset: 7104)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1477, file: !1126, line: 891, baseType: !1772, size: 128, offset: 7168)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1126, line: 242, size: 128, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1772, file: !1126, line: 244, baseType: !201, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1772, file: !1126, line: 245, baseType: !201, size: 64, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1772, file: !1126, line: 246, baseType: !1005, offset: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1477, file: !1126, line: 900, baseType: !230, size: 64, offset: 7296)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1477, file: !1126, line: 901, baseType: !230, size: 64, offset: 7360)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1477, file: !1126, line: 904, baseType: !201, size: 64, offset: 7424)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1477, file: !1126, line: 907, baseType: !201, size: 64, offset: 7488)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1477, file: !1126, line: 910, baseType: !230, size: 64, offset: 7552)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1477, file: !1126, line: 911, baseType: !230, size: 64, offset: 7616)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1477, file: !1126, line: 914, baseType: !1784, size: 640, offset: 7680)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1785, line: 123, size: 640, elements: !1786)
!1785 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1786 = !{!1787, !1793, !1794}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1784, file: !1785, line: 124, baseType: !1788, size: 576)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1789, size: 576, elements: !486)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1785, line: 108, size: 192, elements: !1790)
!1790 = !{!1791, !1792}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1789, file: !1785, line: 109, baseType: !201, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1789, file: !1785, line: 110, baseType: !1597, size: 128, offset: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1784, file: !1785, line: 125, baseType: !7, size: 32, offset: 576)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1784, file: !1785, line: 126, baseType: !7, size: 32, offset: 608)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1477, file: !1126, line: 917, baseType: !1796, size: 192, offset: 8320)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1785, line: 134, size: 192, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1796, file: !1785, line: 135, baseType: !570, size: 128, align: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1796, file: !1785, line: 136, baseType: !7, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1477, file: !1126, line: 923, baseType: !1801, size: 64, offset: 8512)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1804, line: 111, size: 1280, elements: !1805)
!1804 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1825, !1826, !1827, !1828, !1829, !1830, !1937, !1938, !1939, !1940, !1966, !1969, !1979}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1803, file: !1804, line: 112, baseType: !411, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1803, file: !1804, line: 120, baseType: !633, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1803, file: !1804, line: 121, baseType: !641, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1803, file: !1804, line: 122, baseType: !633, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1803, file: !1804, line: 123, baseType: !641, size: 32, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1803, file: !1804, line: 124, baseType: !633, size: 32, offset: 160)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1803, file: !1804, line: 125, baseType: !641, size: 32, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1803, file: !1804, line: 126, baseType: !633, size: 32, offset: 224)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1803, file: !1804, line: 127, baseType: !641, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1803, file: !1804, line: 128, baseType: !7, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1803, file: !1804, line: 129, baseType: !1817, size: 64, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1818, line: 26, baseType: !1819)
!1818 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1818, line: 24, size: 64, elements: !1820)
!1820 = !{!1821}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1819, file: !1818, line: 25, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !1823)
!1823 = !{!1824}
!1824 = !DISubrange(count: 2)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1803, file: !1804, line: 130, baseType: !1817, size: 64, offset: 384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1803, file: !1804, line: 131, baseType: !1817, size: 64, offset: 448)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1803, file: !1804, line: 132, baseType: !1817, size: 64, offset: 512)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1803, file: !1804, line: 133, baseType: !1817, size: 64, offset: 576)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1803, file: !1804, line: 135, baseType: !233, size: 8, offset: 640)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1803, file: !1804, line: 137, baseType: !1831, size: 64, offset: 704)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1833, line: 189, size: 1664, elements: !1834)
!1833 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1834 = !{!1835, !1836, !1839, !1844, !1845, !1848, !1849, !1854, !1855, !1856, !1857, !1859, !1860, !1861, !1862, !1863, !1901, !1922}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1832, file: !1833, line: 190, baseType: !433, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1832, file: !1833, line: 191, baseType: !1837, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1833, line: 28, baseType: !1838)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !384, line: 98, baseType: !1698)
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1832, file: !1833, line: 192, baseType: !1840, size: 192, offset: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1832, file: !1833, line: 192, size: 192, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1840, file: !1833, line: 193, baseType: !392, size: 128)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1840, file: !1833, line: 194, baseType: !992, size: 192, align: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1832, file: !1833, line: 199, baseType: !999, size: 256, offset: 256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1832, file: !1833, line: 200, baseType: !1846, size: 64, offset: 512)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1833, line: 200, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1832, file: !1833, line: 201, baseType: !196, size: 64, offset: 576)
!1849 = !DIDerivedType(tag: DW_TAG_member, scope: !1832, file: !1833, line: 202, baseType: !1850, size: 64, offset: 640)
!1850 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1832, file: !1833, line: 202, size: 64, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1850, file: !1833, line: 203, baseType: !736, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1850, file: !1833, line: 204, baseType: !736, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1832, file: !1833, line: 206, baseType: !736, size: 64, offset: 704)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1832, file: !1833, line: 207, baseType: !633, size: 32, offset: 768)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1832, file: !1833, line: 208, baseType: !641, size: 32, offset: 800)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1832, file: !1833, line: 209, baseType: !1858, size: 32, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1833, line: 31, baseType: !755)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1832, file: !1833, line: 210, baseType: !527, size: 16, offset: 864)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1832, file: !1833, line: 211, baseType: !527, size: 16, offset: 880)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1832, file: !1833, line: 215, baseType: !1465, size: 16, offset: 896)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1832, file: !1833, line: 222, baseType: !230, size: 64, offset: 960)
!1863 = !DIDerivedType(tag: DW_TAG_member, scope: !1832, file: !1833, line: 239, baseType: !1864, size: 320, offset: 1024)
!1864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1832, file: !1833, line: 239, size: 320, elements: !1865)
!1865 = !{!1866, !1893}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1864, file: !1833, line: 240, baseType: !1867, size: 320)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1833, line: 108, size: 320, elements: !1868)
!1868 = !{!1869, !1870, !1882, !1885, !1892}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1867, file: !1833, line: 110, baseType: !230, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, scope: !1867, file: !1833, line: 111, baseType: !1871, size: 64, offset: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1867, file: !1833, line: 111, size: 64, elements: !1872)
!1872 = !{!1873, !1881}
!1873 = !DIDerivedType(tag: DW_TAG_member, scope: !1871, file: !1833, line: 112, baseType: !1874, size: 64)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1871, file: !1833, line: 112, size: 64, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1874, file: !1833, line: 114, baseType: !1084, size: 16)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1874, file: !1833, line: 115, baseType: !1878, size: 48, offset: 16)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 48, elements: !1879)
!1879 = !{!1880}
!1880 = !DISubrange(count: 6)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1871, file: !1833, line: 121, baseType: !230, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1867, file: !1833, line: 123, baseType: !1883, size: 64, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1833, line: 96, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1867, file: !1833, line: 124, baseType: !1886, size: 64, offset: 192)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1833, line: 102, size: 192, elements: !1888)
!1888 = !{!1889, !1890, !1891}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1887, file: !1833, line: 103, baseType: !570, size: 128, align: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1887, file: !1833, line: 104, baseType: !433, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1887, file: !1833, line: 105, baseType: !688, size: 8, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1867, file: !1833, line: 125, baseType: !447, size: 64, offset: 256)
!1893 = !DIDerivedType(tag: DW_TAG_member, scope: !1864, file: !1833, line: 241, baseType: !1894, size: 320)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1864, file: !1833, line: 241, size: 320, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1894, file: !1833, line: 242, baseType: !230, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1894, file: !1833, line: 243, baseType: !230, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1894, file: !1833, line: 244, baseType: !1883, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1894, file: !1833, line: 245, baseType: !1886, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1894, file: !1833, line: 246, baseType: !485, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1832, file: !1833, line: 254, baseType: !1902, size: 256, offset: 1344)
!1902 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1832, file: !1833, line: 254, size: 256, elements: !1903)
!1903 = !{!1904, !1910}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1902, file: !1833, line: 255, baseType: !1905, size: 256)
!1905 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1833, line: 128, size: 256, elements: !1906)
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1905, file: !1833, line: 129, baseType: !196, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1905, file: !1833, line: 130, baseType: !1909, size: 256)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 256, elements: !1421)
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1902, file: !1833, line: 256, baseType: !1911, size: 256)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1902, file: !1833, line: 256, size: 256, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1911, file: !1833, line: 258, baseType: !392, size: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1911, file: !1833, line: 259, baseType: !1915, size: 128, offset: 128)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1916, line: 22, size: 128, elements: !1917)
!1916 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1917 = !{!1918, !1921}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1915, file: !1916, line: 23, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1916, line: 23, flags: DIFlagFwdDecl)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1915, file: !1916, line: 24, baseType: !230, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1832, file: !1833, line: 274, baseType: !1923, size: 64, offset: 1600)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1833, line: 170, size: 192, elements: !1925)
!1925 = !{!1926, !1935, !1936}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1924, file: !1833, line: 171, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1833, line: 165, baseType: !1928)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!239, !1831, !1931, !1933, !1831}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1884)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1905)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1924, file: !1833, line: 172, baseType: !1831, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1924, file: !1833, line: 173, baseType: !1883, size: 64, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1803, file: !1804, line: 138, baseType: !1831, size: 64, offset: 768)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1803, file: !1804, line: 139, baseType: !1831, size: 64, offset: 832)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1803, file: !1804, line: 140, baseType: !1831, size: 64, offset: 896)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1803, file: !1804, line: 145, baseType: !1941, size: 64, offset: 960)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1943, line: 13, size: 896, elements: !1944)
!1943 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1942, file: !1943, line: 14, baseType: !433, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1942, file: !1943, line: 15, baseType: !411, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1942, file: !1943, line: 16, baseType: !411, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1942, file: !1943, line: 21, baseType: !381, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1942, file: !1943, line: 27, baseType: !230, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1942, file: !1943, line: 28, baseType: !230, size: 64, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1942, file: !1943, line: 29, baseType: !381, size: 64, offset: 320)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1942, file: !1943, line: 32, baseType: !838, size: 128, offset: 384)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1942, file: !1943, line: 33, baseType: !633, size: 32, offset: 512)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1942, file: !1943, line: 37, baseType: !381, size: 64, offset: 576)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1942, file: !1943, line: 44, baseType: !1956, size: 256, offset: 640)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1957, line: 15, size: 256, elements: !1958)
!1957 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1958 = !{!1959, !1960, !1961, !1962, !1963, !1964, !1965}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1956, file: !1957, line: 16, baseType: !1005)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1956, file: !1957, line: 18, baseType: !239, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1956, file: !1957, line: 19, baseType: !239, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1956, file: !1957, line: 20, baseType: !239, size: 32, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1956, file: !1957, line: 21, baseType: !239, size: 32, offset: 96)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1956, file: !1957, line: 22, baseType: !230, size: 64, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1956, file: !1957, line: 23, baseType: !230, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1803, file: !1804, line: 146, baseType: !1967, size: 64, offset: 1024)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !634, line: 18, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1803, file: !1804, line: 147, baseType: !1970, size: 64, offset: 1088)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1804, line: 25, size: 64, elements: !1972)
!1972 = !{!1973, !1974, !1975}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1971, file: !1804, line: 26, baseType: !411, size: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1971, file: !1804, line: 27, baseType: !239, size: 32, offset: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1971, file: !1804, line: 28, baseType: !1976, offset: 64)
!1976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, elements: !1977)
!1977 = !{!1978}
!1978 = !DISubrange(count: 0)
!1979 = !DIDerivedType(tag: DW_TAG_member, scope: !1803, file: !1804, line: 149, baseType: !1980, size: 128, offset: 1152)
!1980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1803, file: !1804, line: 149, size: 128, elements: !1981)
!1981 = !{!1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1980, file: !1804, line: 150, baseType: !239, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1980, file: !1804, line: 151, baseType: !570, size: 128, align: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1477, file: !1126, line: 926, baseType: !1801, size: 64, offset: 8576)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1477, file: !1126, line: 929, baseType: !1801, size: 64, offset: 8640)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1477, file: !1126, line: 933, baseType: !1831, size: 64, offset: 8704)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1477, file: !1126, line: 943, baseType: !1988, size: 128, offset: 8768)
!1988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 128, elements: !1989)
!1989 = !{!1990}
!1990 = !DISubrange(count: 16)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1477, file: !1126, line: 945, baseType: !1992, size: 64, offset: 8896)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1126, line: 49, flags: DIFlagFwdDecl)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1477, file: !1126, line: 956, baseType: !1995, size: 64, offset: 8960)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1126, line: 45, flags: DIFlagFwdDecl)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1477, file: !1126, line: 959, baseType: !1998, size: 64, offset: 9024)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1126, line: 959, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1477, file: !1126, line: 962, baseType: !2001, size: 64, offset: 9088)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1126, line: 66, flags: DIFlagFwdDecl)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1477, file: !1126, line: 966, baseType: !2004, size: 64, offset: 9152)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2006, line: 35, flags: DIFlagFwdDecl)
!2006 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1477, file: !1126, line: 969, baseType: !2008, size: 64, offset: 9216)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2010, line: 82, size: 7296, elements: !2011)
!2010 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !{!2012, !2013, !2014, !2015, !2016, !2017, !2018, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2047, !2056, !2057, !2059, !2060, !2061, !2062, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2092, !2093, !2100, !2101, !2102, !2103, !2104, !2105}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2009, file: !2010, line: 83, baseType: !433, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2009, file: !2010, line: 84, baseType: !411, size: 32, offset: 32)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2009, file: !2010, line: 85, baseType: !239, size: 32, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2009, file: !2010, line: 86, baseType: !392, size: 128, offset: 128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2009, file: !2010, line: 88, baseType: !1735, size: 128, offset: 256)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2009, file: !2010, line: 91, baseType: !1476, size: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2009, file: !2010, line: 94, baseType: !2019, size: 192, offset: 448)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2020, line: 30, size: 192, elements: !2021)
!2020 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2019, file: !2020, line: 31, baseType: !392, size: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2019, file: !2020, line: 32, baseType: !2024, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2025, line: 25, baseType: !2026)
!2025 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2025, line: 23, size: 64, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2026, file: !2025, line: 24, baseType: !1624, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2009, file: !2010, line: 97, baseType: !834, size: 64, offset: 640)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2009, file: !2010, line: 100, baseType: !239, size: 32, offset: 704)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2009, file: !2010, line: 106, baseType: !239, size: 32, offset: 736)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2009, file: !2010, line: 107, baseType: !1476, size: 64, offset: 768)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2009, file: !2010, line: 110, baseType: !239, size: 32, offset: 832)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2009, file: !2010, line: 111, baseType: !7, size: 32, offset: 864)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2009, file: !2010, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2009, file: !2010, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2009, file: !2010, line: 128, baseType: !239, size: 32, offset: 928)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2009, file: !2010, line: 129, baseType: !392, size: 128, offset: 960)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2009, file: !2010, line: 132, baseType: !1546, size: 512, offset: 1088)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2009, file: !2010, line: 133, baseType: !1554, size: 64, offset: 1600)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2009, file: !2010, line: 140, baseType: !2042, size: 256, offset: 1664)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2043, size: 256, elements: !1823)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2010, line: 38, size: 128, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2043, file: !2010, line: 39, baseType: !201, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2043, file: !2010, line: 40, baseType: !201, size: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2009, file: !2010, line: 146, baseType: !2048, size: 192, offset: 1920)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2010, line: 66, size: 192, elements: !2049)
!2049 = !{!2050}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2048, file: !2010, line: 67, baseType: !2051, size: 192)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2010, line: 47, size: 192, elements: !2052)
!2052 = !{!2053, !2054, !2055}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2051, file: !2010, line: 48, baseType: !383, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2051, file: !2010, line: 49, baseType: !383, size: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2051, file: !2010, line: 50, baseType: !383, size: 64, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2009, file: !2010, line: 150, baseType: !1784, size: 640, offset: 2112)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2009, file: !2010, line: 153, baseType: !2058, size: 256, offset: 2752)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1725, size: 256, elements: !1421)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2009, file: !2010, line: 159, baseType: !1725, size: 64, offset: 3008)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2009, file: !2010, line: 162, baseType: !239, size: 32, offset: 3072)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2009, file: !2010, line: 164, baseType: !424, size: 64, offset: 3136)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2009, file: !2010, line: 175, baseType: !2063, size: 32, offset: 3200)
!2063 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !593, line: 805, baseType: !2064)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !593, line: 798, size: 32, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2064, file: !593, line: 803, baseType: !592, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2064, file: !593, line: 804, baseType: !214, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2009, file: !2010, line: 176, baseType: !201, size: 64, offset: 3264)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2009, file: !2010, line: 176, baseType: !201, size: 64, offset: 3328)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2009, file: !2010, line: 176, baseType: !201, size: 64, offset: 3392)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2009, file: !2010, line: 176, baseType: !201, size: 64, offset: 3456)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2009, file: !2010, line: 177, baseType: !201, size: 64, offset: 3520)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2009, file: !2010, line: 178, baseType: !201, size: 64, offset: 3584)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2009, file: !2010, line: 179, baseType: !1772, size: 128, offset: 3648)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2009, file: !2010, line: 180, baseType: !230, size: 64, offset: 3776)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2009, file: !2010, line: 180, baseType: !230, size: 64, offset: 3840)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2009, file: !2010, line: 180, baseType: !230, size: 64, offset: 3904)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2009, file: !2010, line: 180, baseType: !230, size: 64, offset: 3968)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2009, file: !2010, line: 181, baseType: !230, size: 64, offset: 4032)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2009, file: !2010, line: 181, baseType: !230, size: 64, offset: 4096)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2009, file: !2010, line: 181, baseType: !230, size: 64, offset: 4160)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2009, file: !2010, line: 181, baseType: !230, size: 64, offset: 4224)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2009, file: !2010, line: 182, baseType: !230, size: 64, offset: 4288)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2009, file: !2010, line: 182, baseType: !230, size: 64, offset: 4352)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2009, file: !2010, line: 182, baseType: !230, size: 64, offset: 4416)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2009, file: !2010, line: 182, baseType: !230, size: 64, offset: 4480)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2009, file: !2010, line: 183, baseType: !230, size: 64, offset: 4544)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2009, file: !2010, line: 183, baseType: !230, size: 64, offset: 4608)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2009, file: !2010, line: 184, baseType: !2090, offset: 4672)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2091, line: 12, elements: !228)
!2091 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2009, file: !2010, line: 192, baseType: !205, size: 64, offset: 4672)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2009, file: !2010, line: 203, baseType: !2094, size: 2048, offset: 4736)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 2048, elements: !1989)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2096, line: 43, size: 128, elements: !2097)
!2096 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2097 = !{!2098, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2095, file: !2096, line: 44, baseType: !534, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2095, file: !2096, line: 45, baseType: !534, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2009, file: !2010, line: 220, baseType: !688, size: 8, offset: 6784)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2009, file: !2010, line: 221, baseType: !1465, size: 16, offset: 6800)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2009, file: !2010, line: 222, baseType: !1465, size: 16, offset: 6816)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2009, file: !2010, line: 224, baseType: !1240, size: 64, offset: 6848)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2009, file: !2010, line: 227, baseType: !404, size: 192, offset: 6912)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2009, file: !2010, line: 233, baseType: !404, size: 192, offset: 7104)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1477, file: !1126, line: 970, baseType: !2107, size: 64, offset: 9280)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2010, line: 20, size: 16576, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2108, file: !2010, line: 21, baseType: !214)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2108, file: !2010, line: 22, baseType: !433, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2108, file: !2010, line: 23, baseType: !1735, size: 128, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2108, file: !2010, line: 24, baseType: !2114, size: 16384, offset: 192)
!2114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2115, size: 16384, elements: !490)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2020, line: 49, size: 256, elements: !2116)
!2116 = !{!2117}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2115, file: !2020, line: 50, baseType: !2118, size: 256)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2020, line: 35, size: 256, elements: !2119)
!2119 = !{!2120, !2127, !2128, !2134}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2118, file: !2020, line: 37, baseType: !2121, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2122, line: 19, baseType: !2123)
!2122 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2122, line: 18, baseType: !2125)
!2125 = !DISubroutineType(types: !2126)
!2126 = !{null, !239}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2118, file: !2020, line: 38, baseType: !230, size: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2118, file: !2020, line: 44, baseType: !2129, size: 64, offset: 128)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2122, line: 22, baseType: !2130)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2122, line: 21, baseType: !2132)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{null}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2118, file: !2020, line: 46, baseType: !2024, size: 64, offset: 192)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1477, file: !1126, line: 971, baseType: !2024, size: 64, offset: 9344)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1477, file: !1126, line: 972, baseType: !2024, size: 64, offset: 9408)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1477, file: !1126, line: 974, baseType: !2024, size: 64, offset: 9472)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1477, file: !1126, line: 975, baseType: !2019, size: 192, offset: 9536)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1477, file: !1126, line: 976, baseType: !230, size: 64, offset: 9728)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1477, file: !1126, line: 977, baseType: !532, size: 64, offset: 9792)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1477, file: !1126, line: 978, baseType: !7, size: 32, offset: 9856)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1477, file: !1126, line: 980, baseType: !573, size: 64, offset: 9920)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1477, file: !1126, line: 989, baseType: !2144, size: 128, offset: 9984)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2145, line: 35, size: 128, elements: !2146)
!2145 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2144, file: !2145, line: 36, baseType: !239, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2144, file: !2145, line: 37, baseType: !411, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2144, file: !2145, line: 38, baseType: !2150, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2145, line: 23, flags: DIFlagFwdDecl)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1477, file: !1126, line: 992, baseType: !201, size: 64, offset: 10112)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1477, file: !1126, line: 993, baseType: !201, size: 64, offset: 10176)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1477, file: !1126, line: 996, baseType: !214, offset: 10240)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1477, file: !1126, line: 999, baseType: !1005, offset: 10240)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1477, file: !1126, line: 1001, baseType: !2157, size: 64, offset: 10240)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1126, line: 636, size: 64, elements: !2158)
!2158 = !{!2159}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2157, file: !1126, line: 637, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1477, file: !1126, line: 1005, baseType: !984, size: 128, offset: 10304)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1477, file: !1126, line: 1007, baseType: !1476, size: 64, offset: 10432)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1477, file: !1126, line: 1009, baseType: !2164, size: 64, offset: 10496)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1126, line: 1009, flags: DIFlagFwdDecl)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1477, file: !1126, line: 1043, baseType: !196, size: 64, offset: 10560)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1477, file: !1126, line: 1046, baseType: !2168, size: 64, offset: 10624)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1126, line: 41, flags: DIFlagFwdDecl)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1477, file: !1126, line: 1050, baseType: !2171, size: 64, offset: 10688)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1126, line: 42, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1477, file: !1126, line: 1054, baseType: !2174, size: 64, offset: 10752)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1126, line: 55, flags: DIFlagFwdDecl)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1477, file: !1126, line: 1056, baseType: !2177, size: 64, offset: 10816)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1126, line: 40, flags: DIFlagFwdDecl)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1477, file: !1126, line: 1058, baseType: !2180, size: 64, offset: 10880)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2182, line: 99, size: 704, elements: !2183)
!2182 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2183 = !{!2184, !2185, !2186, !2187, !2188, !2189, !2190, !2209, !2210}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2181, file: !2182, line: 100, baseType: !381, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2181, file: !2182, line: 101, baseType: !411, size: 32, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2181, file: !2182, line: 102, baseType: !411, size: 32, offset: 96)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2181, file: !2182, line: 105, baseType: !214, offset: 128)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2181, file: !2182, line: 107, baseType: !527, size: 16, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2181, file: !2182, line: 109, baseType: !974, size: 128, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2181, file: !2182, line: 110, baseType: !2191, size: 64, offset: 320)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2182, line: 73, size: 448, elements: !2193)
!2193 = !{!2194, !2197, !2198, !2203, !2208}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2192, file: !2182, line: 74, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2182, line: 74, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2192, file: !2182, line: 75, baseType: !2180, size: 64, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2182, line: 83, baseType: !2199, size: 128, offset: 128)
!2199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2192, file: !2182, line: 83, size: 128, elements: !2200)
!2200 = !{!2201, !2202}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2199, file: !2182, line: 84, baseType: !392, size: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2199, file: !2182, line: 85, baseType: !1200, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2182, line: 87, baseType: !2204, size: 128, offset: 256)
!2204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2192, file: !2182, line: 87, size: 128, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2204, file: !2182, line: 88, baseType: !838, size: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2204, file: !2182, line: 89, baseType: !570, size: 128, align: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2192, file: !2182, line: 92, baseType: !7, size: 32, offset: 384)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2181, file: !2182, line: 111, baseType: !834, size: 64, offset: 384)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2181, file: !2182, line: 113, baseType: !377, size: 256, offset: 448)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1477, file: !1126, line: 1061, baseType: !2212, size: 64, offset: 10944)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1126, line: 43, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1477, file: !1126, line: 1064, baseType: !230, size: 64, offset: 11008)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1477, file: !1126, line: 1065, baseType: !2216, size: 64, offset: 11072)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2020, line: 14, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2020, line: 12, size: 384, elements: !2219)
!2219 = !{!2220}
!2220 = !DIDerivedType(tag: DW_TAG_member, scope: !2218, file: !2020, line: 13, baseType: !2221, size: 384)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2218, file: !2020, line: 13, size: 384, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2221, file: !2020, line: 13, baseType: !239, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2221, file: !2020, line: 13, baseType: !239, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2221, file: !2020, line: 13, baseType: !239, size: 32, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2221, file: !2020, line: 13, baseType: !2227, size: 256, offset: 128)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2228, line: 32, size: 256, elements: !2229)
!2228 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2229 = !{!2230, !2235, !2248, !2254, !2263, !2283, !2288}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2227, file: !2228, line: 37, baseType: !2231, size: 64)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 34, size: 64, elements: !2232)
!2232 = !{!2233, !2234}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2231, file: !2228, line: 35, baseType: !1714, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2231, file: !2228, line: 36, baseType: !639, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2227, file: !2228, line: 45, baseType: !2236, size: 192)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 40, size: 192, elements: !2237)
!2237 = !{!2238, !2240, !2241, !2247}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2236, file: !2228, line: 41, baseType: !2239, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !518, line: 95, baseType: !239)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2236, file: !2228, line: 42, baseType: !239, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2236, file: !2228, line: 43, baseType: !2242, size: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2228, line: 11, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2228, line: 8, size: 64, elements: !2244)
!2244 = !{!2245, !2246}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2243, file: !2228, line: 9, baseType: !239, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2243, file: !2228, line: 10, baseType: !196, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2236, file: !2228, line: 44, baseType: !239, size: 32, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2227, file: !2228, line: 52, baseType: !2249, size: 128)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 48, size: 128, elements: !2250)
!2250 = !{!2251, !2252, !2253}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2249, file: !2228, line: 49, baseType: !1714, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2249, file: !2228, line: 50, baseType: !639, size: 32, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2249, file: !2228, line: 51, baseType: !2242, size: 64, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2227, file: !2228, line: 61, baseType: !2255, size: 256)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 55, size: 256, elements: !2256)
!2256 = !{!2257, !2258, !2259, !2260, !2262}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2255, file: !2228, line: 56, baseType: !1714, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2255, file: !2228, line: 57, baseType: !639, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2255, file: !2228, line: 58, baseType: !239, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2255, file: !2228, line: 59, baseType: !2261, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !518, line: 94, baseType: !519)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2255, file: !2228, line: 60, baseType: !2261, size: 64, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2227, file: !2228, line: 95, baseType: !2264, size: 256)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 64, size: 256, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2264, file: !2228, line: 65, baseType: !196, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, scope: !2264, file: !2228, line: 77, baseType: !2268, size: 192, offset: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2264, file: !2228, line: 77, size: 192, elements: !2269)
!2269 = !{!2270, !2271, !2278}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2268, file: !2228, line: 82, baseType: !1465, size: 16)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2268, file: !2228, line: 88, baseType: !2272, size: 192)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2268, file: !2228, line: 84, size: 192, elements: !2273)
!2273 = !{!2274, !2276, !2277}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2272, file: !2228, line: 85, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 64, elements: !1584)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2272, file: !2228, line: 86, baseType: !196, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2272, file: !2228, line: 87, baseType: !196, size: 64, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2268, file: !2228, line: 93, baseType: !2279, size: 96)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2268, file: !2228, line: 90, size: 96, elements: !2280)
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2279, file: !2228, line: 91, baseType: !2275, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2279, file: !2228, line: 92, baseType: !312, size: 32, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2227, file: !2228, line: 101, baseType: !2284, size: 128)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 98, size: 128, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2284, file: !2228, line: 99, baseType: !520, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2284, file: !2228, line: 100, baseType: !239, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2227, file: !2228, line: 108, baseType: !2289, size: 128)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2227, file: !2228, line: 104, size: 128, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2289, file: !2228, line: 105, baseType: !196, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2289, file: !2228, line: 106, baseType: !239, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2289, file: !2228, line: 107, baseType: !7, size: 32, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1477, file: !1126, line: 1067, baseType: !2090, offset: 11136)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1477, file: !1126, line: 1099, baseType: !2296, size: 64, offset: 11136)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1126, line: 56, flags: DIFlagFwdDecl)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1477, file: !1126, line: 1103, baseType: !392, size: 128, offset: 11200)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1477, file: !1126, line: 1104, baseType: !2300, size: 64, offset: 11328)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1126, line: 46, flags: DIFlagFwdDecl)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1477, file: !1126, line: 1105, baseType: !404, size: 192, offset: 11392)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1477, file: !1126, line: 1106, baseType: !7, size: 32, offset: 11584)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1477, file: !1126, line: 1109, baseType: !2305, size: 128, offset: 11648)
!2305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2306, size: 128, elements: !1823)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1126, line: 51, flags: DIFlagFwdDecl)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1477, file: !1126, line: 1110, baseType: !404, size: 192, offset: 11776)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1477, file: !1126, line: 1111, baseType: !392, size: 128, offset: 11968)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1477, file: !1126, line: 1173, baseType: !2311, size: 64, offset: 12096)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2313, line: 62, size: 256, align: 256, elements: !2314)
!2313 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2314 = !{!2315, !2316, !2317, !2322}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2312, file: !2313, line: 75, baseType: !312, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2312, file: !2313, line: 90, baseType: !312, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2312, file: !2313, line: 124, baseType: !2318, size: 64, offset: 64)
!2318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2312, file: !2313, line: 109, size: 64, elements: !2319)
!2319 = !{!2320, !2321}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2318, file: !2313, line: 110, baseType: !203, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2318, file: !2313, line: 112, baseType: !203, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2312, file: !2313, line: 144, baseType: !312, size: 32, offset: 128)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1477, file: !1126, line: 1174, baseType: !620, size: 32, offset: 12160)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1477, file: !1126, line: 1179, baseType: !230, size: 64, offset: 12224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1477, file: !1126, line: 1182, baseType: !2326, size: 128, offset: 12288)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1417, line: 76, size: 128, elements: !2327)
!2327 = !{!2328, !2333, !2334}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2326, file: !1417, line: 85, baseType: !2329, size: 64)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2330, line: 7, size: 64, elements: !2331)
!2330 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2331 = !{!2332}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2329, file: !2330, line: 12, baseType: !1621, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2326, file: !1417, line: 88, baseType: !688, size: 8, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2326, file: !1417, line: 95, baseType: !688, size: 8, offset: 72)
!2335 = !DIDerivedType(tag: DW_TAG_member, scope: !1477, file: !1126, line: 1184, baseType: !2336, size: 128, offset: 12416)
!2336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1477, file: !1126, line: 1184, size: 128, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2336, file: !1126, line: 1185, baseType: !433, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2336, file: !1126, line: 1186, baseType: !570, size: 128, align: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1477, file: !1126, line: 1190, baseType: !1124, size: 64, offset: 12544)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1477, file: !1126, line: 1192, baseType: !2342, size: 128, offset: 12608)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1417, line: 64, size: 128, elements: !2343)
!2343 = !{!2344, !2345, !2346}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2342, file: !1417, line: 65, baseType: !956, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2342, file: !1417, line: 67, baseType: !312, size: 32, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2342, file: !1417, line: 68, baseType: !312, size: 32, offset: 96)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1477, file: !1126, line: 1206, baseType: !239, size: 32, offset: 12736)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1477, file: !1126, line: 1207, baseType: !239, size: 32, offset: 12768)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1477, file: !1126, line: 1209, baseType: !230, size: 64, offset: 12800)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1477, file: !1126, line: 1219, baseType: !201, size: 64, offset: 12864)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1477, file: !1126, line: 1220, baseType: !201, size: 64, offset: 12928)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1477, file: !1126, line: 1317, baseType: !239, size: 32, offset: 12992)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1477, file: !1126, line: 1319, baseType: !1476, size: 64, offset: 13056)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1477, file: !1126, line: 1322, baseType: !2355, size: 64, offset: 13120)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2357, line: 56, size: 512, elements: !2358)
!2357 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2358 = !{!2359, !2360, !2361, !2362, !2363, !2364, !2365, !2367}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2356, file: !2357, line: 57, baseType: !2355, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2356, file: !2357, line: 58, baseType: !196, size: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2356, file: !2357, line: 59, baseType: !230, size: 64, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2356, file: !2357, line: 60, baseType: !230, size: 64, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2356, file: !2357, line: 61, baseType: !1045, size: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2356, file: !2357, line: 62, baseType: !7, size: 32, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2356, file: !2357, line: 63, baseType: !2366, size: 64, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !384, line: 153, baseType: !201)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2356, file: !2357, line: 64, baseType: !2368, size: 64, offset: 448)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1477, file: !1126, line: 1326, baseType: !433, size: 32, offset: 13184)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1477, file: !1126, line: 1342, baseType: !196, size: 64, offset: 13248)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1477, file: !1126, line: 1343, baseType: !203, size: 64, offset: 13312)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1477, file: !1126, line: 1344, baseType: !201, size: 64, offset: 13376)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1477, file: !1126, line: 1345, baseType: !203, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1477, file: !1126, line: 1346, baseType: !203, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1477, file: !1126, line: 1347, baseType: !203, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1477, file: !1126, line: 1348, baseType: !570, size: 128, align: 64, offset: 13504)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1477, file: !1126, line: 1358, baseType: !2379, size: 34816, offset: 13824)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2380, line: 485, size: 34816, elements: !2381)
!2380 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2381 = !{!2382, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2411, !2412, !2413, !2414, !2415, !2416, !2419, !2420, !2421}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2379, file: !2380, line: 487, baseType: !2383, size: 192)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2384, size: 192, elements: !486)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2385, line: 16, size: 64, elements: !2386)
!2385 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2384, file: !2385, line: 17, baseType: !1084, size: 16)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2384, file: !2385, line: 18, baseType: !1084, size: 16, offset: 16)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2384, file: !2385, line: 19, baseType: !1084, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2384, file: !2385, line: 19, baseType: !1084, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2384, file: !2385, line: 19, baseType: !1084, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2384, file: !2385, line: 19, baseType: !1084, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2384, file: !2385, line: 19, baseType: !1084, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2384, file: !2385, line: 20, baseType: !1084, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2379, file: !2380, line: 491, baseType: !230, size: 64, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2379, file: !2380, line: 495, baseType: !527, size: 16, offset: 256)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2379, file: !2380, line: 496, baseType: !527, size: 16, offset: 272)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2379, file: !2380, line: 497, baseType: !527, size: 16, offset: 288)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2379, file: !2380, line: 498, baseType: !527, size: 16, offset: 304)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2379, file: !2380, line: 502, baseType: !230, size: 64, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2379, file: !2380, line: 503, baseType: !230, size: 64, offset: 384)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2379, file: !2380, line: 514, baseType: !2408, size: 256, offset: 448)
!2408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2409, size: 256, elements: !1421)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2380, line: 483, flags: DIFlagFwdDecl)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2379, file: !2380, line: 516, baseType: !230, size: 64, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2379, file: !2380, line: 518, baseType: !230, size: 64, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2379, file: !2380, line: 520, baseType: !230, size: 64, offset: 832)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2379, file: !2380, line: 521, baseType: !230, size: 64, offset: 896)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2379, file: !2380, line: 522, baseType: !230, size: 64, offset: 960)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2379, file: !2380, line: 528, baseType: !2417, size: 64, offset: 1024)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2380, line: 10, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2379, file: !2380, line: 535, baseType: !230, size: 64, offset: 1088)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2379, file: !2380, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2379, file: !2380, line: 540, baseType: !2422, size: 33280, offset: 1536)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2423, line: 317, size: 33280, elements: !2424)
!2423 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2424 = !{!2425, !2426, !2427}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2422, file: !2423, line: 330, baseType: !7, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2422, file: !2423, line: 337, baseType: !230, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2422, file: !2423, line: 348, baseType: !2428, size: 32768, offset: 512)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2423, line: 304, size: 32768, elements: !2429)
!2429 = !{!2430, !2445, !2484, !2534, !2547}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2428, file: !2423, line: 305, baseType: !2431, size: 896)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2423, line: 12, size: 896, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2444}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2431, file: !2423, line: 13, baseType: !620, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2431, file: !2423, line: 14, baseType: !620, size: 32, offset: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2431, file: !2423, line: 15, baseType: !620, size: 32, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2431, file: !2423, line: 16, baseType: !620, size: 32, offset: 96)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2431, file: !2423, line: 17, baseType: !620, size: 32, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2431, file: !2423, line: 18, baseType: !620, size: 32, offset: 160)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2431, file: !2423, line: 19, baseType: !620, size: 32, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2431, file: !2423, line: 22, baseType: !2441, size: 640, offset: 224)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 640, elements: !2442)
!2442 = !{!2443}
!2443 = !DISubrange(count: 20)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2431, file: !2423, line: 25, baseType: !620, size: 32, offset: 864)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2428, file: !2423, line: 306, baseType: !2446, size: 4096, align: 128)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2423, line: 34, size: 4096, align: 128, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451, !2452, !2467, !2468, !2469, !2473, !2475, !2479}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2446, file: !2423, line: 35, baseType: !1084, size: 16)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2446, file: !2423, line: 36, baseType: !1084, size: 16, offset: 16)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2446, file: !2423, line: 37, baseType: !1084, size: 16, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2446, file: !2423, line: 38, baseType: !1084, size: 16, offset: 48)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !2423, line: 39, baseType: !2453, size: 128, offset: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !2423, line: 39, size: 128, elements: !2454)
!2454 = !{!2455, !2460}
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !2423, line: 40, baseType: !2456, size: 128)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2453, file: !2423, line: 40, size: 128, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2456, file: !2423, line: 41, baseType: !201, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2456, file: !2423, line: 42, baseType: !201, size: 64, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !2423, line: 44, baseType: !2461, size: 128)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2453, file: !2423, line: 44, size: 128, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2461, file: !2423, line: 45, baseType: !620, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2461, file: !2423, line: 46, baseType: !620, size: 32, offset: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2461, file: !2423, line: 47, baseType: !620, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2461, file: !2423, line: 48, baseType: !620, size: 32, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2446, file: !2423, line: 51, baseType: !620, size: 32, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2446, file: !2423, line: 52, baseType: !620, size: 32, offset: 224)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2446, file: !2423, line: 55, baseType: !2470, size: 1024, offset: 256)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 1024, elements: !2471)
!2471 = !{!2472}
!2472 = !DISubrange(count: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2446, file: !2423, line: 58, baseType: !2474, size: 2048, offset: 1280)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 2048, elements: !490)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2446, file: !2423, line: 60, baseType: !2476, size: 384, offset: 3328)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 384, elements: !2477)
!2477 = !{!2478}
!2478 = !DISubrange(count: 12)
!2479 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !2423, line: 62, baseType: !2480, size: 384, offset: 3712)
!2480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !2423, line: 62, size: 384, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2480, file: !2423, line: 63, baseType: !2476, size: 384)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2480, file: !2423, line: 64, baseType: !2476, size: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2428, file: !2423, line: 307, baseType: !2485, size: 1088)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2423, line: 79, size: 1088, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2533}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2485, file: !2423, line: 80, baseType: !620, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2485, file: !2423, line: 81, baseType: !620, size: 32, offset: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2485, file: !2423, line: 82, baseType: !620, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2485, file: !2423, line: 83, baseType: !620, size: 32, offset: 96)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2485, file: !2423, line: 84, baseType: !620, size: 32, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2485, file: !2423, line: 85, baseType: !620, size: 32, offset: 160)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2485, file: !2423, line: 86, baseType: !620, size: 32, offset: 192)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2485, file: !2423, line: 88, baseType: !2441, size: 640, offset: 224)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2485, file: !2423, line: 89, baseType: !1606, size: 8, offset: 864)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2485, file: !2423, line: 90, baseType: !1606, size: 8, offset: 872)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2485, file: !2423, line: 91, baseType: !1606, size: 8, offset: 880)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2485, file: !2423, line: 92, baseType: !1606, size: 8, offset: 888)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2485, file: !2423, line: 93, baseType: !1606, size: 8, offset: 896)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2485, file: !2423, line: 94, baseType: !1606, size: 8, offset: 904)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2485, file: !2423, line: 95, baseType: !2502, size: 64, offset: 960)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2504, line: 11, size: 128, elements: !2505)
!2504 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2505 = !{!2506, !2507}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2503, file: !2504, line: 12, baseType: !520, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2503, file: !2504, line: 13, baseType: !2508, size: 64, offset: 64)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2510, line: 56, size: 1344, elements: !2511)
!2510 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2511 = !{!2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2509, file: !2510, line: 61, baseType: !230, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2509, file: !2510, line: 62, baseType: !230, size: 64, offset: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2509, file: !2510, line: 63, baseType: !230, size: 64, offset: 128)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2509, file: !2510, line: 64, baseType: !230, size: 64, offset: 192)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2509, file: !2510, line: 65, baseType: !230, size: 64, offset: 256)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2509, file: !2510, line: 66, baseType: !230, size: 64, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2509, file: !2510, line: 68, baseType: !230, size: 64, offset: 384)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2509, file: !2510, line: 69, baseType: !230, size: 64, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2509, file: !2510, line: 70, baseType: !230, size: 64, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2509, file: !2510, line: 71, baseType: !230, size: 64, offset: 576)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2509, file: !2510, line: 72, baseType: !230, size: 64, offset: 640)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2509, file: !2510, line: 73, baseType: !230, size: 64, offset: 704)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2509, file: !2510, line: 74, baseType: !230, size: 64, offset: 768)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2509, file: !2510, line: 75, baseType: !230, size: 64, offset: 832)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2509, file: !2510, line: 76, baseType: !230, size: 64, offset: 896)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2509, file: !2510, line: 81, baseType: !230, size: 64, offset: 960)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2509, file: !2510, line: 83, baseType: !230, size: 64, offset: 1024)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2509, file: !2510, line: 84, baseType: !230, size: 64, offset: 1088)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2509, file: !2510, line: 85, baseType: !230, size: 64, offset: 1152)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2509, file: !2510, line: 86, baseType: !230, size: 64, offset: 1216)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2509, file: !2510, line: 87, baseType: !230, size: 64, offset: 1280)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2485, file: !2423, line: 96, baseType: !620, size: 32, offset: 1024)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2428, file: !2423, line: 308, baseType: !2535, size: 4608, align: 512)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2423, line: 289, size: 4608, align: 512, elements: !2536)
!2536 = !{!2537, !2538, !2545}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2535, file: !2423, line: 290, baseType: !2446, size: 4096, align: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2535, file: !2423, line: 291, baseType: !2539, size: 512, offset: 4096)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2423, line: 268, size: 512, elements: !2540)
!2540 = !{!2541, !2542, !2543}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2539, file: !2423, line: 269, baseType: !201, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2539, file: !2423, line: 270, baseType: !201, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2539, file: !2423, line: 271, baseType: !2544, size: 384, offset: 128)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 384, elements: !1879)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2535, file: !2423, line: 292, baseType: !2546, offset: 4608)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, elements: !1977)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2428, file: !2423, line: 309, baseType: !2548, size: 32768)
!2548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1606, size: 32768, elements: !2549)
!2549 = !{!2550}
!2550 = !DISubrange(count: 4096)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1473, file: !958, line: 378, baseType: !2552, size: 64, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1469, file: !958, line: 384, baseType: !1756, size: 192, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1244, file: !958, line: 500, baseType: !214, offset: 6656)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1244, file: !958, line: 501, baseType: !2556, size: 64, offset: 6656)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !958, line: 387, flags: DIFlagFwdDecl)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1244, file: !958, line: 516, baseType: !1967, size: 64, offset: 6720)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1244, file: !958, line: 519, baseType: !562, size: 64, offset: 6784)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1244, file: !958, line: 521, baseType: !2561, size: 64, offset: 6848)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !958, line: 521, flags: DIFlagFwdDecl)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1244, file: !958, line: 545, baseType: !411, size: 32, offset: 6912)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1244, file: !958, line: 548, baseType: !688, size: 8, offset: 6944)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1244, file: !958, line: 550, baseType: !2566, offset: 6952)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2567, line: 142, elements: !228)
!2567 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1244, file: !958, line: 554, baseType: !377, size: 256, offset: 6976)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1244, file: !958, line: 557, baseType: !620, size: 32, offset: 7232)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1241, file: !958, line: 565, baseType: !373, offset: 7296)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1237, file: !958, line: 151, baseType: !411, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1229, file: !958, line: 156, baseType: !214, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !962, file: !958, line: 159, baseType: !2574, size: 128)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !962, file: !958, line: 159, size: 128, elements: !2575)
!2575 = !{!2576, !2640}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2574, file: !958, line: 161, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2579)
!2579 = !{!2580, !2590, !2611, !2612, !2613, !2614, !2615, !2627, !2628, !2629}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2578, file: !31, line: 111, baseType: !2581, size: 384)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2582)
!2582 = !{!2583, !2585, !2586, !2587, !2588, !2589}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2581, file: !31, line: 20, baseType: !2584, size: 64)
!2584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2581, file: !31, line: 21, baseType: !2584, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2581, file: !31, line: 22, baseType: !2584, size: 64, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2581, file: !31, line: 23, baseType: !230, size: 64, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2581, file: !31, line: 24, baseType: !230, size: 64, offset: 256)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2581, file: !31, line: 25, baseType: !230, size: 64, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2578, file: !31, line: 112, baseType: !2591, size: 64, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2593, line: 105, size: 128, elements: !2594)
!2593 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2594 = !{!2595, !2596}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2592, file: !2593, line: 110, baseType: !230, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2592, file: !2593, line: 118, baseType: !2597, size: 64, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2593, line: 95, size: 448, elements: !2599)
!2599 = !{!2600, !2601, !2606, !2607, !2608, !2609, !2610}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2598, file: !2593, line: 96, baseType: !381, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2598, file: !2593, line: 97, baseType: !2602, size: 64, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2593, line: 60, baseType: !2604)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{null, !2591}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2598, file: !2593, line: 98, baseType: !2602, size: 64, offset: 128)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2598, file: !2593, line: 99, baseType: !688, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2598, file: !2593, line: 100, baseType: !688, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2598, file: !2593, line: 101, baseType: !570, size: 128, align: 64, offset: 256)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2598, file: !2593, line: 102, baseType: !2591, size: 64, offset: 384)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2578, file: !31, line: 113, baseType: !2592, size: 128, offset: 448)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2578, file: !31, line: 114, baseType: !1756, size: 192, offset: 576)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2578, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2578, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2578, file: !31, line: 117, baseType: !2616, size: 64, offset: 832)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2618)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2619)
!2619 = !{!2620, !2621, !2625, !2626}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2618, file: !31, line: 73, baseType: !1065, size: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2618, file: !31, line: 78, baseType: !2622, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{null, !2577}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2618, file: !31, line: 83, baseType: !2622, size: 64, offset: 128)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2618, file: !31, line: 89, baseType: !1293, size: 64, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2578, file: !31, line: 118, baseType: !196, size: 64, offset: 896)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2578, file: !31, line: 119, baseType: !239, size: 32, offset: 960)
!2629 = !DIDerivedType(tag: DW_TAG_member, scope: !2578, file: !31, line: 120, baseType: !2630, size: 128, offset: 1024)
!2630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2578, file: !31, line: 120, size: 128, elements: !2631)
!2631 = !{!2632, !2638}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2630, file: !31, line: 121, baseType: !2633, size: 128)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2634, line: 6, size: 128, elements: !2635)
!2634 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2635 = !{!2636, !2637}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2633, file: !2634, line: 7, baseType: !201, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2633, file: !2634, line: 8, baseType: !201, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2630, file: !31, line: 122, baseType: !2639)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2633, elements: !1977)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2574, file: !958, line: 162, baseType: !196, size: 64, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !962, file: !958, line: 176, baseType: !570, size: 128, align: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !958, line: 179, baseType: !2643, size: 32, offset: 384)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !958, line: 179, size: 32, elements: !2644)
!2644 = !{!2645, !2646, !2647, !2648}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2643, file: !958, line: 184, baseType: !411, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2643, file: !958, line: 192, baseType: !7, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2643, file: !958, line: 194, baseType: !7, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2643, file: !958, line: 195, baseType: !239, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !957, file: !958, line: 199, baseType: !411, size: 32, offset: 416)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !856, file: !44, line: 1964, baseType: !2651, size: 64, offset: 1344)
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = !DISubroutineType(types: !2653)
!2653 = !{!520, !795, !2654}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2656, line: 12, size: 256, elements: !2657)
!2656 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2657 = !{!2658, !2659, !2660, !2661, !2662}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2655, file: !2656, line: 13, baseType: !979, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2655, file: !2656, line: 16, baseType: !239, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2655, file: !2656, line: 23, baseType: !230, size: 64, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2655, file: !2656, line: 30, baseType: !230, size: 64, offset: 128)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2655, file: !2656, line: 33, baseType: !2663, size: 64, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !958, line: 27, flags: DIFlagFwdDecl)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !856, file: !44, line: 1966, baseType: !2651, size: 64, offset: 1408)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !796, file: !44, line: 1424, baseType: !2667, size: 64, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2670)
!2670 = !{!2671, !2717, !2721, !2725, !2726, !2727, !2728, !2729, !2734, !2739, !2743}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2669, file: !38, line: 323, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!239, !2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2677)
!2677 = !{!2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2702, !2703, !2704}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2676, file: !38, line: 295, baseType: !838, size: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2676, file: !38, line: 296, baseType: !392, size: 128, offset: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2676, file: !38, line: 297, baseType: !392, size: 128, offset: 256)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2676, file: !38, line: 298, baseType: !392, size: 128, offset: 384)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2676, file: !38, line: 299, baseType: !404, size: 192, offset: 512)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2676, file: !38, line: 300, baseType: !214, offset: 704)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2676, file: !38, line: 301, baseType: !411, size: 32, offset: 704)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2676, file: !38, line: 302, baseType: !795, size: 64, offset: 768)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2676, file: !38, line: 303, baseType: !2687, size: 64, offset: 832)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2688)
!2688 = !{!2689, !2701}
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2687, file: !38, line: 69, baseType: !2690, size: 32)
!2690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2687, file: !38, line: 69, size: 32, elements: !2691)
!2691 = !{!2692, !2693, !2694}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2690, file: !38, line: 70, baseType: !633, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2690, file: !38, line: 71, baseType: !641, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2690, file: !38, line: 72, baseType: !2695, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2696, line: 24, baseType: !2697)
!2696 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2696, line: 22, size: 32, elements: !2698)
!2698 = !{!2699}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2697, file: !2696, line: 23, baseType: !2700, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2696, line: 20, baseType: !639)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2687, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2676, file: !38, line: 304, baseType: !729, size: 64, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2676, file: !38, line: 305, baseType: !230, size: 64, offset: 960)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2676, file: !38, line: 306, baseType: !2705, size: 576, offset: 1024)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2706)
!2706 = !{!2707, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2705, file: !38, line: 206, baseType: !2708, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !390)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2705, file: !38, line: 207, baseType: !2708, size: 64, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2705, file: !38, line: 208, baseType: !2708, size: 64, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2705, file: !38, line: 209, baseType: !2708, size: 64, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2705, file: !38, line: 210, baseType: !2708, size: 64, offset: 256)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2705, file: !38, line: 211, baseType: !2708, size: 64, offset: 320)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2705, file: !38, line: 212, baseType: !2708, size: 64, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2705, file: !38, line: 213, baseType: !736, size: 64, offset: 448)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2705, file: !38, line: 214, baseType: !736, size: 64, offset: 512)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2669, file: !38, line: 324, baseType: !2718, size: 64, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!2675, !795, !239}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2669, file: !38, line: 325, baseType: !2722, size: 64, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !2675}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2669, file: !38, line: 326, baseType: !2672, size: 64, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2669, file: !38, line: 327, baseType: !2672, size: 64, offset: 256)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2669, file: !38, line: 328, baseType: !2672, size: 64, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2669, file: !38, line: 329, baseType: !884, size: 64, offset: 384)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2669, file: !38, line: 332, baseType: !2730, size: 64, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!2733, !627}
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2669, file: !38, line: 333, baseType: !2735, size: 64, offset: 512)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!239, !627, !2738}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2669, file: !38, line: 335, baseType: !2740, size: 64, offset: 576)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!239, !627, !2733}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2669, file: !38, line: 337, baseType: !2744, size: 64, offset: 640)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!239, !795, !2747}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !796, file: !44, line: 1425, baseType: !2749, size: 64, offset: 512)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2752)
!2752 = !{!2753, !2757, !2758, !2762, !2763, !2764, !2779, !2802, !2806, !2807, !2830}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2751, file: !38, line: 429, baseType: !2754, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!239, !795, !239, !239, !745}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2751, file: !38, line: 430, baseType: !884, size: 64, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2751, file: !38, line: 431, baseType: !2759, size: 64, offset: 128)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!239, !795, !7}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2751, file: !38, line: 432, baseType: !2759, size: 64, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2751, file: !38, line: 433, baseType: !884, size: 64, offset: 256)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2751, file: !38, line: 434, baseType: !2765, size: 64, offset: 320)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!239, !795, !239, !2768}
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2769, file: !38, line: 416, baseType: !239, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2769, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2769, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2769, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2769, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2769, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2769, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2769, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2751, file: !38, line: 435, baseType: !2780, size: 64, offset: 384)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DISubroutineType(types: !2782)
!2782 = !{!239, !795, !2687, !2783}
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2785)
!2785 = !{!2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2784, file: !38, line: 344, baseType: !239, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2784, file: !38, line: 345, baseType: !201, size: 64, offset: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2784, file: !38, line: 346, baseType: !201, size: 64, offset: 128)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2784, file: !38, line: 347, baseType: !201, size: 64, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2784, file: !38, line: 348, baseType: !201, size: 64, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2784, file: !38, line: 349, baseType: !201, size: 64, offset: 320)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2784, file: !38, line: 350, baseType: !201, size: 64, offset: 384)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2784, file: !38, line: 351, baseType: !388, size: 64, offset: 448)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2784, file: !38, line: 353, baseType: !388, size: 64, offset: 512)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2784, file: !38, line: 354, baseType: !239, size: 32, offset: 576)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2784, file: !38, line: 355, baseType: !239, size: 32, offset: 608)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2784, file: !38, line: 356, baseType: !201, size: 64, offset: 640)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2784, file: !38, line: 357, baseType: !201, size: 64, offset: 704)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2784, file: !38, line: 358, baseType: !201, size: 64, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2784, file: !38, line: 359, baseType: !388, size: 64, offset: 832)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2784, file: !38, line: 360, baseType: !239, size: 32, offset: 896)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2751, file: !38, line: 436, baseType: !2803, size: 64, offset: 448)
!2803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2804 = !DISubroutineType(types: !2805)
!2805 = !{!239, !795, !2747, !2783}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2751, file: !38, line: 438, baseType: !2780, size: 64, offset: 512)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2751, file: !38, line: 439, baseType: !2808, size: 64, offset: 576)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!239, !795, !2811}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2813)
!2813 = !{!2814, !2815}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2812, file: !38, line: 410, baseType: !7, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2812, file: !38, line: 411, baseType: !2816, size: 1344, offset: 64)
!2816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2817, size: 1344, elements: !486)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2829}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2817, file: !38, line: 396, baseType: !7, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2817, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2817, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2817, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2817, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2817, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2817, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2817, file: !38, line: 404, baseType: !205, size: 64, offset: 256)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2817, file: !38, line: 405, baseType: !2828, size: 64, offset: 320)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !384, line: 126, baseType: !201)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2817, file: !38, line: 406, baseType: !2828, size: 64, offset: 384)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2751, file: !38, line: 440, baseType: !2759, size: 64, offset: 640)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !796, file: !44, line: 1426, baseType: !2832, size: 64, offset: 576)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2834)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !796, file: !44, line: 1427, baseType: !230, size: 64, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !796, file: !44, line: 1428, baseType: !230, size: 64, offset: 704)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !796, file: !44, line: 1429, baseType: !230, size: 64, offset: 768)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !796, file: !44, line: 1430, baseType: !587, size: 64, offset: 832)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !796, file: !44, line: 1431, baseType: !999, size: 256, offset: 896)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !796, file: !44, line: 1432, baseType: !239, size: 32, offset: 1152)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !796, file: !44, line: 1433, baseType: !411, size: 32, offset: 1184)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !796, file: !44, line: 1437, baseType: !2843, size: 64, offset: 1216)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2846)
!2846 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !796, file: !44, line: 1449, baseType: !2848, size: 64, offset: 1280)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !603, line: 34, size: 64, elements: !2849)
!2849 = !{!2850}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2848, file: !603, line: 35, baseType: !606, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !796, file: !44, line: 1450, baseType: !392, size: 128, offset: 1344)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !796, file: !44, line: 1451, baseType: !2853, size: 64, offset: 1472)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !796, file: !44, line: 1452, baseType: !2177, size: 64, offset: 1536)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !796, file: !44, line: 1453, baseType: !2857, size: 64, offset: 1600)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !796, file: !44, line: 1454, baseType: !838, size: 128, offset: 1664)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !796, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !796, file: !44, line: 1456, baseType: !2862, size: 2432, offset: 1856)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2868, !2900}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2862, file: !38, line: 519, baseType: !7, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2862, file: !38, line: 520, baseType: !999, size: 256, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2862, file: !38, line: 521, baseType: !2867, size: 192, offset: 320)
!2867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 192, elements: !486)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2862, file: !38, line: 522, baseType: !2869, size: 1728, offset: 512)
!2869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2870, size: 1728, elements: !486)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2871)
!2871 = !{!2872, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2870, file: !38, line: 223, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2875)
!2875 = !{!2876, !2877, !2890, !2891}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2874, file: !38, line: 444, baseType: !239, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2874, file: !38, line: 445, baseType: !2878, size: 64, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2880)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2881)
!2881 = !{!2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2880, file: !38, line: 311, baseType: !884, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2880, file: !38, line: 312, baseType: !884, size: 64, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2880, file: !38, line: 313, baseType: !884, size: 64, offset: 128)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2880, file: !38, line: 314, baseType: !884, size: 64, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2880, file: !38, line: 315, baseType: !2672, size: 64, offset: 256)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2880, file: !38, line: 316, baseType: !2672, size: 64, offset: 320)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2880, file: !38, line: 317, baseType: !2672, size: 64, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2880, file: !38, line: 318, baseType: !2744, size: 64, offset: 448)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2874, file: !38, line: 446, baseType: !829, size: 64, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2874, file: !38, line: 447, baseType: !2873, size: 64, offset: 192)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2870, file: !38, line: 224, baseType: !239, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2870, file: !38, line: 226, baseType: !392, size: 128, offset: 128)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2870, file: !38, line: 227, baseType: !230, size: 64, offset: 256)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2870, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2870, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2870, file: !38, line: 230, baseType: !2708, size: 64, offset: 384)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2870, file: !38, line: 231, baseType: !2708, size: 64, offset: 448)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2870, file: !38, line: 232, baseType: !196, size: 64, offset: 512)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2862, file: !38, line: 523, baseType: !2901, size: 192, offset: 2240)
!2901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2878, size: 192, elements: !486)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !796, file: !44, line: 1458, baseType: !2903, size: 2112, offset: 4288)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2904)
!2904 = !{!2905, !2906, !2907}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2903, file: !44, line: 1411, baseType: !239, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2903, file: !44, line: 1412, baseType: !1735, size: 128, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2903, file: !44, line: 1413, baseType: !2908, size: 1920, offset: 192)
!2908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 1920, elements: !486)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2910, line: 12, size: 640, elements: !2911)
!2910 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2911 = !{!2912, !2920, !2921, !2926, !2927}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2909, file: !2910, line: 13, baseType: !2913, size: 320)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2914, line: 17, size: 320, elements: !2915)
!2914 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2915 = !{!2916, !2917, !2918, !2919}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2913, file: !2914, line: 18, baseType: !239, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2913, file: !2914, line: 19, baseType: !239, size: 32, offset: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2913, file: !2914, line: 20, baseType: !1735, size: 128, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2913, file: !2914, line: 22, baseType: !570, size: 128, align: 64, offset: 192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2909, file: !2910, line: 14, baseType: !282, size: 64, offset: 320)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2909, file: !2910, line: 15, baseType: !2922, size: 64, offset: 384)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2923, line: 16, size: 64, elements: !2924)
!2923 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2924 = !{!2925}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2922, file: !2923, line: 17, baseType: !1476, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2909, file: !2910, line: 16, baseType: !1735, size: 128, offset: 448)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2909, file: !2910, line: 17, baseType: !411, size: 32, offset: 576)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !796, file: !44, line: 1465, baseType: !196, size: 64, offset: 6400)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !796, file: !44, line: 1468, baseType: !620, size: 32, offset: 6464)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !796, file: !44, line: 1470, baseType: !736, size: 64, offset: 6528)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !796, file: !44, line: 1471, baseType: !736, size: 64, offset: 6592)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !796, file: !44, line: 1473, baseType: !312, size: 32, offset: 6656)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !796, file: !44, line: 1474, baseType: !2934, size: 64, offset: 6720)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !796, file: !44, line: 1477, baseType: !2937, size: 256, offset: 6784)
!2937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 256, elements: !2471)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !796, file: !44, line: 1478, baseType: !2939, size: 128, offset: 7040)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2940, line: 18, baseType: !2941)
!2940 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2940, line: 16, size: 128, elements: !2942)
!2942 = !{!2943}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2941, file: !2940, line: 17, baseType: !2944, size: 128)
!2944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1607, size: 128, elements: !1989)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !796, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !796, file: !44, line: 1481, baseType: !2947, size: 32, offset: 7200)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !384, line: 150, baseType: !7)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !796, file: !44, line: 1487, baseType: !404, size: 192, offset: 7232)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !796, file: !44, line: 1493, baseType: !447, size: 64, offset: 7424)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !796, file: !44, line: 1495, baseType: !2951, size: 64, offset: 7488)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2953)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !585, line: 135, size: 1024, align: 512, elements: !2954)
!2954 = !{!2955, !2959, !2960, !2967, !2973, !2977, !2981, !2985, !2986, !2990, !2994, !2999, !3003}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2953, file: !585, line: 136, baseType: !2956, size: 64)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!239, !587, !7}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2953, file: !585, line: 137, baseType: !2956, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2953, file: !585, line: 138, baseType: !2961, size: 64, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!239, !2964, !2966}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2953, file: !585, line: 139, baseType: !2968, size: 64, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!239, !2964, !7, !447, !2971}
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2953, file: !585, line: 141, baseType: !2974, size: 64, offset: 256)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!239, !2964}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2953, file: !585, line: 142, baseType: !2978, size: 64, offset: 320)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!239, !587}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2953, file: !585, line: 143, baseType: !2982, size: 64, offset: 384)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{null, !587}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2953, file: !585, line: 144, baseType: !2982, size: 64, offset: 448)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2953, file: !585, line: 145, baseType: !2987, size: 64, offset: 512)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !587, !627}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2953, file: !585, line: 146, baseType: !2991, size: 64, offset: 576)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{!485, !587, !485, !239}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2953, file: !585, line: 147, baseType: !2995, size: 64, offset: 640)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{!583, !2998}
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2953, file: !585, line: 148, baseType: !3000, size: 64, offset: 704)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!239, !745, !688}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2953, file: !585, line: 149, baseType: !3004, size: 64, offset: 768)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{!587, !587, !3007}
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !796, file: !44, line: 1500, baseType: !239, size: 32, offset: 7552)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !796, file: !44, line: 1502, baseType: !3011, size: 448, offset: 7616)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2656, line: 60, size: 448, elements: !3012)
!3012 = !{!3013, !3018, !3019, !3020, !3021, !3022, !3023}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3011, file: !2656, line: 61, baseType: !3014, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!230, !3017, !2654}
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3011, file: !2656, line: 63, baseType: !3014, size: 64, offset: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3011, file: !2656, line: 66, baseType: !520, size: 64, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3011, file: !2656, line: 67, baseType: !239, size: 32, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3011, file: !2656, line: 68, baseType: !7, size: 32, offset: 224)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3011, file: !2656, line: 71, baseType: !392, size: 128, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3011, file: !2656, line: 77, baseType: !3024, size: 64, offset: 384)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !796, file: !44, line: 1505, baseType: !381, size: 64, offset: 8064)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !796, file: !44, line: 1508, baseType: !381, size: 64, offset: 8128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !796, file: !44, line: 1511, baseType: !239, size: 32, offset: 8192)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !796, file: !44, line: 1514, baseType: !1174, size: 32, offset: 8224)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !796, file: !44, line: 1517, baseType: !3030, size: 64, offset: 8256)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !378, line: 18, flags: DIFlagFwdDecl)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !796, file: !44, line: 1518, baseType: !834, size: 64, offset: 8320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !796, file: !44, line: 1525, baseType: !1967, size: 64, offset: 8384)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !796, file: !44, line: 1532, baseType: !3035, size: 64, offset: 8448)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3036, line: 52, size: 64, elements: !3037)
!3036 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3037 = !{!3038}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3035, file: !3036, line: 53, baseType: !3039, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3036, line: 40, size: 256, elements: !3041)
!3041 = !{!3042, !3043, !3048}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3040, file: !3036, line: 42, baseType: !214)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3040, file: !3036, line: 44, baseType: !3044, size: 192)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3036, line: 28, size: 192, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3044, file: !3036, line: 29, baseType: !392, size: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3044, file: !3036, line: 31, baseType: !520, size: 64, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3040, file: !3036, line: 49, baseType: !520, size: 64, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !796, file: !44, line: 1533, baseType: !3035, size: 64, offset: 8512)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !796, file: !44, line: 1534, baseType: !570, size: 128, align: 64, offset: 8576)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !796, file: !44, line: 1535, baseType: !377, size: 256, offset: 8704)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !796, file: !44, line: 1537, baseType: !404, size: 192, offset: 8960)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !796, file: !44, line: 1542, baseType: !239, size: 32, offset: 9152)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !796, file: !44, line: 1545, baseType: !214, offset: 9184)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !796, file: !44, line: 1546, baseType: !392, size: 128, offset: 9216)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !796, file: !44, line: 1548, baseType: !214, offset: 9344)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !796, file: !44, line: 1549, baseType: !392, size: 128, offset: 9344)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !628, file: !44, line: 624, baseType: !969, size: 64, offset: 256)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !628, file: !44, line: 631, baseType: !230, size: 64, offset: 320)
!3060 = !DIDerivedType(tag: DW_TAG_member, scope: !628, file: !44, line: 639, baseType: !3061, size: 32, offset: 384)
!3061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !628, file: !44, line: 639, size: 32, elements: !3062)
!3062 = !{!3063, !3065}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3061, file: !44, line: 640, baseType: !3064, size: 32)
!3064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3061, file: !44, line: 641, baseType: !7, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !628, file: !44, line: 643, baseType: !711, size: 32, offset: 416)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !628, file: !44, line: 644, baseType: !729, size: 64, offset: 448)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !628, file: !44, line: 645, baseType: !732, size: 128, offset: 512)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !628, file: !44, line: 646, baseType: !732, size: 128, offset: 640)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !628, file: !44, line: 647, baseType: !732, size: 128, offset: 768)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !628, file: !44, line: 648, baseType: !214, offset: 896)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !628, file: !44, line: 649, baseType: !527, size: 16, offset: 896)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !628, file: !44, line: 650, baseType: !1606, size: 8, offset: 912)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !628, file: !44, line: 651, baseType: !1606, size: 8, offset: 920)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !628, file: !44, line: 652, baseType: !2828, size: 64, offset: 960)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !628, file: !44, line: 659, baseType: !230, size: 64, offset: 1024)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !628, file: !44, line: 660, baseType: !999, size: 256, offset: 1088)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !628, file: !44, line: 662, baseType: !230, size: 64, offset: 1344)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !628, file: !44, line: 663, baseType: !230, size: 64, offset: 1408)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !628, file: !44, line: 665, baseType: !838, size: 128, offset: 1472)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !628, file: !44, line: 666, baseType: !392, size: 128, offset: 1600)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !628, file: !44, line: 675, baseType: !392, size: 128, offset: 1728)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !628, file: !44, line: 676, baseType: !392, size: 128, offset: 1856)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !628, file: !44, line: 677, baseType: !392, size: 128, offset: 1984)
!3085 = !DIDerivedType(tag: DW_TAG_member, scope: !628, file: !44, line: 678, baseType: !3086, size: 128, offset: 2112)
!3086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !628, file: !44, line: 678, size: 128, elements: !3087)
!3087 = !{!3088, !3089}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3086, file: !44, line: 679, baseType: !834, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3086, file: !44, line: 680, baseType: !570, size: 128, align: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !628, file: !44, line: 682, baseType: !383, size: 64, offset: 2240)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !628, file: !44, line: 683, baseType: !383, size: 64, offset: 2304)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !628, file: !44, line: 684, baseType: !411, size: 32, offset: 2368)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !628, file: !44, line: 685, baseType: !411, size: 32, offset: 2400)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !628, file: !44, line: 686, baseType: !411, size: 32, offset: 2432)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !628, file: !44, line: 688, baseType: !411, size: 32, offset: 2464)
!3096 = !DIDerivedType(tag: DW_TAG_member, scope: !628, file: !44, line: 690, baseType: !3097, size: 64, offset: 2496)
!3097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !628, file: !44, line: 690, size: 64, elements: !3098)
!3098 = !{!3099, !3321}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3097, file: !44, line: 691, baseType: !3100, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3102)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3103)
!3103 = !{!3104, !3105, !3109, !3113, !3117, !3118, !3119, !3123, !3136, !3137, !3145, !3149, !3150, !3154, !3155, !3159, !3164, !3165, !3169, !3173, !3281, !3285, !3286, !3290, !3291, !3295, !3299, !3304, !3308, !3312, !3316, !3320}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3102, file: !44, line: 1823, baseType: !829, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3102, file: !44, line: 1824, baseType: !3106, size: 64, offset: 64)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!729, !562, !729, !239}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3102, file: !44, line: 1825, baseType: !3110, size: 64, offset: 128)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!516, !562, !485, !532, !931}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3102, file: !44, line: 1826, baseType: !3114, size: 64, offset: 192)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!516, !562, !447, !532, !931}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3102, file: !44, line: 1827, baseType: !1069, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3102, file: !44, line: 1828, baseType: !1069, size: 64, offset: 320)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3102, file: !44, line: 1829, baseType: !3120, size: 64, offset: 384)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!239, !1072, !688}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3102, file: !44, line: 1830, baseType: !3124, size: 64, offset: 448)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!239, !562, !3127}
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3129)
!3129 = !{!3130, !3135}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3128, file: !44, line: 1777, baseType: !3131, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3132)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{!239, !3127, !447, !239, !729, !201, !7}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3128, file: !44, line: 1778, baseType: !729, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3102, file: !44, line: 1831, baseType: !3124, size: 64, offset: 512)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3102, file: !44, line: 1832, baseType: !3138, size: 64, offset: 576)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{!3141, !562, !3143}
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3142, line: 52, baseType: !7)
!3142 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !815, line: 27, flags: DIFlagFwdDecl)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3102, file: !44, line: 1833, baseType: !3146, size: 64, offset: 640)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!520, !562, !7, !230}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3102, file: !44, line: 1834, baseType: !3146, size: 64, offset: 704)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3102, file: !44, line: 1835, baseType: !3151, size: 64, offset: 768)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!239, !562, !1247}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3102, file: !44, line: 1836, baseType: !230, size: 64, offset: 832)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3102, file: !44, line: 1837, baseType: !3156, size: 64, offset: 896)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!239, !627, !562}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3102, file: !44, line: 1838, baseType: !3160, size: 64, offset: 960)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!239, !562, !3163}
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !196)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3102, file: !44, line: 1839, baseType: !3156, size: 64, offset: 1024)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3102, file: !44, line: 1840, baseType: !3166, size: 64, offset: 1088)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!239, !562, !729, !729, !239}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3102, file: !44, line: 1841, baseType: !3170, size: 64, offset: 1152)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = !DISubroutineType(types: !3172)
!3172 = !{!239, !239, !562, !239}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3102, file: !44, line: 1842, baseType: !3174, size: 64, offset: 1216)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!239, !562, !239, !3177}
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3179)
!3179 = !{!3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3211, !3212, !3213, !3226, !3257}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3178, file: !44, line: 1063, baseType: !3177, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3178, file: !44, line: 1064, baseType: !392, size: 128, offset: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3178, file: !44, line: 1065, baseType: !838, size: 128, offset: 192)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3178, file: !44, line: 1066, baseType: !392, size: 128, offset: 320)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3178, file: !44, line: 1069, baseType: !392, size: 128, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3178, file: !44, line: 1072, baseType: !3163, size: 64, offset: 576)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3178, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3178, file: !44, line: 1074, baseType: !233, size: 8, offset: 672)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3178, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3178, file: !44, line: 1076, baseType: !239, size: 32, offset: 736)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3178, file: !44, line: 1077, baseType: !1735, size: 128, offset: 768)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3178, file: !44, line: 1078, baseType: !562, size: 64, offset: 896)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3178, file: !44, line: 1079, baseType: !729, size: 64, offset: 960)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3178, file: !44, line: 1080, baseType: !729, size: 64, offset: 1024)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3178, file: !44, line: 1082, baseType: !3195, size: 64, offset: 1088)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3197)
!3197 = !{!3198, !3206, !3207, !3208, !3209, !3210}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3196, file: !44, line: 1315, baseType: !3199)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3200, line: 20, baseType: !3201)
!3200 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3200, line: 11, elements: !3202)
!3202 = !{!3203}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3201, file: !3200, line: 12, baseType: !3204)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !226, line: 33, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !226, line: 31, elements: !228)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3196, file: !44, line: 1316, baseType: !239, size: 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3196, file: !44, line: 1317, baseType: !239, size: 32, offset: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3196, file: !44, line: 1318, baseType: !3195, size: 64, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3196, file: !44, line: 1319, baseType: !562, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3196, file: !44, line: 1320, baseType: !570, size: 128, align: 64, offset: 192)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3178, file: !44, line: 1084, baseType: !230, size: 64, offset: 1152)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3178, file: !44, line: 1085, baseType: !230, size: 64, offset: 1216)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3178, file: !44, line: 1087, baseType: !3214, size: 64, offset: 1280)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3216)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3217)
!3217 = !{!3218, !3222}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3216, file: !44, line: 1012, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = !DISubroutineType(types: !3221)
!3221 = !{null, !3177, !3177}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3216, file: !44, line: 1013, baseType: !3223, size: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{null, !3177}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3178, file: !44, line: 1088, baseType: !3227, size: 64, offset: 1344)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3229)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3230)
!3230 = !{!3231, !3235, !3239, !3240, !3244, !3248, !3252, !3256}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3229, file: !44, line: 1017, baseType: !3232, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{!3163, !3163}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3229, file: !44, line: 1018, baseType: !3236, size: 64, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{null, !3163}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3229, file: !44, line: 1019, baseType: !3223, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3229, file: !44, line: 1020, baseType: !3241, size: 64, offset: 192)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!239, !3177, !239}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3229, file: !44, line: 1021, baseType: !3245, size: 64, offset: 256)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{!688, !3177}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3229, file: !44, line: 1022, baseType: !3249, size: 64, offset: 320)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!239, !3177, !239, !395}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3229, file: !44, line: 1023, baseType: !3253, size: 64, offset: 384)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{null, !3177, !1046}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3229, file: !44, line: 1024, baseType: !3245, size: 64, offset: 448)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3178, file: !44, line: 1097, baseType: !3258, size: 256, offset: 1408)
!3258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3178, file: !44, line: 1089, size: 256, elements: !3259)
!3259 = !{!3260, !3269, !3275}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3258, file: !44, line: 1090, baseType: !3261, size: 256)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3262, line: 10, size: 256, elements: !3263)
!3262 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3263 = !{!3264, !3265, !3268}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3261, file: !3262, line: 11, baseType: !620, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3261, file: !3262, line: 12, baseType: !3266, size: 64, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3262, line: 5, flags: DIFlagFwdDecl)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3261, file: !3262, line: 13, baseType: !392, size: 128, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3258, file: !44, line: 1091, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3262, line: 17, size: 64, elements: !3271)
!3271 = !{!3272}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3270, file: !3262, line: 18, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3262, line: 16, flags: DIFlagFwdDecl)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3258, file: !44, line: 1096, baseType: !3276, size: 192)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3258, file: !44, line: 1092, size: 192, elements: !3277)
!3277 = !{!3278, !3279, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3276, file: !44, line: 1093, baseType: !392, size: 128)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3276, file: !44, line: 1094, baseType: !239, size: 32, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3276, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3102, file: !44, line: 1843, baseType: !3282, size: 64, offset: 1280)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!516, !562, !956, !239, !532, !931, !239}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3102, file: !44, line: 1844, baseType: !1367, size: 64, offset: 1344)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3102, file: !44, line: 1845, baseType: !3287, size: 64, offset: 1408)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!239, !239}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3102, file: !44, line: 1846, baseType: !3174, size: 64, offset: 1472)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3102, file: !44, line: 1847, baseType: !3292, size: 64, offset: 1536)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{!516, !1124, !562, !931, !532, !7}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3102, file: !44, line: 1848, baseType: !3296, size: 64, offset: 1600)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = !DISubroutineType(types: !3298)
!3298 = !{!516, !562, !931, !1124, !532, !7}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3102, file: !44, line: 1849, baseType: !3300, size: 64, offset: 1664)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!239, !562, !520, !3303, !1046}
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3102, file: !44, line: 1850, baseType: !3305, size: 64, offset: 1728)
!3305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3306 = !DISubroutineType(types: !3307)
!3307 = !{!520, !562, !239, !729, !729}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3102, file: !44, line: 1852, baseType: !3309, size: 64, offset: 1792)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{null, !910, !562}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3102, file: !44, line: 1856, baseType: !3313, size: 64, offset: 1856)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!516, !562, !729, !562, !729, !532, !7}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3102, file: !44, line: 1858, baseType: !3317, size: 64, offset: 1920)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!729, !562, !729, !562, !729, !729, !7}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3102, file: !44, line: 1861, baseType: !3166, size: 64, offset: 1984)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3097, file: !44, line: 692, baseType: !863, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !628, file: !44, line: 694, baseType: !3323, size: 64, offset: 2560)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3324, file: !44, line: 1101, baseType: !214)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3324, file: !44, line: 1102, baseType: !392, size: 128)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3324, file: !44, line: 1103, baseType: !392, size: 128, offset: 128)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3324, file: !44, line: 1104, baseType: !392, size: 128, offset: 256)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !628, file: !44, line: 695, baseType: !970, size: 1216, align: 64, offset: 2624)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !628, file: !44, line: 696, baseType: !392, size: 128, offset: 3840)
!3332 = !DIDerivedType(tag: DW_TAG_member, scope: !628, file: !44, line: 697, baseType: !3333, size: 64, offset: 3968)
!3333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !628, file: !44, line: 697, size: 64, elements: !3334)
!3334 = !{!3335, !3336, !3337, !3348, !3349}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3333, file: !44, line: 698, baseType: !1124, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3333, file: !44, line: 699, baseType: !2853, size: 64)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3333, file: !44, line: 700, baseType: !3338, size: 64)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3340, line: 14, size: 832, elements: !3341)
!3340 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3341 = !{!3342, !3343, !3344, !3345, !3346, !3347}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3339, file: !3340, line: 15, baseType: !443, size: 512)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3339, file: !3340, line: 16, baseType: !829, size: 64, offset: 512)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3339, file: !3340, line: 17, baseType: !3100, size: 64, offset: 576)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3339, file: !3340, line: 18, baseType: !392, size: 128, offset: 640)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3339, file: !3340, line: 19, baseType: !711, size: 32, offset: 768)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3339, file: !3340, line: 20, baseType: !7, size: 32, offset: 800)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3333, file: !44, line: 701, baseType: !485, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3333, file: !44, line: 702, baseType: !7, size: 32)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !628, file: !44, line: 705, baseType: !312, size: 32, offset: 4032)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !628, file: !44, line: 708, baseType: !312, size: 32, offset: 4064)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !628, file: !44, line: 709, baseType: !2934, size: 64, offset: 4096)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !628, file: !44, line: 720, baseType: !196, size: 64, offset: 4160)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !588, file: !585, line: 98, baseType: !3355, size: 256, offset: 448)
!3355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 256, elements: !2471)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !588, file: !585, line: 101, baseType: !3357, size: 32, offset: 704)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3358, line: 25, size: 32, elements: !3359)
!3358 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3359 = !{!3360}
!3360 = !DIDerivedType(tag: DW_TAG_member, scope: !3357, file: !3358, line: 26, baseType: !3361, size: 32)
!3361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3357, file: !3358, line: 26, size: 32, elements: !3362)
!3362 = !{!3363}
!3363 = !DIDerivedType(tag: DW_TAG_member, scope: !3361, file: !3358, line: 30, baseType: !3364, size: 32)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3361, file: !3358, line: 30, size: 32, elements: !3365)
!3365 = !{!3366, !3367}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3364, file: !3358, line: 31, baseType: !214)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3364, file: !3358, line: 32, baseType: !239, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !588, file: !585, line: 102, baseType: !2951, size: 64, offset: 768)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !588, file: !585, line: 103, baseType: !795, size: 64, offset: 832)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !588, file: !585, line: 104, baseType: !230, size: 64, offset: 896)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !588, file: !585, line: 105, baseType: !196, size: 64, offset: 960)
!3372 = !DIDerivedType(tag: DW_TAG_member, scope: !588, file: !585, line: 107, baseType: !3373, size: 128, offset: 1024)
!3373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !588, file: !585, line: 107, size: 128, elements: !3374)
!3374 = !{!3375, !3376}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3373, file: !585, line: 108, baseType: !392, size: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3373, file: !585, line: 109, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !588, file: !585, line: 111, baseType: !392, size: 128, offset: 1152)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !588, file: !585, line: 112, baseType: !392, size: 128, offset: 1280)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !588, file: !585, line: 120, baseType: !3381, size: 128, offset: 1408)
!3381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !588, file: !585, line: 116, size: 128, elements: !3382)
!3382 = !{!3383, !3384, !3385}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3381, file: !585, line: 117, baseType: !838, size: 128)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3381, file: !585, line: 118, baseType: !602, size: 128)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3381, file: !585, line: 119, baseType: !570, size: 128, align: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !563, file: !44, line: 922, baseType: !627, size: 64, offset: 256)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !563, file: !44, line: 923, baseType: !3100, size: 64, offset: 320)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !563, file: !44, line: 929, baseType: !214, offset: 384)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !563, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !563, file: !44, line: 931, baseType: !381, size: 64, offset: 448)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !563, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !563, file: !44, line: 933, baseType: !2947, size: 32, offset: 544)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !563, file: !44, line: 934, baseType: !404, size: 192, offset: 576)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !563, file: !44, line: 935, baseType: !729, size: 64, offset: 768)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !563, file: !44, line: 936, baseType: !3396, size: 192, offset: 832)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3397)
!3397 = !{!3398, !3399, !3400, !3401, !3402, !3403}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3396, file: !44, line: 886, baseType: !3199)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3396, file: !44, line: 887, baseType: !1725, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3396, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3396, file: !44, line: 889, baseType: !633, size: 32, offset: 96)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3396, file: !44, line: 889, baseType: !633, size: 32, offset: 128)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3396, file: !44, line: 890, baseType: !239, size: 32, offset: 160)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !563, file: !44, line: 937, baseType: !1801, size: 64, offset: 1024)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !563, file: !44, line: 938, baseType: !3406, size: 256, offset: 1088)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3407)
!3407 = !{!3408, !3409, !3410, !3411, !3412, !3413}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3406, file: !44, line: 897, baseType: !230, size: 64)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3406, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3406, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3406, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3406, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3406, file: !44, line: 904, baseType: !729, size: 64, offset: 192)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !563, file: !44, line: 940, baseType: !201, size: 64, offset: 1344)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !563, file: !44, line: 945, baseType: !196, size: 64, offset: 1408)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !563, file: !44, line: 949, baseType: !392, size: 128, offset: 1472)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !563, file: !44, line: 950, baseType: !392, size: 128, offset: 1600)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !563, file: !44, line: 952, baseType: !969, size: 64, offset: 1728)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !563, file: !44, line: 953, baseType: !1174, size: 32, offset: 1792)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !563, file: !44, line: 954, baseType: !1174, size: 32, offset: 1824)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !553, file: !510, line: 174, baseType: !559, size: 64, offset: 320)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !553, file: !510, line: 176, baseType: !3423, size: 64, offset: 384)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!239, !562, !452, !552, !1247}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !541, file: !510, line: 90, baseType: !536, size: 64, offset: 192)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !541, file: !510, line: 91, baseType: !3428, size: 64, offset: 256)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !500, file: !444, line: 143, baseType: !3430, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!3433, !452}
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3435)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3436)
!3436 = !{!3437, !3438, !3442, !3446, !3452, !3456}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3435, file: !61, line: 40, baseType: !60, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3435, file: !61, line: 41, baseType: !3439, size: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!688}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3435, file: !61, line: 42, baseType: !3443, size: 64, offset: 128)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!196}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3435, file: !61, line: 43, baseType: !3447, size: 64, offset: 192)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!2368, !3450}
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3435, file: !61, line: 44, baseType: !3453, size: 64, offset: 256)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!2368}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3435, file: !61, line: 45, baseType: !666, size: 64, offset: 320)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !500, file: !444, line: 144, baseType: !3458, size: 64, offset: 320)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DISubroutineType(types: !3460)
!3460 = !{!2368, !452}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !500, file: !444, line: 145, baseType: !3462, size: 64, offset: 384)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{null, !452, !3465, !3466}
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !443, file: !444, line: 70, baseType: !3468, size: 64, offset: 384)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !815, line: 123, size: 1024, elements: !3470)
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3587, !3588, !3589, !3590, !3591}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3469, file: !815, line: 124, baseType: !411, size: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3469, file: !815, line: 125, baseType: !411, size: 32, offset: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3469, file: !815, line: 135, baseType: !3468, size: 64, offset: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3469, file: !815, line: 136, baseType: !447, size: 64, offset: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3469, file: !815, line: 138, baseType: !992, size: 192, align: 64, offset: 192)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3469, file: !815, line: 140, baseType: !2368, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3469, file: !815, line: 141, baseType: !7, size: 32, offset: 448)
!3478 = !DIDerivedType(tag: DW_TAG_member, scope: !3469, file: !815, line: 142, baseType: !3479, size: 256, offset: 512)
!3479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3469, file: !815, line: 142, size: 256, elements: !3480)
!3480 = !{!3481, !3527, !3531}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3479, file: !815, line: 143, baseType: !3482, size: 192)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !815, line: 91, size: 192, elements: !3483)
!3483 = !{!3484, !3485, !3486}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3482, file: !815, line: 92, baseType: !230, size: 64)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3482, file: !815, line: 94, baseType: !988, size: 64, offset: 64)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3482, file: !815, line: 100, baseType: !3487, size: 64, offset: 128)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !815, line: 180, size: 704, elements: !3489)
!3489 = !{!3490, !3491, !3492, !3499, !3500, !3501, !3525, !3526}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3488, file: !815, line: 182, baseType: !3468, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3488, file: !815, line: 183, baseType: !7, size: 32, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3488, file: !815, line: 186, baseType: !3493, size: 192, offset: 128)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3494, line: 19, size: 192, elements: !3495)
!3494 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3495 = !{!3496, !3497, !3498}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3493, file: !3494, line: 20, baseType: !974, size: 128)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3493, file: !3494, line: 21, baseType: !7, size: 32, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3493, file: !3494, line: 22, baseType: !7, size: 32, offset: 160)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3488, file: !815, line: 187, baseType: !620, size: 32, offset: 320)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3488, file: !815, line: 188, baseType: !620, size: 32, offset: 352)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3488, file: !815, line: 189, baseType: !3502, size: 64, offset: 384)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !815, line: 168, size: 320, elements: !3504)
!3504 = !{!3505, !3509, !3513, !3517, !3521}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3503, file: !815, line: 169, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!239, !910, !3487}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3503, file: !815, line: 171, baseType: !3510, size: 64, offset: 64)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!239, !3468, !447, !526}
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3503, file: !815, line: 173, baseType: !3514, size: 64, offset: 128)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!239, !3468}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3503, file: !815, line: 174, baseType: !3518, size: 64, offset: 192)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!239, !3468, !3468, !447}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3503, file: !815, line: 176, baseType: !3522, size: 64, offset: 256)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!239, !910, !3468, !3487}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3488, file: !815, line: 192, baseType: !392, size: 128, offset: 448)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3488, file: !815, line: 194, baseType: !1735, size: 128, offset: 576)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3479, file: !815, line: 144, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !815, line: 103, size: 64, elements: !3529)
!3529 = !{!3530}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3528, file: !815, line: 104, baseType: !3468, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3479, file: !815, line: 145, baseType: !3532, size: 256)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !815, line: 107, size: 256, elements: !3533)
!3533 = !{!3534, !3582, !3585, !3586}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3532, file: !815, line: 108, baseType: !3535, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3537)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !815, line: 217, size: 768, elements: !3538)
!3538 = !{!3539, !3559, !3563, !3564, !3565, !3566, !3567, !3571, !3572, !3573, !3574, !3578}
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3537, file: !815, line: 222, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!239, !3543}
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !815, line: 197, size: 1088, elements: !3545)
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3544, file: !815, line: 199, baseType: !3468, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3544, file: !815, line: 200, baseType: !562, size: 64, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3544, file: !815, line: 201, baseType: !910, size: 64, offset: 128)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3544, file: !815, line: 202, baseType: !196, size: 64, offset: 192)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3544, file: !815, line: 205, baseType: !404, size: 192, offset: 256)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3544, file: !815, line: 206, baseType: !404, size: 192, offset: 448)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3544, file: !815, line: 207, baseType: !239, size: 32, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3544, file: !815, line: 208, baseType: !392, size: 128, offset: 704)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3544, file: !815, line: 209, baseType: !485, size: 64, offset: 832)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3544, file: !815, line: 211, baseType: !532, size: 64, offset: 896)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3544, file: !815, line: 212, baseType: !688, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3544, file: !815, line: 213, baseType: !688, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3544, file: !815, line: 214, baseType: !1275, size: 64, offset: 1024)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3537, file: !815, line: 223, baseType: !3560, size: 64, offset: 64)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{null, !3543}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3537, file: !815, line: 236, baseType: !941, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3537, file: !815, line: 238, baseType: !928, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3537, file: !815, line: 239, baseType: !937, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3537, file: !815, line: 240, baseType: !933, size: 64, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3537, file: !815, line: 242, baseType: !3568, size: 64, offset: 384)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!516, !3543, !485, !532, !729}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3537, file: !815, line: 252, baseType: !532, size: 64, offset: 448)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3537, file: !815, line: 259, baseType: !688, size: 8, offset: 512)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3537, file: !815, line: 260, baseType: !3568, size: 64, offset: 576)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3537, file: !815, line: 263, baseType: !3575, size: 64, offset: 640)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!3141, !3543, !3143}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3537, file: !815, line: 266, baseType: !3579, size: 64, offset: 704)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!239, !3543, !1247}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3532, file: !815, line: 109, baseType: !3583, size: 64, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !815, line: 31, flags: DIFlagFwdDecl)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3532, file: !815, line: 110, baseType: !729, size: 64, offset: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3532, file: !815, line: 111, baseType: !3468, size: 64, offset: 192)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3469, file: !815, line: 148, baseType: !196, size: 64, offset: 768)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3469, file: !815, line: 154, baseType: !201, size: 64, offset: 832)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3469, file: !815, line: 156, baseType: !527, size: 16, offset: 896)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3469, file: !815, line: 157, baseType: !526, size: 16, offset: 912)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3469, file: !815, line: 158, baseType: !3592, size: 64, offset: 960)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !815, line: 32, flags: DIFlagFwdDecl)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !443, file: !444, line: 71, baseType: !429, size: 32, offset: 448)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !443, file: !444, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !443, file: !444, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !443, file: !444, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !443, file: !444, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !443, file: !444, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !440, file: !73, line: 463, baseType: !439, size: 64, offset: 512)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !440, file: !73, line: 465, baseType: !3602, size: 64, offset: 576)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !440, file: !73, line: 467, baseType: !447, size: 64, offset: 640)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !440, file: !73, line: 468, baseType: !3606, size: 64, offset: 704)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3608)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3616, !3621, !3625}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3608, file: !73, line: 88, baseType: !447, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3608, file: !73, line: 89, baseType: !538, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3608, file: !73, line: 90, baseType: !3613, size: 64, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!239, !439, !480}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3608, file: !73, line: 91, baseType: !3617, size: 64, offset: 192)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!485, !439, !3620, !3465, !3466}
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3608, file: !73, line: 93, baseType: !3622, size: 64, offset: 256)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !439}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3608, file: !73, line: 95, baseType: !3626, size: 64, offset: 320)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3628)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3629)
!3629 = !{!3630, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3628, file: !80, line: 279, baseType: !3631, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!239, !439}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3628, file: !80, line: 280, baseType: !3622, size: 64, offset: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3628, file: !80, line: 281, baseType: !3631, size: 64, offset: 128)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3628, file: !80, line: 282, baseType: !3631, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3628, file: !80, line: 283, baseType: !3631, size: 64, offset: 256)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3628, file: !80, line: 284, baseType: !3631, size: 64, offset: 320)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3628, file: !80, line: 285, baseType: !3631, size: 64, offset: 384)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3628, file: !80, line: 286, baseType: !3631, size: 64, offset: 448)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3628, file: !80, line: 287, baseType: !3631, size: 64, offset: 512)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3628, file: !80, line: 288, baseType: !3631, size: 64, offset: 576)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3628, file: !80, line: 289, baseType: !3631, size: 64, offset: 640)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3628, file: !80, line: 290, baseType: !3631, size: 64, offset: 704)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3628, file: !80, line: 291, baseType: !3631, size: 64, offset: 768)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3628, file: !80, line: 292, baseType: !3631, size: 64, offset: 832)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3628, file: !80, line: 293, baseType: !3631, size: 64, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3628, file: !80, line: 294, baseType: !3631, size: 64, offset: 960)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3628, file: !80, line: 295, baseType: !3631, size: 64, offset: 1024)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3628, file: !80, line: 296, baseType: !3631, size: 64, offset: 1088)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3628, file: !80, line: 297, baseType: !3631, size: 64, offset: 1152)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3628, file: !80, line: 298, baseType: !3631, size: 64, offset: 1216)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3628, file: !80, line: 299, baseType: !3631, size: 64, offset: 1280)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3628, file: !80, line: 300, baseType: !3631, size: 64, offset: 1344)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3628, file: !80, line: 301, baseType: !3631, size: 64, offset: 1408)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !440, file: !73, line: 470, baseType: !3657, size: 64, offset: 768)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3659, line: 82, size: 1408, elements: !3660)
!3659 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3660 = !{!3661, !3662, !3663, !3664, !3665, !3666, !3667, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3724, !3727, !3728}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3658, file: !3659, line: 83, baseType: !447, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3658, file: !3659, line: 84, baseType: !447, size: 64, offset: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3658, file: !3659, line: 85, baseType: !439, size: 64, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3658, file: !3659, line: 86, baseType: !538, size: 64, offset: 192)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3658, file: !3659, line: 87, baseType: !538, size: 64, offset: 256)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3658, file: !3659, line: 88, baseType: !538, size: 64, offset: 320)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3658, file: !3659, line: 90, baseType: !3668, size: 64, offset: 384)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!239, !439, !3671}
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3673)
!3673 = !{!3674, !3675, !3676, !3677, !3678, !3679, !3680, !3684, !3688, !3689, !3690, !3691, !3692, !3700, !3701, !3702, !3703, !3704, !3705}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3672, file: !67, line: 96, baseType: !447, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3672, file: !67, line: 97, baseType: !3657, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3672, file: !67, line: 99, baseType: !829, size: 64, offset: 128)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3672, file: !67, line: 100, baseType: !447, size: 64, offset: 192)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3672, file: !67, line: 102, baseType: !688, size: 8, offset: 256)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3672, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3672, file: !67, line: 105, baseType: !3681, size: 64, offset: 320)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3683)
!3683 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !67, line: 105, flags: DIFlagFwdDecl)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3672, file: !67, line: 106, baseType: !3685, size: 64, offset: 384)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3687)
!3687 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !67, line: 106, flags: DIFlagFwdDecl)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3672, file: !67, line: 108, baseType: !3631, size: 64, offset: 448)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3672, file: !67, line: 109, baseType: !3622, size: 64, offset: 512)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3672, file: !67, line: 110, baseType: !3631, size: 64, offset: 576)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3672, file: !67, line: 111, baseType: !3622, size: 64, offset: 640)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3672, file: !67, line: 112, baseType: !3693, size: 64, offset: 704)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!239, !439, !3696}
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3697)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3698)
!3698 = !{!3699}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3697, file: !80, line: 51, baseType: !239, size: 32)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3672, file: !67, line: 113, baseType: !3631, size: 64, offset: 768)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3672, file: !67, line: 114, baseType: !538, size: 64, offset: 832)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3672, file: !67, line: 115, baseType: !538, size: 64, offset: 896)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3672, file: !67, line: 117, baseType: !3626, size: 64, offset: 960)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3672, file: !67, line: 118, baseType: !3622, size: 64, offset: 1024)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3672, file: !67, line: 120, baseType: !3706, size: 64, offset: 1088)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3658, file: !3659, line: 91, baseType: !3613, size: 64, offset: 448)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3658, file: !3659, line: 92, baseType: !3631, size: 64, offset: 512)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3658, file: !3659, line: 93, baseType: !3622, size: 64, offset: 576)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3658, file: !3659, line: 94, baseType: !3631, size: 64, offset: 640)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3658, file: !3659, line: 95, baseType: !3622, size: 64, offset: 704)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3658, file: !3659, line: 97, baseType: !3631, size: 64, offset: 768)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3658, file: !3659, line: 98, baseType: !3631, size: 64, offset: 832)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3658, file: !3659, line: 100, baseType: !3693, size: 64, offset: 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3658, file: !3659, line: 101, baseType: !3631, size: 64, offset: 960)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3658, file: !3659, line: 103, baseType: !3631, size: 64, offset: 1024)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3658, file: !3659, line: 105, baseType: !3631, size: 64, offset: 1088)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3658, file: !3659, line: 107, baseType: !3626, size: 64, offset: 1152)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3658, file: !3659, line: 109, baseType: !3721, size: 64, offset: 1216)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3723)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3659, line: 109, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3658, file: !3659, line: 111, baseType: !3725, size: 64, offset: 1280)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3659, line: 111, flags: DIFlagFwdDecl)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3658, file: !3659, line: 112, baseType: !844, offset: 1344)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3658, file: !3659, line: 114, baseType: !688, size: 8, offset: 1344)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !440, file: !73, line: 471, baseType: !3671, size: 64, offset: 832)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !440, file: !73, line: 473, baseType: !196, size: 64, offset: 896)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !440, file: !73, line: 475, baseType: !196, size: 64, offset: 960)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !440, file: !73, line: 480, baseType: !404, size: 192, offset: 1024)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !440, file: !73, line: 484, baseType: !3734, size: 576, offset: 1216)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3734, file: !73, line: 362, baseType: !392, size: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3734, file: !73, line: 363, baseType: !392, size: 128, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3734, file: !73, line: 364, baseType: !392, size: 128, offset: 256)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3734, file: !73, line: 365, baseType: !392, size: 128, offset: 384)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3734, file: !73, line: 366, baseType: !688, size: 8, offset: 512)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3734, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !440, file: !73, line: 485, baseType: !3743, size: 2304, offset: 1792)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3744)
!3744 = !{!3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3840, !3844}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3743, file: !80, line: 566, baseType: !3696, size: 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3743, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3743, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3743, file: !80, line: 569, baseType: !688, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3743, file: !80, line: 570, baseType: !688, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3743, file: !80, line: 571, baseType: !688, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3743, file: !80, line: 572, baseType: !688, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3743, file: !80, line: 573, baseType: !688, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3743, file: !80, line: 574, baseType: !688, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3743, file: !80, line: 575, baseType: !688, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3743, file: !80, line: 576, baseType: !688, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3743, file: !80, line: 577, baseType: !620, size: 32, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3743, file: !80, line: 578, baseType: !214, offset: 96)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3743, file: !80, line: 580, baseType: !392, size: 128, offset: 128)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3743, file: !80, line: 581, baseType: !1756, size: 192, offset: 256)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3743, file: !80, line: 582, baseType: !3761, size: 64, offset: 448)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3763, line: 43, size: 1472, elements: !3764)
!3763 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3764 = !{!3765, !3766, !3767, !3768, !3769, !3772, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3762, file: !3763, line: 44, baseType: !447, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3762, file: !3763, line: 45, baseType: !239, size: 32, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3762, file: !3763, line: 46, baseType: !392, size: 128, offset: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3762, file: !3763, line: 47, baseType: !214, offset: 256)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3762, file: !3763, line: 48, baseType: !3770, size: 64, offset: 256)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3762, file: !3763, line: 49, baseType: !3773, size: 320, offset: 320)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3774, line: 11, size: 320, elements: !3775)
!3774 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3775 = !{!3776, !3777, !3778, !3783}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3773, file: !3774, line: 16, baseType: !838, size: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3773, file: !3774, line: 17, baseType: !230, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3773, file: !3774, line: 18, baseType: !3779, size: 64, offset: 192)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !3782}
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3773, file: !3774, line: 19, baseType: !620, size: 32, offset: 256)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3762, file: !3763, line: 50, baseType: !230, size: 64, offset: 640)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3762, file: !3763, line: 51, baseType: !1554, size: 64, offset: 704)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3762, file: !3763, line: 52, baseType: !1554, size: 64, offset: 768)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3762, file: !3763, line: 53, baseType: !1554, size: 64, offset: 832)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3762, file: !3763, line: 54, baseType: !1554, size: 64, offset: 896)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3762, file: !3763, line: 55, baseType: !1554, size: 64, offset: 960)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3762, file: !3763, line: 56, baseType: !230, size: 64, offset: 1024)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3762, file: !3763, line: 57, baseType: !230, size: 64, offset: 1088)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3762, file: !3763, line: 58, baseType: !230, size: 64, offset: 1152)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3762, file: !3763, line: 59, baseType: !230, size: 64, offset: 1216)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3762, file: !3763, line: 60, baseType: !230, size: 64, offset: 1280)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3762, file: !3763, line: 61, baseType: !439, size: 64, offset: 1344)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3762, file: !3763, line: 62, baseType: !688, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3762, file: !3763, line: 63, baseType: !688, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3743, file: !80, line: 583, baseType: !688, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3743, file: !80, line: 584, baseType: !688, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3743, file: !80, line: 585, baseType: !688, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3743, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3743, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3743, file: !80, line: 592, baseType: !1546, size: 512, offset: 576)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3743, file: !80, line: 593, baseType: !201, size: 64, offset: 1088)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3743, file: !80, line: 594, baseType: !377, size: 256, offset: 1152)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3743, file: !80, line: 595, baseType: !1735, size: 128, offset: 1408)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3743, file: !80, line: 596, baseType: !3770, size: 64, offset: 1536)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3743, file: !80, line: 597, baseType: !411, size: 32, offset: 1600)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3743, file: !80, line: 598, baseType: !411, size: 32, offset: 1632)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3743, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3743, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3743, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3743, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3743, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3743, file: !80, line: 604, baseType: !688, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3743, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3743, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3743, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3743, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3743, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3743, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3743, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3743, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3743, file: !80, line: 613, baseType: !239, size: 32, offset: 1792)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3743, file: !80, line: 614, baseType: !239, size: 32, offset: 1824)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3743, file: !80, line: 615, baseType: !201, size: 64, offset: 1856)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3743, file: !80, line: 616, baseType: !201, size: 64, offset: 1920)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3743, file: !80, line: 617, baseType: !201, size: 64, offset: 1984)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3743, file: !80, line: 618, baseType: !201, size: 64, offset: 2048)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3743, file: !80, line: 620, baseType: !3831, size: 64, offset: 2112)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3833)
!3833 = !{!3834, !3835, !3836, !3837}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3832, file: !80, line: 537, baseType: !214)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3832, file: !80, line: 538, baseType: !7, size: 32)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3832, file: !80, line: 540, baseType: !392, size: 128, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3832, file: !80, line: 543, baseType: !3838, size: 64, offset: 192)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3743, file: !80, line: 621, baseType: !3841, size: 64, offset: 2176)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !439, !1698}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3743, file: !80, line: 622, baseType: !3845, size: 64, offset: 2240)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !440, file: !73, line: 486, baseType: !3848, size: 64, offset: 4096)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3850)
!3850 = !{!3851, !3852, !3853, !3857, !3858, !3859}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3849, file: !80, line: 643, baseType: !3628, size: 1472)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3849, file: !80, line: 644, baseType: !3631, size: 64, offset: 1472)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3849, file: !80, line: 645, baseType: !3854, size: 64, offset: 1536)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !439, !688}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3849, file: !80, line: 646, baseType: !3631, size: 64, offset: 1600)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3849, file: !80, line: 647, baseType: !3622, size: 64, offset: 1664)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3849, file: !80, line: 648, baseType: !3622, size: 64, offset: 1728)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !440, file: !73, line: 493, baseType: !3861, size: 64, offset: 4160)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !440, file: !73, line: 499, baseType: !392, size: 128, offset: 4224)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !440, file: !73, line: 502, baseType: !3865, size: 64, offset: 4352)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3867)
!3867 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !440, file: !73, line: 504, baseType: !3869, size: 64, offset: 4416)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !440, file: !73, line: 505, baseType: !201, size: 64, offset: 4480)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !440, file: !73, line: 510, baseType: !201, size: 64, offset: 4544)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !440, file: !73, line: 511, baseType: !3873, size: 64, offset: 4608)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3875)
!3875 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !440, file: !73, line: 513, baseType: !3877, size: 64, offset: 4672)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3879)
!3879 = !{!3880, !3881}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3878, file: !73, line: 293, baseType: !7, size: 32)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3878, file: !73, line: 294, baseType: !230, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !440, file: !73, line: 515, baseType: !392, size: 128, offset: 4736)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !440, file: !73, line: 526, baseType: !3884, offset: 4864)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3885, line: 5, elements: !228)
!3885 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !440, file: !73, line: 528, baseType: !3887, size: 64, offset: 4864)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3889, line: 14, flags: DIFlagFwdDecl)
!3889 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !440, file: !73, line: 529, baseType: !3891, size: 64, offset: 4928)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3893, line: 17, size: 192, elements: !3894)
!3893 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3894 = !{!3895, !3896, !3979}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3892, file: !3893, line: 18, baseType: !3891, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3892, file: !3893, line: 19, baseType: !3897, size: 64, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3899)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3893, line: 110, size: 1152, elements: !3900)
!3900 = !{!3901, !3905, !3909, !3915, !3921, !3925, !3929, !3934, !3938, !3939, !3943, !3947, !3951, !3962, !3963, !3964, !3965, !3975}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3899, file: !3893, line: 111, baseType: !3902, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!3891, !3891}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3899, file: !3893, line: 112, baseType: !3906, size: 64, offset: 64)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{null, !3891}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3899, file: !3893, line: 113, baseType: !3910, size: 64, offset: 128)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!688, !3913}
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3892)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3899, file: !3893, line: 114, baseType: !3916, size: 64, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!2368, !3913, !3919}
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !440)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3899, file: !3893, line: 116, baseType: !3922, size: 64, offset: 256)
!3922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3923, size: 64)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!688, !3913, !447}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3899, file: !3893, line: 118, baseType: !3926, size: 64, offset: 320)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = !DISubroutineType(types: !3928)
!3928 = !{!239, !3913, !447, !7, !196, !532}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3899, file: !3893, line: 123, baseType: !3930, size: 64, offset: 384)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!239, !3913, !447, !3933, !532}
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3899, file: !3893, line: 126, baseType: !3935, size: 64, offset: 448)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!447, !3913}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3899, file: !3893, line: 127, baseType: !3935, size: 64, offset: 512)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3899, file: !3893, line: 128, baseType: !3940, size: 64, offset: 576)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!3891, !3913}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3899, file: !3893, line: 130, baseType: !3944, size: 64, offset: 640)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!3891, !3913, !3891}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3899, file: !3893, line: 133, baseType: !3948, size: 64, offset: 704)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!3891, !3913, !447}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3899, file: !3893, line: 135, baseType: !3952, size: 64, offset: 768)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!239, !3913, !447, !447, !7, !7, !3955}
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3893, line: 43, size: 640, elements: !3957)
!3957 = !{!3958, !3959, !3960}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3956, file: !3893, line: 44, baseType: !3891, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3956, file: !3893, line: 45, baseType: !7, size: 32, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3956, file: !3893, line: 46, baseType: !3961, size: 512, offset: 128)
!3961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 512, elements: !1584)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3899, file: !3893, line: 140, baseType: !3944, size: 64, offset: 832)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3899, file: !3893, line: 143, baseType: !3940, size: 64, offset: 896)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3899, file: !3893, line: 145, baseType: !3902, size: 64, offset: 960)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3899, file: !3893, line: 146, baseType: !3966, size: 64, offset: 1024)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!239, !3913, !3969}
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3893, line: 29, size: 128, elements: !3971)
!3971 = !{!3972, !3973, !3974}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3970, file: !3893, line: 30, baseType: !7, size: 32)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3970, file: !3893, line: 31, baseType: !7, size: 32, offset: 32)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3970, file: !3893, line: 32, baseType: !3913, size: 64, offset: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3899, file: !3893, line: 148, baseType: !3976, size: 64, offset: 1088)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!239, !3913, !439}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3892, file: !3893, line: 20, baseType: !439, size: 64, offset: 128)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !440, file: !73, line: 534, baseType: !711, size: 32, offset: 4992)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !440, file: !73, line: 535, baseType: !620, size: 32, offset: 5024)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !440, file: !73, line: 537, baseType: !214, offset: 5056)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !440, file: !73, line: 538, baseType: !392, size: 128, offset: 5056)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !440, file: !73, line: 540, baseType: !3985, size: 64, offset: 5184)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3987, line: 54, size: 960, elements: !3988)
!3987 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3988 = !{!3989, !3990, !3991, !3992, !3993, !3994, !3995, !3999, !4003, !4004, !4005, !4006, !4010, !4014, !4015}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3986, file: !3987, line: 55, baseType: !447, size: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3986, file: !3987, line: 56, baseType: !829, size: 64, offset: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3986, file: !3987, line: 58, baseType: !538, size: 64, offset: 128)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3986, file: !3987, line: 59, baseType: !538, size: 64, offset: 192)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3986, file: !3987, line: 60, baseType: !452, size: 64, offset: 256)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3986, file: !3987, line: 62, baseType: !3613, size: 64, offset: 320)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3986, file: !3987, line: 63, baseType: !3996, size: 64, offset: 384)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!485, !439, !3620}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3986, file: !3987, line: 65, baseType: !4000, size: 64, offset: 448)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{null, !3985}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3986, file: !3987, line: 66, baseType: !3622, size: 64, offset: 512)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3986, file: !3987, line: 68, baseType: !3631, size: 64, offset: 576)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3986, file: !3987, line: 70, baseType: !3433, size: 64, offset: 640)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3986, file: !3987, line: 71, baseType: !4007, size: 64, offset: 704)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!2368, !439}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3986, file: !3987, line: 73, baseType: !4011, size: 64, offset: 768)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{null, !439, !3465, !3466}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3986, file: !3987, line: 75, baseType: !3626, size: 64, offset: 832)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3986, file: !3987, line: 77, baseType: !3725, size: 64, offset: 896)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !440, file: !73, line: 541, baseType: !538, size: 64, offset: 5248)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !440, file: !73, line: 543, baseType: !3622, size: 64, offset: 5312)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !440, file: !73, line: 544, baseType: !4019, size: 64, offset: 5376)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !440, file: !73, line: 545, baseType: !4022, size: 64, offset: 5440)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !440, file: !73, line: 547, baseType: !688, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !440, file: !73, line: 548, baseType: !688, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !440, file: !73, line: 549, baseType: !688, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !440, file: !73, line: 550, baseType: !688, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !425, file: !348, line: 289, baseType: !4029, size: 64, offset: 128)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !4031, line: 302, size: 1472, elements: !4032)
!4031 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!4032 = !{!4033, !4034, !4035, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4051, !4052, !4054, !4057, !4059, !4060, !4219}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4030, file: !4031, line: 303, baseType: !239, size: 32)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4030, file: !4031, line: 304, baseType: !429, size: 32, offset: 32)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !4030, file: !4031, line: 305, baseType: !4036, size: 64, offset: 64)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4030, file: !4031, line: 306, baseType: !829, size: 64, offset: 128)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4030, file: !4031, line: 307, baseType: !447, size: 64, offset: 192)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4030, file: !4031, line: 308, baseType: !447, size: 64, offset: 256)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !4030, file: !4031, line: 309, baseType: !239, size: 32, offset: 320)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4030, file: !4031, line: 310, baseType: !239, size: 32, offset: 352)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !4030, file: !4031, line: 311, baseType: !239, size: 32, offset: 384)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4030, file: !4031, line: 312, baseType: !7, size: 32, offset: 416)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4030, file: !4031, line: 313, baseType: !1465, size: 16, offset: 448)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !4030, file: !4031, line: 314, baseType: !1465, size: 16, offset: 464)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !4030, file: !4031, line: 315, baseType: !249, size: 352, offset: 480)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4030, file: !4031, line: 316, baseType: !230, size: 64, offset: 832)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !4030, file: !4031, line: 317, baseType: !4049, size: 64, offset: 896)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4031, line: 317, flags: DIFlagFwdDecl)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !4030, file: !4031, line: 318, baseType: !4029, size: 64, offset: 960)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !4030, file: !4031, line: 323, baseType: !4053, size: 64, offset: 1024)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4030, file: !4031, line: 324, baseType: !4055, size: 64, offset: 1088)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !4030, file: !4031, line: 325, baseType: !4058, size: 64, offset: 1152)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !4030, file: !4031, line: 326, baseType: !196, size: 64, offset: 1216)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4030, file: !4031, line: 332, baseType: !4061, size: 64, offset: 1280)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4063)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !4031, line: 254, size: 2176, elements: !4064)
!4064 = !{!4065, !4069, !4073, !4077, !4081, !4085, !4089, !4090, !4094, !4098, !4099, !4103, !4104, !4108, !4112, !4116, !4117, !4118, !4119, !4120, !4121, !4125, !4126, !4127, !4131, !4135, !4136, !4140, !4152, !4165, !4187, !4213, !4214, !4218}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !4063, file: !4031, line: 255, baseType: !4066, size: 64)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!424, !4029, !562, !239}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !4063, file: !4031, line: 257, baseType: !4070, size: 64, offset: 64)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!239, !4029, !424}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4063, file: !4031, line: 258, baseType: !4074, size: 64, offset: 128)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{null, !4029, !424}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4063, file: !4031, line: 259, baseType: !4078, size: 64, offset: 192)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!239, !424, !562}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4063, file: !4031, line: 260, baseType: !4082, size: 64, offset: 256)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{null, !424, !562}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4063, file: !4031, line: 261, baseType: !4086, size: 64, offset: 320)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{null, !424}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4063, file: !4031, line: 262, baseType: !4086, size: 64, offset: 384)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4063, file: !4031, line: 263, baseType: !4091, size: 64, offset: 448)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!239, !424, !624, !239}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !4063, file: !4031, line: 265, baseType: !4095, size: 64, offset: 512)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!239, !424, !233}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !4063, file: !4031, line: 266, baseType: !4086, size: 64, offset: 576)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !4063, file: !4031, line: 267, baseType: !4100, size: 64, offset: 640)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!239, !424}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !4063, file: !4031, line: 268, baseType: !4100, size: 64, offset: 704)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4063, file: !4031, line: 269, baseType: !4105, size: 64, offset: 768)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!239, !424, !7, !230}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4063, file: !4031, line: 271, baseType: !4109, size: 64, offset: 832)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!520, !424, !7, !230}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4063, file: !4031, line: 273, baseType: !4113, size: 64, offset: 896)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{null, !424, !248}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4063, file: !4031, line: 274, baseType: !4086, size: 64, offset: 960)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4063, file: !4031, line: 275, baseType: !4086, size: 64, offset: 1024)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4063, file: !4031, line: 276, baseType: !4086, size: 64, offset: 1088)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4063, file: !4031, line: 277, baseType: !4086, size: 64, offset: 1152)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4063, file: !4031, line: 278, baseType: !4086, size: 64, offset: 1216)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !4063, file: !4031, line: 279, baseType: !4122, size: 64, offset: 1280)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!239, !424, !239}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4063, file: !4031, line: 280, baseType: !4086, size: 64, offset: 1344)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4063, file: !4031, line: 281, baseType: !4086, size: 64, offset: 1408)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !4063, file: !4031, line: 282, baseType: !4128, size: 64, offset: 1472)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !424, !239}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !4063, file: !4031, line: 283, baseType: !4132, size: 64, offset: 1536)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{null, !424, !449}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !4063, file: !4031, line: 284, baseType: !4100, size: 64, offset: 1600)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !4063, file: !4031, line: 285, baseType: !4137, size: 64, offset: 1664)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!239, !424, !7, !7}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !4063, file: !4031, line: 287, baseType: !4141, size: 64, offset: 1728)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!239, !424, !4144}
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !4146, line: 15, size: 64, elements: !4147)
!4146 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!4147 = !{!4148, !4149, !4150, !4151}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !4145, file: !4146, line: 16, baseType: !527, size: 16)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !4145, file: !4146, line: 17, baseType: !527, size: 16, offset: 16)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !4145, file: !4146, line: 18, baseType: !527, size: 16, offset: 32)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !4145, file: !4146, line: 19, baseType: !527, size: 16, offset: 48)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !4063, file: !4031, line: 288, baseType: !4153, size: 64, offset: 1792)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!239, !424, !4156}
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4158, line: 10, size: 128, elements: !4159)
!4158 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4159 = !{!4160, !4161, !4162, !4164}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !4157, file: !4158, line: 12, baseType: !1085, size: 16)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !4157, file: !4158, line: 13, baseType: !1085, size: 16, offset: 16)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !4157, file: !4158, line: 14, baseType: !4163, size: 80, offset: 32)
!4163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 80, elements: !317)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !4157, file: !4158, line: 15, baseType: !1085, size: 16, offset: 112)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !4063, file: !4031, line: 289, baseType: !4166, size: 64, offset: 1856)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!239, !424, !4169}
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !309, line: 102, size: 640, elements: !4171)
!4171 = !{!4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4170, file: !309, line: 103, baseType: !239, size: 32)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4170, file: !309, line: 103, baseType: !239, size: 32, offset: 32)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4170, file: !309, line: 103, baseType: !239, size: 32, offset: 64)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4170, file: !309, line: 103, baseType: !239, size: 32, offset: 96)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4170, file: !309, line: 104, baseType: !239, size: 32, offset: 128)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4170, file: !309, line: 104, baseType: !239, size: 32, offset: 160)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4170, file: !309, line: 105, baseType: !239, size: 32, offset: 192)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4170, file: !309, line: 105, baseType: !239, size: 32, offset: 224)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4170, file: !309, line: 105, baseType: !239, size: 32, offset: 256)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4170, file: !309, line: 105, baseType: !239, size: 32, offset: 288)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4170, file: !309, line: 106, baseType: !239, size: 32, offset: 320)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4170, file: !309, line: 107, baseType: !4184, size: 288, offset: 352)
!4184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 288, elements: !4185)
!4185 = !{!4186}
!4186 = !DISubrange(count: 9)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !4063, file: !4031, line: 291, baseType: !4188, size: 64, offset: 1920)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!239, !424, !4191}
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !309, line: 19, size: 576, elements: !4193)
!4193 = !{!4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4206, !4207, !4208, !4209, !4210, !4211, !4212}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4192, file: !309, line: 20, baseType: !239, size: 32)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4192, file: !309, line: 21, baseType: !239, size: 32, offset: 32)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4192, file: !309, line: 22, baseType: !7, size: 32, offset: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4192, file: !309, line: 23, baseType: !239, size: 32, offset: 96)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4192, file: !309, line: 24, baseType: !239, size: 32, offset: 128)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4192, file: !309, line: 25, baseType: !239, size: 32, offset: 160)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4192, file: !309, line: 26, baseType: !239, size: 32, offset: 192)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4192, file: !309, line: 27, baseType: !239, size: 32, offset: 224)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4192, file: !309, line: 28, baseType: !527, size: 16, offset: 256)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4192, file: !309, line: 29, baseType: !449, size: 8, offset: 272)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4192, file: !309, line: 30, baseType: !4205, size: 8, offset: 280)
!4205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 8, elements: !1625)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4192, file: !309, line: 31, baseType: !239, size: 32, offset: 288)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4192, file: !309, line: 32, baseType: !527, size: 16, offset: 320)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4192, file: !309, line: 33, baseType: !527, size: 16, offset: 336)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4192, file: !309, line: 34, baseType: !232, size: 64, offset: 384)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4192, file: !309, line: 35, baseType: !527, size: 16, offset: 448)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4192, file: !309, line: 36, baseType: !7, size: 32, offset: 480)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4192, file: !309, line: 37, baseType: !230, size: 64, offset: 512)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !4063, file: !4031, line: 292, baseType: !4188, size: 64, offset: 1984)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4063, file: !4031, line: 293, baseType: !4215, size: 64, offset: 2048)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{null, !424, !910}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !4063, file: !4031, line: 299, baseType: !941, size: 64, offset: 2112)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !4030, file: !4031, line: 333, baseType: !392, size: 128, offset: 1344)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !425, file: !348, line: 290, baseType: !4061, size: 64, offset: 192)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !425, file: !348, line: 291, baseType: !239, size: 32, offset: 256)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !425, file: !348, line: 294, baseType: !4223, size: 384, offset: 320)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4224, line: 133, size: 384, elements: !4225)
!4224 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4225 = !{!4226, !4227, !4228, !4229, !4230}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4223, file: !4224, line: 134, baseType: !381, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4223, file: !4224, line: 135, baseType: !1005, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4223, file: !4224, line: 136, baseType: !7, size: 32, offset: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4223, file: !4224, line: 137, baseType: !392, size: 128, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4223, file: !4224, line: 138, baseType: !392, size: 128, offset: 256)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !425, file: !348, line: 295, baseType: !4232, size: 64, offset: 704)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4224, line: 215, size: 128, elements: !4234)
!4234 = !{!4235, !4280}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4233, file: !4224, line: 216, baseType: !4236, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4224, line: 175, size: 1216, elements: !4238)
!4238 = !{!4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4250, !4254, !4258, !4259, !4260, !4264, !4265, !4269, !4270, !4274, !4278, !4279}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4237, file: !4224, line: 176, baseType: !239, size: 32)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4237, file: !4224, line: 177, baseType: !485, size: 64, offset: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4237, file: !4224, line: 178, baseType: !239, size: 32, offset: 128)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4237, file: !4224, line: 179, baseType: !239, size: 32, offset: 160)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4237, file: !4224, line: 184, baseType: !4100, size: 64, offset: 192)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4237, file: !4224, line: 185, baseType: !4086, size: 64, offset: 256)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4237, file: !4224, line: 186, baseType: !4086, size: 64, offset: 320)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4237, file: !4224, line: 187, baseType: !4247, size: 64, offset: 384)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!516, !424, !562, !232, !532}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4237, file: !4224, line: 189, baseType: !4251, size: 64, offset: 448)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{!516, !424, !562, !624, !532}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4237, file: !4224, line: 191, baseType: !4255, size: 64, offset: 512)
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!239, !424, !562, !7, !230}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4237, file: !4224, line: 193, baseType: !4255, size: 64, offset: 576)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4237, file: !4224, line: 195, baseType: !4113, size: 64, offset: 640)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4237, file: !4224, line: 196, baseType: !4261, size: 64, offset: 704)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!3141, !424, !562, !3143}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4237, file: !4224, line: 198, baseType: !4100, size: 64, offset: 768)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4237, file: !4224, line: 203, baseType: !4266, size: 64, offset: 832)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{null, !424, !624, !485, !239}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4237, file: !4224, line: 205, baseType: !4086, size: 64, offset: 896)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4237, file: !4224, line: 206, baseType: !4271, size: 64, offset: 960)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{null, !424, !7}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4237, file: !4224, line: 207, baseType: !4275, size: 64, offset: 1024)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!239, !424, !624, !485, !239}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4237, file: !4224, line: 210, baseType: !829, size: 64, offset: 1088)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4237, file: !4224, line: 212, baseType: !239, size: 32, offset: 1152)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4233, file: !4224, line: 217, baseType: !424, size: 64, offset: 64)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !425, file: !348, line: 297, baseType: !404, size: 192, offset: 768)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !425, file: !348, line: 298, baseType: !404, size: 192, offset: 960)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !425, file: !348, line: 299, baseType: !404, size: 192, offset: 1152)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !425, file: !348, line: 300, baseType: !999, size: 256, offset: 1344)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !425, file: !348, line: 301, baseType: !404, size: 192, offset: 1600)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !425, file: !348, line: 302, baseType: !214, offset: 1792)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !425, file: !348, line: 303, baseType: !214, offset: 1792)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !425, file: !348, line: 305, baseType: !249, size: 352, offset: 1792)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !425, file: !348, line: 305, baseType: !249, size: 352, offset: 2144)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !425, file: !348, line: 306, baseType: !4156, size: 64, offset: 2496)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !425, file: !348, line: 307, baseType: !4292, size: 512, offset: 2560)
!4292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !449, size: 512, elements: !490)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !425, file: !348, line: 308, baseType: !1725, size: 64, offset: 3072)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !425, file: !348, line: 313, baseType: !1725, size: 64, offset: 3136)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !425, file: !348, line: 314, baseType: !230, size: 64, offset: 3200)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !425, file: !348, line: 315, baseType: !239, size: 32, offset: 3264)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !425, file: !348, line: 316, baseType: !4145, size: 64, offset: 3296)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !425, file: !348, line: 317, baseType: !230, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !425, file: !348, line: 318, baseType: !230, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !425, file: !348, line: 319, baseType: !230, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !425, file: !348, line: 320, baseType: !239, size: 32, offset: 3456)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !425, file: !348, line: 321, baseType: !230, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !425, file: !348, line: 322, baseType: !230, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !425, file: !348, line: 323, baseType: !230, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !425, file: !348, line: 324, baseType: !7, size: 32, offset: 3584)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !425, file: !348, line: 325, baseType: !239, size: 32, offset: 3616)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !425, file: !348, line: 327, baseType: !424, size: 64, offset: 3648)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !425, file: !348, line: 328, baseType: !3195, size: 64, offset: 3712)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !425, file: !348, line: 329, baseType: !1735, size: 128, offset: 3776)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !425, file: !348, line: 330, baseType: !1735, size: 128, offset: 3904)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !425, file: !348, line: 331, baseType: !377, size: 256, offset: 4032)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !425, file: !348, line: 332, baseType: !196, size: 64, offset: 4288)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !425, file: !348, line: 333, baseType: !196, size: 64, offset: 4352)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !425, file: !348, line: 334, baseType: !214, offset: 4416)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !425, file: !348, line: 335, baseType: !392, size: 128, offset: 4416)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !425, file: !348, line: 339, baseType: !239, size: 32, offset: 4544)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !425, file: !348, line: 340, baseType: !232, size: 64, offset: 4608)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !425, file: !348, line: 341, baseType: !239, size: 32, offset: 4672)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !425, file: !348, line: 343, baseType: !377, size: 256, offset: 4736)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !425, file: !348, line: 344, baseType: !4056, size: 64, offset: 4992)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !347, file: !348, line: 233, baseType: !424, size: 64, offset: 1088)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !347, file: !348, line: 234, baseType: !4323, size: 64, offset: 1152)
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4325)
!4325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !348, line: 205, size: 320, elements: !4326)
!4326 = !{!4327, !4331, !4335, !4339, !4343}
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4325, file: !348, line: 207, baseType: !4328, size: 64)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!239, !4056}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4325, file: !348, line: 209, baseType: !4332, size: 64, offset: 64)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{null, !4056, !239}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4325, file: !348, line: 213, baseType: !4336, size: 64, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{null, !4056}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4325, file: !348, line: 218, baseType: !4340, size: 64, offset: 192)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!239, !4056, !424}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4325, file: !348, line: 220, baseType: !4336, size: 64, offset: 256)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !347, file: !348, line: 235, baseType: !4345, size: 64, offset: 1216)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4347)
!4347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !348, line: 223, size: 128, elements: !4348)
!4348 = !{!4349, !4353}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4347, file: !348, line: 224, baseType: !4350, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{!239, !4056, !624, !624, !532}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4347, file: !348, line: 225, baseType: !4336, size: 64, offset: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !347, file: !348, line: 236, baseType: !214, offset: 1280)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !347, file: !348, line: 237, baseType: !239, size: 32, offset: 1280)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !347, file: !348, line: 238, baseType: !239, size: 32, offset: 1312)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !347, file: !348, line: 239, baseType: !1735, size: 128, offset: 1344)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !347, file: !348, line: 240, baseType: !1735, size: 128, offset: 1472)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !347, file: !348, line: 241, baseType: !230, size: 64, offset: 1600)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !347, file: !348, line: 242, baseType: !230, size: 64, offset: 1664)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !347, file: !348, line: 243, baseType: !233, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !347, file: !348, line: 244, baseType: !233, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !347, file: !348, line: 245, baseType: !404, size: 192, offset: 1792)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !347, file: !348, line: 246, baseType: !404, size: 192, offset: 1984)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !347, file: !348, line: 247, baseType: !232, size: 64, offset: 2176)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !347, file: !348, line: 248, baseType: !7, size: 32, offset: 2240)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !347, file: !348, line: 249, baseType: !7, size: 32, offset: 2272)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !347, file: !348, line: 250, baseType: !239, size: 32, offset: 2304)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !347, file: !348, line: 253, baseType: !429, size: 32, offset: 2336)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !347, file: !348, line: 254, baseType: !196, size: 64, offset: 2368)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "pm_state", scope: !344, file: !94, line: 289, baseType: !93, size: 32, offset: 2432)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "xmit", scope: !344, file: !94, line: 290, baseType: !4373, size: 128, offset: 2496)
!4373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "circ_buf", file: !4374, line: 9, size: 128, elements: !4375)
!4374 = !DIFile(filename: "./include/linux/circ_buf.h", directory: "/home/lizy2001/genbc/linux")
!4375 = !{!4376, !4377, !4378}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4373, file: !4374, line: 10, baseType: !485, size: 64)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4373, file: !4374, line: 11, baseType: !239, size: 32, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4373, file: !4374, line: 12, baseType: !239, size: 32, offset: 96)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !344, file: !94, line: 292, baseType: !411, size: 32, offset: 2624)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "remove_wait", scope: !344, file: !94, line: 293, baseType: !1735, size: 128, offset: 2688)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !344, file: !94, line: 294, baseType: !238, size: 64, offset: 2816)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !211, file: !94, line: 162, baseType: !4383, size: 352, offset: 1600)
!4383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_icount", file: !94, line: 89, size: 352, elements: !4384)
!4384 = !{!4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395}
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4383, file: !94, line: 90, baseType: !312, size: 32)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4383, file: !94, line: 91, baseType: !312, size: 32, offset: 32)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4383, file: !94, line: 92, baseType: !312, size: 32, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4383, file: !94, line: 93, baseType: !312, size: 32, offset: 96)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4383, file: !94, line: 94, baseType: !312, size: 32, offset: 128)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4383, file: !94, line: 95, baseType: !312, size: 32, offset: 160)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4383, file: !94, line: 96, baseType: !312, size: 32, offset: 192)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4383, file: !94, line: 97, baseType: !312, size: 32, offset: 224)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4383, file: !94, line: 98, baseType: !312, size: 32, offset: 256)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4383, file: !94, line: 99, baseType: !312, size: 32, offset: 288)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4383, file: !94, line: 100, baseType: !312, size: 32, offset: 320)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "cons", scope: !211, file: !94, line: 164, baseType: !4397, size: 64, offset: 1984)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "console", file: !4399, line: 141, size: 768, elements: !4400)
!4399 = !DIFile(filename: "./include/linux/console.h", directory: "/home/lizy2001/genbc/linux")
!4400 = !{!4401, !4402, !4406, !4410, !4414, !4416, !4420, !4424, !4428, !4429, !4430, !4431, !4432}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4398, file: !4399, line: 142, baseType: !1988, size: 128)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4398, file: !4399, line: 143, baseType: !4403, size: 64, offset: 128)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{null, !4397, !447, !7}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4398, file: !4399, line: 144, baseType: !4407, size: 64, offset: 192)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!239, !4397, !485, !7}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4398, file: !4399, line: 145, baseType: !4411, size: 64, offset: 256)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = !DISubroutineType(types: !4413)
!4413 = !{!4029, !4397, !904}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "unblank", scope: !4398, file: !4399, line: 146, baseType: !4415, size: 64, offset: 320)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4398, file: !4399, line: 147, baseType: !4417, size: 64, offset: 384)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!239, !4397, !485}
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !4398, file: !4399, line: 148, baseType: !4421, size: 64, offset: 448)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!239, !4397}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4398, file: !4399, line: 149, baseType: !4425, size: 64, offset: 512)
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!239, !4397, !485, !239, !485}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4398, file: !4399, line: 150, baseType: !1465, size: 16, offset: 576)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4398, file: !4399, line: 151, baseType: !1465, size: 16, offset: 592)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !4398, file: !4399, line: 152, baseType: !239, size: 32, offset: 608)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4398, file: !4399, line: 153, baseType: !196, size: 64, offset: 640)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4398, file: !4399, line: 154, baseType: !4397, size: 64, offset: 704)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !211, file: !94, line: 166, baseType: !198, size: 32, offset: 2048)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !211, file: !94, line: 223, baseType: !197, size: 32, offset: 2080)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !211, file: !94, line: 232, baseType: !239, size: 32, offset: 2112)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "mctrl", scope: !211, file: !94, line: 233, baseType: !7, size: 32, offset: 2144)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !211, file: !94, line: 234, baseType: !7, size: 32, offset: 2176)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !211, file: !94, line: 235, baseType: !7, size: 32, offset: 2208)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !211, file: !94, line: 236, baseType: !4440, size: 64, offset: 2240)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4442)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_ops", file: !94, line: 38, size: 1472, elements: !4443)
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4455, !4456, !4457, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4471, !4472, !4473, !4474, !4478}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "tx_empty", scope: !4442, file: !94, line: 39, baseType: !271, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "set_mctrl", scope: !4442, file: !94, line: 40, baseType: !275, size: 64, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "get_mctrl", scope: !4442, file: !94, line: 41, baseType: !271, size: 64, offset: 128)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "stop_tx", scope: !4442, file: !94, line: 42, baseType: !292, size: 64, offset: 192)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "start_tx", scope: !4442, file: !94, line: 43, baseType: !292, size: 64, offset: 256)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !4442, file: !94, line: 44, baseType: !292, size: 64, offset: 320)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !4442, file: !94, line: 45, baseType: !292, size: 64, offset: 384)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !4442, file: !94, line: 46, baseType: !4452, size: 64, offset: 448)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{null, !238, !449}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "stop_rx", scope: !4442, file: !94, line: 47, baseType: !292, size: 64, offset: 512)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "enable_ms", scope: !4442, file: !94, line: 48, baseType: !292, size: 64, offset: 576)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !4442, file: !94, line: 49, baseType: !4458, size: 64, offset: 640)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{null, !238, !239}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4442, file: !94, line: 50, baseType: !288, size: 64, offset: 704)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4442, file: !94, line: 51, baseType: !292, size: 64, offset: 768)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4442, file: !94, line: 52, baseType: !292, size: 64, offset: 832)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4442, file: !94, line: 53, baseType: !245, size: 64, offset: 896)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !4442, file: !94, line: 55, baseType: !267, size: 64, offset: 960)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4442, file: !94, line: 56, baseType: !299, size: 64, offset: 1024)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4442, file: !94, line: 62, baseType: !4468, size: 64, offset: 1088)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!447, !238}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "release_port", scope: !4442, file: !94, line: 68, baseType: !292, size: 64, offset: 1152)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "request_port", scope: !4442, file: !94, line: 74, baseType: !288, size: 64, offset: 1216)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "config_port", scope: !4442, file: !94, line: 75, baseType: !4458, size: 64, offset: 1280)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "verify_port", scope: !4442, file: !94, line: 76, baseType: !4475, size: 64, offset: 1344)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = !DISubroutineType(types: !4477)
!4477 = !{!239, !238, !4191}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4442, file: !94, line: 77, baseType: !4479, size: 64, offset: 1408)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!239, !238, !7, !230}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !211, file: !94, line: 237, baseType: !7, size: 32, offset: 2304)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !211, file: !94, line: 238, baseType: !7, size: 32, offset: 2336)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !211, file: !94, line: 239, baseType: !7, size: 32, offset: 2368)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "mapbase", scope: !211, file: !94, line: 240, baseType: !4486, size: 64, offset: 2432)
!4486 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !384, line: 158, baseType: !2366)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "mapsize", scope: !211, file: !94, line: 241, baseType: !4486, size: 64, offset: 2496)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !211, file: !94, line: 242, baseType: !439, size: 64, offset: 2560)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq", scope: !211, file: !94, line: 244, baseType: !230, size: 64, offset: 2624)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq_ch", scope: !211, file: !94, line: 245, baseType: !7, size: 32, offset: 2688)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "has_sysrq", scope: !211, file: !94, line: 246, baseType: !233, size: 8, offset: 2720)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "sysrq_seq", scope: !211, file: !94, line: 247, baseType: !233, size: 8, offset: 2728)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !211, file: !94, line: 249, baseType: !233, size: 8, offset: 2736)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !211, file: !94, line: 250, baseType: !233, size: 8, offset: 2744)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "console_reinit", scope: !211, file: !94, line: 251, baseType: !233, size: 8, offset: 2752)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !211, file: !94, line: 252, baseType: !447, size: 64, offset: 2816)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "attr_group", scope: !211, file: !94, line: 253, baseType: !4498, size: 64, offset: 2880)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "tty_groups", scope: !211, file: !94, line: 254, baseType: !538, size: 64, offset: 2944)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "rs485", scope: !211, file: !94, line: 255, baseType: !308, size: 256, offset: 3008)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_term_gpio", scope: !211, file: !94, line: 256, baseType: !4502, size: 64, offset: 3264)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4504, line: 19, flags: DIFlagFwdDecl)
!4504 = !DIFile(filename: "./include/linux/gpio/consumer.h", directory: "/home/lizy2001/genbc/linux")
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "iso7816", scope: !211, file: !94, line: 257, baseType: !324, size: 320, offset: 3328)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !211, file: !94, line: 258, baseType: !196, size: 64, offset: 3648)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !207, file: !208, line: 96, baseType: !3773, size: 320, offset: 3712)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !207, file: !208, line: 97, baseType: !392, size: 128, offset: 4032)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !207, file: !208, line: 98, baseType: !620, size: 32, offset: 4160)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "bugs", scope: !207, file: !208, line: 99, baseType: !527, size: 16, offset: 4192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_bug", scope: !207, file: !208, line: 100, baseType: !688, size: 8, offset: 4208)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "tx_loadsz", scope: !207, file: !208, line: 101, baseType: !7, size: 32, offset: 4224)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "acr", scope: !207, file: !208, line: 102, baseType: !233, size: 8, offset: 4256)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "fcr", scope: !207, file: !208, line: 103, baseType: !233, size: 8, offset: 4264)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "ier", scope: !207, file: !208, line: 104, baseType: !233, size: 8, offset: 4272)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "lcr", scope: !207, file: !208, line: 105, baseType: !233, size: 8, offset: 4280)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "mcr", scope: !207, file: !208, line: 106, baseType: !233, size: 8, offset: 4288)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "mcr_mask", scope: !207, file: !208, line: 107, baseType: !233, size: 8, offset: 4296)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "mcr_force", scope: !207, file: !208, line: 108, baseType: !233, size: 8, offset: 4304)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "cur_iotype", scope: !207, file: !208, line: 109, baseType: !233, size: 8, offset: 4312)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_tx_active", scope: !207, file: !208, line: 110, baseType: !7, size: 32, offset: 4320)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "canary", scope: !207, file: !208, line: 111, baseType: !233, size: 8, offset: 4352)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !207, file: !208, line: 114, baseType: !233, size: 8, offset: 4360)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "gpios", scope: !207, file: !208, line: 115, baseType: !4525, size: 64, offset: 4416)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DICompositeType(tag: DW_TAG_structure_type, name: "mctrl_gpios", file: !208, line: 115, flags: DIFlagFwdDecl)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "lsr_saved_flags", scope: !207, file: !208, line: 124, baseType: !233, size: 8, offset: 4480)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "msr_saved_flags", scope: !207, file: !208, line: 126, baseType: !233, size: 8, offset: 4488)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !207, file: !208, line: 128, baseType: !4530, size: 64, offset: 4544)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_8250_dma", file: !4532, line: 16, size: 1920, elements: !4533)
!4532 = !DIFile(filename: "drivers/tty/serial/8250/8250.h", directory: "/home/lizy2001/genbc/linux")
!4533 = !{!4534, !4538, !4539, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma", scope: !4531, file: !4532, line: 17, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!239, !206}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dma", scope: !4531, file: !4532, line: 18, baseType: !4535, size: 64, offset: 64)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4531, file: !4532, line: 21, baseType: !4540, size: 64, offset: 128)
!4540 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !100, line: 529, baseType: !4541)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!688, !4544, !196}
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !100, line: 329, size: 832, elements: !4546)
!4546 = !{!4547, !4801, !4802, !4803, !4804, !4805, !4812, !4813, !4814, !4820, !4821, !4822, !4831, !4832}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4545, file: !100, line: 330, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !100, line: 844, size: 3072, elements: !4550)
!4550 = !{!4551, !4552, !4553, !4554, !4555, !4556, !4569, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4601, !4605, !4670, !4675, !4680, !4684, !4688, !4692, !4705, !4709, !4713, !4717, !4741, !4745, !4763, !4781, !4782, !4783, !4784, !4785, !4796, !4797}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4549, file: !100, line: 845, baseType: !429, size: 32)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !4549, file: !100, line: 846, baseType: !7, size: 32, offset: 32)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !4549, file: !100, line: 847, baseType: !7, size: 32, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4549, file: !100, line: 848, baseType: !392, size: 128, offset: 128)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !4549, file: !100, line: 849, baseType: !392, size: 128, offset: 256)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4549, file: !100, line: 850, baseType: !4557, size: 192, offset: 384)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !100, line: 762, size: 192, elements: !4558)
!4558 = !{!4559, !4560, !4561}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4557, file: !100, line: 763, baseType: !4540, size: 64)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !4557, file: !100, line: 764, baseType: !239, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4557, file: !100, line: 765, baseType: !4562, size: 64, offset: 128)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4564)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !100, line: 749, size: 192, elements: !4565)
!4565 = !{!4566, !4567, !4568}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !4564, file: !100, line: 750, baseType: !447, size: 64)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4564, file: !100, line: 751, baseType: !447, size: 64, offset: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4564, file: !100, line: 752, baseType: !196, size: 64, offset: 128)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !4549, file: !100, line: 851, baseType: !4570, size: 64, offset: 576)
!4570 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !100, line: 230, baseType: !4571)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 230, size: 64, elements: !4572)
!4572 = !{!4573}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4571, file: !100, line: 230, baseType: !1624, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !4549, file: !100, line: 852, baseType: !99, size: 32, offset: 640)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !4549, file: !100, line: 853, baseType: !527, size: 16, offset: 672)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !4549, file: !100, line: 854, baseType: !527, size: 16, offset: 688)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !4549, file: !100, line: 855, baseType: !105, size: 32, offset: 704)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !4549, file: !100, line: 856, baseType: !105, size: 32, offset: 736)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !4549, file: !100, line: 857, baseType: !105, size: 32, offset: 768)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !4549, file: !100, line: 858, baseType: !105, size: 32, offset: 800)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4549, file: !100, line: 861, baseType: !239, size: 32, offset: 832)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4549, file: !100, line: 862, baseType: !439, size: 64, offset: 896)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4549, file: !100, line: 863, baseType: !829, size: 64, offset: 960)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !4549, file: !100, line: 864, baseType: !4585, size: 128, offset: 1024)
!4585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3494, line: 244, size: 128, elements: !4586)
!4586 = !{!4587}
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4585, file: !3494, line: 245, baseType: !974, size: 128)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !4549, file: !100, line: 865, baseType: !404, size: 192, offset: 1152)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4549, file: !100, line: 867, baseType: !620, size: 32, offset: 1344)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4549, file: !100, line: 868, baseType: !620, size: 32, offset: 1376)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4549, file: !100, line: 869, baseType: !620, size: 32, offset: 1408)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4549, file: !100, line: 870, baseType: !620, size: 32, offset: 1440)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4549, file: !100, line: 871, baseType: !620, size: 32, offset: 1472)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4549, file: !100, line: 872, baseType: !620, size: 32, offset: 1504)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4549, file: !100, line: 873, baseType: !688, size: 8, offset: 1536)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4549, file: !100, line: 874, baseType: !114, size: 32, offset: 1568)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !4549, file: !100, line: 876, baseType: !4598, size: 64, offset: 1600)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DISubroutineType(types: !4600)
!4600 = !{!239, !4544}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !4549, file: !100, line: 877, baseType: !4602, size: 64, offset: 1664)
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{null, !4544}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !4549, file: !100, line: 879, baseType: !4606, size: 64, offset: 1728)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4607, size: 64)
!4607 = !DISubroutineType(types: !4608)
!4608 = !{!4609, !4544, !1185, !1185, !532, !230}
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !100, line: 598, size: 704, elements: !4611)
!4611 = !{!4612, !4614, !4615, !4616, !4617, !4621, !4625, !4627, !4638, !4639, !4652, !4653}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4610, file: !100, line: 599, baseType: !4613, size: 32)
!4613 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !100, line: 22, baseType: !1698)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4610, file: !100, line: 600, baseType: !119, size: 32, offset: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4610, file: !100, line: 601, baseType: !1185, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4610, file: !100, line: 602, baseType: !4544, size: 64, offset: 128)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4610, file: !100, line: 603, baseType: !4618, size: 64, offset: 192)
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4619, size: 64)
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!4613, !4609}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4610, file: !100, line: 604, baseType: !4622, size: 64, offset: 256)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{!239, !4609}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4610, file: !100, line: 605, baseType: !4626, size: 64, offset: 320)
!4626 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !100, line: 531, baseType: !666)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4610, file: !100, line: 606, baseType: !4628, size: 64, offset: 384)
!4628 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !100, line: 545, baseType: !4629)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !196, !4632}
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4634)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !100, line: 540, size: 64, elements: !4635)
!4635 = !{!4636, !4637}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4634, file: !100, line: 541, baseType: !131, size: 32)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4634, file: !100, line: 542, baseType: !620, size: 32, offset: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4610, file: !100, line: 607, baseType: !196, size: 64, offset: 448)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4610, file: !100, line: 608, baseType: !4640, size: 64, offset: 512)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !100, line: 548, size: 256, elements: !4642)
!4642 = !{!4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4641, file: !100, line: 552, baseType: !1606, size: 8)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4641, file: !100, line: 554, baseType: !1606, size: 8, offset: 8)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4641, file: !100, line: 555, baseType: !1606, size: 8, offset: 16)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4641, file: !100, line: 556, baseType: !1606, size: 8, offset: 24)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4641, file: !100, line: 557, baseType: !439, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4641, file: !100, line: 558, baseType: !429, size: 32, offset: 128)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4641, file: !100, line: 559, baseType: !532, size: 64, offset: 192)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4641, file: !100, line: 560, baseType: !4651, offset: 256)
!4651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, elements: !374)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4610, file: !100, line: 609, baseType: !99, size: 32, offset: 576)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4610, file: !100, line: 610, baseType: !4654, size: 64, offset: 640)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !100, line: 565, size: 192, elements: !4656)
!4656 = !{!4657, !4661, !4666}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4655, file: !100, line: 566, baseType: !4658, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DISubroutineType(types: !4660)
!4660 = !{!239, !4609, !196, !532}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4655, file: !100, line: 569, baseType: !4662, size: 64, offset: 64)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 64)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!196, !4609, !4665, !4665}
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4655, file: !100, line: 571, baseType: !4667, size: 64, offset: 128)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!239, !4609, !532}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !4549, file: !100, line: 882, baseType: !4671, size: 64, offset: 1792)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!4609, !4544, !1185, !4674, !7, !532, !230}
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !4549, file: !100, line: 885, baseType: !4676, size: 64, offset: 1856)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{!4609, !4544, !4674, !7, !532, !4679, !230}
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !4549, file: !100, line: 888, baseType: !4681, size: 64, offset: 1920)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!4609, !4544, !4674, !4674, !7, !624, !532, !230}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !4549, file: !100, line: 892, baseType: !4685, size: 64, offset: 1984)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!4609, !4544, !4674, !4674, !7, !624, !532, !4679, !230}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !4549, file: !100, line: 896, baseType: !4689, size: 64, offset: 2048)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!4609, !4544, !1185, !239, !532, !230}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !4549, file: !100, line: 899, baseType: !4693, size: 64, offset: 2112)
!4693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4694, size: 64)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!4609, !4544, !4696, !7, !239, !230}
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4698, line: 11, size: 256, elements: !4699)
!4698 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4699 = !{!4700, !4701, !4702, !4703, !4704}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4697, file: !4698, line: 12, baseType: !230, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4697, file: !4698, line: 13, baseType: !7, size: 32, offset: 64)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4697, file: !4698, line: 14, baseType: !7, size: 32, offset: 96)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4697, file: !4698, line: 15, baseType: !1185, size: 64, offset: 128)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4697, file: !4698, line: 17, baseType: !7, size: 32, offset: 192)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !4549, file: !100, line: 902, baseType: !4706, size: 64, offset: 2176)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!4609, !4544, !230}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !4549, file: !100, line: 905, baseType: !4710, size: 64, offset: 2240)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!4609, !4544, !4696, !7, !141, !230, !196}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !4549, file: !100, line: 909, baseType: !4714, size: 64, offset: 2304)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!4609, !4544, !1185, !532, !532, !141, !230}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !4549, file: !100, line: 913, baseType: !4718, size: 64, offset: 2368)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!4609, !4544, !4721, !230}
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !100, line: 150, size: 320, elements: !4723)
!4723 = !{!4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733}
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !4722, file: !100, line: 151, baseType: !1185, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !4722, file: !100, line: 152, baseType: !1185, size: 64, offset: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4722, file: !100, line: 153, baseType: !141, size: 32, offset: 128)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !4722, file: !100, line: 154, baseType: !688, size: 8, offset: 160)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !4722, file: !100, line: 155, baseType: !688, size: 8, offset: 168)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !4722, file: !100, line: 156, baseType: !688, size: 8, offset: 176)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !4722, file: !100, line: 157, baseType: !688, size: 8, offset: 184)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !4722, file: !100, line: 158, baseType: !532, size: 64, offset: 192)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !4722, file: !100, line: 159, baseType: !532, size: 64, offset: 256)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4722, file: !100, line: 160, baseType: !4734, offset: 320)
!4734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4735, elements: !374)
!4735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !100, line: 125, size: 256, elements: !4736)
!4736 = !{!4737, !4738, !4739, !4740}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4735, file: !100, line: 126, baseType: !532, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !4735, file: !100, line: 127, baseType: !532, size: 64, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !4735, file: !100, line: 128, baseType: !532, size: 64, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !4735, file: !100, line: 129, baseType: !532, size: 64, offset: 192)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !4549, file: !100, line: 916, baseType: !4742, size: 64, offset: 2432)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{!4609, !4544, !1185, !201, !230}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !4549, file: !100, line: 920, baseType: !4746, size: 64, offset: 2496)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4747, size: 64)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{null, !4544, !4749}
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !100, line: 497, size: 288, elements: !4751)
!4751 = !{!4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4750, file: !100, line: 498, baseType: !620, size: 32)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4750, file: !100, line: 499, baseType: !620, size: 32, offset: 32)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4750, file: !100, line: 500, baseType: !620, size: 32, offset: 64)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4750, file: !100, line: 501, baseType: !620, size: 32, offset: 96)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4750, file: !100, line: 502, baseType: !620, size: 32, offset: 128)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4750, file: !100, line: 503, baseType: !620, size: 32, offset: 160)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !4750, file: !100, line: 504, baseType: !688, size: 8, offset: 192)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !4750, file: !100, line: 505, baseType: !688, size: 8, offset: 200)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !4750, file: !100, line: 506, baseType: !688, size: 8, offset: 208)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4750, file: !100, line: 507, baseType: !114, size: 32, offset: 224)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4750, file: !100, line: 508, baseType: !688, size: 8, offset: 256)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !4549, file: !100, line: 922, baseType: !4764, size: 64, offset: 2560)
!4764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 64)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!239, !4544, !4767}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !100, line: 434, size: 448, elements: !4769)
!4769 = !{!4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4768, file: !100, line: 435, baseType: !141, size: 32)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !4768, file: !100, line: 436, baseType: !2366, size: 64, offset: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !4768, file: !100, line: 437, baseType: !2366, size: 64, offset: 128)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !4768, file: !100, line: 438, baseType: !148, size: 32, offset: 192)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !4768, file: !100, line: 439, baseType: !148, size: 32, offset: 224)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !4768, file: !100, line: 440, baseType: !620, size: 32, offset: 256)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !4768, file: !100, line: 441, baseType: !620, size: 32, offset: 288)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !4768, file: !100, line: 442, baseType: !620, size: 32, offset: 320)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !4768, file: !100, line: 443, baseType: !620, size: 32, offset: 352)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !4768, file: !100, line: 444, baseType: !688, size: 8, offset: 384)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !4768, file: !100, line: 445, baseType: !7, size: 32, offset: 416)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !4549, file: !100, line: 924, baseType: !4598, size: 64, offset: 2624)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !4549, file: !100, line: 925, baseType: !4598, size: 64, offset: 2688)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !4549, file: !100, line: 926, baseType: !4598, size: 64, offset: 2752)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !4549, file: !100, line: 927, baseType: !4602, size: 64, offset: 2816)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !4549, file: !100, line: 929, baseType: !4786, size: 64, offset: 2880)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!159, !4544, !4613, !4789}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !100, line: 721, size: 128, elements: !4791)
!4791 = !{!4792, !4793, !4794, !4795}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4790, file: !100, line: 722, baseType: !4613, size: 32)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4790, file: !100, line: 723, baseType: !4613, size: 32, offset: 32)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4790, file: !100, line: 724, baseType: !620, size: 32, offset: 64)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !4790, file: !100, line: 725, baseType: !620, size: 32, offset: 96)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !4549, file: !100, line: 932, baseType: !4602, size: 64, offset: 2944)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !4549, file: !100, line: 933, baseType: !4798, size: 64, offset: 3008)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4799, size: 64)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{null, !4548}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4545, file: !100, line: 331, baseType: !439, size: 64, offset: 64)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4545, file: !100, line: 332, baseType: !4613, size: 32, offset: 128)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !4545, file: !100, line: 333, baseType: !4613, size: 32, offset: 160)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !4545, file: !100, line: 336, baseType: !239, size: 32, offset: 192)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4545, file: !100, line: 337, baseType: !4806, size: 64, offset: 256)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !100, line: 361, size: 5696, elements: !4808)
!4808 = !{!4809, !4810, !4811}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4807, file: !100, line: 362, baseType: !4544, size: 64)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4807, file: !100, line: 363, baseType: !440, size: 5568, offset: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4807, file: !100, line: 364, baseType: !239, size: 32, offset: 5632)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4545, file: !100, line: 338, baseType: !447, size: 64, offset: 320)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !4545, file: !100, line: 343, baseType: !392, size: 128, offset: 384)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4545, file: !100, line: 344, baseType: !4815, size: 64, offset: 512)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !100, line: 294, size: 128, elements: !4817)
!4817 = !{!4818, !4819}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !4816, file: !100, line: 296, baseType: !230, size: 64)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !4816, file: !100, line: 297, baseType: !230, size: 64, offset: 64)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !4545, file: !100, line: 345, baseType: !239, size: 32, offset: 576)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !4545, file: !100, line: 346, baseType: !239, size: 32, offset: 608)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !4545, file: !100, line: 349, baseType: !4823, size: 64, offset: 640)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !100, line: 305, size: 128, elements: !4825)
!4825 = !{!4826, !4827}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4824, file: !100, line: 306, baseType: !439, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !4824, file: !100, line: 307, baseType: !4828, size: 64, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{null, !439, !196}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !4545, file: !100, line: 350, baseType: !196, size: 64, offset: 704)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4545, file: !100, line: 352, baseType: !196, size: 64, offset: 768)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "rx_param", scope: !4531, file: !4532, line: 23, baseType: !196, size: 64, offset: 192)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "tx_param", scope: !4531, file: !4532, line: 24, baseType: !196, size: 64, offset: 256)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "rxconf", scope: !4531, file: !4532, line: 26, baseType: !4768, size: 448, offset: 320)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "txconf", scope: !4531, file: !4532, line: 27, baseType: !4768, size: 448, offset: 768)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "rxchan", scope: !4531, file: !4532, line: 29, baseType: !4544, size: 64, offset: 1216)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "txchan", scope: !4531, file: !4532, line: 30, baseType: !4544, size: 64, offset: 1280)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dma_addr", scope: !4531, file: !4532, line: 33, baseType: !2366, size: 64, offset: 1344)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma_addr", scope: !4531, file: !4532, line: 34, baseType: !2366, size: 64, offset: 1408)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_addr", scope: !4531, file: !4532, line: 37, baseType: !1185, size: 64, offset: 1472)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_addr", scope: !4531, file: !4532, line: 38, baseType: !1185, size: 64, offset: 1536)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_cookie", scope: !4531, file: !4532, line: 40, baseType: !4613, size: 32, offset: 1600)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_cookie", scope: !4531, file: !4532, line: 41, baseType: !4613, size: 32, offset: 1632)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf", scope: !4531, file: !4532, line: 43, baseType: !196, size: 64, offset: 1664)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "rx_size", scope: !4531, file: !4532, line: 45, baseType: !532, size: 64, offset: 1728)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "tx_size", scope: !4531, file: !4532, line: 46, baseType: !532, size: 64, offset: 1792)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_running", scope: !4531, file: !4532, line: 48, baseType: !233, size: 8, offset: 1856)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "tx_err", scope: !4531, file: !4532, line: 49, baseType: !233, size: 8, offset: 1864)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "rx_running", scope: !4531, file: !4532, line: 50, baseType: !233, size: 8, offset: 1872)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !207, file: !208, line: 129, baseType: !4852, size: 64, offset: 4608)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4854)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_8250_ops", file: !208, line: 74, size: 128, elements: !4855)
!4855 = !{!4856, !4857}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "setup_irq", scope: !4854, file: !208, line: 75, baseType: !4535, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "release_irq", scope: !4854, file: !208, line: 76, baseType: !4858, size: 64, offset: 64)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{null, !206}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "dl_read", scope: !207, file: !208, line: 132, baseType: !4535, size: 64, offset: 4672)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "dl_write", scope: !207, file: !208, line: 133, baseType: !4863, size: 64, offset: 4736)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !206, !239}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "em485", scope: !207, file: !208, line: 135, baseType: !4867, size: 64, offset: 4800)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_8250_em485", file: !208, line: 79, size: 1216, elements: !4869)
!4869 = !{!4870, !4871, !4872, !4873, !4874}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "start_tx_timer", scope: !4868, file: !208, line: 80, baseType: !1546, size: 512)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "stop_tx_timer", scope: !4868, file: !208, line: 81, baseType: !1546, size: 512, offset: 512)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "active_timer", scope: !4868, file: !208, line: 82, baseType: !1561, size: 64, offset: 1024)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4868, file: !208, line: 83, baseType: !206, size: 64, offset: 1088)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "tx_stopped", scope: !4868, file: !208, line: 84, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_start_tx", scope: !207, file: !208, line: 136, baseType: !4858, size: 64, offset: 4864)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "rs485_stop_tx", scope: !207, file: !208, line: 137, baseType: !4858, size: 64, offset: 4928)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "overrun_backoff", scope: !207, file: !208, line: 140, baseType: !4878, size: 704, offset: 4992)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !378, line: 115, size: 704, elements: !4879)
!4879 = !{!4880, !4881, !4882, !4883}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4878, file: !378, line: 116, baseType: !377, size: 256)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4878, file: !378, line: 117, baseType: !3773, size: 320, offset: 256)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4878, file: !378, line: 120, baseType: !3030, size: 64, offset: 576)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4878, file: !378, line: 121, baseType: !239, size: 32, offset: 640)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "overrun_backoff_time_ms", scope: !207, file: !208, line: 141, baseType: !620, size: 32, offset: 5696)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !233)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !527)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!4892 = !{!4893, !4896, !4898, !4903, !0, !4908, !4910, !4912, !4915}
!4893 = !DIGlobalVariableExpression(var: !4894, expr: !DIExpression())
!4894 = distinct !DIGlobalVariable(name: "_rs", scope: !4895, file: !3, line: 2230, type: !1956, isLocal: true, isDefinition: true)
!4895 = distinct !DISubprogram(name: "serial8250_do_startup", scope: !3, file: !3, line: 2147, type: !289, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!4896 = !DIGlobalVariableExpression(var: !4897, expr: !DIExpression())
!4897 = distinct !DIGlobalVariable(name: "_rs", scope: !4895, file: !3, line: 2398, type: !1956, isLocal: true, isDefinition: true)
!4898 = !DIGlobalVariableExpression(var: !4899, expr: !DIExpression())
!4899 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file244", scope: !2, file: !3, line: 3397, type: !4900, isLocal: true, isDefinition: true, align: 8)
!4900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 392, elements: !4901)
!4901 = !{!4902}
!4902 = !DISubrange(count: 49)
!4903 = !DIGlobalVariableExpression(var: !4904, expr: !DIExpression())
!4904 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license245", scope: !2, file: !3, line: 3397, type: !4905, isLocal: true, isDefinition: true, align: 8)
!4905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 176, elements: !4906)
!4906 = !{!4907}
!4907 = !DISubrange(count: 22)
!4908 = !DIGlobalVariableExpression(var: !4909, expr: !DIExpression())
!4909 = distinct !DIGlobalVariable(name: "serial8250_pops", scope: !2, file: !3, line: 3172, type: !4441, isLocal: true, isDefinition: true)
!4910 = !DIGlobalVariableExpression(var: !4911, expr: !DIExpression())
!4911 = distinct !DIGlobalVariable(name: "serial8250_dev_attr_group", scope: !2, file: !3, line: 3100, type: !541, isLocal: true, isDefinition: true)
!4912 = !DIGlobalVariableExpression(var: !4913, expr: !DIExpression())
!4913 = distinct !DIGlobalVariable(name: "serial8250_dev_attrs", scope: !2, file: !3, line: 3095, type: !4914, isLocal: true, isDefinition: true)
!4914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 128, elements: !1823)
!4915 = !DIGlobalVariableExpression(var: !4916, expr: !DIExpression())
!4916 = distinct !DIGlobalVariable(name: "dev_attr_rx_trig_bytes", scope: !2, file: !3, line: 3093, type: !4917, isLocal: true, isDefinition: true)
!4917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4918)
!4918 = !{!4919, !4920, !4925}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4917, file: !73, line: 100, baseType: !522, size: 128)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4917, file: !73, line: 101, baseType: !4921, size: 64, offset: 128)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!516, !439, !4924, !485}
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4917, size: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4917, file: !73, line: 103, baseType: !4926, size: 64, offset: 192)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{!516, !439, !4924, !447, !532}
!4929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4930, size: 23424, elements: !4940)
!4930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4931)
!4931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial8250_config", file: !4532, line: 64, size: 192, elements: !4932)
!4932 = !{!4933, !4934, !4935, !4936, !4937, !4939}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4931, file: !4532, line: 65, baseType: !447, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size", scope: !4931, file: !4532, line: 66, baseType: !527, size: 16, offset: 64)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "tx_loadsz", scope: !4931, file: !4532, line: 67, baseType: !527, size: 16, offset: 80)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "fcr", scope: !4931, file: !4532, line: 68, baseType: !233, size: 8, offset: 96)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "rxtrig_bytes", scope: !4931, file: !4532, line: 69, baseType: !4938, size: 32, offset: 104)
!4938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 32, elements: !1421)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4931, file: !4532, line: 70, baseType: !7, size: 32, offset: 160)
!4940 = !{!4941}
!4941 = !DISubrange(count: 122)
!4942 = !{!"rsp"}
!4943 = !{i32 7, !"Dwarf Version", i32 4}
!4944 = !{i32 2, !"Debug Info Version", i32 3}
!4945 = !{i32 1, !"wchar_size", i32 2}
!4946 = !{i32 1, !"Code Model", i32 2}
!4947 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4948 = distinct !DISubprogram(name: "serial8250_clear_and_reinit_fifos", scope: !3, file: !3, line: 564, type: !4859, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!4949 = !DILocalVariable(name: "p", arg: 1, scope: !4948, file: !3, line: 564, type: !206)
!4950 = !DILocation(line: 564, column: 63, scope: !4948)
!4951 = !DILocation(line: 566, column: 25, scope: !4948)
!4952 = !DILocation(line: 566, column: 2, scope: !4948)
!4953 = !DILocation(line: 567, column: 13, scope: !4948)
!4954 = !DILocation(line: 567, column: 26, scope: !4948)
!4955 = !DILocation(line: 567, column: 29, scope: !4948)
!4956 = !DILocation(line: 567, column: 2, scope: !4948)
!4957 = !DILocation(line: 568, column: 1, scope: !4948)
!4958 = distinct !DISubprogram(name: "serial8250_clear_fifos", scope: !3, file: !3, line: 551, type: !4859, scopeLine: 552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!4959 = !DILocalVariable(name: "p", arg: 1, scope: !4958, file: !3, line: 551, type: !206)
!4960 = !DILocation(line: 551, column: 59, scope: !4958)
!4961 = !DILocation(line: 553, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 553, column: 6)
!4963 = !DILocation(line: 553, column: 9, scope: !4962)
!4964 = !DILocation(line: 553, column: 22, scope: !4962)
!4965 = !DILocation(line: 553, column: 6, scope: !4958)
!4966 = !DILocation(line: 554, column: 14, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4962, file: !3, line: 553, column: 39)
!4968 = !DILocation(line: 554, column: 3, scope: !4967)
!4969 = !DILocation(line: 555, column: 14, scope: !4967)
!4970 = !DILocation(line: 555, column: 3, scope: !4967)
!4971 = !DILocation(line: 557, column: 14, scope: !4967)
!4972 = !DILocation(line: 557, column: 3, scope: !4967)
!4973 = !DILocation(line: 558, column: 2, scope: !4967)
!4974 = !DILocation(line: 559, column: 1, scope: !4958)
!4975 = distinct !DISubprogram(name: "serial_out", scope: !4532, file: !4532, line: 116, type: !4976, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!4976 = !DISubroutineType(types: !4977)
!4977 = !{null, !206, !239, !239}
!4978 = !DILocalVariable(name: "up", arg: 1, scope: !4975, file: !4532, line: 116, type: !206)
!4979 = !DILocation(line: 116, column: 54, scope: !4975)
!4980 = !DILocalVariable(name: "offset", arg: 2, scope: !4975, file: !4532, line: 116, type: !239)
!4981 = !DILocation(line: 116, column: 62, scope: !4975)
!4982 = !DILocalVariable(name: "value", arg: 3, scope: !4975, file: !4532, line: 116, type: !239)
!4983 = !DILocation(line: 116, column: 74, scope: !4975)
!4984 = !DILocation(line: 118, column: 2, scope: !4975)
!4985 = !DILocation(line: 118, column: 6, scope: !4975)
!4986 = !DILocation(line: 118, column: 11, scope: !4975)
!4987 = !DILocation(line: 118, column: 23, scope: !4975)
!4988 = !DILocation(line: 118, column: 27, scope: !4975)
!4989 = !DILocation(line: 118, column: 33, scope: !4975)
!4990 = !DILocation(line: 118, column: 41, scope: !4975)
!4991 = !DILocation(line: 119, column: 1, scope: !4975)
!4992 = distinct !DISubprogram(name: "serial8250_rpm_get", scope: !3, file: !3, line: 571, type: !4859, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!4993 = !DILocalVariable(name: "p", arg: 1, scope: !4992, file: !3, line: 571, type: !206)
!4994 = !DILocation(line: 571, column: 48, scope: !4992)
!4995 = !DILocation(line: 573, column: 8, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 573, column: 6)
!4997 = !DILocation(line: 573, column: 11, scope: !4996)
!4998 = !DILocation(line: 573, column: 24, scope: !4996)
!4999 = !DILocation(line: 573, column: 6, scope: !4992)
!5000 = !DILocation(line: 574, column: 3, scope: !4996)
!5001 = !DILocation(line: 575, column: 22, scope: !4992)
!5002 = !DILocation(line: 575, column: 25, scope: !4992)
!5003 = !DILocation(line: 575, column: 30, scope: !4992)
!5004 = !DILocation(line: 575, column: 2, scope: !4992)
!5005 = !DILocation(line: 576, column: 1, scope: !4992)
!5006 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !5007, file: !5007, line: 384, type: !3632, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5007 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!5008 = !DILocalVariable(name: "dev", arg: 1, scope: !5006, file: !5007, line: 384, type: !439)
!5009 = !DILocation(line: 384, column: 54, scope: !5006)
!5010 = !DILocation(line: 386, column: 29, scope: !5006)
!5011 = !DILocation(line: 386, column: 9, scope: !5006)
!5012 = !DILocation(line: 386, column: 2, scope: !5006)
!5013 = distinct !DISubprogram(name: "serial8250_rpm_put", scope: !3, file: !3, line: 579, type: !4859, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5014 = !DILocalVariable(name: "p", arg: 1, scope: !5013, file: !3, line: 579, type: !206)
!5015 = !DILocation(line: 579, column: 48, scope: !5013)
!5016 = !DILocation(line: 581, column: 8, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 581, column: 6)
!5018 = !DILocation(line: 581, column: 11, scope: !5017)
!5019 = !DILocation(line: 581, column: 24, scope: !5017)
!5020 = !DILocation(line: 581, column: 6, scope: !5013)
!5021 = !DILocation(line: 582, column: 3, scope: !5017)
!5022 = !DILocation(line: 583, column: 28, scope: !5013)
!5023 = !DILocation(line: 583, column: 31, scope: !5013)
!5024 = !DILocation(line: 583, column: 36, scope: !5013)
!5025 = !DILocation(line: 583, column: 2, scope: !5013)
!5026 = !DILocation(line: 584, column: 29, scope: !5013)
!5027 = !DILocation(line: 584, column: 32, scope: !5013)
!5028 = !DILocation(line: 584, column: 37, scope: !5013)
!5029 = !DILocation(line: 584, column: 2, scope: !5013)
!5030 = !DILocation(line: 585, column: 1, scope: !5013)
!5031 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !5007, file: !5007, line: 194, type: !3623, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5032 = !DILocalVariable(name: "dev", arg: 1, scope: !5031, file: !5007, line: 194, type: !439)
!5033 = !DILocation(line: 194, column: 61, scope: !5031)
!5034 = !DILocation(line: 196, column: 2, scope: !5031)
!5035 = !DILocation(line: 196, column: 2, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5031, file: !5007, line: 196, column: 2)
!5037 = !DILocation(line: 196, column: 2, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5036, file: !5007, line: 196, column: 2)
!5039 = !DILocation(line: 196, column: 2, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5036, file: !5007, line: 196, column: 2)
!5041 = !DILocation(line: 197, column: 1, scope: !5031)
!5042 = distinct !DISubprogram(name: "pm_runtime_put_autosuspend", scope: !5007, file: !5007, line: 429, type: !3632, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5043 = !DILocalVariable(name: "dev", arg: 1, scope: !5042, file: !5007, line: 429, type: !439)
!5044 = !DILocation(line: 429, column: 61, scope: !5042)
!5045 = !DILocation(line: 431, column: 30, scope: !5042)
!5046 = !DILocation(line: 431, column: 9, scope: !5042)
!5047 = !DILocation(line: 431, column: 2, scope: !5042)
!5048 = distinct !DISubprogram(name: "serial8250_em485_destroy", scope: !3, file: !3, line: 645, type: !4859, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5049 = !DILocalVariable(name: "p", arg: 1, scope: !5048, file: !3, line: 645, type: !206)
!5050 = !DILocation(line: 645, column: 54, scope: !5048)
!5051 = !DILocation(line: 647, column: 7, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 647, column: 6)
!5053 = !DILocation(line: 647, column: 10, scope: !5052)
!5054 = !DILocation(line: 647, column: 6, scope: !5048)
!5055 = !DILocation(line: 648, column: 3, scope: !5052)
!5056 = !DILocation(line: 650, column: 18, scope: !5048)
!5057 = !DILocation(line: 650, column: 21, scope: !5048)
!5058 = !DILocation(line: 650, column: 28, scope: !5048)
!5059 = !DILocation(line: 650, column: 2, scope: !5048)
!5060 = !DILocation(line: 651, column: 18, scope: !5048)
!5061 = !DILocation(line: 651, column: 21, scope: !5048)
!5062 = !DILocation(line: 651, column: 28, scope: !5048)
!5063 = !DILocation(line: 651, column: 2, scope: !5048)
!5064 = !DILocation(line: 653, column: 8, scope: !5048)
!5065 = !DILocation(line: 653, column: 11, scope: !5048)
!5066 = !DILocation(line: 653, column: 2, scope: !5048)
!5067 = !DILocation(line: 654, column: 2, scope: !5048)
!5068 = !DILocation(line: 654, column: 5, scope: !5048)
!5069 = !DILocation(line: 654, column: 11, scope: !5048)
!5070 = !DILocation(line: 655, column: 1, scope: !5048)
!5071 = distinct !DISubprogram(name: "serial8250_em485_config", scope: !3, file: !3, line: 667, type: !305, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5072 = !DILocalVariable(name: "port", arg: 1, scope: !5071, file: !3, line: 667, type: !238)
!5073 = !DILocation(line: 667, column: 47, scope: !5071)
!5074 = !DILocalVariable(name: "rs485", arg: 2, scope: !5071, file: !3, line: 667, type: !307)
!5075 = !DILocation(line: 667, column: 74, scope: !5071)
!5076 = !DILocalVariable(name: "up", scope: !5071, file: !3, line: 669, type: !206)
!5077 = !DILocation(line: 669, column: 25, scope: !5071)
!5078 = !DILocation(line: 669, column: 43, scope: !5071)
!5079 = !DILocation(line: 669, column: 30, scope: !5071)
!5080 = !DILocation(line: 672, column: 9, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 672, column: 6)
!5082 = !DILocation(line: 672, column: 16, scope: !5081)
!5083 = !DILocation(line: 672, column: 22, scope: !5081)
!5084 = !DILocation(line: 672, column: 7, scope: !5081)
!5085 = !DILocation(line: 672, column: 6, scope: !5081)
!5086 = !DILocation(line: 673, column: 9, scope: !5081)
!5087 = !DILocation(line: 673, column: 16, scope: !5081)
!5088 = !DILocation(line: 673, column: 22, scope: !5081)
!5089 = !DILocation(line: 673, column: 7, scope: !5081)
!5090 = !DILocation(line: 673, column: 6, scope: !5081)
!5091 = !DILocation(line: 672, column: 47, scope: !5081)
!5092 = !DILocation(line: 672, column: 6, scope: !5071)
!5093 = !DILocation(line: 674, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 673, column: 51)
!5095 = !DILocation(line: 674, column: 10, scope: !5094)
!5096 = !DILocation(line: 674, column: 16, scope: !5094)
!5097 = !DILocation(line: 675, column: 3, scope: !5094)
!5098 = !DILocation(line: 675, column: 10, scope: !5094)
!5099 = !DILocation(line: 675, column: 16, scope: !5094)
!5100 = !DILocation(line: 676, column: 2, scope: !5094)
!5101 = !DILocalVariable(name: "__UNIQUE_ID___x236", scope: !5102, file: !3, line: 679, type: !312)
!5102 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 679, column: 33)
!5103 = !DILocation(line: 679, column: 33, scope: !5102)
!5104 = !DILocalVariable(name: "__UNIQUE_ID___y237", scope: !5102, file: !3, line: 679, type: !7)
!5105 = !DILocation(line: 679, column: 2, scope: !5071)
!5106 = !DILocation(line: 679, column: 9, scope: !5071)
!5107 = !DILocation(line: 679, column: 31, scope: !5071)
!5108 = !DILocalVariable(name: "__UNIQUE_ID___x238", scope: !5109, file: !3, line: 680, type: !312)
!5109 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 680, column: 33)
!5110 = !DILocation(line: 680, column: 33, scope: !5109)
!5111 = !DILocalVariable(name: "__UNIQUE_ID___y239", scope: !5109, file: !3, line: 680, type: !7)
!5112 = !DILocation(line: 680, column: 2, scope: !5071)
!5113 = !DILocation(line: 680, column: 9, scope: !5071)
!5114 = !DILocation(line: 680, column: 31, scope: !5071)
!5115 = !DILocation(line: 682, column: 9, scope: !5071)
!5116 = !DILocation(line: 682, column: 16, scope: !5071)
!5117 = !DILocation(line: 682, column: 2, scope: !5071)
!5118 = !DILocation(line: 683, column: 2, scope: !5071)
!5119 = !DILocation(line: 683, column: 8, scope: !5071)
!5120 = !DILocation(line: 683, column: 17, scope: !5071)
!5121 = !DILocation(line: 683, column: 16, scope: !5071)
!5122 = !DILocation(line: 685, column: 18, scope: !5071)
!5123 = !DILocation(line: 685, column: 24, scope: !5071)
!5124 = !DILocation(line: 686, column: 4, scope: !5071)
!5125 = !DILocation(line: 686, column: 11, scope: !5071)
!5126 = !DILocation(line: 686, column: 17, scope: !5071)
!5127 = !DILocation(line: 685, column: 2, scope: !5071)
!5128 = !DILocation(line: 692, column: 6, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 692, column: 6)
!5130 = !DILocation(line: 692, column: 13, scope: !5129)
!5131 = !DILocation(line: 692, column: 19, scope: !5129)
!5132 = !DILocation(line: 692, column: 6, scope: !5071)
!5133 = !DILocalVariable(name: "ret", scope: !5134, file: !3, line: 693, type: !239)
!5134 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 692, column: 40)
!5135 = !DILocation(line: 693, column: 7, scope: !5134)
!5136 = !DILocation(line: 693, column: 35, scope: !5134)
!5137 = !DILocation(line: 693, column: 13, scope: !5134)
!5138 = !DILocation(line: 695, column: 7, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 695, column: 7)
!5140 = !DILocation(line: 695, column: 7, scope: !5134)
!5141 = !DILocation(line: 696, column: 4, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 695, column: 12)
!5143 = !DILocation(line: 696, column: 11, scope: !5142)
!5144 = !DILocation(line: 696, column: 17, scope: !5142)
!5145 = !DILocation(line: 697, column: 4, scope: !5142)
!5146 = !DILocation(line: 697, column: 10, scope: !5142)
!5147 = !DILocation(line: 697, column: 16, scope: !5142)
!5148 = !DILocation(line: 697, column: 22, scope: !5142)
!5149 = !DILocation(line: 698, column: 3, scope: !5142)
!5150 = !DILocation(line: 699, column: 10, scope: !5134)
!5151 = !DILocation(line: 699, column: 3, scope: !5134)
!5152 = !DILocation(line: 702, column: 27, scope: !5071)
!5153 = !DILocation(line: 702, column: 2, scope: !5071)
!5154 = !DILocation(line: 703, column: 2, scope: !5071)
!5155 = !DILocation(line: 704, column: 1, scope: !5071)
!5156 = distinct !DISubprogram(name: "up_to_u8250p", scope: !208, file: !208, line: 144, type: !5157, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5157 = !DISubroutineType(types: !5158)
!5158 = !{!206, !238}
!5159 = !DILocalVariable(name: "up", arg: 1, scope: !5156, file: !208, line: 144, type: !238)
!5160 = !DILocation(line: 144, column: 69, scope: !5156)
!5161 = !DILocalVariable(name: "__mptr", scope: !5162, file: !208, line: 146, type: !196)
!5162 = distinct !DILexicalBlock(scope: !5156, file: !208, line: 146, column: 9)
!5163 = !DILocation(line: 146, column: 9, scope: !5162)
!5164 = !DILocation(line: 146, column: 9, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5162, file: !208, line: 146, column: 9)
!5166 = !DILocation(line: 146, column: 2, scope: !5156)
!5167 = distinct !DISubprogram(name: "serial8250_em485_init", scope: !3, file: !3, line: 608, type: !4536, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5168 = !DILocalVariable(name: "s", arg: 1, scope: !5169, file: !189, line: 445, type: !1200)
!5169 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !189, file: !189, line: 445, type: !5170, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{!196, !1200, !979, !532}
!5172 = !DILocation(line: 445, column: 72, scope: !5169, inlinedAt: !5173)
!5173 = distinct !DILocation(line: 552, column: 10, scope: !5174, inlinedAt: !5179)
!5174 = distinct !DILexicalBlock(scope: !5175, file: !189, line: 540, column: 34)
!5175 = distinct !DILexicalBlock(scope: !5176, file: !189, line: 540, column: 6)
!5176 = distinct !DISubprogram(name: "kmalloc", scope: !189, file: !189, line: 538, type: !5177, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!196, !532, !979}
!5179 = distinct !DILocation(line: 613, column: 13, scope: !5167)
!5180 = !DILocalVariable(name: "flags", arg: 2, scope: !5169, file: !189, line: 446, type: !979)
!5181 = !DILocation(line: 446, column: 9, scope: !5169, inlinedAt: !5173)
!5182 = !DILocalVariable(name: "size", arg: 3, scope: !5169, file: !189, line: 446, type: !532)
!5183 = !DILocation(line: 446, column: 23, scope: !5169, inlinedAt: !5173)
!5184 = !DILocalVariable(name: "ret", scope: !5169, file: !189, line: 448, type: !196)
!5185 = !DILocation(line: 448, column: 8, scope: !5169, inlinedAt: !5173)
!5186 = !DILocalVariable(name: "flags", arg: 1, scope: !5187, file: !189, line: 318, type: !979)
!5187 = distinct !DISubprogram(name: "kmalloc_type", scope: !189, file: !189, line: 318, type: !5188, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{!188, !979}
!5190 = !DILocation(line: 318, column: 67, scope: !5187, inlinedAt: !5191)
!5191 = distinct !DILocation(line: 553, column: 20, scope: !5174, inlinedAt: !5179)
!5192 = !DILocalVariable(name: "size", arg: 1, scope: !5193, file: !189, line: 346, type: !532)
!5193 = distinct !DISubprogram(name: "kmalloc_index", scope: !189, file: !189, line: 346, type: !5194, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!7, !532}
!5196 = !DILocation(line: 346, column: 58, scope: !5193, inlinedAt: !5197)
!5197 = distinct !DILocation(line: 547, column: 11, scope: !5174, inlinedAt: !5179)
!5198 = !DILocalVariable(name: "size", arg: 1, scope: !5199, file: !189, line: 472, type: !532)
!5199 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !189, file: !189, line: 472, type: !5200, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5200 = !DISubroutineType(types: !5201)
!5201 = !{!196, !532, !979, !7}
!5202 = !DILocation(line: 472, column: 28, scope: !5199, inlinedAt: !5203)
!5203 = distinct !DILocation(line: 481, column: 9, scope: !5204, inlinedAt: !5205)
!5204 = distinct !DISubprogram(name: "kmalloc_large", scope: !189, file: !189, line: 478, type: !5177, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5205 = distinct !DILocation(line: 545, column: 11, scope: !5206, inlinedAt: !5179)
!5206 = distinct !DILexicalBlock(scope: !5174, file: !189, line: 544, column: 7)
!5207 = !DILocalVariable(name: "flags", arg: 2, scope: !5199, file: !189, line: 472, type: !979)
!5208 = !DILocation(line: 472, column: 40, scope: !5199, inlinedAt: !5203)
!5209 = !DILocalVariable(name: "order", arg: 3, scope: !5199, file: !189, line: 472, type: !7)
!5210 = !DILocation(line: 472, column: 60, scope: !5199, inlinedAt: !5203)
!5211 = !DILocalVariable(name: "size", arg: 1, scope: !5204, file: !189, line: 478, type: !532)
!5212 = !DILocation(line: 478, column: 51, scope: !5204, inlinedAt: !5205)
!5213 = !DILocalVariable(name: "flags", arg: 2, scope: !5204, file: !189, line: 478, type: !979)
!5214 = !DILocation(line: 478, column: 63, scope: !5204, inlinedAt: !5205)
!5215 = !DILocalVariable(name: "order", scope: !5204, file: !189, line: 480, type: !7)
!5216 = !DILocation(line: 480, column: 15, scope: !5204, inlinedAt: !5205)
!5217 = !DILocalVariable(name: "size", arg: 1, scope: !5176, file: !189, line: 538, type: !532)
!5218 = !DILocation(line: 538, column: 45, scope: !5176, inlinedAt: !5179)
!5219 = !DILocalVariable(name: "flags", arg: 2, scope: !5176, file: !189, line: 538, type: !979)
!5220 = !DILocation(line: 538, column: 57, scope: !5176, inlinedAt: !5179)
!5221 = !DILocalVariable(name: "index", scope: !5174, file: !189, line: 542, type: !7)
!5222 = !DILocation(line: 542, column: 16, scope: !5174, inlinedAt: !5179)
!5223 = !DILocalVariable(name: "p", arg: 1, scope: !5167, file: !3, line: 608, type: !206)
!5224 = !DILocation(line: 608, column: 57, scope: !5167)
!5225 = !DILocation(line: 610, column: 6, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 610, column: 6)
!5227 = !DILocation(line: 610, column: 9, scope: !5226)
!5228 = !DILocation(line: 610, column: 6, scope: !5167)
!5229 = !DILocation(line: 611, column: 3, scope: !5226)
!5230 = !DILocation(line: 540, column: 27, scope: !5175, inlinedAt: !5179)
!5231 = !DILocation(line: 540, column: 6, scope: !5175, inlinedAt: !5179)
!5232 = !DILocation(line: 540, column: 6, scope: !5176, inlinedAt: !5179)
!5233 = !DILocation(line: 544, column: 7, scope: !5206, inlinedAt: !5179)
!5234 = !DILocation(line: 544, column: 12, scope: !5206, inlinedAt: !5179)
!5235 = !DILocation(line: 544, column: 7, scope: !5174, inlinedAt: !5179)
!5236 = !DILocation(line: 545, column: 25, scope: !5206, inlinedAt: !5179)
!5237 = !DILocation(line: 545, column: 31, scope: !5206, inlinedAt: !5179)
!5238 = !DILocation(line: 480, column: 33, scope: !5204, inlinedAt: !5205)
!5239 = !DILocation(line: 480, column: 23, scope: !5204, inlinedAt: !5205)
!5240 = !DILocation(line: 481, column: 29, scope: !5204, inlinedAt: !5205)
!5241 = !DILocation(line: 481, column: 35, scope: !5204, inlinedAt: !5205)
!5242 = !DILocation(line: 481, column: 42, scope: !5204, inlinedAt: !5205)
!5243 = !DILocation(line: 474, column: 23, scope: !5199, inlinedAt: !5203)
!5244 = !DILocation(line: 474, column: 29, scope: !5199, inlinedAt: !5203)
!5245 = !DILocation(line: 474, column: 36, scope: !5199, inlinedAt: !5203)
!5246 = !DILocation(line: 474, column: 9, scope: !5199, inlinedAt: !5203)
!5247 = !DILocation(line: 545, column: 4, scope: !5206, inlinedAt: !5179)
!5248 = !DILocation(line: 547, column: 25, scope: !5174, inlinedAt: !5179)
!5249 = !DILocation(line: 348, column: 7, scope: !5250, inlinedAt: !5197)
!5250 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 348, column: 6)
!5251 = !DILocation(line: 348, column: 6, scope: !5193, inlinedAt: !5197)
!5252 = !DILocation(line: 349, column: 3, scope: !5250, inlinedAt: !5197)
!5253 = !DILocation(line: 351, column: 6, scope: !5254, inlinedAt: !5197)
!5254 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 351, column: 6)
!5255 = !DILocation(line: 351, column: 11, scope: !5254, inlinedAt: !5197)
!5256 = !DILocation(line: 351, column: 6, scope: !5193, inlinedAt: !5197)
!5257 = !DILocation(line: 352, column: 3, scope: !5254, inlinedAt: !5197)
!5258 = !DILocation(line: 354, column: 32, scope: !5259, inlinedAt: !5197)
!5259 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 354, column: 6)
!5260 = !DILocation(line: 354, column: 37, scope: !5259, inlinedAt: !5197)
!5261 = !DILocation(line: 354, column: 42, scope: !5259, inlinedAt: !5197)
!5262 = !DILocation(line: 354, column: 45, scope: !5259, inlinedAt: !5197)
!5263 = !DILocation(line: 354, column: 50, scope: !5259, inlinedAt: !5197)
!5264 = !DILocation(line: 354, column: 6, scope: !5193, inlinedAt: !5197)
!5265 = !DILocation(line: 355, column: 3, scope: !5259, inlinedAt: !5197)
!5266 = !DILocation(line: 356, column: 32, scope: !5267, inlinedAt: !5197)
!5267 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 356, column: 6)
!5268 = !DILocation(line: 356, column: 37, scope: !5267, inlinedAt: !5197)
!5269 = !DILocation(line: 356, column: 43, scope: !5267, inlinedAt: !5197)
!5270 = !DILocation(line: 356, column: 46, scope: !5267, inlinedAt: !5197)
!5271 = !DILocation(line: 356, column: 51, scope: !5267, inlinedAt: !5197)
!5272 = !DILocation(line: 356, column: 6, scope: !5193, inlinedAt: !5197)
!5273 = !DILocation(line: 357, column: 3, scope: !5267, inlinedAt: !5197)
!5274 = !DILocation(line: 358, column: 6, scope: !5275, inlinedAt: !5197)
!5275 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 358, column: 6)
!5276 = !DILocation(line: 358, column: 11, scope: !5275, inlinedAt: !5197)
!5277 = !DILocation(line: 358, column: 6, scope: !5193, inlinedAt: !5197)
!5278 = !DILocation(line: 358, column: 26, scope: !5275, inlinedAt: !5197)
!5279 = !DILocation(line: 359, column: 6, scope: !5280, inlinedAt: !5197)
!5280 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 359, column: 6)
!5281 = !DILocation(line: 359, column: 11, scope: !5280, inlinedAt: !5197)
!5282 = !DILocation(line: 359, column: 6, scope: !5193, inlinedAt: !5197)
!5283 = !DILocation(line: 359, column: 26, scope: !5280, inlinedAt: !5197)
!5284 = !DILocation(line: 360, column: 6, scope: !5285, inlinedAt: !5197)
!5285 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 360, column: 6)
!5286 = !DILocation(line: 360, column: 11, scope: !5285, inlinedAt: !5197)
!5287 = !DILocation(line: 360, column: 6, scope: !5193, inlinedAt: !5197)
!5288 = !DILocation(line: 360, column: 26, scope: !5285, inlinedAt: !5197)
!5289 = !DILocation(line: 361, column: 6, scope: !5290, inlinedAt: !5197)
!5290 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 361, column: 6)
!5291 = !DILocation(line: 361, column: 11, scope: !5290, inlinedAt: !5197)
!5292 = !DILocation(line: 361, column: 6, scope: !5193, inlinedAt: !5197)
!5293 = !DILocation(line: 361, column: 26, scope: !5290, inlinedAt: !5197)
!5294 = !DILocation(line: 362, column: 6, scope: !5295, inlinedAt: !5197)
!5295 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 362, column: 6)
!5296 = !DILocation(line: 362, column: 11, scope: !5295, inlinedAt: !5197)
!5297 = !DILocation(line: 362, column: 6, scope: !5193, inlinedAt: !5197)
!5298 = !DILocation(line: 362, column: 26, scope: !5295, inlinedAt: !5197)
!5299 = !DILocation(line: 363, column: 6, scope: !5300, inlinedAt: !5197)
!5300 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 363, column: 6)
!5301 = !DILocation(line: 363, column: 11, scope: !5300, inlinedAt: !5197)
!5302 = !DILocation(line: 363, column: 6, scope: !5193, inlinedAt: !5197)
!5303 = !DILocation(line: 363, column: 26, scope: !5300, inlinedAt: !5197)
!5304 = !DILocation(line: 364, column: 6, scope: !5305, inlinedAt: !5197)
!5305 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 364, column: 6)
!5306 = !DILocation(line: 364, column: 11, scope: !5305, inlinedAt: !5197)
!5307 = !DILocation(line: 364, column: 6, scope: !5193, inlinedAt: !5197)
!5308 = !DILocation(line: 364, column: 26, scope: !5305, inlinedAt: !5197)
!5309 = !DILocation(line: 365, column: 6, scope: !5310, inlinedAt: !5197)
!5310 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 365, column: 6)
!5311 = !DILocation(line: 365, column: 11, scope: !5310, inlinedAt: !5197)
!5312 = !DILocation(line: 365, column: 6, scope: !5193, inlinedAt: !5197)
!5313 = !DILocation(line: 365, column: 26, scope: !5310, inlinedAt: !5197)
!5314 = !DILocation(line: 366, column: 6, scope: !5315, inlinedAt: !5197)
!5315 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 366, column: 6)
!5316 = !DILocation(line: 366, column: 11, scope: !5315, inlinedAt: !5197)
!5317 = !DILocation(line: 366, column: 6, scope: !5193, inlinedAt: !5197)
!5318 = !DILocation(line: 366, column: 26, scope: !5315, inlinedAt: !5197)
!5319 = !DILocation(line: 367, column: 6, scope: !5320, inlinedAt: !5197)
!5320 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 367, column: 6)
!5321 = !DILocation(line: 367, column: 11, scope: !5320, inlinedAt: !5197)
!5322 = !DILocation(line: 367, column: 6, scope: !5193, inlinedAt: !5197)
!5323 = !DILocation(line: 367, column: 26, scope: !5320, inlinedAt: !5197)
!5324 = !DILocation(line: 368, column: 6, scope: !5325, inlinedAt: !5197)
!5325 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 368, column: 6)
!5326 = !DILocation(line: 368, column: 11, scope: !5325, inlinedAt: !5197)
!5327 = !DILocation(line: 368, column: 6, scope: !5193, inlinedAt: !5197)
!5328 = !DILocation(line: 368, column: 26, scope: !5325, inlinedAt: !5197)
!5329 = !DILocation(line: 369, column: 6, scope: !5330, inlinedAt: !5197)
!5330 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 369, column: 6)
!5331 = !DILocation(line: 369, column: 11, scope: !5330, inlinedAt: !5197)
!5332 = !DILocation(line: 369, column: 6, scope: !5193, inlinedAt: !5197)
!5333 = !DILocation(line: 369, column: 26, scope: !5330, inlinedAt: !5197)
!5334 = !DILocation(line: 370, column: 6, scope: !5335, inlinedAt: !5197)
!5335 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 370, column: 6)
!5336 = !DILocation(line: 370, column: 11, scope: !5335, inlinedAt: !5197)
!5337 = !DILocation(line: 370, column: 6, scope: !5193, inlinedAt: !5197)
!5338 = !DILocation(line: 370, column: 26, scope: !5335, inlinedAt: !5197)
!5339 = !DILocation(line: 371, column: 6, scope: !5340, inlinedAt: !5197)
!5340 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 371, column: 6)
!5341 = !DILocation(line: 371, column: 11, scope: !5340, inlinedAt: !5197)
!5342 = !DILocation(line: 371, column: 6, scope: !5193, inlinedAt: !5197)
!5343 = !DILocation(line: 371, column: 26, scope: !5340, inlinedAt: !5197)
!5344 = !DILocation(line: 372, column: 6, scope: !5345, inlinedAt: !5197)
!5345 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 372, column: 6)
!5346 = !DILocation(line: 372, column: 11, scope: !5345, inlinedAt: !5197)
!5347 = !DILocation(line: 372, column: 6, scope: !5193, inlinedAt: !5197)
!5348 = !DILocation(line: 372, column: 26, scope: !5345, inlinedAt: !5197)
!5349 = !DILocation(line: 373, column: 6, scope: !5350, inlinedAt: !5197)
!5350 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 373, column: 6)
!5351 = !DILocation(line: 373, column: 11, scope: !5350, inlinedAt: !5197)
!5352 = !DILocation(line: 373, column: 6, scope: !5193, inlinedAt: !5197)
!5353 = !DILocation(line: 373, column: 26, scope: !5350, inlinedAt: !5197)
!5354 = !DILocation(line: 374, column: 6, scope: !5355, inlinedAt: !5197)
!5355 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 374, column: 6)
!5356 = !DILocation(line: 374, column: 11, scope: !5355, inlinedAt: !5197)
!5357 = !DILocation(line: 374, column: 6, scope: !5193, inlinedAt: !5197)
!5358 = !DILocation(line: 374, column: 26, scope: !5355, inlinedAt: !5197)
!5359 = !DILocation(line: 375, column: 6, scope: !5360, inlinedAt: !5197)
!5360 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 375, column: 6)
!5361 = !DILocation(line: 375, column: 11, scope: !5360, inlinedAt: !5197)
!5362 = !DILocation(line: 375, column: 6, scope: !5193, inlinedAt: !5197)
!5363 = !DILocation(line: 375, column: 27, scope: !5360, inlinedAt: !5197)
!5364 = !DILocation(line: 376, column: 6, scope: !5365, inlinedAt: !5197)
!5365 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 376, column: 6)
!5366 = !DILocation(line: 376, column: 11, scope: !5365, inlinedAt: !5197)
!5367 = !DILocation(line: 376, column: 6, scope: !5193, inlinedAt: !5197)
!5368 = !DILocation(line: 376, column: 32, scope: !5365, inlinedAt: !5197)
!5369 = !DILocation(line: 377, column: 6, scope: !5370, inlinedAt: !5197)
!5370 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 377, column: 6)
!5371 = !DILocation(line: 377, column: 11, scope: !5370, inlinedAt: !5197)
!5372 = !DILocation(line: 377, column: 6, scope: !5193, inlinedAt: !5197)
!5373 = !DILocation(line: 377, column: 32, scope: !5370, inlinedAt: !5197)
!5374 = !DILocation(line: 378, column: 6, scope: !5375, inlinedAt: !5197)
!5375 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 378, column: 6)
!5376 = !DILocation(line: 378, column: 11, scope: !5375, inlinedAt: !5197)
!5377 = !DILocation(line: 378, column: 6, scope: !5193, inlinedAt: !5197)
!5378 = !DILocation(line: 378, column: 32, scope: !5375, inlinedAt: !5197)
!5379 = !DILocation(line: 379, column: 6, scope: !5380, inlinedAt: !5197)
!5380 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 379, column: 6)
!5381 = !DILocation(line: 379, column: 11, scope: !5380, inlinedAt: !5197)
!5382 = !DILocation(line: 379, column: 6, scope: !5193, inlinedAt: !5197)
!5383 = !DILocation(line: 379, column: 33, scope: !5380, inlinedAt: !5197)
!5384 = !DILocation(line: 380, column: 6, scope: !5385, inlinedAt: !5197)
!5385 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 380, column: 6)
!5386 = !DILocation(line: 380, column: 11, scope: !5385, inlinedAt: !5197)
!5387 = !DILocation(line: 380, column: 6, scope: !5193, inlinedAt: !5197)
!5388 = !DILocation(line: 380, column: 33, scope: !5385, inlinedAt: !5197)
!5389 = !DILocation(line: 381, column: 6, scope: !5390, inlinedAt: !5197)
!5390 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 381, column: 6)
!5391 = !DILocation(line: 381, column: 11, scope: !5390, inlinedAt: !5197)
!5392 = !DILocation(line: 381, column: 6, scope: !5193, inlinedAt: !5197)
!5393 = !DILocation(line: 381, column: 33, scope: !5390, inlinedAt: !5197)
!5394 = !DILocation(line: 382, column: 2, scope: !5395, inlinedAt: !5197)
!5395 = distinct !DILexicalBlock(scope: !5396, file: !189, line: 382, column: 2)
!5396 = distinct !DILexicalBlock(scope: !5193, file: !189, line: 382, column: 2)
!5397 = !{i32 -2142428387, i32 -2142428358, i32 -2142428312, i32 -2142428254, i32 -2142428200, i32 -2142428146, i32 -2142428091, i32 -2142428060}
!5398 = !DILocation(line: 382, column: 2, scope: !5399, inlinedAt: !5197)
!5399 = distinct !DILexicalBlock(scope: !5400, file: !189, line: 382, column: 2)
!5400 = distinct !DILexicalBlock(scope: !5396, file: !189, line: 382, column: 2)
!5401 = !{i32 -2142427617, i32 -2142427610, i32 -2142427556, i32 -2142427525, i32 -2142427495}
!5402 = !DILocation(line: 382, column: 2, scope: !5400, inlinedAt: !5197)
!5403 = !DILocation(line: 386, column: 1, scope: !5193, inlinedAt: !5197)
!5404 = !DILocation(line: 547, column: 9, scope: !5174, inlinedAt: !5179)
!5405 = !DILocation(line: 549, column: 8, scope: !5406, inlinedAt: !5179)
!5406 = distinct !DILexicalBlock(scope: !5174, file: !189, line: 549, column: 7)
!5407 = !DILocation(line: 549, column: 7, scope: !5174, inlinedAt: !5179)
!5408 = !DILocation(line: 550, column: 4, scope: !5406, inlinedAt: !5179)
!5409 = !DILocation(line: 553, column: 33, scope: !5174, inlinedAt: !5179)
!5410 = !DILocation(line: 325, column: 6, scope: !5411, inlinedAt: !5191)
!5411 = distinct !DILexicalBlock(scope: !5187, file: !189, line: 325, column: 6)
!5412 = !DILocation(line: 325, column: 6, scope: !5187, inlinedAt: !5191)
!5413 = !DILocation(line: 326, column: 3, scope: !5411, inlinedAt: !5191)
!5414 = !DILocation(line: 332, column: 9, scope: !5187, inlinedAt: !5191)
!5415 = !DILocation(line: 332, column: 15, scope: !5187, inlinedAt: !5191)
!5416 = !DILocation(line: 332, column: 2, scope: !5187, inlinedAt: !5191)
!5417 = !DILocation(line: 336, column: 1, scope: !5187, inlinedAt: !5191)
!5418 = !DILocation(line: 553, column: 5, scope: !5174, inlinedAt: !5179)
!5419 = !DILocation(line: 553, column: 41, scope: !5174, inlinedAt: !5179)
!5420 = !DILocation(line: 554, column: 5, scope: !5174, inlinedAt: !5179)
!5421 = !DILocation(line: 554, column: 12, scope: !5174, inlinedAt: !5179)
!5422 = !DILocation(line: 448, column: 31, scope: !5169, inlinedAt: !5173)
!5423 = !DILocation(line: 448, column: 34, scope: !5169, inlinedAt: !5173)
!5424 = !DILocation(line: 448, column: 14, scope: !5169, inlinedAt: !5173)
!5425 = !DILocation(line: 450, column: 22, scope: !5169, inlinedAt: !5173)
!5426 = !DILocation(line: 450, column: 25, scope: !5169, inlinedAt: !5173)
!5427 = !DILocation(line: 450, column: 30, scope: !5169, inlinedAt: !5173)
!5428 = !DILocation(line: 450, column: 36, scope: !5169, inlinedAt: !5173)
!5429 = !DILocation(line: 450, column: 8, scope: !5169, inlinedAt: !5173)
!5430 = !DILocation(line: 450, column: 6, scope: !5169, inlinedAt: !5173)
!5431 = !DILocation(line: 451, column: 9, scope: !5169, inlinedAt: !5173)
!5432 = !DILocation(line: 552, column: 3, scope: !5174, inlinedAt: !5179)
!5433 = !DILocation(line: 557, column: 19, scope: !5176, inlinedAt: !5179)
!5434 = !DILocation(line: 557, column: 25, scope: !5176, inlinedAt: !5179)
!5435 = !DILocation(line: 557, column: 9, scope: !5176, inlinedAt: !5179)
!5436 = !DILocation(line: 557, column: 2, scope: !5176, inlinedAt: !5179)
!5437 = !DILocation(line: 558, column: 1, scope: !5176, inlinedAt: !5179)
!5438 = !DILocation(line: 613, column: 13, scope: !5167)
!5439 = !DILocation(line: 613, column: 2, scope: !5167)
!5440 = !DILocation(line: 613, column: 5, scope: !5167)
!5441 = !DILocation(line: 613, column: 11, scope: !5167)
!5442 = !DILocation(line: 614, column: 7, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5167, file: !3, line: 614, column: 6)
!5444 = !DILocation(line: 614, column: 10, scope: !5443)
!5445 = !DILocation(line: 614, column: 6, scope: !5167)
!5446 = !DILocation(line: 615, column: 3, scope: !5443)
!5447 = !DILocation(line: 617, column: 16, scope: !5167)
!5448 = !DILocation(line: 617, column: 19, scope: !5167)
!5449 = !DILocation(line: 617, column: 26, scope: !5167)
!5450 = !DILocation(line: 617, column: 2, scope: !5167)
!5451 = !DILocation(line: 619, column: 16, scope: !5167)
!5452 = !DILocation(line: 619, column: 19, scope: !5167)
!5453 = !DILocation(line: 619, column: 26, scope: !5167)
!5454 = !DILocation(line: 619, column: 2, scope: !5167)
!5455 = !DILocation(line: 621, column: 2, scope: !5167)
!5456 = !DILocation(line: 621, column: 5, scope: !5167)
!5457 = !DILocation(line: 621, column: 12, scope: !5167)
!5458 = !DILocation(line: 621, column: 26, scope: !5167)
!5459 = !DILocation(line: 621, column: 35, scope: !5167)
!5460 = !DILocation(line: 622, column: 2, scope: !5167)
!5461 = !DILocation(line: 622, column: 5, scope: !5167)
!5462 = !DILocation(line: 622, column: 12, scope: !5167)
!5463 = !DILocation(line: 622, column: 27, scope: !5167)
!5464 = !DILocation(line: 622, column: 36, scope: !5167)
!5465 = !DILocation(line: 623, column: 19, scope: !5167)
!5466 = !DILocation(line: 623, column: 2, scope: !5167)
!5467 = !DILocation(line: 623, column: 5, scope: !5167)
!5468 = !DILocation(line: 623, column: 12, scope: !5167)
!5469 = !DILocation(line: 623, column: 17, scope: !5167)
!5470 = !DILocation(line: 624, column: 2, scope: !5167)
!5471 = !DILocation(line: 624, column: 5, scope: !5167)
!5472 = !DILocation(line: 624, column: 12, scope: !5167)
!5473 = !DILocation(line: 624, column: 25, scope: !5167)
!5474 = !DILocation(line: 625, column: 2, scope: !5167)
!5475 = !DILocation(line: 625, column: 5, scope: !5167)
!5476 = !DILocation(line: 625, column: 12, scope: !5167)
!5477 = !DILocation(line: 625, column: 23, scope: !5167)
!5478 = !DILocation(line: 627, column: 2, scope: !5167)
!5479 = !DILocation(line: 627, column: 5, scope: !5167)
!5480 = !DILocation(line: 627, column: 19, scope: !5167)
!5481 = !DILocation(line: 629, column: 2, scope: !5167)
!5482 = !DILocation(line: 630, column: 1, scope: !5167)
!5483 = distinct !DISubprogram(name: "serial8250_rpm_get_tx", scope: !3, file: !3, line: 712, type: !4859, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5484 = !DILocalVariable(name: "v", arg: 1, scope: !5485, file: !5486, line: 84, type: !5489)
!5485 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5486, file: !5486, line: 84, type: !5487, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5486 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5487 = !DISubroutineType(types: !5488)
!5488 = !{null, !5489, !532}
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5490, size: 64)
!5490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5491)
!5491 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5492 = !DILocation(line: 84, column: 74, scope: !5485, inlinedAt: !5493)
!5493 = distinct !DILocation(line: 719, column: 15, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 719, column: 15)
!5495 = !DILocalVariable(name: "size", arg: 2, scope: !5485, file: !5486, line: 84, type: !532)
!5496 = !DILocation(line: 84, column: 84, scope: !5485, inlinedAt: !5493)
!5497 = !DILocalVariable(name: "p", arg: 1, scope: !5483, file: !3, line: 712, type: !206)
!5498 = !DILocation(line: 712, column: 51, scope: !5483)
!5499 = !DILocalVariable(name: "rpm_active", scope: !5483, file: !3, line: 714, type: !233)
!5500 = !DILocation(line: 714, column: 16, scope: !5483)
!5501 = !DILocation(line: 716, column: 8, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 716, column: 6)
!5503 = !DILocation(line: 716, column: 11, scope: !5502)
!5504 = !DILocation(line: 716, column: 24, scope: !5502)
!5505 = !DILocation(line: 716, column: 6, scope: !5483)
!5506 = !DILocation(line: 717, column: 3, scope: !5502)
!5507 = !DILocalVariable(name: "__ai_ptr", scope: !5494, file: !3, line: 719, type: !282)
!5508 = !DILocation(line: 719, column: 15, scope: !5494)
!5509 = !DILocation(line: 86, column: 20, scope: !5485, inlinedAt: !5493)
!5510 = !DILocation(line: 86, column: 23, scope: !5485, inlinedAt: !5493)
!5511 = !DILocation(line: 86, column: 2, scope: !5485, inlinedAt: !5493)
!5512 = !DILocation(line: 87, column: 2, scope: !5485, inlinedAt: !5493)
!5513 = !DILocalVariable(name: "__ret", scope: !5514, file: !3, line: 719, type: !7)
!5514 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 719, column: 15)
!5515 = !DILocation(line: 719, column: 15, scope: !5514)
!5516 = !{i32 -2141658540}
!5517 = !DILocation(line: 719, column: 15, scope: !5483)
!5518 = !DILocation(line: 719, column: 13, scope: !5483)
!5519 = !DILocation(line: 720, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 720, column: 6)
!5521 = !DILocation(line: 720, column: 6, scope: !5483)
!5522 = !DILocation(line: 721, column: 3, scope: !5520)
!5523 = !DILocation(line: 722, column: 22, scope: !5483)
!5524 = !DILocation(line: 722, column: 25, scope: !5483)
!5525 = !DILocation(line: 722, column: 30, scope: !5483)
!5526 = !DILocation(line: 722, column: 2, scope: !5483)
!5527 = !DILocation(line: 723, column: 1, scope: !5483)
!5528 = distinct !DISubprogram(name: "serial8250_rpm_put_tx", scope: !3, file: !3, line: 726, type: !4859, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5529 = !DILocation(line: 84, column: 74, scope: !5485, inlinedAt: !5530)
!5530 = distinct !DILocation(line: 733, column: 15, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 733, column: 15)
!5532 = !DILocation(line: 84, column: 84, scope: !5485, inlinedAt: !5530)
!5533 = !DILocalVariable(name: "p", arg: 1, scope: !5528, file: !3, line: 726, type: !206)
!5534 = !DILocation(line: 726, column: 51, scope: !5528)
!5535 = !DILocalVariable(name: "rpm_active", scope: !5528, file: !3, line: 728, type: !233)
!5536 = !DILocation(line: 728, column: 16, scope: !5528)
!5537 = !DILocation(line: 730, column: 8, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 730, column: 6)
!5539 = !DILocation(line: 730, column: 11, scope: !5538)
!5540 = !DILocation(line: 730, column: 24, scope: !5538)
!5541 = !DILocation(line: 730, column: 6, scope: !5528)
!5542 = !DILocation(line: 731, column: 3, scope: !5538)
!5543 = !DILocalVariable(name: "__ai_ptr", scope: !5531, file: !3, line: 733, type: !282)
!5544 = !DILocation(line: 733, column: 15, scope: !5531)
!5545 = !DILocation(line: 86, column: 20, scope: !5485, inlinedAt: !5530)
!5546 = !DILocation(line: 86, column: 23, scope: !5485, inlinedAt: !5530)
!5547 = !DILocation(line: 86, column: 2, scope: !5485, inlinedAt: !5530)
!5548 = !DILocation(line: 87, column: 2, scope: !5485, inlinedAt: !5530)
!5549 = !DILocalVariable(name: "__ret", scope: !5550, file: !3, line: 733, type: !7)
!5550 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 733, column: 15)
!5551 = !DILocation(line: 733, column: 15, scope: !5550)
!5552 = !{i32 -2141657203}
!5553 = !DILocation(line: 733, column: 15, scope: !5528)
!5554 = !DILocation(line: 733, column: 13, scope: !5528)
!5555 = !DILocation(line: 734, column: 7, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5528, file: !3, line: 734, column: 6)
!5557 = !DILocation(line: 734, column: 6, scope: !5528)
!5558 = !DILocation(line: 735, column: 3, scope: !5556)
!5559 = !DILocation(line: 736, column: 28, scope: !5528)
!5560 = !DILocation(line: 736, column: 31, scope: !5528)
!5561 = !DILocation(line: 736, column: 36, scope: !5528)
!5562 = !DILocation(line: 736, column: 2, scope: !5528)
!5563 = !DILocation(line: 737, column: 29, scope: !5528)
!5564 = !DILocation(line: 737, column: 32, scope: !5528)
!5565 = !DILocation(line: 737, column: 37, scope: !5528)
!5566 = !DILocation(line: 737, column: 2, scope: !5528)
!5567 = !DILocation(line: 738, column: 1, scope: !5528)
!5568 = distinct !DISubprogram(name: "serial8250_em485_stop_tx", scope: !3, file: !3, line: 1443, type: !4859, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5569 = !DILocalVariable(name: "p", arg: 1, scope: !5568, file: !3, line: 1443, type: !206)
!5570 = !DILocation(line: 1443, column: 54, scope: !5568)
!5571 = !DILocalVariable(name: "mcr", scope: !5568, file: !3, line: 1445, type: !233)
!5572 = !DILocation(line: 1445, column: 16, scope: !5568)
!5573 = !DILocation(line: 1445, column: 40, scope: !5568)
!5574 = !DILocation(line: 1445, column: 22, scope: !5568)
!5575 = !DILocation(line: 1447, column: 6, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1447, column: 6)
!5577 = !DILocation(line: 1447, column: 9, scope: !5576)
!5578 = !DILocation(line: 1447, column: 14, scope: !5576)
!5579 = !DILocation(line: 1447, column: 20, scope: !5576)
!5580 = !DILocation(line: 1447, column: 26, scope: !5576)
!5581 = !DILocation(line: 1447, column: 6, scope: !5568)
!5582 = !DILocation(line: 1448, column: 7, scope: !5576)
!5583 = !DILocation(line: 1448, column: 3, scope: !5576)
!5584 = !DILocation(line: 1450, column: 7, scope: !5576)
!5585 = !DILocation(line: 1451, column: 21, scope: !5568)
!5586 = !DILocation(line: 1451, column: 24, scope: !5568)
!5587 = !DILocation(line: 1451, column: 2, scope: !5568)
!5588 = !DILocation(line: 1458, column: 8, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1458, column: 6)
!5590 = !DILocation(line: 1458, column: 11, scope: !5589)
!5591 = !DILocation(line: 1458, column: 16, scope: !5589)
!5592 = !DILocation(line: 1458, column: 22, scope: !5589)
!5593 = !DILocation(line: 1458, column: 28, scope: !5589)
!5594 = !DILocation(line: 1458, column: 6, scope: !5568)
!5595 = !DILocation(line: 1459, column: 37, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5589, file: !3, line: 1458, column: 55)
!5597 = !DILocation(line: 1459, column: 3, scope: !5596)
!5598 = !DILocation(line: 1461, column: 3, scope: !5596)
!5599 = !DILocation(line: 1461, column: 6, scope: !5596)
!5600 = !DILocation(line: 1461, column: 10, scope: !5596)
!5601 = !DILocation(line: 1462, column: 20, scope: !5596)
!5602 = !DILocation(line: 1462, column: 23, scope: !5596)
!5603 = !DILocation(line: 1462, column: 39, scope: !5596)
!5604 = !DILocation(line: 1462, column: 42, scope: !5596)
!5605 = !DILocation(line: 1462, column: 3, scope: !5596)
!5606 = !DILocation(line: 1463, column: 2, scope: !5596)
!5607 = !DILocation(line: 1464, column: 1, scope: !5568)
!5608 = distinct !DISubprogram(name: "serial8250_in_MCR", scope: !4532, file: !4532, line: 226, type: !4536, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5609 = !DILocalVariable(name: "up", arg: 1, scope: !5608, file: !4532, line: 226, type: !206)
!5610 = !DILocation(line: 226, column: 60, scope: !5608)
!5611 = !DILocalVariable(name: "mctrl", scope: !5608, file: !4532, line: 228, type: !239)
!5612 = !DILocation(line: 228, column: 6, scope: !5608)
!5613 = !DILocation(line: 230, column: 20, scope: !5608)
!5614 = !DILocation(line: 230, column: 10, scope: !5608)
!5615 = !DILocation(line: 230, column: 8, scope: !5608)
!5616 = !DILocation(line: 232, column: 6, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5608, file: !4532, line: 232, column: 6)
!5618 = !DILocation(line: 232, column: 10, scope: !5617)
!5619 = !DILocation(line: 232, column: 6, scope: !5608)
!5620 = !DILocalVariable(name: "mctrl_gpio", scope: !5621, file: !4532, line: 233, type: !7)
!5621 = distinct !DILexicalBlock(scope: !5617, file: !4532, line: 232, column: 17)
!5622 = !DILocation(line: 233, column: 16, scope: !5621)
!5623 = !DILocation(line: 235, column: 39, scope: !5621)
!5624 = !DILocation(line: 235, column: 43, scope: !5621)
!5625 = !DILocation(line: 235, column: 16, scope: !5621)
!5626 = !DILocation(line: 235, column: 14, scope: !5621)
!5627 = !DILocation(line: 236, column: 36, scope: !5621)
!5628 = !DILocation(line: 236, column: 12, scope: !5621)
!5629 = !DILocation(line: 236, column: 9, scope: !5621)
!5630 = !DILocation(line: 237, column: 2, scope: !5621)
!5631 = !DILocation(line: 239, column: 9, scope: !5608)
!5632 = !DILocation(line: 239, column: 2, scope: !5608)
!5633 = distinct !DISubprogram(name: "serial8250_out_MCR", scope: !4532, file: !4532, line: 218, type: !4864, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5634 = !DILocalVariable(name: "up", arg: 1, scope: !5633, file: !4532, line: 218, type: !206)
!5635 = !DILocation(line: 218, column: 62, scope: !5633)
!5636 = !DILocalVariable(name: "value", arg: 2, scope: !5633, file: !4532, line: 218, type: !239)
!5637 = !DILocation(line: 218, column: 70, scope: !5633)
!5638 = !DILocation(line: 220, column: 13, scope: !5633)
!5639 = !DILocation(line: 220, column: 27, scope: !5633)
!5640 = !DILocation(line: 220, column: 2, scope: !5633)
!5641 = !DILocation(line: 222, column: 6, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5633, file: !4532, line: 222, column: 6)
!5643 = !DILocation(line: 222, column: 10, scope: !5642)
!5644 = !DILocation(line: 222, column: 6, scope: !5633)
!5645 = !DILocation(line: 223, column: 18, scope: !5642)
!5646 = !DILocation(line: 223, column: 22, scope: !5642)
!5647 = !DILocation(line: 223, column: 53, scope: !5642)
!5648 = !DILocation(line: 223, column: 29, scope: !5642)
!5649 = !DILocation(line: 223, column: 3, scope: !5642)
!5650 = !DILocation(line: 224, column: 1, scope: !5633)
!5651 = distinct !DISubprogram(name: "serial_port_out", scope: !94, file: !94, line: 266, type: !242, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5652 = !DILocalVariable(name: "up", arg: 1, scope: !5651, file: !94, line: 266, type: !238)
!5653 = !DILocation(line: 266, column: 54, scope: !5651)
!5654 = !DILocalVariable(name: "offset", arg: 2, scope: !5651, file: !94, line: 266, type: !239)
!5655 = !DILocation(line: 266, column: 62, scope: !5651)
!5656 = !DILocalVariable(name: "value", arg: 3, scope: !5651, file: !94, line: 266, type: !239)
!5657 = !DILocation(line: 266, column: 74, scope: !5651)
!5658 = !DILocation(line: 268, column: 2, scope: !5651)
!5659 = !DILocation(line: 268, column: 6, scope: !5651)
!5660 = !DILocation(line: 268, column: 17, scope: !5651)
!5661 = !DILocation(line: 268, column: 21, scope: !5651)
!5662 = !DILocation(line: 268, column: 29, scope: !5651)
!5663 = !DILocation(line: 269, column: 1, scope: !5651)
!5664 = distinct !DISubprogram(name: "serial8250_em485_start_tx", scope: !3, file: !3, line: 1596, type: !4859, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5665 = !DILocalVariable(name: "up", arg: 1, scope: !5664, file: !3, line: 1596, type: !206)
!5666 = !DILocation(line: 1596, column: 55, scope: !5664)
!5667 = !DILocalVariable(name: "mcr", scope: !5664, file: !3, line: 1598, type: !233)
!5668 = !DILocation(line: 1598, column: 16, scope: !5664)
!5669 = !DILocation(line: 1598, column: 40, scope: !5664)
!5670 = !DILocation(line: 1598, column: 22, scope: !5664)
!5671 = !DILocation(line: 1600, column: 8, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1600, column: 6)
!5673 = !DILocation(line: 1600, column: 12, scope: !5672)
!5674 = !DILocation(line: 1600, column: 17, scope: !5672)
!5675 = !DILocation(line: 1600, column: 23, scope: !5672)
!5676 = !DILocation(line: 1600, column: 29, scope: !5672)
!5677 = !DILocation(line: 1600, column: 6, scope: !5664)
!5678 = !DILocation(line: 1601, column: 23, scope: !5672)
!5679 = !DILocation(line: 1601, column: 27, scope: !5672)
!5680 = !DILocation(line: 1601, column: 3, scope: !5672)
!5681 = !DILocation(line: 1603, column: 6, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1603, column: 6)
!5683 = !DILocation(line: 1603, column: 10, scope: !5682)
!5684 = !DILocation(line: 1603, column: 15, scope: !5682)
!5685 = !DILocation(line: 1603, column: 21, scope: !5682)
!5686 = !DILocation(line: 1603, column: 27, scope: !5682)
!5687 = !DILocation(line: 1603, column: 6, scope: !5664)
!5688 = !DILocation(line: 1604, column: 7, scope: !5682)
!5689 = !DILocation(line: 1604, column: 3, scope: !5682)
!5690 = !DILocation(line: 1606, column: 7, scope: !5682)
!5691 = !DILocation(line: 1607, column: 21, scope: !5664)
!5692 = !DILocation(line: 1607, column: 25, scope: !5664)
!5693 = !DILocation(line: 1607, column: 2, scope: !5664)
!5694 = !DILocation(line: 1608, column: 1, scope: !5664)
!5695 = distinct !DISubprogram(name: "serial8250_stop_rx", scope: !3, file: !3, line: 1424, type: !293, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5696 = !DILocalVariable(name: "port", arg: 1, scope: !5695, file: !3, line: 1424, type: !238)
!5697 = !DILocation(line: 1424, column: 50, scope: !5695)
!5698 = !DILocalVariable(name: "up", scope: !5695, file: !3, line: 1426, type: !206)
!5699 = !DILocation(line: 1426, column: 25, scope: !5695)
!5700 = !DILocation(line: 1426, column: 43, scope: !5695)
!5701 = !DILocation(line: 1426, column: 30, scope: !5695)
!5702 = !DILocation(line: 1428, column: 21, scope: !5695)
!5703 = !DILocation(line: 1428, column: 2, scope: !5695)
!5704 = !DILocation(line: 1430, column: 2, scope: !5695)
!5705 = !DILocation(line: 1430, column: 6, scope: !5695)
!5706 = !DILocation(line: 1430, column: 10, scope: !5695)
!5707 = !DILocation(line: 1431, column: 2, scope: !5695)
!5708 = !DILocation(line: 1431, column: 6, scope: !5695)
!5709 = !DILocation(line: 1431, column: 11, scope: !5695)
!5710 = !DILocation(line: 1431, column: 28, scope: !5695)
!5711 = !DILocation(line: 1432, column: 18, scope: !5695)
!5712 = !DILocation(line: 1432, column: 34, scope: !5695)
!5713 = !DILocation(line: 1432, column: 38, scope: !5695)
!5714 = !DILocation(line: 1432, column: 2, scope: !5695)
!5715 = !DILocation(line: 1434, column: 21, scope: !5695)
!5716 = !DILocation(line: 1434, column: 2, scope: !5695)
!5717 = !DILocation(line: 1435, column: 1, scope: !5695)
!5718 = distinct !DISubprogram(name: "serial8250_read_char", scope: !3, file: !3, line: 1710, type: !5719, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !206, !233}
!5721 = !DILocalVariable(name: "up", arg: 1, scope: !5718, file: !3, line: 1710, type: !206)
!5722 = !DILocation(line: 1710, column: 50, scope: !5718)
!5723 = !DILocalVariable(name: "lsr", arg: 2, scope: !5718, file: !3, line: 1710, type: !233)
!5724 = !DILocation(line: 1710, column: 68, scope: !5718)
!5725 = !DILocalVariable(name: "port", scope: !5718, file: !3, line: 1712, type: !238)
!5726 = !DILocation(line: 1712, column: 20, scope: !5718)
!5727 = !DILocation(line: 1712, column: 28, scope: !5718)
!5728 = !DILocation(line: 1712, column: 32, scope: !5718)
!5729 = !DILocalVariable(name: "ch", scope: !5718, file: !3, line: 1713, type: !233)
!5730 = !DILocation(line: 1713, column: 16, scope: !5718)
!5731 = !DILocalVariable(name: "flag", scope: !5718, file: !3, line: 1714, type: !449)
!5732 = !DILocation(line: 1714, column: 7, scope: !5718)
!5733 = !DILocation(line: 1716, column: 6, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1716, column: 6)
!5735 = !DILocation(line: 1716, column: 6, scope: !5718)
!5736 = !DILocation(line: 1717, column: 18, scope: !5734)
!5737 = !DILocation(line: 1717, column: 8, scope: !5734)
!5738 = !DILocation(line: 1717, column: 6, scope: !5734)
!5739 = !DILocation(line: 1717, column: 3, scope: !5734)
!5740 = !DILocation(line: 1726, column: 6, scope: !5734)
!5741 = !DILocation(line: 1728, column: 2, scope: !5718)
!5742 = !DILocation(line: 1728, column: 8, scope: !5718)
!5743 = !DILocation(line: 1728, column: 15, scope: !5718)
!5744 = !DILocation(line: 1728, column: 17, scope: !5718)
!5745 = !DILocation(line: 1730, column: 9, scope: !5718)
!5746 = !DILocation(line: 1730, column: 13, scope: !5718)
!5747 = !DILocation(line: 1730, column: 6, scope: !5718)
!5748 = !DILocation(line: 1731, column: 2, scope: !5718)
!5749 = !DILocation(line: 1731, column: 6, scope: !5718)
!5750 = !DILocation(line: 1731, column: 22, scope: !5718)
!5751 = !DILocation(line: 1733, column: 6, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1733, column: 6)
!5753 = !DILocation(line: 1733, column: 6, scope: !5718)
!5754 = !DILocation(line: 1734, column: 7, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1734, column: 7)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1733, column: 47)
!5757 = !DILocation(line: 1734, column: 11, scope: !5755)
!5758 = !DILocation(line: 1734, column: 7, scope: !5756)
!5759 = !DILocation(line: 1735, column: 8, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1734, column: 26)
!5761 = !DILocation(line: 1736, column: 4, scope: !5760)
!5762 = !DILocation(line: 1736, column: 10, scope: !5760)
!5763 = !DILocation(line: 1736, column: 17, scope: !5760)
!5764 = !DILocation(line: 1736, column: 20, scope: !5760)
!5765 = !DILocation(line: 1743, column: 26, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 1743, column: 8)
!5767 = !DILocation(line: 1743, column: 8, scope: !5766)
!5768 = !DILocation(line: 1743, column: 8, scope: !5760)
!5769 = !DILocation(line: 1744, column: 5, scope: !5766)
!5770 = !DILocation(line: 1745, column: 3, scope: !5760)
!5771 = !DILocation(line: 1745, column: 14, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1745, column: 14)
!5773 = !DILocation(line: 1745, column: 18, scope: !5772)
!5774 = !DILocation(line: 1745, column: 14, scope: !5755)
!5775 = !DILocation(line: 1746, column: 4, scope: !5772)
!5776 = !DILocation(line: 1746, column: 10, scope: !5772)
!5777 = !DILocation(line: 1746, column: 17, scope: !5772)
!5778 = !DILocation(line: 1746, column: 23, scope: !5772)
!5779 = !DILocation(line: 1747, column: 12, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1747, column: 12)
!5781 = !DILocation(line: 1747, column: 16, scope: !5780)
!5782 = !DILocation(line: 1747, column: 12, scope: !5772)
!5783 = !DILocation(line: 1748, column: 4, scope: !5780)
!5784 = !DILocation(line: 1748, column: 10, scope: !5780)
!5785 = !DILocation(line: 1748, column: 17, scope: !5780)
!5786 = !DILocation(line: 1748, column: 22, scope: !5780)
!5787 = !DILocation(line: 1749, column: 7, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1749, column: 7)
!5789 = !DILocation(line: 1749, column: 11, scope: !5788)
!5790 = !DILocation(line: 1749, column: 7, scope: !5756)
!5791 = !DILocation(line: 1750, column: 4, scope: !5788)
!5792 = !DILocation(line: 1750, column: 10, scope: !5788)
!5793 = !DILocation(line: 1750, column: 17, scope: !5788)
!5794 = !DILocation(line: 1750, column: 24, scope: !5788)
!5795 = !DILocation(line: 1755, column: 10, scope: !5756)
!5796 = !DILocation(line: 1755, column: 16, scope: !5756)
!5797 = !DILocation(line: 1755, column: 7, scope: !5756)
!5798 = !DILocation(line: 1757, column: 7, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 1757, column: 7)
!5800 = !DILocation(line: 1757, column: 11, scope: !5799)
!5801 = !DILocation(line: 1757, column: 7, scope: !5756)
!5802 = !DILocation(line: 1759, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1757, column: 26)
!5804 = !DILocation(line: 1760, column: 3, scope: !5803)
!5805 = !DILocation(line: 1760, column: 14, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1760, column: 14)
!5807 = !DILocation(line: 1760, column: 18, scope: !5806)
!5808 = !DILocation(line: 1760, column: 14, scope: !5799)
!5809 = !DILocation(line: 1761, column: 9, scope: !5806)
!5810 = !DILocation(line: 1761, column: 4, scope: !5806)
!5811 = !DILocation(line: 1762, column: 12, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1762, column: 12)
!5813 = !DILocation(line: 1762, column: 16, scope: !5812)
!5814 = !DILocation(line: 1762, column: 12, scope: !5806)
!5815 = !DILocation(line: 1763, column: 9, scope: !5812)
!5816 = !DILocation(line: 1763, column: 4, scope: !5812)
!5817 = !DILocation(line: 1764, column: 2, scope: !5756)
!5818 = !DILocation(line: 1765, column: 30, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1765, column: 6)
!5820 = !DILocation(line: 1765, column: 36, scope: !5819)
!5821 = !DILocation(line: 1765, column: 6, scope: !5819)
!5822 = !DILocation(line: 1765, column: 6, scope: !5718)
!5823 = !DILocation(line: 1766, column: 3, scope: !5819)
!5824 = !DILocation(line: 1768, column: 19, scope: !5718)
!5825 = !DILocation(line: 1768, column: 25, scope: !5718)
!5826 = !DILocation(line: 1768, column: 43, scope: !5718)
!5827 = !DILocation(line: 1768, column: 47, scope: !5718)
!5828 = !DILocation(line: 1768, column: 2, scope: !5718)
!5829 = !DILocation(line: 1769, column: 1, scope: !5718)
!5830 = distinct !DISubprogram(name: "serial_in", scope: !4532, file: !4532, line: 111, type: !5831, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{!239, !206, !239}
!5833 = !DILocalVariable(name: "up", arg: 1, scope: !5830, file: !4532, line: 111, type: !206)
!5834 = !DILocation(line: 111, column: 52, scope: !5830)
!5835 = !DILocalVariable(name: "offset", arg: 2, scope: !5830, file: !4532, line: 111, type: !239)
!5836 = !DILocation(line: 111, column: 60, scope: !5830)
!5837 = !DILocation(line: 113, column: 9, scope: !5830)
!5838 = !DILocation(line: 113, column: 13, scope: !5830)
!5839 = !DILocation(line: 113, column: 18, scope: !5830)
!5840 = !DILocation(line: 113, column: 29, scope: !5830)
!5841 = !DILocation(line: 113, column: 33, scope: !5830)
!5842 = !DILocation(line: 113, column: 39, scope: !5830)
!5843 = !DILocation(line: 113, column: 2, scope: !5830)
!5844 = distinct !DISubprogram(name: "uart_handle_break", scope: !94, file: !94, line: 544, type: !289, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5845 = !DILocalVariable(name: "port", arg: 1, scope: !5844, file: !94, line: 544, type: !238)
!5846 = !DILocation(line: 544, column: 55, scope: !5844)
!5847 = !DILocalVariable(name: "state", scope: !5844, file: !94, line: 546, type: !343)
!5848 = !DILocation(line: 546, column: 21, scope: !5844)
!5849 = !DILocation(line: 546, column: 29, scope: !5844)
!5850 = !DILocation(line: 546, column: 35, scope: !5844)
!5851 = !DILocation(line: 548, column: 6, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5844, file: !94, line: 548, column: 6)
!5853 = !DILocation(line: 548, column: 12, scope: !5852)
!5854 = !DILocation(line: 548, column: 6, scope: !5844)
!5855 = !DILocation(line: 549, column: 3, scope: !5852)
!5856 = !DILocation(line: 549, column: 9, scope: !5852)
!5857 = !DILocation(line: 549, column: 22, scope: !5852)
!5858 = !DILocation(line: 560, column: 6, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5844, file: !94, line: 560, column: 6)
!5860 = !DILocation(line: 560, column: 12, scope: !5859)
!5861 = !DILocation(line: 560, column: 18, scope: !5859)
!5862 = !DILocation(line: 560, column: 6, scope: !5844)
!5863 = !DILocation(line: 561, column: 10, scope: !5859)
!5864 = !DILocation(line: 561, column: 17, scope: !5859)
!5865 = !DILocation(line: 561, column: 22, scope: !5859)
!5866 = !DILocation(line: 561, column: 3, scope: !5859)
!5867 = !DILocation(line: 562, column: 2, scope: !5844)
!5868 = distinct !DISubprogram(name: "uart_prepare_sysrq_char", scope: !94, file: !94, line: 531, type: !5869, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5869 = !DISubroutineType(types: !5870)
!5870 = !{!239, !238, !7}
!5871 = !DILocalVariable(name: "port", arg: 1, scope: !5868, file: !94, line: 531, type: !238)
!5872 = !DILocation(line: 531, column: 61, scope: !5868)
!5873 = !DILocalVariable(name: "ch", arg: 2, scope: !5868, file: !94, line: 531, type: !7)
!5874 = !DILocation(line: 531, column: 80, scope: !5868)
!5875 = !DILocation(line: 533, column: 2, scope: !5868)
!5876 = distinct !DISubprogram(name: "serial8250_rx_chars", scope: !3, file: !3, line: 1777, type: !5877, scopeLine: 1778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{!233, !206, !233}
!5879 = !DILocalVariable(name: "up", arg: 1, scope: !5876, file: !3, line: 1777, type: !206)
!5880 = !DILocation(line: 1777, column: 58, scope: !5876)
!5881 = !DILocalVariable(name: "lsr", arg: 2, scope: !5876, file: !3, line: 1777, type: !233)
!5882 = !DILocation(line: 1777, column: 76, scope: !5876)
!5883 = !DILocalVariable(name: "port", scope: !5876, file: !3, line: 1779, type: !238)
!5884 = !DILocation(line: 1779, column: 20, scope: !5876)
!5885 = !DILocation(line: 1779, column: 28, scope: !5876)
!5886 = !DILocation(line: 1779, column: 32, scope: !5876)
!5887 = !DILocalVariable(name: "max_count", scope: !5876, file: !3, line: 1780, type: !239)
!5888 = !DILocation(line: 1780, column: 6, scope: !5876)
!5889 = !DILocation(line: 1782, column: 2, scope: !5876)
!5890 = !DILocation(line: 1783, column: 24, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 1782, column: 5)
!5892 = !DILocation(line: 1783, column: 28, scope: !5891)
!5893 = !DILocation(line: 1783, column: 3, scope: !5891)
!5894 = !DILocation(line: 1784, column: 7, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1784, column: 7)
!5896 = !DILocation(line: 1784, column: 19, scope: !5895)
!5897 = !DILocation(line: 1784, column: 7, scope: !5891)
!5898 = !DILocation(line: 1785, column: 4, scope: !5895)
!5899 = !DILocation(line: 1786, column: 19, scope: !5891)
!5900 = !DILocation(line: 1786, column: 9, scope: !5891)
!5901 = !DILocation(line: 1786, column: 7, scope: !5891)
!5902 = !DILocation(line: 1787, column: 2, scope: !5891)
!5903 = !DILocation(line: 1787, column: 11, scope: !5876)
!5904 = !DILocation(line: 1787, column: 15, scope: !5876)
!5905 = distinct !{!5905, !5889, !5906}
!5906 = !DILocation(line: 1787, column: 44, scope: !5876)
!5907 = !DILocation(line: 1789, column: 24, scope: !5876)
!5908 = !DILocation(line: 1789, column: 30, scope: !5876)
!5909 = !DILocation(line: 1789, column: 37, scope: !5876)
!5910 = !DILocation(line: 1789, column: 2, scope: !5876)
!5911 = !DILocation(line: 1790, column: 9, scope: !5876)
!5912 = !DILocation(line: 1790, column: 2, scope: !5876)
!5913 = distinct !DISubprogram(name: "serial8250_tx_chars", scope: !3, file: !3, line: 1794, type: !4859, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!5914 = !DILocalVariable(name: "up", arg: 1, scope: !5913, file: !3, line: 1794, type: !206)
!5915 = !DILocation(line: 1794, column: 49, scope: !5913)
!5916 = !DILocalVariable(name: "port", scope: !5913, file: !3, line: 1796, type: !238)
!5917 = !DILocation(line: 1796, column: 20, scope: !5913)
!5918 = !DILocation(line: 1796, column: 28, scope: !5913)
!5919 = !DILocation(line: 1796, column: 32, scope: !5913)
!5920 = !DILocalVariable(name: "xmit", scope: !5913, file: !3, line: 1797, type: !5921)
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!5922 = !DILocation(line: 1797, column: 19, scope: !5913)
!5923 = !DILocation(line: 1797, column: 27, scope: !5913)
!5924 = !DILocation(line: 1797, column: 33, scope: !5913)
!5925 = !DILocation(line: 1797, column: 40, scope: !5913)
!5926 = !DILocalVariable(name: "count", scope: !5913, file: !3, line: 1798, type: !239)
!5927 = !DILocation(line: 1798, column: 6, scope: !5913)
!5928 = !DILocation(line: 1800, column: 6, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1800, column: 6)
!5930 = !DILocation(line: 1800, column: 12, scope: !5929)
!5931 = !DILocation(line: 1800, column: 6, scope: !5913)
!5932 = !DILocation(line: 1801, column: 14, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 1800, column: 20)
!5934 = !DILocation(line: 1801, column: 27, scope: !5933)
!5935 = !DILocation(line: 1801, column: 33, scope: !5933)
!5936 = !DILocation(line: 1801, column: 3, scope: !5933)
!5937 = !DILocation(line: 1802, column: 3, scope: !5933)
!5938 = !DILocation(line: 1802, column: 9, scope: !5933)
!5939 = !DILocation(line: 1802, column: 16, scope: !5933)
!5940 = !DILocation(line: 1802, column: 18, scope: !5933)
!5941 = !DILocation(line: 1803, column: 3, scope: !5933)
!5942 = !DILocation(line: 1803, column: 9, scope: !5933)
!5943 = !DILocation(line: 1803, column: 16, scope: !5933)
!5944 = !DILocation(line: 1804, column: 3, scope: !5933)
!5945 = !DILocation(line: 1806, column: 22, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1806, column: 6)
!5947 = !DILocation(line: 1806, column: 6, scope: !5946)
!5948 = !DILocation(line: 1806, column: 6, scope: !5913)
!5949 = !DILocation(line: 1807, column: 22, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 1806, column: 29)
!5951 = !DILocation(line: 1807, column: 3, scope: !5950)
!5952 = !DILocation(line: 1808, column: 3, scope: !5950)
!5953 = !DILocation(line: 1810, column: 6, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1810, column: 6)
!5955 = !DILocation(line: 1810, column: 6, scope: !5913)
!5956 = !DILocation(line: 1811, column: 13, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1810, column: 29)
!5958 = !DILocation(line: 1811, column: 3, scope: !5957)
!5959 = !DILocation(line: 1812, column: 3, scope: !5957)
!5960 = !DILocation(line: 1815, column: 10, scope: !5913)
!5961 = !DILocation(line: 1815, column: 14, scope: !5913)
!5962 = !DILocation(line: 1815, column: 8, scope: !5913)
!5963 = !DILocation(line: 1816, column: 2, scope: !5913)
!5964 = !DILocation(line: 1817, column: 14, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1816, column: 5)
!5966 = !DILocation(line: 1817, column: 27, scope: !5965)
!5967 = !DILocation(line: 1817, column: 33, scope: !5965)
!5968 = !DILocation(line: 1817, column: 37, scope: !5965)
!5969 = !DILocation(line: 1817, column: 43, scope: !5965)
!5970 = !DILocation(line: 1817, column: 3, scope: !5965)
!5971 = !DILocation(line: 1818, column: 17, scope: !5965)
!5972 = !DILocation(line: 1818, column: 23, scope: !5965)
!5973 = !DILocation(line: 1818, column: 28, scope: !5965)
!5974 = !DILocation(line: 1818, column: 16, scope: !5965)
!5975 = !DILocation(line: 1818, column: 33, scope: !5965)
!5976 = !DILocation(line: 1818, column: 3, scope: !5965)
!5977 = !DILocation(line: 1818, column: 9, scope: !5965)
!5978 = !DILocation(line: 1818, column: 14, scope: !5965)
!5979 = !DILocation(line: 1819, column: 3, scope: !5965)
!5980 = !DILocation(line: 1819, column: 9, scope: !5965)
!5981 = !DILocation(line: 1819, column: 16, scope: !5965)
!5982 = !DILocation(line: 1819, column: 18, scope: !5965)
!5983 = !DILocation(line: 1820, column: 7, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1820, column: 7)
!5985 = !DILocation(line: 1820, column: 7, scope: !5965)
!5986 = !DILocation(line: 1821, column: 4, scope: !5984)
!5987 = !DILocation(line: 1822, column: 8, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1822, column: 7)
!5989 = !DILocation(line: 1822, column: 12, scope: !5988)
!5990 = !DILocation(line: 1822, column: 25, scope: !5988)
!5991 = !DILocation(line: 1822, column: 43, scope: !5988)
!5992 = !DILocation(line: 1823, column: 18, scope: !5988)
!5993 = !DILocation(line: 1823, column: 8, scope: !5988)
!5994 = !DILocation(line: 1823, column: 32, scope: !5988)
!5995 = !DILocation(line: 1823, column: 46, scope: !5988)
!5996 = !DILocation(line: 1822, column: 7, scope: !5965)
!5997 = !DILocation(line: 1824, column: 4, scope: !5988)
!5998 = !DILocation(line: 1826, column: 8, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1826, column: 7)
!6000 = !DILocation(line: 1826, column: 12, scope: !5999)
!6001 = !DILocation(line: 1826, column: 25, scope: !5999)
!6002 = !DILocation(line: 1826, column: 42, scope: !5999)
!6003 = !DILocation(line: 1827, column: 19, scope: !5999)
!6004 = !DILocation(line: 1827, column: 9, scope: !5999)
!6005 = !DILocation(line: 1827, column: 33, scope: !5999)
!6006 = !DILocation(line: 1826, column: 7, scope: !5965)
!6007 = !DILocation(line: 1828, column: 4, scope: !5999)
!6008 = !DILocation(line: 1829, column: 2, scope: !5965)
!6009 = !DILocation(line: 1829, column: 11, scope: !5913)
!6010 = !DILocation(line: 1829, column: 19, scope: !5913)
!6011 = distinct !{!6011, !5963, !6012}
!6012 = !DILocation(line: 1829, column: 22, scope: !5913)
!6013 = !DILocation(line: 1831, column: 6, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1831, column: 6)
!6015 = !DILocation(line: 1831, column: 36, scope: !6014)
!6016 = !DILocation(line: 1831, column: 6, scope: !5913)
!6017 = !DILocation(line: 1832, column: 21, scope: !6014)
!6018 = !DILocation(line: 1832, column: 3, scope: !6014)
!6019 = !DILocation(line: 1839, column: 6, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1839, column: 6)
!6021 = !DILocation(line: 1839, column: 28, scope: !6020)
!6022 = !DILocation(line: 1839, column: 33, scope: !6020)
!6023 = !DILocation(line: 1839, column: 37, scope: !6020)
!6024 = !DILocation(line: 1839, column: 50, scope: !6020)
!6025 = !DILocation(line: 1839, column: 6, scope: !5913)
!6026 = !DILocation(line: 1840, column: 13, scope: !6020)
!6027 = !DILocation(line: 1840, column: 3, scope: !6020)
!6028 = !DILocation(line: 1841, column: 1, scope: !5913)
!6029 = distinct !DISubprogram(name: "uart_tx_stopped", scope: !94, file: !94, line: 434, type: !289, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6030 = !DILocalVariable(name: "port", arg: 1, scope: !6029, file: !94, line: 434, type: !238)
!6031 = !DILocation(line: 434, column: 53, scope: !6029)
!6032 = !DILocalVariable(name: "tty", scope: !6029, file: !94, line: 436, type: !424)
!6033 = !DILocation(line: 436, column: 21, scope: !6029)
!6034 = !DILocation(line: 436, column: 27, scope: !6029)
!6035 = !DILocation(line: 436, column: 33, scope: !6029)
!6036 = !DILocation(line: 436, column: 40, scope: !6029)
!6037 = !DILocation(line: 436, column: 45, scope: !6029)
!6038 = !DILocation(line: 437, column: 7, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6029, file: !94, line: 437, column: 6)
!6040 = !DILocation(line: 437, column: 11, scope: !6039)
!6041 = !DILocation(line: 437, column: 14, scope: !6039)
!6042 = !DILocation(line: 437, column: 19, scope: !6039)
!6043 = !DILocation(line: 437, column: 28, scope: !6039)
!6044 = !DILocation(line: 437, column: 31, scope: !6039)
!6045 = !DILocation(line: 437, column: 37, scope: !6039)
!6046 = !DILocation(line: 437, column: 6, scope: !6029)
!6047 = !DILocation(line: 438, column: 3, scope: !6039)
!6048 = !DILocation(line: 439, column: 2, scope: !6029)
!6049 = !DILocation(line: 440, column: 1, scope: !6029)
!6050 = distinct !DISubprogram(name: "serial8250_stop_tx", scope: !3, file: !3, line: 1542, type: !293, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6051 = !DILocalVariable(name: "port", arg: 1, scope: !6050, file: !3, line: 1542, type: !238)
!6052 = !DILocation(line: 1542, column: 50, scope: !6050)
!6053 = !DILocalVariable(name: "up", scope: !6050, file: !3, line: 1544, type: !206)
!6054 = !DILocation(line: 1544, column: 25, scope: !6050)
!6055 = !DILocation(line: 1544, column: 43, scope: !6050)
!6056 = !DILocation(line: 1544, column: 30, scope: !6050)
!6057 = !DILocation(line: 1546, column: 21, scope: !6050)
!6058 = !DILocation(line: 1546, column: 2, scope: !6050)
!6059 = !DILocation(line: 1547, column: 12, scope: !6050)
!6060 = !DILocation(line: 1547, column: 2, scope: !6050)
!6061 = !DILocation(line: 1552, column: 6, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 1552, column: 6)
!6063 = !DILocation(line: 1552, column: 12, scope: !6062)
!6064 = !DILocation(line: 1552, column: 17, scope: !6062)
!6065 = !DILocation(line: 1552, column: 6, scope: !6050)
!6066 = !DILocation(line: 1553, column: 3, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 1552, column: 33)
!6068 = !DILocation(line: 1553, column: 7, scope: !6067)
!6069 = !DILocation(line: 1553, column: 11, scope: !6067)
!6070 = !DILocation(line: 1554, column: 20, scope: !6067)
!6071 = !DILocation(line: 1554, column: 34, scope: !6067)
!6072 = !DILocation(line: 1554, column: 38, scope: !6067)
!6073 = !DILocation(line: 1554, column: 3, scope: !6067)
!6074 = !DILocation(line: 1555, column: 2, scope: !6067)
!6075 = !DILocation(line: 1556, column: 21, scope: !6050)
!6076 = !DILocation(line: 1556, column: 2, scope: !6050)
!6077 = !DILocation(line: 1557, column: 1, scope: !6050)
!6078 = distinct !DISubprogram(name: "__stop_tx", scope: !3, file: !3, line: 1522, type: !4859, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6079 = !DILocalVariable(name: "p", arg: 1, scope: !6078, file: !3, line: 1522, type: !206)
!6080 = !DILocation(line: 1522, column: 53, scope: !6078)
!6081 = !DILocalVariable(name: "em485", scope: !6078, file: !3, line: 1524, type: !4867)
!6082 = !DILocation(line: 1524, column: 26, scope: !6078)
!6083 = !DILocation(line: 1524, column: 34, scope: !6078)
!6084 = !DILocation(line: 1524, column: 37, scope: !6078)
!6085 = !DILocation(line: 1526, column: 6, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1526, column: 6)
!6087 = !DILocation(line: 1526, column: 6, scope: !6078)
!6088 = !DILocalVariable(name: "lsr", scope: !6089, file: !3, line: 1527, type: !233)
!6089 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 1526, column: 13)
!6090 = !DILocation(line: 1527, column: 17, scope: !6089)
!6091 = !DILocation(line: 1527, column: 33, scope: !6089)
!6092 = !DILocation(line: 1527, column: 23, scope: !6089)
!6093 = !DILocation(line: 1534, column: 8, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1534, column: 7)
!6095 = !DILocation(line: 1534, column: 12, scope: !6094)
!6096 = !DILocation(line: 1534, column: 26, scope: !6094)
!6097 = !DILocation(line: 1534, column: 7, scope: !6089)
!6098 = !DILocation(line: 1535, column: 4, scope: !6094)
!6099 = !DILocation(line: 1537, column: 19, scope: !6089)
!6100 = !DILocation(line: 1537, column: 3, scope: !6089)
!6101 = !DILocation(line: 1538, column: 2, scope: !6089)
!6102 = !DILocation(line: 1539, column: 15, scope: !6078)
!6103 = !DILocation(line: 1539, column: 2, scope: !6078)
!6104 = !DILocation(line: 1540, column: 1, scope: !6078)
!6105 = distinct !DISubprogram(name: "serial8250_modem_status", scope: !3, file: !3, line: 1845, type: !6106, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6106 = !DISubroutineType(types: !6107)
!6107 = !{!7, !206}
!6108 = !DILocalVariable(name: "up", arg: 1, scope: !6105, file: !3, line: 1845, type: !206)
!6109 = !DILocation(line: 1845, column: 61, scope: !6105)
!6110 = !DILocalVariable(name: "port", scope: !6105, file: !3, line: 1847, type: !238)
!6111 = !DILocation(line: 1847, column: 20, scope: !6105)
!6112 = !DILocation(line: 1847, column: 28, scope: !6105)
!6113 = !DILocation(line: 1847, column: 32, scope: !6105)
!6114 = !DILocalVariable(name: "status", scope: !6105, file: !3, line: 1848, type: !7)
!6115 = !DILocation(line: 1848, column: 15, scope: !6105)
!6116 = !DILocation(line: 1848, column: 34, scope: !6105)
!6117 = !DILocation(line: 1848, column: 24, scope: !6105)
!6118 = !DILocation(line: 1850, column: 12, scope: !6105)
!6119 = !DILocation(line: 1850, column: 16, scope: !6105)
!6120 = !DILocation(line: 1850, column: 9, scope: !6105)
!6121 = !DILocation(line: 1851, column: 2, scope: !6105)
!6122 = !DILocation(line: 1851, column: 6, scope: !6105)
!6123 = !DILocation(line: 1851, column: 22, scope: !6105)
!6124 = !DILocation(line: 1852, column: 6, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 1852, column: 6)
!6126 = !DILocation(line: 1852, column: 13, scope: !6125)
!6127 = !DILocation(line: 1852, column: 34, scope: !6125)
!6128 = !DILocation(line: 1852, column: 37, scope: !6125)
!6129 = !DILocation(line: 1852, column: 41, scope: !6125)
!6130 = !DILocation(line: 1852, column: 45, scope: !6125)
!6131 = !DILocation(line: 1852, column: 60, scope: !6125)
!6132 = !DILocation(line: 1853, column: 6, scope: !6125)
!6133 = !DILocation(line: 1853, column: 12, scope: !6125)
!6134 = !DILocation(line: 1853, column: 18, scope: !6125)
!6135 = !DILocation(line: 1852, column: 6, scope: !6105)
!6136 = !DILocation(line: 1854, column: 7, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1854, column: 7)
!6138 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1853, column: 27)
!6139 = !DILocation(line: 1854, column: 14, scope: !6137)
!6140 = !DILocation(line: 1854, column: 7, scope: !6138)
!6141 = !DILocation(line: 1855, column: 4, scope: !6137)
!6142 = !DILocation(line: 1855, column: 10, scope: !6137)
!6143 = !DILocation(line: 1855, column: 17, scope: !6137)
!6144 = !DILocation(line: 1855, column: 20, scope: !6137)
!6145 = !DILocation(line: 1856, column: 7, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1856, column: 7)
!6147 = !DILocation(line: 1856, column: 14, scope: !6146)
!6148 = !DILocation(line: 1856, column: 7, scope: !6138)
!6149 = !DILocation(line: 1857, column: 4, scope: !6146)
!6150 = !DILocation(line: 1857, column: 10, scope: !6146)
!6151 = !DILocation(line: 1857, column: 17, scope: !6146)
!6152 = !DILocation(line: 1857, column: 20, scope: !6146)
!6153 = !DILocation(line: 1858, column: 7, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1858, column: 7)
!6155 = !DILocation(line: 1858, column: 14, scope: !6154)
!6156 = !DILocation(line: 1858, column: 7, scope: !6138)
!6157 = !DILocation(line: 1859, column: 27, scope: !6154)
!6158 = !DILocation(line: 1859, column: 33, scope: !6154)
!6159 = !DILocation(line: 1859, column: 40, scope: !6154)
!6160 = !DILocation(line: 1859, column: 4, scope: !6154)
!6161 = !DILocation(line: 1860, column: 7, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 1860, column: 7)
!6163 = !DILocation(line: 1860, column: 14, scope: !6162)
!6164 = !DILocation(line: 1860, column: 7, scope: !6138)
!6165 = !DILocation(line: 1861, column: 27, scope: !6162)
!6166 = !DILocation(line: 1861, column: 33, scope: !6162)
!6167 = !DILocation(line: 1861, column: 40, scope: !6162)
!6168 = !DILocation(line: 1861, column: 4, scope: !6162)
!6169 = !DILocation(line: 1863, column: 3, scope: !6138)
!6170 = !DILocation(line: 1864, column: 2, scope: !6138)
!6171 = !DILocation(line: 1866, column: 9, scope: !6105)
!6172 = !DILocation(line: 1866, column: 2, scope: !6105)
!6173 = distinct !DISubprogram(name: "serial8250_handle_irq", scope: !3, file: !3, line: 1885, type: !5869, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6174 = !DILocalVariable(name: "lock", arg: 1, scope: !6175, file: !6176, line: 327, type: !1330)
!6175 = distinct !DISubprogram(name: "spinlock_check", scope: !6176, file: !6176, line: 327, type: !6177, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6176 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!6179, !1330}
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!6180 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !6181)
!6181 = distinct !DILocation(line: 1895, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1895, column: 2)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 1895, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 1895, column: 2)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 1895, column: 2)
!6186 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1895, column: 2)
!6187 = !DILocalVariable(name: "port", arg: 1, scope: !6173, file: !3, line: 1885, type: !238)
!6188 = !DILocation(line: 1885, column: 45, scope: !6173)
!6189 = !DILocalVariable(name: "iir", arg: 2, scope: !6173, file: !3, line: 1885, type: !7)
!6190 = !DILocation(line: 1885, column: 64, scope: !6173)
!6191 = !DILocalVariable(name: "status", scope: !6173, file: !3, line: 1887, type: !233)
!6192 = !DILocation(line: 1887, column: 16, scope: !6173)
!6193 = !DILocalVariable(name: "flags", scope: !6173, file: !3, line: 1888, type: !230)
!6194 = !DILocation(line: 1888, column: 16, scope: !6173)
!6195 = !DILocalVariable(name: "up", scope: !6173, file: !3, line: 1889, type: !206)
!6196 = !DILocation(line: 1889, column: 25, scope: !6173)
!6197 = !DILocation(line: 1889, column: 43, scope: !6173)
!6198 = !DILocation(line: 1889, column: 30, scope: !6173)
!6199 = !DILocalVariable(name: "skip_rx", scope: !6173, file: !3, line: 1890, type: !688)
!6200 = !DILocation(line: 1890, column: 7, scope: !6173)
!6201 = !DILocation(line: 1892, column: 6, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1892, column: 6)
!6203 = !DILocation(line: 1892, column: 10, scope: !6202)
!6204 = !DILocation(line: 1892, column: 6, scope: !6173)
!6205 = !DILocation(line: 1893, column: 3, scope: !6202)
!6206 = !DILocation(line: 1895, column: 2, scope: !6173)
!6207 = !DILocation(line: 1895, column: 2, scope: !6186)
!6208 = !DILocalVariable(name: "__dummy", scope: !6209, file: !3, line: 1895, type: !230)
!6209 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 1895, column: 2)
!6210 = !DILocation(line: 1895, column: 2, scope: !6209)
!6211 = !DILocalVariable(name: "__dummy2", scope: !6209, file: !3, line: 1895, type: !230)
!6212 = !DILocation(line: 1895, column: 2, scope: !6185)
!6213 = !DILocation(line: 1895, column: 2, scope: !6184)
!6214 = !DILocation(line: 1895, column: 2, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 1895, column: 2)
!6216 = !DILocalVariable(name: "__dummy", scope: !6217, file: !3, line: 1895, type: !230)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1895, column: 2)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 1895, column: 2)
!6219 = !DILocation(line: 1895, column: 2, scope: !6217)
!6220 = !DILocalVariable(name: "__dummy2", scope: !6217, file: !3, line: 1895, type: !230)
!6221 = !DILocation(line: 1895, column: 2, scope: !6218)
!6222 = !DILocation(line: 1895, column: 2, scope: !6183)
!6223 = !{i32 -2141643617}
!6224 = !DILocation(line: 1895, column: 2, scope: !6182)
!6225 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !6181)
!6226 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !6181)
!6227 = !DILocation(line: 1897, column: 26, scope: !6173)
!6228 = !DILocation(line: 1897, column: 11, scope: !6173)
!6229 = !DILocation(line: 1897, column: 9, scope: !6173)
!6230 = !DILocation(line: 1907, column: 8, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1907, column: 6)
!6232 = !DILocation(line: 1907, column: 15, scope: !6231)
!6233 = !DILocation(line: 1907, column: 61, scope: !6231)
!6234 = !DILocation(line: 1908, column: 7, scope: !6231)
!6235 = !DILocation(line: 1908, column: 13, scope: !6231)
!6236 = !DILocation(line: 1908, column: 20, scope: !6231)
!6237 = !DILocation(line: 1908, column: 57, scope: !6231)
!6238 = !DILocation(line: 1909, column: 8, scope: !6231)
!6239 = !DILocation(line: 1909, column: 14, scope: !6231)
!6240 = !DILocation(line: 1909, column: 31, scope: !6231)
!6241 = !DILocation(line: 1907, column: 6, scope: !6173)
!6242 = !DILocation(line: 1910, column: 11, scope: !6231)
!6243 = !DILocation(line: 1910, column: 3, scope: !6231)
!6244 = !DILocation(line: 1912, column: 6, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1912, column: 6)
!6246 = !DILocation(line: 1912, column: 13, scope: !6245)
!6247 = !DILocation(line: 1912, column: 43, scope: !6245)
!6248 = !DILocation(line: 1912, column: 47, scope: !6245)
!6249 = !DILocation(line: 1912, column: 6, scope: !6173)
!6250 = !DILocation(line: 1913, column: 8, scope: !6251)
!6251 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 1913, column: 7)
!6252 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1912, column: 56)
!6253 = !DILocation(line: 1913, column: 12, scope: !6251)
!6254 = !DILocation(line: 1913, column: 16, scope: !6251)
!6255 = !DILocation(line: 1913, column: 33, scope: !6251)
!6256 = !DILocation(line: 1913, column: 37, scope: !6251)
!6257 = !DILocation(line: 1913, column: 19, scope: !6251)
!6258 = !DILocation(line: 1913, column: 7, scope: !6252)
!6259 = !DILocation(line: 1914, column: 33, scope: !6251)
!6260 = !DILocation(line: 1914, column: 37, scope: !6251)
!6261 = !DILocation(line: 1914, column: 13, scope: !6251)
!6262 = !DILocation(line: 1914, column: 11, scope: !6251)
!6263 = !DILocation(line: 1914, column: 4, scope: !6251)
!6264 = !DILocation(line: 1915, column: 2, scope: !6252)
!6265 = !DILocation(line: 1916, column: 26, scope: !6173)
!6266 = !DILocation(line: 1916, column: 2, scope: !6173)
!6267 = !DILocation(line: 1917, column: 8, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 1917, column: 6)
!6269 = !DILocation(line: 1917, column: 12, scope: !6268)
!6270 = !DILocation(line: 1917, column: 16, scope: !6268)
!6271 = !DILocation(line: 1917, column: 19, scope: !6268)
!6272 = !DILocation(line: 1917, column: 23, scope: !6268)
!6273 = !DILocation(line: 1917, column: 28, scope: !6268)
!6274 = !DILocation(line: 1917, column: 36, scope: !6268)
!6275 = !DILocation(line: 1917, column: 40, scope: !6268)
!6276 = !DILocation(line: 1917, column: 47, scope: !6268)
!6277 = !DILocation(line: 1917, column: 64, scope: !6268)
!6278 = !DILocation(line: 1918, column: 4, scope: !6268)
!6279 = !DILocation(line: 1918, column: 8, scope: !6268)
!6280 = !DILocation(line: 1918, column: 12, scope: !6268)
!6281 = !DILocation(line: 1917, column: 6, scope: !6173)
!6282 = !DILocation(line: 1919, column: 23, scope: !6268)
!6283 = !DILocation(line: 1919, column: 3, scope: !6268)
!6284 = !DILocation(line: 1921, column: 30, scope: !6173)
!6285 = !DILocation(line: 1921, column: 36, scope: !6173)
!6286 = !DILocation(line: 1921, column: 2, scope: !6173)
!6287 = !DILocation(line: 1922, column: 2, scope: !6173)
!6288 = !DILocation(line: 1923, column: 1, scope: !6173)
!6289 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6290, file: !6290, line: 666, type: !6291, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6290 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6291 = !DISubroutineType(types: !6292)
!6292 = !{!230}
!6293 = !DILocalVariable(name: "f", scope: !6289, file: !6290, line: 668, type: !230)
!6294 = !DILocation(line: 668, column: 16, scope: !6289)
!6295 = !DILocation(line: 670, column: 6, scope: !6289)
!6296 = !DILocation(line: 670, column: 4, scope: !6289)
!6297 = !DILocation(line: 671, column: 2, scope: !6289)
!6298 = !DILocation(line: 672, column: 9, scope: !6289)
!6299 = !DILocation(line: 672, column: 2, scope: !6289)
!6300 = distinct !DISubprogram(name: "serial_port_in", scope: !94, file: !94, line: 261, type: !6301, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6301 = !DISubroutineType(types: !6302)
!6302 = !{!239, !238, !239}
!6303 = !DILocalVariable(name: "up", arg: 1, scope: !6300, file: !94, line: 261, type: !238)
!6304 = !DILocation(line: 261, column: 52, scope: !6300)
!6305 = !DILocalVariable(name: "offset", arg: 2, scope: !6300, file: !94, line: 261, type: !239)
!6306 = !DILocation(line: 261, column: 60, scope: !6300)
!6307 = !DILocation(line: 263, column: 9, scope: !6300)
!6308 = !DILocation(line: 263, column: 13, scope: !6300)
!6309 = !DILocation(line: 263, column: 23, scope: !6300)
!6310 = !DILocation(line: 263, column: 27, scope: !6300)
!6311 = !DILocation(line: 263, column: 2, scope: !6300)
!6312 = distinct !DISubprogram(name: "handle_rx_dma", scope: !3, file: !3, line: 1870, type: !6313, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!688, !206, !7}
!6315 = !DILocalVariable(name: "up", arg: 1, scope: !6312, file: !3, line: 1870, type: !206)
!6316 = !DILocation(line: 1870, column: 50, scope: !6312)
!6317 = !DILocalVariable(name: "iir", arg: 2, scope: !6312, file: !3, line: 1870, type: !7)
!6318 = !DILocation(line: 1870, column: 67, scope: !6312)
!6319 = !DILocation(line: 1872, column: 10, scope: !6312)
!6320 = !DILocation(line: 1872, column: 14, scope: !6312)
!6321 = !DILocation(line: 1872, column: 2, scope: !6312)
!6322 = !DILocation(line: 1874, column: 27, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 1872, column: 22)
!6324 = !DILocation(line: 1874, column: 3, scope: !6323)
!6325 = !DILocation(line: 1877, column: 3, scope: !6323)
!6326 = !DILocation(line: 1879, column: 9, scope: !6312)
!6327 = !DILocation(line: 1879, column: 13, scope: !6312)
!6328 = !DILocation(line: 1879, column: 18, scope: !6312)
!6329 = !DILocation(line: 1879, column: 25, scope: !6312)
!6330 = !DILocation(line: 1879, column: 2, scope: !6312)
!6331 = !DILocation(line: 1880, column: 1, scope: !6312)
!6332 = distinct !DISubprogram(name: "uart_unlock_and_check_sysrq", scope: !94, file: !94, line: 535, type: !6333, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{null, !238, !230}
!6335 = !DILocalVariable(name: "lock", arg: 1, scope: !6336, file: !6176, line: 407, type: !1330)
!6336 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6176, file: !6176, line: 407, type: !6337, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{null, !1330, !230}
!6339 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !6340)
!6340 = distinct !DILocation(line: 537, column: 2, scope: !6332)
!6341 = !DILocalVariable(name: "flags", arg: 2, scope: !6336, file: !6176, line: 407, type: !230)
!6342 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !6340)
!6343 = !DILocalVariable(name: "port", arg: 1, scope: !6332, file: !94, line: 535, type: !238)
!6344 = !DILocation(line: 535, column: 66, scope: !6332)
!6345 = !DILocalVariable(name: "irqflags", arg: 2, scope: !6332, file: !94, line: 535, type: !230)
!6346 = !DILocation(line: 535, column: 86, scope: !6332)
!6347 = !DILocation(line: 537, column: 26, scope: !6332)
!6348 = !DILocation(line: 537, column: 32, scope: !6332)
!6349 = !DILocation(line: 537, column: 38, scope: !6332)
!6350 = !DILocalVariable(name: "__dummy", scope: !6351, file: !6176, line: 409, type: !230)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !6176, line: 409, column: 2)
!6352 = distinct !DILexicalBlock(scope: !6336, file: !6176, line: 409, column: 2)
!6353 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !6340)
!6354 = !DILocalVariable(name: "__dummy2", scope: !6351, file: !6176, line: 409, type: !230)
!6355 = !DILocalVariable(name: "__dummy", scope: !6356, file: !6176, line: 409, type: !230)
!6356 = distinct !DILexicalBlock(scope: !6357, file: !6176, line: 409, column: 2)
!6357 = distinct !DILexicalBlock(scope: !6358, file: !6176, line: 409, column: 2)
!6358 = distinct !DILexicalBlock(scope: !6359, file: !6176, line: 409, column: 2)
!6359 = distinct !DILexicalBlock(scope: !6352, file: !6176, line: 409, column: 2)
!6360 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !6340)
!6361 = !DILocalVariable(name: "__dummy2", scope: !6356, file: !6176, line: 409, type: !230)
!6362 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !6340)
!6363 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !6340)
!6364 = distinct !DILexicalBlock(scope: !6359, file: !6176, line: 409, column: 2)
!6365 = !{i32 -2145390710}
!6366 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !6340)
!6367 = distinct !DILexicalBlock(scope: !6364, file: !6176, line: 409, column: 2)
!6368 = !DILocation(line: 538, column: 1, scope: !6332)
!6369 = distinct !DISubprogram(name: "serial8250_do_get_mctrl", scope: !3, file: !3, line: 1983, type: !272, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6370 = !DILocalVariable(name: "port", arg: 1, scope: !6369, file: !3, line: 1983, type: !238)
!6371 = !DILocation(line: 1983, column: 56, scope: !6369)
!6372 = !DILocalVariable(name: "up", scope: !6369, file: !3, line: 1985, type: !206)
!6373 = !DILocation(line: 1985, column: 25, scope: !6369)
!6374 = !DILocation(line: 1985, column: 43, scope: !6369)
!6375 = !DILocation(line: 1985, column: 30, scope: !6369)
!6376 = !DILocalVariable(name: "status", scope: !6369, file: !3, line: 1986, type: !7)
!6377 = !DILocation(line: 1986, column: 15, scope: !6369)
!6378 = !DILocalVariable(name: "val", scope: !6369, file: !3, line: 1987, type: !7)
!6379 = !DILocation(line: 1987, column: 15, scope: !6369)
!6380 = !DILocation(line: 1989, column: 21, scope: !6369)
!6381 = !DILocation(line: 1989, column: 2, scope: !6369)
!6382 = !DILocation(line: 1990, column: 35, scope: !6369)
!6383 = !DILocation(line: 1990, column: 11, scope: !6369)
!6384 = !DILocation(line: 1990, column: 9, scope: !6369)
!6385 = !DILocation(line: 1991, column: 21, scope: !6369)
!6386 = !DILocation(line: 1991, column: 2, scope: !6369)
!6387 = !DILocation(line: 1993, column: 32, scope: !6369)
!6388 = !DILocation(line: 1993, column: 8, scope: !6369)
!6389 = !DILocation(line: 1993, column: 6, scope: !6369)
!6390 = !DILocation(line: 1994, column: 6, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 1994, column: 6)
!6392 = !DILocation(line: 1994, column: 10, scope: !6391)
!6393 = !DILocation(line: 1994, column: 6, scope: !6369)
!6394 = !DILocation(line: 1995, column: 25, scope: !6391)
!6395 = !DILocation(line: 1995, column: 29, scope: !6391)
!6396 = !DILocation(line: 1995, column: 10, scope: !6391)
!6397 = !DILocation(line: 1995, column: 3, scope: !6391)
!6398 = !DILocation(line: 1997, column: 9, scope: !6369)
!6399 = !DILocation(line: 1997, column: 2, scope: !6369)
!6400 = !DILocation(line: 1998, column: 1, scope: !6369)
!6401 = distinct !DISubprogram(name: "serial8250_MSR_to_TIOCM", scope: !4532, file: !4532, line: 202, type: !3288, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6402 = !DILocalVariable(name: "msr", arg: 1, scope: !6401, file: !4532, line: 202, type: !239)
!6403 = !DILocation(line: 202, column: 47, scope: !6401)
!6404 = !DILocalVariable(name: "tiocm", scope: !6401, file: !4532, line: 204, type: !239)
!6405 = !DILocation(line: 204, column: 6, scope: !6401)
!6406 = !DILocation(line: 206, column: 6, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6401, file: !4532, line: 206, column: 6)
!6408 = !DILocation(line: 206, column: 10, scope: !6407)
!6409 = !DILocation(line: 206, column: 6, scope: !6401)
!6410 = !DILocation(line: 207, column: 9, scope: !6407)
!6411 = !DILocation(line: 207, column: 3, scope: !6407)
!6412 = !DILocation(line: 208, column: 6, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6401, file: !4532, line: 208, column: 6)
!6414 = !DILocation(line: 208, column: 10, scope: !6413)
!6415 = !DILocation(line: 208, column: 6, scope: !6401)
!6416 = !DILocation(line: 209, column: 9, scope: !6413)
!6417 = !DILocation(line: 209, column: 3, scope: !6413)
!6418 = !DILocation(line: 210, column: 6, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6401, file: !4532, line: 210, column: 6)
!6420 = !DILocation(line: 210, column: 10, scope: !6419)
!6421 = !DILocation(line: 210, column: 6, scope: !6401)
!6422 = !DILocation(line: 211, column: 9, scope: !6419)
!6423 = !DILocation(line: 211, column: 3, scope: !6419)
!6424 = !DILocation(line: 212, column: 6, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6401, file: !4532, line: 212, column: 6)
!6426 = !DILocation(line: 212, column: 10, scope: !6425)
!6427 = !DILocation(line: 212, column: 6, scope: !6401)
!6428 = !DILocation(line: 213, column: 9, scope: !6425)
!6429 = !DILocation(line: 213, column: 3, scope: !6425)
!6430 = !DILocation(line: 215, column: 9, scope: !6401)
!6431 = !DILocation(line: 215, column: 2, scope: !6401)
!6432 = distinct !DISubprogram(name: "serial8250_do_set_mctrl", scope: !3, file: !3, line: 2008, type: !276, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6433 = !DILocalVariable(name: "port", arg: 1, scope: !6432, file: !3, line: 2008, type: !238)
!6434 = !DILocation(line: 2008, column: 48, scope: !6432)
!6435 = !DILocalVariable(name: "mctrl", arg: 2, scope: !6432, file: !3, line: 2008, type: !7)
!6436 = !DILocation(line: 2008, column: 67, scope: !6432)
!6437 = !DILocalVariable(name: "up", scope: !6432, file: !3, line: 2010, type: !206)
!6438 = !DILocation(line: 2010, column: 25, scope: !6432)
!6439 = !DILocation(line: 2010, column: 43, scope: !6432)
!6440 = !DILocation(line: 2010, column: 30, scope: !6432)
!6441 = !DILocalVariable(name: "mcr", scope: !6432, file: !3, line: 2011, type: !233)
!6442 = !DILocation(line: 2011, column: 16, scope: !6432)
!6443 = !DILocation(line: 2013, column: 6, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 2013, column: 6)
!6445 = !DILocation(line: 2013, column: 12, scope: !6444)
!6446 = !DILocation(line: 2013, column: 18, scope: !6444)
!6447 = !DILocation(line: 2013, column: 24, scope: !6444)
!6448 = !DILocation(line: 2013, column: 6, scope: !6432)
!6449 = !DILocation(line: 2014, column: 25, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 2014, column: 7)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 2013, column: 45)
!6452 = !DILocation(line: 2014, column: 7, scope: !6450)
!6453 = !DILocation(line: 2014, column: 29, scope: !6450)
!6454 = !DILocation(line: 2014, column: 7, scope: !6451)
!6455 = !DILocation(line: 2015, column: 10, scope: !6450)
!6456 = !DILocation(line: 2015, column: 4, scope: !6450)
!6457 = !DILocation(line: 2017, column: 10, scope: !6450)
!6458 = !DILocation(line: 2018, column: 2, scope: !6451)
!6459 = !DILocation(line: 2020, column: 32, scope: !6432)
!6460 = !DILocation(line: 2020, column: 8, scope: !6432)
!6461 = !DILocation(line: 2020, column: 6, scope: !6432)
!6462 = !DILocation(line: 2022, column: 9, scope: !6432)
!6463 = !DILocation(line: 2022, column: 15, scope: !6432)
!6464 = !DILocation(line: 2022, column: 19, scope: !6432)
!6465 = !DILocation(line: 2022, column: 13, scope: !6432)
!6466 = !DILocation(line: 2022, column: 31, scope: !6432)
!6467 = !DILocation(line: 2022, column: 35, scope: !6432)
!6468 = !DILocation(line: 2022, column: 29, scope: !6432)
!6469 = !DILocation(line: 2022, column: 47, scope: !6432)
!6470 = !DILocation(line: 2022, column: 51, scope: !6432)
!6471 = !DILocation(line: 2022, column: 45, scope: !6432)
!6472 = !DILocation(line: 2022, column: 8, scope: !6432)
!6473 = !DILocation(line: 2022, column: 6, scope: !6432)
!6474 = !DILocation(line: 2024, column: 21, scope: !6432)
!6475 = !DILocation(line: 2024, column: 25, scope: !6432)
!6476 = !DILocation(line: 2024, column: 2, scope: !6432)
!6477 = !DILocation(line: 2025, column: 1, scope: !6432)
!6478 = distinct !DISubprogram(name: "serial8250_TIOCM_to_MCR", scope: !4532, file: !4532, line: 165, type: !3288, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!6479 = !DILocalVariable(name: "tiocm", arg: 1, scope: !6478, file: !4532, line: 165, type: !239)
!6480 = !DILocation(line: 165, column: 47, scope: !6478)
!6481 = !DILocalVariable(name: "mcr", scope: !6478, file: !4532, line: 167, type: !239)
!6482 = !DILocation(line: 167, column: 6, scope: !6478)
!6483 = !DILocation(line: 169, column: 6, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6478, file: !4532, line: 169, column: 6)
!6485 = !DILocation(line: 169, column: 12, scope: !6484)
!6486 = !DILocation(line: 169, column: 6, scope: !6478)
!6487 = !DILocation(line: 170, column: 7, scope: !6484)
!6488 = !DILocation(line: 170, column: 3, scope: !6484)
!6489 = !DILocation(line: 171, column: 6, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6478, file: !4532, line: 171, column: 6)
!6491 = !DILocation(line: 171, column: 12, scope: !6490)
!6492 = !DILocation(line: 171, column: 6, scope: !6478)
!6493 = !DILocation(line: 172, column: 7, scope: !6490)
!6494 = !DILocation(line: 172, column: 3, scope: !6490)
!6495 = !DILocation(line: 173, column: 6, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6478, file: !4532, line: 173, column: 6)
!6497 = !DILocation(line: 173, column: 12, scope: !6496)
!6498 = !DILocation(line: 173, column: 6, scope: !6478)
!6499 = !DILocation(line: 174, column: 7, scope: !6496)
!6500 = !DILocation(line: 174, column: 3, scope: !6496)
!6501 = !DILocation(line: 175, column: 6, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6478, file: !4532, line: 175, column: 6)
!6503 = !DILocation(line: 175, column: 12, scope: !6502)
!6504 = !DILocation(line: 175, column: 6, scope: !6478)
!6505 = !DILocation(line: 176, column: 7, scope: !6502)
!6506 = !DILocation(line: 176, column: 3, scope: !6502)
!6507 = !DILocation(line: 177, column: 6, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6478, file: !4532, line: 177, column: 6)
!6509 = !DILocation(line: 177, column: 12, scope: !6508)
!6510 = !DILocation(line: 177, column: 6, scope: !6478)
!6511 = !DILocation(line: 178, column: 7, scope: !6508)
!6512 = !DILocation(line: 178, column: 3, scope: !6508)
!6513 = !DILocation(line: 180, column: 9, scope: !6478)
!6514 = !DILocation(line: 180, column: 2, scope: !6478)
!6515 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !6516)
!6516 = distinct !DILocation(line: 2373, column: 2, scope: !4895)
!6517 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !6516)
!6518 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !6519)
!6519 = distinct !DILocation(line: 2327, column: 2, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 2327, column: 2)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2327, column: 2)
!6522 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2327, column: 2)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2327, column: 2)
!6524 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2327, column: 2)
!6525 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !6526)
!6526 = distinct !DILocation(line: 2302, column: 3, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 2276, column: 57)
!6528 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2276, column: 6)
!6529 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !6526)
!6530 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !6531)
!6531 = distinct !DILocation(line: 2290, column: 3, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2290, column: 3)
!6533 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2290, column: 3)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2290, column: 3)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 2290, column: 3)
!6536 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2290, column: 3)
!6537 = !DILocalVariable(name: "port", arg: 1, scope: !4895, file: !3, line: 2147, type: !238)
!6538 = !DILocation(line: 2147, column: 45, scope: !4895)
!6539 = !DILocalVariable(name: "up", scope: !4895, file: !3, line: 2149, type: !206)
!6540 = !DILocation(line: 2149, column: 25, scope: !4895)
!6541 = !DILocation(line: 2149, column: 43, scope: !4895)
!6542 = !DILocation(line: 2149, column: 30, scope: !4895)
!6543 = !DILocalVariable(name: "flags", scope: !4895, file: !3, line: 2150, type: !230)
!6544 = !DILocation(line: 2150, column: 16, scope: !4895)
!6545 = !DILocalVariable(name: "lsr", scope: !4895, file: !3, line: 2151, type: !233)
!6546 = !DILocation(line: 2151, column: 16, scope: !4895)
!6547 = !DILocalVariable(name: "iir", scope: !4895, file: !3, line: 2151, type: !233)
!6548 = !DILocation(line: 2151, column: 21, scope: !4895)
!6549 = !DILocalVariable(name: "retval", scope: !4895, file: !3, line: 2152, type: !239)
!6550 = !DILocation(line: 2152, column: 6, scope: !4895)
!6551 = !DILocation(line: 2154, column: 7, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2154, column: 6)
!6553 = !DILocation(line: 2154, column: 13, scope: !6552)
!6554 = !DILocation(line: 2154, column: 6, scope: !4895)
!6555 = !DILocation(line: 2155, column: 32, scope: !6552)
!6556 = !DILocation(line: 2155, column: 38, scope: !6552)
!6557 = !DILocation(line: 2155, column: 20, scope: !6552)
!6558 = !DILocation(line: 2155, column: 44, scope: !6552)
!6559 = !DILocation(line: 2155, column: 3, scope: !6552)
!6560 = !DILocation(line: 2155, column: 9, scope: !6552)
!6561 = !DILocation(line: 2155, column: 18, scope: !6552)
!6562 = !DILocation(line: 2156, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2156, column: 6)
!6564 = !DILocation(line: 2156, column: 11, scope: !6563)
!6565 = !DILocation(line: 2156, column: 6, scope: !4895)
!6566 = !DILocation(line: 2157, column: 31, scope: !6563)
!6567 = !DILocation(line: 2157, column: 37, scope: !6563)
!6568 = !DILocation(line: 2157, column: 19, scope: !6563)
!6569 = !DILocation(line: 2157, column: 43, scope: !6563)
!6570 = !DILocation(line: 2157, column: 3, scope: !6563)
!6571 = !DILocation(line: 2157, column: 7, scope: !6563)
!6572 = !DILocation(line: 2157, column: 17, scope: !6563)
!6573 = !DILocation(line: 2158, column: 7, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2158, column: 6)
!6575 = !DILocation(line: 2158, column: 11, scope: !6574)
!6576 = !DILocation(line: 2158, column: 6, scope: !4895)
!6577 = !DILocation(line: 2159, column: 34, scope: !6574)
!6578 = !DILocation(line: 2159, column: 40, scope: !6574)
!6579 = !DILocation(line: 2159, column: 22, scope: !6574)
!6580 = !DILocation(line: 2159, column: 46, scope: !6574)
!6581 = !DILocation(line: 2159, column: 3, scope: !6574)
!6582 = !DILocation(line: 2159, column: 7, scope: !6574)
!6583 = !DILocation(line: 2159, column: 20, scope: !6574)
!6584 = !DILocation(line: 2160, column: 2, scope: !4895)
!6585 = !DILocation(line: 2160, column: 6, scope: !4895)
!6586 = !DILocation(line: 2160, column: 10, scope: !4895)
!6587 = !DILocation(line: 2162, column: 6, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2162, column: 6)
!6589 = !DILocation(line: 2162, column: 12, scope: !6588)
!6590 = !DILocation(line: 2162, column: 22, scope: !6588)
!6591 = !DILocation(line: 2162, column: 26, scope: !6588)
!6592 = !DILocation(line: 2162, column: 19, scope: !6588)
!6593 = !DILocation(line: 2162, column: 6, scope: !4895)
!6594 = !DILocation(line: 2163, column: 20, scope: !6588)
!6595 = !DILocation(line: 2163, column: 3, scope: !6588)
!6596 = !DILocation(line: 2165, column: 21, scope: !4895)
!6597 = !DILocation(line: 2165, column: 2, scope: !4895)
!6598 = !DILocation(line: 2166, column: 6, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2166, column: 6)
!6600 = !DILocation(line: 2166, column: 12, scope: !6599)
!6601 = !DILocation(line: 2166, column: 17, scope: !6599)
!6602 = !DILocation(line: 2166, column: 6, scope: !4895)
!6603 = !DILocation(line: 2168, column: 3, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2166, column: 33)
!6605 = !DILocation(line: 2168, column: 7, scope: !6604)
!6606 = !DILocation(line: 2168, column: 11, scope: !6604)
!6607 = !DILocation(line: 2169, column: 19, scope: !6604)
!6608 = !DILocation(line: 2169, column: 3, scope: !6604)
!6609 = !DILocation(line: 2170, column: 19, scope: !6604)
!6610 = !DILocation(line: 2170, column: 3, scope: !6604)
!6611 = !DILocation(line: 2171, column: 19, scope: !6604)
!6612 = !DILocation(line: 2171, column: 3, scope: !6604)
!6613 = !DILocation(line: 2172, column: 19, scope: !6604)
!6614 = !DILocation(line: 2172, column: 3, scope: !6604)
!6615 = !DILocation(line: 2173, column: 20, scope: !6604)
!6616 = !DILocation(line: 2173, column: 3, scope: !6604)
!6617 = !DILocation(line: 2174, column: 19, scope: !6604)
!6618 = !DILocation(line: 2174, column: 3, scope: !6604)
!6619 = !DILocation(line: 2175, column: 19, scope: !6604)
!6620 = !DILocation(line: 2175, column: 3, scope: !6604)
!6621 = !DILocation(line: 2176, column: 19, scope: !6604)
!6622 = !DILocation(line: 2176, column: 3, scope: !6604)
!6623 = !DILocation(line: 2177, column: 2, scope: !6604)
!6624 = !DILocation(line: 2179, column: 6, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2179, column: 6)
!6626 = !DILocation(line: 2179, column: 12, scope: !6625)
!6627 = !DILocation(line: 2179, column: 17, scope: !6625)
!6628 = !DILocation(line: 2179, column: 6, scope: !4895)
!6629 = !DILocation(line: 2181, column: 19, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2179, column: 32)
!6631 = !DILocation(line: 2181, column: 3, scope: !6630)
!6632 = !DILocation(line: 2182, column: 19, scope: !6630)
!6633 = !DILocation(line: 2182, column: 3, scope: !6630)
!6634 = !DILocalVariable(name: "__ms", scope: !6635, file: !3, line: 2183, type: !230)
!6635 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 2183, column: 3)
!6636 = !DILocation(line: 2183, column: 3, scope: !6635)
!6637 = !DILocation(line: 2183, column: 3, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 2183, column: 3)
!6639 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 2183, column: 3)
!6640 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2183, column: 3)
!6641 = distinct !DILexicalBlock(scope: !6635, file: !3, line: 2183, column: 3)
!6642 = distinct !{!6642, !6636, !6636}
!6643 = !DILocation(line: 2186, column: 19, scope: !6630)
!6644 = !DILocation(line: 2186, column: 3, scope: !6630)
!6645 = !DILocation(line: 2190, column: 2, scope: !6630)
!6646 = !DILocation(line: 2192, column: 6, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2192, column: 6)
!6648 = !DILocation(line: 2192, column: 12, scope: !6647)
!6649 = !DILocation(line: 2192, column: 17, scope: !6647)
!6650 = !DILocation(line: 2192, column: 6, scope: !4895)
!6651 = !DILocation(line: 2198, column: 19, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 2192, column: 31)
!6653 = !DILocation(line: 2198, column: 3, scope: !6652)
!6654 = !DILocation(line: 2199, column: 2, scope: !6652)
!6655 = !DILocation(line: 2213, column: 25, scope: !4895)
!6656 = !DILocation(line: 2213, column: 2, scope: !4895)
!6657 = !DILocation(line: 2218, column: 17, scope: !4895)
!6658 = !DILocation(line: 2218, column: 2, scope: !4895)
!6659 = !DILocation(line: 2219, column: 17, scope: !4895)
!6660 = !DILocation(line: 2219, column: 2, scope: !4895)
!6661 = !DILocation(line: 2220, column: 17, scope: !4895)
!6662 = !DILocation(line: 2220, column: 2, scope: !4895)
!6663 = !DILocation(line: 2221, column: 17, scope: !4895)
!6664 = !DILocation(line: 2221, column: 2, scope: !4895)
!6665 = !DILocation(line: 2228, column: 8, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2228, column: 6)
!6667 = !DILocation(line: 2228, column: 14, scope: !6666)
!6668 = !DILocation(line: 2228, column: 20, scope: !6666)
!6669 = !DILocation(line: 2228, column: 38, scope: !6666)
!6670 = !DILocation(line: 2229, column: 22, scope: !6666)
!6671 = !DILocation(line: 2229, column: 7, scope: !6666)
!6672 = !DILocation(line: 2229, column: 38, scope: !6666)
!6673 = !DILocation(line: 2228, column: 6, scope: !4895)
!6674 = !DILocation(line: 2230, column: 3, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 2229, column: 48)
!6676 = !DILocation(line: 2230, column: 3, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 2230, column: 3)
!6678 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 2230, column: 3)
!6679 = !DILocation(line: 2230, column: 3, scope: !6678)
!6680 = !DILocation(line: 2231, column: 10, scope: !6675)
!6681 = !DILocation(line: 2232, column: 3, scope: !6675)
!6682 = !DILocation(line: 2238, column: 6, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2238, column: 6)
!6684 = !DILocation(line: 2238, column: 12, scope: !6683)
!6685 = !DILocation(line: 2238, column: 17, scope: !6683)
!6686 = !DILocation(line: 2238, column: 6, scope: !4895)
!6687 = !DILocalVariable(name: "fctr", scope: !6688, file: !3, line: 2239, type: !233)
!6688 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 2238, column: 32)
!6689 = !DILocation(line: 2239, column: 17, scope: !6688)
!6690 = !DILocation(line: 2241, column: 14, scope: !6688)
!6691 = !DILocation(line: 2241, column: 3, scope: !6688)
!6692 = !DILocation(line: 2243, column: 20, scope: !6688)
!6693 = !DILocation(line: 2243, column: 10, scope: !6688)
!6694 = !DILocation(line: 2243, column: 35, scope: !6688)
!6695 = !DILocation(line: 2243, column: 8, scope: !6688)
!6696 = !DILocation(line: 2244, column: 19, scope: !6688)
!6697 = !DILocation(line: 2245, column: 5, scope: !6688)
!6698 = !DILocation(line: 2245, column: 10, scope: !6688)
!6699 = !DILocation(line: 2244, column: 3, scope: !6688)
!6700 = !DILocation(line: 2246, column: 19, scope: !6688)
!6701 = !DILocation(line: 2246, column: 3, scope: !6688)
!6702 = !DILocation(line: 2247, column: 19, scope: !6688)
!6703 = !DILocation(line: 2248, column: 5, scope: !6688)
!6704 = !DILocation(line: 2248, column: 10, scope: !6688)
!6705 = !DILocation(line: 2248, column: 27, scope: !6688)
!6706 = !DILocation(line: 2247, column: 3, scope: !6688)
!6707 = !DILocation(line: 2249, column: 19, scope: !6688)
!6708 = !DILocation(line: 2249, column: 3, scope: !6688)
!6709 = !DILocation(line: 2251, column: 19, scope: !6688)
!6710 = !DILocation(line: 2251, column: 3, scope: !6688)
!6711 = !DILocation(line: 2252, column: 2, scope: !6688)
!6712 = !DILocation(line: 2257, column: 8, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2257, column: 6)
!6714 = !DILocation(line: 2257, column: 14, scope: !6713)
!6715 = !DILocation(line: 2257, column: 19, scope: !6713)
!6716 = !DILocation(line: 2257, column: 43, scope: !6713)
!6717 = !DILocation(line: 2258, column: 8, scope: !6713)
!6718 = !DILocation(line: 2258, column: 14, scope: !6713)
!6719 = !DILocation(line: 2258, column: 19, scope: !6713)
!6720 = !DILocation(line: 2258, column: 43, scope: !6713)
!6721 = !DILocation(line: 2259, column: 8, scope: !6713)
!6722 = !DILocation(line: 2259, column: 14, scope: !6713)
!6723 = !DILocation(line: 2259, column: 19, scope: !6713)
!6724 = !DILocation(line: 2259, column: 45, scope: !6713)
!6725 = !DILocation(line: 2259, column: 49, scope: !6713)
!6726 = !DILocation(line: 2259, column: 55, scope: !6713)
!6727 = !DILocation(line: 2259, column: 64, scope: !6713)
!6728 = !DILocation(line: 2257, column: 6, scope: !4895)
!6729 = !DILocation(line: 2261, column: 8, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2261, column: 7)
!6731 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 2259, column: 70)
!6732 = !DILocation(line: 2261, column: 12, scope: !6730)
!6733 = !DILocation(line: 2261, column: 22, scope: !6730)
!6734 = !DILocation(line: 2261, column: 27, scope: !6730)
!6735 = !DILocation(line: 2261, column: 31, scope: !6730)
!6736 = !DILocation(line: 2261, column: 35, scope: !6730)
!6737 = !DILocation(line: 2261, column: 47, scope: !6730)
!6738 = !DILocation(line: 2261, column: 53, scope: !6730)
!6739 = !DILocation(line: 2261, column: 45, scope: !6730)
!6740 = !DILocation(line: 2261, column: 7, scope: !6731)
!6741 = !DILocation(line: 2262, column: 4, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2261, column: 64)
!6743 = !DILocation(line: 2263, column: 3, scope: !6742)
!6744 = !DILocation(line: 2264, column: 20, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 2263, column: 10)
!6746 = !DILocation(line: 2264, column: 4, scope: !6745)
!6747 = !DILocation(line: 2266, column: 20, scope: !6745)
!6748 = !DILocation(line: 2267, column: 6, scope: !6745)
!6749 = !DILocation(line: 2267, column: 12, scope: !6745)
!6750 = !DILocation(line: 2267, column: 23, scope: !6745)
!6751 = !DILocation(line: 2267, column: 27, scope: !6745)
!6752 = !DILocation(line: 2267, column: 21, scope: !6745)
!6753 = !DILocation(line: 2266, column: 4, scope: !6745)
!6754 = !DILocation(line: 2268, column: 4, scope: !6745)
!6755 = !DILocation(line: 2268, column: 10, scope: !6745)
!6756 = !DILocation(line: 2268, column: 21, scope: !6745)
!6757 = !DILocation(line: 2270, column: 2, scope: !6731)
!6758 = !DILocation(line: 2273, column: 6, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2273, column: 6)
!6760 = !DILocation(line: 2273, column: 12, scope: !6759)
!6761 = !DILocation(line: 2273, column: 16, scope: !6759)
!6762 = !DILocation(line: 2273, column: 20, scope: !6759)
!6763 = !DILocation(line: 2273, column: 24, scope: !6759)
!6764 = !DILocation(line: 2273, column: 29, scope: !6759)
!6765 = !DILocation(line: 2273, column: 35, scope: !6759)
!6766 = !DILocation(line: 2273, column: 6, scope: !4895)
!6767 = !DILocation(line: 2274, column: 3, scope: !6759)
!6768 = !DILocation(line: 2274, column: 7, scope: !6759)
!6769 = !DILocation(line: 2274, column: 12, scope: !6759)
!6770 = !DILocation(line: 2274, column: 21, scope: !6759)
!6771 = !DILocation(line: 2276, column: 6, scope: !6528)
!6772 = !DILocation(line: 2276, column: 12, scope: !6528)
!6773 = !DILocation(line: 2276, column: 16, scope: !6528)
!6774 = !DILocation(line: 2276, column: 21, scope: !6528)
!6775 = !DILocation(line: 2276, column: 25, scope: !6528)
!6776 = !DILocation(line: 2276, column: 30, scope: !6528)
!6777 = !DILocation(line: 2276, column: 36, scope: !6528)
!6778 = !DILocation(line: 2276, column: 6, scope: !4895)
!6779 = !DILocalVariable(name: "iir1", scope: !6527, file: !3, line: 2277, type: !233)
!6780 = !DILocation(line: 2277, column: 17, scope: !6527)
!6781 = !DILocation(line: 2279, column: 7, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2279, column: 7)
!6783 = !DILocation(line: 2279, column: 13, scope: !6782)
!6784 = !DILocation(line: 2279, column: 22, scope: !6782)
!6785 = !DILocation(line: 2279, column: 7, scope: !6527)
!6786 = !DILocation(line: 2280, column: 23, scope: !6782)
!6787 = !DILocation(line: 2280, column: 29, scope: !6782)
!6788 = !DILocation(line: 2280, column: 4, scope: !6782)
!6789 = !DILocation(line: 2290, column: 3, scope: !6527)
!6790 = !DILocation(line: 2290, column: 3, scope: !6536)
!6791 = !DILocalVariable(name: "__dummy", scope: !6792, file: !3, line: 2290, type: !230)
!6792 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 2290, column: 3)
!6793 = !DILocation(line: 2290, column: 3, scope: !6792)
!6794 = !DILocalVariable(name: "__dummy2", scope: !6792, file: !3, line: 2290, type: !230)
!6795 = !DILocation(line: 2290, column: 3, scope: !6535)
!6796 = !DILocation(line: 2290, column: 3, scope: !6534)
!6797 = !DILocation(line: 2290, column: 3, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 2290, column: 3)
!6799 = !DILocalVariable(name: "__dummy", scope: !6800, file: !3, line: 2290, type: !230)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 2290, column: 3)
!6801 = distinct !DILexicalBlock(scope: !6798, file: !3, line: 2290, column: 3)
!6802 = !DILocation(line: 2290, column: 3, scope: !6800)
!6803 = !DILocalVariable(name: "__dummy2", scope: !6800, file: !3, line: 2290, type: !230)
!6804 = !DILocation(line: 2290, column: 3, scope: !6801)
!6805 = !DILocation(line: 2290, column: 3, scope: !6533)
!6806 = !{i32 -2141636191}
!6807 = !DILocation(line: 2290, column: 3, scope: !6532)
!6808 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !6531)
!6809 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !6531)
!6810 = !DILocation(line: 2292, column: 18, scope: !6527)
!6811 = !DILocation(line: 2292, column: 3, scope: !6527)
!6812 = !DILocation(line: 2293, column: 24, scope: !6527)
!6813 = !DILocation(line: 2293, column: 3, scope: !6527)
!6814 = !DILocation(line: 2294, column: 3, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 2294, column: 3)
!6816 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 2294, column: 3)
!6817 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2294, column: 3)
!6818 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2294, column: 3)
!6819 = !DILocation(line: 2295, column: 25, scope: !6527)
!6820 = !DILocation(line: 2295, column: 10, scope: !6527)
!6821 = !DILocation(line: 2295, column: 8, scope: !6527)
!6822 = !DILocation(line: 2296, column: 19, scope: !6527)
!6823 = !DILocation(line: 2296, column: 3, scope: !6527)
!6824 = !DILocation(line: 2297, column: 24, scope: !6527)
!6825 = !DILocation(line: 2297, column: 3, scope: !6527)
!6826 = !DILocation(line: 2298, column: 3, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 2298, column: 3)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2298, column: 3)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 2298, column: 3)
!6830 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2298, column: 3)
!6831 = !DILocation(line: 2299, column: 24, scope: !6527)
!6832 = !DILocation(line: 2299, column: 9, scope: !6527)
!6833 = !DILocation(line: 2299, column: 7, scope: !6527)
!6834 = !DILocation(line: 2300, column: 19, scope: !6527)
!6835 = !DILocation(line: 2300, column: 3, scope: !6527)
!6836 = !DILocation(line: 2302, column: 27, scope: !6527)
!6837 = !DILocation(line: 2302, column: 33, scope: !6527)
!6838 = !DILocation(line: 2302, column: 39, scope: !6527)
!6839 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !6526)
!6840 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !6526)
!6841 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !6526)
!6842 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !6526)
!6843 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !6526)
!6844 = !DILocation(line: 2304, column: 7, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2304, column: 7)
!6846 = !DILocation(line: 2304, column: 13, scope: !6845)
!6847 = !DILocation(line: 2304, column: 22, scope: !6845)
!6848 = !DILocation(line: 2304, column: 7, scope: !6527)
!6849 = !DILocation(line: 2305, column: 15, scope: !6845)
!6850 = !DILocation(line: 2305, column: 21, scope: !6845)
!6851 = !DILocation(line: 2305, column: 4, scope: !6845)
!6852 = !DILocation(line: 2312, column: 10, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2312, column: 7)
!6854 = !DILocation(line: 2312, column: 15, scope: !6853)
!6855 = !DILocation(line: 2312, column: 34, scope: !6853)
!6856 = !DILocation(line: 2312, column: 38, scope: !6853)
!6857 = !DILocation(line: 2312, column: 42, scope: !6853)
!6858 = !DILocation(line: 2312, column: 62, scope: !6853)
!6859 = !DILocation(line: 2313, column: 7, scope: !6853)
!6860 = !DILocation(line: 2313, column: 11, scope: !6853)
!6861 = !DILocation(line: 2313, column: 16, scope: !6853)
!6862 = !DILocation(line: 2313, column: 22, scope: !6853)
!6863 = !DILocation(line: 2312, column: 7, scope: !6527)
!6864 = !DILocation(line: 2314, column: 4, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 2313, column: 38)
!6866 = !DILocation(line: 2314, column: 8, scope: !6865)
!6867 = !DILocation(line: 2314, column: 13, scope: !6865)
!6868 = !DILocation(line: 2315, column: 3, scope: !6865)
!6869 = !DILocation(line: 2316, column: 2, scope: !6527)
!6870 = !DILocation(line: 2318, column: 11, scope: !4895)
!6871 = !DILocation(line: 2318, column: 15, scope: !4895)
!6872 = !DILocation(line: 2318, column: 20, scope: !4895)
!6873 = !DILocation(line: 2318, column: 30, scope: !4895)
!6874 = !DILocation(line: 2318, column: 9, scope: !4895)
!6875 = !DILocation(line: 2319, column: 6, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2319, column: 6)
!6877 = !DILocation(line: 2319, column: 6, scope: !4895)
!6878 = !DILocation(line: 2320, column: 3, scope: !6876)
!6879 = !DILocation(line: 2325, column: 18, scope: !4895)
!6880 = !DILocation(line: 2325, column: 2, scope: !4895)
!6881 = !DILocation(line: 2327, column: 2, scope: !4895)
!6882 = !DILocation(line: 2327, column: 2, scope: !6524)
!6883 = !DILocalVariable(name: "__dummy", scope: !6884, file: !3, line: 2327, type: !230)
!6884 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2327, column: 2)
!6885 = !DILocation(line: 2327, column: 2, scope: !6884)
!6886 = !DILocalVariable(name: "__dummy2", scope: !6884, file: !3, line: 2327, type: !230)
!6887 = !DILocation(line: 2327, column: 2, scope: !6523)
!6888 = !DILocation(line: 2327, column: 2, scope: !6522)
!6889 = !DILocation(line: 2327, column: 2, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 2327, column: 2)
!6891 = !DILocalVariable(name: "__dummy", scope: !6892, file: !3, line: 2327, type: !230)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2327, column: 2)
!6893 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 2327, column: 2)
!6894 = !DILocation(line: 2327, column: 2, scope: !6892)
!6895 = !DILocalVariable(name: "__dummy2", scope: !6892, file: !3, line: 2327, type: !230)
!6896 = !DILocation(line: 2327, column: 2, scope: !6893)
!6897 = !DILocation(line: 2327, column: 2, scope: !6521)
!6898 = !{i32 -2141634634}
!6899 = !DILocation(line: 2327, column: 2, scope: !6520)
!6900 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !6519)
!6901 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !6519)
!6902 = !DILocation(line: 2328, column: 6, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2328, column: 6)
!6904 = !DILocation(line: 2328, column: 10, scope: !6903)
!6905 = !DILocation(line: 2328, column: 15, scope: !6903)
!6906 = !DILocation(line: 2328, column: 21, scope: !6903)
!6907 = !DILocation(line: 2328, column: 6, scope: !4895)
!6908 = !DILocation(line: 2329, column: 8, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 2329, column: 7)
!6910 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2328, column: 37)
!6911 = !DILocation(line: 2329, column: 12, scope: !6909)
!6912 = !DILocation(line: 2329, column: 17, scope: !6909)
!6913 = !DILocation(line: 2329, column: 7, scope: !6910)
!6914 = !DILocation(line: 2330, column: 4, scope: !6909)
!6915 = !DILocation(line: 2330, column: 8, scope: !6909)
!6916 = !DILocation(line: 2330, column: 13, scope: !6909)
!6917 = !DILocation(line: 2330, column: 19, scope: !6909)
!6918 = !DILocation(line: 2331, column: 2, scope: !6910)
!6919 = !DILocation(line: 2335, column: 7, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 2335, column: 7)
!6921 = !DILocation(line: 2335, column: 13, scope: !6920)
!6922 = !DILocation(line: 2335, column: 7, scope: !6903)
!6923 = !DILocation(line: 2336, column: 4, scope: !6920)
!6924 = !DILocation(line: 2336, column: 8, scope: !6920)
!6925 = !DILocation(line: 2336, column: 13, scope: !6920)
!6926 = !DILocation(line: 2336, column: 19, scope: !6920)
!6927 = !DILocation(line: 2338, column: 23, scope: !4895)
!6928 = !DILocation(line: 2338, column: 29, scope: !4895)
!6929 = !DILocation(line: 2338, column: 35, scope: !4895)
!6930 = !DILocation(line: 2338, column: 2, scope: !4895)
!6931 = !DILocation(line: 2351, column: 6, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2351, column: 6)
!6933 = !DILocation(line: 2351, column: 10, scope: !6932)
!6934 = !DILocation(line: 2351, column: 15, scope: !6932)
!6935 = !DILocation(line: 2351, column: 22, scope: !6932)
!6936 = !DILocation(line: 2351, column: 6, scope: !4895)
!6937 = !DILocation(line: 2352, column: 3, scope: !6932)
!6938 = !DILocation(line: 2358, column: 18, scope: !4895)
!6939 = !DILocation(line: 2358, column: 2, scope: !4895)
!6940 = !DILocation(line: 2359, column: 23, scope: !4895)
!6941 = !DILocation(line: 2359, column: 8, scope: !4895)
!6942 = !DILocation(line: 2359, column: 6, scope: !4895)
!6943 = !DILocation(line: 2360, column: 23, scope: !4895)
!6944 = !DILocation(line: 2360, column: 8, scope: !4895)
!6945 = !DILocation(line: 2360, column: 6, scope: !4895)
!6946 = !DILocation(line: 2361, column: 18, scope: !4895)
!6947 = !DILocation(line: 2361, column: 2, scope: !4895)
!6948 = !DILocation(line: 2363, column: 6, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2363, column: 6)
!6950 = !DILocation(line: 2363, column: 10, scope: !6949)
!6951 = !DILocation(line: 2363, column: 26, scope: !6949)
!6952 = !DILocation(line: 2363, column: 29, scope: !6949)
!6953 = !DILocation(line: 2363, column: 33, scope: !6949)
!6954 = !DILocation(line: 2363, column: 6, scope: !4895)
!6955 = !DILocation(line: 2364, column: 9, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 2364, column: 7)
!6957 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2363, column: 52)
!6958 = !DILocation(line: 2364, column: 13, scope: !6956)
!6959 = !DILocation(line: 2364, column: 18, scope: !6956)
!6960 = !DILocation(line: 2364, column: 7, scope: !6957)
!6961 = !DILocation(line: 2365, column: 4, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 2364, column: 36)
!6963 = !DILocation(line: 2365, column: 8, scope: !6962)
!6964 = !DILocation(line: 2365, column: 13, scope: !6962)
!6965 = !DILocation(line: 2367, column: 3, scope: !6962)
!6966 = !DILocation(line: 2368, column: 2, scope: !6957)
!6967 = !DILocation(line: 2369, column: 3, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2368, column: 9)
!6969 = !DILocation(line: 2369, column: 7, scope: !6968)
!6970 = !DILocation(line: 2369, column: 12, scope: !6968)
!6971 = !DILocation(line: 2363, column: 35, scope: !6949)
!6972 = !DILabel(scope: !4895, name: "dont_test_tx_en", file: !3, line: 2372)
!6973 = !DILocation(line: 2372, column: 1, scope: !4895)
!6974 = !DILocation(line: 2373, column: 26, scope: !4895)
!6975 = !DILocation(line: 2373, column: 32, scope: !4895)
!6976 = !DILocation(line: 2373, column: 38, scope: !4895)
!6977 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !6516)
!6978 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !6516)
!6979 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !6516)
!6980 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !6516)
!6981 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !6516)
!6982 = !DILocation(line: 2380, column: 17, scope: !4895)
!6983 = !DILocation(line: 2380, column: 2, scope: !4895)
!6984 = !DILocation(line: 2381, column: 17, scope: !4895)
!6985 = !DILocation(line: 2381, column: 2, scope: !4895)
!6986 = !DILocation(line: 2382, column: 17, scope: !4895)
!6987 = !DILocation(line: 2382, column: 2, scope: !4895)
!6988 = !DILocation(line: 2383, column: 17, scope: !4895)
!6989 = !DILocation(line: 2383, column: 2, scope: !4895)
!6990 = !DILocation(line: 2384, column: 2, scope: !4895)
!6991 = !DILocation(line: 2384, column: 6, scope: !4895)
!6992 = !DILocation(line: 2384, column: 22, scope: !4895)
!6993 = !DILocation(line: 2385, column: 2, scope: !4895)
!6994 = !DILocation(line: 2385, column: 6, scope: !4895)
!6995 = !DILocation(line: 2385, column: 22, scope: !4895)
!6996 = !DILocation(line: 2390, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2390, column: 6)
!6998 = !DILocation(line: 2390, column: 10, scope: !6997)
!6999 = !DILocation(line: 2390, column: 6, scope: !4895)
!7000 = !DILocalVariable(name: "msg", scope: !7001, file: !3, line: 2391, type: !447)
!7001 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 2390, column: 15)
!7002 = !DILocation(line: 2391, column: 15, scope: !7001)
!7003 = !DILocation(line: 2393, column: 7, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2393, column: 7)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2393, column: 7)
!7006 = !DILocation(line: 2393, column: 7, scope: !7005)
!7007 = !DILocation(line: 2393, column: 7, scope: !7001)
!7008 = !DILocation(line: 2394, column: 8, scope: !7005)
!7009 = !DILocation(line: 2394, column: 4, scope: !7005)
!7010 = !DILocation(line: 2395, column: 35, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 2395, column: 12)
!7012 = !DILocation(line: 2395, column: 12, scope: !7011)
!7013 = !DILocation(line: 2395, column: 12, scope: !7005)
!7014 = !DILocation(line: 2396, column: 8, scope: !7011)
!7015 = !DILocation(line: 2396, column: 4, scope: !7011)
!7016 = !DILocation(line: 2397, column: 7, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 2397, column: 7)
!7018 = !DILocation(line: 2397, column: 7, scope: !7001)
!7019 = !DILocation(line: 2398, column: 4, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 2397, column: 12)
!7021 = !DILocation(line: 2398, column: 4, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 2398, column: 4)
!7023 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 2398, column: 4)
!7024 = !DILocation(line: 2398, column: 4, scope: !7023)
!7025 = !DILocation(line: 2399, column: 4, scope: !7020)
!7026 = !DILocation(line: 2399, column: 8, scope: !7020)
!7027 = !DILocation(line: 2399, column: 12, scope: !7020)
!7028 = !DILocation(line: 2400, column: 3, scope: !7020)
!7029 = !DILocation(line: 2401, column: 2, scope: !7001)
!7030 = !DILocation(line: 2408, column: 2, scope: !4895)
!7031 = !DILocation(line: 2408, column: 6, scope: !4895)
!7032 = !DILocation(line: 2408, column: 10, scope: !4895)
!7033 = !DILocation(line: 2410, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2410, column: 6)
!7035 = !DILocation(line: 2410, column: 12, scope: !7034)
!7036 = !DILocation(line: 2410, column: 18, scope: !7034)
!7037 = !DILocation(line: 2410, column: 6, scope: !4895)
!7038 = !DILocalVariable(name: "icp", scope: !7039, file: !3, line: 2411, type: !7)
!7039 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 2410, column: 34)
!7040 = !DILocation(line: 2411, column: 16, scope: !7039)
!7041 = !DILocation(line: 2415, column: 10, scope: !7039)
!7042 = !DILocation(line: 2415, column: 16, scope: !7039)
!7043 = !DILocation(line: 2415, column: 23, scope: !7039)
!7044 = !DILocation(line: 2415, column: 32, scope: !7039)
!7045 = !DILocation(line: 2415, column: 9, scope: !7039)
!7046 = !DILocation(line: 2415, column: 7, scope: !7039)
!7047 = !DILocation(line: 2416, column: 16, scope: !7039)
!7048 = !DILocation(line: 2416, column: 3, scope: !7039)
!7049 = !DILocation(line: 2417, column: 9, scope: !7039)
!7050 = !DILocation(line: 2417, column: 3, scope: !7039)
!7051 = !DILocation(line: 2418, column: 2, scope: !7039)
!7052 = !DILocation(line: 2419, column: 9, scope: !4895)
!7053 = !DILocation(line: 2419, column: 2, scope: !4895)
!7054 = !DILabel(scope: !4895, name: "out", file: !3, line: 2420)
!7055 = !DILocation(line: 2420, column: 1, scope: !4895)
!7056 = !DILocation(line: 2421, column: 21, scope: !4895)
!7057 = !DILocation(line: 2421, column: 2, scope: !4895)
!7058 = !DILocation(line: 2422, column: 9, scope: !4895)
!7059 = !DILocation(line: 2422, column: 2, scope: !4895)
!7060 = distinct !DISubprogram(name: "set_io_from_upio", scope: !3, file: !3, line: 458, type: !293, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7061 = !DILocalVariable(name: "p", arg: 1, scope: !7060, file: !3, line: 458, type: !238)
!7062 = !DILocation(line: 458, column: 48, scope: !7060)
!7063 = !DILocalVariable(name: "up", scope: !7060, file: !3, line: 460, type: !206)
!7064 = !DILocation(line: 460, column: 25, scope: !7060)
!7065 = !DILocation(line: 460, column: 43, scope: !7060)
!7066 = !DILocation(line: 460, column: 30, scope: !7060)
!7067 = !DILocation(line: 462, column: 2, scope: !7060)
!7068 = !DILocation(line: 462, column: 6, scope: !7060)
!7069 = !DILocation(line: 462, column: 14, scope: !7060)
!7070 = !DILocation(line: 463, column: 2, scope: !7060)
!7071 = !DILocation(line: 463, column: 6, scope: !7060)
!7072 = !DILocation(line: 463, column: 15, scope: !7060)
!7073 = !DILocation(line: 465, column: 10, scope: !7060)
!7074 = !DILocation(line: 465, column: 13, scope: !7060)
!7075 = !DILocation(line: 465, column: 2, scope: !7060)
!7076 = !DILocation(line: 467, column: 3, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 465, column: 21)
!7078 = !DILocation(line: 467, column: 6, scope: !7077)
!7079 = !DILocation(line: 467, column: 16, scope: !7077)
!7080 = !DILocation(line: 468, column: 3, scope: !7077)
!7081 = !DILocation(line: 468, column: 6, scope: !7077)
!7082 = !DILocation(line: 468, column: 17, scope: !7077)
!7083 = !DILocation(line: 469, column: 3, scope: !7077)
!7084 = !DILocation(line: 472, column: 3, scope: !7077)
!7085 = !DILocation(line: 472, column: 6, scope: !7077)
!7086 = !DILocation(line: 472, column: 16, scope: !7077)
!7087 = !DILocation(line: 473, column: 3, scope: !7077)
!7088 = !DILocation(line: 473, column: 6, scope: !7077)
!7089 = !DILocation(line: 473, column: 17, scope: !7077)
!7090 = !DILocation(line: 474, column: 3, scope: !7077)
!7091 = !DILocation(line: 477, column: 3, scope: !7077)
!7092 = !DILocation(line: 477, column: 6, scope: !7077)
!7093 = !DILocation(line: 477, column: 16, scope: !7077)
!7094 = !DILocation(line: 478, column: 3, scope: !7077)
!7095 = !DILocation(line: 478, column: 6, scope: !7077)
!7096 = !DILocation(line: 478, column: 17, scope: !7077)
!7097 = !DILocation(line: 479, column: 3, scope: !7077)
!7098 = !DILocation(line: 482, column: 3, scope: !7077)
!7099 = !DILocation(line: 482, column: 6, scope: !7077)
!7100 = !DILocation(line: 482, column: 16, scope: !7077)
!7101 = !DILocation(line: 483, column: 3, scope: !7077)
!7102 = !DILocation(line: 483, column: 6, scope: !7077)
!7103 = !DILocation(line: 483, column: 17, scope: !7077)
!7104 = !DILocation(line: 484, column: 3, scope: !7077)
!7105 = !DILocation(line: 487, column: 3, scope: !7077)
!7106 = !DILocation(line: 487, column: 6, scope: !7077)
!7107 = !DILocation(line: 487, column: 16, scope: !7077)
!7108 = !DILocation(line: 488, column: 3, scope: !7077)
!7109 = !DILocation(line: 488, column: 6, scope: !7077)
!7110 = !DILocation(line: 488, column: 17, scope: !7077)
!7111 = !DILocation(line: 489, column: 3, scope: !7077)
!7112 = !DILocation(line: 501, column: 3, scope: !7077)
!7113 = !DILocation(line: 501, column: 6, scope: !7077)
!7114 = !DILocation(line: 501, column: 16, scope: !7077)
!7115 = !DILocation(line: 502, column: 3, scope: !7077)
!7116 = !DILocation(line: 502, column: 6, scope: !7077)
!7117 = !DILocation(line: 502, column: 17, scope: !7077)
!7118 = !DILocation(line: 503, column: 3, scope: !7077)
!7119 = !DILocation(line: 506, column: 19, scope: !7060)
!7120 = !DILocation(line: 506, column: 22, scope: !7060)
!7121 = !DILocation(line: 506, column: 2, scope: !7060)
!7122 = !DILocation(line: 506, column: 6, scope: !7060)
!7123 = !DILocation(line: 506, column: 17, scope: !7060)
!7124 = !DILocation(line: 507, column: 2, scope: !7060)
!7125 = !DILocation(line: 507, column: 5, scope: !7060)
!7126 = !DILocation(line: 507, column: 16, scope: !7060)
!7127 = !DILocation(line: 508, column: 1, scope: !7060)
!7128 = distinct !DISubprogram(name: "serial_icr_write", scope: !3, file: !3, line: 530, type: !4976, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7129 = !DILocalVariable(name: "up", arg: 1, scope: !7128, file: !3, line: 530, type: !206)
!7130 = !DILocation(line: 530, column: 53, scope: !7128)
!7131 = !DILocalVariable(name: "offset", arg: 2, scope: !7128, file: !3, line: 530, type: !239)
!7132 = !DILocation(line: 530, column: 61, scope: !7128)
!7133 = !DILocalVariable(name: "value", arg: 3, scope: !7128, file: !3, line: 530, type: !239)
!7134 = !DILocation(line: 530, column: 73, scope: !7128)
!7135 = !DILocation(line: 532, column: 13, scope: !7128)
!7136 = !DILocation(line: 532, column: 27, scope: !7128)
!7137 = !DILocation(line: 532, column: 2, scope: !7128)
!7138 = !DILocation(line: 533, column: 13, scope: !7128)
!7139 = !DILocation(line: 533, column: 27, scope: !7128)
!7140 = !DILocation(line: 533, column: 2, scope: !7128)
!7141 = !DILocation(line: 534, column: 1, scope: !7128)
!7142 = distinct !DISubprogram(name: "serial8250_tx_threshold_handle_irq", scope: !3, file: !3, line: 1947, type: !289, scopeLine: 1948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7143 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !7144)
!7144 = distinct !DILocation(line: 1958, column: 3, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1953, column: 44)
!7146 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1953, column: 6)
!7147 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !7144)
!7148 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !7149)
!7149 = distinct !DILocation(line: 1956, column: 3, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 1956, column: 3)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1956, column: 3)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1956, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !3, line: 1956, column: 3)
!7154 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1956, column: 3)
!7155 = !DILocalVariable(name: "port", arg: 1, scope: !7142, file: !3, line: 1947, type: !238)
!7156 = !DILocation(line: 1947, column: 65, scope: !7142)
!7157 = !DILocalVariable(name: "flags", scope: !7142, file: !3, line: 1949, type: !230)
!7158 = !DILocation(line: 1949, column: 16, scope: !7142)
!7159 = !DILocalVariable(name: "iir", scope: !7142, file: !3, line: 1950, type: !7)
!7160 = !DILocation(line: 1950, column: 15, scope: !7142)
!7161 = !DILocation(line: 1950, column: 36, scope: !7142)
!7162 = !DILocation(line: 1950, column: 21, scope: !7142)
!7163 = !DILocation(line: 1953, column: 7, scope: !7146)
!7164 = !DILocation(line: 1953, column: 11, scope: !7146)
!7165 = !DILocation(line: 1953, column: 26, scope: !7146)
!7166 = !DILocation(line: 1953, column: 6, scope: !7142)
!7167 = !DILocalVariable(name: "up", scope: !7145, file: !3, line: 1954, type: !206)
!7168 = !DILocation(line: 1954, column: 26, scope: !7145)
!7169 = !DILocation(line: 1954, column: 44, scope: !7145)
!7170 = !DILocation(line: 1954, column: 31, scope: !7145)
!7171 = !DILocation(line: 1956, column: 3, scope: !7145)
!7172 = !DILocation(line: 1956, column: 3, scope: !7154)
!7173 = !DILocalVariable(name: "__dummy", scope: !7174, file: !3, line: 1956, type: !230)
!7174 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1956, column: 3)
!7175 = !DILocation(line: 1956, column: 3, scope: !7174)
!7176 = !DILocalVariable(name: "__dummy2", scope: !7174, file: !3, line: 1956, type: !230)
!7177 = !DILocation(line: 1956, column: 3, scope: !7153)
!7178 = !DILocation(line: 1956, column: 3, scope: !7152)
!7179 = !DILocation(line: 1956, column: 3, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1956, column: 3)
!7181 = !DILocalVariable(name: "__dummy", scope: !7182, file: !3, line: 1956, type: !230)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 1956, column: 3)
!7183 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1956, column: 3)
!7184 = !DILocation(line: 1956, column: 3, scope: !7182)
!7185 = !DILocalVariable(name: "__dummy2", scope: !7182, file: !3, line: 1956, type: !230)
!7186 = !DILocation(line: 1956, column: 3, scope: !7183)
!7187 = !DILocation(line: 1956, column: 3, scope: !7151)
!7188 = !{i32 -2141642378}
!7189 = !DILocation(line: 1956, column: 3, scope: !7150)
!7190 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !7149)
!7191 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !7149)
!7192 = !DILocation(line: 1957, column: 23, scope: !7145)
!7193 = !DILocation(line: 1957, column: 3, scope: !7145)
!7194 = !DILocation(line: 1958, column: 27, scope: !7145)
!7195 = !DILocation(line: 1958, column: 33, scope: !7145)
!7196 = !DILocation(line: 1958, column: 39, scope: !7145)
!7197 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !7144)
!7198 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !7144)
!7199 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !7144)
!7200 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !7144)
!7201 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !7144)
!7202 = !DILocation(line: 1959, column: 2, scope: !7145)
!7203 = !DILocation(line: 1961, column: 23, scope: !7142)
!7204 = !DILocation(line: 1961, column: 8, scope: !7142)
!7205 = !DILocation(line: 1961, column: 6, scope: !7142)
!7206 = !DILocation(line: 1962, column: 31, scope: !7142)
!7207 = !DILocation(line: 1962, column: 37, scope: !7142)
!7208 = !DILocation(line: 1962, column: 9, scope: !7142)
!7209 = !DILocation(line: 1962, column: 2, scope: !7142)
!7210 = distinct !DISubprogram(name: "wait_for_xmitr", scope: !3, file: !3, line: 2055, type: !4864, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7211 = !DILocalVariable(name: "up", arg: 1, scope: !7210, file: !3, line: 2055, type: !206)
!7212 = !DILocation(line: 2055, column: 51, scope: !7210)
!7213 = !DILocalVariable(name: "bits", arg: 2, scope: !7210, file: !3, line: 2055, type: !239)
!7214 = !DILocation(line: 2055, column: 59, scope: !7210)
!7215 = !DILocalVariable(name: "status", scope: !7210, file: !3, line: 2057, type: !7)
!7216 = !DILocation(line: 2057, column: 15, scope: !7210)
!7217 = !DILocalVariable(name: "tmout", scope: !7210, file: !3, line: 2057, type: !7)
!7218 = !DILocation(line: 2057, column: 23, scope: !7210)
!7219 = !DILocation(line: 2060, column: 2, scope: !7210)
!7220 = !DILocation(line: 2061, column: 22, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7222, file: !3, line: 2060, column: 11)
!7222 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 2060, column: 2)
!7223 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 2060, column: 2)
!7224 = !DILocation(line: 2061, column: 12, scope: !7221)
!7225 = !DILocation(line: 2061, column: 10, scope: !7221)
!7226 = !DILocation(line: 2063, column: 26, scope: !7221)
!7227 = !DILocation(line: 2063, column: 33, scope: !7221)
!7228 = !DILocation(line: 2063, column: 3, scope: !7221)
!7229 = !DILocation(line: 2063, column: 7, scope: !7221)
!7230 = !DILocation(line: 2063, column: 23, scope: !7221)
!7231 = !DILocation(line: 2065, column: 8, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2065, column: 7)
!7233 = !DILocation(line: 2065, column: 17, scope: !7232)
!7234 = !DILocation(line: 2065, column: 15, scope: !7232)
!7235 = !DILocation(line: 2065, column: 26, scope: !7232)
!7236 = !DILocation(line: 2065, column: 23, scope: !7232)
!7237 = !DILocation(line: 2065, column: 7, scope: !7221)
!7238 = !DILocation(line: 2066, column: 4, scope: !7232)
!7239 = !DILocation(line: 2067, column: 7, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2067, column: 7)
!7241 = !DILocation(line: 2067, column: 15, scope: !7240)
!7242 = !DILocation(line: 2067, column: 7, scope: !7221)
!7243 = !DILocation(line: 2068, column: 4, scope: !7240)
!7244 = !DILocation(line: 2069, column: 3, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 2069, column: 3)
!7246 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 2069, column: 3)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 2069, column: 3)
!7248 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 2069, column: 3)
!7249 = !DILocation(line: 2070, column: 3, scope: !7221)
!7250 = !DILocation(line: 2060, column: 2, scope: !7222)
!7251 = distinct !{!7251, !7252, !7253}
!7252 = !DILocation(line: 2060, column: 2, scope: !7223)
!7253 = !DILocation(line: 2071, column: 2, scope: !7223)
!7254 = !DILocation(line: 2074, column: 6, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 2074, column: 6)
!7256 = !DILocation(line: 2074, column: 10, scope: !7255)
!7257 = !DILocation(line: 2074, column: 15, scope: !7255)
!7258 = !DILocation(line: 2074, column: 21, scope: !7255)
!7259 = !DILocation(line: 2074, column: 6, scope: !7210)
!7260 = !DILocation(line: 2075, column: 14, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 2075, column: 3)
!7262 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 2074, column: 38)
!7263 = !DILocation(line: 2075, column: 8, scope: !7261)
!7264 = !DILocation(line: 2075, column: 25, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 2075, column: 3)
!7266 = !DILocation(line: 2075, column: 3, scope: !7261)
!7267 = !DILocalVariable(name: "msr", scope: !7268, file: !3, line: 2076, type: !7)
!7268 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 2075, column: 41)
!7269 = !DILocation(line: 2076, column: 17, scope: !7268)
!7270 = !DILocation(line: 2076, column: 33, scope: !7268)
!7271 = !DILocation(line: 2076, column: 23, scope: !7268)
!7272 = !DILocation(line: 2077, column: 27, scope: !7268)
!7273 = !DILocation(line: 2077, column: 31, scope: !7268)
!7274 = !DILocation(line: 2077, column: 4, scope: !7268)
!7275 = !DILocation(line: 2077, column: 8, scope: !7268)
!7276 = !DILocation(line: 2077, column: 24, scope: !7268)
!7277 = !DILocation(line: 2078, column: 8, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 2078, column: 8)
!7279 = !DILocation(line: 2078, column: 12, scope: !7278)
!7280 = !DILocation(line: 2078, column: 8, scope: !7268)
!7281 = !DILocation(line: 2079, column: 5, scope: !7278)
!7282 = !DILocation(line: 2080, column: 4, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2080, column: 4)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 2080, column: 4)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 2080, column: 4)
!7286 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 2080, column: 4)
!7287 = !DILocation(line: 2081, column: 4, scope: !7268)
!7288 = !DILocation(line: 2082, column: 3, scope: !7268)
!7289 = !DILocation(line: 2075, column: 37, scope: !7265)
!7290 = !DILocation(line: 2075, column: 3, scope: !7265)
!7291 = distinct !{!7291, !7266, !7292}
!7292 = !DILocation(line: 2082, column: 3, scope: !7261)
!7293 = !DILocation(line: 2083, column: 2, scope: !7262)
!7294 = !DILocation(line: 2084, column: 1, scope: !7210)
!7295 = distinct !DISubprogram(name: "serial_port_out_sync", scope: !3, file: !3, line: 511, type: !242, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7296 = !DILocalVariable(name: "p", arg: 1, scope: !7295, file: !3, line: 511, type: !238)
!7297 = !DILocation(line: 511, column: 40, scope: !7295)
!7298 = !DILocalVariable(name: "offset", arg: 2, scope: !7295, file: !3, line: 511, type: !239)
!7299 = !DILocation(line: 511, column: 47, scope: !7295)
!7300 = !DILocalVariable(name: "value", arg: 3, scope: !7295, file: !3, line: 511, type: !239)
!7301 = !DILocation(line: 511, column: 59, scope: !7295)
!7302 = !DILocation(line: 513, column: 10, scope: !7295)
!7303 = !DILocation(line: 513, column: 13, scope: !7295)
!7304 = !DILocation(line: 513, column: 2, scope: !7295)
!7305 = !DILocation(line: 519, column: 3, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 513, column: 21)
!7307 = !DILocation(line: 519, column: 6, scope: !7306)
!7308 = !DILocation(line: 519, column: 17, scope: !7306)
!7309 = !DILocation(line: 519, column: 20, scope: !7306)
!7310 = !DILocation(line: 519, column: 28, scope: !7306)
!7311 = !DILocation(line: 520, column: 3, scope: !7306)
!7312 = !DILocation(line: 520, column: 6, scope: !7306)
!7313 = !DILocation(line: 520, column: 16, scope: !7306)
!7314 = !DILocation(line: 521, column: 3, scope: !7306)
!7315 = !DILocation(line: 523, column: 3, scope: !7306)
!7316 = !DILocation(line: 523, column: 6, scope: !7306)
!7317 = !DILocation(line: 523, column: 17, scope: !7306)
!7318 = !DILocation(line: 523, column: 20, scope: !7306)
!7319 = !DILocation(line: 523, column: 28, scope: !7306)
!7320 = !DILocation(line: 524, column: 2, scope: !7306)
!7321 = !DILocation(line: 525, column: 1, scope: !7295)
!7322 = distinct !DISubprogram(name: "serial8250_set_mctrl", scope: !3, file: !3, line: 2028, type: !276, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7323 = !DILocalVariable(name: "port", arg: 1, scope: !7322, file: !3, line: 2028, type: !238)
!7324 = !DILocation(line: 2028, column: 52, scope: !7322)
!7325 = !DILocalVariable(name: "mctrl", arg: 2, scope: !7322, file: !3, line: 2028, type: !7)
!7326 = !DILocation(line: 2028, column: 71, scope: !7322)
!7327 = !DILocation(line: 2030, column: 6, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7322, file: !3, line: 2030, column: 6)
!7329 = !DILocation(line: 2030, column: 12, scope: !7328)
!7330 = !DILocation(line: 2030, column: 6, scope: !7322)
!7331 = !DILocation(line: 2031, column: 3, scope: !7328)
!7332 = !DILocation(line: 2031, column: 9, scope: !7328)
!7333 = !DILocation(line: 2031, column: 19, scope: !7328)
!7334 = !DILocation(line: 2031, column: 25, scope: !7328)
!7335 = !DILocation(line: 2033, column: 27, scope: !7328)
!7336 = !DILocation(line: 2033, column: 33, scope: !7328)
!7337 = !DILocation(line: 2033, column: 3, scope: !7328)
!7338 = !DILocation(line: 2034, column: 1, scope: !7322)
!7339 = distinct !DISubprogram(name: "outb_p", scope: !7340, file: !7340, line: 334, type: !7341, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7340 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!7341 = !DISubroutineType(types: !7342)
!7342 = !{null, !233, !239}
!7343 = !DILocalVariable(name: "value", arg: 1, scope: !7339, file: !7340, line: 334, type: !233)
!7344 = !DILocation(line: 334, column: 1, scope: !7339)
!7345 = !DILocalVariable(name: "port", arg: 2, scope: !7339, file: !7340, line: 334, type: !239)
!7346 = distinct !DISubprogram(name: "inb_p", scope: !7340, file: !7340, line: 334, type: !7347, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7347 = !DISubroutineType(types: !7348)
!7348 = !{!233, !239}
!7349 = !DILocalVariable(name: "port", arg: 1, scope: !7346, file: !7340, line: 334, type: !239)
!7350 = !DILocation(line: 334, column: 1, scope: !7346)
!7351 = !DILocalVariable(name: "value", scope: !7346, file: !7340, line: 334, type: !233)
!7352 = distinct !DISubprogram(name: "serial8250_do_shutdown", scope: !3, file: !3, line: 2433, type: !293, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7353 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !7354)
!7354 = distinct !DILocation(line: 2461, column: 2, scope: !7352)
!7355 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !7354)
!7356 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !7357)
!7357 = distinct !DILocation(line: 2452, column: 2, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 2452, column: 2)
!7359 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 2452, column: 2)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 2452, column: 2)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 2452, column: 2)
!7362 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2452, column: 2)
!7363 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !7364)
!7364 = distinct !DILocation(line: 2445, column: 2, scope: !7352)
!7365 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !7364)
!7366 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !7367)
!7367 = distinct !DILocation(line: 2442, column: 2, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7369, file: !3, line: 2442, column: 2)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 2442, column: 2)
!7370 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2442, column: 2)
!7371 = distinct !DILexicalBlock(scope: !7372, file: !3, line: 2442, column: 2)
!7372 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2442, column: 2)
!7373 = !DILocalVariable(name: "port", arg: 1, scope: !7352, file: !3, line: 2433, type: !238)
!7374 = !DILocation(line: 2433, column: 47, scope: !7352)
!7375 = !DILocalVariable(name: "up", scope: !7352, file: !3, line: 2435, type: !206)
!7376 = !DILocation(line: 2435, column: 25, scope: !7352)
!7377 = !DILocation(line: 2435, column: 43, scope: !7352)
!7378 = !DILocation(line: 2435, column: 30, scope: !7352)
!7379 = !DILocalVariable(name: "flags", scope: !7352, file: !3, line: 2436, type: !230)
!7380 = !DILocation(line: 2436, column: 16, scope: !7352)
!7381 = !DILocation(line: 2438, column: 21, scope: !7352)
!7382 = !DILocation(line: 2438, column: 2, scope: !7352)
!7383 = !DILocation(line: 2442, column: 2, scope: !7352)
!7384 = !DILocation(line: 2442, column: 2, scope: !7372)
!7385 = !DILocalVariable(name: "__dummy", scope: !7386, file: !3, line: 2442, type: !230)
!7386 = distinct !DILexicalBlock(scope: !7371, file: !3, line: 2442, column: 2)
!7387 = !DILocation(line: 2442, column: 2, scope: !7386)
!7388 = !DILocalVariable(name: "__dummy2", scope: !7386, file: !3, line: 2442, type: !230)
!7389 = !DILocation(line: 2442, column: 2, scope: !7371)
!7390 = !DILocation(line: 2442, column: 2, scope: !7370)
!7391 = !DILocation(line: 2442, column: 2, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 2442, column: 2)
!7393 = !DILocalVariable(name: "__dummy", scope: !7394, file: !3, line: 2442, type: !230)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 2442, column: 2)
!7395 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 2442, column: 2)
!7396 = !DILocation(line: 2442, column: 2, scope: !7394)
!7397 = !DILocalVariable(name: "__dummy2", scope: !7394, file: !3, line: 2442, type: !230)
!7398 = !DILocation(line: 2442, column: 2, scope: !7395)
!7399 = !DILocation(line: 2442, column: 2, scope: !7369)
!7400 = !{i32 -2141631997}
!7401 = !DILocation(line: 2442, column: 2, scope: !7368)
!7402 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !7367)
!7403 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !7367)
!7404 = !DILocation(line: 2443, column: 2, scope: !7352)
!7405 = !DILocation(line: 2443, column: 6, scope: !7352)
!7406 = !DILocation(line: 2443, column: 10, scope: !7352)
!7407 = !DILocation(line: 2444, column: 18, scope: !7352)
!7408 = !DILocation(line: 2444, column: 2, scope: !7352)
!7409 = !DILocation(line: 2445, column: 26, scope: !7352)
!7410 = !DILocation(line: 2445, column: 32, scope: !7352)
!7411 = !DILocation(line: 2445, column: 38, scope: !7352)
!7412 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !7364)
!7413 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !7364)
!7414 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !7364)
!7415 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !7364)
!7416 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !7364)
!7417 = !DILocation(line: 2447, column: 18, scope: !7352)
!7418 = !DILocation(line: 2447, column: 24, scope: !7352)
!7419 = !DILocation(line: 2447, column: 2, scope: !7352)
!7420 = !DILocation(line: 2449, column: 6, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2449, column: 6)
!7422 = !DILocation(line: 2449, column: 10, scope: !7421)
!7423 = !DILocation(line: 2449, column: 6, scope: !7352)
!7424 = !DILocation(line: 2450, column: 26, scope: !7421)
!7425 = !DILocation(line: 2450, column: 3, scope: !7421)
!7426 = !DILocation(line: 2452, column: 2, scope: !7352)
!7427 = !DILocation(line: 2452, column: 2, scope: !7362)
!7428 = !DILocalVariable(name: "__dummy", scope: !7429, file: !3, line: 2452, type: !230)
!7429 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 2452, column: 2)
!7430 = !DILocation(line: 2452, column: 2, scope: !7429)
!7431 = !DILocalVariable(name: "__dummy2", scope: !7429, file: !3, line: 2452, type: !230)
!7432 = !DILocation(line: 2452, column: 2, scope: !7361)
!7433 = !DILocation(line: 2452, column: 2, scope: !7360)
!7434 = !DILocation(line: 2452, column: 2, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 2452, column: 2)
!7436 = !DILocalVariable(name: "__dummy", scope: !7437, file: !3, line: 2452, type: !230)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 2452, column: 2)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 2452, column: 2)
!7439 = !DILocation(line: 2452, column: 2, scope: !7437)
!7440 = !DILocalVariable(name: "__dummy2", scope: !7437, file: !3, line: 2452, type: !230)
!7441 = !DILocation(line: 2452, column: 2, scope: !7438)
!7442 = !DILocation(line: 2452, column: 2, scope: !7359)
!7443 = !{i32 -2141630976}
!7444 = !DILocation(line: 2452, column: 2, scope: !7358)
!7445 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !7357)
!7446 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !7357)
!7447 = !DILocation(line: 2453, column: 6, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 2453, column: 6)
!7449 = !DILocation(line: 2453, column: 12, scope: !7448)
!7450 = !DILocation(line: 2453, column: 18, scope: !7448)
!7451 = !DILocation(line: 2453, column: 6, scope: !7352)
!7452 = !DILocation(line: 2455, column: 8, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 2453, column: 34)
!7454 = !DILocation(line: 2455, column: 14, scope: !7453)
!7455 = !DILocation(line: 2455, column: 21, scope: !7453)
!7456 = !DILocation(line: 2455, column: 30, scope: !7453)
!7457 = !DILocation(line: 2455, column: 7, scope: !7453)
!7458 = !DILocation(line: 2455, column: 3, scope: !7453)
!7459 = !DILocation(line: 2456, column: 3, scope: !7453)
!7460 = !DILocation(line: 2456, column: 9, scope: !7453)
!7461 = !DILocation(line: 2456, column: 15, scope: !7453)
!7462 = !DILocation(line: 2457, column: 2, scope: !7453)
!7463 = !DILocation(line: 2458, column: 3, scope: !7448)
!7464 = !DILocation(line: 2458, column: 9, scope: !7448)
!7465 = !DILocation(line: 2458, column: 15, scope: !7448)
!7466 = !DILocation(line: 2460, column: 23, scope: !7352)
!7467 = !DILocation(line: 2460, column: 29, scope: !7352)
!7468 = !DILocation(line: 2460, column: 35, scope: !7352)
!7469 = !DILocation(line: 2460, column: 2, scope: !7352)
!7470 = !DILocation(line: 2461, column: 26, scope: !7352)
!7471 = !DILocation(line: 2461, column: 32, scope: !7352)
!7472 = !DILocation(line: 2461, column: 38, scope: !7352)
!7473 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !7354)
!7474 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !7354)
!7475 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !7354)
!7476 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !7354)
!7477 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !7354)
!7478 = !DILocation(line: 2466, column: 18, scope: !7352)
!7479 = !DILocation(line: 2467, column: 19, scope: !7352)
!7480 = !DILocation(line: 2467, column: 4, scope: !7352)
!7481 = !DILocation(line: 2467, column: 35, scope: !7352)
!7482 = !DILocation(line: 2466, column: 2, scope: !7352)
!7483 = !DILocation(line: 2468, column: 25, scope: !7352)
!7484 = !DILocation(line: 2468, column: 2, scope: !7352)
!7485 = !DILocation(line: 2481, column: 17, scope: !7352)
!7486 = !DILocation(line: 2481, column: 2, scope: !7352)
!7487 = !DILocation(line: 2482, column: 21, scope: !7352)
!7488 = !DILocation(line: 2482, column: 2, scope: !7352)
!7489 = !DILocation(line: 2484, column: 2, scope: !7352)
!7490 = !DILocation(line: 2484, column: 6, scope: !7352)
!7491 = !DILocation(line: 2484, column: 11, scope: !7352)
!7492 = !DILocation(line: 2484, column: 23, scope: !7352)
!7493 = !DILocation(line: 2485, column: 1, scope: !7352)
!7494 = distinct !DISubprogram(name: "inb", scope: !7340, file: !7340, line: 334, type: !7347, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7495 = !DILocalVariable(name: "port", arg: 1, scope: !7494, file: !7340, line: 334, type: !239)
!7496 = !DILocation(line: 334, column: 1, scope: !7494)
!7497 = !DILocalVariable(name: "value", scope: !7494, file: !7340, line: 334, type: !233)
!7498 = !{i32 -2142569433}
!7499 = distinct !DISubprogram(name: "serial8250_do_set_divisor", scope: !3, file: !3, line: 2585, type: !285, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7500 = !DILocalVariable(name: "port", arg: 1, scope: !7499, file: !3, line: 2585, type: !238)
!7501 = !DILocation(line: 2585, column: 50, scope: !7499)
!7502 = !DILocalVariable(name: "baud", arg: 2, scope: !7499, file: !3, line: 2585, type: !7)
!7503 = !DILocation(line: 2585, column: 69, scope: !7499)
!7504 = !DILocalVariable(name: "quot", arg: 3, scope: !7499, file: !3, line: 2586, type: !7)
!7505 = !DILocation(line: 2586, column: 24, scope: !7499)
!7506 = !DILocalVariable(name: "quot_frac", arg: 4, scope: !7499, file: !3, line: 2586, type: !7)
!7507 = !DILocation(line: 2586, column: 43, scope: !7499)
!7508 = !DILocalVariable(name: "up", scope: !7499, file: !3, line: 2588, type: !206)
!7509 = !DILocation(line: 2588, column: 25, scope: !7499)
!7510 = !DILocation(line: 2588, column: 43, scope: !7499)
!7511 = !DILocation(line: 2588, column: 30, scope: !7499)
!7512 = !DILocation(line: 2591, column: 23, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2591, column: 6)
!7514 = !DILocation(line: 2591, column: 6, scope: !7513)
!7515 = !DILocation(line: 2591, column: 6, scope: !7499)
!7516 = !DILocation(line: 2592, column: 7, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 2592, column: 7)
!7518 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 2591, column: 28)
!7519 = !DILocation(line: 2592, column: 12, scope: !7517)
!7520 = !DILocation(line: 2592, column: 7, scope: !7518)
!7521 = !DILocation(line: 2593, column: 9, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 2592, column: 23)
!7523 = !DILocation(line: 2594, column: 20, scope: !7522)
!7524 = !DILocation(line: 2594, column: 4, scope: !7522)
!7525 = !DILocation(line: 2595, column: 3, scope: !7522)
!7526 = !DILocation(line: 2596, column: 20, scope: !7517)
!7527 = !DILocation(line: 2596, column: 4, scope: !7517)
!7528 = !DILocation(line: 2597, column: 2, scope: !7518)
!7529 = !DILocation(line: 2603, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2603, column: 6)
!7531 = !DILocation(line: 2603, column: 10, scope: !7530)
!7532 = !DILocation(line: 2603, column: 23, scope: !7530)
!7533 = !DILocation(line: 2603, column: 6, scope: !7499)
!7534 = !DILocation(line: 2604, column: 19, scope: !7530)
!7535 = !DILocation(line: 2604, column: 3, scope: !7530)
!7536 = !DILocation(line: 2606, column: 19, scope: !7530)
!7537 = !DILocation(line: 2606, column: 35, scope: !7530)
!7538 = !DILocation(line: 2606, column: 39, scope: !7530)
!7539 = !DILocation(line: 2606, column: 43, scope: !7530)
!7540 = !DILocation(line: 2606, column: 3, scope: !7530)
!7541 = !DILocation(line: 2608, column: 18, scope: !7499)
!7542 = !DILocation(line: 2608, column: 22, scope: !7499)
!7543 = !DILocation(line: 2608, column: 2, scope: !7499)
!7544 = !DILocation(line: 2609, column: 1, scope: !7499)
!7545 = distinct !DISubprogram(name: "is_omap1510_8250", scope: !4532, file: !4532, line: 298, type: !4536, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7546 = !DILocalVariable(name: "pt", arg: 1, scope: !7545, file: !4532, line: 298, type: !206)
!7547 = !DILocation(line: 298, column: 59, scope: !7545)
!7548 = !DILocation(line: 300, column: 2, scope: !7545)
!7549 = distinct !DISubprogram(name: "serial_dl_write", scope: !4532, file: !4532, line: 128, type: !4864, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7550 = !DILocalVariable(name: "up", arg: 1, scope: !7549, file: !4532, line: 128, type: !206)
!7551 = !DILocation(line: 128, column: 59, scope: !7549)
!7552 = !DILocalVariable(name: "value", arg: 2, scope: !7549, file: !4532, line: 128, type: !239)
!7553 = !DILocation(line: 128, column: 67, scope: !7549)
!7554 = !DILocation(line: 130, column: 2, scope: !7549)
!7555 = !DILocation(line: 130, column: 6, scope: !7549)
!7556 = !DILocation(line: 130, column: 15, scope: !7549)
!7557 = !DILocation(line: 130, column: 19, scope: !7549)
!7558 = !DILocation(line: 131, column: 1, scope: !7549)
!7559 = distinct !DISubprogram(name: "serial8250_update_uartclk", scope: !3, file: !3, line: 2643, type: !276, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7560 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !7561)
!7561 = distinct !DILocation(line: 2673, column: 2, scope: !7559)
!7562 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !7561)
!7563 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !7564)
!7564 = distinct !DILocation(line: 2666, column: 2, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 2666, column: 2)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 2666, column: 2)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 2666, column: 2)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 2666, column: 2)
!7569 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2666, column: 2)
!7570 = !DILocalVariable(name: "port", arg: 1, scope: !7559, file: !3, line: 2643, type: !238)
!7571 = !DILocation(line: 2643, column: 50, scope: !7559)
!7572 = !DILocalVariable(name: "uartclk", arg: 2, scope: !7559, file: !3, line: 2643, type: !7)
!7573 = !DILocation(line: 2643, column: 69, scope: !7559)
!7574 = !DILocalVariable(name: "up", scope: !7559, file: !3, line: 2645, type: !206)
!7575 = !DILocation(line: 2645, column: 25, scope: !7559)
!7576 = !DILocation(line: 2645, column: 43, scope: !7559)
!7577 = !DILocation(line: 2645, column: 30, scope: !7559)
!7578 = !DILocalVariable(name: "baud", scope: !7559, file: !3, line: 2646, type: !7)
!7579 = !DILocation(line: 2646, column: 15, scope: !7559)
!7580 = !DILocalVariable(name: "quot", scope: !7559, file: !3, line: 2646, type: !7)
!7581 = !DILocation(line: 2646, column: 21, scope: !7559)
!7582 = !DILocalVariable(name: "frac", scope: !7559, file: !3, line: 2646, type: !7)
!7583 = !DILocation(line: 2646, column: 27, scope: !7559)
!7584 = !DILocalVariable(name: "termios", scope: !7559, file: !3, line: 2647, type: !248)
!7585 = !DILocation(line: 2647, column: 19, scope: !7559)
!7586 = !DILocalVariable(name: "flags", scope: !7559, file: !3, line: 2648, type: !230)
!7587 = !DILocation(line: 2648, column: 16, scope: !7559)
!7588 = !DILocation(line: 2650, column: 14, scope: !7559)
!7589 = !DILocation(line: 2650, column: 20, scope: !7559)
!7590 = !DILocation(line: 2650, column: 27, scope: !7559)
!7591 = !DILocation(line: 2650, column: 32, scope: !7559)
!7592 = !DILocation(line: 2650, column: 2, scope: !7559)
!7593 = !DILocation(line: 2652, column: 6, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2652, column: 6)
!7595 = !DILocation(line: 2652, column: 12, scope: !7594)
!7596 = !DILocation(line: 2652, column: 23, scope: !7594)
!7597 = !DILocation(line: 2652, column: 20, scope: !7594)
!7598 = !DILocation(line: 2652, column: 6, scope: !7559)
!7599 = !DILocation(line: 2653, column: 3, scope: !7594)
!7600 = !DILocation(line: 2655, column: 18, scope: !7559)
!7601 = !DILocation(line: 2655, column: 2, scope: !7559)
!7602 = !DILocation(line: 2655, column: 8, scope: !7559)
!7603 = !DILocation(line: 2655, column: 16, scope: !7559)
!7604 = !DILocation(line: 2657, column: 29, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 2657, column: 6)
!7606 = !DILocation(line: 2657, column: 35, scope: !7605)
!7607 = !DILocation(line: 2657, column: 42, scope: !7605)
!7608 = !DILocation(line: 2657, column: 7, scope: !7605)
!7609 = !DILocation(line: 2657, column: 6, scope: !7559)
!7610 = !DILocation(line: 2658, column: 3, scope: !7605)
!7611 = !DILocation(line: 2660, column: 13, scope: !7559)
!7612 = !DILocation(line: 2660, column: 19, scope: !7559)
!7613 = !DILocation(line: 2660, column: 26, scope: !7559)
!7614 = !DILocation(line: 2660, column: 31, scope: !7559)
!7615 = !DILocation(line: 2660, column: 36, scope: !7559)
!7616 = !DILocation(line: 2660, column: 10, scope: !7559)
!7617 = !DILocation(line: 2662, column: 34, scope: !7559)
!7618 = !DILocation(line: 2662, column: 40, scope: !7559)
!7619 = !DILocation(line: 2662, column: 9, scope: !7559)
!7620 = !DILocation(line: 2662, column: 7, scope: !7559)
!7621 = !DILocation(line: 2663, column: 32, scope: !7559)
!7622 = !DILocation(line: 2663, column: 38, scope: !7559)
!7623 = !DILocation(line: 2663, column: 9, scope: !7559)
!7624 = !DILocation(line: 2663, column: 7, scope: !7559)
!7625 = !DILocation(line: 2665, column: 21, scope: !7559)
!7626 = !DILocation(line: 2665, column: 2, scope: !7559)
!7627 = !DILocation(line: 2666, column: 2, scope: !7559)
!7628 = !DILocation(line: 2666, column: 2, scope: !7569)
!7629 = !DILocalVariable(name: "__dummy", scope: !7630, file: !3, line: 2666, type: !230)
!7630 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 2666, column: 2)
!7631 = !DILocation(line: 2666, column: 2, scope: !7630)
!7632 = !DILocalVariable(name: "__dummy2", scope: !7630, file: !3, line: 2666, type: !230)
!7633 = !DILocation(line: 2666, column: 2, scope: !7568)
!7634 = !DILocation(line: 2666, column: 2, scope: !7567)
!7635 = !DILocation(line: 2666, column: 2, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 2666, column: 2)
!7637 = !DILocalVariable(name: "__dummy", scope: !7638, file: !3, line: 2666, type: !230)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 2666, column: 2)
!7639 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 2666, column: 2)
!7640 = !DILocation(line: 2666, column: 2, scope: !7638)
!7641 = !DILocalVariable(name: "__dummy2", scope: !7638, file: !3, line: 2666, type: !230)
!7642 = !DILocation(line: 2666, column: 2, scope: !7639)
!7643 = !DILocation(line: 2666, column: 2, scope: !7566)
!7644 = !{i32 -2141628922}
!7645 = !DILocation(line: 2666, column: 2, scope: !7565)
!7646 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !7564)
!7647 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !7564)
!7648 = !DILocation(line: 2668, column: 22, scope: !7559)
!7649 = !DILocation(line: 2668, column: 28, scope: !7559)
!7650 = !DILocation(line: 2668, column: 37, scope: !7559)
!7651 = !DILocation(line: 2668, column: 46, scope: !7559)
!7652 = !DILocation(line: 2668, column: 2, scope: !7559)
!7653 = !DILocation(line: 2670, column: 25, scope: !7559)
!7654 = !DILocation(line: 2670, column: 31, scope: !7559)
!7655 = !DILocation(line: 2670, column: 37, scope: !7559)
!7656 = !DILocation(line: 2670, column: 43, scope: !7559)
!7657 = !DILocation(line: 2670, column: 2, scope: !7559)
!7658 = !DILocation(line: 2671, column: 18, scope: !7559)
!7659 = !DILocation(line: 2671, column: 34, scope: !7559)
!7660 = !DILocation(line: 2671, column: 38, scope: !7559)
!7661 = !DILocation(line: 2671, column: 2, scope: !7559)
!7662 = !DILocation(line: 2673, column: 26, scope: !7559)
!7663 = !DILocation(line: 2673, column: 32, scope: !7559)
!7664 = !DILocation(line: 2673, column: 38, scope: !7559)
!7665 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !7561)
!7666 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !7561)
!7667 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !7561)
!7668 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !7561)
!7669 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !7561)
!7670 = !DILocation(line: 2674, column: 21, scope: !7559)
!7671 = !DILocation(line: 2674, column: 2, scope: !7559)
!7672 = !DILabel(scope: !7559, name: "out_lock", file: !3, line: 2676)
!7673 = !DILocation(line: 2676, column: 1, scope: !7559)
!7674 = !DILocation(line: 2677, column: 16, scope: !7559)
!7675 = !DILocation(line: 2677, column: 22, scope: !7559)
!7676 = !DILocation(line: 2677, column: 29, scope: !7559)
!7677 = !DILocation(line: 2677, column: 34, scope: !7559)
!7678 = !DILocation(line: 2677, column: 2, scope: !7559)
!7679 = !DILocation(line: 2678, column: 1, scope: !7559)
!7680 = distinct !DISubprogram(name: "tty_port_initialized", scope: !348, file: !348, line: 664, type: !7681, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7681 = !DISubroutineType(types: !7682)
!7682 = !{!688, !4056}
!7683 = !DILocalVariable(name: "port", arg: 1, scope: !7680, file: !348, line: 664, type: !4056)
!7684 = !DILocation(line: 664, column: 58, scope: !7680)
!7685 = !DILocation(line: 666, column: 41, scope: !7680)
!7686 = !DILocation(line: 666, column: 47, scope: !7680)
!7687 = !DILocation(line: 666, column: 9, scope: !7680)
!7688 = !DILocation(line: 666, column: 2, scope: !7680)
!7689 = distinct !DISubprogram(name: "serial8250_get_baud_rate", scope: !3, file: !3, line: 2621, type: !7690, scopeLine: 2624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{!7, !238, !248, !248}
!7692 = !DILocalVariable(name: "port", arg: 1, scope: !7689, file: !3, line: 2621, type: !238)
!7693 = !DILocation(line: 2621, column: 64, scope: !7689)
!7694 = !DILocalVariable(name: "termios", arg: 2, scope: !7689, file: !3, line: 2622, type: !248)
!7695 = !DILocation(line: 2622, column: 28, scope: !7689)
!7696 = !DILocalVariable(name: "old", arg: 3, scope: !7689, file: !3, line: 2623, type: !248)
!7697 = !DILocation(line: 2623, column: 28, scope: !7689)
!7698 = !DILocalVariable(name: "tolerance", scope: !7689, file: !3, line: 2625, type: !7)
!7699 = !DILocation(line: 2625, column: 15, scope: !7689)
!7700 = !DILocation(line: 2625, column: 27, scope: !7689)
!7701 = !DILocation(line: 2625, column: 33, scope: !7689)
!7702 = !DILocation(line: 2625, column: 41, scope: !7689)
!7703 = !DILocation(line: 2633, column: 28, scope: !7689)
!7704 = !DILocation(line: 2633, column: 34, scope: !7689)
!7705 = !DILocation(line: 2633, column: 43, scope: !7689)
!7706 = !DILocation(line: 2634, column: 7, scope: !7689)
!7707 = !DILocation(line: 2634, column: 13, scope: !7689)
!7708 = !DILocation(line: 2634, column: 21, scope: !7689)
!7709 = !DILocation(line: 2634, column: 26, scope: !7689)
!7710 = !DILocation(line: 2635, column: 8, scope: !7689)
!7711 = !DILocation(line: 2635, column: 14, scope: !7689)
!7712 = !DILocation(line: 2635, column: 24, scope: !7689)
!7713 = !DILocation(line: 2635, column: 22, scope: !7689)
!7714 = !DILocation(line: 2635, column: 35, scope: !7689)
!7715 = !DILocation(line: 2633, column: 9, scope: !7689)
!7716 = !DILocation(line: 2633, column: 2, scope: !7689)
!7717 = distinct !DISubprogram(name: "serial8250_get_divisor", scope: !3, file: !3, line: 2537, type: !280, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7718 = !DILocalVariable(name: "port", arg: 1, scope: !7717, file: !3, line: 2537, type: !238)
!7719 = !DILocation(line: 2537, column: 62, scope: !7717)
!7720 = !DILocalVariable(name: "baud", arg: 2, scope: !7717, file: !3, line: 2538, type: !7)
!7721 = !DILocation(line: 2538, column: 22, scope: !7717)
!7722 = !DILocalVariable(name: "frac", arg: 3, scope: !7717, file: !3, line: 2539, type: !282)
!7723 = !DILocation(line: 2539, column: 23, scope: !7717)
!7724 = !DILocation(line: 2541, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2541, column: 6)
!7726 = !DILocation(line: 2541, column: 12, scope: !7725)
!7727 = !DILocation(line: 2541, column: 6, scope: !7717)
!7728 = !DILocation(line: 2542, column: 10, scope: !7725)
!7729 = !DILocation(line: 2542, column: 16, scope: !7725)
!7730 = !DILocation(line: 2542, column: 28, scope: !7725)
!7731 = !DILocation(line: 2542, column: 34, scope: !7725)
!7732 = !DILocation(line: 2542, column: 40, scope: !7725)
!7733 = !DILocation(line: 2542, column: 3, scope: !7725)
!7734 = !DILocation(line: 2544, column: 35, scope: !7717)
!7735 = !DILocation(line: 2544, column: 41, scope: !7717)
!7736 = !DILocation(line: 2544, column: 47, scope: !7717)
!7737 = !DILocation(line: 2544, column: 9, scope: !7717)
!7738 = !DILocation(line: 2544, column: 2, scope: !7717)
!7739 = !DILocation(line: 2545, column: 1, scope: !7717)
!7740 = distinct !DISubprogram(name: "serial8250_set_divisor", scope: !3, file: !3, line: 2612, type: !285, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7741 = !DILocalVariable(name: "port", arg: 1, scope: !7740, file: !3, line: 2612, type: !238)
!7742 = !DILocation(line: 2612, column: 54, scope: !7740)
!7743 = !DILocalVariable(name: "baud", arg: 2, scope: !7740, file: !3, line: 2612, type: !7)
!7744 = !DILocation(line: 2612, column: 73, scope: !7740)
!7745 = !DILocalVariable(name: "quot", arg: 3, scope: !7740, file: !3, line: 2613, type: !7)
!7746 = !DILocation(line: 2613, column: 21, scope: !7740)
!7747 = !DILocalVariable(name: "quot_frac", arg: 4, scope: !7740, file: !3, line: 2613, type: !7)
!7748 = !DILocation(line: 2613, column: 40, scope: !7740)
!7749 = !DILocation(line: 2615, column: 6, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2615, column: 6)
!7751 = !DILocation(line: 2615, column: 12, scope: !7750)
!7752 = !DILocation(line: 2615, column: 6, scope: !7740)
!7753 = !DILocation(line: 2616, column: 3, scope: !7750)
!7754 = !DILocation(line: 2616, column: 9, scope: !7750)
!7755 = !DILocation(line: 2616, column: 21, scope: !7750)
!7756 = !DILocation(line: 2616, column: 27, scope: !7750)
!7757 = !DILocation(line: 2616, column: 33, scope: !7750)
!7758 = !DILocation(line: 2616, column: 39, scope: !7750)
!7759 = !DILocation(line: 2618, column: 29, scope: !7750)
!7760 = !DILocation(line: 2618, column: 35, scope: !7750)
!7761 = !DILocation(line: 2618, column: 41, scope: !7750)
!7762 = !DILocation(line: 2618, column: 47, scope: !7750)
!7763 = !DILocation(line: 2618, column: 3, scope: !7750)
!7764 = !DILocation(line: 2619, column: 1, scope: !7740)
!7765 = distinct !DISubprogram(name: "serial8250_do_set_termios", scope: !3, file: !3, line: 2682, type: !246, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!7766 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !7767)
!7767 = distinct !DILocation(line: 2810, column: 2, scope: !7765)
!7768 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !7767)
!7769 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !7770)
!7770 = distinct !DILocation(line: 2706, column: 2, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2706, column: 2)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2706, column: 2)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 2706, column: 2)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 2706, column: 2)
!7775 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2706, column: 2)
!7776 = !DILocalVariable(name: "port", arg: 1, scope: !7765, file: !3, line: 2682, type: !238)
!7777 = !DILocation(line: 2682, column: 45, scope: !7765)
!7778 = !DILocalVariable(name: "termios", arg: 2, scope: !7765, file: !3, line: 2682, type: !248)
!7779 = !DILocation(line: 2682, column: 68, scope: !7765)
!7780 = !DILocalVariable(name: "old", arg: 3, scope: !7765, file: !3, line: 2683, type: !248)
!7781 = !DILocation(line: 2683, column: 23, scope: !7765)
!7782 = !DILocalVariable(name: "up", scope: !7765, file: !3, line: 2685, type: !206)
!7783 = !DILocation(line: 2685, column: 25, scope: !7765)
!7784 = !DILocation(line: 2685, column: 43, scope: !7765)
!7785 = !DILocation(line: 2685, column: 30, scope: !7765)
!7786 = !DILocalVariable(name: "cval", scope: !7765, file: !3, line: 2686, type: !233)
!7787 = !DILocation(line: 2686, column: 16, scope: !7765)
!7788 = !DILocalVariable(name: "flags", scope: !7765, file: !3, line: 2687, type: !230)
!7789 = !DILocation(line: 2687, column: 16, scope: !7765)
!7790 = !DILocalVariable(name: "baud", scope: !7765, file: !3, line: 2688, type: !7)
!7791 = !DILocation(line: 2688, column: 15, scope: !7765)
!7792 = !DILocalVariable(name: "quot", scope: !7765, file: !3, line: 2688, type: !7)
!7793 = !DILocation(line: 2688, column: 21, scope: !7765)
!7794 = !DILocalVariable(name: "frac", scope: !7765, file: !3, line: 2688, type: !7)
!7795 = !DILocation(line: 2688, column: 27, scope: !7765)
!7796 = !DILocation(line: 2690, column: 6, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2690, column: 6)
!7798 = !DILocation(line: 2690, column: 10, scope: !7797)
!7799 = !DILocation(line: 2690, column: 23, scope: !7797)
!7800 = !DILocation(line: 2690, column: 6, scope: !7765)
!7801 = !DILocation(line: 2691, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2690, column: 40)
!7803 = !DILocation(line: 2691, column: 12, scope: !7802)
!7804 = !DILocation(line: 2691, column: 20, scope: !7802)
!7805 = !DILocation(line: 2692, column: 8, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2692, column: 7)
!7807 = !DILocation(line: 2692, column: 17, scope: !7806)
!7808 = !DILocation(line: 2692, column: 25, scope: !7806)
!7809 = !DILocation(line: 2692, column: 34, scope: !7806)
!7810 = !DILocation(line: 2692, column: 41, scope: !7806)
!7811 = !DILocation(line: 2693, column: 8, scope: !7806)
!7812 = !DILocation(line: 2693, column: 17, scope: !7806)
!7813 = !DILocation(line: 2693, column: 25, scope: !7806)
!7814 = !DILocation(line: 2693, column: 34, scope: !7806)
!7815 = !DILocation(line: 2692, column: 7, scope: !7802)
!7816 = !DILocation(line: 2694, column: 24, scope: !7806)
!7817 = !DILocation(line: 2694, column: 33, scope: !7806)
!7818 = !DILocation(line: 2694, column: 41, scope: !7806)
!7819 = !DILocation(line: 2694, column: 51, scope: !7806)
!7820 = !DILocation(line: 2694, column: 4, scope: !7806)
!7821 = !DILocation(line: 2694, column: 13, scope: !7806)
!7822 = !DILocation(line: 2694, column: 21, scope: !7806)
!7823 = !DILocation(line: 2695, column: 2, scope: !7802)
!7824 = !DILocation(line: 2696, column: 32, scope: !7765)
!7825 = !DILocation(line: 2696, column: 36, scope: !7765)
!7826 = !DILocation(line: 2696, column: 45, scope: !7765)
!7827 = !DILocation(line: 2696, column: 9, scope: !7765)
!7828 = !DILocation(line: 2696, column: 7, scope: !7765)
!7829 = !DILocation(line: 2698, column: 34, scope: !7765)
!7830 = !DILocation(line: 2698, column: 40, scope: !7765)
!7831 = !DILocation(line: 2698, column: 49, scope: !7765)
!7832 = !DILocation(line: 2698, column: 9, scope: !7765)
!7833 = !DILocation(line: 2698, column: 7, scope: !7765)
!7834 = !DILocation(line: 2699, column: 32, scope: !7765)
!7835 = !DILocation(line: 2699, column: 38, scope: !7765)
!7836 = !DILocation(line: 2699, column: 9, scope: !7765)
!7837 = !DILocation(line: 2699, column: 7, scope: !7765)
!7838 = !DILocation(line: 2705, column: 21, scope: !7765)
!7839 = !DILocation(line: 2705, column: 2, scope: !7765)
!7840 = !DILocation(line: 2706, column: 2, scope: !7765)
!7841 = !DILocation(line: 2706, column: 2, scope: !7775)
!7842 = !DILocalVariable(name: "__dummy", scope: !7843, file: !3, line: 2706, type: !230)
!7843 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 2706, column: 2)
!7844 = !DILocation(line: 2706, column: 2, scope: !7843)
!7845 = !DILocalVariable(name: "__dummy2", scope: !7843, file: !3, line: 2706, type: !230)
!7846 = !DILocation(line: 2706, column: 2, scope: !7774)
!7847 = !DILocation(line: 2706, column: 2, scope: !7773)
!7848 = !DILocation(line: 2706, column: 2, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2706, column: 2)
!7850 = !DILocalVariable(name: "__dummy", scope: !7851, file: !3, line: 2706, type: !230)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 2706, column: 2)
!7852 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 2706, column: 2)
!7853 = !DILocation(line: 2706, column: 2, scope: !7851)
!7854 = !DILocalVariable(name: "__dummy2", scope: !7851, file: !3, line: 2706, type: !230)
!7855 = !DILocation(line: 2706, column: 2, scope: !7852)
!7856 = !DILocation(line: 2706, column: 2, scope: !7772)
!7857 = !{i32 -2141627689}
!7858 = !DILocation(line: 2706, column: 2, scope: !7771)
!7859 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !7770)
!7860 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !7770)
!7861 = !DILocation(line: 2708, column: 12, scope: !7765)
!7862 = !DILocation(line: 2708, column: 2, scope: !7765)
!7863 = !DILocation(line: 2708, column: 6, scope: !7765)
!7864 = !DILocation(line: 2708, column: 10, scope: !7765)
!7865 = !DILocation(line: 2710, column: 6, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2710, column: 6)
!7867 = !DILocation(line: 2710, column: 10, scope: !7866)
!7868 = !DILocation(line: 2710, column: 23, scope: !7866)
!7869 = !DILocation(line: 2710, column: 39, scope: !7866)
!7870 = !DILocation(line: 2710, column: 42, scope: !7866)
!7871 = !DILocation(line: 2710, column: 48, scope: !7866)
!7872 = !DILocation(line: 2710, column: 57, scope: !7866)
!7873 = !DILocation(line: 2710, column: 6, scope: !7765)
!7874 = !DILocation(line: 2712, column: 8, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 2712, column: 7)
!7876 = distinct !DILexicalBlock(scope: !7866, file: !3, line: 2710, column: 62)
!7877 = !DILocation(line: 2712, column: 13, scope: !7875)
!7878 = !DILocation(line: 2712, column: 20, scope: !7875)
!7879 = !DILocation(line: 2712, column: 24, scope: !7875)
!7880 = !DILocation(line: 2712, column: 28, scope: !7875)
!7881 = !DILocation(line: 2712, column: 33, scope: !7875)
!7882 = !DILocation(line: 2712, column: 36, scope: !7875)
!7883 = !DILocation(line: 2712, column: 40, scope: !7875)
!7884 = !DILocation(line: 2712, column: 7, scope: !7876)
!7885 = !DILocation(line: 2713, column: 4, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 2712, column: 50)
!7887 = !DILocation(line: 2713, column: 8, scope: !7886)
!7888 = !DILocation(line: 2713, column: 12, scope: !7886)
!7889 = !DILocation(line: 2714, column: 4, scope: !7886)
!7890 = !DILocation(line: 2714, column: 8, scope: !7886)
!7891 = !DILocation(line: 2714, column: 12, scope: !7886)
!7892 = !DILocation(line: 2715, column: 3, scope: !7886)
!7893 = !DILocation(line: 2716, column: 2, scope: !7876)
!7894 = !DILocation(line: 2723, column: 6, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2723, column: 6)
!7896 = !DILocation(line: 2723, column: 10, scope: !7895)
!7897 = !DILocation(line: 2723, column: 23, scope: !7895)
!7898 = !DILocation(line: 2723, column: 6, scope: !7765)
!7899 = !DILocation(line: 2724, column: 3, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 2723, column: 39)
!7901 = !DILocation(line: 2724, column: 7, scope: !7900)
!7902 = !DILocation(line: 2724, column: 11, scope: !7900)
!7903 = !DILocation(line: 2725, column: 7, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 2725, column: 7)
!7905 = !DILocation(line: 2725, column: 16, scope: !7904)
!7906 = !DILocation(line: 2725, column: 24, scope: !7904)
!7907 = !DILocation(line: 2725, column: 7, scope: !7900)
!7908 = !DILocation(line: 2726, column: 4, scope: !7904)
!7909 = !DILocation(line: 2726, column: 8, scope: !7904)
!7910 = !DILocation(line: 2726, column: 12, scope: !7904)
!7911 = !DILocation(line: 2727, column: 2, scope: !7900)
!7912 = !DILocation(line: 2732, column: 22, scope: !7765)
!7913 = !DILocation(line: 2732, column: 28, scope: !7765)
!7914 = !DILocation(line: 2732, column: 37, scope: !7765)
!7915 = !DILocation(line: 2732, column: 46, scope: !7765)
!7916 = !DILocation(line: 2732, column: 2, scope: !7765)
!7917 = !DILocation(line: 2734, column: 2, scope: !7765)
!7918 = !DILocation(line: 2734, column: 8, scope: !7765)
!7919 = !DILocation(line: 2734, column: 25, scope: !7765)
!7920 = !DILocation(line: 2735, column: 6, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2735, column: 6)
!7922 = !DILocation(line: 2735, column: 15, scope: !7921)
!7923 = !DILocation(line: 2735, column: 23, scope: !7921)
!7924 = !DILocation(line: 2735, column: 6, scope: !7765)
!7925 = !DILocation(line: 2736, column: 3, scope: !7921)
!7926 = !DILocation(line: 2736, column: 9, scope: !7921)
!7927 = !DILocation(line: 2736, column: 26, scope: !7921)
!7928 = !DILocation(line: 2737, column: 6, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2737, column: 6)
!7930 = !DILocation(line: 2737, column: 15, scope: !7929)
!7931 = !DILocation(line: 2737, column: 23, scope: !7929)
!7932 = !DILocation(line: 2737, column: 6, scope: !7765)
!7933 = !DILocation(line: 2738, column: 3, scope: !7929)
!7934 = !DILocation(line: 2738, column: 9, scope: !7929)
!7935 = !DILocation(line: 2738, column: 26, scope: !7929)
!7936 = !DILocation(line: 2743, column: 2, scope: !7765)
!7937 = !DILocation(line: 2743, column: 8, scope: !7765)
!7938 = !DILocation(line: 2743, column: 27, scope: !7765)
!7939 = !DILocation(line: 2744, column: 6, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2744, column: 6)
!7941 = !DILocation(line: 2744, column: 15, scope: !7940)
!7942 = !DILocation(line: 2744, column: 23, scope: !7940)
!7943 = !DILocation(line: 2744, column: 6, scope: !7765)
!7944 = !DILocation(line: 2745, column: 3, scope: !7940)
!7945 = !DILocation(line: 2745, column: 9, scope: !7940)
!7946 = !DILocation(line: 2745, column: 28, scope: !7940)
!7947 = !DILocation(line: 2746, column: 6, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2746, column: 6)
!7949 = !DILocation(line: 2746, column: 15, scope: !7948)
!7950 = !DILocation(line: 2746, column: 23, scope: !7948)
!7951 = !DILocation(line: 2746, column: 6, scope: !7765)
!7952 = !DILocation(line: 2747, column: 3, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 2746, column: 33)
!7954 = !DILocation(line: 2747, column: 9, scope: !7953)
!7955 = !DILocation(line: 2747, column: 28, scope: !7953)
!7956 = !DILocation(line: 2752, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7953, file: !3, line: 2752, column: 7)
!7958 = !DILocation(line: 2752, column: 16, scope: !7957)
!7959 = !DILocation(line: 2752, column: 24, scope: !7957)
!7960 = !DILocation(line: 2752, column: 7, scope: !7953)
!7961 = !DILocation(line: 2753, column: 4, scope: !7957)
!7962 = !DILocation(line: 2753, column: 10, scope: !7957)
!7963 = !DILocation(line: 2753, column: 29, scope: !7957)
!7964 = !DILocation(line: 2754, column: 2, scope: !7953)
!7965 = !DILocation(line: 2759, column: 7, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2759, column: 6)
!7967 = !DILocation(line: 2759, column: 16, scope: !7966)
!7968 = !DILocation(line: 2759, column: 24, scope: !7966)
!7969 = !DILocation(line: 2759, column: 33, scope: !7966)
!7970 = !DILocation(line: 2759, column: 6, scope: !7765)
!7971 = !DILocation(line: 2760, column: 3, scope: !7966)
!7972 = !DILocation(line: 2760, column: 9, scope: !7966)
!7973 = !DILocation(line: 2760, column: 28, scope: !7966)
!7974 = !DILocation(line: 2765, column: 2, scope: !7765)
!7975 = !DILocation(line: 2765, column: 6, scope: !7765)
!7976 = !DILocation(line: 2765, column: 10, scope: !7765)
!7977 = !DILocation(line: 2766, column: 8, scope: !7978)
!7978 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2766, column: 6)
!7979 = !DILocation(line: 2766, column: 12, scope: !7978)
!7980 = !DILocation(line: 2766, column: 17, scope: !7978)
!7981 = !DILocation(line: 2766, column: 35, scope: !7978)
!7982 = !DILocation(line: 2767, column: 4, scope: !7978)
!7983 = !DILocation(line: 2766, column: 6, scope: !7765)
!7984 = !DILocation(line: 2768, column: 3, scope: !7978)
!7985 = !DILocation(line: 2768, column: 7, scope: !7978)
!7986 = !DILocation(line: 2768, column: 11, scope: !7978)
!7987 = !DILocation(line: 2769, column: 6, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2769, column: 6)
!7989 = !DILocation(line: 2769, column: 10, scope: !7988)
!7990 = !DILocation(line: 2769, column: 23, scope: !7988)
!7991 = !DILocation(line: 2769, column: 6, scope: !7765)
!7992 = !DILocation(line: 2770, column: 3, scope: !7988)
!7993 = !DILocation(line: 2770, column: 7, scope: !7988)
!7994 = !DILocation(line: 2770, column: 11, scope: !7988)
!7995 = !DILocation(line: 2771, column: 6, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2771, column: 6)
!7997 = !DILocation(line: 2771, column: 10, scope: !7996)
!7998 = !DILocation(line: 2771, column: 23, scope: !7996)
!7999 = !DILocation(line: 2771, column: 6, scope: !7765)
!8000 = !DILocation(line: 2772, column: 3, scope: !7996)
!8001 = !DILocation(line: 2772, column: 7, scope: !7996)
!8002 = !DILocation(line: 2772, column: 11, scope: !7996)
!8003 = !DILocation(line: 2774, column: 18, scope: !7765)
!8004 = !DILocation(line: 2774, column: 34, scope: !7765)
!8005 = !DILocation(line: 2774, column: 38, scope: !7765)
!8006 = !DILocation(line: 2774, column: 2, scope: !7765)
!8007 = !DILocation(line: 2776, column: 6, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2776, column: 6)
!8009 = !DILocation(line: 2776, column: 10, scope: !8008)
!8010 = !DILocation(line: 2776, column: 23, scope: !8008)
!8011 = !DILocation(line: 2776, column: 6, scope: !7765)
!8012 = !DILocalVariable(name: "efr", scope: !8013, file: !3, line: 2777, type: !233)
!8013 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2776, column: 39)
!8014 = !DILocation(line: 2777, column: 17, scope: !8013)
!8015 = !DILocation(line: 2783, column: 7, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2783, column: 7)
!8017 = !DILocation(line: 2783, column: 16, scope: !8016)
!8018 = !DILocation(line: 2783, column: 24, scope: !8016)
!8019 = !DILocation(line: 2783, column: 7, scope: !8013)
!8020 = !DILocation(line: 2784, column: 8, scope: !8016)
!8021 = !DILocation(line: 2784, column: 4, scope: !8016)
!8022 = !DILocation(line: 2786, column: 19, scope: !8013)
!8023 = !DILocation(line: 2786, column: 3, scope: !8013)
!8024 = !DILocation(line: 2787, column: 7, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2787, column: 7)
!8026 = !DILocation(line: 2787, column: 13, scope: !8025)
!8027 = !DILocation(line: 2787, column: 19, scope: !8025)
!8028 = !DILocation(line: 2787, column: 7, scope: !8013)
!8029 = !DILocation(line: 2788, column: 20, scope: !8025)
!8030 = !DILocation(line: 2788, column: 39, scope: !8025)
!8031 = !DILocation(line: 2788, column: 4, scope: !8025)
!8032 = !DILocation(line: 2790, column: 20, scope: !8025)
!8033 = !DILocation(line: 2790, column: 36, scope: !8025)
!8034 = !DILocation(line: 2790, column: 4, scope: !8025)
!8035 = !DILocation(line: 2791, column: 2, scope: !8013)
!8036 = !DILocation(line: 2793, column: 25, scope: !7765)
!8037 = !DILocation(line: 2793, column: 31, scope: !7765)
!8038 = !DILocation(line: 2793, column: 37, scope: !7765)
!8039 = !DILocation(line: 2793, column: 43, scope: !7765)
!8040 = !DILocation(line: 2793, column: 2, scope: !7765)
!8041 = !DILocation(line: 2799, column: 6, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2799, column: 6)
!8043 = !DILocation(line: 2799, column: 12, scope: !8042)
!8044 = !DILocation(line: 2799, column: 17, scope: !8042)
!8045 = !DILocation(line: 2799, column: 6, scope: !7765)
!8046 = !DILocation(line: 2800, column: 19, scope: !8042)
!8047 = !DILocation(line: 2800, column: 35, scope: !8042)
!8048 = !DILocation(line: 2800, column: 39, scope: !8042)
!8049 = !DILocation(line: 2800, column: 3, scope: !8042)
!8050 = !DILocation(line: 2802, column: 18, scope: !7765)
!8051 = !DILocation(line: 2802, column: 34, scope: !7765)
!8052 = !DILocation(line: 2802, column: 38, scope: !7765)
!8053 = !DILocation(line: 2802, column: 2, scope: !7765)
!8054 = !DILocation(line: 2803, column: 6, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2803, column: 6)
!8056 = !DILocation(line: 2803, column: 12, scope: !8055)
!8057 = !DILocation(line: 2803, column: 17, scope: !8055)
!8058 = !DILocation(line: 2803, column: 6, scope: !7765)
!8059 = !DILocation(line: 2805, column: 7, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 2805, column: 7)
!8061 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 2803, column: 32)
!8062 = !DILocation(line: 2805, column: 11, scope: !8060)
!8063 = !DILocation(line: 2805, column: 15, scope: !8060)
!8064 = !DILocation(line: 2805, column: 7, scope: !8061)
!8065 = !DILocation(line: 2806, column: 20, scope: !8060)
!8066 = !DILocation(line: 2806, column: 4, scope: !8060)
!8067 = !DILocation(line: 2807, column: 19, scope: !8061)
!8068 = !DILocation(line: 2807, column: 35, scope: !8061)
!8069 = !DILocation(line: 2807, column: 39, scope: !8061)
!8070 = !DILocation(line: 2807, column: 3, scope: !8061)
!8071 = !DILocation(line: 2808, column: 2, scope: !8061)
!8072 = !DILocation(line: 2809, column: 23, scope: !7765)
!8073 = !DILocation(line: 2809, column: 29, scope: !7765)
!8074 = !DILocation(line: 2809, column: 35, scope: !7765)
!8075 = !DILocation(line: 2809, column: 2, scope: !7765)
!8076 = !DILocation(line: 2810, column: 26, scope: !7765)
!8077 = !DILocation(line: 2810, column: 32, scope: !7765)
!8078 = !DILocation(line: 2810, column: 38, scope: !7765)
!8079 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !7767)
!8080 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !7767)
!8081 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !7767)
!8082 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !7767)
!8083 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !7767)
!8084 = !DILocation(line: 2811, column: 21, scope: !7765)
!8085 = !DILocation(line: 2811, column: 2, scope: !7765)
!8086 = !DILocation(line: 2814, column: 28, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2814, column: 6)
!8088 = !DILocation(line: 2814, column: 6, scope: !8087)
!8089 = !DILocation(line: 2814, column: 6, scope: !7765)
!8090 = !DILocation(line: 2815, column: 32, scope: !8087)
!8091 = !DILocation(line: 2815, column: 41, scope: !8087)
!8092 = !DILocation(line: 2815, column: 47, scope: !8087)
!8093 = !DILocation(line: 2815, column: 3, scope: !8087)
!8094 = !DILocation(line: 2816, column: 1, scope: !7765)
!8095 = distinct !DISubprogram(name: "serial8250_compute_lcr", scope: !3, file: !3, line: 2547, type: !8096, scopeLine: 2549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{!233, !206, !253}
!8098 = !DILocalVariable(name: "up", arg: 1, scope: !8095, file: !3, line: 2547, type: !206)
!8099 = !DILocation(line: 2547, column: 68, scope: !8095)
!8100 = !DILocalVariable(name: "c_cflag", arg: 2, scope: !8095, file: !3, line: 2548, type: !253)
!8101 = !DILocation(line: 2548, column: 19, scope: !8095)
!8102 = !DILocalVariable(name: "cval", scope: !8095, file: !3, line: 2550, type: !233)
!8103 = !DILocation(line: 2550, column: 16, scope: !8095)
!8104 = !DILocation(line: 2552, column: 10, scope: !8095)
!8105 = !DILocation(line: 2552, column: 18, scope: !8095)
!8106 = !DILocation(line: 2552, column: 2, scope: !8095)
!8107 = !DILocation(line: 2554, column: 8, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2552, column: 27)
!8109 = !DILocation(line: 2555, column: 3, scope: !8108)
!8110 = !DILocation(line: 2557, column: 8, scope: !8108)
!8111 = !DILocation(line: 2558, column: 3, scope: !8108)
!8112 = !DILocation(line: 2560, column: 8, scope: !8108)
!8113 = !DILocation(line: 2561, column: 3, scope: !8108)
!8114 = !DILocation(line: 2564, column: 8, scope: !8108)
!8115 = !DILocation(line: 2565, column: 3, scope: !8108)
!8116 = !DILocation(line: 2568, column: 6, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2568, column: 6)
!8118 = !DILocation(line: 2568, column: 14, scope: !8117)
!8119 = !DILocation(line: 2568, column: 6, scope: !8095)
!8120 = !DILocation(line: 2569, column: 8, scope: !8117)
!8121 = !DILocation(line: 2569, column: 3, scope: !8117)
!8122 = !DILocation(line: 2570, column: 6, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2570, column: 6)
!8124 = !DILocation(line: 2570, column: 14, scope: !8123)
!8125 = !DILocation(line: 2570, column: 6, scope: !8095)
!8126 = !DILocation(line: 2571, column: 8, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8123, file: !3, line: 2570, column: 24)
!8128 = !DILocation(line: 2572, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8127, file: !3, line: 2572, column: 7)
!8130 = !DILocation(line: 2572, column: 11, scope: !8129)
!8131 = !DILocation(line: 2572, column: 16, scope: !8129)
!8132 = !DILocation(line: 2572, column: 7, scope: !8127)
!8133 = !DILocation(line: 2573, column: 4, scope: !8129)
!8134 = !DILocation(line: 2573, column: 8, scope: !8129)
!8135 = !DILocation(line: 2573, column: 17, scope: !8129)
!8136 = !DILocation(line: 2574, column: 2, scope: !8127)
!8137 = !DILocation(line: 2575, column: 8, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2575, column: 6)
!8139 = !DILocation(line: 2575, column: 16, scope: !8138)
!8140 = !DILocation(line: 2575, column: 6, scope: !8095)
!8141 = !DILocation(line: 2576, column: 8, scope: !8138)
!8142 = !DILocation(line: 2576, column: 3, scope: !8138)
!8143 = !DILocation(line: 2578, column: 6, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2578, column: 6)
!8145 = !DILocation(line: 2578, column: 14, scope: !8144)
!8146 = !DILocation(line: 2578, column: 6, scope: !8095)
!8147 = !DILocation(line: 2579, column: 8, scope: !8144)
!8148 = !DILocation(line: 2579, column: 3, scope: !8144)
!8149 = !DILocation(line: 2582, column: 9, scope: !8095)
!8150 = !DILocation(line: 2582, column: 2, scope: !8095)
!8151 = distinct !DISubprogram(name: "serial8250_do_set_ldisc", scope: !3, file: !3, line: 2829, type: !268, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8152 = !DILocalVariable(name: "lock", arg: 1, scope: !8153, file: !6176, line: 402, type: !1330)
!8153 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6176, file: !6176, line: 402, type: !8154, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{null, !1330}
!8156 = !DILocation(line: 402, column: 57, scope: !8153, inlinedAt: !8157)
!8157 = distinct !DILocation(line: 2841, column: 4, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2838, column: 48)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 2838, column: 7)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 2836, column: 9)
!8161 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 2831, column: 6)
!8162 = !DILocalVariable(name: "lock", arg: 1, scope: !8163, file: !6176, line: 377, type: !1330)
!8163 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6176, file: !6176, line: 377, type: !8154, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8164 = !DILocation(line: 377, column: 55, scope: !8163, inlinedAt: !8165)
!8165 = distinct !DILocation(line: 2839, column: 4, scope: !8158)
!8166 = !DILocation(line: 402, column: 57, scope: !8153, inlinedAt: !8167)
!8167 = distinct !DILocation(line: 2835, column: 3, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 2831, column: 32)
!8169 = !DILocation(line: 377, column: 55, scope: !8163, inlinedAt: !8170)
!8170 = distinct !DILocation(line: 2833, column: 3, scope: !8168)
!8171 = !DILocalVariable(name: "port", arg: 1, scope: !8151, file: !3, line: 2829, type: !238)
!8172 = !DILocation(line: 2829, column: 48, scope: !8151)
!8173 = !DILocalVariable(name: "termios", arg: 2, scope: !8151, file: !3, line: 2829, type: !248)
!8174 = !DILocation(line: 2829, column: 71, scope: !8151)
!8175 = !DILocation(line: 2831, column: 6, scope: !8161)
!8176 = !DILocation(line: 2831, column: 15, scope: !8161)
!8177 = !DILocation(line: 2831, column: 22, scope: !8161)
!8178 = !DILocation(line: 2831, column: 6, scope: !8151)
!8179 = !DILocation(line: 2832, column: 3, scope: !8168)
!8180 = !DILocation(line: 2832, column: 9, scope: !8168)
!8181 = !DILocation(line: 2832, column: 15, scope: !8168)
!8182 = !DILocation(line: 2833, column: 18, scope: !8168)
!8183 = !DILocation(line: 2833, column: 24, scope: !8168)
!8184 = !DILocation(line: 379, column: 2, scope: !8185, inlinedAt: !8170)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !6176, line: 379, column: 2)
!8186 = distinct !DILexicalBlock(scope: !8163, file: !6176, line: 379, column: 2)
!8187 = !DILocation(line: 379, column: 2, scope: !8188, inlinedAt: !8170)
!8188 = distinct !DILexicalBlock(scope: !8186, file: !6176, line: 379, column: 2)
!8189 = !{i32 -2145393502}
!8190 = !DILocation(line: 379, column: 2, scope: !8191, inlinedAt: !8170)
!8191 = distinct !DILexicalBlock(scope: !8188, file: !6176, line: 379, column: 2)
!8192 = !DILocation(line: 2834, column: 24, scope: !8168)
!8193 = !DILocation(line: 2834, column: 3, scope: !8168)
!8194 = !DILocation(line: 2835, column: 20, scope: !8168)
!8195 = !DILocation(line: 2835, column: 26, scope: !8168)
!8196 = !DILocation(line: 404, column: 2, scope: !8197, inlinedAt: !8167)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !6176, line: 404, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8153, file: !6176, line: 404, column: 2)
!8199 = !DILocation(line: 404, column: 2, scope: !8200, inlinedAt: !8167)
!8200 = distinct !DILexicalBlock(scope: !8198, file: !6176, line: 404, column: 2)
!8201 = !{i32 -2145391754}
!8202 = !DILocation(line: 404, column: 2, scope: !8203, inlinedAt: !8167)
!8203 = distinct !DILexicalBlock(scope: !8200, file: !6176, line: 404, column: 2)
!8204 = !DILocation(line: 2836, column: 2, scope: !8168)
!8205 = !DILocation(line: 2837, column: 3, scope: !8160)
!8206 = !DILocation(line: 2837, column: 9, scope: !8160)
!8207 = !DILocation(line: 2837, column: 15, scope: !8160)
!8208 = !DILocation(line: 2838, column: 8, scope: !8159)
!8209 = !DILocation(line: 2838, column: 7, scope: !8160)
!8210 = !DILocation(line: 2839, column: 19, scope: !8158)
!8211 = !DILocation(line: 2839, column: 25, scope: !8158)
!8212 = !DILocation(line: 379, column: 2, scope: !8185, inlinedAt: !8165)
!8213 = !DILocation(line: 379, column: 2, scope: !8188, inlinedAt: !8165)
!8214 = !DILocation(line: 379, column: 2, scope: !8191, inlinedAt: !8165)
!8215 = !DILocation(line: 2840, column: 26, scope: !8158)
!8216 = !DILocation(line: 2840, column: 4, scope: !8158)
!8217 = !DILocation(line: 2841, column: 21, scope: !8158)
!8218 = !DILocation(line: 2841, column: 27, scope: !8158)
!8219 = !DILocation(line: 404, column: 2, scope: !8197, inlinedAt: !8157)
!8220 = !DILocation(line: 404, column: 2, scope: !8200, inlinedAt: !8157)
!8221 = !DILocation(line: 404, column: 2, scope: !8203, inlinedAt: !8157)
!8222 = !DILocation(line: 2842, column: 3, scope: !8158)
!8223 = !DILocation(line: 2844, column: 1, scope: !8151)
!8224 = distinct !DISubprogram(name: "serial8250_enable_ms", scope: !3, file: !3, line: 1693, type: !293, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8225 = !DILocalVariable(name: "port", arg: 1, scope: !8224, file: !3, line: 1693, type: !238)
!8226 = !DILocation(line: 1693, column: 52, scope: !8224)
!8227 = !DILocalVariable(name: "up", scope: !8224, file: !3, line: 1695, type: !206)
!8228 = !DILocation(line: 1695, column: 25, scope: !8224)
!8229 = !DILocation(line: 1695, column: 43, scope: !8224)
!8230 = !DILocation(line: 1695, column: 30, scope: !8224)
!8231 = !DILocation(line: 1698, column: 6, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 1698, column: 6)
!8233 = !DILocation(line: 1698, column: 10, scope: !8232)
!8234 = !DILocation(line: 1698, column: 15, scope: !8232)
!8235 = !DILocation(line: 1698, column: 6, scope: !8224)
!8236 = !DILocation(line: 1699, column: 3, scope: !8232)
!8237 = !DILocation(line: 1701, column: 23, scope: !8224)
!8238 = !DILocation(line: 1701, column: 27, scope: !8224)
!8239 = !DILocation(line: 1701, column: 2, scope: !8224)
!8240 = !DILocation(line: 1703, column: 2, scope: !8224)
!8241 = !DILocation(line: 1703, column: 6, scope: !8224)
!8242 = !DILocation(line: 1703, column: 10, scope: !8224)
!8243 = !DILocation(line: 1705, column: 21, scope: !8224)
!8244 = !DILocation(line: 1705, column: 2, scope: !8224)
!8245 = !DILocation(line: 1706, column: 18, scope: !8224)
!8246 = !DILocation(line: 1706, column: 34, scope: !8224)
!8247 = !DILocation(line: 1706, column: 38, scope: !8224)
!8248 = !DILocation(line: 1706, column: 2, scope: !8224)
!8249 = !DILocation(line: 1707, column: 21, scope: !8224)
!8250 = !DILocation(line: 1707, column: 2, scope: !8224)
!8251 = !DILocation(line: 1708, column: 1, scope: !8224)
!8252 = distinct !DISubprogram(name: "serial8250_disable_ms", scope: !3, file: !3, line: 1679, type: !293, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8253 = !DILocalVariable(name: "port", arg: 1, scope: !8252, file: !3, line: 1679, type: !238)
!8254 = !DILocation(line: 1679, column: 53, scope: !8252)
!8255 = !DILocalVariable(name: "up", scope: !8252, file: !3, line: 1681, type: !206)
!8256 = !DILocation(line: 1681, column: 25, scope: !8252)
!8257 = !DILocation(line: 1681, column: 43, scope: !8252)
!8258 = !DILocation(line: 1681, column: 30, scope: !8252)
!8259 = !DILocation(line: 1684, column: 6, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 1684, column: 6)
!8261 = !DILocation(line: 1684, column: 10, scope: !8260)
!8262 = !DILocation(line: 1684, column: 15, scope: !8260)
!8263 = !DILocation(line: 1684, column: 6, scope: !8252)
!8264 = !DILocation(line: 1685, column: 3, scope: !8260)
!8265 = !DILocation(line: 1687, column: 24, scope: !8252)
!8266 = !DILocation(line: 1687, column: 28, scope: !8252)
!8267 = !DILocation(line: 1687, column: 2, scope: !8252)
!8268 = !DILocation(line: 1689, column: 2, scope: !8252)
!8269 = !DILocation(line: 1689, column: 6, scope: !8252)
!8270 = !DILocation(line: 1689, column: 10, scope: !8252)
!8271 = !DILocation(line: 1690, column: 18, scope: !8252)
!8272 = !DILocation(line: 1690, column: 34, scope: !8252)
!8273 = !DILocation(line: 1690, column: 38, scope: !8252)
!8274 = !DILocation(line: 1690, column: 2, scope: !8252)
!8275 = !DILocation(line: 1691, column: 1, scope: !8252)
!8276 = distinct !DISubprogram(name: "serial8250_do_pm", scope: !3, file: !3, line: 2856, type: !300, scopeLine: 2858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8277 = !DILocalVariable(name: "port", arg: 1, scope: !8276, file: !3, line: 2856, type: !238)
!8278 = !DILocation(line: 2856, column: 41, scope: !8276)
!8279 = !DILocalVariable(name: "state", arg: 2, scope: !8276, file: !3, line: 2856, type: !7)
!8280 = !DILocation(line: 2856, column: 60, scope: !8276)
!8281 = !DILocalVariable(name: "oldstate", arg: 3, scope: !8276, file: !3, line: 2857, type: !7)
!8282 = !DILocation(line: 2857, column: 22, scope: !8276)
!8283 = !DILocalVariable(name: "p", scope: !8276, file: !3, line: 2859, type: !206)
!8284 = !DILocation(line: 2859, column: 25, scope: !8276)
!8285 = !DILocation(line: 2859, column: 42, scope: !8276)
!8286 = !DILocation(line: 2859, column: 29, scope: !8276)
!8287 = !DILocation(line: 2861, column: 23, scope: !8276)
!8288 = !DILocation(line: 2861, column: 26, scope: !8276)
!8289 = !DILocation(line: 2861, column: 32, scope: !8276)
!8290 = !DILocation(line: 2861, column: 2, scope: !8276)
!8291 = !DILocation(line: 2862, column: 1, scope: !8276)
!8292 = distinct !DISubprogram(name: "serial8250_set_sleep", scope: !3, file: !3, line: 746, type: !4864, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8293 = !DILocalVariable(name: "p", arg: 1, scope: !8292, file: !3, line: 746, type: !206)
!8294 = !DILocation(line: 746, column: 57, scope: !8292)
!8295 = !DILocalVariable(name: "sleep", arg: 2, scope: !8292, file: !3, line: 746, type: !239)
!8296 = !DILocation(line: 746, column: 64, scope: !8292)
!8297 = !DILocalVariable(name: "lcr", scope: !8292, file: !3, line: 748, type: !233)
!8298 = !DILocation(line: 748, column: 16, scope: !8292)
!8299 = !DILocalVariable(name: "efr", scope: !8292, file: !3, line: 748, type: !233)
!8300 = !DILocation(line: 748, column: 25, scope: !8292)
!8301 = !DILocation(line: 750, column: 21, scope: !8292)
!8302 = !DILocation(line: 750, column: 2, scope: !8292)
!8303 = !DILocation(line: 752, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 752, column: 6)
!8305 = !DILocation(line: 752, column: 9, scope: !8304)
!8306 = !DILocation(line: 752, column: 22, scope: !8304)
!8307 = !DILocation(line: 752, column: 6, scope: !8292)
!8308 = !DILocation(line: 753, column: 7, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 753, column: 7)
!8310 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 752, column: 40)
!8311 = !DILocation(line: 753, column: 10, scope: !8309)
!8312 = !DILocation(line: 753, column: 23, scope: !8309)
!8313 = !DILocation(line: 753, column: 7, scope: !8310)
!8314 = !DILocation(line: 754, column: 20, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 753, column: 39)
!8316 = !DILocation(line: 754, column: 10, scope: !8315)
!8317 = !DILocation(line: 754, column: 8, scope: !8315)
!8318 = !DILocation(line: 755, column: 20, scope: !8315)
!8319 = !DILocation(line: 755, column: 10, scope: !8315)
!8320 = !DILocation(line: 755, column: 8, scope: !8315)
!8321 = !DILocation(line: 756, column: 15, scope: !8315)
!8322 = !DILocation(line: 756, column: 4, scope: !8315)
!8323 = !DILocation(line: 757, column: 15, scope: !8315)
!8324 = !DILocation(line: 757, column: 4, scope: !8315)
!8325 = !DILocation(line: 758, column: 15, scope: !8315)
!8326 = !DILocation(line: 758, column: 4, scope: !8315)
!8327 = !DILocation(line: 759, column: 3, scope: !8315)
!8328 = !DILocation(line: 760, column: 14, scope: !8310)
!8329 = !DILocation(line: 760, column: 27, scope: !8310)
!8330 = !DILocation(line: 760, column: 3, scope: !8310)
!8331 = !DILocation(line: 761, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 761, column: 7)
!8333 = !DILocation(line: 761, column: 10, scope: !8332)
!8334 = !DILocation(line: 761, column: 23, scope: !8332)
!8335 = !DILocation(line: 761, column: 7, scope: !8310)
!8336 = !DILocation(line: 762, column: 15, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 761, column: 39)
!8338 = !DILocation(line: 762, column: 4, scope: !8337)
!8339 = !DILocation(line: 763, column: 15, scope: !8337)
!8340 = !DILocation(line: 763, column: 28, scope: !8337)
!8341 = !DILocation(line: 763, column: 4, scope: !8337)
!8342 = !DILocation(line: 764, column: 15, scope: !8337)
!8343 = !DILocation(line: 764, column: 28, scope: !8337)
!8344 = !DILocation(line: 764, column: 4, scope: !8337)
!8345 = !DILocation(line: 765, column: 3, scope: !8337)
!8346 = !DILocation(line: 766, column: 2, scope: !8310)
!8347 = !DILocation(line: 768, column: 21, scope: !8292)
!8348 = !DILocation(line: 768, column: 2, scope: !8292)
!8349 = !DILocation(line: 769, column: 1, scope: !8292)
!8350 = distinct !DISubprogram(name: "serial8250_init_port", scope: !3, file: !3, line: 3199, type: !4859, scopeLine: 3200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8351 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !8352)
!8352 = distinct !DILocation(line: 3203, column: 2, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8350, file: !3, line: 3203, column: 2)
!8354 = !DILocalVariable(name: "up", arg: 1, scope: !8350, file: !3, line: 3199, type: !206)
!8355 = !DILocation(line: 3199, column: 50, scope: !8350)
!8356 = !DILocalVariable(name: "port", scope: !8350, file: !3, line: 3201, type: !238)
!8357 = !DILocation(line: 3201, column: 20, scope: !8350)
!8358 = !DILocation(line: 3201, column: 28, scope: !8350)
!8359 = !DILocation(line: 3201, column: 32, scope: !8350)
!8360 = !DILocation(line: 3203, column: 2, scope: !8350)
!8361 = !DILocation(line: 3203, column: 2, scope: !8353)
!8362 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !8352)
!8363 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !8352)
!8364 = !DILocation(line: 3204, column: 2, scope: !8350)
!8365 = !DILocation(line: 3204, column: 8, scope: !8350)
!8366 = !DILocation(line: 3204, column: 12, scope: !8350)
!8367 = !DILocation(line: 3205, column: 2, scope: !8350)
!8368 = !DILocation(line: 3205, column: 8, scope: !8350)
!8369 = !DILocation(line: 3205, column: 18, scope: !8350)
!8370 = !DILocation(line: 3207, column: 2, scope: !8350)
!8371 = !DILocation(line: 3207, column: 6, scope: !8350)
!8372 = !DILocation(line: 3207, column: 17, scope: !8350)
!8373 = !DILocation(line: 3208, column: 1, scope: !8350)
!8374 = distinct !DISubprogram(name: "serial8250_set_defaults", scope: !3, file: !3, line: 3211, type: !4859, scopeLine: 3212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8375 = !DILocalVariable(name: "up", arg: 1, scope: !8374, file: !3, line: 3211, type: !206)
!8376 = !DILocation(line: 3211, column: 53, scope: !8374)
!8377 = !DILocalVariable(name: "port", scope: !8374, file: !3, line: 3213, type: !238)
!8378 = !DILocation(line: 3213, column: 20, scope: !8374)
!8379 = !DILocation(line: 3213, column: 28, scope: !8374)
!8380 = !DILocation(line: 3213, column: 32, scope: !8374)
!8381 = !DILocation(line: 3215, column: 6, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3215, column: 6)
!8383 = !DILocation(line: 3215, column: 10, scope: !8382)
!8384 = !DILocation(line: 3215, column: 15, scope: !8382)
!8385 = !DILocation(line: 3215, column: 21, scope: !8382)
!8386 = !DILocation(line: 3215, column: 6, scope: !8374)
!8387 = !DILocalVariable(name: "type", scope: !8388, file: !3, line: 3216, type: !7)
!8388 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 3215, column: 39)
!8389 = !DILocation(line: 3216, column: 16, scope: !8388)
!8390 = !DILocation(line: 3216, column: 23, scope: !8388)
!8391 = !DILocation(line: 3216, column: 27, scope: !8388)
!8392 = !DILocation(line: 3216, column: 32, scope: !8388)
!8393 = !DILocation(line: 3218, column: 8, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3218, column: 7)
!8395 = !DILocation(line: 3218, column: 12, scope: !8394)
!8396 = !DILocation(line: 3218, column: 17, scope: !8394)
!8397 = !DILocation(line: 3218, column: 7, scope: !8388)
!8398 = !DILocation(line: 3219, column: 36, scope: !8394)
!8399 = !DILocation(line: 3219, column: 24, scope: !8394)
!8400 = !DILocation(line: 3219, column: 42, scope: !8394)
!8401 = !DILocation(line: 3219, column: 4, scope: !8394)
!8402 = !DILocation(line: 3219, column: 8, scope: !8394)
!8403 = !DILocation(line: 3219, column: 13, scope: !8394)
!8404 = !DILocation(line: 3219, column: 22, scope: !8394)
!8405 = !DILocation(line: 3220, column: 8, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3220, column: 7)
!8407 = !DILocation(line: 3220, column: 12, scope: !8406)
!8408 = !DILocation(line: 3220, column: 7, scope: !8388)
!8409 = !DILocation(line: 3221, column: 32, scope: !8406)
!8410 = !DILocation(line: 3221, column: 20, scope: !8406)
!8411 = !DILocation(line: 3221, column: 38, scope: !8406)
!8412 = !DILocation(line: 3221, column: 4, scope: !8406)
!8413 = !DILocation(line: 3221, column: 8, scope: !8406)
!8414 = !DILocation(line: 3221, column: 18, scope: !8406)
!8415 = !DILocation(line: 3222, column: 8, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 3222, column: 7)
!8417 = !DILocation(line: 3222, column: 12, scope: !8416)
!8418 = !DILocation(line: 3222, column: 7, scope: !8388)
!8419 = !DILocation(line: 3223, column: 35, scope: !8416)
!8420 = !DILocation(line: 3223, column: 23, scope: !8416)
!8421 = !DILocation(line: 3223, column: 41, scope: !8416)
!8422 = !DILocation(line: 3223, column: 4, scope: !8416)
!8423 = !DILocation(line: 3223, column: 8, scope: !8416)
!8424 = !DILocation(line: 3223, column: 21, scope: !8416)
!8425 = !DILocation(line: 3224, column: 2, scope: !8388)
!8426 = !DILocation(line: 3226, column: 19, scope: !8374)
!8427 = !DILocation(line: 3226, column: 2, scope: !8374)
!8428 = !DILocation(line: 3229, column: 6, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 3229, column: 6)
!8430 = !DILocation(line: 3229, column: 10, scope: !8429)
!8431 = !DILocation(line: 3229, column: 6, scope: !8374)
!8432 = !DILocation(line: 3230, column: 8, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 3230, column: 7)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3229, column: 15)
!8435 = !DILocation(line: 3230, column: 12, scope: !8433)
!8436 = !DILocation(line: 3230, column: 17, scope: !8433)
!8437 = !DILocation(line: 3230, column: 7, scope: !8434)
!8438 = !DILocation(line: 3231, column: 4, scope: !8433)
!8439 = !DILocation(line: 3231, column: 8, scope: !8433)
!8440 = !DILocation(line: 3231, column: 13, scope: !8433)
!8441 = !DILocation(line: 3231, column: 20, scope: !8433)
!8442 = !DILocation(line: 3232, column: 8, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 3232, column: 7)
!8444 = !DILocation(line: 3232, column: 12, scope: !8443)
!8445 = !DILocation(line: 3232, column: 17, scope: !8443)
!8446 = !DILocation(line: 3232, column: 7, scope: !8434)
!8447 = !DILocation(line: 3233, column: 4, scope: !8443)
!8448 = !DILocation(line: 3233, column: 8, scope: !8443)
!8449 = !DILocation(line: 3233, column: 13, scope: !8443)
!8450 = !DILocation(line: 3233, column: 20, scope: !8443)
!8451 = !DILocation(line: 3234, column: 2, scope: !8434)
!8452 = !DILocation(line: 3235, column: 1, scope: !8374)
!8453 = distinct !DISubprogram(name: "serial8250_em485_handle_stop_tx", scope: !3, file: !3, line: 1467, type: !1559, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8454 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !8455)
!8455 = distinct !DILocation(line: 1483, column: 2, scope: !8453)
!8456 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !8455)
!8457 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !8458)
!8458 = distinct !DILocation(line: 1477, column: 2, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 1477, column: 2)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 1477, column: 2)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 1477, column: 2)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 1477, column: 2)
!8463 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 1477, column: 2)
!8464 = !DILocalVariable(name: "t", arg: 1, scope: !8453, file: !3, line: 1467, type: !1561)
!8465 = !DILocation(line: 1467, column: 77, scope: !8453)
!8466 = !DILocalVariable(name: "em485", scope: !8453, file: !3, line: 1469, type: !4867)
!8467 = !DILocation(line: 1469, column: 26, scope: !8453)
!8468 = !DILocalVariable(name: "p", scope: !8453, file: !3, line: 1470, type: !206)
!8469 = !DILocation(line: 1470, column: 25, scope: !8453)
!8470 = !DILocalVariable(name: "flags", scope: !8453, file: !3, line: 1471, type: !230)
!8471 = !DILocation(line: 1471, column: 16, scope: !8453)
!8472 = !DILocalVariable(name: "__mptr", scope: !8473, file: !3, line: 1473, type: !196)
!8473 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 1473, column: 10)
!8474 = !DILocation(line: 1473, column: 10, scope: !8473)
!8475 = !DILocation(line: 1473, column: 10, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 1473, column: 10)
!8477 = !DILocation(line: 1473, column: 8, scope: !8453)
!8478 = !DILocation(line: 1474, column: 6, scope: !8453)
!8479 = !DILocation(line: 1474, column: 13, scope: !8453)
!8480 = !DILocation(line: 1474, column: 4, scope: !8453)
!8481 = !DILocation(line: 1476, column: 21, scope: !8453)
!8482 = !DILocation(line: 1476, column: 2, scope: !8453)
!8483 = !DILocation(line: 1477, column: 2, scope: !8453)
!8484 = !DILocation(line: 1477, column: 2, scope: !8463)
!8485 = !DILocalVariable(name: "__dummy", scope: !8486, file: !3, line: 1477, type: !230)
!8486 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 1477, column: 2)
!8487 = !DILocation(line: 1477, column: 2, scope: !8486)
!8488 = !DILocalVariable(name: "__dummy2", scope: !8486, file: !3, line: 1477, type: !230)
!8489 = !DILocation(line: 1477, column: 2, scope: !8462)
!8490 = !DILocation(line: 1477, column: 2, scope: !8461)
!8491 = !DILocation(line: 1477, column: 2, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 1477, column: 2)
!8493 = !DILocalVariable(name: "__dummy", scope: !8494, file: !3, line: 1477, type: !230)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 1477, column: 2)
!8495 = distinct !DILexicalBlock(scope: !8492, file: !3, line: 1477, column: 2)
!8496 = !DILocation(line: 1477, column: 2, scope: !8494)
!8497 = !DILocalVariable(name: "__dummy2", scope: !8494, file: !3, line: 1477, type: !230)
!8498 = !DILocation(line: 1477, column: 2, scope: !8495)
!8499 = !DILocation(line: 1477, column: 2, scope: !8460)
!8500 = !{i32 -2141649755}
!8501 = !DILocation(line: 1477, column: 2, scope: !8459)
!8502 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !8458)
!8503 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !8458)
!8504 = !DILocation(line: 1478, column: 6, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8453, file: !3, line: 1478, column: 6)
!8506 = !DILocation(line: 1478, column: 13, scope: !8505)
!8507 = !DILocation(line: 1478, column: 30, scope: !8505)
!8508 = !DILocation(line: 1478, column: 37, scope: !8505)
!8509 = !DILocation(line: 1478, column: 26, scope: !8505)
!8510 = !DILocation(line: 1478, column: 6, scope: !8453)
!8511 = !DILocation(line: 1479, column: 3, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 1478, column: 52)
!8513 = !DILocation(line: 1479, column: 6, scope: !8512)
!8514 = !DILocation(line: 1479, column: 20, scope: !8512)
!8515 = !DILocation(line: 1480, column: 3, scope: !8512)
!8516 = !DILocation(line: 1480, column: 10, scope: !8512)
!8517 = !DILocation(line: 1480, column: 23, scope: !8512)
!8518 = !DILocation(line: 1481, column: 3, scope: !8512)
!8519 = !DILocation(line: 1481, column: 10, scope: !8512)
!8520 = !DILocation(line: 1481, column: 21, scope: !8512)
!8521 = !DILocation(line: 1482, column: 2, scope: !8512)
!8522 = !DILocation(line: 1483, column: 26, scope: !8453)
!8523 = !DILocation(line: 1483, column: 29, scope: !8453)
!8524 = !DILocation(line: 1483, column: 34, scope: !8453)
!8525 = !DILocation(line: 1483, column: 40, scope: !8453)
!8526 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !8455)
!8527 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !8455)
!8528 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !8455)
!8529 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !8455)
!8530 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !8455)
!8531 = !DILocation(line: 1484, column: 21, scope: !8453)
!8532 = !DILocation(line: 1484, column: 2, scope: !8453)
!8533 = !DILocation(line: 1485, column: 2, scope: !8453)
!8534 = distinct !DISubprogram(name: "serial8250_em485_handle_start_tx", scope: !3, file: !3, line: 1634, type: !1559, scopeLine: 1635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8535 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !8536)
!8536 = distinct !DILocation(line: 1648, column: 2, scope: !8534)
!8537 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !8536)
!8538 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !8539)
!8539 = distinct !DILocation(line: 1643, column: 2, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !3, line: 1643, column: 2)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1643, column: 2)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 1643, column: 2)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 1643, column: 2)
!8544 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 1643, column: 2)
!8545 = !DILocalVariable(name: "t", arg: 1, scope: !8534, file: !3, line: 1634, type: !1561)
!8546 = !DILocation(line: 1634, column: 78, scope: !8534)
!8547 = !DILocalVariable(name: "em485", scope: !8534, file: !3, line: 1636, type: !4867)
!8548 = !DILocation(line: 1636, column: 26, scope: !8534)
!8549 = !DILocalVariable(name: "p", scope: !8534, file: !3, line: 1637, type: !206)
!8550 = !DILocation(line: 1637, column: 25, scope: !8534)
!8551 = !DILocalVariable(name: "flags", scope: !8534, file: !3, line: 1638, type: !230)
!8552 = !DILocation(line: 1638, column: 16, scope: !8534)
!8553 = !DILocalVariable(name: "__mptr", scope: !8554, file: !3, line: 1640, type: !196)
!8554 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 1640, column: 10)
!8555 = !DILocation(line: 1640, column: 10, scope: !8554)
!8556 = !DILocation(line: 1640, column: 10, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1640, column: 10)
!8558 = !DILocation(line: 1640, column: 8, scope: !8534)
!8559 = !DILocation(line: 1641, column: 6, scope: !8534)
!8560 = !DILocation(line: 1641, column: 13, scope: !8534)
!8561 = !DILocation(line: 1641, column: 4, scope: !8534)
!8562 = !DILocation(line: 1643, column: 2, scope: !8534)
!8563 = !DILocation(line: 1643, column: 2, scope: !8544)
!8564 = !DILocalVariable(name: "__dummy", scope: !8565, file: !3, line: 1643, type: !230)
!8565 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 1643, column: 2)
!8566 = !DILocation(line: 1643, column: 2, scope: !8565)
!8567 = !DILocalVariable(name: "__dummy2", scope: !8565, file: !3, line: 1643, type: !230)
!8568 = !DILocation(line: 1643, column: 2, scope: !8543)
!8569 = !DILocation(line: 1643, column: 2, scope: !8542)
!8570 = !DILocation(line: 1643, column: 2, scope: !8571)
!8571 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 1643, column: 2)
!8572 = !DILocalVariable(name: "__dummy", scope: !8573, file: !3, line: 1643, type: !230)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 1643, column: 2)
!8574 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 1643, column: 2)
!8575 = !DILocation(line: 1643, column: 2, scope: !8573)
!8576 = !DILocalVariable(name: "__dummy2", scope: !8573, file: !3, line: 1643, type: !230)
!8577 = !DILocation(line: 1643, column: 2, scope: !8574)
!8578 = !DILocation(line: 1643, column: 2, scope: !8541)
!8579 = !{i32 -2141646178}
!8580 = !DILocation(line: 1643, column: 2, scope: !8540)
!8581 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !8539)
!8582 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !8539)
!8583 = !DILocation(line: 1644, column: 6, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 1644, column: 6)
!8585 = !DILocation(line: 1644, column: 13, scope: !8584)
!8586 = !DILocation(line: 1644, column: 30, scope: !8584)
!8587 = !DILocation(line: 1644, column: 37, scope: !8584)
!8588 = !DILocation(line: 1644, column: 26, scope: !8584)
!8589 = !DILocation(line: 1644, column: 6, scope: !8534)
!8590 = !DILocation(line: 1645, column: 15, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 1644, column: 53)
!8592 = !DILocation(line: 1645, column: 18, scope: !8591)
!8593 = !DILocation(line: 1645, column: 3, scope: !8591)
!8594 = !DILocation(line: 1646, column: 3, scope: !8591)
!8595 = !DILocation(line: 1646, column: 10, scope: !8591)
!8596 = !DILocation(line: 1646, column: 23, scope: !8591)
!8597 = !DILocation(line: 1647, column: 2, scope: !8591)
!8598 = !DILocation(line: 1648, column: 26, scope: !8534)
!8599 = !DILocation(line: 1648, column: 29, scope: !8534)
!8600 = !DILocation(line: 1648, column: 34, scope: !8534)
!8601 = !DILocation(line: 1648, column: 40, scope: !8534)
!8602 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !8536)
!8603 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !8536)
!8604 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !8536)
!8605 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !8536)
!8606 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !8536)
!8607 = !DILocation(line: 1649, column: 2, scope: !8534)
!8608 = distinct !DISubprogram(name: "get_order", scope: !8609, file: !8609, line: 29, type: !8610, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8609 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8610 = !DISubroutineType(types: !8611)
!8611 = !{!239, !230}
!8612 = !DILocalVariable(name: "x", arg: 1, scope: !8613, file: !8614, line: 366, type: !203)
!8613 = distinct !DISubprogram(name: "fls64", scope: !8614, file: !8614, line: 366, type: !8615, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8614 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8615 = !DISubroutineType(types: !8616)
!8616 = !{!239, !203}
!8617 = !DILocation(line: 366, column: 40, scope: !8613, inlinedAt: !8618)
!8618 = distinct !DILocation(line: 46, column: 9, scope: !8608)
!8619 = !DILocalVariable(name: "bitpos", scope: !8613, file: !8614, line: 368, type: !239)
!8620 = !DILocation(line: 368, column: 6, scope: !8613, inlinedAt: !8618)
!8621 = !DILocalVariable(name: "size", arg: 1, scope: !8608, file: !8609, line: 29, type: !230)
!8622 = !DILocation(line: 29, column: 63, scope: !8608)
!8623 = !DILocation(line: 31, column: 27, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8608, file: !8609, line: 31, column: 6)
!8625 = !DILocation(line: 31, column: 6, scope: !8624)
!8626 = !DILocation(line: 31, column: 6, scope: !8608)
!8627 = !DILocation(line: 32, column: 8, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !8609, line: 32, column: 7)
!8629 = distinct !DILexicalBlock(scope: !8624, file: !8609, line: 31, column: 34)
!8630 = !DILocation(line: 32, column: 7, scope: !8629)
!8631 = !DILocation(line: 33, column: 4, scope: !8628)
!8632 = !DILocation(line: 35, column: 7, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !8609, line: 35, column: 7)
!8634 = !DILocation(line: 35, column: 12, scope: !8633)
!8635 = !DILocation(line: 35, column: 7, scope: !8629)
!8636 = !DILocation(line: 36, column: 4, scope: !8633)
!8637 = !DILocation(line: 38, column: 10, scope: !8629)
!8638 = !DILocation(line: 38, column: 28, scope: !8629)
!8639 = !DILocation(line: 38, column: 41, scope: !8629)
!8640 = !DILocation(line: 38, column: 3, scope: !8629)
!8641 = !DILocation(line: 41, column: 6, scope: !8608)
!8642 = !DILocation(line: 42, column: 7, scope: !8608)
!8643 = !DILocation(line: 46, column: 15, scope: !8608)
!8644 = !DILocation(line: 374, column: 2, scope: !8613, inlinedAt: !8618)
!8645 = !DILocation(line: 376, column: 14, scope: !8613, inlinedAt: !8618)
!8646 = !{i32 383680}
!8647 = !DILocation(line: 377, column: 9, scope: !8613, inlinedAt: !8618)
!8648 = !DILocation(line: 377, column: 16, scope: !8613, inlinedAt: !8618)
!8649 = !DILocation(line: 46, column: 2, scope: !8608)
!8650 = !DILocation(line: 48, column: 1, scope: !8608)
!8651 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8652, file: !8652, line: 30, type: !8653, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8652 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8653 = !DISubroutineType(types: !8654)
!8654 = !{!239, !201}
!8655 = !DILocation(line: 366, column: 40, scope: !8613, inlinedAt: !8656)
!8656 = distinct !DILocation(line: 32, column: 9, scope: !8651)
!8657 = !DILocation(line: 368, column: 6, scope: !8613, inlinedAt: !8656)
!8658 = !DILocalVariable(name: "n", arg: 1, scope: !8651, file: !8652, line: 30, type: !201)
!8659 = !DILocation(line: 30, column: 21, scope: !8651)
!8660 = !DILocation(line: 32, column: 15, scope: !8651)
!8661 = !DILocation(line: 374, column: 2, scope: !8613, inlinedAt: !8656)
!8662 = !DILocation(line: 376, column: 14, scope: !8613, inlinedAt: !8656)
!8663 = !DILocation(line: 377, column: 9, scope: !8613, inlinedAt: !8656)
!8664 = !DILocation(line: 377, column: 16, scope: !8613, inlinedAt: !8656)
!8665 = !DILocation(line: 32, column: 18, scope: !8651)
!8666 = !DILocation(line: 32, column: 2, scope: !8651)
!8667 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8668, file: !8668, line: 137, type: !8669, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8668 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8669 = !DISubroutineType(types: !8670)
!8670 = !{!196, !1200, !2368, !532, !979}
!8671 = !DILocalVariable(name: "s", arg: 1, scope: !8667, file: !8668, line: 137, type: !1200)
!8672 = !DILocation(line: 137, column: 54, scope: !8667)
!8673 = !DILocalVariable(name: "object", arg: 2, scope: !8667, file: !8668, line: 137, type: !2368)
!8674 = !DILocation(line: 137, column: 69, scope: !8667)
!8675 = !DILocalVariable(name: "size", arg: 3, scope: !8667, file: !8668, line: 138, type: !532)
!8676 = !DILocation(line: 138, column: 12, scope: !8667)
!8677 = !DILocalVariable(name: "flags", arg: 4, scope: !8667, file: !8668, line: 138, type: !979)
!8678 = !DILocation(line: 138, column: 24, scope: !8667)
!8679 = !DILocation(line: 140, column: 17, scope: !8667)
!8680 = !DILocation(line: 140, column: 2, scope: !8667)
!8681 = distinct !DISubprogram(name: "__start_tx", scope: !3, file: !3, line: 1559, type: !293, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8682 = !DILocalVariable(name: "port", arg: 1, scope: !8681, file: !3, line: 1559, type: !238)
!8683 = !DILocation(line: 1559, column: 49, scope: !8681)
!8684 = !DILocalVariable(name: "up", scope: !8681, file: !3, line: 1561, type: !206)
!8685 = !DILocation(line: 1561, column: 25, scope: !8681)
!8686 = !DILocation(line: 1561, column: 43, scope: !8681)
!8687 = !DILocation(line: 1561, column: 30, scope: !8681)
!8688 = !DILocation(line: 1563, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 1563, column: 6)
!8690 = !DILocation(line: 1563, column: 10, scope: !8689)
!8691 = !DILocation(line: 1563, column: 14, scope: !8689)
!8692 = !DILocation(line: 1563, column: 18, scope: !8689)
!8693 = !DILocation(line: 1563, column: 22, scope: !8689)
!8694 = !DILocation(line: 1563, column: 27, scope: !8689)
!8695 = !DILocation(line: 1563, column: 34, scope: !8689)
!8696 = !DILocation(line: 1563, column: 6, scope: !8681)
!8697 = !DILocation(line: 1564, column: 3, scope: !8689)
!8698 = !DILocation(line: 1566, column: 26, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 1566, column: 6)
!8700 = !DILocation(line: 1566, column: 6, scope: !8699)
!8701 = !DILocation(line: 1566, column: 6, scope: !8681)
!8702 = !DILocation(line: 1567, column: 7, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1567, column: 7)
!8704 = distinct !DILexicalBlock(scope: !8699, file: !3, line: 1566, column: 31)
!8705 = !DILocation(line: 1567, column: 11, scope: !8703)
!8706 = !DILocation(line: 1567, column: 16, scope: !8703)
!8707 = !DILocation(line: 1567, column: 7, scope: !8704)
!8708 = !DILocalVariable(name: "lsr", scope: !8709, file: !3, line: 1568, type: !233)
!8709 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 1567, column: 33)
!8710 = !DILocation(line: 1568, column: 18, scope: !8709)
!8711 = !DILocation(line: 1570, column: 20, scope: !8709)
!8712 = !DILocation(line: 1570, column: 10, scope: !8709)
!8713 = !DILocation(line: 1570, column: 8, scope: !8709)
!8714 = !DILocation(line: 1571, column: 27, scope: !8709)
!8715 = !DILocation(line: 1571, column: 31, scope: !8709)
!8716 = !DILocation(line: 1571, column: 4, scope: !8709)
!8717 = !DILocation(line: 1571, column: 8, scope: !8709)
!8718 = !DILocation(line: 1571, column: 24, scope: !8709)
!8719 = !DILocation(line: 1572, column: 8, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1572, column: 8)
!8721 = !DILocation(line: 1572, column: 12, scope: !8720)
!8722 = !DILocation(line: 1572, column: 8, scope: !8709)
!8723 = !DILocation(line: 1573, column: 25, scope: !8720)
!8724 = !DILocation(line: 1573, column: 5, scope: !8720)
!8725 = !DILocation(line: 1574, column: 3, scope: !8709)
!8726 = !DILocation(line: 1575, column: 2, scope: !8704)
!8727 = !DILocation(line: 1580, column: 6, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8681, file: !3, line: 1580, column: 6)
!8729 = !DILocation(line: 1580, column: 12, scope: !8728)
!8730 = !DILocation(line: 1580, column: 17, scope: !8728)
!8731 = !DILocation(line: 1580, column: 32, scope: !8728)
!8732 = !DILocation(line: 1580, column: 35, scope: !8728)
!8733 = !DILocation(line: 1580, column: 39, scope: !8728)
!8734 = !DILocation(line: 1580, column: 43, scope: !8728)
!8735 = !DILocation(line: 1580, column: 6, scope: !8681)
!8736 = !DILocation(line: 1581, column: 3, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 1580, column: 61)
!8738 = !DILocation(line: 1581, column: 7, scope: !8737)
!8739 = !DILocation(line: 1581, column: 11, scope: !8737)
!8740 = !DILocation(line: 1582, column: 20, scope: !8737)
!8741 = !DILocation(line: 1582, column: 34, scope: !8737)
!8742 = !DILocation(line: 1582, column: 38, scope: !8737)
!8743 = !DILocation(line: 1582, column: 3, scope: !8737)
!8744 = !DILocation(line: 1583, column: 2, scope: !8737)
!8745 = !DILocation(line: 1584, column: 1, scope: !8681)
!8746 = distinct !DISubprogram(name: "serial8250_set_THRI", scope: !4532, file: !4532, line: 133, type: !8747, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8747 = !DISubroutineType(types: !8748)
!8748 = !{!688, !206}
!8749 = !DILocalVariable(name: "up", arg: 1, scope: !8746, file: !4532, line: 133, type: !206)
!8750 = !DILocation(line: 133, column: 63, scope: !8746)
!8751 = !DILocation(line: 135, column: 6, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8746, file: !4532, line: 135, column: 6)
!8753 = !DILocation(line: 135, column: 10, scope: !8752)
!8754 = !DILocation(line: 135, column: 14, scope: !8752)
!8755 = !DILocation(line: 135, column: 6, scope: !8746)
!8756 = !DILocation(line: 136, column: 3, scope: !8752)
!8757 = !DILocation(line: 137, column: 2, scope: !8746)
!8758 = !DILocation(line: 137, column: 6, scope: !8746)
!8759 = !DILocation(line: 137, column: 10, scope: !8746)
!8760 = !DILocation(line: 138, column: 13, scope: !8746)
!8761 = !DILocation(line: 138, column: 27, scope: !8746)
!8762 = !DILocation(line: 138, column: 31, scope: !8746)
!8763 = !DILocation(line: 138, column: 2, scope: !8746)
!8764 = !DILocation(line: 139, column: 2, scope: !8746)
!8765 = !DILocation(line: 140, column: 1, scope: !8746)
!8766 = distinct !DISubprogram(name: "kasan_check_write", scope: !8767, file: !8767, line: 38, type: !8768, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8767 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8768 = !DISubroutineType(types: !8769)
!8769 = !{!688, !5489, !7}
!8770 = !DILocalVariable(name: "p", arg: 1, scope: !8766, file: !8767, line: 38, type: !5489)
!8771 = !DILocation(line: 38, column: 59, scope: !8766)
!8772 = !DILocalVariable(name: "size", arg: 2, scope: !8766, file: !8767, line: 38, type: !7)
!8773 = !DILocation(line: 38, column: 75, scope: !8766)
!8774 = !DILocation(line: 40, column: 2, scope: !8766)
!8775 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8776, file: !8776, line: 178, type: !8777, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8776 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8777 = !DISubroutineType(types: !8778)
!8778 = !{null, !5489, !532, !239}
!8779 = !DILocalVariable(name: "ptr", arg: 1, scope: !8775, file: !8776, line: 178, type: !5489)
!8780 = !DILocation(line: 178, column: 60, scope: !8775)
!8781 = !DILocalVariable(name: "size", arg: 2, scope: !8775, file: !8776, line: 178, type: !532)
!8782 = !DILocation(line: 178, column: 72, scope: !8775)
!8783 = !DILocalVariable(name: "type", arg: 3, scope: !8775, file: !8776, line: 179, type: !239)
!8784 = !DILocation(line: 179, column: 15, scope: !8775)
!8785 = !DILocation(line: 179, column: 23, scope: !8775)
!8786 = distinct !DISubprogram(name: "serial8250_MCR_to_TIOCM", scope: !4532, file: !4532, line: 183, type: !3288, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8787 = !DILocalVariable(name: "mcr", arg: 1, scope: !8786, file: !4532, line: 183, type: !239)
!8788 = !DILocation(line: 183, column: 47, scope: !8786)
!8789 = !DILocalVariable(name: "tiocm", scope: !8786, file: !4532, line: 185, type: !239)
!8790 = !DILocation(line: 185, column: 6, scope: !8786)
!8791 = !DILocation(line: 187, column: 6, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8786, file: !4532, line: 187, column: 6)
!8793 = !DILocation(line: 187, column: 10, scope: !8792)
!8794 = !DILocation(line: 187, column: 6, scope: !8786)
!8795 = !DILocation(line: 188, column: 9, scope: !8792)
!8796 = !DILocation(line: 188, column: 3, scope: !8792)
!8797 = !DILocation(line: 189, column: 6, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8786, file: !4532, line: 189, column: 6)
!8799 = !DILocation(line: 189, column: 10, scope: !8798)
!8800 = !DILocation(line: 189, column: 6, scope: !8786)
!8801 = !DILocation(line: 190, column: 9, scope: !8798)
!8802 = !DILocation(line: 190, column: 3, scope: !8798)
!8803 = !DILocation(line: 191, column: 6, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8786, file: !4532, line: 191, column: 6)
!8805 = !DILocation(line: 191, column: 10, scope: !8804)
!8806 = !DILocation(line: 191, column: 6, scope: !8786)
!8807 = !DILocation(line: 192, column: 9, scope: !8804)
!8808 = !DILocation(line: 192, column: 3, scope: !8804)
!8809 = !DILocation(line: 193, column: 6, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8786, file: !4532, line: 193, column: 6)
!8811 = !DILocation(line: 193, column: 10, scope: !8810)
!8812 = !DILocation(line: 193, column: 6, scope: !8786)
!8813 = !DILocation(line: 194, column: 9, scope: !8810)
!8814 = !DILocation(line: 194, column: 3, scope: !8810)
!8815 = !DILocation(line: 195, column: 6, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8786, file: !4532, line: 195, column: 6)
!8817 = !DILocation(line: 195, column: 10, scope: !8816)
!8818 = !DILocation(line: 195, column: 6, scope: !8786)
!8819 = !DILocation(line: 196, column: 9, scope: !8816)
!8820 = !DILocation(line: 196, column: 3, scope: !8816)
!8821 = !DILocation(line: 198, column: 9, scope: !8786)
!8822 = !DILocation(line: 198, column: 2, scope: !8786)
!8823 = distinct !DISubprogram(name: "__stop_tx_rs485", scope: !3, file: !3, line: 1497, type: !4859, scopeLine: 1498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8824 = !DILocalVariable(name: "p", arg: 1, scope: !8823, file: !3, line: 1497, type: !206)
!8825 = !DILocation(line: 1497, column: 52, scope: !8823)
!8826 = !DILocalVariable(name: "em485", scope: !8823, file: !3, line: 1499, type: !4867)
!8827 = !DILocation(line: 1499, column: 26, scope: !8823)
!8828 = !DILocation(line: 1499, column: 34, scope: !8823)
!8829 = !DILocation(line: 1499, column: 37, scope: !8823)
!8830 = !DILocation(line: 1505, column: 6, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 1505, column: 6)
!8832 = !DILocation(line: 1505, column: 9, scope: !8831)
!8833 = !DILocation(line: 1505, column: 14, scope: !8831)
!8834 = !DILocation(line: 1505, column: 20, scope: !8831)
!8835 = !DILocation(line: 1505, column: 41, scope: !8831)
!8836 = !DILocation(line: 1505, column: 6, scope: !8823)
!8837 = !DILocation(line: 1506, column: 26, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1505, column: 46)
!8839 = !DILocation(line: 1506, column: 33, scope: !8838)
!8840 = !DILocation(line: 1506, column: 3, scope: !8838)
!8841 = !DILocation(line: 1506, column: 10, scope: !8838)
!8842 = !DILocation(line: 1506, column: 23, scope: !8838)
!8843 = !DILocation(line: 1507, column: 21, scope: !8838)
!8844 = !DILocation(line: 1507, column: 28, scope: !8838)
!8845 = !DILocation(line: 1508, column: 8, scope: !8838)
!8846 = !DILocation(line: 1508, column: 11, scope: !8838)
!8847 = !DILocation(line: 1508, column: 16, scope: !8838)
!8848 = !DILocation(line: 1508, column: 22, scope: !8838)
!8849 = !DILocation(line: 1507, column: 3, scope: !8838)
!8850 = !DILocation(line: 1509, column: 2, scope: !8838)
!8851 = !DILocation(line: 1510, column: 3, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 1509, column: 9)
!8853 = !DILocation(line: 1510, column: 6, scope: !8852)
!8854 = !DILocation(line: 1510, column: 20, scope: !8852)
!8855 = !DILocation(line: 1511, column: 3, scope: !8852)
!8856 = !DILocation(line: 1511, column: 10, scope: !8852)
!8857 = !DILocation(line: 1511, column: 23, scope: !8852)
!8858 = !DILocation(line: 1512, column: 3, scope: !8852)
!8859 = !DILocation(line: 1512, column: 10, scope: !8852)
!8860 = !DILocation(line: 1512, column: 21, scope: !8852)
!8861 = !DILocation(line: 1514, column: 1, scope: !8823)
!8862 = distinct !DISubprogram(name: "__do_stop_tx", scope: !3, file: !3, line: 1516, type: !4859, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8863 = !DILocalVariable(name: "p", arg: 1, scope: !8862, file: !3, line: 1516, type: !206)
!8864 = !DILocation(line: 1516, column: 56, scope: !8862)
!8865 = !DILocation(line: 1518, column: 28, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8862, file: !3, line: 1518, column: 6)
!8867 = !DILocation(line: 1518, column: 6, scope: !8866)
!8868 = !DILocation(line: 1518, column: 6, scope: !8862)
!8869 = !DILocation(line: 1519, column: 25, scope: !8866)
!8870 = !DILocation(line: 1519, column: 3, scope: !8866)
!8871 = !DILocation(line: 1520, column: 1, scope: !8862)
!8872 = distinct !DISubprogram(name: "start_hrtimer_ms", scope: !3, file: !3, line: 1488, type: !8873, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8873 = !DISubroutineType(types: !8874)
!8874 = !{null, !1561, !230}
!8875 = !DILocalVariable(name: "hrt", arg: 1, scope: !8872, file: !3, line: 1488, type: !1561)
!8876 = !DILocation(line: 1488, column: 46, scope: !8872)
!8877 = !DILocalVariable(name: "msec", arg: 2, scope: !8872, file: !3, line: 1488, type: !230)
!8878 = !DILocation(line: 1488, column: 65, scope: !8872)
!8879 = !DILocalVariable(name: "sec", scope: !8872, file: !3, line: 1490, type: !520)
!8880 = !DILocation(line: 1490, column: 7, scope: !8872)
!8881 = !DILocation(line: 1490, column: 13, scope: !8872)
!8882 = !DILocation(line: 1490, column: 18, scope: !8872)
!8883 = !DILocalVariable(name: "nsec", scope: !8872, file: !3, line: 1491, type: !520)
!8884 = !DILocation(line: 1491, column: 7, scope: !8872)
!8885 = !DILocation(line: 1491, column: 15, scope: !8872)
!8886 = !DILocation(line: 1491, column: 20, scope: !8872)
!8887 = !DILocation(line: 1491, column: 28, scope: !8872)
!8888 = !DILocalVariable(name: "t", scope: !8872, file: !3, line: 1492, type: !1554)
!8889 = !DILocation(line: 1492, column: 10, scope: !8872)
!8890 = !DILocation(line: 1492, column: 24, scope: !8872)
!8891 = !DILocation(line: 1492, column: 29, scope: !8872)
!8892 = !DILocation(line: 1492, column: 14, scope: !8872)
!8893 = !DILocation(line: 1494, column: 16, scope: !8872)
!8894 = !DILocation(line: 1494, column: 21, scope: !8872)
!8895 = !DILocation(line: 1494, column: 2, scope: !8872)
!8896 = !DILocation(line: 1495, column: 1, scope: !8872)
!8897 = distinct !DISubprogram(name: "ktime_set", scope: !1555, file: !1555, line: 38, type: !8898, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{!1554, !8900, !2584}
!8900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!8901 = !DILocalVariable(name: "secs", arg: 1, scope: !8897, file: !1555, line: 38, type: !8900)
!8902 = !DILocation(line: 38, column: 43, scope: !8897)
!8903 = !DILocalVariable(name: "nsecs", arg: 2, scope: !8897, file: !1555, line: 38, type: !2584)
!8904 = !DILocation(line: 38, column: 69, scope: !8897)
!8905 = !DILocation(line: 40, column: 6, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8897, file: !1555, line: 40, column: 6)
!8907 = !DILocation(line: 40, column: 6, scope: !8897)
!8908 = !DILocation(line: 41, column: 3, scope: !8906)
!8909 = !DILocation(line: 43, column: 9, scope: !8897)
!8910 = !DILocation(line: 43, column: 14, scope: !8897)
!8911 = !DILocation(line: 43, column: 36, scope: !8897)
!8912 = !DILocation(line: 43, column: 29, scope: !8897)
!8913 = !DILocation(line: 43, column: 2, scope: !8897)
!8914 = !DILocation(line: 44, column: 1, scope: !8897)
!8915 = distinct !DISubprogram(name: "hrtimer_start", scope: !20, file: !20, line: 419, type: !8916, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{null, !1561, !1554, !8918}
!8918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!8919 = !DILocalVariable(name: "timer", arg: 1, scope: !8915, file: !20, line: 419, type: !1561)
!8920 = !DILocation(line: 419, column: 50, scope: !8915)
!8921 = !DILocalVariable(name: "tim", arg: 2, scope: !8915, file: !20, line: 419, type: !1554)
!8922 = !DILocation(line: 419, column: 65, scope: !8915)
!8923 = !DILocalVariable(name: "mode", arg: 3, scope: !8915, file: !20, line: 420, type: !8918)
!8924 = !DILocation(line: 420, column: 30, scope: !8915)
!8925 = !DILocation(line: 422, column: 25, scope: !8915)
!8926 = !DILocation(line: 422, column: 32, scope: !8915)
!8927 = !DILocation(line: 422, column: 40, scope: !8915)
!8928 = !DILocation(line: 422, column: 2, scope: !8915)
!8929 = !DILocation(line: 423, column: 1, scope: !8915)
!8930 = distinct !DISubprogram(name: "serial8250_clear_THRI", scope: !4532, file: !4532, line: 142, type: !8747, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8931 = !DILocalVariable(name: "up", arg: 1, scope: !8930, file: !4532, line: 142, type: !206)
!8932 = !DILocation(line: 142, column: 65, scope: !8930)
!8933 = !DILocation(line: 144, column: 8, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8930, file: !4532, line: 144, column: 6)
!8935 = !DILocation(line: 144, column: 12, scope: !8934)
!8936 = !DILocation(line: 144, column: 16, scope: !8934)
!8937 = !DILocation(line: 144, column: 6, scope: !8930)
!8938 = !DILocation(line: 145, column: 3, scope: !8934)
!8939 = !DILocation(line: 146, column: 2, scope: !8930)
!8940 = !DILocation(line: 146, column: 6, scope: !8930)
!8941 = !DILocation(line: 146, column: 10, scope: !8930)
!8942 = !DILocation(line: 147, column: 13, scope: !8930)
!8943 = !DILocation(line: 147, column: 27, scope: !8930)
!8944 = !DILocation(line: 147, column: 31, scope: !8930)
!8945 = !DILocation(line: 147, column: 2, scope: !8930)
!8946 = !DILocation(line: 148, column: 2, scope: !8930)
!8947 = !DILocation(line: 149, column: 1, scope: !8930)
!8948 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6290, file: !6290, line: 646, type: !6291, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8949 = !DILocalVariable(name: "__ret", scope: !8950, file: !6290, line: 648, type: !230)
!8950 = distinct !DILexicalBlock(scope: !8948, file: !6290, line: 648, column: 9)
!8951 = !DILocation(line: 648, column: 9, scope: !8950)
!8952 = !DILocalVariable(name: "__edi", scope: !8950, file: !6290, line: 648, type: !230)
!8953 = !DILocalVariable(name: "__esi", scope: !8950, file: !6290, line: 648, type: !230)
!8954 = !DILocalVariable(name: "__edx", scope: !8950, file: !6290, line: 648, type: !230)
!8955 = !DILocalVariable(name: "__ecx", scope: !8950, file: !6290, line: 648, type: !230)
!8956 = !DILocalVariable(name: "__eax", scope: !8950, file: !6290, line: 648, type: !230)
!8957 = !DILocation(line: 648, column: 9, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !6290, line: 648, column: 9)
!8959 = distinct !DILexicalBlock(scope: !8950, file: !6290, line: 648, column: 9)
!8960 = !{i32 -2145704279, i32 -2145701964, i32 -2145701730, i32 -2145701679, i32 -2145701651, i32 -2145701626, i32 -2145701942, i32 -2145701929, i32 -2145701491, i32 -2145701372, i32 -2145701837, i32 -2145701810, i32 -2145701782, i32 -2145701752}
!8961 = !DILocalVariable(name: "__mask", scope: !8962, file: !6290, line: 648, type: !230)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !6290, line: 648, column: 9)
!8963 = !DILocation(line: 648, column: 9, scope: !8962)
!8964 = !DILocation(line: 648, column: 9, scope: !8959)
!8965 = !DILocation(line: 648, column: 2, scope: !8948)
!8966 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6290, file: !6290, line: 656, type: !2132, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8967 = !DILocalVariable(name: "__edi", scope: !8968, file: !6290, line: 658, type: !230)
!8968 = distinct !DILexicalBlock(scope: !8966, file: !6290, line: 658, column: 2)
!8969 = !DILocation(line: 658, column: 2, scope: !8968)
!8970 = !DILocalVariable(name: "__esi", scope: !8968, file: !6290, line: 658, type: !230)
!8971 = !DILocalVariable(name: "__edx", scope: !8968, file: !6290, line: 658, type: !230)
!8972 = !DILocalVariable(name: "__ecx", scope: !8968, file: !6290, line: 658, type: !230)
!8973 = !DILocalVariable(name: "__eax", scope: !8968, file: !6290, line: 658, type: !230)
!8974 = !{i32 -2145697185, i32 -2145696453, i32 -2145696219, i32 -2145696168, i32 -2145696140, i32 -2145696115, i32 -2145696431, i32 -2145696418, i32 -2145695980, i32 -2145695861, i32 -2145696326, i32 -2145696299, i32 -2145696271, i32 -2145696241}
!8975 = !DILocation(line: 659, column: 1, scope: !8966)
!8976 = distinct !DISubprogram(name: "default_serial_dl_read", scope: !3, file: !3, line: 312, type: !4536, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8977 = !DILocalVariable(name: "up", arg: 1, scope: !8976, file: !3, line: 312, type: !206)
!8978 = !DILocation(line: 312, column: 58, scope: !8976)
!8979 = !DILocation(line: 314, column: 19, scope: !8976)
!8980 = !DILocation(line: 314, column: 9, scope: !8976)
!8981 = !DILocation(line: 314, column: 45, scope: !8976)
!8982 = !DILocation(line: 314, column: 35, scope: !8976)
!8983 = !DILocation(line: 314, column: 59, scope: !8976)
!8984 = !DILocation(line: 314, column: 33, scope: !8976)
!8985 = !DILocation(line: 314, column: 2, scope: !8976)
!8986 = distinct !DISubprogram(name: "default_serial_dl_write", scope: !3, file: !3, line: 318, type: !4864, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!8987 = !DILocalVariable(name: "up", arg: 1, scope: !8986, file: !3, line: 318, type: !206)
!8988 = !DILocation(line: 318, column: 60, scope: !8986)
!8989 = !DILocalVariable(name: "value", arg: 2, scope: !8986, file: !3, line: 318, type: !239)
!8990 = !DILocation(line: 318, column: 68, scope: !8986)
!8991 = !DILocation(line: 320, column: 13, scope: !8986)
!8992 = !DILocation(line: 320, column: 27, scope: !8986)
!8993 = !DILocation(line: 320, column: 33, scope: !8986)
!8994 = !DILocation(line: 320, column: 2, scope: !8986)
!8995 = !DILocation(line: 321, column: 13, scope: !8986)
!8996 = !DILocation(line: 321, column: 27, scope: !8986)
!8997 = !DILocation(line: 321, column: 33, scope: !8986)
!8998 = !DILocation(line: 321, column: 38, scope: !8986)
!8999 = !DILocation(line: 321, column: 2, scope: !8986)
!9000 = !DILocation(line: 322, column: 1, scope: !8986)
!9001 = distinct !DISubprogram(name: "hub6_serial_in", scope: !3, file: !3, line: 382, type: !236, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9002 = !DILocalVariable(name: "p", arg: 1, scope: !9001, file: !3, line: 382, type: !238)
!9003 = !DILocation(line: 382, column: 54, scope: !9001)
!9004 = !DILocalVariable(name: "offset", arg: 2, scope: !9001, file: !3, line: 382, type: !239)
!9005 = !DILocation(line: 382, column: 61, scope: !9001)
!9006 = !DILocation(line: 384, column: 11, scope: !9001)
!9007 = !DILocation(line: 384, column: 21, scope: !9001)
!9008 = !DILocation(line: 384, column: 24, scope: !9001)
!9009 = !DILocation(line: 384, column: 18, scope: !9001)
!9010 = !DILocation(line: 384, column: 9, scope: !9001)
!9011 = !DILocation(line: 385, column: 7, scope: !9001)
!9012 = !DILocation(line: 385, column: 10, scope: !9001)
!9013 = !DILocation(line: 385, column: 15, scope: !9001)
!9014 = !DILocation(line: 385, column: 21, scope: !9001)
!9015 = !DILocation(line: 385, column: 19, scope: !9001)
!9016 = !DILocation(line: 385, column: 29, scope: !9001)
!9017 = !DILocation(line: 385, column: 32, scope: !9001)
!9018 = !DILocation(line: 385, column: 2, scope: !9001)
!9019 = !DILocation(line: 386, column: 13, scope: !9001)
!9020 = !DILocation(line: 386, column: 16, scope: !9001)
!9021 = !DILocation(line: 386, column: 23, scope: !9001)
!9022 = !DILocation(line: 386, column: 9, scope: !9001)
!9023 = !DILocation(line: 386, column: 2, scope: !9001)
!9024 = distinct !DISubprogram(name: "hub6_serial_out", scope: !3, file: !3, line: 389, type: !242, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9025 = !DILocalVariable(name: "p", arg: 1, scope: !9024, file: !3, line: 389, type: !238)
!9026 = !DILocation(line: 389, column: 47, scope: !9024)
!9027 = !DILocalVariable(name: "offset", arg: 2, scope: !9024, file: !3, line: 389, type: !239)
!9028 = !DILocation(line: 389, column: 54, scope: !9024)
!9029 = !DILocalVariable(name: "value", arg: 3, scope: !9024, file: !3, line: 389, type: !239)
!9030 = !DILocation(line: 389, column: 66, scope: !9024)
!9031 = !DILocation(line: 391, column: 11, scope: !9024)
!9032 = !DILocation(line: 391, column: 21, scope: !9024)
!9033 = !DILocation(line: 391, column: 24, scope: !9024)
!9034 = !DILocation(line: 391, column: 18, scope: !9024)
!9035 = !DILocation(line: 391, column: 9, scope: !9024)
!9036 = !DILocation(line: 392, column: 7, scope: !9024)
!9037 = !DILocation(line: 392, column: 10, scope: !9024)
!9038 = !DILocation(line: 392, column: 15, scope: !9024)
!9039 = !DILocation(line: 392, column: 21, scope: !9024)
!9040 = !DILocation(line: 392, column: 19, scope: !9024)
!9041 = !DILocation(line: 392, column: 29, scope: !9024)
!9042 = !DILocation(line: 392, column: 32, scope: !9024)
!9043 = !DILocation(line: 392, column: 2, scope: !9024)
!9044 = !DILocation(line: 393, column: 7, scope: !9024)
!9045 = !DILocation(line: 393, column: 14, scope: !9024)
!9046 = !DILocation(line: 393, column: 17, scope: !9024)
!9047 = !DILocation(line: 393, column: 24, scope: !9024)
!9048 = !DILocation(line: 393, column: 2, scope: !9024)
!9049 = !DILocation(line: 394, column: 1, scope: !9024)
!9050 = distinct !DISubprogram(name: "mem_serial_in", scope: !3, file: !3, line: 396, type: !236, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9051 = !DILocalVariable(name: "p", arg: 1, scope: !9050, file: !3, line: 396, type: !238)
!9052 = !DILocation(line: 396, column: 53, scope: !9050)
!9053 = !DILocalVariable(name: "offset", arg: 2, scope: !9050, file: !3, line: 396, type: !239)
!9054 = !DILocation(line: 396, column: 60, scope: !9050)
!9055 = !DILocation(line: 398, column: 11, scope: !9050)
!9056 = !DILocation(line: 398, column: 21, scope: !9050)
!9057 = !DILocation(line: 398, column: 24, scope: !9050)
!9058 = !DILocation(line: 398, column: 18, scope: !9050)
!9059 = !DILocation(line: 398, column: 9, scope: !9050)
!9060 = !DILocation(line: 399, column: 15, scope: !9050)
!9061 = !DILocation(line: 399, column: 18, scope: !9050)
!9062 = !DILocation(line: 399, column: 28, scope: !9050)
!9063 = !DILocation(line: 399, column: 26, scope: !9050)
!9064 = !DILocation(line: 399, column: 9, scope: !9050)
!9065 = !DILocation(line: 399, column: 2, scope: !9050)
!9066 = distinct !DISubprogram(name: "mem_serial_out", scope: !3, file: !3, line: 402, type: !242, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9067 = !DILocalVariable(name: "p", arg: 1, scope: !9066, file: !3, line: 402, type: !238)
!9068 = !DILocation(line: 402, column: 46, scope: !9066)
!9069 = !DILocalVariable(name: "offset", arg: 2, scope: !9066, file: !3, line: 402, type: !239)
!9070 = !DILocation(line: 402, column: 53, scope: !9066)
!9071 = !DILocalVariable(name: "value", arg: 3, scope: !9066, file: !3, line: 402, type: !239)
!9072 = !DILocation(line: 402, column: 65, scope: !9066)
!9073 = !DILocation(line: 404, column: 11, scope: !9066)
!9074 = !DILocation(line: 404, column: 21, scope: !9066)
!9075 = !DILocation(line: 404, column: 24, scope: !9066)
!9076 = !DILocation(line: 404, column: 18, scope: !9066)
!9077 = !DILocation(line: 404, column: 9, scope: !9066)
!9078 = !DILocation(line: 405, column: 9, scope: !9066)
!9079 = !DILocation(line: 405, column: 16, scope: !9066)
!9080 = !DILocation(line: 405, column: 19, scope: !9066)
!9081 = !DILocation(line: 405, column: 29, scope: !9066)
!9082 = !DILocation(line: 405, column: 27, scope: !9066)
!9083 = !DILocation(line: 405, column: 2, scope: !9066)
!9084 = !DILocation(line: 406, column: 1, scope: !9066)
!9085 = distinct !DISubprogram(name: "mem16_serial_in", scope: !3, file: !3, line: 414, type: !236, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9086 = !DILocalVariable(name: "p", arg: 1, scope: !9085, file: !3, line: 414, type: !238)
!9087 = !DILocation(line: 414, column: 55, scope: !9085)
!9088 = !DILocalVariable(name: "offset", arg: 2, scope: !9085, file: !3, line: 414, type: !239)
!9089 = !DILocation(line: 414, column: 62, scope: !9085)
!9090 = !DILocation(line: 416, column: 11, scope: !9085)
!9091 = !DILocation(line: 416, column: 21, scope: !9085)
!9092 = !DILocation(line: 416, column: 24, scope: !9085)
!9093 = !DILocation(line: 416, column: 18, scope: !9085)
!9094 = !DILocation(line: 416, column: 9, scope: !9085)
!9095 = !DILocation(line: 417, column: 15, scope: !9085)
!9096 = !DILocation(line: 417, column: 18, scope: !9085)
!9097 = !DILocation(line: 417, column: 28, scope: !9085)
!9098 = !DILocation(line: 417, column: 26, scope: !9085)
!9099 = !DILocation(line: 417, column: 9, scope: !9085)
!9100 = !DILocation(line: 417, column: 2, scope: !9085)
!9101 = distinct !DISubprogram(name: "mem16_serial_out", scope: !3, file: !3, line: 408, type: !242, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9102 = !DILocalVariable(name: "p", arg: 1, scope: !9101, file: !3, line: 408, type: !238)
!9103 = !DILocation(line: 408, column: 48, scope: !9101)
!9104 = !DILocalVariable(name: "offset", arg: 2, scope: !9101, file: !3, line: 408, type: !239)
!9105 = !DILocation(line: 408, column: 55, scope: !9101)
!9106 = !DILocalVariable(name: "value", arg: 3, scope: !9101, file: !3, line: 408, type: !239)
!9107 = !DILocation(line: 408, column: 67, scope: !9101)
!9108 = !DILocation(line: 410, column: 11, scope: !9101)
!9109 = !DILocation(line: 410, column: 21, scope: !9101)
!9110 = !DILocation(line: 410, column: 24, scope: !9101)
!9111 = !DILocation(line: 410, column: 18, scope: !9101)
!9112 = !DILocation(line: 410, column: 9, scope: !9101)
!9113 = !DILocation(line: 411, column: 9, scope: !9101)
!9114 = !DILocation(line: 411, column: 16, scope: !9101)
!9115 = !DILocation(line: 411, column: 19, scope: !9101)
!9116 = !DILocation(line: 411, column: 29, scope: !9101)
!9117 = !DILocation(line: 411, column: 27, scope: !9101)
!9118 = !DILocation(line: 411, column: 2, scope: !9101)
!9119 = !DILocation(line: 412, column: 1, scope: !9101)
!9120 = distinct !DISubprogram(name: "mem32_serial_in", scope: !3, file: !3, line: 426, type: !236, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9121 = !DILocalVariable(name: "p", arg: 1, scope: !9120, file: !3, line: 426, type: !238)
!9122 = !DILocation(line: 426, column: 55, scope: !9120)
!9123 = !DILocalVariable(name: "offset", arg: 2, scope: !9120, file: !3, line: 426, type: !239)
!9124 = !DILocation(line: 426, column: 62, scope: !9120)
!9125 = !DILocation(line: 428, column: 11, scope: !9120)
!9126 = !DILocation(line: 428, column: 21, scope: !9120)
!9127 = !DILocation(line: 428, column: 24, scope: !9120)
!9128 = !DILocation(line: 428, column: 18, scope: !9120)
!9129 = !DILocation(line: 428, column: 9, scope: !9120)
!9130 = !DILocation(line: 429, column: 15, scope: !9120)
!9131 = !DILocation(line: 429, column: 18, scope: !9120)
!9132 = !DILocation(line: 429, column: 28, scope: !9120)
!9133 = !DILocation(line: 429, column: 26, scope: !9120)
!9134 = !DILocation(line: 429, column: 9, scope: !9120)
!9135 = !DILocation(line: 429, column: 2, scope: !9120)
!9136 = distinct !DISubprogram(name: "mem32_serial_out", scope: !3, file: !3, line: 420, type: !242, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9137 = !DILocalVariable(name: "p", arg: 1, scope: !9136, file: !3, line: 420, type: !238)
!9138 = !DILocation(line: 420, column: 48, scope: !9136)
!9139 = !DILocalVariable(name: "offset", arg: 2, scope: !9136, file: !3, line: 420, type: !239)
!9140 = !DILocation(line: 420, column: 55, scope: !9136)
!9141 = !DILocalVariable(name: "value", arg: 3, scope: !9136, file: !3, line: 420, type: !239)
!9142 = !DILocation(line: 420, column: 67, scope: !9136)
!9143 = !DILocation(line: 422, column: 11, scope: !9136)
!9144 = !DILocation(line: 422, column: 21, scope: !9136)
!9145 = !DILocation(line: 422, column: 24, scope: !9136)
!9146 = !DILocation(line: 422, column: 18, scope: !9136)
!9147 = !DILocation(line: 422, column: 9, scope: !9136)
!9148 = !DILocation(line: 423, column: 9, scope: !9136)
!9149 = !DILocation(line: 423, column: 16, scope: !9136)
!9150 = !DILocation(line: 423, column: 19, scope: !9136)
!9151 = !DILocation(line: 423, column: 29, scope: !9136)
!9152 = !DILocation(line: 423, column: 27, scope: !9136)
!9153 = !DILocation(line: 423, column: 2, scope: !9136)
!9154 = !DILocation(line: 424, column: 1, scope: !9136)
!9155 = distinct !DISubprogram(name: "mem32be_serial_in", scope: !3, file: !3, line: 438, type: !236, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9156 = !DILocalVariable(name: "p", arg: 1, scope: !9155, file: !3, line: 438, type: !238)
!9157 = !DILocation(line: 438, column: 57, scope: !9155)
!9158 = !DILocalVariable(name: "offset", arg: 2, scope: !9155, file: !3, line: 438, type: !239)
!9159 = !DILocation(line: 438, column: 64, scope: !9155)
!9160 = !DILocation(line: 440, column: 11, scope: !9155)
!9161 = !DILocation(line: 440, column: 21, scope: !9155)
!9162 = !DILocation(line: 440, column: 24, scope: !9155)
!9163 = !DILocation(line: 440, column: 18, scope: !9155)
!9164 = !DILocation(line: 440, column: 9, scope: !9155)
!9165 = !DILocation(line: 441, column: 20, scope: !9155)
!9166 = !DILocation(line: 441, column: 23, scope: !9155)
!9167 = !DILocation(line: 441, column: 33, scope: !9155)
!9168 = !DILocation(line: 441, column: 31, scope: !9155)
!9169 = !DILocation(line: 441, column: 9, scope: !9155)
!9170 = !DILocation(line: 441, column: 2, scope: !9155)
!9171 = distinct !DISubprogram(name: "mem32be_serial_out", scope: !3, file: !3, line: 432, type: !242, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9172 = !DILocalVariable(name: "p", arg: 1, scope: !9171, file: !3, line: 432, type: !238)
!9173 = !DILocation(line: 432, column: 50, scope: !9171)
!9174 = !DILocalVariable(name: "offset", arg: 2, scope: !9171, file: !3, line: 432, type: !239)
!9175 = !DILocation(line: 432, column: 57, scope: !9171)
!9176 = !DILocalVariable(name: "value", arg: 3, scope: !9171, file: !3, line: 432, type: !239)
!9177 = !DILocation(line: 432, column: 69, scope: !9171)
!9178 = !DILocation(line: 434, column: 11, scope: !9171)
!9179 = !DILocation(line: 434, column: 21, scope: !9171)
!9180 = !DILocation(line: 434, column: 24, scope: !9171)
!9181 = !DILocation(line: 434, column: 18, scope: !9171)
!9182 = !DILocation(line: 434, column: 9, scope: !9171)
!9183 = !DILocation(line: 435, column: 14, scope: !9171)
!9184 = !DILocation(line: 435, column: 21, scope: !9171)
!9185 = !DILocation(line: 435, column: 24, scope: !9171)
!9186 = !DILocation(line: 435, column: 34, scope: !9171)
!9187 = !DILocation(line: 435, column: 32, scope: !9171)
!9188 = !DILocation(line: 435, column: 2, scope: !9171)
!9189 = !DILocation(line: 436, column: 1, scope: !9171)
!9190 = distinct !DISubprogram(name: "io_serial_in", scope: !3, file: !3, line: 444, type: !236, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9191 = !DILocalVariable(name: "p", arg: 1, scope: !9190, file: !3, line: 444, type: !238)
!9192 = !DILocation(line: 444, column: 52, scope: !9190)
!9193 = !DILocalVariable(name: "offset", arg: 2, scope: !9190, file: !3, line: 444, type: !239)
!9194 = !DILocation(line: 444, column: 59, scope: !9190)
!9195 = !DILocation(line: 446, column: 11, scope: !9190)
!9196 = !DILocation(line: 446, column: 21, scope: !9190)
!9197 = !DILocation(line: 446, column: 24, scope: !9190)
!9198 = !DILocation(line: 446, column: 18, scope: !9190)
!9199 = !DILocation(line: 446, column: 9, scope: !9190)
!9200 = !DILocation(line: 447, column: 13, scope: !9190)
!9201 = !DILocation(line: 447, column: 16, scope: !9190)
!9202 = !DILocation(line: 447, column: 25, scope: !9190)
!9203 = !DILocation(line: 447, column: 23, scope: !9190)
!9204 = !DILocation(line: 447, column: 9, scope: !9190)
!9205 = !DILocation(line: 447, column: 2, scope: !9190)
!9206 = distinct !DISubprogram(name: "io_serial_out", scope: !3, file: !3, line: 450, type: !242, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9207 = !DILocalVariable(name: "p", arg: 1, scope: !9206, file: !3, line: 450, type: !238)
!9208 = !DILocation(line: 450, column: 45, scope: !9206)
!9209 = !DILocalVariable(name: "offset", arg: 2, scope: !9206, file: !3, line: 450, type: !239)
!9210 = !DILocation(line: 450, column: 52, scope: !9206)
!9211 = !DILocalVariable(name: "value", arg: 3, scope: !9206, file: !3, line: 450, type: !239)
!9212 = !DILocation(line: 450, column: 64, scope: !9206)
!9213 = !DILocation(line: 452, column: 11, scope: !9206)
!9214 = !DILocation(line: 452, column: 21, scope: !9206)
!9215 = !DILocation(line: 452, column: 24, scope: !9206)
!9216 = !DILocation(line: 452, column: 18, scope: !9206)
!9217 = !DILocation(line: 452, column: 9, scope: !9206)
!9218 = !DILocation(line: 453, column: 7, scope: !9206)
!9219 = !DILocation(line: 453, column: 14, scope: !9206)
!9220 = !DILocation(line: 453, column: 17, scope: !9206)
!9221 = !DILocation(line: 453, column: 26, scope: !9206)
!9222 = !DILocation(line: 453, column: 24, scope: !9206)
!9223 = !DILocation(line: 453, column: 2, scope: !9206)
!9224 = !DILocation(line: 454, column: 1, scope: !9206)
!9225 = distinct !DISubprogram(name: "serial8250_default_handle_irq", scope: !3, file: !3, line: 1926, type: !289, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9226 = !DILocalVariable(name: "port", arg: 1, scope: !9225, file: !3, line: 1926, type: !238)
!9227 = !DILocation(line: 1926, column: 60, scope: !9225)
!9228 = !DILocalVariable(name: "up", scope: !9225, file: !3, line: 1928, type: !206)
!9229 = !DILocation(line: 1928, column: 25, scope: !9225)
!9230 = !DILocation(line: 1928, column: 43, scope: !9225)
!9231 = !DILocation(line: 1928, column: 30, scope: !9225)
!9232 = !DILocalVariable(name: "iir", scope: !9225, file: !3, line: 1929, type: !7)
!9233 = !DILocation(line: 1929, column: 15, scope: !9225)
!9234 = !DILocalVariable(name: "ret", scope: !9225, file: !3, line: 1930, type: !239)
!9235 = !DILocation(line: 1930, column: 6, scope: !9225)
!9236 = !DILocation(line: 1932, column: 21, scope: !9225)
!9237 = !DILocation(line: 1932, column: 2, scope: !9225)
!9238 = !DILocation(line: 1934, column: 23, scope: !9225)
!9239 = !DILocation(line: 1934, column: 8, scope: !9225)
!9240 = !DILocation(line: 1934, column: 6, scope: !9225)
!9241 = !DILocation(line: 1935, column: 30, scope: !9225)
!9242 = !DILocation(line: 1935, column: 36, scope: !9225)
!9243 = !DILocation(line: 1935, column: 8, scope: !9225)
!9244 = !DILocation(line: 1935, column: 6, scope: !9225)
!9245 = !DILocation(line: 1937, column: 21, scope: !9225)
!9246 = !DILocation(line: 1937, column: 2, scope: !9225)
!9247 = !DILocation(line: 1938, column: 9, scope: !9225)
!9248 = !DILocation(line: 1938, column: 2, scope: !9225)
!9249 = distinct !DISubprogram(name: "outb", scope: !7340, file: !7340, line: 334, type: !7341, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9250 = !DILocalVariable(name: "value", arg: 1, scope: !9249, file: !7340, line: 334, type: !233)
!9251 = !DILocation(line: 334, column: 1, scope: !9249)
!9252 = !DILocalVariable(name: "port", arg: 2, scope: !9249, file: !7340, line: 334, type: !239)
!9253 = !{i32 -2142569635}
!9254 = distinct !DISubprogram(name: "readb", scope: !7340, file: !7340, line: 57, type: !9255, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!233, !5489}
!9257 = !DILocalVariable(name: "addr", arg: 1, scope: !9254, file: !7340, line: 57, type: !5489)
!9258 = !DILocation(line: 57, column: 1, scope: !9254)
!9259 = !DILocalVariable(name: "ret", scope: !9254, file: !7340, line: 57, type: !233)
!9260 = !{i32 -2142582729}
!9261 = distinct !DISubprogram(name: "writeb", scope: !7340, file: !7340, line: 65, type: !9262, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9262 = !DISubroutineType(types: !9263)
!9263 = !{null, !233, !9264}
!9264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!9265 = !DILocalVariable(name: "val", arg: 1, scope: !9261, file: !7340, line: 65, type: !233)
!9266 = !DILocation(line: 65, column: 1, scope: !9261)
!9267 = !DILocalVariable(name: "addr", arg: 2, scope: !9261, file: !7340, line: 65, type: !9264)
!9268 = !{i32 -2142580275}
!9269 = distinct !DISubprogram(name: "readw", scope: !7340, file: !7340, line: 58, type: !9270, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9270 = !DISubroutineType(types: !9271)
!9271 = !{!527, !5489}
!9272 = !DILocalVariable(name: "addr", arg: 1, scope: !9269, file: !7340, line: 58, type: !5489)
!9273 = !DILocation(line: 58, column: 1, scope: !9269)
!9274 = !DILocalVariable(name: "ret", scope: !9269, file: !7340, line: 58, type: !527)
!9275 = !{i32 -2142582315}
!9276 = distinct !DISubprogram(name: "writew", scope: !7340, file: !7340, line: 66, type: !9277, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{null, !527, !9264}
!9279 = !DILocalVariable(name: "val", arg: 1, scope: !9276, file: !7340, line: 66, type: !527)
!9280 = !DILocation(line: 66, column: 1, scope: !9276)
!9281 = !DILocalVariable(name: "addr", arg: 2, scope: !9276, file: !7340, line: 66, type: !9264)
!9282 = !{i32 -2142579891}
!9283 = distinct !DISubprogram(name: "readl", scope: !7340, file: !7340, line: 59, type: !9284, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!7, !5489}
!9286 = !DILocalVariable(name: "addr", arg: 1, scope: !9283, file: !7340, line: 59, type: !5489)
!9287 = !DILocation(line: 59, column: 1, scope: !9283)
!9288 = !DILocalVariable(name: "ret", scope: !9283, file: !7340, line: 59, type: !7)
!9289 = !{i32 -2142581898}
!9290 = distinct !DISubprogram(name: "writel", scope: !7340, file: !7340, line: 67, type: !9291, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9291 = !DISubroutineType(types: !9292)
!9292 = !{null, !7, !9264}
!9293 = !DILocalVariable(name: "val", arg: 1, scope: !9290, file: !7340, line: 67, type: !7)
!9294 = !DILocation(line: 67, column: 1, scope: !9290)
!9295 = !DILocalVariable(name: "addr", arg: 2, scope: !9290, file: !7340, line: 67, type: !9264)
!9296 = !{i32 -2142579505}
!9297 = distinct !DISubprogram(name: "touch_nmi_watchdog", scope: !9298, file: !9298, line: 132, type: !2132, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9298 = !DIFile(filename: "./include/linux/nmi.h", directory: "/home/lizy2001/genbc/linux")
!9299 = !DILocation(line: 134, column: 2, scope: !9297)
!9300 = !DILocation(line: 135, column: 2, scope: !9297)
!9301 = !DILocation(line: 136, column: 1, scope: !9297)
!9302 = distinct !DISubprogram(name: "arch_touch_nmi_watchdog", scope: !9298, file: !9298, line: 113, type: !2132, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9303 = !DILocation(line: 113, column: 51, scope: !9302)
!9304 = distinct !DISubprogram(name: "touch_softlockup_watchdog", scope: !9298, file: !9298, line: 53, type: !2132, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9305 = !DILocation(line: 53, column: 54, scope: !9304)
!9306 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6290, file: !6290, line: 651, type: !9307, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{null, !230}
!9309 = !DILocalVariable(name: "f", arg: 1, scope: !9306, file: !6290, line: 651, type: !230)
!9310 = !DILocation(line: 651, column: 65, scope: !9306)
!9311 = !DILocalVariable(name: "__edi", scope: !9312, file: !6290, line: 653, type: !230)
!9312 = distinct !DILexicalBlock(scope: !9306, file: !6290, line: 653, column: 2)
!9313 = !DILocation(line: 653, column: 2, scope: !9312)
!9314 = !DILocalVariable(name: "__esi", scope: !9312, file: !6290, line: 653, type: !230)
!9315 = !DILocalVariable(name: "__edx", scope: !9312, file: !6290, line: 653, type: !230)
!9316 = !DILocalVariable(name: "__ecx", scope: !9312, file: !6290, line: 653, type: !230)
!9317 = !DILocalVariable(name: "__eax", scope: !9312, file: !6290, line: 653, type: !230)
!9318 = !{i32 -2145699812, i32 -2145699062, i32 -2145698828, i32 -2145698777, i32 -2145698749, i32 -2145698724, i32 -2145699040, i32 -2145699027, i32 -2145698589, i32 -2145698470, i32 -2145698935, i32 -2145698908, i32 -2145698880, i32 -2145698850}
!9319 = !DILocation(line: 654, column: 1, scope: !9306)
!9320 = distinct !DISubprogram(name: "slow_down_io", scope: !6290, file: !6290, line: 40, type: !2132, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9321 = !DILocation(line: 42, column: 13, scope: !9320)
!9322 = !DILocation(line: 42, column: 2, scope: !9320)
!9323 = !DILocation(line: 48, column: 1, scope: !9320)
!9324 = distinct !DISubprogram(name: "test_bit", scope: !9325, file: !9325, line: 132, type: !9326, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9325 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9326 = !DISubroutineType(types: !9327)
!9327 = !{!688, !520, !9328}
!9328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9329, size: 64)
!9329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9330)
!9330 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !230)
!9331 = !DILocalVariable(name: "nr", arg: 1, scope: !9332, file: !8614, line: 210, type: !520)
!9332 = distinct !DISubprogram(name: "variable_test_bit", scope: !8614, file: !8614, line: 210, type: !9326, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9333 = !DILocation(line: 210, column: 52, scope: !9332, inlinedAt: !9334)
!9334 = distinct !DILocation(line: 135, column: 9, scope: !9324)
!9335 = !DILocalVariable(name: "addr", arg: 2, scope: !9332, file: !8614, line: 210, type: !9328)
!9336 = !DILocation(line: 210, column: 86, scope: !9332, inlinedAt: !9334)
!9337 = !DILocalVariable(name: "oldbit", scope: !9332, file: !8614, line: 212, type: !688)
!9338 = !DILocation(line: 212, column: 7, scope: !9332, inlinedAt: !9334)
!9339 = !DILocalVariable(name: "nr", arg: 1, scope: !9340, file: !8614, line: 204, type: !520)
!9340 = distinct !DISubprogram(name: "constant_test_bit", scope: !8614, file: !8614, line: 204, type: !9326, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9341 = !DILocation(line: 204, column: 52, scope: !9340, inlinedAt: !9342)
!9342 = distinct !DILocation(line: 135, column: 9, scope: !9324)
!9343 = !DILocalVariable(name: "addr", arg: 2, scope: !9340, file: !8614, line: 204, type: !9328)
!9344 = !DILocation(line: 204, column: 86, scope: !9340, inlinedAt: !9342)
!9345 = !DILocalVariable(name: "v", arg: 1, scope: !9346, file: !5486, line: 69, type: !5489)
!9346 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5486, file: !5486, line: 69, type: !5487, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9347 = !DILocation(line: 69, column: 73, scope: !9346, inlinedAt: !9348)
!9348 = distinct !DILocation(line: 134, column: 2, scope: !9324)
!9349 = !DILocalVariable(name: "size", arg: 2, scope: !9346, file: !5486, line: 69, type: !532)
!9350 = !DILocation(line: 69, column: 83, scope: !9346, inlinedAt: !9348)
!9351 = !DILocalVariable(name: "nr", arg: 1, scope: !9324, file: !9325, line: 132, type: !520)
!9352 = !DILocation(line: 132, column: 34, scope: !9324)
!9353 = !DILocalVariable(name: "addr", arg: 2, scope: !9324, file: !9325, line: 132, type: !9328)
!9354 = !DILocation(line: 132, column: 68, scope: !9324)
!9355 = !DILocation(line: 134, column: 25, scope: !9324)
!9356 = !DILocation(line: 134, column: 32, scope: !9324)
!9357 = !DILocation(line: 134, column: 30, scope: !9324)
!9358 = !DILocation(line: 71, column: 19, scope: !9346, inlinedAt: !9348)
!9359 = !DILocation(line: 71, column: 22, scope: !9346, inlinedAt: !9348)
!9360 = !DILocation(line: 71, column: 2, scope: !9346, inlinedAt: !9348)
!9361 = !DILocation(line: 72, column: 2, scope: !9346, inlinedAt: !9348)
!9362 = !DILocation(line: 135, column: 9, scope: !9324)
!9363 = !DILocation(line: 206, column: 19, scope: !9340, inlinedAt: !9342)
!9364 = !DILocation(line: 206, column: 22, scope: !9340, inlinedAt: !9342)
!9365 = !DILocation(line: 206, column: 15, scope: !9340, inlinedAt: !9342)
!9366 = !DILocation(line: 207, column: 4, scope: !9340, inlinedAt: !9342)
!9367 = !DILocation(line: 207, column: 9, scope: !9340, inlinedAt: !9342)
!9368 = !DILocation(line: 207, column: 12, scope: !9340, inlinedAt: !9342)
!9369 = !DILocation(line: 206, column: 44, scope: !9340, inlinedAt: !9342)
!9370 = !DILocation(line: 207, column: 37, scope: !9340, inlinedAt: !9342)
!9371 = !DILocation(line: 217, column: 33, scope: !9332, inlinedAt: !9334)
!9372 = !DILocation(line: 217, column: 46, scope: !9332, inlinedAt: !9334)
!9373 = !DILocation(line: 214, column: 2, scope: !9332, inlinedAt: !9334)
!9374 = !{i32 -2147059293, i32 -2147059233}
!9375 = !DILocation(line: 219, column: 9, scope: !9332, inlinedAt: !9334)
!9376 = !DILocation(line: 135, column: 2, scope: !9324)
!9377 = distinct !DISubprogram(name: "kasan_check_read", scope: !8767, file: !8767, line: 34, type: !8768, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9378 = !DILocalVariable(name: "p", arg: 1, scope: !9377, file: !8767, line: 34, type: !5489)
!9379 = !DILocation(line: 34, column: 58, scope: !9377)
!9380 = !DILocalVariable(name: "size", arg: 2, scope: !9377, file: !8767, line: 34, type: !7)
!9381 = !DILocation(line: 34, column: 74, scope: !9377)
!9382 = !DILocation(line: 36, column: 2, scope: !9377)
!9383 = distinct !DISubprogram(name: "serial8250_do_get_divisor", scope: !3, file: !3, line: 2505, type: !280, scopeLine: 2508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9384 = !DILocalVariable(name: "port", arg: 1, scope: !9383, file: !3, line: 2505, type: !238)
!9385 = !DILocation(line: 2505, column: 65, scope: !9383)
!9386 = !DILocalVariable(name: "baud", arg: 2, scope: !9383, file: !3, line: 2506, type: !7)
!9387 = !DILocation(line: 2506, column: 25, scope: !9383)
!9388 = !DILocalVariable(name: "frac", arg: 3, scope: !9383, file: !3, line: 2507, type: !282)
!9389 = !DILocation(line: 2507, column: 26, scope: !9383)
!9390 = !DILocalVariable(name: "up", scope: !9383, file: !3, line: 2509, type: !206)
!9391 = !DILocation(line: 2509, column: 25, scope: !9383)
!9392 = !DILocation(line: 2509, column: 43, scope: !9383)
!9393 = !DILocation(line: 2509, column: 30, scope: !9383)
!9394 = !DILocalVariable(name: "quot", scope: !9383, file: !3, line: 2510, type: !7)
!9395 = !DILocation(line: 2510, column: 15, scope: !9383)
!9396 = !DILocation(line: 2517, column: 7, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 2517, column: 6)
!9398 = !DILocation(line: 2517, column: 13, scope: !9397)
!9399 = !DILocation(line: 2517, column: 19, scope: !9397)
!9400 = !DILocation(line: 2517, column: 43, scope: !9397)
!9401 = !DILocation(line: 2518, column: 6, scope: !9397)
!9402 = !DILocation(line: 2518, column: 15, scope: !9397)
!9403 = !DILocation(line: 2518, column: 21, scope: !9397)
!9404 = !DILocation(line: 2518, column: 28, scope: !9397)
!9405 = !DILocation(line: 2518, column: 11, scope: !9397)
!9406 = !DILocation(line: 2517, column: 6, scope: !9383)
!9407 = !DILocation(line: 2519, column: 8, scope: !9397)
!9408 = !DILocation(line: 2519, column: 3, scope: !9397)
!9409 = !DILocation(line: 2520, column: 12, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9397, file: !3, line: 2520, column: 11)
!9411 = !DILocation(line: 2520, column: 18, scope: !9410)
!9412 = !DILocation(line: 2520, column: 24, scope: !9410)
!9413 = !DILocation(line: 2520, column: 48, scope: !9410)
!9414 = !DILocation(line: 2521, column: 4, scope: !9410)
!9415 = !DILocation(line: 2521, column: 13, scope: !9410)
!9416 = !DILocation(line: 2521, column: 19, scope: !9410)
!9417 = !DILocation(line: 2521, column: 26, scope: !9410)
!9418 = !DILocation(line: 2521, column: 9, scope: !9410)
!9419 = !DILocation(line: 2520, column: 11, scope: !9397)
!9420 = !DILocation(line: 2522, column: 8, scope: !9410)
!9421 = !DILocation(line: 2522, column: 3, scope: !9410)
!9422 = !DILocation(line: 2523, column: 11, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 2523, column: 11)
!9424 = !DILocation(line: 2523, column: 15, scope: !9423)
!9425 = !DILocation(line: 2523, column: 20, scope: !9423)
!9426 = !DILocation(line: 2523, column: 25, scope: !9423)
!9427 = !DILocation(line: 2523, column: 11, scope: !9410)
!9428 = !DILocation(line: 2524, column: 27, scope: !9423)
!9429 = !DILocation(line: 2524, column: 31, scope: !9423)
!9430 = !DILocation(line: 2524, column: 10, scope: !9423)
!9431 = !DILocation(line: 2524, column: 8, scope: !9423)
!9432 = !DILocation(line: 2524, column: 3, scope: !9423)
!9433 = !DILocation(line: 2526, column: 27, scope: !9423)
!9434 = !DILocation(line: 2526, column: 33, scope: !9423)
!9435 = !DILocation(line: 2526, column: 10, scope: !9423)
!9436 = !DILocation(line: 2526, column: 8, scope: !9423)
!9437 = !DILocation(line: 2531, column: 6, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9383, file: !3, line: 2531, column: 6)
!9439 = !DILocation(line: 2531, column: 10, scope: !9438)
!9440 = !DILocation(line: 2531, column: 15, scope: !9438)
!9441 = !DILocation(line: 2531, column: 31, scope: !9438)
!9442 = !DILocation(line: 2531, column: 35, scope: !9438)
!9443 = !DILocation(line: 2531, column: 40, scope: !9438)
!9444 = !DILocation(line: 2531, column: 48, scope: !9438)
!9445 = !DILocation(line: 2531, column: 6, scope: !9383)
!9446 = !DILocation(line: 2532, column: 7, scope: !9438)
!9447 = !DILocation(line: 2532, column: 3, scope: !9438)
!9448 = !DILocation(line: 2534, column: 9, scope: !9383)
!9449 = !DILocation(line: 2534, column: 2, scope: !9383)
!9450 = distinct !DISubprogram(name: "npcm_get_divisor", scope: !3, file: !3, line: 2497, type: !9451, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9451 = !DISubroutineType(types: !9452)
!9452 = !{!7, !206, !7}
!9453 = !DILocalVariable(name: "up", arg: 1, scope: !9450, file: !3, line: 2497, type: !206)
!9454 = !DILocation(line: 2497, column: 61, scope: !9450)
!9455 = !DILocalVariable(name: "baud", arg: 2, scope: !9450, file: !3, line: 2498, type: !7)
!9456 = !DILocation(line: 2498, column: 16, scope: !9450)
!9457 = !DILocalVariable(name: "port", scope: !9450, file: !3, line: 2500, type: !238)
!9458 = !DILocation(line: 2500, column: 20, scope: !9450)
!9459 = !DILocation(line: 2500, column: 28, scope: !9450)
!9460 = !DILocation(line: 2500, column: 32, scope: !9450)
!9461 = !DILocalVariable(name: "__x", scope: !9462, file: !3, line: 2502, type: !7)
!9462 = distinct !DILexicalBlock(scope: !9450, file: !3, line: 2502, column: 9)
!9463 = !DILocation(line: 2502, column: 9, scope: !9462)
!9464 = !DILocalVariable(name: "__d", scope: !9462, file: !3, line: 2502, type: !7)
!9465 = !DILocation(line: 2502, column: 57, scope: !9450)
!9466 = !DILocation(line: 2502, column: 2, scope: !9450)
!9467 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6290, file: !6290, line: 661, type: !2132, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9468 = !DILocalVariable(name: "__edi", scope: !9469, file: !6290, line: 663, type: !230)
!9469 = distinct !DILexicalBlock(scope: !9467, file: !6290, line: 663, column: 2)
!9470 = !DILocation(line: 663, column: 2, scope: !9469)
!9471 = !DILocalVariable(name: "__esi", scope: !9469, file: !6290, line: 663, type: !230)
!9472 = !DILocalVariable(name: "__edx", scope: !9469, file: !6290, line: 663, type: !230)
!9473 = !DILocalVariable(name: "__ecx", scope: !9469, file: !6290, line: 663, type: !230)
!9474 = !DILocalVariable(name: "__eax", scope: !9469, file: !6290, line: 663, type: !230)
!9475 = !{i32 -2145694601, i32 -2145693871, i32 -2145693637, i32 -2145693586, i32 -2145693558, i32 -2145693533, i32 -2145693849, i32 -2145693836, i32 -2145693398, i32 -2145693279, i32 -2145693744, i32 -2145693717, i32 -2145693689, i32 -2145693659}
!9476 = !DILocation(line: 664, column: 1, scope: !9467)
!9477 = distinct !DISubprogram(name: "serial8250_tx_empty", scope: !3, file: !3, line: 1965, type: !272, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9478 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !9479)
!9479 = distinct !DILocation(line: 1976, column: 2, scope: !9477)
!9480 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !9479)
!9481 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !9482)
!9482 = distinct !DILocation(line: 1973, column: 2, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 1973, column: 2)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1973, column: 2)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 1973, column: 2)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1973, column: 2)
!9487 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 1973, column: 2)
!9488 = !DILocalVariable(name: "port", arg: 1, scope: !9477, file: !3, line: 1965, type: !238)
!9489 = !DILocation(line: 1965, column: 59, scope: !9477)
!9490 = !DILocalVariable(name: "up", scope: !9477, file: !3, line: 1967, type: !206)
!9491 = !DILocation(line: 1967, column: 25, scope: !9477)
!9492 = !DILocation(line: 1967, column: 43, scope: !9477)
!9493 = !DILocation(line: 1967, column: 30, scope: !9477)
!9494 = !DILocalVariable(name: "flags", scope: !9477, file: !3, line: 1968, type: !230)
!9495 = !DILocation(line: 1968, column: 16, scope: !9477)
!9496 = !DILocalVariable(name: "lsr", scope: !9477, file: !3, line: 1969, type: !7)
!9497 = !DILocation(line: 1969, column: 15, scope: !9477)
!9498 = !DILocation(line: 1971, column: 21, scope: !9477)
!9499 = !DILocation(line: 1971, column: 2, scope: !9477)
!9500 = !DILocation(line: 1973, column: 2, scope: !9477)
!9501 = !DILocation(line: 1973, column: 2, scope: !9487)
!9502 = !DILocalVariable(name: "__dummy", scope: !9503, file: !3, line: 1973, type: !230)
!9503 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 1973, column: 2)
!9504 = !DILocation(line: 1973, column: 2, scope: !9503)
!9505 = !DILocalVariable(name: "__dummy2", scope: !9503, file: !3, line: 1973, type: !230)
!9506 = !DILocation(line: 1973, column: 2, scope: !9486)
!9507 = !DILocation(line: 1973, column: 2, scope: !9485)
!9508 = !DILocation(line: 1973, column: 2, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1973, column: 2)
!9510 = !DILocalVariable(name: "__dummy", scope: !9511, file: !3, line: 1973, type: !230)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !3, line: 1973, column: 2)
!9512 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 1973, column: 2)
!9513 = !DILocation(line: 1973, column: 2, scope: !9511)
!9514 = !DILocalVariable(name: "__dummy2", scope: !9511, file: !3, line: 1973, type: !230)
!9515 = !DILocation(line: 1973, column: 2, scope: !9512)
!9516 = !DILocation(line: 1973, column: 2, scope: !9484)
!9517 = !{i32 -2141641357}
!9518 = !DILocation(line: 1973, column: 2, scope: !9483)
!9519 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !9482)
!9520 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !9482)
!9521 = !DILocation(line: 1974, column: 23, scope: !9477)
!9522 = !DILocation(line: 1974, column: 8, scope: !9477)
!9523 = !DILocation(line: 1974, column: 6, scope: !9477)
!9524 = !DILocation(line: 1975, column: 25, scope: !9477)
!9525 = !DILocation(line: 1975, column: 29, scope: !9477)
!9526 = !DILocation(line: 1975, column: 2, scope: !9477)
!9527 = !DILocation(line: 1975, column: 6, scope: !9477)
!9528 = !DILocation(line: 1975, column: 22, scope: !9477)
!9529 = !DILocation(line: 1976, column: 26, scope: !9477)
!9530 = !DILocation(line: 1976, column: 32, scope: !9477)
!9531 = !DILocation(line: 1976, column: 38, scope: !9477)
!9532 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !9479)
!9533 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !9479)
!9534 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !9479)
!9535 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !9479)
!9536 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !9479)
!9537 = !DILocation(line: 1978, column: 21, scope: !9477)
!9538 = !DILocation(line: 1978, column: 2, scope: !9477)
!9539 = !DILocation(line: 1980, column: 10, scope: !9477)
!9540 = !DILocation(line: 1980, column: 14, scope: !9477)
!9541 = !DILocation(line: 1980, column: 28, scope: !9477)
!9542 = !DILocation(line: 1980, column: 9, scope: !9477)
!9543 = !DILocation(line: 1980, column: 2, scope: !9477)
!9544 = distinct !DISubprogram(name: "serial8250_get_mctrl", scope: !3, file: !3, line: 2001, type: !272, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9545 = !DILocalVariable(name: "port", arg: 1, scope: !9544, file: !3, line: 2001, type: !238)
!9546 = !DILocation(line: 2001, column: 60, scope: !9544)
!9547 = !DILocation(line: 2003, column: 6, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 2003, column: 6)
!9549 = !DILocation(line: 2003, column: 12, scope: !9548)
!9550 = !DILocation(line: 2003, column: 6, scope: !9544)
!9551 = !DILocation(line: 2004, column: 10, scope: !9548)
!9552 = !DILocation(line: 2004, column: 16, scope: !9548)
!9553 = !DILocation(line: 2004, column: 26, scope: !9548)
!9554 = !DILocation(line: 2004, column: 3, scope: !9548)
!9555 = !DILocation(line: 2005, column: 33, scope: !9544)
!9556 = !DILocation(line: 2005, column: 9, scope: !9544)
!9557 = !DILocation(line: 2005, column: 2, scope: !9544)
!9558 = !DILocation(line: 2006, column: 1, scope: !9544)
!9559 = distinct !DISubprogram(name: "serial8250_start_tx", scope: !3, file: !3, line: 1652, type: !293, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9560 = !DILocalVariable(name: "port", arg: 1, scope: !9559, file: !3, line: 1652, type: !238)
!9561 = !DILocation(line: 1652, column: 51, scope: !9559)
!9562 = !DILocalVariable(name: "up", scope: !9559, file: !3, line: 1654, type: !206)
!9563 = !DILocation(line: 1654, column: 25, scope: !9559)
!9564 = !DILocation(line: 1654, column: 43, scope: !9559)
!9565 = !DILocation(line: 1654, column: 30, scope: !9559)
!9566 = !DILocalVariable(name: "em485", scope: !9559, file: !3, line: 1655, type: !4867)
!9567 = !DILocation(line: 1655, column: 26, scope: !9559)
!9568 = !DILocation(line: 1655, column: 34, scope: !9559)
!9569 = !DILocation(line: 1655, column: 38, scope: !9559)
!9570 = !DILocation(line: 1657, column: 24, scope: !9559)
!9571 = !DILocation(line: 1657, column: 2, scope: !9559)
!9572 = !DILocation(line: 1659, column: 6, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 1659, column: 6)
!9574 = !DILocation(line: 1659, column: 12, scope: !9573)
!9575 = !DILocation(line: 1660, column: 6, scope: !9573)
!9576 = !DILocation(line: 1660, column: 13, scope: !9573)
!9577 = !DILocation(line: 1660, column: 30, scope: !9573)
!9578 = !DILocation(line: 1660, column: 37, scope: !9573)
!9579 = !DILocation(line: 1660, column: 26, scope: !9573)
!9580 = !DILocation(line: 1659, column: 6, scope: !9559)
!9581 = !DILocation(line: 1661, column: 3, scope: !9573)
!9582 = !DILocation(line: 1663, column: 6, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 1663, column: 6)
!9584 = !DILocation(line: 1663, column: 6, scope: !9559)
!9585 = !DILocation(line: 1664, column: 18, scope: !9583)
!9586 = !DILocation(line: 1664, column: 3, scope: !9583)
!9587 = !DILocation(line: 1666, column: 14, scope: !9583)
!9588 = !DILocation(line: 1666, column: 3, scope: !9583)
!9589 = !DILocation(line: 1667, column: 1, scope: !9559)
!9590 = distinct !DISubprogram(name: "serial8250_throttle", scope: !3, file: !3, line: 1669, type: !293, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9591 = !DILocalVariable(name: "port", arg: 1, scope: !9590, file: !3, line: 1669, type: !238)
!9592 = !DILocation(line: 1669, column: 51, scope: !9590)
!9593 = !DILocation(line: 1671, column: 2, scope: !9590)
!9594 = !DILocation(line: 1671, column: 8, scope: !9590)
!9595 = !DILocation(line: 1671, column: 17, scope: !9590)
!9596 = !DILocation(line: 1672, column: 1, scope: !9590)
!9597 = distinct !DISubprogram(name: "serial8250_unthrottle", scope: !3, file: !3, line: 1674, type: !293, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9598 = !DILocalVariable(name: "port", arg: 1, scope: !9597, file: !3, line: 1674, type: !238)
!9599 = !DILocation(line: 1674, column: 53, scope: !9597)
!9600 = !DILocation(line: 1676, column: 2, scope: !9597)
!9601 = !DILocation(line: 1676, column: 8, scope: !9597)
!9602 = !DILocation(line: 1676, column: 19, scope: !9597)
!9603 = !DILocation(line: 1677, column: 1, scope: !9597)
!9604 = distinct !DISubprogram(name: "serial8250_break_ctl", scope: !3, file: !3, line: 2036, type: !4459, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9605 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !9606)
!9606 = distinct !DILocation(line: 2048, column: 2, scope: !9604)
!9607 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !9606)
!9608 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !9609)
!9609 = distinct !DILocation(line: 2042, column: 2, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 2042, column: 2)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2042, column: 2)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2042, column: 2)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !3, line: 2042, column: 2)
!9614 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 2042, column: 2)
!9615 = !DILocalVariable(name: "port", arg: 1, scope: !9604, file: !3, line: 2036, type: !238)
!9616 = !DILocation(line: 2036, column: 52, scope: !9604)
!9617 = !DILocalVariable(name: "break_state", arg: 2, scope: !9604, file: !3, line: 2036, type: !239)
!9618 = !DILocation(line: 2036, column: 62, scope: !9604)
!9619 = !DILocalVariable(name: "up", scope: !9604, file: !3, line: 2038, type: !206)
!9620 = !DILocation(line: 2038, column: 25, scope: !9604)
!9621 = !DILocation(line: 2038, column: 43, scope: !9604)
!9622 = !DILocation(line: 2038, column: 30, scope: !9604)
!9623 = !DILocalVariable(name: "flags", scope: !9604, file: !3, line: 2039, type: !230)
!9624 = !DILocation(line: 2039, column: 16, scope: !9604)
!9625 = !DILocation(line: 2041, column: 21, scope: !9604)
!9626 = !DILocation(line: 2041, column: 2, scope: !9604)
!9627 = !DILocation(line: 2042, column: 2, scope: !9604)
!9628 = !DILocation(line: 2042, column: 2, scope: !9614)
!9629 = !DILocalVariable(name: "__dummy", scope: !9630, file: !3, line: 2042, type: !230)
!9630 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 2042, column: 2)
!9631 = !DILocation(line: 2042, column: 2, scope: !9630)
!9632 = !DILocalVariable(name: "__dummy2", scope: !9630, file: !3, line: 2042, type: !230)
!9633 = !DILocation(line: 2042, column: 2, scope: !9613)
!9634 = !DILocation(line: 2042, column: 2, scope: !9612)
!9635 = !DILocation(line: 2042, column: 2, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2042, column: 2)
!9637 = !DILocalVariable(name: "__dummy", scope: !9638, file: !3, line: 2042, type: !230)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 2042, column: 2)
!9639 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 2042, column: 2)
!9640 = !DILocation(line: 2042, column: 2, scope: !9638)
!9641 = !DILocalVariable(name: "__dummy2", scope: !9638, file: !3, line: 2042, type: !230)
!9642 = !DILocation(line: 2042, column: 2, scope: !9639)
!9643 = !DILocation(line: 2042, column: 2, scope: !9611)
!9644 = !{i32 -2141639966}
!9645 = !DILocation(line: 2042, column: 2, scope: !9610)
!9646 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !9609)
!9647 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !9609)
!9648 = !DILocation(line: 2043, column: 6, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 2043, column: 6)
!9650 = !DILocation(line: 2043, column: 18, scope: !9649)
!9651 = !DILocation(line: 2043, column: 6, scope: !9604)
!9652 = !DILocation(line: 2044, column: 3, scope: !9649)
!9653 = !DILocation(line: 2044, column: 7, scope: !9649)
!9654 = !DILocation(line: 2044, column: 11, scope: !9649)
!9655 = !DILocation(line: 2046, column: 3, scope: !9649)
!9656 = !DILocation(line: 2046, column: 7, scope: !9649)
!9657 = !DILocation(line: 2046, column: 11, scope: !9649)
!9658 = !DILocation(line: 2047, column: 18, scope: !9604)
!9659 = !DILocation(line: 2047, column: 34, scope: !9604)
!9660 = !DILocation(line: 2047, column: 38, scope: !9604)
!9661 = !DILocation(line: 2047, column: 2, scope: !9604)
!9662 = !DILocation(line: 2048, column: 26, scope: !9604)
!9663 = !DILocation(line: 2048, column: 32, scope: !9604)
!9664 = !DILocation(line: 2048, column: 38, scope: !9604)
!9665 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !9606)
!9666 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !9606)
!9667 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !9606)
!9668 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !9606)
!9669 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !9606)
!9670 = !DILocation(line: 2049, column: 21, scope: !9604)
!9671 = !DILocation(line: 2049, column: 2, scope: !9604)
!9672 = !DILocation(line: 2050, column: 1, scope: !9604)
!9673 = distinct !DISubprogram(name: "serial8250_startup", scope: !3, file: !3, line: 2426, type: !289, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9674 = !DILocalVariable(name: "port", arg: 1, scope: !9673, file: !3, line: 2426, type: !238)
!9675 = !DILocation(line: 2426, column: 49, scope: !9673)
!9676 = !DILocation(line: 2428, column: 6, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 2428, column: 6)
!9678 = !DILocation(line: 2428, column: 12, scope: !9677)
!9679 = !DILocation(line: 2428, column: 6, scope: !9673)
!9680 = !DILocation(line: 2429, column: 10, scope: !9677)
!9681 = !DILocation(line: 2429, column: 16, scope: !9677)
!9682 = !DILocation(line: 2429, column: 24, scope: !9677)
!9683 = !DILocation(line: 2429, column: 3, scope: !9677)
!9684 = !DILocation(line: 2430, column: 31, scope: !9673)
!9685 = !DILocation(line: 2430, column: 9, scope: !9673)
!9686 = !DILocation(line: 2430, column: 2, scope: !9673)
!9687 = !DILocation(line: 2431, column: 1, scope: !9673)
!9688 = distinct !DISubprogram(name: "serial8250_shutdown", scope: !3, file: !3, line: 2488, type: !293, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9689 = !DILocalVariable(name: "port", arg: 1, scope: !9688, file: !3, line: 2488, type: !238)
!9690 = !DILocation(line: 2488, column: 51, scope: !9688)
!9691 = !DILocation(line: 2490, column: 6, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9688, file: !3, line: 2490, column: 6)
!9693 = !DILocation(line: 2490, column: 12, scope: !9692)
!9694 = !DILocation(line: 2490, column: 6, scope: !9688)
!9695 = !DILocation(line: 2491, column: 3, scope: !9692)
!9696 = !DILocation(line: 2491, column: 9, scope: !9692)
!9697 = !DILocation(line: 2491, column: 18, scope: !9692)
!9698 = !DILocation(line: 2493, column: 26, scope: !9692)
!9699 = !DILocation(line: 2493, column: 3, scope: !9692)
!9700 = !DILocation(line: 2494, column: 1, scope: !9688)
!9701 = distinct !DISubprogram(name: "serial8250_set_termios", scope: !3, file: !3, line: 2820, type: !246, scopeLine: 2822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9702 = !DILocalVariable(name: "port", arg: 1, scope: !9701, file: !3, line: 2820, type: !238)
!9703 = !DILocation(line: 2820, column: 42, scope: !9701)
!9704 = !DILocalVariable(name: "termios", arg: 2, scope: !9701, file: !3, line: 2820, type: !248)
!9705 = !DILocation(line: 2820, column: 65, scope: !9701)
!9706 = !DILocalVariable(name: "old", arg: 3, scope: !9701, file: !3, line: 2821, type: !248)
!9707 = !DILocation(line: 2821, column: 27, scope: !9701)
!9708 = !DILocation(line: 2823, column: 6, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9701, file: !3, line: 2823, column: 6)
!9710 = !DILocation(line: 2823, column: 12, scope: !9709)
!9711 = !DILocation(line: 2823, column: 6, scope: !9701)
!9712 = !DILocation(line: 2824, column: 3, scope: !9709)
!9713 = !DILocation(line: 2824, column: 9, scope: !9709)
!9714 = !DILocation(line: 2824, column: 21, scope: !9709)
!9715 = !DILocation(line: 2824, column: 27, scope: !9709)
!9716 = !DILocation(line: 2824, column: 36, scope: !9709)
!9717 = !DILocation(line: 2826, column: 29, scope: !9709)
!9718 = !DILocation(line: 2826, column: 35, scope: !9709)
!9719 = !DILocation(line: 2826, column: 44, scope: !9709)
!9720 = !DILocation(line: 2826, column: 3, scope: !9709)
!9721 = !DILocation(line: 2827, column: 1, scope: !9701)
!9722 = distinct !DISubprogram(name: "serial8250_set_ldisc", scope: !3, file: !3, line: 2848, type: !268, scopeLine: 2849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9723 = !DILocalVariable(name: "port", arg: 1, scope: !9722, file: !3, line: 2848, type: !238)
!9724 = !DILocation(line: 2848, column: 40, scope: !9722)
!9725 = !DILocalVariable(name: "termios", arg: 2, scope: !9722, file: !3, line: 2848, type: !248)
!9726 = !DILocation(line: 2848, column: 63, scope: !9722)
!9727 = !DILocation(line: 2850, column: 6, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 2850, column: 6)
!9729 = !DILocation(line: 2850, column: 12, scope: !9728)
!9730 = !DILocation(line: 2850, column: 6, scope: !9722)
!9731 = !DILocation(line: 2851, column: 3, scope: !9728)
!9732 = !DILocation(line: 2851, column: 9, scope: !9728)
!9733 = !DILocation(line: 2851, column: 19, scope: !9728)
!9734 = !DILocation(line: 2851, column: 25, scope: !9728)
!9735 = !DILocation(line: 2853, column: 27, scope: !9728)
!9736 = !DILocation(line: 2853, column: 33, scope: !9728)
!9737 = !DILocation(line: 2853, column: 3, scope: !9728)
!9738 = !DILocation(line: 2854, column: 1, scope: !9722)
!9739 = distinct !DISubprogram(name: "serial8250_pm", scope: !3, file: !3, line: 2866, type: !300, scopeLine: 2868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9740 = !DILocalVariable(name: "port", arg: 1, scope: !9739, file: !3, line: 2866, type: !238)
!9741 = !DILocation(line: 2866, column: 33, scope: !9739)
!9742 = !DILocalVariable(name: "state", arg: 2, scope: !9739, file: !3, line: 2866, type: !7)
!9743 = !DILocation(line: 2866, column: 52, scope: !9739)
!9744 = !DILocalVariable(name: "oldstate", arg: 3, scope: !9739, file: !3, line: 2867, type: !7)
!9745 = !DILocation(line: 2867, column: 21, scope: !9739)
!9746 = !DILocation(line: 2869, column: 6, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 2869, column: 6)
!9748 = !DILocation(line: 2869, column: 12, scope: !9747)
!9749 = !DILocation(line: 2869, column: 6, scope: !9739)
!9750 = !DILocation(line: 2870, column: 3, scope: !9747)
!9751 = !DILocation(line: 2870, column: 9, scope: !9747)
!9752 = !DILocation(line: 2870, column: 12, scope: !9747)
!9753 = !DILocation(line: 2870, column: 18, scope: !9747)
!9754 = !DILocation(line: 2870, column: 25, scope: !9747)
!9755 = !DILocation(line: 2872, column: 20, scope: !9747)
!9756 = !DILocation(line: 2872, column: 26, scope: !9747)
!9757 = !DILocation(line: 2872, column: 33, scope: !9747)
!9758 = !DILocation(line: 2872, column: 3, scope: !9747)
!9759 = !DILocation(line: 2873, column: 1, scope: !9739)
!9760 = distinct !DISubprogram(name: "serial8250_type", scope: !3, file: !3, line: 3163, type: !4469, scopeLine: 3164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9761 = !DILocalVariable(name: "port", arg: 1, scope: !9760, file: !3, line: 3163, type: !238)
!9762 = !DILocation(line: 3163, column: 54, scope: !9760)
!9763 = !DILocalVariable(name: "type", scope: !9760, file: !3, line: 3165, type: !239)
!9764 = !DILocation(line: 3165, column: 6, scope: !9760)
!9765 = !DILocation(line: 3165, column: 13, scope: !9760)
!9766 = !DILocation(line: 3165, column: 19, scope: !9760)
!9767 = !DILocation(line: 3167, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 3167, column: 6)
!9769 = !DILocation(line: 3167, column: 11, scope: !9768)
!9770 = !DILocation(line: 3167, column: 6, scope: !9760)
!9771 = !DILocation(line: 3168, column: 8, scope: !9768)
!9772 = !DILocation(line: 3168, column: 3, scope: !9768)
!9773 = !DILocation(line: 3169, column: 21, scope: !9760)
!9774 = !DILocation(line: 3169, column: 9, scope: !9760)
!9775 = !DILocation(line: 3169, column: 27, scope: !9760)
!9776 = !DILocation(line: 3169, column: 2, scope: !9760)
!9777 = distinct !DISubprogram(name: "serial8250_release_port", scope: !3, file: !3, line: 2962, type: !293, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9778 = !DILocalVariable(name: "port", arg: 1, scope: !9777, file: !3, line: 2962, type: !238)
!9779 = !DILocation(line: 2962, column: 55, scope: !9777)
!9780 = !DILocalVariable(name: "up", scope: !9777, file: !3, line: 2964, type: !206)
!9781 = !DILocation(line: 2964, column: 25, scope: !9777)
!9782 = !DILocation(line: 2964, column: 43, scope: !9777)
!9783 = !DILocation(line: 2964, column: 30, scope: !9777)
!9784 = !DILocation(line: 2966, column: 34, scope: !9777)
!9785 = !DILocation(line: 2966, column: 2, scope: !9777)
!9786 = !DILocation(line: 2967, column: 1, scope: !9777)
!9787 = distinct !DISubprogram(name: "serial8250_request_port", scope: !3, file: !3, line: 2969, type: !289, scopeLine: 2970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9788 = !DILocalVariable(name: "port", arg: 1, scope: !9787, file: !3, line: 2969, type: !238)
!9789 = !DILocation(line: 2969, column: 54, scope: !9787)
!9790 = !DILocalVariable(name: "up", scope: !9787, file: !3, line: 2971, type: !206)
!9791 = !DILocation(line: 2971, column: 25, scope: !9787)
!9792 = !DILocation(line: 2971, column: 43, scope: !9787)
!9793 = !DILocation(line: 2971, column: 30, scope: !9787)
!9794 = !DILocation(line: 2973, column: 41, scope: !9787)
!9795 = !DILocation(line: 2973, column: 9, scope: !9787)
!9796 = !DILocation(line: 2973, column: 2, scope: !9787)
!9797 = distinct !DISubprogram(name: "serial8250_config_port", scope: !3, file: !3, line: 3112, type: !4459, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9798 = !DILocalVariable(name: "port", arg: 1, scope: !9797, file: !3, line: 3112, type: !238)
!9799 = !DILocation(line: 3112, column: 54, scope: !9797)
!9800 = !DILocalVariable(name: "flags", arg: 2, scope: !9797, file: !3, line: 3112, type: !239)
!9801 = !DILocation(line: 3112, column: 64, scope: !9797)
!9802 = !DILocalVariable(name: "up", scope: !9797, file: !3, line: 3114, type: !206)
!9803 = !DILocation(line: 3114, column: 25, scope: !9797)
!9804 = !DILocation(line: 3114, column: 43, scope: !9797)
!9805 = !DILocation(line: 3114, column: 30, scope: !9797)
!9806 = !DILocalVariable(name: "ret", scope: !9797, file: !3, line: 3115, type: !239)
!9807 = !DILocation(line: 3115, column: 6, scope: !9797)
!9808 = !DILocation(line: 3121, column: 40, scope: !9797)
!9809 = !DILocation(line: 3121, column: 8, scope: !9797)
!9810 = !DILocation(line: 3121, column: 6, scope: !9797)
!9811 = !DILocation(line: 3122, column: 6, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3122, column: 6)
!9813 = !DILocation(line: 3122, column: 10, scope: !9812)
!9814 = !DILocation(line: 3122, column: 6, scope: !9797)
!9815 = !DILocation(line: 3123, column: 3, scope: !9812)
!9816 = !DILocation(line: 3125, column: 6, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3125, column: 6)
!9818 = !DILocation(line: 3125, column: 12, scope: !9817)
!9819 = !DILocation(line: 3125, column: 22, scope: !9817)
!9820 = !DILocation(line: 3125, column: 26, scope: !9817)
!9821 = !DILocation(line: 3125, column: 19, scope: !9817)
!9822 = !DILocation(line: 3125, column: 6, scope: !9797)
!9823 = !DILocation(line: 3126, column: 20, scope: !9817)
!9824 = !DILocation(line: 3126, column: 3, scope: !9817)
!9825 = !DILocation(line: 3128, column: 6, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3128, column: 6)
!9827 = !DILocation(line: 3128, column: 12, scope: !9826)
!9828 = !DILocation(line: 3128, column: 6, scope: !9797)
!9829 = !DILocation(line: 3129, column: 14, scope: !9826)
!9830 = !DILocation(line: 3129, column: 3, scope: !9826)
!9831 = !DILocation(line: 3131, column: 6, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3131, column: 6)
!9833 = !DILocation(line: 3131, column: 12, scope: !9832)
!9834 = !DILocation(line: 3131, column: 18, scope: !9832)
!9835 = !DILocation(line: 3131, column: 24, scope: !9832)
!9836 = !DILocation(line: 3131, column: 6, scope: !9797)
!9837 = !DILocation(line: 3132, column: 3, scope: !9832)
!9838 = !DILocation(line: 3132, column: 9, scope: !9832)
!9839 = !DILocation(line: 3132, column: 22, scope: !9832)
!9840 = !DILocation(line: 3132, column: 29, scope: !9832)
!9841 = !DILocation(line: 3132, column: 35, scope: !9832)
!9842 = !DILocation(line: 3135, column: 6, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3135, column: 6)
!9844 = !DILocation(line: 3135, column: 12, scope: !9843)
!9845 = !DILocation(line: 3135, column: 17, scope: !9843)
!9846 = !DILocation(line: 3135, column: 32, scope: !9843)
!9847 = !DILocation(line: 3135, column: 35, scope: !9843)
!9848 = !DILocation(line: 3135, column: 41, scope: !9843)
!9849 = !DILocation(line: 3135, column: 48, scope: !9843)
!9850 = !DILocation(line: 3135, column: 6, scope: !9797)
!9851 = !DILocation(line: 3136, column: 3, scope: !9843)
!9852 = !DILocation(line: 3136, column: 7, scope: !9843)
!9853 = !DILocation(line: 3136, column: 12, scope: !9843)
!9854 = !DILocation(line: 3139, column: 6, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3139, column: 6)
!9856 = !DILocation(line: 3139, column: 12, scope: !9855)
!9857 = !DILocation(line: 3139, column: 17, scope: !9855)
!9858 = !DILocation(line: 3139, column: 6, scope: !9797)
!9859 = !DILocation(line: 3140, column: 3, scope: !9855)
!9860 = !DILocation(line: 3140, column: 7, scope: !9855)
!9861 = !DILocation(line: 3140, column: 12, scope: !9855)
!9862 = !DILocation(line: 3142, column: 6, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3142, column: 6)
!9864 = !DILocation(line: 3142, column: 12, scope: !9863)
!9865 = !DILocation(line: 3142, column: 17, scope: !9863)
!9866 = !DILocation(line: 3142, column: 33, scope: !9863)
!9867 = !DILocation(line: 3142, column: 36, scope: !9863)
!9868 = !DILocation(line: 3142, column: 42, scope: !9863)
!9869 = !DILocation(line: 3142, column: 6, scope: !9797)
!9870 = !DILocation(line: 3143, column: 18, scope: !9863)
!9871 = !DILocation(line: 3143, column: 3, scope: !9863)
!9872 = !DILocation(line: 3145, column: 6, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3145, column: 6)
!9874 = !DILocation(line: 3145, column: 12, scope: !9873)
!9875 = !DILocation(line: 3145, column: 17, scope: !9873)
!9876 = !DILocation(line: 3145, column: 6, scope: !9797)
!9877 = !DILocation(line: 3146, column: 35, scope: !9873)
!9878 = !DILocation(line: 3146, column: 3, scope: !9873)
!9879 = !DILocation(line: 3148, column: 29, scope: !9797)
!9880 = !DILocation(line: 3148, column: 2, scope: !9797)
!9881 = !DILocation(line: 3149, column: 24, scope: !9797)
!9882 = !DILocation(line: 3149, column: 28, scope: !9797)
!9883 = !DILocation(line: 3149, column: 33, scope: !9797)
!9884 = !DILocation(line: 3149, column: 12, scope: !9797)
!9885 = !DILocation(line: 3149, column: 39, scope: !9797)
!9886 = !DILocation(line: 3149, column: 2, scope: !9797)
!9887 = !DILocation(line: 3149, column: 6, scope: !9797)
!9888 = !DILocation(line: 3149, column: 10, scope: !9797)
!9889 = !DILocation(line: 3150, column: 1, scope: !9797)
!9890 = distinct !DISubprogram(name: "serial8250_verify_port", scope: !3, file: !3, line: 3153, type: !4476, scopeLine: 3154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9891 = !DILocalVariable(name: "port", arg: 1, scope: !9890, file: !3, line: 3153, type: !238)
!9892 = !DILocation(line: 3153, column: 42, scope: !9890)
!9893 = !DILocalVariable(name: "ser", arg: 2, scope: !9890, file: !3, line: 3153, type: !4191)
!9894 = !DILocation(line: 3153, column: 70, scope: !9890)
!9895 = !DILocation(line: 3155, column: 6, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 3155, column: 6)
!9897 = !DILocation(line: 3155, column: 11, scope: !9896)
!9898 = !DILocation(line: 3155, column: 18, scope: !9896)
!9899 = !DILocation(line: 3155, column: 15, scope: !9896)
!9900 = !DILocation(line: 3155, column: 26, scope: !9896)
!9901 = !DILocation(line: 3155, column: 29, scope: !9896)
!9902 = !DILocation(line: 3155, column: 34, scope: !9896)
!9903 = !DILocation(line: 3155, column: 38, scope: !9896)
!9904 = !DILocation(line: 3155, column: 42, scope: !9896)
!9905 = !DILocation(line: 3156, column: 6, scope: !9896)
!9906 = !DILocation(line: 3156, column: 11, scope: !9896)
!9907 = !DILocation(line: 3156, column: 21, scope: !9896)
!9908 = !DILocation(line: 3156, column: 28, scope: !9896)
!9909 = !DILocation(line: 3156, column: 31, scope: !9896)
!9910 = !DILocation(line: 3156, column: 36, scope: !9896)
!9911 = !DILocation(line: 3156, column: 41, scope: !9896)
!9912 = !DILocation(line: 3156, column: 56, scope: !9896)
!9913 = !DILocation(line: 3157, column: 6, scope: !9896)
!9914 = !DILocation(line: 3157, column: 11, scope: !9896)
!9915 = !DILocation(line: 3157, column: 16, scope: !9896)
!9916 = !DILocation(line: 3157, column: 43, scope: !9896)
!9917 = !DILocation(line: 3157, column: 46, scope: !9896)
!9918 = !DILocation(line: 3157, column: 51, scope: !9896)
!9919 = !DILocation(line: 3157, column: 56, scope: !9896)
!9920 = !DILocation(line: 3157, column: 71, scope: !9896)
!9921 = !DILocation(line: 3158, column: 6, scope: !9896)
!9922 = !DILocation(line: 3158, column: 11, scope: !9896)
!9923 = !DILocation(line: 3158, column: 16, scope: !9896)
!9924 = !DILocation(line: 3155, column: 6, scope: !9890)
!9925 = !DILocation(line: 3159, column: 3, scope: !9896)
!9926 = !DILocation(line: 3160, column: 2, scope: !9890)
!9927 = !DILocation(line: 3161, column: 1, scope: !9890)
!9928 = distinct !DISubprogram(name: "start_tx_rs485", scope: !3, file: !3, line: 1611, type: !293, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9929 = !DILocalVariable(name: "port", arg: 1, scope: !9928, file: !3, line: 1611, type: !238)
!9930 = !DILocation(line: 1611, column: 53, scope: !9928)
!9931 = !DILocalVariable(name: "up", scope: !9928, file: !3, line: 1613, type: !206)
!9932 = !DILocation(line: 1613, column: 25, scope: !9928)
!9933 = !DILocation(line: 1613, column: 43, scope: !9928)
!9934 = !DILocation(line: 1613, column: 30, scope: !9928)
!9935 = !DILocalVariable(name: "em485", scope: !9928, file: !3, line: 1614, type: !4867)
!9936 = !DILocation(line: 1614, column: 26, scope: !9928)
!9937 = !DILocation(line: 1614, column: 34, scope: !9928)
!9938 = !DILocation(line: 1614, column: 38, scope: !9928)
!9939 = !DILocation(line: 1616, column: 2, scope: !9928)
!9940 = !DILocation(line: 1616, column: 9, scope: !9928)
!9941 = !DILocation(line: 1616, column: 22, scope: !9928)
!9942 = !DILocation(line: 1618, column: 6, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1618, column: 6)
!9944 = !DILocation(line: 1618, column: 13, scope: !9943)
!9945 = !DILocation(line: 1618, column: 6, scope: !9928)
!9946 = !DILocation(line: 1619, column: 3, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1618, column: 25)
!9948 = !DILocation(line: 1619, column: 10, scope: !9947)
!9949 = !DILocation(line: 1619, column: 21, scope: !9947)
!9950 = !DILocation(line: 1621, column: 3, scope: !9947)
!9951 = !DILocation(line: 1621, column: 7, scope: !9947)
!9952 = !DILocation(line: 1621, column: 22, scope: !9947)
!9953 = !DILocation(line: 1623, column: 7, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 1623, column: 7)
!9955 = !DILocation(line: 1623, column: 11, scope: !9954)
!9956 = !DILocation(line: 1623, column: 16, scope: !9954)
!9957 = !DILocation(line: 1623, column: 22, scope: !9954)
!9958 = !DILocation(line: 1623, column: 44, scope: !9954)
!9959 = !DILocation(line: 1623, column: 7, scope: !9947)
!9960 = !DILocation(line: 1624, column: 27, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1623, column: 49)
!9962 = !DILocation(line: 1624, column: 34, scope: !9961)
!9963 = !DILocation(line: 1624, column: 4, scope: !9961)
!9964 = !DILocation(line: 1624, column: 11, scope: !9961)
!9965 = !DILocation(line: 1624, column: 24, scope: !9961)
!9966 = !DILocation(line: 1625, column: 22, scope: !9961)
!9967 = !DILocation(line: 1625, column: 29, scope: !9961)
!9968 = !DILocation(line: 1626, column: 7, scope: !9961)
!9969 = !DILocation(line: 1626, column: 11, scope: !9961)
!9970 = !DILocation(line: 1626, column: 16, scope: !9961)
!9971 = !DILocation(line: 1626, column: 22, scope: !9961)
!9972 = !DILocation(line: 1625, column: 4, scope: !9961)
!9973 = !DILocation(line: 1627, column: 4, scope: !9961)
!9974 = !DILocation(line: 1629, column: 2, scope: !9947)
!9975 = !DILocation(line: 1631, column: 13, scope: !9928)
!9976 = !DILocation(line: 1631, column: 2, scope: !9928)
!9977 = !DILocation(line: 1632, column: 1, scope: !9928)
!9978 = distinct !DISubprogram(name: "serial8250_release_std_resource", scope: !3, file: !3, line: 2932, type: !4859, scopeLine: 2933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!9979 = !DILocalVariable(name: "up", arg: 1, scope: !9978, file: !3, line: 2932, type: !206)
!9980 = !DILocation(line: 2932, column: 68, scope: !9978)
!9981 = !DILocalVariable(name: "size", scope: !9978, file: !3, line: 2934, type: !7)
!9982 = !DILocation(line: 2934, column: 15, scope: !9978)
!9983 = !DILocation(line: 2934, column: 43, scope: !9978)
!9984 = !DILocation(line: 2934, column: 22, scope: !9978)
!9985 = !DILocalVariable(name: "port", scope: !9978, file: !3, line: 2935, type: !238)
!9986 = !DILocation(line: 2935, column: 20, scope: !9978)
!9987 = !DILocation(line: 2935, column: 28, scope: !9978)
!9988 = !DILocation(line: 2935, column: 32, scope: !9978)
!9989 = !DILocation(line: 2937, column: 10, scope: !9978)
!9990 = !DILocation(line: 2937, column: 16, scope: !9978)
!9991 = !DILocation(line: 2937, column: 2, scope: !9978)
!9992 = !DILocation(line: 2944, column: 8, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 2944, column: 7)
!9994 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 2937, column: 24)
!9995 = !DILocation(line: 2944, column: 14, scope: !9993)
!9996 = !DILocation(line: 2944, column: 7, scope: !9994)
!9997 = !DILocation(line: 2945, column: 4, scope: !9993)
!9998 = !DILocation(line: 2947, column: 7, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 2947, column: 7)
!10000 = !DILocation(line: 2947, column: 13, scope: !9999)
!10001 = !DILocation(line: 2947, column: 19, scope: !9999)
!10002 = !DILocation(line: 2947, column: 7, scope: !9994)
!10003 = !DILocation(line: 2948, column: 12, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 2947, column: 34)
!10005 = !DILocation(line: 2948, column: 18, scope: !10004)
!10006 = !DILocation(line: 2948, column: 4, scope: !10004)
!10007 = !DILocation(line: 2949, column: 4, scope: !10004)
!10008 = !DILocation(line: 2949, column: 10, scope: !10004)
!10009 = !DILocation(line: 2949, column: 18, scope: !10004)
!10010 = !DILocation(line: 2950, column: 3, scope: !10004)
!10011 = !DILocation(line: 2952, column: 3, scope: !9994)
!10012 = !DILocation(line: 2953, column: 3, scope: !9994)
!10013 = !DILocation(line: 2957, column: 3, scope: !9994)
!10014 = !DILocation(line: 2958, column: 3, scope: !9994)
!10015 = !DILocation(line: 2960, column: 1, scope: !9978)
!10016 = distinct !DISubprogram(name: "serial8250_port_size", scope: !3, file: !3, line: 2875, type: !6106, scopeLine: 2876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10017 = !DILocalVariable(name: "pt", arg: 1, scope: !10016, file: !3, line: 2875, type: !206)
!10018 = !DILocation(line: 2875, column: 65, scope: !10016)
!10019 = !DILocation(line: 2877, column: 6, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2877, column: 6)
!10021 = !DILocation(line: 2877, column: 10, scope: !10020)
!10022 = !DILocation(line: 2877, column: 15, scope: !10020)
!10023 = !DILocation(line: 2877, column: 6, scope: !10016)
!10024 = !DILocation(line: 2878, column: 10, scope: !10020)
!10025 = !DILocation(line: 2878, column: 14, scope: !10020)
!10026 = !DILocation(line: 2878, column: 19, scope: !10020)
!10027 = !DILocation(line: 2878, column: 3, scope: !10020)
!10028 = !DILocation(line: 2879, column: 6, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2879, column: 6)
!10030 = !DILocation(line: 2879, column: 10, scope: !10029)
!10031 = !DILocation(line: 2879, column: 15, scope: !10029)
!10032 = !DILocation(line: 2879, column: 22, scope: !10029)
!10033 = !DILocation(line: 2879, column: 6, scope: !10016)
!10034 = !DILocation(line: 2880, column: 7, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 2880, column: 7)
!10036 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 2879, column: 34)
!10037 = !DILocation(line: 2880, column: 11, scope: !10035)
!10038 = !DILocation(line: 2880, column: 16, scope: !10035)
!10039 = !DILocation(line: 2880, column: 21, scope: !10035)
!10040 = !DILocation(line: 2880, column: 7, scope: !10036)
!10041 = !DILocation(line: 2881, column: 4, scope: !10035)
!10042 = !DILocation(line: 2882, column: 3, scope: !10036)
!10043 = !DILocation(line: 2884, column: 20, scope: !10044)
!10044 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2884, column: 6)
!10045 = !DILocation(line: 2884, column: 6, scope: !10044)
!10046 = !DILocation(line: 2884, column: 6, scope: !10016)
!10047 = !DILocation(line: 2885, column: 18, scope: !10044)
!10048 = !DILocation(line: 2885, column: 22, scope: !10044)
!10049 = !DILocation(line: 2885, column: 27, scope: !10044)
!10050 = !DILocation(line: 2885, column: 15, scope: !10044)
!10051 = !DILocation(line: 2885, column: 3, scope: !10044)
!10052 = !DILocation(line: 2887, column: 14, scope: !10016)
!10053 = !DILocation(line: 2887, column: 18, scope: !10016)
!10054 = !DILocation(line: 2887, column: 23, scope: !10016)
!10055 = !DILocation(line: 2887, column: 11, scope: !10016)
!10056 = !DILocation(line: 2887, column: 2, scope: !10016)
!10057 = !DILocation(line: 2888, column: 1, scope: !10016)
!10058 = distinct !DISubprogram(name: "is_omap1_8250", scope: !4532, file: !4532, line: 294, type: !4536, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10059 = !DILocalVariable(name: "pt", arg: 1, scope: !10058, file: !4532, line: 294, type: !206)
!10060 = !DILocation(line: 294, column: 56, scope: !10058)
!10061 = !DILocation(line: 296, column: 2, scope: !10058)
!10062 = distinct !DISubprogram(name: "serial8250_request_std_resource", scope: !3, file: !3, line: 2893, type: !4536, scopeLine: 2894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10063 = !DILocalVariable(name: "up", arg: 1, scope: !10062, file: !3, line: 2893, type: !206)
!10064 = !DILocation(line: 2893, column: 67, scope: !10062)
!10065 = !DILocalVariable(name: "size", scope: !10062, file: !3, line: 2895, type: !7)
!10066 = !DILocation(line: 2895, column: 15, scope: !10062)
!10067 = !DILocation(line: 2895, column: 43, scope: !10062)
!10068 = !DILocation(line: 2895, column: 22, scope: !10062)
!10069 = !DILocalVariable(name: "port", scope: !10062, file: !3, line: 2896, type: !238)
!10070 = !DILocation(line: 2896, column: 20, scope: !10062)
!10071 = !DILocation(line: 2896, column: 28, scope: !10062)
!10072 = !DILocation(line: 2896, column: 32, scope: !10062)
!10073 = !DILocalVariable(name: "ret", scope: !10062, file: !3, line: 2897, type: !239)
!10074 = !DILocation(line: 2897, column: 6, scope: !10062)
!10075 = !DILocation(line: 2899, column: 10, scope: !10062)
!10076 = !DILocation(line: 2899, column: 16, scope: !10062)
!10077 = !DILocation(line: 2899, column: 2, scope: !10062)
!10078 = !DILocation(line: 2906, column: 8, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 2906, column: 7)
!10080 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 2899, column: 24)
!10081 = !DILocation(line: 2906, column: 14, scope: !10079)
!10082 = !DILocation(line: 2906, column: 7, scope: !10080)
!10083 = !DILocation(line: 2907, column: 4, scope: !10079)
!10084 = !DILocation(line: 2909, column: 8, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 2909, column: 7)
!10086 = !DILocation(line: 2909, column: 7, scope: !10080)
!10087 = !DILocation(line: 2910, column: 8, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 2909, column: 59)
!10089 = !DILocation(line: 2911, column: 4, scope: !10088)
!10090 = !DILocation(line: 2914, column: 7, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 2914, column: 7)
!10092 = !DILocation(line: 2914, column: 13, scope: !10091)
!10093 = !DILocation(line: 2914, column: 19, scope: !10091)
!10094 = !DILocation(line: 2914, column: 7, scope: !10080)
!10095 = !DILocation(line: 2915, column: 28, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 2914, column: 34)
!10097 = !DILocation(line: 2915, column: 34, scope: !10096)
!10098 = !DILocation(line: 2915, column: 43, scope: !10096)
!10099 = !DILocation(line: 2915, column: 20, scope: !10096)
!10100 = !DILocation(line: 2915, column: 4, scope: !10096)
!10101 = !DILocation(line: 2915, column: 10, scope: !10096)
!10102 = !DILocation(line: 2915, column: 18, scope: !10096)
!10103 = !DILocation(line: 2916, column: 9, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2916, column: 8)
!10105 = !DILocation(line: 2916, column: 15, scope: !10104)
!10106 = !DILocation(line: 2916, column: 8, scope: !10096)
!10107 = !DILocation(line: 2917, column: 5, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2916, column: 24)
!10109 = !DILocation(line: 2918, column: 9, scope: !10108)
!10110 = !DILocation(line: 2919, column: 4, scope: !10108)
!10111 = !DILocation(line: 2920, column: 3, scope: !10096)
!10112 = !DILocation(line: 2921, column: 3, scope: !10080)
!10113 = !DILocation(line: 2925, column: 8, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 2925, column: 7)
!10115 = !DILocation(line: 2925, column: 7, scope: !10080)
!10116 = !DILocation(line: 2926, column: 8, scope: !10114)
!10117 = !DILocation(line: 2926, column: 4, scope: !10114)
!10118 = !DILocation(line: 2927, column: 3, scope: !10080)
!10119 = !DILocation(line: 2929, column: 9, scope: !10062)
!10120 = !DILocation(line: 2929, column: 2, scope: !10062)
!10121 = distinct !DISubprogram(name: "autoconfig", scope: !3, file: !3, line: 1198, type: !4859, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10122 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !10123)
!10123 = distinct !DILocation(line: 1352, column: 2, scope: !10121)
!10124 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !10123)
!10125 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !10126)
!10126 = distinct !DILocation(line: 1279, column: 4, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 1278, column: 24)
!10128 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 1278, column: 7)
!10129 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1274, column: 38)
!10130 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1274, column: 6)
!10131 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !10126)
!10132 = !DILocation(line: 407, column: 64, scope: !6336, inlinedAt: !10133)
!10133 = distinct !DILocation(line: 1255, column: 4, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 1251, column: 42)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 1251, column: 7)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 1221, column: 39)
!10137 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1221, column: 6)
!10138 = !DILocation(line: 407, column: 84, scope: !6336, inlinedAt: !10133)
!10139 = !DILocation(line: 327, column: 67, scope: !6175, inlinedAt: !10140)
!10140 = distinct !DILocation(line: 1216, column: 2, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1216, column: 2)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1216, column: 2)
!10143 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1216, column: 2)
!10144 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 1216, column: 2)
!10145 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1216, column: 2)
!10146 = !DILocalVariable(name: "up", arg: 1, scope: !10121, file: !3, line: 1198, type: !206)
!10147 = !DILocation(line: 1198, column: 47, scope: !10121)
!10148 = !DILocalVariable(name: "status1", scope: !10121, file: !3, line: 1200, type: !233)
!10149 = !DILocation(line: 1200, column: 16, scope: !10121)
!10150 = !DILocalVariable(name: "scratch", scope: !10121, file: !3, line: 1200, type: !233)
!10151 = !DILocation(line: 1200, column: 25, scope: !10121)
!10152 = !DILocalVariable(name: "scratch2", scope: !10121, file: !3, line: 1200, type: !233)
!10153 = !DILocation(line: 1200, column: 34, scope: !10121)
!10154 = !DILocalVariable(name: "scratch3", scope: !10121, file: !3, line: 1200, type: !233)
!10155 = !DILocation(line: 1200, column: 44, scope: !10121)
!10156 = !DILocalVariable(name: "save_lcr", scope: !10121, file: !3, line: 1201, type: !233)
!10157 = !DILocation(line: 1201, column: 16, scope: !10121)
!10158 = !DILocalVariable(name: "save_mcr", scope: !10121, file: !3, line: 1201, type: !233)
!10159 = !DILocation(line: 1201, column: 26, scope: !10121)
!10160 = !DILocalVariable(name: "port", scope: !10121, file: !3, line: 1202, type: !238)
!10161 = !DILocation(line: 1202, column: 20, scope: !10121)
!10162 = !DILocation(line: 1202, column: 28, scope: !10121)
!10163 = !DILocation(line: 1202, column: 32, scope: !10121)
!10164 = !DILocalVariable(name: "flags", scope: !10121, file: !3, line: 1203, type: !230)
!10165 = !DILocation(line: 1203, column: 16, scope: !10121)
!10166 = !DILocalVariable(name: "old_capabilities", scope: !10121, file: !3, line: 1204, type: !7)
!10167 = !DILocation(line: 1204, column: 15, scope: !10121)
!10168 = !DILocation(line: 1206, column: 7, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1206, column: 6)
!10170 = !DILocation(line: 1206, column: 13, scope: !10169)
!10171 = !DILocation(line: 1206, column: 20, scope: !10169)
!10172 = !DILocation(line: 1206, column: 24, scope: !10169)
!10173 = !DILocation(line: 1206, column: 30, scope: !10169)
!10174 = !DILocation(line: 1206, column: 38, scope: !10169)
!10175 = !DILocation(line: 1206, column: 42, scope: !10169)
!10176 = !DILocation(line: 1206, column: 48, scope: !10169)
!10177 = !DILocation(line: 1206, column: 6, scope: !10121)
!10178 = !DILocation(line: 1207, column: 3, scope: !10169)
!10179 = !DILocation(line: 1209, column: 2, scope: !10121)
!10180 = !DILocation(line: 1209, column: 2, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1209, column: 2)
!10182 = !DILocation(line: 1216, column: 2, scope: !10121)
!10183 = !DILocation(line: 1216, column: 2, scope: !10145)
!10184 = !DILocalVariable(name: "__dummy", scope: !10185, file: !3, line: 1216, type: !230)
!10185 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1216, column: 2)
!10186 = !DILocation(line: 1216, column: 2, scope: !10185)
!10187 = !DILocalVariable(name: "__dummy2", scope: !10185, file: !3, line: 1216, type: !230)
!10188 = !DILocation(line: 1216, column: 2, scope: !10144)
!10189 = !DILocation(line: 1216, column: 2, scope: !10143)
!10190 = !DILocation(line: 1216, column: 2, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1216, column: 2)
!10192 = !DILocalVariable(name: "__dummy", scope: !10193, file: !3, line: 1216, type: !230)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 1216, column: 2)
!10194 = distinct !DILexicalBlock(scope: !10191, file: !3, line: 1216, column: 2)
!10195 = !DILocation(line: 1216, column: 2, scope: !10193)
!10196 = !DILocalVariable(name: "__dummy2", scope: !10193, file: !3, line: 1216, type: !230)
!10197 = !DILocation(line: 1216, column: 2, scope: !10194)
!10198 = !DILocation(line: 1216, column: 2, scope: !10142)
!10199 = !{i32 -2141653779}
!10200 = !DILocation(line: 1216, column: 2, scope: !10141)
!10201 = !DILocation(line: 329, column: 10, scope: !6175, inlinedAt: !10140)
!10202 = !DILocation(line: 329, column: 16, scope: !6175, inlinedAt: !10140)
!10203 = !DILocation(line: 1218, column: 2, scope: !10121)
!10204 = !DILocation(line: 1218, column: 6, scope: !10121)
!10205 = !DILocation(line: 1218, column: 19, scope: !10121)
!10206 = !DILocation(line: 1219, column: 2, scope: !10121)
!10207 = !DILocation(line: 1219, column: 6, scope: !10121)
!10208 = !DILocation(line: 1219, column: 11, scope: !10121)
!10209 = !DILocation(line: 1221, column: 8, scope: !10137)
!10210 = !DILocation(line: 1221, column: 14, scope: !10137)
!10211 = !DILocation(line: 1221, column: 20, scope: !10137)
!10212 = !DILocation(line: 1221, column: 6, scope: !10121)
!10213 = !DILocation(line: 1235, column: 23, scope: !10136)
!10214 = !DILocation(line: 1235, column: 13, scope: !10136)
!10215 = !DILocation(line: 1235, column: 11, scope: !10136)
!10216 = !DILocation(line: 1236, column: 14, scope: !10136)
!10217 = !DILocation(line: 1236, column: 3, scope: !10136)
!10218 = !DILocation(line: 1244, column: 24, scope: !10136)
!10219 = !DILocation(line: 1244, column: 14, scope: !10136)
!10220 = !DILocation(line: 1244, column: 38, scope: !10136)
!10221 = !DILocation(line: 1244, column: 12, scope: !10136)
!10222 = !DILocation(line: 1245, column: 14, scope: !10136)
!10223 = !DILocation(line: 1245, column: 3, scope: !10136)
!10224 = !DILocation(line: 1249, column: 24, scope: !10136)
!10225 = !DILocation(line: 1249, column: 14, scope: !10136)
!10226 = !DILocation(line: 1249, column: 38, scope: !10136)
!10227 = !DILocation(line: 1249, column: 12, scope: !10136)
!10228 = !DILocation(line: 1250, column: 14, scope: !10136)
!10229 = !DILocation(line: 1250, column: 28, scope: !10136)
!10230 = !DILocation(line: 1250, column: 3, scope: !10136)
!10231 = !DILocation(line: 1251, column: 7, scope: !10135)
!10232 = !DILocation(line: 1251, column: 16, scope: !10135)
!10233 = !DILocation(line: 1251, column: 21, scope: !10135)
!10234 = !DILocation(line: 1251, column: 24, scope: !10135)
!10235 = !DILocation(line: 1251, column: 33, scope: !10135)
!10236 = !DILocation(line: 1251, column: 7, scope: !10136)
!10237 = !DILocation(line: 1255, column: 28, scope: !10134)
!10238 = !DILocation(line: 1255, column: 34, scope: !10134)
!10239 = !DILocation(line: 1255, column: 40, scope: !10134)
!10240 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !10133)
!10241 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !10133)
!10242 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !10133)
!10243 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !10133)
!10244 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !10133)
!10245 = !DILocation(line: 1256, column: 4, scope: !10134)
!10246 = !DILocation(line: 1256, column: 4, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 1256, column: 4)
!10248 = !DILocation(line: 1258, column: 4, scope: !10134)
!10249 = !DILocation(line: 1260, column: 2, scope: !10136)
!10250 = !DILocation(line: 1262, column: 31, scope: !10121)
!10251 = !DILocation(line: 1262, column: 13, scope: !10121)
!10252 = !DILocation(line: 1262, column: 11, scope: !10121)
!10253 = !DILocation(line: 1263, column: 23, scope: !10121)
!10254 = !DILocation(line: 1263, column: 13, scope: !10121)
!10255 = !DILocation(line: 1263, column: 11, scope: !10121)
!10256 = !DILocation(line: 1274, column: 8, scope: !10130)
!10257 = !DILocation(line: 1274, column: 14, scope: !10130)
!10258 = !DILocation(line: 1274, column: 20, scope: !10130)
!10259 = !DILocation(line: 1274, column: 6, scope: !10121)
!10260 = !DILocation(line: 1275, column: 22, scope: !10129)
!10261 = !DILocation(line: 1275, column: 3, scope: !10129)
!10262 = !DILocation(line: 1276, column: 23, scope: !10129)
!10263 = !DILocation(line: 1276, column: 13, scope: !10129)
!10264 = !DILocation(line: 1276, column: 37, scope: !10129)
!10265 = !DILocation(line: 1276, column: 11, scope: !10129)
!10266 = !DILocation(line: 1277, column: 22, scope: !10129)
!10267 = !DILocation(line: 1277, column: 26, scope: !10129)
!10268 = !DILocation(line: 1277, column: 3, scope: !10129)
!10269 = !DILocation(line: 1278, column: 7, scope: !10128)
!10270 = !DILocation(line: 1278, column: 15, scope: !10128)
!10271 = !DILocation(line: 1278, column: 7, scope: !10129)
!10272 = !DILocation(line: 1279, column: 28, scope: !10127)
!10273 = !DILocation(line: 1279, column: 34, scope: !10127)
!10274 = !DILocation(line: 1279, column: 40, scope: !10127)
!10275 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !10126)
!10276 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !10126)
!10277 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !10126)
!10278 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !10126)
!10279 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !10126)
!10280 = !DILocation(line: 1280, column: 4, scope: !10127)
!10281 = !DILocation(line: 1280, column: 4, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 1280, column: 4)
!10283 = !DILocation(line: 1282, column: 4, scope: !10127)
!10284 = !DILocation(line: 1284, column: 2, scope: !10129)
!10285 = !DILocation(line: 1295, column: 13, scope: !10121)
!10286 = !DILocation(line: 1295, column: 2, scope: !10121)
!10287 = !DILocation(line: 1296, column: 13, scope: !10121)
!10288 = !DILocation(line: 1296, column: 2, scope: !10121)
!10289 = !DILocation(line: 1297, column: 13, scope: !10121)
!10290 = !DILocation(line: 1297, column: 2, scope: !10121)
!10291 = !DILocation(line: 1299, column: 13, scope: !10121)
!10292 = !DILocation(line: 1299, column: 2, scope: !10121)
!10293 = !DILocation(line: 1300, column: 22, scope: !10121)
!10294 = !DILocation(line: 1300, column: 12, scope: !10121)
!10295 = !DILocation(line: 1300, column: 36, scope: !10121)
!10296 = !DILocation(line: 1300, column: 10, scope: !10121)
!10297 = !DILocation(line: 1302, column: 10, scope: !10121)
!10298 = !DILocation(line: 1302, column: 2, scope: !10121)
!10299 = !DILocation(line: 1304, column: 19, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1302, column: 19)
!10301 = !DILocation(line: 1304, column: 3, scope: !10300)
!10302 = !DILocation(line: 1305, column: 3, scope: !10300)
!10303 = !DILocation(line: 1307, column: 3, scope: !10300)
!10304 = !DILocation(line: 1307, column: 9, scope: !10300)
!10305 = !DILocation(line: 1307, column: 14, scope: !10300)
!10306 = !DILocation(line: 1308, column: 3, scope: !10300)
!10307 = !DILocation(line: 1310, column: 3, scope: !10300)
!10308 = !DILocation(line: 1310, column: 9, scope: !10300)
!10309 = !DILocation(line: 1310, column: 14, scope: !10300)
!10310 = !DILocation(line: 1311, column: 3, scope: !10300)
!10311 = !DILocation(line: 1313, column: 21, scope: !10300)
!10312 = !DILocation(line: 1313, column: 3, scope: !10300)
!10313 = !DILocation(line: 1314, column: 3, scope: !10300)
!10314 = !DILocation(line: 1326, column: 13, scope: !10121)
!10315 = !DILocation(line: 1326, column: 27, scope: !10121)
!10316 = !DILocation(line: 1326, column: 2, scope: !10121)
!10317 = !DILocation(line: 1328, column: 31, scope: !10121)
!10318 = !DILocation(line: 1328, column: 35, scope: !10121)
!10319 = !DILocation(line: 1328, column: 40, scope: !10121)
!10320 = !DILocation(line: 1328, column: 19, scope: !10121)
!10321 = !DILocation(line: 1328, column: 46, scope: !10121)
!10322 = !DILocation(line: 1328, column: 2, scope: !10121)
!10323 = !DILocation(line: 1328, column: 8, scope: !10121)
!10324 = !DILocation(line: 1328, column: 17, scope: !10121)
!10325 = !DILocation(line: 1329, column: 21, scope: !10121)
!10326 = !DILocation(line: 1329, column: 25, scope: !10121)
!10327 = !DILocation(line: 1329, column: 19, scope: !10121)
!10328 = !DILocation(line: 1330, column: 33, scope: !10121)
!10329 = !DILocation(line: 1330, column: 39, scope: !10121)
!10330 = !DILocation(line: 1330, column: 21, scope: !10121)
!10331 = !DILocation(line: 1330, column: 45, scope: !10121)
!10332 = !DILocation(line: 1330, column: 2, scope: !10121)
!10333 = !DILocation(line: 1330, column: 6, scope: !10121)
!10334 = !DILocation(line: 1330, column: 19, scope: !10121)
!10335 = !DILocation(line: 1331, column: 30, scope: !10121)
!10336 = !DILocation(line: 1331, column: 36, scope: !10121)
!10337 = !DILocation(line: 1331, column: 18, scope: !10121)
!10338 = !DILocation(line: 1331, column: 42, scope: !10121)
!10339 = !DILocation(line: 1331, column: 2, scope: !10121)
!10340 = !DILocation(line: 1331, column: 6, scope: !10121)
!10341 = !DILocation(line: 1331, column: 16, scope: !10121)
!10342 = !DILocation(line: 1333, column: 6, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1333, column: 6)
!10344 = !DILocation(line: 1333, column: 12, scope: !10343)
!10345 = !DILocation(line: 1333, column: 17, scope: !10343)
!10346 = !DILocation(line: 1333, column: 6, scope: !10121)
!10347 = !DILocation(line: 1334, column: 3, scope: !10343)
!10348 = !DILocation(line: 1343, column: 21, scope: !10121)
!10349 = !DILocation(line: 1343, column: 25, scope: !10121)
!10350 = !DILocation(line: 1343, column: 2, scope: !10121)
!10351 = !DILocation(line: 1344, column: 25, scope: !10121)
!10352 = !DILocation(line: 1344, column: 2, scope: !10121)
!10353 = !DILocation(line: 1345, column: 12, scope: !10121)
!10354 = !DILocation(line: 1345, column: 2, scope: !10121)
!10355 = !DILocation(line: 1346, column: 6, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1346, column: 6)
!10357 = !DILocation(line: 1346, column: 10, scope: !10356)
!10358 = !DILocation(line: 1346, column: 23, scope: !10356)
!10359 = !DILocation(line: 1346, column: 6, scope: !10121)
!10360 = !DILocation(line: 1347, column: 14, scope: !10356)
!10361 = !DILocation(line: 1347, column: 3, scope: !10356)
!10362 = !DILocation(line: 1349, column: 14, scope: !10356)
!10363 = !DILocation(line: 1349, column: 3, scope: !10356)
!10364 = !DILocation(line: 1346, column: 25, scope: !10356)
!10365 = !DILabel(scope: !10121, name: "out_lock", file: !3, line: 1351)
!10366 = !DILocation(line: 1351, column: 1, scope: !10121)
!10367 = !DILocation(line: 1352, column: 26, scope: !10121)
!10368 = !DILocation(line: 1352, column: 32, scope: !10121)
!10369 = !DILocation(line: 1352, column: 38, scope: !10121)
!10370 = !DILocation(line: 409, column: 2, scope: !6351, inlinedAt: !10123)
!10371 = !DILocation(line: 409, column: 2, scope: !6356, inlinedAt: !10123)
!10372 = !DILocation(line: 409, column: 2, scope: !6357, inlinedAt: !10123)
!10373 = !DILocation(line: 409, column: 2, scope: !6364, inlinedAt: !10123)
!10374 = !DILocation(line: 409, column: 2, scope: !6367, inlinedAt: !10123)
!10375 = !DILocation(line: 1357, column: 6, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1357, column: 6)
!10377 = !DILocation(line: 1357, column: 12, scope: !10376)
!10378 = !DILocation(line: 1357, column: 17, scope: !10376)
!10379 = !DILocation(line: 1357, column: 32, scope: !10376)
!10380 = !DILocation(line: 1357, column: 35, scope: !10376)
!10381 = !DILocation(line: 1357, column: 41, scope: !10376)
!10382 = !DILocation(line: 1357, column: 48, scope: !10376)
!10383 = !DILocation(line: 1357, column: 6, scope: !10121)
!10384 = !DILocation(line: 1358, column: 21, scope: !10376)
!10385 = !DILocation(line: 1358, column: 3, scope: !10376)
!10386 = !DILocation(line: 1360, column: 6, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1360, column: 6)
!10388 = !DILocation(line: 1360, column: 10, scope: !10387)
!10389 = !DILocation(line: 1360, column: 26, scope: !10387)
!10390 = !DILocation(line: 1360, column: 23, scope: !10387)
!10391 = !DILocation(line: 1360, column: 6, scope: !10121)
!10392 = !DILocation(line: 1361, column: 3, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 1360, column: 44)
!10394 = !DILocation(line: 1363, column: 2, scope: !10393)
!10395 = !DILabel(scope: !10121, name: "out", file: !3, line: 1364)
!10396 = !DILocation(line: 1364, column: 1, scope: !10121)
!10397 = !DILocation(line: 1365, column: 2, scope: !10121)
!10398 = !DILocation(line: 1365, column: 2, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1365, column: 2)
!10400 = !DILocation(line: 1366, column: 2, scope: !10121)
!10401 = !DILocation(line: 1366, column: 2, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10121, file: !3, line: 1366, column: 2)
!10403 = !DILocation(line: 1367, column: 1, scope: !10121)
!10404 = distinct !DISubprogram(name: "autoconfig_irq", scope: !3, file: !3, line: 1369, type: !4859, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10405 = !DILocalVariable(name: "up", arg: 1, scope: !10404, file: !3, line: 1369, type: !206)
!10406 = !DILocation(line: 1369, column: 51, scope: !10404)
!10407 = !DILocalVariable(name: "port", scope: !10404, file: !3, line: 1371, type: !238)
!10408 = !DILocation(line: 1371, column: 20, scope: !10404)
!10409 = !DILocation(line: 1371, column: 28, scope: !10404)
!10410 = !DILocation(line: 1371, column: 32, scope: !10404)
!10411 = !DILocalVariable(name: "save_mcr", scope: !10404, file: !3, line: 1372, type: !233)
!10412 = !DILocation(line: 1372, column: 16, scope: !10404)
!10413 = !DILocalVariable(name: "save_ier", scope: !10404, file: !3, line: 1372, type: !233)
!10414 = !DILocation(line: 1372, column: 26, scope: !10404)
!10415 = !DILocalVariable(name: "save_ICP", scope: !10404, file: !3, line: 1373, type: !233)
!10416 = !DILocation(line: 1373, column: 16, scope: !10404)
!10417 = !DILocalVariable(name: "ICP", scope: !10404, file: !3, line: 1374, type: !7)
!10418 = !DILocation(line: 1374, column: 15, scope: !10404)
!10419 = !DILocalVariable(name: "irqs", scope: !10404, file: !3, line: 1375, type: !230)
!10420 = !DILocation(line: 1375, column: 16, scope: !10404)
!10421 = !DILocalVariable(name: "irq", scope: !10404, file: !3, line: 1376, type: !239)
!10422 = !DILocation(line: 1376, column: 6, scope: !10404)
!10423 = !DILocation(line: 1378, column: 6, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1378, column: 6)
!10425 = !DILocation(line: 1378, column: 12, scope: !10424)
!10426 = !DILocation(line: 1378, column: 18, scope: !10424)
!10427 = !DILocation(line: 1378, column: 6, scope: !10404)
!10428 = !DILocation(line: 1379, column: 10, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 1378, column: 34)
!10430 = !DILocation(line: 1379, column: 16, scope: !10429)
!10431 = !DILocation(line: 1379, column: 23, scope: !10429)
!10432 = !DILocation(line: 1379, column: 32, scope: !10429)
!10433 = !DILocation(line: 1379, column: 9, scope: !10429)
!10434 = !DILocation(line: 1379, column: 7, scope: !10429)
!10435 = !DILocation(line: 1380, column: 20, scope: !10429)
!10436 = !DILocation(line: 1380, column: 14, scope: !10429)
!10437 = !DILocation(line: 1380, column: 12, scope: !10429)
!10438 = !DILocation(line: 1381, column: 16, scope: !10429)
!10439 = !DILocation(line: 1381, column: 3, scope: !10429)
!10440 = !DILocation(line: 1382, column: 9, scope: !10429)
!10441 = !DILocation(line: 1382, column: 3, scope: !10429)
!10442 = !DILocation(line: 1383, column: 2, scope: !10429)
!10443 = !DILocation(line: 1385, column: 6, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 1385, column: 6)
!10445 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1385, column: 6)
!10446 = !DILocation(line: 1385, column: 6, scope: !10445)
!10447 = !DILocation(line: 1385, column: 6, scope: !10404)
!10448 = !DILocation(line: 1386, column: 3, scope: !10445)
!10449 = !DILocation(line: 1389, column: 16, scope: !10404)
!10450 = !DILocation(line: 1389, column: 2, scope: !10404)
!10451 = !DILocation(line: 1390, column: 31, scope: !10404)
!10452 = !DILocation(line: 1390, column: 13, scope: !10404)
!10453 = !DILocation(line: 1390, column: 11, scope: !10404)
!10454 = !DILocation(line: 1391, column: 23, scope: !10404)
!10455 = !DILocation(line: 1391, column: 13, scope: !10404)
!10456 = !DILocation(line: 1391, column: 11, scope: !10404)
!10457 = !DILocation(line: 1392, column: 21, scope: !10404)
!10458 = !DILocation(line: 1392, column: 2, scope: !10404)
!10459 = !DILocation(line: 1394, column: 9, scope: !10404)
!10460 = !DILocation(line: 1394, column: 7, scope: !10404)
!10461 = !DILocation(line: 1395, column: 21, scope: !10404)
!10462 = !DILocation(line: 1395, column: 2, scope: !10404)
!10463 = !DILocation(line: 1396, column: 2, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 1396, column: 2)
!10465 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 1396, column: 2)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1396, column: 2)
!10467 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1396, column: 2)
!10468 = !DILocation(line: 1397, column: 6, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1397, column: 6)
!10470 = !DILocation(line: 1397, column: 12, scope: !10469)
!10471 = !DILocation(line: 1397, column: 18, scope: !10469)
!10472 = !DILocation(line: 1397, column: 6, scope: !10404)
!10473 = !DILocation(line: 1398, column: 22, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 1397, column: 34)
!10475 = !DILocation(line: 1398, column: 3, scope: !10474)
!10476 = !DILocation(line: 1399, column: 2, scope: !10474)
!10477 = !DILocation(line: 1400, column: 22, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 1399, column: 9)
!10479 = !DILocation(line: 1400, column: 3, scope: !10478)
!10480 = !DILocation(line: 1403, column: 13, scope: !10404)
!10481 = !DILocation(line: 1403, column: 2, scope: !10404)
!10482 = !DILocation(line: 1404, column: 12, scope: !10404)
!10483 = !DILocation(line: 1404, column: 2, scope: !10404)
!10484 = !DILocation(line: 1405, column: 12, scope: !10404)
!10485 = !DILocation(line: 1405, column: 2, scope: !10404)
!10486 = !DILocation(line: 1406, column: 12, scope: !10404)
!10487 = !DILocation(line: 1406, column: 2, scope: !10404)
!10488 = !DILocation(line: 1407, column: 12, scope: !10404)
!10489 = !DILocation(line: 1407, column: 2, scope: !10404)
!10490 = !DILocation(line: 1408, column: 13, scope: !10404)
!10491 = !DILocation(line: 1408, column: 2, scope: !10404)
!10492 = !DILocation(line: 1409, column: 2, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 1409, column: 2)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 1409, column: 2)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 1409, column: 2)
!10496 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1409, column: 2)
!10497 = !DILocation(line: 1410, column: 22, scope: !10404)
!10498 = !DILocation(line: 1410, column: 8, scope: !10404)
!10499 = !DILocation(line: 1410, column: 6, scope: !10404)
!10500 = !DILocation(line: 1412, column: 21, scope: !10404)
!10501 = !DILocation(line: 1412, column: 25, scope: !10404)
!10502 = !DILocation(line: 1412, column: 2, scope: !10404)
!10503 = !DILocation(line: 1413, column: 13, scope: !10404)
!10504 = !DILocation(line: 1413, column: 27, scope: !10404)
!10505 = !DILocation(line: 1413, column: 2, scope: !10404)
!10506 = !DILocation(line: 1415, column: 6, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1415, column: 6)
!10508 = !DILocation(line: 1415, column: 12, scope: !10507)
!10509 = !DILocation(line: 1415, column: 18, scope: !10507)
!10510 = !DILocation(line: 1415, column: 6, scope: !10404)
!10511 = !DILocation(line: 1416, column: 10, scope: !10507)
!10512 = !DILocation(line: 1416, column: 20, scope: !10507)
!10513 = !DILocation(line: 1416, column: 3, scope: !10507)
!10514 = !DILocation(line: 1418, column: 6, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 1418, column: 6)
!10516 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1418, column: 6)
!10517 = !DILocation(line: 1418, column: 6, scope: !10516)
!10518 = !DILocation(line: 1418, column: 6, scope: !10404)
!10519 = !DILocation(line: 1419, column: 3, scope: !10516)
!10520 = !DILocation(line: 1421, column: 15, scope: !10404)
!10521 = !DILocation(line: 1421, column: 19, scope: !10404)
!10522 = !DILocation(line: 1421, column: 14, scope: !10404)
!10523 = !DILocation(line: 1421, column: 26, scope: !10404)
!10524 = !DILocation(line: 1421, column: 2, scope: !10404)
!10525 = !DILocation(line: 1421, column: 8, scope: !10404)
!10526 = !DILocation(line: 1421, column: 12, scope: !10404)
!10527 = !DILocation(line: 1422, column: 1, scope: !10404)
!10528 = distinct !DISubprogram(name: "register_dev_spec_attr_grp", scope: !3, file: !3, line: 3104, type: !4859, scopeLine: 3105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10529 = !DILocalVariable(name: "up", arg: 1, scope: !10528, file: !3, line: 3104, type: !206)
!10530 = !DILocation(line: 3104, column: 63, scope: !10528)
!10531 = !DILocalVariable(name: "conf_type", scope: !10528, file: !3, line: 3106, type: !10532)
!10532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4930, size: 64)
!10533 = !DILocation(line: 3106, column: 34, scope: !10528)
!10534 = !DILocation(line: 3106, column: 59, scope: !10528)
!10535 = !DILocation(line: 3106, column: 63, scope: !10528)
!10536 = !DILocation(line: 3106, column: 68, scope: !10528)
!10537 = !DILocation(line: 3106, column: 47, scope: !10528)
!10538 = !DILocation(line: 3108, column: 6, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 3108, column: 6)
!10540 = !DILocation(line: 3108, column: 17, scope: !10539)
!10541 = !DILocation(line: 3108, column: 6, scope: !10528)
!10542 = !DILocation(line: 3109, column: 3, scope: !10539)
!10543 = !DILocation(line: 3109, column: 7, scope: !10539)
!10544 = !DILocation(line: 3109, column: 12, scope: !10539)
!10545 = !DILocation(line: 3109, column: 23, scope: !10539)
!10546 = !DILocation(line: 3110, column: 1, scope: !10528)
!10547 = distinct !DISubprogram(name: "autoconfig_8250", scope: !3, file: !3, line: 996, type: !4859, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10548 = !DILocalVariable(name: "up", arg: 1, scope: !10547, file: !3, line: 996, type: !206)
!10549 = !DILocation(line: 996, column: 52, scope: !10547)
!10550 = !DILocalVariable(name: "scratch", scope: !10547, file: !3, line: 998, type: !233)
!10551 = !DILocation(line: 998, column: 16, scope: !10547)
!10552 = !DILocalVariable(name: "status1", scope: !10547, file: !3, line: 998, type: !233)
!10553 = !DILocation(line: 998, column: 25, scope: !10547)
!10554 = !DILocalVariable(name: "status2", scope: !10547, file: !3, line: 998, type: !233)
!10555 = !DILocation(line: 998, column: 34, scope: !10547)
!10556 = !DILocation(line: 1000, column: 2, scope: !10547)
!10557 = !DILocation(line: 1000, column: 6, scope: !10547)
!10558 = !DILocation(line: 1000, column: 11, scope: !10547)
!10559 = !DILocation(line: 1000, column: 16, scope: !10547)
!10560 = !DILocation(line: 1002, column: 22, scope: !10547)
!10561 = !DILocation(line: 1002, column: 12, scope: !10547)
!10562 = !DILocation(line: 1002, column: 10, scope: !10547)
!10563 = !DILocation(line: 1003, column: 13, scope: !10547)
!10564 = !DILocation(line: 1003, column: 2, scope: !10547)
!10565 = !DILocation(line: 1004, column: 22, scope: !10547)
!10566 = !DILocation(line: 1004, column: 12, scope: !10547)
!10567 = !DILocation(line: 1004, column: 10, scope: !10547)
!10568 = !DILocation(line: 1005, column: 13, scope: !10547)
!10569 = !DILocation(line: 1005, column: 2, scope: !10547)
!10570 = !DILocation(line: 1006, column: 22, scope: !10547)
!10571 = !DILocation(line: 1006, column: 12, scope: !10547)
!10572 = !DILocation(line: 1006, column: 10, scope: !10547)
!10573 = !DILocation(line: 1007, column: 13, scope: !10547)
!10574 = !DILocation(line: 1007, column: 27, scope: !10547)
!10575 = !DILocation(line: 1007, column: 2, scope: !10547)
!10576 = !DILocation(line: 1009, column: 6, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 1009, column: 6)
!10578 = !DILocation(line: 1009, column: 14, scope: !10577)
!10579 = !DILocation(line: 1009, column: 22, scope: !10577)
!10580 = !DILocation(line: 1009, column: 25, scope: !10577)
!10581 = !DILocation(line: 1009, column: 33, scope: !10577)
!10582 = !DILocation(line: 1009, column: 6, scope: !10547)
!10583 = !DILocation(line: 1010, column: 3, scope: !10577)
!10584 = !DILocation(line: 1010, column: 7, scope: !10577)
!10585 = !DILocation(line: 1010, column: 12, scope: !10577)
!10586 = !DILocation(line: 1010, column: 17, scope: !10577)
!10587 = !DILocation(line: 1011, column: 1, scope: !10547)
!10588 = distinct !DISubprogram(name: "autoconfig_16550a", scope: !3, file: !3, line: 1032, type: !4859, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10589 = !DILocalVariable(name: "up", arg: 1, scope: !10588, file: !3, line: 1032, type: !206)
!10590 = !DILocation(line: 1032, column: 54, scope: !10588)
!10591 = !DILocalVariable(name: "status1", scope: !10588, file: !3, line: 1034, type: !233)
!10592 = !DILocation(line: 1034, column: 16, scope: !10588)
!10593 = !DILocalVariable(name: "status2", scope: !10588, file: !3, line: 1034, type: !233)
!10594 = !DILocation(line: 1034, column: 25, scope: !10588)
!10595 = !DILocalVariable(name: "iersave", scope: !10588, file: !3, line: 1035, type: !7)
!10596 = !DILocation(line: 1035, column: 15, scope: !10588)
!10597 = !DILocation(line: 1037, column: 2, scope: !10588)
!10598 = !DILocation(line: 1037, column: 6, scope: !10588)
!10599 = !DILocation(line: 1037, column: 11, scope: !10588)
!10600 = !DILocation(line: 1037, column: 16, scope: !10588)
!10601 = !DILocation(line: 1038, column: 2, scope: !10588)
!10602 = !DILocation(line: 1038, column: 6, scope: !10588)
!10603 = !DILocation(line: 1038, column: 19, scope: !10588)
!10604 = !DILocation(line: 1041, column: 3, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 1040, column: 6)
!10606 = distinct !DISubprogram(name: "fintek_8250_probe", scope: !4532, file: !4532, line: 264, type: !4536, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10607 = !DILocalVariable(name: "uart", arg: 1, scope: !10606, file: !4532, line: 264, type: !206)
!10608 = !DILocation(line: 264, column: 60, scope: !10606)
!10609 = !DILocation(line: 264, column: 68, scope: !10606)
!10610 = distinct !DISubprogram(name: "rx_trig_bytes_show", scope: !3, file: !3, line: 3026, type: !4922, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10611 = !DILocalVariable(name: "dev", arg: 1, scope: !10610, file: !3, line: 3026, type: !439)
!10612 = !DILocation(line: 3026, column: 50, scope: !10610)
!10613 = !DILocalVariable(name: "attr", arg: 2, scope: !10610, file: !3, line: 3027, type: !4924)
!10614 = !DILocation(line: 3027, column: 27, scope: !10610)
!10615 = !DILocalVariable(name: "buf", arg: 3, scope: !10610, file: !3, line: 3027, type: !485)
!10616 = !DILocation(line: 3027, column: 39, scope: !10610)
!10617 = !DILocalVariable(name: "port", scope: !10610, file: !3, line: 3029, type: !4056)
!10618 = !DILocation(line: 3029, column: 19, scope: !10610)
!10619 = !DILocation(line: 3029, column: 42, scope: !10610)
!10620 = !DILocation(line: 3029, column: 26, scope: !10610)
!10621 = !DILocalVariable(name: "rxtrig_bytes", scope: !10610, file: !3, line: 3030, type: !239)
!10622 = !DILocation(line: 3030, column: 6, scope: !10610)
!10623 = !DILocation(line: 3032, column: 42, scope: !10610)
!10624 = !DILocation(line: 3032, column: 17, scope: !10610)
!10625 = !DILocation(line: 3032, column: 15, scope: !10610)
!10626 = !DILocation(line: 3033, column: 6, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10610, file: !3, line: 3033, column: 6)
!10628 = !DILocation(line: 3033, column: 19, scope: !10627)
!10629 = !DILocation(line: 3033, column: 6, scope: !10610)
!10630 = !DILocation(line: 3034, column: 10, scope: !10627)
!10631 = !DILocation(line: 3034, column: 3, scope: !10627)
!10632 = !DILocation(line: 3036, column: 18, scope: !10610)
!10633 = !DILocation(line: 3036, column: 42, scope: !10610)
!10634 = !DILocation(line: 3036, column: 9, scope: !10610)
!10635 = !DILocation(line: 3036, column: 2, scope: !10610)
!10636 = !DILocation(line: 3037, column: 1, scope: !10610)
!10637 = distinct !DISubprogram(name: "rx_trig_bytes_store", scope: !3, file: !3, line: 3072, type: !4927, scopeLine: 3074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10638 = !DILocalVariable(name: "dev", arg: 1, scope: !10637, file: !3, line: 3072, type: !439)
!10639 = !DILocation(line: 3072, column: 51, scope: !10637)
!10640 = !DILocalVariable(name: "attr", arg: 2, scope: !10637, file: !3, line: 3073, type: !4924)
!10641 = !DILocation(line: 3073, column: 27, scope: !10637)
!10642 = !DILocalVariable(name: "buf", arg: 3, scope: !10637, file: !3, line: 3073, type: !447)
!10643 = !DILocation(line: 3073, column: 45, scope: !10637)
!10644 = !DILocalVariable(name: "count", arg: 4, scope: !10637, file: !3, line: 3073, type: !532)
!10645 = !DILocation(line: 3073, column: 57, scope: !10637)
!10646 = !DILocalVariable(name: "port", scope: !10637, file: !3, line: 3075, type: !4056)
!10647 = !DILocation(line: 3075, column: 19, scope: !10637)
!10648 = !DILocation(line: 3075, column: 42, scope: !10637)
!10649 = !DILocation(line: 3075, column: 26, scope: !10637)
!10650 = !DILocalVariable(name: "bytes", scope: !10637, file: !3, line: 3076, type: !233)
!10651 = !DILocation(line: 3076, column: 16, scope: !10637)
!10652 = !DILocalVariable(name: "ret", scope: !10637, file: !3, line: 3077, type: !239)
!10653 = !DILocation(line: 3077, column: 6, scope: !10637)
!10654 = !DILocation(line: 3079, column: 7, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3079, column: 6)
!10656 = !DILocation(line: 3079, column: 6, scope: !10637)
!10657 = !DILocation(line: 3080, column: 3, scope: !10655)
!10658 = !DILocation(line: 3082, column: 17, scope: !10637)
!10659 = !DILocation(line: 3082, column: 8, scope: !10637)
!10660 = !DILocation(line: 3082, column: 6, scope: !10637)
!10661 = !DILocation(line: 3083, column: 6, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3083, column: 6)
!10663 = !DILocation(line: 3083, column: 10, scope: !10662)
!10664 = !DILocation(line: 3083, column: 6, scope: !10637)
!10665 = !DILocation(line: 3084, column: 10, scope: !10662)
!10666 = !DILocation(line: 3084, column: 3, scope: !10662)
!10667 = !DILocation(line: 3086, column: 33, scope: !10637)
!10668 = !DILocation(line: 3086, column: 39, scope: !10637)
!10669 = !DILocation(line: 3086, column: 8, scope: !10637)
!10670 = !DILocation(line: 3086, column: 6, scope: !10637)
!10671 = !DILocation(line: 3087, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 3087, column: 6)
!10673 = !DILocation(line: 3087, column: 10, scope: !10672)
!10674 = !DILocation(line: 3087, column: 6, scope: !10637)
!10675 = !DILocation(line: 3088, column: 10, scope: !10672)
!10676 = !DILocation(line: 3088, column: 3, scope: !10672)
!10677 = !DILocation(line: 3090, column: 9, scope: !10637)
!10678 = !DILocation(line: 3090, column: 2, scope: !10637)
!10679 = !DILocation(line: 3091, column: 1, scope: !10637)
!10680 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !10681, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10681 = !DISubroutineType(types: !10682)
!10682 = !{!196, !3919}
!10683 = !DILocalVariable(name: "dev", arg: 1, scope: !10680, file: !73, line: 655, type: !3919)
!10684 = !DILocation(line: 655, column: 58, scope: !10680)
!10685 = !DILocation(line: 657, column: 9, scope: !10680)
!10686 = !DILocation(line: 657, column: 14, scope: !10680)
!10687 = !DILocation(line: 657, column: 2, scope: !10680)
!10688 = distinct !DISubprogram(name: "do_serial8250_get_rxtrig", scope: !3, file: !3, line: 3015, type: !4329, scopeLine: 3016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10689 = !DILocalVariable(name: "port", arg: 1, scope: !10688, file: !3, line: 3015, type: !4056)
!10690 = !DILocation(line: 3015, column: 54, scope: !10688)
!10691 = !DILocalVariable(name: "rxtrig_bytes", scope: !10688, file: !3, line: 3017, type: !239)
!10692 = !DILocation(line: 3017, column: 6, scope: !10688)
!10693 = !DILocation(line: 3019, column: 14, scope: !10688)
!10694 = !DILocation(line: 3019, column: 20, scope: !10688)
!10695 = !DILocation(line: 3019, column: 2, scope: !10688)
!10696 = !DILocation(line: 3020, column: 31, scope: !10688)
!10697 = !DILocation(line: 3020, column: 17, scope: !10688)
!10698 = !DILocation(line: 3020, column: 15, scope: !10688)
!10699 = !DILocation(line: 3021, column: 16, scope: !10688)
!10700 = !DILocation(line: 3021, column: 22, scope: !10688)
!10701 = !DILocation(line: 3021, column: 2, scope: !10688)
!10702 = !DILocation(line: 3023, column: 9, scope: !10688)
!10703 = !DILocation(line: 3023, column: 2, scope: !10688)
!10704 = distinct !DISubprogram(name: "do_get_rxtrig", scope: !3, file: !3, line: 3003, type: !4329, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10705 = !DILocalVariable(name: "port", arg: 1, scope: !10704, file: !3, line: 3003, type: !4056)
!10706 = !DILocation(line: 3003, column: 43, scope: !10704)
!10707 = !DILocalVariable(name: "state", scope: !10704, file: !3, line: 3005, type: !343)
!10708 = !DILocation(line: 3005, column: 21, scope: !10704)
!10709 = !DILocalVariable(name: "__mptr", scope: !10710, file: !3, line: 3005, type: !196)
!10710 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 3005, column: 29)
!10711 = !DILocation(line: 3005, column: 29, scope: !10710)
!10712 = !DILocation(line: 3005, column: 29, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 3005, column: 29)
!10714 = !DILocalVariable(name: "uport", scope: !10704, file: !3, line: 3006, type: !238)
!10715 = !DILocation(line: 3006, column: 20, scope: !10704)
!10716 = !DILocation(line: 3006, column: 28, scope: !10704)
!10717 = !DILocation(line: 3006, column: 35, scope: !10704)
!10718 = !DILocalVariable(name: "up", scope: !10704, file: !3, line: 3007, type: !206)
!10719 = !DILocation(line: 3007, column: 25, scope: !10704)
!10720 = !DILocation(line: 3007, column: 43, scope: !10704)
!10721 = !DILocation(line: 3007, column: 30, scope: !10704)
!10722 = !DILocation(line: 3009, column: 8, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10704, file: !3, line: 3009, column: 6)
!10724 = !DILocation(line: 3009, column: 12, scope: !10723)
!10725 = !DILocation(line: 3009, column: 25, scope: !10723)
!10726 = !DILocation(line: 3009, column: 42, scope: !10723)
!10727 = !DILocation(line: 3009, column: 45, scope: !10723)
!10728 = !DILocation(line: 3009, column: 52, scope: !10723)
!10729 = !DILocation(line: 3009, column: 61, scope: !10723)
!10730 = !DILocation(line: 3009, column: 6, scope: !10704)
!10731 = !DILocation(line: 3010, column: 3, scope: !10723)
!10732 = !DILocation(line: 3012, column: 30, scope: !10704)
!10733 = !DILocation(line: 3012, column: 9, scope: !10704)
!10734 = !DILocation(line: 3012, column: 2, scope: !10704)
!10735 = !DILocation(line: 3013, column: 1, scope: !10704)
!10736 = distinct !DISubprogram(name: "fcr_get_rxtrig_bytes", scope: !3, file: !3, line: 2976, type: !4536, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10737 = !DILocalVariable(name: "up", arg: 1, scope: !10736, file: !3, line: 2976, type: !206)
!10738 = !DILocation(line: 2976, column: 56, scope: !10736)
!10739 = !DILocalVariable(name: "conf_type", scope: !10736, file: !3, line: 2978, type: !10532)
!10740 = !DILocation(line: 2978, column: 34, scope: !10736)
!10741 = !DILocation(line: 2978, column: 59, scope: !10736)
!10742 = !DILocation(line: 2978, column: 63, scope: !10736)
!10743 = !DILocation(line: 2978, column: 68, scope: !10736)
!10744 = !DILocation(line: 2978, column: 47, scope: !10736)
!10745 = !DILocalVariable(name: "bytes", scope: !10736, file: !3, line: 2979, type: !233)
!10746 = !DILocation(line: 2979, column: 16, scope: !10736)
!10747 = !DILocation(line: 2981, column: 10, scope: !10736)
!10748 = !DILocation(line: 2981, column: 21, scope: !10736)
!10749 = !DILocation(line: 2981, column: 34, scope: !10736)
!10750 = !DILocation(line: 2981, column: 8, scope: !10736)
!10751 = !DILocation(line: 2983, column: 9, scope: !10736)
!10752 = !DILocation(line: 2983, column: 17, scope: !10736)
!10753 = !DILocation(line: 2983, column: 2, scope: !10736)
!10754 = distinct !DISubprogram(name: "do_serial8250_set_rxtrig", scope: !3, file: !3, line: 3061, type: !10755, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10755 = !DISubroutineType(types: !10756)
!10756 = !{!239, !4056, !233}
!10757 = !DILocalVariable(name: "port", arg: 1, scope: !10754, file: !3, line: 3061, type: !4056)
!10758 = !DILocation(line: 3061, column: 54, scope: !10754)
!10759 = !DILocalVariable(name: "bytes", arg: 2, scope: !10754, file: !3, line: 3061, type: !233)
!10760 = !DILocation(line: 3061, column: 74, scope: !10754)
!10761 = !DILocalVariable(name: "ret", scope: !10754, file: !3, line: 3063, type: !239)
!10762 = !DILocation(line: 3063, column: 6, scope: !10754)
!10763 = !DILocation(line: 3065, column: 14, scope: !10754)
!10764 = !DILocation(line: 3065, column: 20, scope: !10754)
!10765 = !DILocation(line: 3065, column: 2, scope: !10754)
!10766 = !DILocation(line: 3066, column: 22, scope: !10754)
!10767 = !DILocation(line: 3066, column: 28, scope: !10754)
!10768 = !DILocation(line: 3066, column: 8, scope: !10754)
!10769 = !DILocation(line: 3066, column: 6, scope: !10754)
!10770 = !DILocation(line: 3067, column: 16, scope: !10754)
!10771 = !DILocation(line: 3067, column: 22, scope: !10754)
!10772 = !DILocation(line: 3067, column: 2, scope: !10754)
!10773 = !DILocation(line: 3069, column: 9, scope: !10754)
!10774 = !DILocation(line: 3069, column: 2, scope: !10754)
!10775 = distinct !DISubprogram(name: "do_set_rxtrig", scope: !3, file: !3, line: 3039, type: !10755, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10776 = !DILocalVariable(name: "port", arg: 1, scope: !10775, file: !3, line: 3039, type: !4056)
!10777 = !DILocation(line: 3039, column: 43, scope: !10775)
!10778 = !DILocalVariable(name: "bytes", arg: 2, scope: !10775, file: !3, line: 3039, type: !233)
!10779 = !DILocation(line: 3039, column: 63, scope: !10775)
!10780 = !DILocalVariable(name: "state", scope: !10775, file: !3, line: 3041, type: !343)
!10781 = !DILocation(line: 3041, column: 21, scope: !10775)
!10782 = !DILocalVariable(name: "__mptr", scope: !10783, file: !3, line: 3041, type: !196)
!10783 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 3041, column: 29)
!10784 = !DILocation(line: 3041, column: 29, scope: !10783)
!10785 = !DILocation(line: 3041, column: 29, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 3041, column: 29)
!10787 = !DILocalVariable(name: "uport", scope: !10775, file: !3, line: 3042, type: !238)
!10788 = !DILocation(line: 3042, column: 20, scope: !10775)
!10789 = !DILocation(line: 3042, column: 28, scope: !10775)
!10790 = !DILocation(line: 3042, column: 35, scope: !10775)
!10791 = !DILocalVariable(name: "up", scope: !10775, file: !3, line: 3043, type: !206)
!10792 = !DILocation(line: 3043, column: 25, scope: !10775)
!10793 = !DILocation(line: 3043, column: 43, scope: !10775)
!10794 = !DILocation(line: 3043, column: 30, scope: !10775)
!10795 = !DILocalVariable(name: "rxtrig", scope: !10775, file: !3, line: 3044, type: !239)
!10796 = !DILocation(line: 3044, column: 6, scope: !10775)
!10797 = !DILocation(line: 3046, column: 8, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 3046, column: 6)
!10799 = !DILocation(line: 3046, column: 12, scope: !10798)
!10800 = !DILocation(line: 3046, column: 25, scope: !10798)
!10801 = !DILocation(line: 3046, column: 42, scope: !10798)
!10802 = !DILocation(line: 3046, column: 45, scope: !10798)
!10803 = !DILocation(line: 3046, column: 52, scope: !10798)
!10804 = !DILocation(line: 3046, column: 61, scope: !10798)
!10805 = !DILocation(line: 3046, column: 66, scope: !10798)
!10806 = !DILocation(line: 3047, column: 6, scope: !10798)
!10807 = !DILocation(line: 3047, column: 10, scope: !10798)
!10808 = !DILocation(line: 3046, column: 6, scope: !10775)
!10809 = !DILocation(line: 3048, column: 3, scope: !10798)
!10810 = !DILocation(line: 3050, column: 31, scope: !10775)
!10811 = !DILocation(line: 3050, column: 35, scope: !10775)
!10812 = !DILocation(line: 3050, column: 11, scope: !10775)
!10813 = !DILocation(line: 3050, column: 9, scope: !10775)
!10814 = !DILocation(line: 3051, column: 6, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 3051, column: 6)
!10816 = !DILocation(line: 3051, column: 13, scope: !10815)
!10817 = !DILocation(line: 3051, column: 6, scope: !10775)
!10818 = !DILocation(line: 3052, column: 10, scope: !10815)
!10819 = !DILocation(line: 3052, column: 3, scope: !10815)
!10820 = !DILocation(line: 3054, column: 25, scope: !10775)
!10821 = !DILocation(line: 3054, column: 2, scope: !10775)
!10822 = !DILocation(line: 3055, column: 2, scope: !10775)
!10823 = !DILocation(line: 3055, column: 6, scope: !10775)
!10824 = !DILocation(line: 3055, column: 10, scope: !10775)
!10825 = !DILocation(line: 3056, column: 28, scope: !10775)
!10826 = !DILocation(line: 3056, column: 13, scope: !10775)
!10827 = !DILocation(line: 3056, column: 2, scope: !10775)
!10828 = !DILocation(line: 3056, column: 6, scope: !10775)
!10829 = !DILocation(line: 3056, column: 10, scope: !10775)
!10830 = !DILocation(line: 3057, column: 13, scope: !10775)
!10831 = !DILocation(line: 3057, column: 27, scope: !10775)
!10832 = !DILocation(line: 3057, column: 31, scope: !10775)
!10833 = !DILocation(line: 3057, column: 2, scope: !10775)
!10834 = !DILocation(line: 3058, column: 2, scope: !10775)
!10835 = !DILocation(line: 3059, column: 1, scope: !10775)
!10836 = distinct !DISubprogram(name: "bytes_to_fcr_rxtrig", scope: !3, file: !3, line: 2986, type: !10837, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !228)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{!239, !206, !233}
!10839 = !DILocalVariable(name: "up", arg: 1, scope: !10836, file: !3, line: 2986, type: !206)
!10840 = !DILocation(line: 2986, column: 55, scope: !10836)
!10841 = !DILocalVariable(name: "bytes", arg: 2, scope: !10836, file: !3, line: 2986, type: !233)
!10842 = !DILocation(line: 2986, column: 73, scope: !10836)
!10843 = !DILocalVariable(name: "conf_type", scope: !10836, file: !3, line: 2988, type: !10532)
!10844 = !DILocation(line: 2988, column: 34, scope: !10836)
!10845 = !DILocation(line: 2988, column: 59, scope: !10836)
!10846 = !DILocation(line: 2988, column: 63, scope: !10836)
!10847 = !DILocation(line: 2988, column: 68, scope: !10836)
!10848 = !DILocation(line: 2988, column: 47, scope: !10836)
!10849 = !DILocalVariable(name: "i", scope: !10836, file: !3, line: 2989, type: !239)
!10850 = !DILocation(line: 2989, column: 6, scope: !10836)
!10851 = !DILocation(line: 2991, column: 7, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 2991, column: 6)
!10853 = !DILocation(line: 2991, column: 18, scope: !10852)
!10854 = !DILocation(line: 2991, column: 6, scope: !10836)
!10855 = !DILocation(line: 2992, column: 3, scope: !10852)
!10856 = !DILocation(line: 2994, column: 9, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 2994, column: 2)
!10858 = !DILocation(line: 2994, column: 7, scope: !10857)
!10859 = !DILocation(line: 2994, column: 14, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 2994, column: 2)
!10861 = !DILocation(line: 2994, column: 16, scope: !10860)
!10862 = !DILocation(line: 2994, column: 2, scope: !10857)
!10863 = !DILocation(line: 2995, column: 7, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 2995, column: 7)
!10865 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 2994, column: 50)
!10866 = !DILocation(line: 2995, column: 15, scope: !10864)
!10867 = !DILocation(line: 2995, column: 26, scope: !10864)
!10868 = !DILocation(line: 2995, column: 39, scope: !10864)
!10869 = !DILocation(line: 2995, column: 13, scope: !10864)
!10870 = !DILocation(line: 2995, column: 7, scope: !10865)
!10871 = !DILocation(line: 2997, column: 12, scope: !10864)
!10872 = !DILocation(line: 2997, column: 17, scope: !10864)
!10873 = !DILocation(line: 2997, column: 4, scope: !10864)
!10874 = !DILocation(line: 2998, column: 2, scope: !10865)
!10875 = !DILocation(line: 2994, column: 46, scope: !10860)
!10876 = !DILocation(line: 2994, column: 2, scope: !10860)
!10877 = distinct !{!10877, !10862, !10878}
!10878 = !DILocation(line: 2998, column: 2, scope: !10857)
!10879 = !DILocation(line: 3000, column: 2, scope: !10836)
!10880 = !DILocation(line: 3001, column: 1, scope: !10836)
