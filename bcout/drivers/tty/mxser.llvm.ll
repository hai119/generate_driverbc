; ModuleID = '../bcout/drivers/tty/mxser.llvm.bc'
source_filename = "drivers/tty/mxser.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_mxser_module_init6:\09\09\09"
module asm ".long\09mxser_module_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.67, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.serial_struct = type { i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, [1 x i8], i32, i16, i16, i8*, i16, i32, i64 }
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.32, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.32 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.atomic_t = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.pci_vpd = type opaque
%union.anon.67 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.mxser_board = type { i32, i32, %struct.mxser_cardinfo*, i64, i64, i32, i32, [8 x %struct.mxser_port] }
%struct.mxser_cardinfo = type { i8*, i32, i32 }
%struct.mxser_port = type { %struct.tty_port, %struct.mxser_board*, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, %struct.async_icount, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ktermios, %struct.mxser_mon, %struct.spinlock }
%struct.async_icount = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.mxser_mon = type { i64, i64, i64, i64, i32, i8 }
%struct.anon.68 = type { i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.mxser_log = type { i32, [32 x i64], [32 x i64] }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.mxser_mstatus = type { i32, i32, i32, i32, i32 }
%struct.mxser_mon_ext = type { [32 x i64], [32 x i64], [32 x i64], [32 x i64], [32 x i32], [32 x i64], [32 x i32], [32 x i32], [32 x i32], [32 x i32], [32 x i32], [32 x i32] }

@__UNIQUE_ID_author240 = internal constant [25 x i8] c"mxser.author=Casper Yang\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_description241 = internal constant [77 x i8] c"mxser.description=MOXA Smartio/Industio Family Multiport Board Device Driver\00", section ".modinfo", align 1, !dbg !4291
@__param_str_ioaddr = internal constant [13 x i8] c"mxser.ioaddr\00", align 1, !dbg !4399
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 8
@__param_arr_ioaddr = internal constant %struct.kparam_array { i32 4, i32 8, i32* null, %struct.kernel_param_ops* @param_ops_ulong, i8* bitcast ([4 x i64]* @ioaddr to i8*) }, align 8, !dbg !4404
@__param_ioaddr = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_ioaddr, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_array_ops, i16 0, i8 -1, i8 2, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_ioaddr } }, section "__param", align 8, !dbg !4296
@__UNIQUE_ID_ioaddrtype242 = internal constant [37 x i8] c"mxser.parmtype=ioaddr:array of ulong\00", section ".modinfo", align 1, !dbg !4348
@__UNIQUE_ID_ioaddr243 = internal constant [60 x i8] c"mxser.parm=ioaddr:ISA io addresses to look for a moxa board\00", section ".modinfo", align 1, !dbg !4353
@__param_str_ttymajor = internal constant [15 x i8] c"mxser.ttymajor\00", align 1, !dbg !4409
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@ttymajor = internal global i32 174, align 4, !dbg !4414
@__param_ttymajor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_ttymajor, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 0, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ttymajor to i8*) } }, section "__param", align 8, !dbg !4358
@__UNIQUE_ID_ttymajortype244 = internal constant [28 x i8] c"mxser.parmtype=ttymajor:int\00", section ".modinfo", align 1, !dbg !4360
@__UNIQUE_ID_file245 = internal constant [29 x i8] c"mxser.file=drivers/tty/mxser\00", section ".modinfo", align 1, !dbg !4365
@__UNIQUE_ID_license246 = internal constant [18 x i8] c"mxser.license=GPL\00", section ".modinfo", align 1, !dbg !4370
@__param_str_allow_overlapping_vector = internal constant [31 x i8] c"mxser.allow_overlapping_vector\00", align 16, !dbg !4416
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@allow_overlapping_vector = internal global i8 0, align 1, !dbg !4397
@__param_allow_overlapping_vector = internal constant %struct.kernel_param { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__param_str_allow_overlapping_vector, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @allow_overlapping_vector } }, section "__param", align 8, !dbg !4375
@__UNIQUE_ID_allow_overlapping_vectortype257 = internal constant [45 x i8] c"mxser.parmtype=allow_overlapping_vector:bool\00", section ".modinfo", align 1, !dbg !4377
@__UNIQUE_ID_allow_overlapping_vector258 = internal constant [128 x i8] c"mxser.parm=allow_overlapping_vector:whether we allow ISA cards to be configured such that vector overlabs IO ports (default=no)\00", section ".modinfo", align 1, !dbg !4382
@mxser_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([27 x %struct.pci_device_id], [27 x %struct.pci_device_id]* @mxser_pcibrds, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @mxser_probe, void (%struct.pci_dev*)* @mxser_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4421
@mxser_boards = internal global [4 x %struct.mxser_board] zeroinitializer, align 16, !dbg !4392
@mxvar_sdriver = internal global %struct.tty_driver* null, align 8, !dbg !4395
@__UNIQUE_ID___addressable_mxser_module_init259 = internal global i8* bitcast (i32 ()* @mxser_module_init to i8*), section ".discard.addressable", align 8, !dbg !4385
@__exitcall_mxser_module_exit = internal global void ()* @mxser_module_exit, section ".exitcall.exit", align 8, !dbg !4387
@param_ops_ulong = external dso_local constant %struct.kernel_param_ops, align 8
@ioaddr = internal global [4 x i64] zeroinitializer, align 16, !dbg !4406
@.str = private unnamed_addr constant [6 x i8] c"mxser\00", align 1
@mxser_pcibrds = internal constant [27 x %struct.pci_device_id] [%struct.pci_device_id { i32 5011, i32 5760, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 5011, i32 4160, i32 -1, i32 -1, i32 0, i32 0, i64 4 }, %struct.pci_device_id { i32 5011, i32 4896, i32 -1, i32 -1, i32 0, i32 0, i64 8 }, %struct.pci_device_id { i32 5011, i32 4417, i32 -1, i32 -1, i32 0, i32 0, i64 9 }, %struct.pci_device_id { i32 5011, i32 4416, i32 -1, i32 -1, i32 0, i32 0, i64 10 }, %struct.pci_device_id { i32 5011, i32 4128, i32 -1, i32 -1, i32 0, i32 0, i64 11 }, %struct.pci_device_id { i32 5011, i32 4161, i32 -1, i32 -1, i32 0, i32 0, i64 12 }, %struct.pci_device_id { i32 5011, i32 5761, i32 -1, i32 -1, i32 0, i32 0, i64 13 }, %struct.pci_device_id { i32 5011, i32 4897, i32 -1, i32 -1, i32 0, i32 0, i64 14 }, %struct.pci_device_id { i32 5011, i32 4928, i32 -1, i32 -1, i32 0, i32 0, i64 15 }, %struct.pci_device_id { i32 5011, i32 4162, i32 -1, i32 -1, i32 0, i32 0, i64 16 }, %struct.pci_device_id { i32 5011, i32 1, i32 -1, i32 -1, i32 0, i32 0, i64 17 }, %struct.pci_device_id { i32 5011, i32 4480, i32 -1, i32 -1, i32 0, i32 0, i64 18 }, %struct.pci_device_id { i32 5011, i32 4129, i32 -1, i32 -1, i32 0, i32 0, i64 19 }, %struct.pci_device_id { i32 5011, i32 4130, i32 -1, i32 -1, i32 0, i32 0, i64 20 }, %struct.pci_device_id { i32 5011, i32 4481, i32 -1, i32 -1, i32 0, i32 0, i64 21 }, %struct.pci_device_id { i32 5011, i32 5762, i32 -1, i32 -1, i32 0, i32 0, i64 22 }, %struct.pci_device_id { i32 5011, i32 4163, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 5011, i32 4224, i32 -1, i32 -1, i32 0, i32 0, i64 24 }, %struct.pci_device_id { i32 5011, i32 4418, i32 -1, i32 -1, i32 0, i32 0, i64 25 }, %struct.pci_device_id { i32 5011, i32 4929, i32 -1, i32 -1, i32 0, i32 0, i64 26 }, %struct.pci_device_id { i32 5011, i32 4992, i32 -1, i32 -1, i32 0, i32 0, i64 27 }, %struct.pci_device_id { i32 5011, i32 4164, i32 -1, i32 -1, i32 0, i32 0, i64 28 }, %struct.pci_device_id { i32 5011, i32 4419, i32 -1, i32 -1, i32 0, i32 0, i64 29 }, %struct.pci_device_id { i32 5011, i32 4131, i32 -1, i32 -1, i32 0, i32 0, i64 30 }, %struct.pci_device_id { i32 5011, i32 4384, i32 -1, i32 -1, i32 0, i32 0, i64 31 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4698
@.str.1 = private unnamed_addr constant [58 x i8] c"too many boards found (maximum %d), board not configured\0A\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"found MOXA %s board (BusNo=%d, DevNo=%d)\0A\00", align 1
@mxser_cards = internal constant [32 x %struct.mxser_cardinfo] [%struct.mxser_cardinfo { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), i32 4, i32 2 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i32 0, i32 0), i32 4, i32 2 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i32 0, i32 0), i32 2, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i32 0, i32 0), i32 2, i32 1 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i32 2, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), i32 2, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i32 2, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i32 8, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.35, i32 0, i32 0), i32 4, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i32 0, i32 0), i32 2, i32 0 }, %struct.mxser_cardinfo { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.37, i32 0, i32 0), i32 2, i32 0 }], align 16, !dbg !4703
@.str.3 = private unnamed_addr constant [19 x i8] c"PCI enable failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"mxser(IO)\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"mxser(vector)\00", align 1
@Gpci_uart_info = internal constant [3 x %struct.anon.68] [%struct.anon.68 { i32 0, i32 16, i32 16, i32 16, i32 14, i32 14, i32 1, i64 921600 }, %struct.anon.68 { i32 1, i32 64, i32 64, i32 64, i32 48, i32 48, i32 16, i64 230400 }, %struct.anon.68 { i32 2, i32 128, i32 128, i32 128, i32 96, i32 96, i32 32, i64 921600 }], align 16, !dbg !4706
@.str.6 = private unnamed_addr constant [12 x i8] c"C168 series\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"C104 series\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"CI-104J series\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"C168H/PCI series\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"C104H/PCI series\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"C102 series\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"CI-132 series\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"CI-134 series\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"CP-132 series\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"CP-114 series\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"CT-114 series\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"CP-102 series\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"CP-104U series\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"CP-168U series\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"CP-132U series\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"CP-134U series\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"CP-104JU series\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"Moxa UC7000 Serial\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"CP-118U series\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"CP-102UL series\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"CP-102U series\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"CP-118EL series\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"CP-168EL series\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"CP-104EL series\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"CB-108 series\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"CB-114 series\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"CB-134I series\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"CP-138U series\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"POS-104UL series\00", align 1
@.str.35 = private unnamed_addr constant [16 x i8] c"CP-114UL series\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"CP-102UF series\00", align 1
@.str.37 = private unnamed_addr constant [16 x i8] c"CP-112UL series\00", align 1
@.str.38 = private unnamed_addr constant [34 x i8] c"\016mxser: max. baud rate = %d bps\0A\00", align 1
@mxser_port_ops = internal constant %struct.tty_port_operations { i32 (%struct.tty_port*)* @mxser_carrier_raised, void (%struct.tty_port*, i32)* @mxser_dtr_rts, void (%struct.tty_port*)* @mxser_shutdown_port, i32 (%struct.tty_port*, %struct.tty_struct*)* @mxser_activate, void (%struct.tty_port*)* null }, align 8, !dbg !4720
@.str.39 = private unnamed_addr constant [76 x i8] c"\013Board %s: Request irq failed, IRQ (%d) may conflict with another device.\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@mxser_set_baud_method = internal global [33 x i32] zeroinitializer, align 16, !dbg !4722
@mxvar_log = internal global %struct.mxser_log zeroinitializer, align 8, !dbg !4727
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.40 = private unnamed_addr constant [50 x i8] c"\016MOXA Smartio/Industio family driver version %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"2.0.5\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"ttyMI\00", align 1
@tty_std_termios = external dso_local global %struct.ktermios, align 4
@mxser_ops = internal constant %struct.tty_operations { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)* null, i32 (%struct.tty_driver*, %struct.tty_struct*)* null, void (%struct.tty_driver*, %struct.tty_struct*)* null, i32 (%struct.tty_struct*, %struct.file*)* @mxser_open, void (%struct.tty_struct*, %struct.file*)* @mxser_close, void (%struct.tty_struct*)* null, void (%struct.tty_struct*)* null, i32 (%struct.tty_struct*, i8*, i32)* @mxser_write, i32 (%struct.tty_struct*, i8)* @mxser_put_char, void (%struct.tty_struct*)* @mxser_flush_chars, i32 (%struct.tty_struct*)* @mxser_write_room, i32 (%struct.tty_struct*)* @mxser_chars_in_buffer, i32 (%struct.tty_struct*, i32, i64)* @mxser_ioctl, i64 (%struct.tty_struct*, i32, i64)* null, void (%struct.tty_struct*, %struct.ktermios*)* @mxser_set_termios, void (%struct.tty_struct*)* @mxser_throttle, void (%struct.tty_struct*)* @mxser_unthrottle, void (%struct.tty_struct*)* @mxser_stop, void (%struct.tty_struct*)* @mxser_start, void (%struct.tty_struct*)* @mxser_hangup, i32 (%struct.tty_struct*, i32)* @mxser_rs_break, void (%struct.tty_struct*)* @mxser_flush_buffer, void (%struct.tty_struct*)* null, void (%struct.tty_struct*, i32)* @mxser_wait_until_sent, void (%struct.tty_struct*, i8)* null, i32 (%struct.tty_struct*)* @mxser_tiocmget, i32 (%struct.tty_struct*, i32, i32)* @mxser_tiocmset, i32 (%struct.tty_struct*, %struct.winsize*)* null, i32 (%struct.tty_struct*, %struct.termiox*)* null, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)* @mxser_get_icount, i32 (%struct.tty_struct*, %struct.serial_struct*)* @mxser_get_serial_info, i32 (%struct.tty_struct*, %struct.serial_struct*)* @mxser_set_serial_info, void (%struct.tty_struct*, %struct.seq_file*)* null, i32 (%struct.seq_file*, i8*)* null }, align 8, !dbg !4735
@.str.43 = private unnamed_addr constant [62 x i8] c"\013Couldn't install MOXA Smartio/Industio family tty driver !\0A\00", align 1
@.str.44 = private unnamed_addr constant [42 x i8] c"\016mxser: found MOXA %s board (CAP=0x%lx)\0A\00", align 1
@.str.45 = private unnamed_addr constant [36 x i8] c"\013mxser: can't register pci driver\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@mxser_ioctl.ModeMask = internal global [4 x i8] c"\FC\F3\CF?", align 1, !dbg !4737
@mxser_ioctl_special._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4741
@__func__.mxser_ioctl_special = private unnamed_addr constant [20 x i8] c"mxser_ioctl_special\00", align 1
@.str.46 = private unnamed_addr constant [72 x i8] c"\014mxser: '%s' uses deprecated ioctl %x (GET_MAJOR), fix your userspace\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.47 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@mxser_get_msr.mxser_msr = internal global [33 x i8] zeroinitializer, align 16, !dbg !4746
@.str.48 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.49 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.50 = private unnamed_addr constant [33 x i8] c"\013mxser: interrupt number unset\0A\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"\013mxser: invalid interrupt vector\0A\00", align 1
@.str.52 = private unnamed_addr constant [58 x i8] c"\013mxser: can't request ports I/O region: 0x%.8lx-0x%.8lx\0A\00", align 1
@.str.53 = private unnamed_addr constant [65 x i8] c"\013mxser: can't request interrupt vector region: 0x%.8lx-0x%.8lx\0A\00", align 1
@.str.54 = private unnamed_addr constant [35 x i8] c"\013mxser: invalid interrupt number\0A\00", align 1
@llvm.used = appending global [15 x i8*] [i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_author240, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_description241, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_ioaddr to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_ioaddrtype242, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_ioaddr243, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ttymajor to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_ttymajortype244, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_file245, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__UNIQUE_ID_license246, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_allow_overlapping_vector to i8*), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_allow_overlapping_vectortype257, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @__UNIQUE_ID_allow_overlapping_vector258, i32 0, i32 0), i8* bitcast (void ()* @mxser_module_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_mxser_module_init259 to i8*), i8* bitcast (void ()** @__exitcall_mxser_module_exit to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mxser_module_exit() #0 section ".exit.text" !dbg !4761 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @pci_unregister_driver(%struct.pci_driver* @mxser_driver) #11, !dbg !4764
  store i32 0, i32* %i, align 4, !dbg !4765
  br label %for.cond, !dbg !4767

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4768
  %cmp = icmp ult i32 %0, 4, !dbg !4770
  br i1 %cmp, label %for.body, label %for.end, !dbg !4771

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !4772
  %idxprom = zext i32 %1 to i64, !dbg !4774
  %arrayidx = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom, !dbg !4774
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx, i32 0, i32 2, !dbg !4775
  %2 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !4775
  %cmp1 = icmp ne %struct.mxser_cardinfo* %2, null, !dbg !4776
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4777

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !4778
  %idxprom2 = zext i32 %3 to i64, !dbg !4779
  %arrayidx3 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom2, !dbg !4779
  call void @mxser_board_remove(%struct.mxser_board* %arrayidx3) #11, !dbg !4780
  br label %if.end, !dbg !4780

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4781

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !4782
  %inc = add i32 %4, 1, !dbg !4782
  store i32 %inc, i32* %i, align 4, !dbg !4782
  br label %for.cond, !dbg !4783, !llvm.loop !4784

for.end:                                          ; preds = %for.cond
  %5 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4786
  %call = call i32 @tty_unregister_driver(%struct.tty_driver* %5) #11, !dbg !4787
  %6 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4788
  call void @put_tty_driver(%struct.tty_driver* %6) #11, !dbg !4789
  store i32 0, i32* %i, align 4, !dbg !4790
  br label %for.cond4, !dbg !4792

for.cond4:                                        ; preds = %for.inc15, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !4793
  %cmp5 = icmp ult i32 %7, 4, !dbg !4795
  br i1 %cmp5, label %for.body6, label %for.end17, !dbg !4796

for.body6:                                        ; preds = %for.cond4
  %8 = load i32, i32* %i, align 4, !dbg !4797
  %idxprom7 = zext i32 %8 to i64, !dbg !4799
  %arrayidx8 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom7, !dbg !4799
  %info9 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx8, i32 0, i32 2, !dbg !4800
  %9 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info9, align 8, !dbg !4800
  %cmp10 = icmp ne %struct.mxser_cardinfo* %9, null, !dbg !4801
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !4802

if.then11:                                        ; preds = %for.body6
  %10 = load i32, i32* %i, align 4, !dbg !4803
  %idxprom12 = zext i32 %10 to i64, !dbg !4804
  %arrayidx13 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom12, !dbg !4804
  call void @mxser_release_ISA_res(%struct.mxser_board* %arrayidx13) #11, !dbg !4805
  br label %if.end14, !dbg !4805

if.end14:                                         ; preds = %if.then11, %for.body6
  br label %for.inc15, !dbg !4806

for.inc15:                                        ; preds = %if.end14
  %11 = load i32, i32* %i, align 4, !dbg !4807
  %inc16 = add i32 %11, 1, !dbg !4807
  store i32 %inc16, i32* %i, align 4, !dbg !4807
  br label %for.cond4, !dbg !4808, !llvm.loop !4809

for.end17:                                        ; preds = %for.cond4
  ret void, !dbg !4811
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_board_remove(%struct.mxser_board* %brd) #3 !dbg !4812 {
entry:
  %brd.addr = alloca %struct.mxser_board*, align 8
  %i = alloca i32, align 4
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !4815, metadata !DIExpression()), !dbg !4816
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4817, metadata !DIExpression()), !dbg !4818
  store i32 0, i32* %i, align 4, !dbg !4819
  br label %for.cond, !dbg !4821

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4822
  %1 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4824
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %1, i32 0, i32 2, !dbg !4825
  %2 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !4825
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %2, i32 0, i32 1, !dbg !4826
  %3 = load i32, i32* %nports, align 8, !dbg !4826
  %cmp = icmp ult i32 %0, %3, !dbg !4827
  br i1 %cmp, label %for.body, label %for.end, !dbg !4828

for.body:                                         ; preds = %for.cond
  %4 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4829
  %5 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4831
  %idx = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %5, i32 0, i32 0, !dbg !4832
  %6 = load i32, i32* %idx, align 8, !dbg !4832
  %7 = load i32, i32* %i, align 4, !dbg !4833
  %add = add i32 %6, %7, !dbg !4834
  call void @tty_unregister_device(%struct.tty_driver* %4, i32 %add) #11, !dbg !4835
  %8 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4836
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %8, i32 0, i32 7, !dbg !4837
  %9 = load i32, i32* %i, align 4, !dbg !4838
  %idxprom = zext i32 %9 to i64, !dbg !4836
  %arrayidx = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom, !dbg !4836
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx, i32 0, i32 0, !dbg !4839
  call void @tty_port_destroy(%struct.tty_port* %port) #11, !dbg !4840
  br label %for.inc, !dbg !4841

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !4842
  %inc = add i32 %10, 1, !dbg !4842
  store i32 %inc, i32* %i, align 4, !dbg !4842
  br label %for.cond, !dbg !4843, !llvm.loop !4844

for.end:                                          ; preds = %for.cond
  %11 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4846
  %irq = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %11, i32 0, i32 1, !dbg !4847
  %12 = load i32, i32* %irq, align 4, !dbg !4847
  %13 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4848
  %14 = bitcast %struct.mxser_board* %13 to i8*, !dbg !4848
  %call = call i8* @free_irq(i32 %12, i8* %14) #11, !dbg !4849
  ret void, !dbg !4850
}

; Function Attrs: noredzone
declare dso_local i32 @tty_unregister_driver(%struct.tty_driver*) #2

; Function Attrs: noredzone
declare dso_local void @put_tty_driver(%struct.tty_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_release_ISA_res(%struct.mxser_board* %brd) #3 !dbg !4851 {
entry:
  %brd.addr = alloca %struct.mxser_board*, align 8
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  %0 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4854
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %0, i32 0, i32 7, !dbg !4854
  %arrayidx = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 0, !dbg !4854
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx, i32 0, i32 2, !dbg !4854
  %1 = load i64, i64* %ioaddr, align 8, !dbg !4854
  %2 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4854
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %2, i32 0, i32 2, !dbg !4854
  %3 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !4854
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %3, i32 0, i32 1, !dbg !4854
  %4 = load i32, i32* %nports, align 8, !dbg !4854
  %mul = mul i32 8, %4, !dbg !4854
  %conv = zext i32 %mul to i64, !dbg !4854
  call void @__release_region(%struct.resource* @ioport_resource, i64 %1, i64 %conv) #11, !dbg !4854
  %5 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !4855
  call void @mxser_release_vector(%struct.mxser_board* %5) #11, !dbg !4856
  ret void, !dbg !4857
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_module_init() #0 section ".init.text" !dbg !4858 {
entry:
  %retval = alloca i32, align 4
  %brd = alloca %struct.mxser_board*, align 8
  %tty_dev = alloca %struct.device*, align 8
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %retval1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd, metadata !4861, metadata !DIExpression()), !dbg !4862
  call void @llvm.dbg.declare(metadata %struct.device** %tty_dev, metadata !4863, metadata !DIExpression()), !dbg !4864
  call void @llvm.dbg.declare(metadata i32* %b, metadata !4865, metadata !DIExpression()), !dbg !4866
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4867, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.declare(metadata i32* %m, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4871, metadata !DIExpression()), !dbg !4872
  %call = call %struct.tty_driver* @alloc_tty_driver(i32 33) #11, !dbg !4873
  store %struct.tty_driver* %call, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4874
  %0 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4875
  %tobool = icmp ne %struct.tty_driver* %0, null, !dbg !4875
  br i1 %tobool, label %if.end, label %if.then, !dbg !4877

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4878
  br label %return, !dbg !4878

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)) #12, !dbg !4879
  %1 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4880
  %name = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %1, i32 0, i32 5, !dbg !4881
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8** %name, align 8, !dbg !4882
  %2 = load i32, i32* @ttymajor, align 4, !dbg !4883
  %3 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4884
  %major = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %3, i32 0, i32 7, !dbg !4885
  store i32 %2, i32* %major, align 4, !dbg !4886
  %4 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4887
  %minor_start = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %4, i32 0, i32 8, !dbg !4888
  store i32 0, i32* %minor_start, align 8, !dbg !4889
  %5 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4890
  %type = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %5, i32 0, i32 10, !dbg !4891
  store i16 3, i16* %type, align 8, !dbg !4892
  %6 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4893
  %subtype = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %6, i32 0, i32 11, !dbg !4894
  store i16 1, i16* %subtype, align 2, !dbg !4895
  %7 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4896
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %7, i32 0, i32 12, !dbg !4897
  %8 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !4898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast (%struct.ktermios* @tty_std_termios to i8*), i64 44, i1 false), !dbg !4898
  %9 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4899
  %init_termios3 = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %9, i32 0, i32 12, !dbg !4900
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %init_termios3, i32 0, i32 2, !dbg !4901
  store i32 3261, i32* %c_cflag, align 4, !dbg !4902
  %10 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4903
  %flags = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %10, i32 0, i32 13, !dbg !4904
  store i64 12, i64* %flags, align 8, !dbg !4905
  %11 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4906
  call void @tty_set_operations(%struct.tty_driver* %11, %struct.tty_operations* @mxser_ops) #11, !dbg !4907
  %12 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4908
  %call4 = call i32 @tty_register_driver(%struct.tty_driver* %12) #11, !dbg !4909
  store i32 %call4, i32* %retval1, align 4, !dbg !4910
  %13 = load i32, i32* %retval1, align 4, !dbg !4911
  %tobool5 = icmp ne i32 %13, 0, !dbg !4911
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4913

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !4914
  br label %err_put, !dbg !4916

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %m, align 4, !dbg !4917
  store i32 0, i32* %b, align 4, !dbg !4919
  br label %for.cond, !dbg !4920

for.cond:                                         ; preds = %for.inc73, %if.end8
  %14 = load i32, i32* %b, align 4, !dbg !4921
  %cmp = icmp ult i32 %14, 4, !dbg !4923
  br i1 %cmp, label %for.body, label %for.end75, !dbg !4924

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %b, align 4, !dbg !4925
  %idxprom = zext i32 %15 to i64, !dbg !4928
  %arrayidx = getelementptr [4 x i64], [4 x i64]* @ioaddr, i64 0, i64 %idxprom, !dbg !4928
  %16 = load i64, i64* %arrayidx, align 8, !dbg !4928
  %tobool9 = icmp ne i64 %16, 0, !dbg !4928
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !4929

if.then10:                                        ; preds = %for.body
  br label %for.inc73, !dbg !4930

if.end11:                                         ; preds = %for.body
  %17 = load i32, i32* %m, align 4, !dbg !4931
  %idxprom12 = zext i32 %17 to i64, !dbg !4932
  %arrayidx13 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom12, !dbg !4932
  store %struct.mxser_board* %arrayidx13, %struct.mxser_board** %brd, align 8, !dbg !4933
  %18 = load i32, i32* %b, align 4, !dbg !4934
  %idxprom14 = zext i32 %18 to i64, !dbg !4935
  %arrayidx15 = getelementptr [4 x i64], [4 x i64]* @ioaddr, i64 0, i64 %idxprom14, !dbg !4935
  %19 = load i64, i64* %arrayidx15, align 8, !dbg !4935
  %conv = trunc i64 %19 to i32, !dbg !4935
  %20 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4936
  %call16 = call i32 @mxser_get_ISA_conf(i32 %conv, %struct.mxser_board* %20) #12, !dbg !4937
  store i32 %call16, i32* %retval1, align 4, !dbg !4938
  %21 = load i32, i32* %retval1, align 4, !dbg !4939
  %cmp17 = icmp sle i32 %21, 0, !dbg !4941
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4942

if.then19:                                        ; preds = %if.end11
  %22 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4943
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %22, i32 0, i32 2, !dbg !4945
  store %struct.mxser_cardinfo* null, %struct.mxser_cardinfo** %info, align 8, !dbg !4946
  br label %for.inc73, !dbg !4947

if.end20:                                         ; preds = %if.end11
  %23 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4948
  %info21 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %23, i32 0, i32 2, !dbg !4949
  %24 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info21, align 8, !dbg !4949
  %name22 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %24, i32 0, i32 0, !dbg !4950
  %25 = load i8*, i8** %name22, align 8, !dbg !4950
  %26 = load i32, i32* %b, align 4, !dbg !4951
  %idxprom23 = zext i32 %26 to i64, !dbg !4952
  %arrayidx24 = getelementptr [4 x i64], [4 x i64]* @ioaddr, i64 0, i64 %idxprom23, !dbg !4952
  %27 = load i64, i64* %arrayidx24, align 8, !dbg !4952
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0), i8* %25, i64 %27) #12, !dbg !4953
  %28 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4954
  %call26 = call i32 @mxser_initbrd(%struct.mxser_board* %28) #11, !dbg !4956
  %cmp27 = icmp slt i32 %call26, 0, !dbg !4957
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !4958

if.then29:                                        ; preds = %if.end20
  %29 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4959
  call void @mxser_release_ISA_res(%struct.mxser_board* %29) #11, !dbg !4961
  %30 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4962
  %info30 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %30, i32 0, i32 2, !dbg !4963
  store %struct.mxser_cardinfo* null, %struct.mxser_cardinfo** %info30, align 8, !dbg !4964
  br label %for.inc73, !dbg !4965

if.end31:                                         ; preds = %if.end20
  %31 = load i32, i32* %m, align 4, !dbg !4966
  %mul = mul i32 %31, 8, !dbg !4967
  %32 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4968
  %idx = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %32, i32 0, i32 0, !dbg !4969
  store i32 %mul, i32* %idx, align 8, !dbg !4970
  store i32 0, i32* %i, align 4, !dbg !4971
  br label %for.cond32, !dbg !4973

for.cond32:                                       ; preds = %for.inc64, %if.end31
  %33 = load i32, i32* %i, align 4, !dbg !4974
  %34 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4976
  %info33 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %34, i32 0, i32 2, !dbg !4977
  %35 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info33, align 8, !dbg !4977
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %35, i32 0, i32 1, !dbg !4978
  %36 = load i32, i32* %nports, align 8, !dbg !4978
  %cmp34 = icmp ult i32 %33, %36, !dbg !4979
  br i1 %cmp34, label %for.body36, label %for.end66, !dbg !4980

for.body36:                                       ; preds = %for.cond32
  %37 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4981
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %37, i32 0, i32 7, !dbg !4983
  %38 = load i32, i32* %i, align 4, !dbg !4984
  %idxprom37 = zext i32 %38 to i64, !dbg !4981
  %arrayidx38 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom37, !dbg !4981
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx38, i32 0, i32 0, !dbg !4985
  %39 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !4986
  %40 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !4987
  %idx39 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %40, i32 0, i32 0, !dbg !4988
  %41 = load i32, i32* %idx39, align 8, !dbg !4988
  %42 = load i32, i32* %i, align 4, !dbg !4989
  %add = add i32 %41, %42, !dbg !4990
  %call40 = call %struct.device* @tty_port_register_device(%struct.tty_port* %port, %struct.tty_driver* %39, i32 %add, %struct.device* null) #11, !dbg !4991
  store %struct.device* %call40, %struct.device** %tty_dev, align 8, !dbg !4992
  %43 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !4993
  %44 = bitcast %struct.device* %43 to i8*, !dbg !4993
  %call41 = call zeroext i1 @IS_ERR(i8* %44) #11, !dbg !4995
  br i1 %call41, label %if.then42, label %if.end63, !dbg !4996

if.then42:                                        ; preds = %for.body36
  br label %for.cond43, !dbg !4997

for.cond43:                                       ; preds = %for.inc, %if.then42
  %45 = load i32, i32* %i, align 4, !dbg !4999
  %cmp44 = icmp ugt i32 %45, 0, !dbg !5002
  br i1 %cmp44, label %for.body46, label %for.end, !dbg !5003

for.body46:                                       ; preds = %for.cond43
  %46 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5004
  %47 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5005
  %idx47 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %47, i32 0, i32 0, !dbg !5006
  %48 = load i32, i32* %idx47, align 8, !dbg !5006
  %49 = load i32, i32* %i, align 4, !dbg !5007
  %add48 = add i32 %48, %49, !dbg !5008
  %sub = sub i32 %add48, 1, !dbg !5009
  call void @tty_unregister_device(%struct.tty_driver* %46, i32 %sub) #11, !dbg !5010
  br label %for.inc, !dbg !5010

for.inc:                                          ; preds = %for.body46
  %50 = load i32, i32* %i, align 4, !dbg !5011
  %dec = add i32 %50, -1, !dbg !5011
  store i32 %dec, i32* %i, align 4, !dbg !5011
  br label %for.cond43, !dbg !5012, !llvm.loop !5013

for.end:                                          ; preds = %for.cond43
  store i32 0, i32* %i, align 4, !dbg !5015
  br label %for.cond49, !dbg !5017

for.cond49:                                       ; preds = %for.inc59, %for.end
  %51 = load i32, i32* %i, align 4, !dbg !5018
  %52 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5020
  %info50 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %52, i32 0, i32 2, !dbg !5021
  %53 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info50, align 8, !dbg !5021
  %nports51 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %53, i32 0, i32 1, !dbg !5022
  %54 = load i32, i32* %nports51, align 8, !dbg !5022
  %cmp52 = icmp ult i32 %51, %54, !dbg !5023
  br i1 %cmp52, label %for.body54, label %for.end60, !dbg !5024

for.body54:                                       ; preds = %for.cond49
  %55 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5025
  %ports55 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %55, i32 0, i32 7, !dbg !5026
  %56 = load i32, i32* %i, align 4, !dbg !5027
  %idxprom56 = zext i32 %56 to i64, !dbg !5025
  %arrayidx57 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports55, i64 0, i64 %idxprom56, !dbg !5025
  %port58 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx57, i32 0, i32 0, !dbg !5028
  call void @tty_port_destroy(%struct.tty_port* %port58) #11, !dbg !5029
  br label %for.inc59, !dbg !5029

for.inc59:                                        ; preds = %for.body54
  %57 = load i32, i32* %i, align 4, !dbg !5030
  %inc = add i32 %57, 1, !dbg !5030
  store i32 %inc, i32* %i, align 4, !dbg !5030
  br label %for.cond49, !dbg !5031, !llvm.loop !5032

for.end60:                                        ; preds = %for.cond49
  %58 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5034
  %irq = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %58, i32 0, i32 1, !dbg !5035
  %59 = load i32, i32* %irq, align 4, !dbg !5035
  %60 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5036
  %61 = bitcast %struct.mxser_board* %60 to i8*, !dbg !5036
  %call61 = call i8* @free_irq(i32 %59, i8* %61) #11, !dbg !5037
  %62 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5038
  call void @mxser_release_ISA_res(%struct.mxser_board* %62) #11, !dbg !5039
  %63 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5040
  %info62 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %63, i32 0, i32 2, !dbg !5041
  store %struct.mxser_cardinfo* null, %struct.mxser_cardinfo** %info62, align 8, !dbg !5042
  br label %for.end66, !dbg !5043

if.end63:                                         ; preds = %for.body36
  br label %for.inc64, !dbg !5044

for.inc64:                                        ; preds = %if.end63
  %64 = load i32, i32* %i, align 4, !dbg !5045
  %inc65 = add i32 %64, 1, !dbg !5045
  store i32 %inc65, i32* %i, align 4, !dbg !5045
  br label %for.cond32, !dbg !5046, !llvm.loop !5047

for.end66:                                        ; preds = %for.end60, %for.cond32
  %65 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5049
  %info67 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %65, i32 0, i32 2, !dbg !5051
  %66 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info67, align 8, !dbg !5051
  %cmp68 = icmp eq %struct.mxser_cardinfo* %66, null, !dbg !5052
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !5053

if.then70:                                        ; preds = %for.end66
  br label %for.inc73, !dbg !5054

if.end71:                                         ; preds = %for.end66
  %67 = load i32, i32* %m, align 4, !dbg !5055
  %inc72 = add i32 %67, 1, !dbg !5055
  store i32 %inc72, i32* %m, align 4, !dbg !5055
  br label %for.inc73, !dbg !5056

for.inc73:                                        ; preds = %if.end71, %if.then70, %if.then29, %if.then19, %if.then10
  %68 = load i32, i32* %b, align 4, !dbg !5057
  %inc74 = add i32 %68, 1, !dbg !5057
  store i32 %inc74, i32* %b, align 4, !dbg !5057
  br label %for.cond, !dbg !5058, !llvm.loop !5059

for.end75:                                        ; preds = %for.cond
  %call76 = call i32 @__pci_register_driver(%struct.pci_driver* @mxser_driver, %struct.module* null, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #11, !dbg !5061
  store i32 %call76, i32* %retval1, align 4, !dbg !5062
  %69 = load i32, i32* %retval1, align 4, !dbg !5063
  %tobool77 = icmp ne i32 %69, 0, !dbg !5063
  br i1 %tobool77, label %if.then78, label %if.end83, !dbg !5065

if.then78:                                        ; preds = %for.end75
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !5066
  %70 = load i32, i32* %m, align 4, !dbg !5068
  %tobool80 = icmp ne i32 %70, 0, !dbg !5068
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !5070

if.then81:                                        ; preds = %if.then78
  store i32 -19, i32* %retval1, align 4, !dbg !5071
  br label %err_unr, !dbg !5073

if.end82:                                         ; preds = %if.then78
  br label %if.end83, !dbg !5074

if.end83:                                         ; preds = %if.end82, %for.end75
  store i32 0, i32* %retval, align 4, !dbg !5075
  br label %return, !dbg !5075

err_unr:                                          ; preds = %if.then81
  call void @llvm.dbg.label(metadata !5076), !dbg !5077
  %71 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5078
  %call84 = call i32 @tty_unregister_driver(%struct.tty_driver* %71) #11, !dbg !5079
  br label %err_put, !dbg !5079

err_put:                                          ; preds = %err_unr, %if.then6
  call void @llvm.dbg.label(metadata !5080), !dbg !5081
  %72 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5082
  call void @put_tty_driver(%struct.tty_driver* %72) #11, !dbg !5083
  %73 = load i32, i32* %retval1, align 4, !dbg !5084
  store i32 %73, i32* %retval, align 4, !dbg !5085
  br label %return, !dbg !5085

return:                                           ; preds = %err_put, %if.end83, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !5086
  ret i32 %74, !dbg !5086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %ent) #3 !dbg !5087 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %ent.addr = alloca %struct.pci_device_id*, align 8
  %brd = alloca %struct.mxser_board*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ioaddress = alloca i64, align 8
  %tty_dev = alloca %struct.device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5088, metadata !DIExpression()), !dbg !5089
  store %struct.pci_device_id* %ent, %struct.pci_device_id** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %ent.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd, metadata !5092, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5094, metadata !DIExpression()), !dbg !5095
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5096, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.declare(metadata i64* %ioaddress, metadata !5098, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.device** %tty_dev, metadata !5100, metadata !DIExpression()), !dbg !5101
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5102, metadata !DIExpression()), !dbg !5103
  store i32 -22, i32* %retval1, align 4, !dbg !5103
  store i32 0, i32* %i, align 4, !dbg !5104
  br label %for.cond, !dbg !5106

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5107
  %cmp = icmp ult i32 %0, 4, !dbg !5109
  br i1 %cmp, label %for.body, label %for.end, !dbg !5110

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5111
  %idxprom = zext i32 %1 to i64, !dbg !5113
  %arrayidx = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom, !dbg !5113
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx, i32 0, i32 2, !dbg !5114
  %2 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !5114
  %cmp2 = icmp eq %struct.mxser_cardinfo* %2, null, !dbg !5115
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5116

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5117

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5118

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !5119
  %inc = add i32 %3, 1, !dbg !5119
  store i32 %inc, i32* %i, align 4, !dbg !5119
  br label %for.cond, !dbg !5120, !llvm.loop !5121

for.end:                                          ; preds = %if.then, %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !5123
  %cmp3 = icmp uge i32 %4, 4, !dbg !5125
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5126

if.then4:                                         ; preds = %for.end
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5127
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %5, i32 0, i32 41, !dbg !5127
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 4) #12, !dbg !5127
  br label %err, !dbg !5129

if.end5:                                          ; preds = %for.end
  %6 = load i32, i32* %i, align 4, !dbg !5130
  %idxprom6 = zext i32 %6 to i64, !dbg !5131
  %arrayidx7 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom6, !dbg !5131
  store %struct.mxser_board* %arrayidx7, %struct.mxser_board** %brd, align 8, !dbg !5132
  %7 = load i32, i32* %i, align 4, !dbg !5133
  %mul = mul i32 %7, 8, !dbg !5134
  %8 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5135
  %idx = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %8, i32 0, i32 0, !dbg !5136
  store i32 %mul, i32* %idx, align 8, !dbg !5137
  %9 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5138
  %dev8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 41, !dbg !5138
  %10 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !5138
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %10, i32 0, i32 6, !dbg !5138
  %11 = load i64, i64* %driver_data, align 8, !dbg !5138
  %arrayidx9 = getelementptr [32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 %11, !dbg !5138
  %name = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %arrayidx9, i32 0, i32 0, !dbg !5138
  %12 = load i8*, i8** %name, align 16, !dbg !5138
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5138
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %13, i32 0, i32 1, !dbg !5138
  %14 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !5138
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %14, i32 0, i32 13, !dbg !5138
  %15 = load i8, i8* %number, align 8, !dbg !5138
  %conv = zext i8 %15 to i32, !dbg !5138
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5138
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 6, !dbg !5138
  %17 = load i32, i32* %devfn, align 8, !dbg !5138
  %shr = lshr i32 %17, 3, !dbg !5138
  %and = and i32 %shr, 31, !dbg !5138
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* %12, i32 %conv, i32 %and) #12, !dbg !5138
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5139
  %call = call i32 @pci_enable_device(%struct.pci_dev* %18) #11, !dbg !5140
  store i32 %call, i32* %retval1, align 4, !dbg !5141
  %19 = load i32, i32* %retval1, align 4, !dbg !5142
  %tobool = icmp ne i32 %19, 0, !dbg !5142
  br i1 %tobool, label %if.then10, label %if.end12, !dbg !5144

if.then10:                                        ; preds = %if.end5
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5145
  %dev11 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %20, i32 0, i32 41, !dbg !5145
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !5145
  br label %err, !dbg !5147

if.end12:                                         ; preds = %if.end5
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5148
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %21, i32 0, i32 44, !dbg !5148
  %arrayidx13 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 2, !dbg !5148
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx13, i32 0, i32 0, !dbg !5148
  %22 = load i64, i64* %start, align 8, !dbg !5148
  store i64 %22, i64* %ioaddress, align 8, !dbg !5149
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5150
  %call14 = call i32 @pci_request_region(%struct.pci_dev* %23, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #11, !dbg !5151
  store i32 %call14, i32* %retval1, align 4, !dbg !5152
  %24 = load i32, i32* %retval1, align 4, !dbg !5153
  %tobool15 = icmp ne i32 %24, 0, !dbg !5153
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5155

if.then16:                                        ; preds = %if.end12
  br label %err_dis, !dbg !5156

if.end17:                                         ; preds = %if.end12
  %25 = load %struct.pci_device_id*, %struct.pci_device_id** %ent.addr, align 8, !dbg !5157
  %driver_data18 = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %25, i32 0, i32 6, !dbg !5158
  %26 = load i64, i64* %driver_data18, align 8, !dbg !5158
  %arrayidx19 = getelementptr [32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 %26, !dbg !5159
  %27 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5160
  %info20 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %27, i32 0, i32 2, !dbg !5161
  store %struct.mxser_cardinfo* %arrayidx19, %struct.mxser_cardinfo** %info20, align 8, !dbg !5162
  store i32 0, i32* %i, align 4, !dbg !5163
  br label %for.cond21, !dbg !5165

for.cond21:                                       ; preds = %for.inc30, %if.end17
  %28 = load i32, i32* %i, align 4, !dbg !5166
  %29 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5168
  %info22 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %29, i32 0, i32 2, !dbg !5169
  %30 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info22, align 8, !dbg !5169
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %30, i32 0, i32 1, !dbg !5170
  %31 = load i32, i32* %nports, align 8, !dbg !5170
  %cmp23 = icmp ult i32 %28, %31, !dbg !5171
  br i1 %cmp23, label %for.body25, label %for.end32, !dbg !5172

for.body25:                                       ; preds = %for.cond21
  %32 = load i64, i64* %ioaddress, align 8, !dbg !5173
  %33 = load i32, i32* %i, align 4, !dbg !5174
  %mul26 = mul i32 8, %33, !dbg !5175
  %conv27 = zext i32 %mul26 to i64, !dbg !5176
  %add = add i64 %32, %conv27, !dbg !5177
  %34 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5178
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %34, i32 0, i32 7, !dbg !5179
  %35 = load i32, i32* %i, align 4, !dbg !5180
  %idxprom28 = zext i32 %35 to i64, !dbg !5178
  %arrayidx29 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom28, !dbg !5178
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx29, i32 0, i32 2, !dbg !5181
  store i64 %add, i64* %ioaddr, align 8, !dbg !5182
  br label %for.inc30, !dbg !5178

for.inc30:                                        ; preds = %for.body25
  %36 = load i32, i32* %i, align 4, !dbg !5183
  %inc31 = add i32 %36, 1, !dbg !5183
  store i32 %inc31, i32* %i, align 4, !dbg !5183
  br label %for.cond21, !dbg !5184, !llvm.loop !5185

for.end32:                                        ; preds = %for.cond21
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5187
  %resource33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 44, !dbg !5187
  %arrayidx34 = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource33, i64 0, i64 3, !dbg !5187
  %start35 = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx34, i32 0, i32 0, !dbg !5187
  %38 = load i64, i64* %start35, align 8, !dbg !5187
  store i64 %38, i64* %ioaddress, align 8, !dbg !5188
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5189
  %call36 = call i32 @pci_request_region(%struct.pci_dev* %39, i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #11, !dbg !5190
  store i32 %call36, i32* %retval1, align 4, !dbg !5191
  %40 = load i32, i32* %retval1, align 4, !dbg !5192
  %tobool37 = icmp ne i32 %40, 0, !dbg !5192
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !5194

if.then38:                                        ; preds = %for.end32
  br label %err_zero, !dbg !5195

if.end39:                                         ; preds = %for.end32
  %41 = load i64, i64* %ioaddress, align 8, !dbg !5196
  %42 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5197
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %42, i32 0, i32 3, !dbg !5198
  store i64 %41, i64* %vector, align 8, !dbg !5199
  %43 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5200
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %43, i32 0, i32 43, !dbg !5201
  %44 = load i32, i32* %irq, align 4, !dbg !5201
  %45 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5202
  %irq40 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %45, i32 0, i32 1, !dbg !5203
  store i32 %44, i32* %irq40, align 4, !dbg !5204
  %46 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5205
  %ports41 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %46, i32 0, i32 7, !dbg !5206
  %arrayidx42 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports41, i64 0, i64 0, !dbg !5205
  %ioaddr43 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx42, i32 0, i32 2, !dbg !5207
  %47 = load i64, i64* %ioaddr43, align 8, !dbg !5207
  %call44 = call i32 @CheckIsMoxaMust(i64 %47) #11, !dbg !5208
  %48 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5209
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %48, i32 0, i32 5, !dbg !5210
  store i32 %call44, i32* %chip_flag, align 8, !dbg !5211
  %49 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5212
  %uart_type = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %49, i32 0, i32 6, !dbg !5213
  store i32 4, i32* %uart_type, align 4, !dbg !5214
  %50 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5215
  %vector_mask = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %50, i32 0, i32 4, !dbg !5216
  store i64 0, i64* %vector_mask, align 8, !dbg !5217
  store i32 0, i32* %i, align 4, !dbg !5218
  br label %for.cond45, !dbg !5220

for.cond45:                                       ; preds = %for.inc82, %if.end39
  %51 = load i32, i32* %i, align 4, !dbg !5221
  %52 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5223
  %info46 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %52, i32 0, i32 2, !dbg !5224
  %53 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info46, align 8, !dbg !5224
  %nports47 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %53, i32 0, i32 1, !dbg !5225
  %54 = load i32, i32* %nports47, align 8, !dbg !5225
  %cmp48 = icmp ult i32 %51, %54, !dbg !5226
  br i1 %cmp48, label %for.body50, label %for.end84, !dbg !5227

for.body50:                                       ; preds = %for.cond45
  store i32 0, i32* %j, align 4, !dbg !5228
  br label %for.cond51, !dbg !5231

for.cond51:                                       ; preds = %for.inc79, %for.body50
  %55 = load i32, i32* %j, align 4, !dbg !5232
  %conv52 = zext i32 %55 to i64, !dbg !5232
  %cmp53 = icmp ult i64 %conv52, 3, !dbg !5234
  br i1 %cmp53, label %for.body55, label %for.end81, !dbg !5235

for.body55:                                       ; preds = %for.cond51
  %56 = load i32, i32* %j, align 4, !dbg !5236
  %idxprom56 = zext i32 %56 to i64, !dbg !5239
  %arrayidx57 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom56, !dbg !5239
  %type = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx57, i32 0, i32 0, !dbg !5240
  %57 = load i32, i32* %type, align 8, !dbg !5240
  %58 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5241
  %chip_flag58 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %58, i32 0, i32 5, !dbg !5242
  %59 = load i32, i32* %chip_flag58, align 8, !dbg !5242
  %cmp59 = icmp eq i32 %57, %59, !dbg !5243
  br i1 %cmp59, label %if.then61, label %if.end78, !dbg !5244

if.then61:                                        ; preds = %for.body55
  %60 = load i32, i32* %j, align 4, !dbg !5245
  %idxprom62 = zext i32 %60 to i64, !dbg !5247
  %arrayidx63 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom62, !dbg !5247
  %max_baud = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx63, i32 0, i32 7, !dbg !5248
  %61 = load i64, i64* %max_baud, align 8, !dbg !5248
  %conv64 = trunc i64 %61 to i32, !dbg !5247
  %62 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5249
  %ports65 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %62, i32 0, i32 7, !dbg !5250
  %63 = load i32, i32* %i, align 4, !dbg !5251
  %idxprom66 = zext i32 %63 to i64, !dbg !5249
  %arrayidx67 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports65, i64 0, i64 %idxprom66, !dbg !5249
  %max_baud68 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx67, i32 0, i32 4, !dbg !5252
  store i32 %conv64, i32* %max_baud68, align 8, !dbg !5253
  %64 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5254
  %info69 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %64, i32 0, i32 2, !dbg !5256
  %65 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info69, align 8, !dbg !5256
  %flags = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %65, i32 0, i32 2, !dbg !5257
  %66 = load i32, i32* %flags, align 4, !dbg !5257
  %and70 = and i32 %66, 1, !dbg !5258
  %tobool71 = icmp ne i32 %and70, 0, !dbg !5258
  br i1 %tobool71, label %if.then72, label %if.end77, !dbg !5259

if.then72:                                        ; preds = %if.then61
  %67 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5260
  %ports73 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %67, i32 0, i32 7, !dbg !5261
  %68 = load i32, i32* %i, align 4, !dbg !5262
  %idxprom74 = zext i32 %68 to i64, !dbg !5260
  %arrayidx75 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports73, i64 0, i64 %idxprom74, !dbg !5260
  %max_baud76 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx75, i32 0, i32 4, !dbg !5263
  store i32 921600, i32* %max_baud76, align 8, !dbg !5264
  br label %if.end77, !dbg !5260

if.end77:                                         ; preds = %if.then72, %if.then61
  br label %for.end81, !dbg !5265

if.end78:                                         ; preds = %for.body55
  br label %for.inc79, !dbg !5266

for.inc79:                                        ; preds = %if.end78
  %69 = load i32, i32* %j, align 4, !dbg !5267
  %inc80 = add i32 %69, 1, !dbg !5267
  store i32 %inc80, i32* %j, align 4, !dbg !5267
  br label %for.cond51, !dbg !5268, !llvm.loop !5269

for.end81:                                        ; preds = %if.end77, %for.cond51
  br label %for.inc82, !dbg !5271

for.inc82:                                        ; preds = %for.end81
  %70 = load i32, i32* %i, align 4, !dbg !5272
  %inc83 = add i32 %70, 1, !dbg !5272
  store i32 %inc83, i32* %i, align 4, !dbg !5272
  br label %for.cond45, !dbg !5273, !llvm.loop !5274

for.end84:                                        ; preds = %for.cond45
  %71 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5276
  %chip_flag85 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %71, i32 0, i32 5, !dbg !5278
  %72 = load i32, i32* %chip_flag85, align 8, !dbg !5278
  %cmp86 = icmp eq i32 %72, 2, !dbg !5279
  br i1 %cmp86, label %if.then88, label %if.end115, !dbg !5280

if.then88:                                        ; preds = %for.end84
  store i32 0, i32* %i, align 4, !dbg !5281
  br label %for.cond89, !dbg !5284

for.cond89:                                       ; preds = %for.inc108, %if.then88
  %73 = load i32, i32* %i, align 4, !dbg !5285
  %74 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5287
  %info90 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %74, i32 0, i32 2, !dbg !5288
  %75 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info90, align 8, !dbg !5288
  %nports91 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %75, i32 0, i32 1, !dbg !5289
  %76 = load i32, i32* %nports91, align 8, !dbg !5289
  %cmp92 = icmp ult i32 %73, %76, !dbg !5290
  br i1 %cmp92, label %for.body94, label %for.end110, !dbg !5291

for.body94:                                       ; preds = %for.cond89
  %77 = load i32, i32* %i, align 4, !dbg !5292
  %cmp95 = icmp ult i32 %77, 4, !dbg !5295
  br i1 %cmp95, label %if.then97, label %if.else, !dbg !5296

if.then97:                                        ; preds = %for.body94
  %78 = load i64, i64* %ioaddress, align 8, !dbg !5297
  %add98 = add i64 %78, 4, !dbg !5298
  %79 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5299
  %ports99 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %79, i32 0, i32 7, !dbg !5300
  %80 = load i32, i32* %i, align 4, !dbg !5301
  %idxprom100 = zext i32 %80 to i64, !dbg !5299
  %arrayidx101 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports99, i64 0, i64 %idxprom100, !dbg !5299
  %opmode_ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx101, i32 0, i32 3, !dbg !5302
  store i64 %add98, i64* %opmode_ioaddr, align 8, !dbg !5303
  br label %if.end107, !dbg !5299

if.else:                                          ; preds = %for.body94
  %81 = load i64, i64* %ioaddress, align 8, !dbg !5304
  %add102 = add i64 %81, 12, !dbg !5305
  %82 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5306
  %ports103 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %82, i32 0, i32 7, !dbg !5307
  %83 = load i32, i32* %i, align 4, !dbg !5308
  %idxprom104 = zext i32 %83 to i64, !dbg !5306
  %arrayidx105 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports103, i64 0, i64 %idxprom104, !dbg !5306
  %opmode_ioaddr106 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx105, i32 0, i32 3, !dbg !5309
  store i64 %add102, i64* %opmode_ioaddr106, align 8, !dbg !5310
  br label %if.end107

if.end107:                                        ; preds = %if.else, %if.then97
  br label %for.inc108, !dbg !5311

for.inc108:                                       ; preds = %if.end107
  %84 = load i32, i32* %i, align 4, !dbg !5312
  %inc109 = add i32 %84, 1, !dbg !5312
  store i32 %inc109, i32* %i, align 4, !dbg !5312
  br label %for.cond89, !dbg !5313, !llvm.loop !5314

for.end110:                                       ; preds = %for.cond89
  %85 = load i64, i64* %ioaddress, align 8, !dbg !5316
  %add111 = add i64 %85, 4, !dbg !5317
  %conv112 = trunc i64 %add111 to i32, !dbg !5316
  call void @outb(i8 zeroext 0, i32 %conv112) #11, !dbg !5318
  %86 = load i64, i64* %ioaddress, align 8, !dbg !5319
  %add113 = add i64 %86, 12, !dbg !5320
  %conv114 = trunc i64 %add113 to i32, !dbg !5319
  call void @outb(i8 zeroext 0, i32 %conv114) #11, !dbg !5321
  br label %if.end115, !dbg !5322

if.end115:                                        ; preds = %for.end110, %for.end84
  store i32 0, i32* %i, align 4, !dbg !5323
  br label %for.cond116, !dbg !5325

for.cond116:                                      ; preds = %for.inc127, %if.end115
  %87 = load i32, i32* %i, align 4, !dbg !5326
  %88 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5328
  %info117 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %88, i32 0, i32 2, !dbg !5329
  %89 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info117, align 8, !dbg !5329
  %nports118 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %89, i32 0, i32 1, !dbg !5330
  %90 = load i32, i32* %nports118, align 8, !dbg !5330
  %cmp119 = icmp ult i32 %87, %90, !dbg !5331
  br i1 %cmp119, label %for.body121, label %for.end129, !dbg !5332

for.body121:                                      ; preds = %for.cond116
  %91 = load i32, i32* %i, align 4, !dbg !5333
  %shl = shl i32 1, %91, !dbg !5335
  %conv122 = sext i32 %shl to i64, !dbg !5336
  %92 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5337
  %vector_mask123 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %92, i32 0, i32 4, !dbg !5338
  %93 = load i64, i64* %vector_mask123, align 8, !dbg !5339
  %or = or i64 %93, %conv122, !dbg !5339
  store i64 %or, i64* %vector_mask123, align 8, !dbg !5339
  %94 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5340
  %ports124 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %94, i32 0, i32 7, !dbg !5341
  %95 = load i32, i32* %i, align 4, !dbg !5342
  %idxprom125 = zext i32 %95 to i64, !dbg !5340
  %arrayidx126 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports124, i64 0, i64 %idxprom125, !dbg !5340
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx126, i32 0, i32 8, !dbg !5343
  store i32 921600, i32* %baud_base, align 8, !dbg !5344
  br label %for.inc127, !dbg !5345

for.inc127:                                       ; preds = %for.body121
  %96 = load i32, i32* %i, align 4, !dbg !5346
  %inc128 = add i32 %96, 1, !dbg !5346
  store i32 %inc128, i32* %i, align 4, !dbg !5346
  br label %for.cond116, !dbg !5347, !llvm.loop !5348

for.end129:                                       ; preds = %for.cond116
  %97 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5350
  %call130 = call i32 @mxser_initbrd(%struct.mxser_board* %97) #11, !dbg !5351
  store i32 %call130, i32* %retval1, align 4, !dbg !5352
  %98 = load i32, i32* %retval1, align 4, !dbg !5353
  %tobool131 = icmp ne i32 %98, 0, !dbg !5353
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !5355

if.then132:                                       ; preds = %for.end129
  br label %err_rel3, !dbg !5356

if.end133:                                        ; preds = %for.end129
  store i32 0, i32* %i, align 4, !dbg !5357
  br label %for.cond134, !dbg !5359

for.cond134:                                      ; preds = %for.inc160, %if.end133
  %99 = load i32, i32* %i, align 4, !dbg !5360
  %100 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5362
  %info135 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %100, i32 0, i32 2, !dbg !5363
  %101 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info135, align 8, !dbg !5363
  %nports136 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %101, i32 0, i32 1, !dbg !5364
  %102 = load i32, i32* %nports136, align 8, !dbg !5364
  %cmp137 = icmp ult i32 %99, %102, !dbg !5365
  br i1 %cmp137, label %for.body139, label %for.end162, !dbg !5366

for.body139:                                      ; preds = %for.cond134
  %103 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5367
  %ports140 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %103, i32 0, i32 7, !dbg !5369
  %104 = load i32, i32* %i, align 4, !dbg !5370
  %idxprom141 = zext i32 %104 to i64, !dbg !5367
  %arrayidx142 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports140, i64 0, i64 %idxprom141, !dbg !5367
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx142, i32 0, i32 0, !dbg !5371
  %105 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5372
  %106 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5373
  %idx143 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %106, i32 0, i32 0, !dbg !5374
  %107 = load i32, i32* %idx143, align 8, !dbg !5374
  %108 = load i32, i32* %i, align 4, !dbg !5375
  %add144 = add i32 %107, %108, !dbg !5376
  %109 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5377
  %dev145 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %109, i32 0, i32 41, !dbg !5378
  %call146 = call %struct.device* @tty_port_register_device(%struct.tty_port* %port, %struct.tty_driver* %105, i32 %add144, %struct.device* %dev145) #11, !dbg !5379
  store %struct.device* %call146, %struct.device** %tty_dev, align 8, !dbg !5380
  %110 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !5381
  %111 = bitcast %struct.device* %110 to i8*, !dbg !5381
  %call147 = call zeroext i1 @IS_ERR(i8* %111) #11, !dbg !5383
  br i1 %call147, label %if.then148, label %if.end159, !dbg !5384

if.then148:                                       ; preds = %for.body139
  %112 = load %struct.device*, %struct.device** %tty_dev, align 8, !dbg !5385
  %113 = bitcast %struct.device* %112 to i8*, !dbg !5385
  %call149 = call i64 @PTR_ERR(i8* %113) #11, !dbg !5387
  %conv150 = trunc i64 %call149 to i32, !dbg !5387
  store i32 %conv150, i32* %retval1, align 4, !dbg !5388
  br label %for.cond151, !dbg !5389

for.cond151:                                      ; preds = %for.inc157, %if.then148
  %114 = load i32, i32* %i, align 4, !dbg !5390
  %cmp152 = icmp ugt i32 %114, 0, !dbg !5393
  br i1 %cmp152, label %for.body154, label %for.end158, !dbg !5394

for.body154:                                      ; preds = %for.cond151
  %115 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5395
  %116 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5396
  %idx155 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %116, i32 0, i32 0, !dbg !5397
  %117 = load i32, i32* %idx155, align 8, !dbg !5397
  %118 = load i32, i32* %i, align 4, !dbg !5398
  %add156 = add i32 %117, %118, !dbg !5399
  %sub = sub i32 %add156, 1, !dbg !5400
  call void @tty_unregister_device(%struct.tty_driver* %115, i32 %sub) #11, !dbg !5401
  br label %for.inc157, !dbg !5401

for.inc157:                                       ; preds = %for.body154
  %119 = load i32, i32* %i, align 4, !dbg !5402
  %dec = add i32 %119, -1, !dbg !5402
  store i32 %dec, i32* %i, align 4, !dbg !5402
  br label %for.cond151, !dbg !5403, !llvm.loop !5404

for.end158:                                       ; preds = %for.cond151
  br label %err_relbrd, !dbg !5406

if.end159:                                        ; preds = %for.body139
  br label %for.inc160, !dbg !5407

for.inc160:                                       ; preds = %if.end159
  %120 = load i32, i32* %i, align 4, !dbg !5408
  %inc161 = add i32 %120, 1, !dbg !5408
  store i32 %inc161, i32* %i, align 4, !dbg !5408
  br label %for.cond134, !dbg !5409, !llvm.loop !5410

for.end162:                                       ; preds = %for.cond134
  %121 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5412
  %122 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5413
  %123 = bitcast %struct.mxser_board* %122 to i8*, !dbg !5413
  call void @pci_set_drvdata(%struct.pci_dev* %121, i8* %123) #11, !dbg !5414
  store i32 0, i32* %retval, align 4, !dbg !5415
  br label %return, !dbg !5415

err_relbrd:                                       ; preds = %for.end158
  call void @llvm.dbg.label(metadata !5416), !dbg !5417
  store i32 0, i32* %i, align 4, !dbg !5418
  br label %for.cond163, !dbg !5420

for.cond163:                                      ; preds = %for.inc173, %err_relbrd
  %124 = load i32, i32* %i, align 4, !dbg !5421
  %125 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5423
  %info164 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %125, i32 0, i32 2, !dbg !5424
  %126 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info164, align 8, !dbg !5424
  %nports165 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %126, i32 0, i32 1, !dbg !5425
  %127 = load i32, i32* %nports165, align 8, !dbg !5425
  %cmp166 = icmp ult i32 %124, %127, !dbg !5426
  br i1 %cmp166, label %for.body168, label %for.end175, !dbg !5427

for.body168:                                      ; preds = %for.cond163
  %128 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5428
  %ports169 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %128, i32 0, i32 7, !dbg !5429
  %129 = load i32, i32* %i, align 4, !dbg !5430
  %idxprom170 = zext i32 %129 to i64, !dbg !5428
  %arrayidx171 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports169, i64 0, i64 %idxprom170, !dbg !5428
  %port172 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx171, i32 0, i32 0, !dbg !5431
  call void @tty_port_destroy(%struct.tty_port* %port172) #11, !dbg !5432
  br label %for.inc173, !dbg !5432

for.inc173:                                       ; preds = %for.body168
  %130 = load i32, i32* %i, align 4, !dbg !5433
  %inc174 = add i32 %130, 1, !dbg !5433
  store i32 %inc174, i32* %i, align 4, !dbg !5433
  br label %for.cond163, !dbg !5434, !llvm.loop !5435

for.end175:                                       ; preds = %for.cond163
  %131 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5437
  %irq176 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %131, i32 0, i32 1, !dbg !5438
  %132 = load i32, i32* %irq176, align 4, !dbg !5438
  %133 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5439
  %134 = bitcast %struct.mxser_board* %133 to i8*, !dbg !5439
  %call177 = call i8* @free_irq(i32 %132, i8* %134) #11, !dbg !5440
  br label %err_rel3, !dbg !5440

err_rel3:                                         ; preds = %for.end175, %if.then132
  call void @llvm.dbg.label(metadata !5441), !dbg !5442
  %135 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5443
  call void @pci_release_region(%struct.pci_dev* %135, i32 3) #11, !dbg !5444
  br label %err_zero, !dbg !5444

err_zero:                                         ; preds = %err_rel3, %if.then38
  call void @llvm.dbg.label(metadata !5445), !dbg !5446
  %136 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5447
  %info178 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %136, i32 0, i32 2, !dbg !5448
  store %struct.mxser_cardinfo* null, %struct.mxser_cardinfo** %info178, align 8, !dbg !5449
  %137 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5450
  call void @pci_release_region(%struct.pci_dev* %137, i32 2) #11, !dbg !5451
  br label %err_dis, !dbg !5451

err_dis:                                          ; preds = %err_zero, %if.then16
  call void @llvm.dbg.label(metadata !5452), !dbg !5453
  %138 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5454
  call void @pci_disable_device(%struct.pci_dev* %138) #11, !dbg !5455
  br label %err, !dbg !5455

err:                                              ; preds = %err_dis, %if.then10, %if.then4
  call void @llvm.dbg.label(metadata !5456), !dbg !5457
  %139 = load i32, i32* %retval1, align 4, !dbg !5458
  store i32 %139, i32* %retval, align 4, !dbg !5459
  br label %return, !dbg !5459

return:                                           ; preds = %err, %for.end162
  %140 = load i32, i32* %retval, align 4, !dbg !5460
  ret i32 %140, !dbg !5460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_remove(%struct.pci_dev* %pdev) #3 !dbg !5461 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %brd = alloca %struct.mxser_board*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd, metadata !5464, metadata !DIExpression()), !dbg !5465
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5466
  %call = call i8* @pci_get_drvdata(%struct.pci_dev* %0) #11, !dbg !5467
  %1 = bitcast i8* %call to %struct.mxser_board*, !dbg !5467
  store %struct.mxser_board* %1, %struct.mxser_board** %brd, align 8, !dbg !5465
  %2 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5468
  call void @mxser_board_remove(%struct.mxser_board* %2) #11, !dbg !5469
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5470
  call void @pci_release_region(%struct.pci_dev* %3, i32 2) #11, !dbg !5471
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5472
  call void @pci_release_region(%struct.pci_dev* %4, i32 3) #11, !dbg !5473
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5474
  call void @pci_disable_device(%struct.pci_dev* %5) #11, !dbg !5475
  %6 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !5476
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %6, i32 0, i32 2, !dbg !5477
  store %struct.mxser_cardinfo* null, %struct.mxser_cardinfo** %info, align 8, !dbg !5478
  ret void, !dbg !5479
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_request_region(%struct.pci_dev*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @CheckIsMoxaMust(i64 %io) #3 !dbg !5480 {
entry:
  %retval = alloca i32, align 4
  %io.addr = alloca i64, align 8
  %oldmcr = alloca i8, align 1
  %hwid = alloca i8, align 1
  %i = alloca i32, align 4
  store i64 %io, i64* %io.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %io.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  call void @llvm.dbg.declare(metadata i8* %oldmcr, metadata !5485, metadata !DIExpression()), !dbg !5486
  call void @llvm.dbg.declare(metadata i8* %hwid, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5489, metadata !DIExpression()), !dbg !5490
  %0 = load i64, i64* %io.addr, align 8, !dbg !5491
  %add = add i64 %0, 3, !dbg !5492
  %conv = trunc i64 %add to i32, !dbg !5491
  call void @outb(i8 zeroext 0, i32 %conv) #11, !dbg !5493
  %1 = load i64, i64* %io.addr, align 8, !dbg !5494
  call void @mxser_disable_must_enchance_mode(i64 %1) #11, !dbg !5495
  %2 = load i64, i64* %io.addr, align 8, !dbg !5496
  %add1 = add i64 %2, 4, !dbg !5497
  %conv2 = trunc i64 %add1 to i32, !dbg !5496
  %call = call zeroext i8 @inb(i32 %conv2) #11, !dbg !5498
  store i8 %call, i8* %oldmcr, align 1, !dbg !5499
  %3 = load i64, i64* %io.addr, align 8, !dbg !5500
  %add3 = add i64 %3, 4, !dbg !5501
  %conv4 = trunc i64 %add3 to i32, !dbg !5500
  call void @outb(i8 zeroext 0, i32 %conv4) #11, !dbg !5502
  %4 = load i64, i64* %io.addr, align 8, !dbg !5503
  call void @mxser_set_must_xon1_value(i64 %4, i8 zeroext 17) #11, !dbg !5504
  %5 = load i64, i64* %io.addr, align 8, !dbg !5505
  %add5 = add i64 %5, 4, !dbg !5507
  %conv6 = trunc i64 %add5 to i32, !dbg !5505
  %call7 = call zeroext i8 @inb(i32 %conv6) #11, !dbg !5508
  store i8 %call7, i8* %hwid, align 1, !dbg !5509
  %conv8 = zext i8 %call7 to i32, !dbg !5510
  %cmp = icmp ne i32 %conv8, 0, !dbg !5511
  br i1 %cmp, label %if.then, label %if.end, !dbg !5512

if.then:                                          ; preds = %entry
  %6 = load i8, i8* %oldmcr, align 1, !dbg !5513
  %7 = load i64, i64* %io.addr, align 8, !dbg !5515
  %add10 = add i64 %7, 4, !dbg !5516
  %conv11 = trunc i64 %add10 to i32, !dbg !5515
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !5517
  store i32 0, i32* %retval, align 4, !dbg !5518
  br label %return, !dbg !5518

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %io.addr, align 8, !dbg !5519
  call void @mxser_get_must_hardware_id(i64 %8, i8* %hwid) #11, !dbg !5520
  store i32 1, i32* %i, align 4, !dbg !5521
  br label %for.cond, !dbg !5523

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !5524
  %conv12 = sext i32 %9 to i64, !dbg !5524
  %cmp13 = icmp ult i64 %conv12, 3, !dbg !5526
  br i1 %cmp13, label %for.body, label %for.end, !dbg !5527

for.body:                                         ; preds = %for.cond
  %10 = load i8, i8* %hwid, align 1, !dbg !5528
  %conv15 = zext i8 %10 to i32, !dbg !5528
  %11 = load i32, i32* %i, align 4, !dbg !5531
  %idxprom = sext i32 %11 to i64, !dbg !5532
  %arrayidx = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom, !dbg !5532
  %type = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx, i32 0, i32 0, !dbg !5533
  %12 = load i32, i32* %type, align 8, !dbg !5533
  %cmp16 = icmp eq i32 %conv15, %12, !dbg !5534
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !5535

if.then18:                                        ; preds = %for.body
  %13 = load i8, i8* %hwid, align 1, !dbg !5536
  %conv19 = zext i8 %13 to i32, !dbg !5537
  store i32 %conv19, i32* %retval, align 4, !dbg !5538
  br label %return, !dbg !5538

if.end20:                                         ; preds = %for.body
  br label %for.inc, !dbg !5539

for.inc:                                          ; preds = %if.end20
  %14 = load i32, i32* %i, align 4, !dbg !5540
  %inc = add i32 %14, 1, !dbg !5540
  store i32 %inc, i32* %i, align 4, !dbg !5540
  br label %for.cond, !dbg !5541, !llvm.loop !5542

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5544
  br label %return, !dbg !5544

return:                                           ; preds = %for.end, %if.then18, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !5545
  ret i32 %15, !dbg !5545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #3 !dbg !5546 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !5552, metadata !DIExpression()), !dbg !5551
  %0 = load i8, i8* %value.addr, align 1, !dbg !5551
  %1 = load i32, i32* %port.addr, align 4, !dbg !5551
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #7, !dbg !5551, !srcloc !5553
  ret void, !dbg !5551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_initbrd(%struct.mxser_board* %brd) #3 !dbg !5554 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !5563
  %brd.addr = alloca %struct.mxser_board*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !5569, metadata !DIExpression()), !dbg !5570
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !5571, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5573, metadata !DIExpression()), !dbg !5574
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5575, metadata !DIExpression()), !dbg !5576
  %0 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5577
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %0, i32 0, i32 7, !dbg !5578
  %arrayidx = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 0, !dbg !5577
  %max_baud = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx, i32 0, i32 4, !dbg !5579
  %1 = load i32, i32* %max_baud, align 8, !dbg !5579
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.38, i64 0, i64 0), i32 %1) #12, !dbg !5580
  store i32 0, i32* %i, align 4, !dbg !5581
  br label %for.cond, !dbg !5582

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5583
  %3 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5584
  %info2 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %3, i32 0, i32 2, !dbg !5585
  %4 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info2, align 8, !dbg !5585
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %4, i32 0, i32 1, !dbg !5586
  %5 = load i32, i32* %nports, align 8, !dbg !5586
  %cmp = icmp ult i32 %2, %5, !dbg !5587
  br i1 %cmp, label %for.body, label %for.end, !dbg !5588

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5589
  %ports3 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %6, i32 0, i32 7, !dbg !5590
  %7 = load i32, i32* %i, align 4, !dbg !5591
  %idxprom = zext i32 %7 to i64, !dbg !5589
  %arrayidx4 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports3, i64 0, i64 %idxprom, !dbg !5589
  store %struct.mxser_port* %arrayidx4, %struct.mxser_port** %info, align 8, !dbg !5592
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5593
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 0, !dbg !5594
  call void @tty_port_init(%struct.tty_port* %port) #11, !dbg !5595
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5596
  %port5 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 0, !dbg !5597
  %ops = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port5, i32 0, i32 3, !dbg !5598
  store %struct.tty_port_operations* @mxser_port_ops, %struct.tty_port_operations** %ops, align 8, !dbg !5599
  %10 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5600
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5601
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 1, !dbg !5602
  store %struct.mxser_board* %10, %struct.mxser_board** %board, align 8, !dbg !5603
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5604
  %stop_rx = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 13, !dbg !5605
  store i8 0, i8* %stop_rx, align 4, !dbg !5606
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5607
  %ldisc_stop_rx = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 14, !dbg !5608
  store i8 0, i8* %ldisc_stop_rx, align 1, !dbg !5609
  %14 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5610
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %14, i32 0, i32 5, !dbg !5612
  %15 = load i32, i32* %chip_flag, align 8, !dbg !5612
  %cmp6 = icmp ne i32 %15, 0, !dbg !5613
  br i1 %cmp6, label %if.then, label %if.end, !dbg !5614

if.then:                                          ; preds = %for.body
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5615
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 2, !dbg !5616
  %17 = load i64, i64* %ioaddr, align 8, !dbg !5616
  call void @mxser_enable_must_enchance_mode(i64 %17) #11, !dbg !5617
  br label %if.end, !dbg !5617

if.end:                                           ; preds = %if.then, %for.body
  %18 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5618
  %uart_type = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %18, i32 0, i32 6, !dbg !5619
  %19 = load i32, i32* %uart_type, align 4, !dbg !5619
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5620
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 9, !dbg !5621
  store i32 %19, i32* %type, align 4, !dbg !5622
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5623
  call void @process_txrx_fifo(%struct.mxser_port* %21) #11, !dbg !5624
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5625
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 8, !dbg !5626
  %23 = load i32, i32* %baud_base, align 8, !dbg !5626
  %mul = mul i32 %23, 16, !dbg !5627
  %24 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5628
  %custom_divisor = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %24, i32 0, i32 15, !dbg !5629
  store i32 %mul, i32* %custom_divisor, align 8, !dbg !5630
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5631
  %port7 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 0, !dbg !5632
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port7, i32 0, i32 16, !dbg !5633
  store i32 125, i32* %close_delay, align 8, !dbg !5634
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5635
  %port8 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 0, !dbg !5636
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 17, !dbg !5637
  store i32 7500, i32* %closing_wait, align 4, !dbg !5638
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5639
  %normal_termios = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 26, !dbg !5640
  %28 = load %struct.tty_driver*, %struct.tty_driver** @mxvar_sdriver, align 8, !dbg !5641
  %init_termios = getelementptr inbounds %struct.tty_driver, %struct.tty_driver* %28, i32 0, i32 12, !dbg !5642
  %29 = bitcast %struct.ktermios* %normal_termios to i8*, !dbg !5642
  %30 = bitcast %struct.ktermios* %init_termios to i8*, !dbg !5642
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 44, i1 false), !dbg !5642
  %31 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5643
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %31, i32 0, i32 27, !dbg !5644
  %32 = bitcast %struct.mxser_mon* %mon_data to i8*, !dbg !5645
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 40, i1 false), !dbg !5645
  %33 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5646
  %err_shadow = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %33, i32 0, i32 16, !dbg !5647
  store i8 0, i8* %err_shadow, align 4, !dbg !5648
  br label %do.body, !dbg !5649

do.body:                                          ; preds = %if.end
  %34 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5650
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %34, i32 0, i32 28, !dbg !5650
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5651
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !5652
  %rlock.i = bitcast %union.anon.2* %36 to %struct.raw_spinlock*, !dbg !5652
  %37 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5650
  %slock10 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 28, !dbg !5650
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5650
  %rlock = bitcast %union.anon.2* %38 to %struct.raw_spinlock*, !dbg !5650
  %39 = bitcast %struct.spinlock* %slock10 to i8*, !dbg !5650
  %40 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 1 %40, i64 0, i1 false), !dbg !5650
  br label %do.end, !dbg !5650

do.end:                                           ; preds = %do.body
  %41 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5653
  %ioaddr11 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 2, !dbg !5654
  %42 = load i64, i64* %ioaddr11, align 8, !dbg !5654
  %add = add i64 %42, 1, !dbg !5655
  %conv = trunc i64 %add to i32, !dbg !5653
  %call12 = call zeroext i8 @inb(i32 %conv) #11, !dbg !5656
  %conv13 = zext i8 %call12 to i32, !dbg !5656
  %and = and i32 %conv13, 240, !dbg !5657
  %conv14 = trunc i32 %and to i8, !dbg !5656
  %43 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !5658
  %ioaddr15 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 2, !dbg !5659
  %44 = load i64, i64* %ioaddr15, align 8, !dbg !5659
  %add16 = add i64 %44, 1, !dbg !5660
  %conv17 = trunc i64 %add16 to i32, !dbg !5658
  call void @outb(i8 zeroext %conv14, i32 %conv17) #11, !dbg !5661
  br label %for.inc, !dbg !5662

for.inc:                                          ; preds = %do.end
  %45 = load i32, i32* %i, align 4, !dbg !5663
  %inc = add i32 %45, 1, !dbg !5663
  store i32 %inc, i32* %i, align 4, !dbg !5663
  br label %for.cond, !dbg !5664, !llvm.loop !5665

for.end:                                          ; preds = %for.cond
  %46 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5667
  %irq = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %46, i32 0, i32 1, !dbg !5668
  %47 = load i32, i32* %irq, align 4, !dbg !5668
  %48 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5669
  %49 = bitcast %struct.mxser_board* %48 to i8*, !dbg !5669
  %call18 = call i32 @request_irq(i32 %47, i32 (i32, i8*)* @mxser_interrupt, i64 128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %49) #11, !dbg !5670
  store i32 %call18, i32* %retval1, align 4, !dbg !5671
  %50 = load i32, i32* %retval1, align 4, !dbg !5672
  %tobool = icmp ne i32 %50, 0, !dbg !5672
  br i1 %tobool, label %if.then19, label %if.end36, !dbg !5674

if.then19:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !5675
  br label %for.cond20, !dbg !5678

for.cond20:                                       ; preds = %for.inc30, %if.then19
  %51 = load i32, i32* %i, align 4, !dbg !5679
  %52 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5681
  %info21 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %52, i32 0, i32 2, !dbg !5682
  %53 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info21, align 8, !dbg !5682
  %nports22 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %53, i32 0, i32 1, !dbg !5683
  %54 = load i32, i32* %nports22, align 8, !dbg !5683
  %cmp23 = icmp ult i32 %51, %54, !dbg !5684
  br i1 %cmp23, label %for.body25, label %for.end32, !dbg !5685

for.body25:                                       ; preds = %for.cond20
  %55 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5686
  %ports26 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %55, i32 0, i32 7, !dbg !5687
  %56 = load i32, i32* %i, align 4, !dbg !5688
  %idxprom27 = zext i32 %56 to i64, !dbg !5686
  %arrayidx28 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports26, i64 0, i64 %idxprom27, !dbg !5686
  %port29 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx28, i32 0, i32 0, !dbg !5689
  call void @tty_port_destroy(%struct.tty_port* %port29) #11, !dbg !5690
  br label %for.inc30, !dbg !5690

for.inc30:                                        ; preds = %for.body25
  %57 = load i32, i32* %i, align 4, !dbg !5691
  %inc31 = add i32 %57, 1, !dbg !5691
  store i32 %inc31, i32* %i, align 4, !dbg !5691
  br label %for.cond20, !dbg !5692, !llvm.loop !5693

for.end32:                                        ; preds = %for.cond20
  %58 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5695
  %info33 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %58, i32 0, i32 2, !dbg !5696
  %59 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info33, align 8, !dbg !5696
  %name = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %59, i32 0, i32 0, !dbg !5697
  %60 = load i8*, i8** %name, align 8, !dbg !5697
  %61 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !5698
  %irq34 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %61, i32 0, i32 1, !dbg !5699
  %62 = load i32, i32* %irq34, align 4, !dbg !5699
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.39, i64 0, i64 0), i8* %60, i32 %62) #12, !dbg !5700
  br label %if.end36, !dbg !5701

if.end36:                                         ; preds = %for.end32, %for.end
  %63 = load i32, i32* %retval1, align 4, !dbg !5702
  ret i32 %63, !dbg !5703
}

; Function Attrs: noredzone
declare dso_local %struct.device* @tty_port_register_device(%struct.tty_port*, %struct.tty_driver*, i32, %struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #3 !dbg !5704 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5710
  %1 = ptrtoint i8* %0 to i64, !dbg !5710
  %2 = inttoptr i64 %1 to i8*, !dbg !5710
  %3 = ptrtoint i8* %2 to i64, !dbg !5710
  %cmp = icmp uge i64 %3, -4095, !dbg !5710
  %lnot = xor i1 %cmp, true, !dbg !5710
  %lnot1 = xor i1 %lnot, true, !dbg !5710
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5710
  %conv = sext i32 %lnot.ext to i64, !dbg !5710
  %tobool = icmp ne i64 %conv, 0, !dbg !5710
  ret i1 %tobool, !dbg !5711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #3 !dbg !5712 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5717
  %1 = ptrtoint i8* %0 to i64, !dbg !5718
  ret i64 %1, !dbg !5719
}

; Function Attrs: noredzone
declare dso_local void @tty_unregister_device(%struct.tty_driver*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pci_set_drvdata(%struct.pci_dev* %pdev, i8* %data) #3 !dbg !5720 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !5727
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !5728
  %1 = load i8*, i8** %data.addr, align 8, !dbg !5729
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !5730
  ret void, !dbg !5731
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @tty_port_destroy(%struct.tty_port*) #2

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @pci_release_region(%struct.pci_dev*, i32) #2

; Function Attrs: noredzone
declare dso_local void @pci_disable_device(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_disable_must_enchance_mode(i64 %baseio) #3 !dbg !5732 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !5735, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !5739, metadata !DIExpression()), !dbg !5740
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !5741
  %add = add i64 %0, 3, !dbg !5742
  %conv = trunc i64 %add to i32, !dbg !5741
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !5743
  store i8 %call, i8* %oldlcr, align 1, !dbg !5744
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !5745
  %add1 = add i64 %1, 3, !dbg !5746
  %conv2 = trunc i64 %add1 to i32, !dbg !5745
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !5747
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !5748
  %add3 = add i64 %2, 2, !dbg !5749
  %conv4 = trunc i64 %add3 to i32, !dbg !5748
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !5750
  store i8 %call5, i8* %efr, align 1, !dbg !5751
  %3 = load i8, i8* %efr, align 1, !dbg !5752
  %conv6 = zext i8 %3 to i32, !dbg !5752
  %and = and i32 %conv6, -17, !dbg !5752
  %conv7 = trunc i32 %and to i8, !dbg !5752
  store i8 %conv7, i8* %efr, align 1, !dbg !5752
  %4 = load i8, i8* %efr, align 1, !dbg !5753
  %5 = load i64, i64* %baseio.addr, align 8, !dbg !5754
  %add8 = add i64 %5, 2, !dbg !5755
  %conv9 = trunc i64 %add8 to i32, !dbg !5754
  call void @outb(i8 zeroext %4, i32 %conv9) #11, !dbg !5756
  %6 = load i8, i8* %oldlcr, align 1, !dbg !5757
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !5758
  %add10 = add i64 %7, 3, !dbg !5759
  %conv11 = trunc i64 %add10 to i32, !dbg !5758
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !5760
  ret void, !dbg !5761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #3 !dbg !5762 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.declare(metadata i8* %value, metadata !5767, metadata !DIExpression()), !dbg !5766
  %0 = load i32, i32* %port.addr, align 4, !dbg !5766
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !5766, !srcloc !5768
  store i8 %1, i8* %value, align 1, !dbg !5766
  %2 = load i8, i8* %value, align 1, !dbg !5766
  ret i8 %2, !dbg !5766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_set_must_xon1_value(i64 %baseio, i8 zeroext %value) #3 !dbg !5769 {
entry:
  %baseio.addr = alloca i64, align 8
  %value.addr = alloca i8, align 1
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !5774, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !5778, metadata !DIExpression()), !dbg !5779
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !5780
  %add = add i64 %0, 3, !dbg !5781
  %conv = trunc i64 %add to i32, !dbg !5780
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !5782
  store i8 %call, i8* %oldlcr, align 1, !dbg !5783
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !5784
  %add1 = add i64 %1, 3, !dbg !5785
  %conv2 = trunc i64 %add1 to i32, !dbg !5784
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !5786
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !5787
  %add3 = add i64 %2, 2, !dbg !5788
  %conv4 = trunc i64 %add3 to i32, !dbg !5787
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !5789
  store i8 %call5, i8* %efr, align 1, !dbg !5790
  %3 = load i8, i8* %efr, align 1, !dbg !5791
  %conv6 = zext i8 %3 to i32, !dbg !5791
  %and = and i32 %conv6, -193, !dbg !5791
  %conv7 = trunc i32 %and to i8, !dbg !5791
  store i8 %conv7, i8* %efr, align 1, !dbg !5791
  %4 = load i8, i8* %efr, align 1, !dbg !5792
  %conv8 = zext i8 %4 to i32, !dbg !5792
  %conv9 = trunc i32 %conv8 to i8, !dbg !5792
  store i8 %conv9, i8* %efr, align 1, !dbg !5792
  %5 = load i8, i8* %efr, align 1, !dbg !5793
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !5794
  %add10 = add i64 %6, 2, !dbg !5795
  %conv11 = trunc i64 %add10 to i32, !dbg !5794
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !5796
  %7 = load i8, i8* %value.addr, align 1, !dbg !5797
  %8 = load i64, i64* %baseio.addr, align 8, !dbg !5798
  %add12 = add i64 %8, 4, !dbg !5799
  %conv13 = trunc i64 %add12 to i32, !dbg !5798
  call void @outb(i8 zeroext %7, i32 %conv13) #11, !dbg !5800
  %9 = load i8, i8* %oldlcr, align 1, !dbg !5801
  %10 = load i64, i64* %baseio.addr, align 8, !dbg !5802
  %add14 = add i64 %10, 3, !dbg !5803
  %conv15 = trunc i64 %add14 to i32, !dbg !5802
  call void @outb(i8 zeroext %9, i32 %conv15) #11, !dbg !5804
  ret void, !dbg !5805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_get_must_hardware_id(i64 %baseio, i8* %pId) #3 !dbg !5806 {
entry:
  %baseio.addr = alloca i64, align 8
  %pId.addr = alloca i8*, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !5810, metadata !DIExpression()), !dbg !5811
  store i8* %pId, i8** %pId.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pId.addr, metadata !5812, metadata !DIExpression()), !dbg !5813
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !5814, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !5816, metadata !DIExpression()), !dbg !5817
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !5818
  %add = add i64 %0, 3, !dbg !5819
  %conv = trunc i64 %add to i32, !dbg !5818
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !5820
  store i8 %call, i8* %oldlcr, align 1, !dbg !5821
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !5822
  %add1 = add i64 %1, 3, !dbg !5823
  %conv2 = trunc i64 %add1 to i32, !dbg !5822
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !5824
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !5825
  %add3 = add i64 %2, 2, !dbg !5826
  %conv4 = trunc i64 %add3 to i32, !dbg !5825
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !5827
  store i8 %call5, i8* %efr, align 1, !dbg !5828
  %3 = load i8, i8* %efr, align 1, !dbg !5829
  %conv6 = zext i8 %3 to i32, !dbg !5829
  %and = and i32 %conv6, -193, !dbg !5829
  %conv7 = trunc i32 %and to i8, !dbg !5829
  store i8 %conv7, i8* %efr, align 1, !dbg !5829
  %4 = load i8, i8* %efr, align 1, !dbg !5830
  %conv8 = zext i8 %4 to i32, !dbg !5830
  %or = or i32 %conv8, 128, !dbg !5830
  %conv9 = trunc i32 %or to i8, !dbg !5830
  store i8 %conv9, i8* %efr, align 1, !dbg !5830
  %5 = load i8, i8* %efr, align 1, !dbg !5831
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !5832
  %add10 = add i64 %6, 2, !dbg !5833
  %conv11 = trunc i64 %add10 to i32, !dbg !5832
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !5834
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !5835
  %add12 = add i64 %7, 5, !dbg !5836
  %conv13 = trunc i64 %add12 to i32, !dbg !5835
  %call14 = call zeroext i8 @inb(i32 %conv13) #11, !dbg !5837
  %8 = load i8*, i8** %pId.addr, align 8, !dbg !5838
  store i8 %call14, i8* %8, align 1, !dbg !5839
  %9 = load i8, i8* %oldlcr, align 1, !dbg !5840
  %10 = load i64, i64* %baseio.addr, align 8, !dbg !5841
  %add15 = add i64 %10, 3, !dbg !5842
  %conv16 = trunc i64 %add15 to i32, !dbg !5841
  call void @outb(i8 zeroext %9, i32 %conv16) #11, !dbg !5843
  ret void, !dbg !5844
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @tty_port_init(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_enable_must_enchance_mode(i64 %baseio) #3 !dbg !5845 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !5850, metadata !DIExpression()), !dbg !5851
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !5852
  %add = add i64 %0, 3, !dbg !5853
  %conv = trunc i64 %add to i32, !dbg !5852
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !5854
  store i8 %call, i8* %oldlcr, align 1, !dbg !5855
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !5856
  %add1 = add i64 %1, 3, !dbg !5857
  %conv2 = trunc i64 %add1 to i32, !dbg !5856
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !5858
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !5859
  %add3 = add i64 %2, 2, !dbg !5860
  %conv4 = trunc i64 %add3 to i32, !dbg !5859
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !5861
  store i8 %call5, i8* %efr, align 1, !dbg !5862
  %3 = load i8, i8* %efr, align 1, !dbg !5863
  %conv6 = zext i8 %3 to i32, !dbg !5863
  %or = or i32 %conv6, 16, !dbg !5863
  %conv7 = trunc i32 %or to i8, !dbg !5863
  store i8 %conv7, i8* %efr, align 1, !dbg !5863
  %4 = load i8, i8* %efr, align 1, !dbg !5864
  %5 = load i64, i64* %baseio.addr, align 8, !dbg !5865
  %add8 = add i64 %5, 2, !dbg !5866
  %conv9 = trunc i64 %add8 to i32, !dbg !5865
  call void @outb(i8 zeroext %4, i32 %conv9) #11, !dbg !5867
  %6 = load i8, i8* %oldlcr, align 1, !dbg !5868
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !5869
  %add10 = add i64 %7, 3, !dbg !5870
  %conv11 = trunc i64 %add10 to i32, !dbg !5869
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !5871
  ret void, !dbg !5872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @process_txrx_fifo(%struct.mxser_port* %info) #3 !dbg !5873 {
entry:
  %info.addr = alloca %struct.mxser_port*, align 8
  %i = alloca i32, align 4
  store %struct.mxser_port* %info, %struct.mxser_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info.addr, metadata !5876, metadata !DIExpression()), !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5878, metadata !DIExpression()), !dbg !5879
  %0 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5880
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %0, i32 0, i32 9, !dbg !5882
  %1 = load i32, i32* %type, align 4, !dbg !5882
  %cmp = icmp eq i32 %1, 2, !dbg !5883
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5884

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5885
  %type1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %2, i32 0, i32 9, !dbg !5886
  %3 = load i32, i32* %type1, align 4, !dbg !5886
  %cmp2 = icmp eq i32 %3, 1, !dbg !5887
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5888

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5889
  %rx_trigger = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %4, i32 0, i32 6, !dbg !5891
  store i32 1, i32* %rx_trigger, align 8, !dbg !5892
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5893
  %rx_high_water = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 5, !dbg !5894
  store i32 1, i32* %rx_high_water, align 4, !dbg !5895
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5896
  %rx_low_water = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 7, !dbg !5897
  store i32 1, i32* %rx_low_water, align 4, !dbg !5898
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5899
  %xmit_fifo_size = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 21, !dbg !5900
  store i32 1, i32* %xmit_fifo_size, align 8, !dbg !5901
  br label %if.end25, !dbg !5902

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !5903
  br label %for.cond, !dbg !5905

for.cond:                                         ; preds = %for.inc, %if.else
  %8 = load i32, i32* %i, align 4, !dbg !5906
  %conv = sext i32 %8 to i64, !dbg !5906
  %cmp3 = icmp ult i64 %conv, 3, !dbg !5908
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5909

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5910
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 1, !dbg !5912
  %10 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !5912
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %10, i32 0, i32 5, !dbg !5913
  %11 = load i32, i32* %chip_flag, align 8, !dbg !5913
  %12 = load i32, i32* %i, align 4, !dbg !5914
  %idxprom = sext i32 %12 to i64, !dbg !5915
  %arrayidx = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom, !dbg !5915
  %type5 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx, i32 0, i32 0, !dbg !5916
  %13 = load i32, i32* %type5, align 8, !dbg !5916
  %cmp6 = icmp eq i32 %11, %13, !dbg !5917
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !5918

if.then8:                                         ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !5919
  %idxprom9 = sext i32 %14 to i64, !dbg !5921
  %arrayidx10 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom9, !dbg !5921
  %rx_trigger11 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx10, i32 0, i32 5, !dbg !5922
  %15 = load i32, i32* %rx_trigger11, align 4, !dbg !5922
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5923
  %rx_trigger12 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 6, !dbg !5924
  store i32 %15, i32* %rx_trigger12, align 8, !dbg !5925
  %17 = load i32, i32* %i, align 4, !dbg !5926
  %idxprom13 = sext i32 %17 to i64, !dbg !5927
  %arrayidx14 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom13, !dbg !5927
  %rx_low_water15 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx14, i32 0, i32 6, !dbg !5928
  %18 = load i32, i32* %rx_low_water15, align 8, !dbg !5928
  %19 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5929
  %rx_low_water16 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 7, !dbg !5930
  store i32 %18, i32* %rx_low_water16, align 4, !dbg !5931
  %20 = load i32, i32* %i, align 4, !dbg !5932
  %idxprom17 = sext i32 %20 to i64, !dbg !5933
  %arrayidx18 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom17, !dbg !5933
  %rx_high_water19 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx18, i32 0, i32 4, !dbg !5934
  %21 = load i32, i32* %rx_high_water19, align 8, !dbg !5934
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5935
  %rx_high_water20 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 5, !dbg !5936
  store i32 %21, i32* %rx_high_water20, align 4, !dbg !5937
  %23 = load i32, i32* %i, align 4, !dbg !5938
  %idxprom21 = sext i32 %23 to i64, !dbg !5939
  %arrayidx22 = getelementptr [3 x %struct.anon.68], [3 x %struct.anon.68]* @Gpci_uart_info, i64 0, i64 %idxprom21, !dbg !5939
  %xmit_fifo_size23 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %arrayidx22, i32 0, i32 3, !dbg !5940
  %24 = load i32, i32* %xmit_fifo_size23, align 4, !dbg !5940
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !5941
  %xmit_fifo_size24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 21, !dbg !5942
  store i32 %24, i32* %xmit_fifo_size24, align 8, !dbg !5943
  br label %for.end, !dbg !5944

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5916

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !5945
  %inc = add i32 %26, 1, !dbg !5945
  store i32 %inc, i32* %i, align 4, !dbg !5945
  br label %for.cond, !dbg !5946, !llvm.loop !5947

for.end:                                          ; preds = %if.then8, %for.cond
  br label %if.end25

if.end25:                                         ; preds = %for.end, %if.then
  ret void, !dbg !5949
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #3 !dbg !5950 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5958, metadata !DIExpression()), !dbg !5959
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !5960, metadata !DIExpression()), !dbg !5961
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5962, metadata !DIExpression()), !dbg !5963
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5964, metadata !DIExpression()), !dbg !5965
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !5966, metadata !DIExpression()), !dbg !5967
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5968
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !5969
  %2 = load i64, i64* %flags.addr, align 8, !dbg !5970
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5971
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !5972
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !5973
  ret i32 %call, !dbg !5974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_interrupt(i32 %irq, i8* %dev_id) #3 !dbg !5975 {
entry:
  %lock.addr.i151 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i151, metadata !5976, metadata !DIExpression()), !dbg !5980
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5986, metadata !DIExpression()), !dbg !5988
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  %iir = alloca i32, align 4
  %i = alloca i32, align 4
  %brd = alloca %struct.mxser_board*, align 8
  %port = alloca %struct.mxser_port*, align 8
  %max = alloca i32, align 4
  %irqbits = alloca i32, align 4
  %bits = alloca i32, align 4
  %msr = alloca i32, align 4
  %int_cnt = alloca i32, align 4
  %pass_counter = alloca i32, align 4
  %handled = alloca i32, align 4
  %tty = alloca %struct.tty_struct*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5990, metadata !DIExpression()), !dbg !5991
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5994, metadata !DIExpression()), !dbg !5995
  call void @llvm.dbg.declare(metadata i32* %iir, metadata !5996, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5998, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd, metadata !6000, metadata !DIExpression()), !dbg !6001
  store %struct.mxser_board* null, %struct.mxser_board** %brd, align 8, !dbg !6001
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %port, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.declare(metadata i32* %max, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata i32* %irqbits, metadata !6006, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !6008, metadata !DIExpression()), !dbg !6009
  call void @llvm.dbg.declare(metadata i32* %msr, metadata !6010, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.declare(metadata i32* %int_cnt, metadata !6012, metadata !DIExpression()), !dbg !6013
  call void @llvm.dbg.declare(metadata i32* %pass_counter, metadata !6014, metadata !DIExpression()), !dbg !6015
  store i32 0, i32* %pass_counter, align 4, !dbg !6015
  call void @llvm.dbg.declare(metadata i32* %handled, metadata !6016, metadata !DIExpression()), !dbg !6017
  store i32 0, i32* %handled, align 4, !dbg !6017
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !6018, metadata !DIExpression()), !dbg !6019
  store i32 0, i32* %i, align 4, !dbg !6020
  br label %for.cond, !dbg !6022

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6023
  %cmp = icmp slt i32 %0, 4, !dbg !6025
  br i1 %cmp, label %for.body, label %for.end, !dbg !6026

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %dev_id.addr, align 8, !dbg !6027
  %2 = load i32, i32* %i, align 4, !dbg !6029
  %idxprom = sext i32 %2 to i64, !dbg !6030
  %arrayidx = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom, !dbg !6030
  %3 = bitcast %struct.mxser_board* %arrayidx to i8*, !dbg !6031
  %cmp1 = icmp eq i8* %1, %3, !dbg !6032
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6033

if.then:                                          ; preds = %for.body
  %4 = load i8*, i8** %dev_id.addr, align 8, !dbg !6034
  %5 = bitcast i8* %4 to %struct.mxser_board*, !dbg !6034
  store %struct.mxser_board* %5, %struct.mxser_board** %brd, align 8, !dbg !6036
  br label %for.end, !dbg !6037

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6038

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !6039
  %inc = add i32 %6, 1, !dbg !6039
  store i32 %inc, i32* %i, align 4, !dbg !6039
  br label %for.cond, !dbg !6040, !llvm.loop !6041

for.end:                                          ; preds = %if.then, %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !6043
  %cmp2 = icmp eq i32 %7, 4, !dbg !6045
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6046

if.then3:                                         ; preds = %for.end
  br label %irq_stop, !dbg !6047

if.end4:                                          ; preds = %for.end
  %8 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6048
  %cmp5 = icmp eq %struct.mxser_board* %8, null, !dbg !6050
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6051

if.then6:                                         ; preds = %if.end4
  br label %irq_stop, !dbg !6052

if.end7:                                          ; preds = %if.end4
  %9 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6053
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %9, i32 0, i32 2, !dbg !6054
  %10 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !6054
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %10, i32 0, i32 1, !dbg !6055
  %11 = load i32, i32* %nports, align 8, !dbg !6055
  store i32 %11, i32* %max, align 4, !dbg !6056
  br label %while.cond, !dbg !6057

while.cond:                                       ; preds = %for.end150, %if.end7
  %12 = load i32, i32* %pass_counter, align 4, !dbg !6058
  %inc8 = add i32 %12, 1, !dbg !6058
  store i32 %inc8, i32* %pass_counter, align 4, !dbg !6058
  %cmp9 = icmp ult i32 %12, 100, !dbg !6059
  br i1 %cmp9, label %while.body, label %while.end, !dbg !6057

while.body:                                       ; preds = %while.cond
  %13 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6060
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %13, i32 0, i32 3, !dbg !6061
  %14 = load i64, i64* %vector, align 8, !dbg !6061
  %conv = trunc i64 %14 to i32, !dbg !6060
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !6062
  %conv10 = zext i8 %call to i64, !dbg !6062
  %15 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6063
  %vector_mask = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %15, i32 0, i32 4, !dbg !6064
  %16 = load i64, i64* %vector_mask, align 8, !dbg !6064
  %and = and i64 %conv10, %16, !dbg !6065
  %conv11 = trunc i64 %and to i32, !dbg !6062
  store i32 %conv11, i32* %irqbits, align 4, !dbg !6066
  %17 = load i32, i32* %irqbits, align 4, !dbg !6067
  %conv12 = sext i32 %17 to i64, !dbg !6067
  %18 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6069
  %vector_mask13 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %18, i32 0, i32 4, !dbg !6070
  %19 = load i64, i64* %vector_mask13, align 8, !dbg !6070
  %cmp14 = icmp eq i64 %conv12, %19, !dbg !6071
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6072

if.then16:                                        ; preds = %while.body
  br label %while.end, !dbg !6073

if.end17:                                         ; preds = %while.body
  store i32 1, i32* %handled, align 4, !dbg !6074
  store i32 0, i32* %i, align 4, !dbg !6075
  store i32 1, i32* %bits, align 4, !dbg !6076
  br label %for.cond18, !dbg !6077

for.cond18:                                       ; preds = %for.inc147, %if.end17
  %20 = load i32, i32* %i, align 4, !dbg !6078
  %21 = load i32, i32* %max, align 4, !dbg !6079
  %cmp19 = icmp slt i32 %20, %21, !dbg !6080
  br i1 %cmp19, label %for.body21, label %for.end150, !dbg !6081

for.body21:                                       ; preds = %for.cond18
  %22 = load i32, i32* %irqbits, align 4, !dbg !6082
  %conv22 = sext i32 %22 to i64, !dbg !6082
  %23 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6084
  %vector_mask23 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %23, i32 0, i32 4, !dbg !6085
  %24 = load i64, i64* %vector_mask23, align 8, !dbg !6085
  %cmp24 = icmp eq i64 %conv22, %24, !dbg !6086
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6087

if.then26:                                        ; preds = %for.body21
  br label %for.end150, !dbg !6088

if.end27:                                         ; preds = %for.body21
  %25 = load i32, i32* %bits, align 4, !dbg !6089
  %26 = load i32, i32* %irqbits, align 4, !dbg !6091
  %and28 = and i32 %25, %26, !dbg !6092
  %tobool = icmp ne i32 %and28, 0, !dbg !6092
  br i1 %tobool, label %if.then29, label %if.end30, !dbg !6093

if.then29:                                        ; preds = %if.end27
  br label %for.inc147, !dbg !6094

if.end30:                                         ; preds = %if.end27
  %27 = load %struct.mxser_board*, %struct.mxser_board** %brd, align 8, !dbg !6095
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %27, i32 0, i32 7, !dbg !6096
  %28 = load i32, i32* %i, align 4, !dbg !6097
  %idxprom31 = sext i32 %28 to i64, !dbg !6095
  %arrayidx32 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom31, !dbg !6095
  store %struct.mxser_port* %arrayidx32, %struct.mxser_port** %port, align 8, !dbg !6098
  store i32 0, i32* %int_cnt, align 4, !dbg !6099
  %29 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6100
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 28, !dbg !6101
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6102, !srcloc !6104
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6105
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !6105
  %rlock.i = bitcast %union.anon.2* %31 to %struct.raw_spinlock*, !dbg !6105
  br label %do.body, !dbg !6107

do.body:                                          ; preds = %do.cond, %if.end30
  %32 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6108
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 2, !dbg !6110
  %33 = load i64, i64* %ioaddr, align 8, !dbg !6110
  %add = add i64 %33, 2, !dbg !6111
  %conv33 = trunc i64 %add to i32, !dbg !6108
  %call34 = call zeroext i8 @inb(i32 %conv33) #11, !dbg !6112
  %conv35 = zext i8 %call34 to i32, !dbg !6112
  store i32 %conv35, i32* %iir, align 4, !dbg !6113
  %34 = load i32, i32* %iir, align 4, !dbg !6114
  %and36 = and i32 %34, 1, !dbg !6116
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6116
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6117

if.then38:                                        ; preds = %do.body
  br label %do.end, !dbg !6118

if.end39:                                         ; preds = %do.body
  %35 = load i32, i32* %iir, align 4, !dbg !6119
  %and40 = and i32 %35, 62, !dbg !6119
  store i32 %and40, i32* %iir, align 4, !dbg !6119
  %36 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6120
  %port41 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %36, i32 0, i32 0, !dbg !6121
  %call42 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port41) #11, !dbg !6122
  store %struct.tty_struct* %call42, %struct.tty_struct** %tty, align 8, !dbg !6123
  %37 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6124
  %tobool43 = icmp ne %struct.tty_struct* %37, null, !dbg !6124
  br i1 %tobool43, label %lor.lhs.false, label %if.then48, !dbg !6126

lor.lhs.false:                                    ; preds = %if.end39
  %38 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6127
  %closing = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %38, i32 0, i32 25, !dbg !6128
  %39 = load i32, i32* %closing, align 8, !dbg !6128
  %tobool44 = icmp ne i32 %39, 0, !dbg !6127
  br i1 %tobool44, label %if.then48, label %lor.lhs.false45, !dbg !6129

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %40 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6130
  %port46 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %40, i32 0, i32 0, !dbg !6131
  %call47 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %port46) #11, !dbg !6132
  br i1 %call47, label %if.end61, label %if.then48, !dbg !6133

if.then48:                                        ; preds = %lor.lhs.false45, %lor.lhs.false, %if.end39
  %41 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6134
  %ioaddr49 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 2, !dbg !6136
  %42 = load i64, i64* %ioaddr49, align 8, !dbg !6136
  %add50 = add i64 %42, 5, !dbg !6137
  %conv51 = trunc i64 %add50 to i32, !dbg !6134
  %call52 = call zeroext i8 @inb(i32 %conv51) #11, !dbg !6138
  %conv53 = zext i8 %call52 to i32, !dbg !6138
  store i32 %conv53, i32* %status, align 4, !dbg !6139
  %43 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6140
  %ioaddr54 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 2, !dbg !6141
  %44 = load i64, i64* %ioaddr54, align 8, !dbg !6141
  %add55 = add i64 %44, 2, !dbg !6142
  %conv56 = trunc i64 %add55 to i32, !dbg !6140
  call void @outb(i8 zeroext 39, i32 %conv56) #11, !dbg !6143
  %45 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6144
  %ioaddr57 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 2, !dbg !6145
  %46 = load i64, i64* %ioaddr57, align 8, !dbg !6145
  %add58 = add i64 %46, 6, !dbg !6146
  %conv59 = trunc i64 %add58 to i32, !dbg !6144
  %call60 = call zeroext i8 @inb(i32 %conv59) #11, !dbg !6147
  %47 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6148
  call void @tty_kref_put(%struct.tty_struct* %47) #11, !dbg !6149
  br label %do.end, !dbg !6150

if.end61:                                         ; preds = %lor.lhs.false45
  %48 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6151
  %ioaddr62 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %48, i32 0, i32 2, !dbg !6152
  %49 = load i64, i64* %ioaddr62, align 8, !dbg !6152
  %add63 = add i64 %49, 5, !dbg !6153
  %conv64 = trunc i64 %add63 to i32, !dbg !6151
  %call65 = call zeroext i8 @inb(i32 %conv64) #11, !dbg !6154
  %conv66 = zext i8 %call65 to i32, !dbg !6154
  store i32 %conv66, i32* %status, align 4, !dbg !6155
  %50 = load i32, i32* %status, align 4, !dbg !6156
  %and67 = and i32 %50, 4, !dbg !6158
  %tobool68 = icmp ne i32 %and67, 0, !dbg !6158
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !6159

if.then69:                                        ; preds = %if.end61
  %51 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6160
  %err_shadow = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %51, i32 0, i32 16, !dbg !6161
  %52 = load i8, i8* %err_shadow, align 4, !dbg !6162
  %conv70 = zext i8 %52 to i32, !dbg !6162
  %or = or i32 %conv70, 1, !dbg !6162
  %conv71 = trunc i32 %or to i8, !dbg !6162
  store i8 %conv71, i8* %err_shadow, align 4, !dbg !6162
  br label %if.end72, !dbg !6160

if.end72:                                         ; preds = %if.then69, %if.end61
  %53 = load i32, i32* %status, align 4, !dbg !6163
  %and73 = and i32 %53, 8, !dbg !6165
  %tobool74 = icmp ne i32 %and73, 0, !dbg !6165
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !6166

if.then75:                                        ; preds = %if.end72
  %54 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6167
  %err_shadow76 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %54, i32 0, i32 16, !dbg !6168
  %55 = load i8, i8* %err_shadow76, align 4, !dbg !6169
  %conv77 = zext i8 %55 to i32, !dbg !6169
  %or78 = or i32 %conv77, 2, !dbg !6169
  %conv79 = trunc i32 %or78 to i8, !dbg !6169
  store i8 %conv79, i8* %err_shadow76, align 4, !dbg !6169
  br label %if.end80, !dbg !6167

if.end80:                                         ; preds = %if.then75, %if.end72
  %56 = load i32, i32* %status, align 4, !dbg !6170
  %and81 = and i32 %56, 2, !dbg !6172
  %tobool82 = icmp ne i32 %and81, 0, !dbg !6172
  br i1 %tobool82, label %if.then83, label %if.end88, !dbg !6173

if.then83:                                        ; preds = %if.end80
  %57 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6174
  %err_shadow84 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %57, i32 0, i32 16, !dbg !6175
  %58 = load i8, i8* %err_shadow84, align 4, !dbg !6176
  %conv85 = zext i8 %58 to i32, !dbg !6176
  %or86 = or i32 %conv85, 4, !dbg !6176
  %conv87 = trunc i32 %or86 to i8, !dbg !6176
  store i8 %conv87, i8* %err_shadow84, align 4, !dbg !6176
  br label %if.end88, !dbg !6174

if.end88:                                         ; preds = %if.then83, %if.end80
  %59 = load i32, i32* %status, align 4, !dbg !6177
  %and89 = and i32 %59, 16, !dbg !6179
  %tobool90 = icmp ne i32 %and89, 0, !dbg !6179
  br i1 %tobool90, label %if.then91, label %if.end96, !dbg !6180

if.then91:                                        ; preds = %if.end88
  %60 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6181
  %err_shadow92 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %60, i32 0, i32 16, !dbg !6182
  %61 = load i8, i8* %err_shadow92, align 4, !dbg !6183
  %conv93 = zext i8 %61 to i32, !dbg !6183
  %or94 = or i32 %conv93, 16, !dbg !6183
  %conv95 = trunc i32 %or94 to i8, !dbg !6183
  store i8 %conv95, i8* %err_shadow92, align 4, !dbg !6183
  br label %if.end96, !dbg !6181

if.end96:                                         ; preds = %if.then91, %if.end88
  %62 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6184
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %62, i32 0, i32 1, !dbg !6186
  %63 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !6186
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %63, i32 0, i32 5, !dbg !6187
  %64 = load i32, i32* %chip_flag, align 8, !dbg !6187
  %tobool97 = icmp ne i32 %64, 0, !dbg !6184
  br i1 %tobool97, label %if.then98, label %if.else, !dbg !6188

if.then98:                                        ; preds = %if.end96
  %65 = load i32, i32* %iir, align 4, !dbg !6189
  %cmp99 = icmp eq i32 %65, 28, !dbg !6192
  br i1 %cmp99, label %if.then110, label %lor.lhs.false101, !dbg !6193

lor.lhs.false101:                                 ; preds = %if.then98
  %66 = load i32, i32* %iir, align 4, !dbg !6194
  %cmp102 = icmp eq i32 %66, 4, !dbg !6195
  br i1 %cmp102, label %if.then110, label %lor.lhs.false104, !dbg !6196

lor.lhs.false104:                                 ; preds = %lor.lhs.false101
  %67 = load i32, i32* %iir, align 4, !dbg !6197
  %cmp105 = icmp eq i32 %67, 12, !dbg !6198
  br i1 %cmp105, label %if.then110, label %lor.lhs.false107, !dbg !6199

lor.lhs.false107:                                 ; preds = %lor.lhs.false104
  %68 = load i32, i32* %iir, align 4, !dbg !6200
  %cmp108 = icmp eq i32 %68, 6, !dbg !6201
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6202

if.then110:                                       ; preds = %lor.lhs.false107, %lor.lhs.false104, %lor.lhs.false101, %if.then98
  %69 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6203
  %70 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6204
  call void @mxser_receive_chars(%struct.tty_struct* %69, %struct.mxser_port* %70, i32* %status) #11, !dbg !6205
  br label %if.end111, !dbg !6205

if.end111:                                        ; preds = %if.then110, %lor.lhs.false107
  br label %if.end117, !dbg !6206

if.else:                                          ; preds = %if.end96
  %71 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6207
  %read_status_mask = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %71, i32 0, i32 19, !dbg !6209
  %72 = load i32, i32* %read_status_mask, align 8, !dbg !6209
  %73 = load i32, i32* %status, align 4, !dbg !6210
  %and112 = and i32 %73, %72, !dbg !6210
  store i32 %and112, i32* %status, align 4, !dbg !6210
  %74 = load i32, i32* %status, align 4, !dbg !6211
  %and113 = and i32 %74, 1, !dbg !6213
  %tobool114 = icmp ne i32 %and113, 0, !dbg !6213
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !6214

if.then115:                                       ; preds = %if.else
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6215
  %76 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6216
  call void @mxser_receive_chars(%struct.tty_struct* %75, %struct.mxser_port* %76, i32* %status) #11, !dbg !6217
  br label %if.end116, !dbg !6217

if.end116:                                        ; preds = %if.then115, %if.else
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end111
  %77 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6218
  %ioaddr118 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %77, i32 0, i32 2, !dbg !6219
  %78 = load i64, i64* %ioaddr118, align 8, !dbg !6219
  %add119 = add i64 %78, 6, !dbg !6220
  %conv120 = trunc i64 %add119 to i32, !dbg !6218
  %call121 = call zeroext i8 @inb(i32 %conv120) #11, !dbg !6221
  %conv122 = zext i8 %call121 to i32, !dbg !6221
  store i32 %conv122, i32* %msr, align 4, !dbg !6222
  %79 = load i32, i32* %msr, align 4, !dbg !6223
  %and123 = and i32 %79, 15, !dbg !6225
  %tobool124 = icmp ne i32 %and123, 0, !dbg !6225
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !6226

if.then125:                                       ; preds = %if.end117
  %80 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6227
  %81 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6228
  %82 = load i32, i32* %msr, align 4, !dbg !6229
  call void @mxser_check_modem_status(%struct.tty_struct* %80, %struct.mxser_port* %81, i32 %82) #11, !dbg !6230
  br label %if.end126, !dbg !6230

if.end126:                                        ; preds = %if.then125, %if.end117
  %83 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6231
  %board127 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %83, i32 0, i32 1, !dbg !6233
  %84 = load %struct.mxser_board*, %struct.mxser_board** %board127, align 8, !dbg !6233
  %chip_flag128 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %84, i32 0, i32 5, !dbg !6234
  %85 = load i32, i32* %chip_flag128, align 8, !dbg !6234
  %tobool129 = icmp ne i32 %85, 0, !dbg !6231
  br i1 %tobool129, label %if.then130, label %if.else137, !dbg !6235

if.then130:                                       ; preds = %if.end126
  %86 = load i32, i32* %iir, align 4, !dbg !6236
  %cmp131 = icmp eq i32 %86, 2, !dbg !6239
  br i1 %cmp131, label %land.lhs.true, label %if.end136, !dbg !6240

land.lhs.true:                                    ; preds = %if.then130
  %87 = load i32, i32* %status, align 4, !dbg !6241
  %and133 = and i32 %87, 32, !dbg !6242
  %tobool134 = icmp ne i32 %and133, 0, !dbg !6242
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !6243

if.then135:                                       ; preds = %land.lhs.true
  %88 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6244
  %89 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6245
  call void @mxser_transmit_chars(%struct.tty_struct* %88, %struct.mxser_port* %89) #11, !dbg !6246
  br label %if.end136, !dbg !6246

if.end136:                                        ; preds = %if.then135, %land.lhs.true, %if.then130
  br label %if.end142, !dbg !6247

if.else137:                                       ; preds = %if.end126
  %90 = load i32, i32* %status, align 4, !dbg !6248
  %and138 = and i32 %90, 32, !dbg !6251
  %tobool139 = icmp ne i32 %and138, 0, !dbg !6251
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !6252

if.then140:                                       ; preds = %if.else137
  %91 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6253
  %92 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6254
  call void @mxser_transmit_chars(%struct.tty_struct* %91, %struct.mxser_port* %92) #11, !dbg !6255
  br label %if.end141, !dbg !6255

if.end141:                                        ; preds = %if.then140, %if.else137
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end136
  %93 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !6256
  call void @tty_kref_put(%struct.tty_struct* %93) #11, !dbg !6257
  br label %do.cond, !dbg !6258

do.cond:                                          ; preds = %if.end142
  %94 = load i32, i32* %int_cnt, align 4, !dbg !6259
  %inc143 = add i32 %94, 1, !dbg !6259
  store i32 %inc143, i32* %int_cnt, align 4, !dbg !6259
  %cmp144 = icmp ult i32 %94, 100, !dbg !6260
  br i1 %cmp144, label %do.body, label %do.end, !dbg !6258, !llvm.loop !6261

do.end:                                           ; preds = %do.cond, %if.then48, %if.then38
  %95 = load %struct.mxser_port*, %struct.mxser_port** %port, align 8, !dbg !6263
  %slock146 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %95, i32 0, i32 28, !dbg !6264
  store %struct.spinlock* %slock146, %struct.spinlock** %lock.addr.i151, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6265, !srcloc !6267
  %96 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i151, align 8, !dbg !6268
  %97 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %96, i32 0, i32 0, !dbg !6268
  %rlock.i152 = bitcast %union.anon.2* %97 to %struct.raw_spinlock*, !dbg !6268
  br label %for.inc147, !dbg !6270

for.inc147:                                       ; preds = %do.end, %if.then29
  %98 = load i32, i32* %i, align 4, !dbg !6271
  %inc148 = add i32 %98, 1, !dbg !6271
  store i32 %inc148, i32* %i, align 4, !dbg !6271
  %99 = load i32, i32* %bits, align 4, !dbg !6272
  %100 = load i32, i32* %irqbits, align 4, !dbg !6273
  %or149 = or i32 %100, %99, !dbg !6273
  store i32 %or149, i32* %irqbits, align 4, !dbg !6273
  %101 = load i32, i32* %bits, align 4, !dbg !6274
  %shl = shl i32 %101, 1, !dbg !6274
  store i32 %shl, i32* %bits, align 4, !dbg !6274
  br label %for.cond18, !dbg !6275, !llvm.loop !6276

for.end150:                                       ; preds = %if.then26, %for.cond18
  br label %while.cond, !dbg !6057, !llvm.loop !6278

while.end:                                        ; preds = %if.then16, %while.cond
  br label %irq_stop, !dbg !6057

irq_stop:                                         ; preds = %while.end, %if.then6, %if.then3
  call void @llvm.dbg.label(metadata !6280), !dbg !6281
  %102 = load i32, i32* %handled, align 4, !dbg !6282
  ret i32 %102, !dbg !6283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_carrier_raised(%struct.tty_port* %port) #3 !dbg !6284 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %mp = alloca %struct.mxser_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mxser_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %mp, metadata !6287, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6289, metadata !DIExpression()), !dbg !6291
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6291
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6291
  store i8* %1, i8** %__mptr, align 8, !dbg !6291
  br label %do.body, !dbg !6291

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6292

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6291
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6291
  %3 = bitcast i8* %add.ptr to %struct.mxser_port*, !dbg !6291
  store %struct.mxser_port* %3, %struct.mxser_port** %tmp, align 8, !dbg !6292
  %4 = load %struct.mxser_port*, %struct.mxser_port** %tmp, align 8, !dbg !6291
  store %struct.mxser_port* %4, %struct.mxser_port** %mp, align 8, !dbg !6288
  %5 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6294
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 2, !dbg !6295
  %6 = load i64, i64* %ioaddr, align 8, !dbg !6295
  %add = add i64 %6, 6, !dbg !6296
  %conv = trunc i64 %add to i32, !dbg !6294
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !6297
  %conv1 = zext i8 %call to i32, !dbg !6297
  %and = and i32 %conv1, 128, !dbg !6298
  %tobool = icmp ne i32 %and, 0, !dbg !6299
  %7 = zext i1 %tobool to i64, !dbg !6299
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6299
  ret i32 %cond, !dbg !6300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_dtr_rts(%struct.tty_port* %port, i32 %on) #3 !dbg !6301 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !6302, metadata !DIExpression()), !dbg !6306
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !6309
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !6310
  %port.addr = alloca %struct.tty_port*, align 8
  %on.addr = alloca i32, align 4
  %mp = alloca %struct.mxser_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %mp, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6323, metadata !DIExpression()), !dbg !6325
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6325
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6325
  store i8* %1, i8** %__mptr, align 8, !dbg !6325
  br label %do.body, !dbg !6325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6326

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6325
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6325
  %3 = bitcast i8* %add.ptr to %struct.mxser_port*, !dbg !6325
  store %struct.mxser_port* %3, %struct.mxser_port** %tmp, align 8, !dbg !6326
  %4 = load %struct.mxser_port*, %struct.mxser_port** %tmp, align 8, !dbg !6325
  store %struct.mxser_port* %4, %struct.mxser_port** %mp, align 8, !dbg !6322
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6328, metadata !DIExpression()), !dbg !6329
  br label %do.body1, !dbg !6330

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6331

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6332, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6335, metadata !DIExpression()), !dbg !6334
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6334
  %conv = zext i1 %cmp to i32, !dbg !6334
  store i32 1, i32* %tmp3, align 4, !dbg !6334
  %5 = load i32, i32* %tmp3, align 4, !dbg !6334
  br label %do.body4, !dbg !6336

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6337

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6338

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6340, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6344, metadata !DIExpression()), !dbg !6343
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6343
  %conv10 = zext i1 %cmp9 to i32, !dbg !6343
  store i32 1, i32* %tmp11, align 4, !dbg !6343
  %6 = load i32, i32* %tmp11, align 4, !dbg !6343
  %call = call i64 @arch_local_irq_save() #11, !dbg !6345
  store i64 %call, i64* %flags, align 8, !dbg !6345
  br label %do.end12, !dbg !6345

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6338

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6337

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6346, !srcloc !6347
  br label %do.body15, !dbg !6346

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6348
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 28, !dbg !6348
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6349
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6350
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !6350
  br label %do.end17, !dbg !6348

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6346

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6337

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6336

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6331

do.end21:                                         ; preds = %do.end20
  %10 = load i32, i32* %on.addr, align 4, !dbg !6351
  %tobool = icmp ne i32 %10, 0, !dbg !6351
  br i1 %tobool, label %if.then, label %if.else, !dbg !6353

if.then:                                          ; preds = %do.end21
  %11 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6354
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 2, !dbg !6355
  %12 = load i64, i64* %ioaddr, align 8, !dbg !6355
  %add = add i64 %12, 4, !dbg !6356
  %conv22 = trunc i64 %add to i32, !dbg !6354
  %call23 = call zeroext i8 @inb(i32 %conv22) #11, !dbg !6357
  %conv24 = zext i8 %call23 to i32, !dbg !6357
  %or = or i32 %conv24, 1, !dbg !6358
  %or25 = or i32 %or, 2, !dbg !6359
  %conv26 = trunc i32 %or25 to i8, !dbg !6357
  %13 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6360
  %ioaddr27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !6361
  %14 = load i64, i64* %ioaddr27, align 8, !dbg !6361
  %add28 = add i64 %14, 4, !dbg !6362
  %conv29 = trunc i64 %add28 to i32, !dbg !6360
  call void @outb(i8 zeroext %conv26, i32 %conv29) #11, !dbg !6363
  br label %if.end, !dbg !6363

if.else:                                          ; preds = %do.end21
  %15 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6364
  %ioaddr30 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 2, !dbg !6365
  %16 = load i64, i64* %ioaddr30, align 8, !dbg !6365
  %add31 = add i64 %16, 4, !dbg !6366
  %conv32 = trunc i64 %add31 to i32, !dbg !6364
  %call33 = call zeroext i8 @inb(i32 %conv32) #11, !dbg !6367
  %conv34 = zext i8 %call33 to i32, !dbg !6367
  %and = and i32 %conv34, -4, !dbg !6368
  %conv35 = trunc i32 %and to i8, !dbg !6367
  %17 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6369
  %ioaddr36 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 2, !dbg !6370
  %18 = load i64, i64* %ioaddr36, align 8, !dbg !6370
  %add37 = add i64 %18, 4, !dbg !6371
  %conv38 = trunc i64 %add37 to i32, !dbg !6369
  call void @outb(i8 zeroext %conv35, i32 %conv38) #11, !dbg !6372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load %struct.mxser_port*, %struct.mxser_port** %mp, align 8, !dbg !6373
  %slock39 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 28, !dbg !6374
  %20 = load i64, i64* %flags, align 8, !dbg !6375
  store %struct.spinlock* %slock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !6379
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !6379
  store i32 1, i32* %tmp.i, align 4, !dbg !6379
  %21 = load i32, i32* %tmp.i, align 4, !dbg !6379
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !6386
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !6386
  store i32 1, i32* %tmp8.i, align 4, !dbg !6386
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !6386
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !6388
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !6388
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6389, !srcloc !6391
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !6392
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !6392
  %rlock.i41 = bitcast %union.anon.2* %25 to %struct.raw_spinlock*, !dbg !6392
  ret void, !dbg !6394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_shutdown_port(%struct.tty_port* %port) #3 !dbg !6395 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !6302, metadata !DIExpression()), !dbg !6396
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !6398
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !6399
  %port.addr = alloca %struct.tty_port*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6406, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !6408, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6410, metadata !DIExpression()), !dbg !6412
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6412
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6412
  store i8* %1, i8** %__mptr, align 8, !dbg !6412
  br label %do.body, !dbg !6412

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6413

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6412
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6412
  %3 = bitcast i8* %add.ptr to %struct.mxser_port*, !dbg !6412
  store %struct.mxser_port* %3, %struct.mxser_port** %tmp, align 8, !dbg !6413
  %4 = load %struct.mxser_port*, %struct.mxser_port** %tmp, align 8, !dbg !6412
  store %struct.mxser_port* %4, %struct.mxser_port** %info, align 8, !dbg !6409
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6415, metadata !DIExpression()), !dbg !6416
  br label %do.body1, !dbg !6417

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6418

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6419, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6422, metadata !DIExpression()), !dbg !6421
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6421
  %conv = zext i1 %cmp to i32, !dbg !6421
  store i32 1, i32* %tmp3, align 4, !dbg !6421
  %5 = load i32, i32* %tmp3, align 4, !dbg !6421
  br label %do.body4, !dbg !6423

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6424

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6425

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6427, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6431, metadata !DIExpression()), !dbg !6430
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6430
  %conv10 = zext i1 %cmp9 to i32, !dbg !6430
  store i32 1, i32* %tmp11, align 4, !dbg !6430
  %6 = load i32, i32* %tmp11, align 4, !dbg !6430
  %call = call i64 @arch_local_irq_save() #11, !dbg !6432
  store i64 %call, i64* %flags, align 8, !dbg !6432
  br label %do.end12, !dbg !6432

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6425

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6424

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6433, !srcloc !6434
  br label %do.body15, !dbg !6433

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6435
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 28, !dbg !6435
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6436
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6437
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !6437
  br label %do.end17, !dbg !6435

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6433

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6424

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6423

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6418

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6438
  %port22 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 0, !dbg !6438
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port22, i32 0, i32 9, !dbg !6438
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #11, !dbg !6438
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6439
  %port23 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 0, !dbg !6441
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port23, i32 0, i32 15, !dbg !6442
  %12 = load i8*, i8** %xmit_buf, align 8, !dbg !6442
  %tobool = icmp ne i8* %12, null, !dbg !6439
  br i1 %tobool, label %if.then, label %if.end, !dbg !6443

if.then:                                          ; preds = %do.end21
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6444
  %port24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 0, !dbg !6444
  %xmit_buf25 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 15, !dbg !6444
  %14 = load i8*, i8** %xmit_buf25, align 8, !dbg !6444
  %15 = ptrtoint i8* %14 to i64, !dbg !6444
  call void @free_pages(i64 %15, i32 0) #11, !dbg !6444
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6446
  %port26 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 0, !dbg !6447
  %xmit_buf27 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port26, i32 0, i32 15, !dbg !6448
  store i8* null, i8** %xmit_buf27, align 8, !dbg !6449
  br label %if.end, !dbg !6450

if.end:                                           ; preds = %if.then, %do.end21
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6451
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 11, !dbg !6452
  store i32 0, i32* %IER, align 4, !dbg !6453
  %18 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6454
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 2, !dbg !6455
  %19 = load i64, i64* %ioaddr, align 8, !dbg !6455
  %add = add i64 %19, 1, !dbg !6456
  %conv28 = trunc i64 %add to i32, !dbg !6454
  call void @outb(i8 zeroext 0, i32 %conv28) #11, !dbg !6457
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6458
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 1, !dbg !6460
  %21 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !6460
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %21, i32 0, i32 5, !dbg !6461
  %22 = load i32, i32* %chip_flag, align 8, !dbg !6461
  %tobool29 = icmp ne i32 %22, 0, !dbg !6458
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !6462

if.then30:                                        ; preds = %if.end
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6463
  %ioaddr31 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 2, !dbg !6464
  %24 = load i64, i64* %ioaddr31, align 8, !dbg !6464
  %add32 = add i64 %24, 2, !dbg !6465
  %conv33 = trunc i64 %add32 to i32, !dbg !6463
  call void @outb(i8 zeroext 38, i32 %conv33) #11, !dbg !6466
  br label %if.end37, !dbg !6466

if.else:                                          ; preds = %if.end
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6467
  %ioaddr34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 2, !dbg !6468
  %26 = load i64, i64* %ioaddr34, align 8, !dbg !6468
  %add35 = add i64 %26, 2, !dbg !6469
  %conv36 = trunc i64 %add35 to i32, !dbg !6467
  call void @outb(i8 zeroext 6, i32 %conv36) #11, !dbg !6470
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then30
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6471
  %ioaddr38 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 2, !dbg !6472
  %28 = load i64, i64* %ioaddr38, align 8, !dbg !6472
  %add39 = add i64 %28, 0, !dbg !6473
  %conv40 = trunc i64 %add39 to i32, !dbg !6471
  %call41 = call zeroext i8 @inb(i32 %conv40) #11, !dbg !6474
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6475
  %board42 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 1, !dbg !6477
  %30 = load %struct.mxser_board*, %struct.mxser_board** %board42, align 8, !dbg !6477
  %chip_flag43 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %30, i32 0, i32 5, !dbg !6478
  %31 = load i32, i32* %chip_flag43, align 8, !dbg !6478
  %tobool44 = icmp ne i32 %31, 0, !dbg !6475
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !6479

if.then45:                                        ; preds = %if.end37
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6480
  %ioaddr46 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 2, !dbg !6481
  %33 = load i64, i64* %ioaddr46, align 8, !dbg !6481
  call void @SET_MOXA_MUST_NO_SOFTWARE_FLOW_CONTROL(i64 %33) #11, !dbg !6482
  br label %if.end47, !dbg !6482

if.end47:                                         ; preds = %if.then45, %if.end37
  %34 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6483
  %slock48 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %34, i32 0, i32 28, !dbg !6484
  %35 = load i64, i64* %flags, align 8, !dbg !6485
  store %struct.spinlock* %slock48, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !6486
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !6486
  store i32 1, i32* %tmp.i, align 4, !dbg !6486
  %36 = load i32, i32* %tmp.i, align 4, !dbg !6486
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !6487
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !6487
  store i32 1, i32* %tmp8.i, align 4, !dbg !6487
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !6487
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !6488
  call void @arch_local_irq_restore(i64 %38) #13, !dbg !6488
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6489, !srcloc !6391
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !6490
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !6490
  %rlock.i50 = bitcast %union.anon.2* %40 to %struct.raw_spinlock*, !dbg !6490
  ret void, !dbg !6491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_activate(%struct.tty_port* %port, %struct.tty_struct* %tty) #3 !dbg !6492 {
entry:
  %lock.addr.i112 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i112, metadata !6302, metadata !DIExpression()), !dbg !6493
  %flags.addr.i113 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i113, metadata !6308, metadata !DIExpression()), !dbg !6497
  %tmp.i114 = alloca i32, align 4
  %tmp8.i115 = alloca i32, align 4
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !6302, metadata !DIExpression()), !dbg !6498
  %flags.addr.i108 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i108, metadata !6308, metadata !DIExpression()), !dbg !6502
  %tmp.i109 = alloca i32, align 4
  %tmp8.i110 = alloca i32, align 4
  %lock.addr.i105 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i105, metadata !6302, metadata !DIExpression()), !dbg !6503
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !6505
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !6506
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mxser_port*, align 8
  %page = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6519, metadata !DIExpression()), !dbg !6521
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !6521
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !6521
  store i8* %1, i8** %__mptr, align 8, !dbg !6521
  br label %do.body, !dbg !6521

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6522

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6521
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6521
  %3 = bitcast i8* %add.ptr to %struct.mxser_port*, !dbg !6521
  store %struct.mxser_port* %3, %struct.mxser_port** %tmp, align 8, !dbg !6522
  %4 = load %struct.mxser_port*, %struct.mxser_port** %tmp, align 8, !dbg !6521
  store %struct.mxser_port* %4, %struct.mxser_port** %info, align 8, !dbg !6518
  call void @llvm.dbg.declare(metadata i64* %page, metadata !6524, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6526, metadata !DIExpression()), !dbg !6527
  %call = call i64 @__get_free_pages(i32 3264, i32 0) #11, !dbg !6528
  store i64 %call, i64* %page, align 8, !dbg !6529
  %5 = load i64, i64* %page, align 8, !dbg !6530
  %tobool = icmp ne i64 %5, 0, !dbg !6530
  br i1 %tobool, label %if.end, label %if.then, !dbg !6532

if.then:                                          ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !6533
  br label %return, !dbg !6533

if.end:                                           ; preds = %do.end
  br label %do.body1, !dbg !6534

do.body1:                                         ; preds = %if.end
  br label %do.body2, !dbg !6535

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6536, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6539, metadata !DIExpression()), !dbg !6538
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6538
  %conv = zext i1 %cmp to i32, !dbg !6538
  store i32 1, i32* %tmp3, align 4, !dbg !6538
  %6 = load i32, i32* %tmp3, align 4, !dbg !6538
  br label %do.body4, !dbg !6540

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6541

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6542

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6544, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6548, metadata !DIExpression()), !dbg !6547
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6547
  %conv10 = zext i1 %cmp9 to i32, !dbg !6547
  store i32 1, i32* %tmp11, align 4, !dbg !6547
  %7 = load i32, i32* %tmp11, align 4, !dbg !6547
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !6549
  store i64 %call12, i64* %flags, align 8, !dbg !6549
  br label %do.end13, !dbg !6549

do.end13:                                         ; preds = %do.body6
  br label %do.end14, !dbg !6542

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !6541

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6550, !srcloc !6551
  br label %do.body16, !dbg !6550

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6552
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 28, !dbg !6552
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6553
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6554
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !6554
  br label %do.end18, !dbg !6552

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !6550

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6541

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6540

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !6535

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6555
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 2, !dbg !6556
  %12 = load i64, i64* %ioaddr, align 8, !dbg !6556
  %tobool23 = icmp ne i64 %12, 0, !dbg !6555
  br i1 %tobool23, label %lor.lhs.false, label %if.then25, !dbg !6557

lor.lhs.false:                                    ; preds = %do.end22
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6558
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 9, !dbg !6559
  %14 = load i32, i32* %type, align 4, !dbg !6559
  %tobool24 = icmp ne i32 %14, 0, !dbg !6558
  br i1 %tobool24, label %if.end28, label %if.then25, !dbg !6560

if.then25:                                        ; preds = %lor.lhs.false, %do.end22
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6561
  %flags26 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 21, !dbg !6562
  call void @set_bit(i64 1, i64* %flags26) #11, !dbg !6563
  %16 = load i64, i64* %page, align 8, !dbg !6564
  call void @free_pages(i64 %16, i32 0) #11, !dbg !6564
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6565
  %slock27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 28, !dbg !6566
  %18 = load i64, i64* %flags, align 8, !dbg !6567
  store %struct.spinlock* %slock27, %struct.spinlock** %lock.addr.i107, align 8
  store i64 %18, i64* %flags.addr.i108, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !6568
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !6568
  store i32 1, i32* %tmp.i109, align 4, !dbg !6568
  %19 = load i32, i32* %tmp.i109, align 4, !dbg !6568
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !6569
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !6569
  store i32 1, i32* %tmp8.i110, align 4, !dbg !6569
  %20 = load i32, i32* %tmp8.i110, align 4, !dbg !6569
  %21 = load i64, i64* %flags.addr.i108, align 8, !dbg !6570
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !6570
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6571, !srcloc !6391
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !6572
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !6572
  %rlock.i111 = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !6572
  store i32 0, i32* %retval, align 4, !dbg !6573
  br label %return, !dbg !6573

if.end28:                                         ; preds = %lor.lhs.false
  %24 = load i64, i64* %page, align 8, !dbg !6574
  %25 = inttoptr i64 %24 to i8*, !dbg !6575
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6576
  %port29 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 0, !dbg !6577
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port29, i32 0, i32 15, !dbg !6578
  store i8* %25, i8** %xmit_buf, align 8, !dbg !6579
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6580
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 1, !dbg !6582
  %28 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !6582
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %28, i32 0, i32 5, !dbg !6583
  %29 = load i32, i32* %chip_flag, align 8, !dbg !6583
  %tobool30 = icmp ne i32 %29, 0, !dbg !6580
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !6584

if.then31:                                        ; preds = %if.end28
  %30 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6585
  %ioaddr32 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 2, !dbg !6586
  %31 = load i64, i64* %ioaddr32, align 8, !dbg !6586
  %add = add i64 %31, 2, !dbg !6587
  %conv33 = trunc i64 %add to i32, !dbg !6585
  call void @outb(i8 zeroext 38, i32 %conv33) #11, !dbg !6588
  br label %if.end37, !dbg !6588

if.else:                                          ; preds = %if.end28
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6589
  %ioaddr34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 2, !dbg !6590
  %33 = load i64, i64* %ioaddr34, align 8, !dbg !6590
  %add35 = add i64 %33, 2, !dbg !6591
  %conv36 = trunc i64 %add35 to i32, !dbg !6589
  call void @outb(i8 zeroext 6, i32 %conv36) #11, !dbg !6592
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then31
  %34 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6593
  %ioaddr38 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %34, i32 0, i32 2, !dbg !6594
  %35 = load i64, i64* %ioaddr38, align 8, !dbg !6594
  %add39 = add i64 %35, 5, !dbg !6595
  %conv40 = trunc i64 %add39 to i32, !dbg !6593
  %call41 = call zeroext i8 @inb(i32 %conv40) #11, !dbg !6596
  %conv42 = zext i8 %call41 to i32, !dbg !6596
  %cmp43 = icmp eq i32 %conv42, 255, !dbg !6597
  br i1 %cmp43, label %if.then45, label %if.end51, !dbg !6598

if.then45:                                        ; preds = %if.end37
  %36 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6599
  %slock46 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %36, i32 0, i32 28, !dbg !6600
  %37 = load i64, i64* %flags, align 8, !dbg !6601
  store %struct.spinlock* %slock46, %struct.spinlock** %lock.addr.i112, align 8
  store i64 %37, i64* %flags.addr.i113, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !6602
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !6602
  store i32 1, i32* %tmp.i114, align 4, !dbg !6602
  %38 = load i32, i32* %tmp.i114, align 4, !dbg !6602
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !6603
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !6603
  store i32 1, i32* %tmp8.i115, align 4, !dbg !6603
  %39 = load i32, i32* %tmp8.i115, align 4, !dbg !6603
  %40 = load i64, i64* %flags.addr.i113, align 8, !dbg !6604
  call void @arch_local_irq_restore(i64 %40) #13, !dbg !6604
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6605, !srcloc !6391
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i112, align 8, !dbg !6606
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !6606
  %rlock.i116 = bitcast %union.anon.2* %42 to %struct.raw_spinlock*, !dbg !6606
  %call47 = call zeroext i1 @capable(i32 21) #11, !dbg !6607
  br i1 %call47, label %if.then48, label %if.else50, !dbg !6609

if.then48:                                        ; preds = %if.then45
  %43 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6610
  %flags49 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %43, i32 0, i32 21, !dbg !6612
  call void @set_bit(i64 1, i64* %flags49) #11, !dbg !6613
  store i32 0, i32* %retval, align 4, !dbg !6614
  br label %return, !dbg !6614

if.else50:                                        ; preds = %if.then45
  store i32 -19, i32* %retval, align 4, !dbg !6615
  br label %return, !dbg !6615

if.end51:                                         ; preds = %if.end37
  %44 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6616
  %ioaddr52 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %44, i32 0, i32 2, !dbg !6617
  %45 = load i64, i64* %ioaddr52, align 8, !dbg !6617
  %add53 = add i64 %45, 5, !dbg !6618
  %conv54 = trunc i64 %add53 to i32, !dbg !6616
  %call55 = call zeroext i8 @inb(i32 %conv54) #11, !dbg !6619
  %46 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6620
  %ioaddr56 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %46, i32 0, i32 2, !dbg !6621
  %47 = load i64, i64* %ioaddr56, align 8, !dbg !6621
  %add57 = add i64 %47, 0, !dbg !6622
  %conv58 = trunc i64 %add57 to i32, !dbg !6620
  %call59 = call zeroext i8 @inb(i32 %conv58) #11, !dbg !6623
  %48 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6624
  %ioaddr60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %48, i32 0, i32 2, !dbg !6625
  %49 = load i64, i64* %ioaddr60, align 8, !dbg !6625
  %add61 = add i64 %49, 2, !dbg !6626
  %conv62 = trunc i64 %add61 to i32, !dbg !6624
  %call63 = call zeroext i8 @inb(i32 %conv62) #11, !dbg !6627
  %50 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6628
  %ioaddr64 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %50, i32 0, i32 2, !dbg !6629
  %51 = load i64, i64* %ioaddr64, align 8, !dbg !6629
  %add65 = add i64 %51, 6, !dbg !6630
  %conv66 = trunc i64 %add65 to i32, !dbg !6628
  %call67 = call zeroext i8 @inb(i32 %conv66) #11, !dbg !6631
  %52 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6632
  %ioaddr68 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %52, i32 0, i32 2, !dbg !6633
  %53 = load i64, i64* %ioaddr68, align 8, !dbg !6633
  %add69 = add i64 %53, 3, !dbg !6634
  %conv70 = trunc i64 %add69 to i32, !dbg !6632
  call void @outb(i8 zeroext 3, i32 %conv70) #11, !dbg !6635
  %54 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6636
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %54, i32 0, i32 12, !dbg !6637
  store i32 3, i32* %MCR, align 8, !dbg !6638
  %55 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6639
  %MCR71 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %55, i32 0, i32 12, !dbg !6640
  %56 = load i32, i32* %MCR71, align 8, !dbg !6640
  %conv72 = trunc i32 %56 to i8, !dbg !6639
  %57 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6641
  %ioaddr73 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %57, i32 0, i32 2, !dbg !6642
  %58 = load i64, i64* %ioaddr73, align 8, !dbg !6642
  %add74 = add i64 %58, 4, !dbg !6643
  %conv75 = trunc i64 %add74 to i32, !dbg !6641
  call void @outb(i8 zeroext %conv72, i32 %conv75) #11, !dbg !6644
  %59 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6645
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %59, i32 0, i32 11, !dbg !6646
  store i32 13, i32* %IER, align 4, !dbg !6647
  %60 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6648
  %board76 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %60, i32 0, i32 1, !dbg !6650
  %61 = load %struct.mxser_board*, %struct.mxser_board** %board76, align 8, !dbg !6650
  %chip_flag77 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %61, i32 0, i32 5, !dbg !6651
  %62 = load i32, i32* %chip_flag77, align 8, !dbg !6651
  %tobool78 = icmp ne i32 %62, 0, !dbg !6648
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !6652

if.then79:                                        ; preds = %if.end51
  %63 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6653
  %IER80 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %63, i32 0, i32 11, !dbg !6654
  %64 = load i32, i32* %IER80, align 4, !dbg !6655
  %or = or i32 %64, 16, !dbg !6655
  store i32 %or, i32* %IER80, align 4, !dbg !6655
  br label %if.end81, !dbg !6653

if.end81:                                         ; preds = %if.then79, %if.end51
  %65 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6656
  %IER82 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %65, i32 0, i32 11, !dbg !6657
  %66 = load i32, i32* %IER82, align 4, !dbg !6657
  %conv83 = trunc i32 %66 to i8, !dbg !6656
  %67 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6658
  %ioaddr84 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %67, i32 0, i32 2, !dbg !6659
  %68 = load i64, i64* %ioaddr84, align 8, !dbg !6659
  %add85 = add i64 %68, 1, !dbg !6660
  %conv86 = trunc i64 %add85 to i32, !dbg !6658
  call void @outb(i8 zeroext %conv83, i32 %conv86) #11, !dbg !6661
  %69 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6662
  %ioaddr87 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %69, i32 0, i32 2, !dbg !6663
  %70 = load i64, i64* %ioaddr87, align 8, !dbg !6663
  %add88 = add i64 %70, 5, !dbg !6664
  %conv89 = trunc i64 %add88 to i32, !dbg !6662
  %call90 = call zeroext i8 @inb(i32 %conv89) #11, !dbg !6665
  %71 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6666
  %ioaddr91 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %71, i32 0, i32 2, !dbg !6667
  %72 = load i64, i64* %ioaddr91, align 8, !dbg !6667
  %add92 = add i64 %72, 0, !dbg !6668
  %conv93 = trunc i64 %add92 to i32, !dbg !6666
  %call94 = call zeroext i8 @inb(i32 %conv93) #11, !dbg !6669
  %73 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6670
  %ioaddr95 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %73, i32 0, i32 2, !dbg !6671
  %74 = load i64, i64* %ioaddr95, align 8, !dbg !6671
  %add96 = add i64 %74, 2, !dbg !6672
  %conv97 = trunc i64 %add96 to i32, !dbg !6670
  %call98 = call zeroext i8 @inb(i32 %conv97) #11, !dbg !6673
  %75 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6674
  %ioaddr99 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %75, i32 0, i32 2, !dbg !6675
  %76 = load i64, i64* %ioaddr99, align 8, !dbg !6675
  %add100 = add i64 %76, 6, !dbg !6676
  %conv101 = trunc i64 %add100 to i32, !dbg !6674
  %call102 = call zeroext i8 @inb(i32 %conv101) #11, !dbg !6677
  %77 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6678
  %flags103 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %77, i32 0, i32 21, !dbg !6679
  call void @clear_bit(i64 1, i64* %flags103) #11, !dbg !6680
  %78 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6681
  %xmit_tail = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %78, i32 0, i32 23, !dbg !6682
  store i32 0, i32* %xmit_tail, align 8, !dbg !6683
  %79 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6684
  %xmit_head = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %79, i32 0, i32 22, !dbg !6685
  store i32 0, i32* %xmit_head, align 4, !dbg !6686
  %80 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6687
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %80, i32 0, i32 24, !dbg !6688
  store i32 0, i32* %xmit_cnt, align 4, !dbg !6689
  %81 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6690
  call void @mxser_change_speed(%struct.tty_struct* %81) #11, !dbg !6691
  %82 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6692
  %slock104 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %82, i32 0, i32 28, !dbg !6693
  %83 = load i64, i64* %flags, align 8, !dbg !6694
  store %struct.spinlock* %slock104, %struct.spinlock** %lock.addr.i105, align 8
  store i64 %83, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !6695
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !6695
  store i32 1, i32* %tmp.i, align 4, !dbg !6695
  %84 = load i32, i32* %tmp.i, align 4, !dbg !6695
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !6696
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !6696
  store i32 1, i32* %tmp8.i, align 4, !dbg !6696
  %85 = load i32, i32* %tmp8.i, align 4, !dbg !6696
  %86 = load i64, i64* %flags.addr.i, align 8, !dbg !6697
  call void @arch_local_irq_restore(i64 %86) #13, !dbg !6697
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6698, !srcloc !6391
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i105, align 8, !dbg !6699
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !6699
  %rlock.i106 = bitcast %union.anon.2* %88 to %struct.raw_spinlock*, !dbg !6699
  store i32 0, i32* %retval, align 4, !dbg !6700
  br label %return, !dbg !6700

return:                                           ; preds = %if.end81, %if.else50, %if.then48, %if.then25, %if.then
  %89 = load i32, i32* %retval, align 4, !dbg !6701
  ret i32 %89, !dbg !6701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #3 !dbg !6702 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6706, metadata !DIExpression()), !dbg !6707
  %call = call i64 @arch_local_save_flags() #11, !dbg !6708
  store i64 %call, i64* %f, align 8, !dbg !6709
  call void @arch_local_irq_disable() #11, !dbg !6710
  %0 = load i64, i64* %f, align 8, !dbg !6711
  ret i64 %0, !dbg !6712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #3 !dbg !6713 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6714, metadata !DIExpression()), !dbg !6716
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6717, metadata !DIExpression()), !dbg !6716
  %0 = load i64, i64* %__edi, align 8, !dbg !6716
  store i64 %0, i64* %__edi, align 8, !dbg !6716
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6718, metadata !DIExpression()), !dbg !6716
  %1 = load i64, i64* %__esi, align 8, !dbg !6716
  store i64 %1, i64* %__esi, align 8, !dbg !6716
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6719, metadata !DIExpression()), !dbg !6716
  %2 = load i64, i64* %__edx, align 8, !dbg !6716
  store i64 %2, i64* %__edx, align 8, !dbg !6716
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6720, metadata !DIExpression()), !dbg !6716
  %3 = load i64, i64* %__ecx, align 8, !dbg !6716
  store i64 %3, i64* %__ecx, align 8, !dbg !6716
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6721, metadata !DIExpression()), !dbg !6716
  %4 = load i64, i64* %__eax, align 8, !dbg !6716
  store i64 %4, i64* %__eax, align 8, !dbg !6716
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6716
  %6 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !6722
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !6722, !srcloc !6725
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6722
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6722
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6722
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult1), !dbg !6722
  %8 = load i64, i64* %__eax, align 8, !dbg !6722
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6726, metadata !DIExpression()), !dbg !6728
  store i64 -1, i64* %__mask, align 8, !dbg !6728
  %9 = load i64, i64* %__mask, align 8, !dbg !6728
  store i64 %9, i64* %tmp, align 8, !dbg !6728
  %10 = load i64, i64* %tmp, align 8, !dbg !6728
  %and = and i64 %8, %10, !dbg !6722
  store i64 %and, i64* %__ret, align 8, !dbg !6722
  %11 = load i64, i64* %__ret, align 8, !dbg !6716
  store i64 %11, i64* %tmp2, align 8, !dbg !6729
  %12 = load i64, i64* %tmp2, align 8, !dbg !6716
  ret i64 %12, !dbg !6730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #3 !dbg !6731 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6732, metadata !DIExpression()), !dbg !6734
  %0 = load i64, i64* %__edi, align 8, !dbg !6734
  store i64 %0, i64* %__edi, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6735, metadata !DIExpression()), !dbg !6734
  %1 = load i64, i64* %__esi, align 8, !dbg !6734
  store i64 %1, i64* %__esi, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6736, metadata !DIExpression()), !dbg !6734
  %2 = load i64, i64* %__edx, align 8, !dbg !6734
  store i64 %2, i64* %__edx, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6737, metadata !DIExpression()), !dbg !6734
  %3 = load i64, i64* %__ecx, align 8, !dbg !6734
  store i64 %3, i64* %__ecx, align 8, !dbg !6734
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6738, metadata !DIExpression()), !dbg !6734
  %4 = load i64, i64* %__eax, align 8, !dbg !6734
  store i64 %4, i64* %__eax, align 8, !dbg !6734
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6734
  %6 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !6734
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !6734, !srcloc !6739
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6734
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6734
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6734
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult1), !dbg !6734
  ret void, !dbg !6740
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #3 !dbg !6741 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6742, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6744, metadata !DIExpression()), !dbg !6746
  %0 = load i64, i64* %__edi, align 8, !dbg !6746
  store i64 %0, i64* %__edi, align 8, !dbg !6746
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6747, metadata !DIExpression()), !dbg !6746
  %1 = load i64, i64* %__esi, align 8, !dbg !6746
  store i64 %1, i64* %__esi, align 8, !dbg !6746
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6748, metadata !DIExpression()), !dbg !6746
  %2 = load i64, i64* %__edx, align 8, !dbg !6746
  store i64 %2, i64* %__edx, align 8, !dbg !6746
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6749, metadata !DIExpression()), !dbg !6746
  %3 = load i64, i64* %__ecx, align 8, !dbg !6746
  store i64 %3, i64* %__ecx, align 8, !dbg !6746
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6750, metadata !DIExpression()), !dbg !6746
  %4 = load i64, i64* %__eax, align 8, !dbg !6746
  store i64 %4, i64* %__eax, align 8, !dbg !6746
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6746
  %6 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !6746
  %7 = load i64, i64* %f.addr, align 8, !dbg !6746
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !6746, !srcloc !6751
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6746
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6746
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6746
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult1), !dbg !6746
  ret void, !dbg !6752
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @SET_MOXA_MUST_NO_SOFTWARE_FLOW_CONTROL(i64 %baseio) #3 !dbg !6753 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !6756, metadata !DIExpression()), !dbg !6757
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !6758, metadata !DIExpression()), !dbg !6759
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !6760
  %add = add i64 %0, 3, !dbg !6761
  %conv = trunc i64 %add to i32, !dbg !6760
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !6762
  store i8 %call, i8* %oldlcr, align 1, !dbg !6763
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !6764
  %add1 = add i64 %1, 3, !dbg !6765
  %conv2 = trunc i64 %add1 to i32, !dbg !6764
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !6766
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !6767
  %add3 = add i64 %2, 2, !dbg !6768
  %conv4 = trunc i64 %add3 to i32, !dbg !6767
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !6769
  store i8 %call5, i8* %efr, align 1, !dbg !6770
  %3 = load i8, i8* %efr, align 1, !dbg !6771
  %conv6 = zext i8 %3 to i32, !dbg !6771
  %and = and i32 %conv6, -16, !dbg !6771
  %conv7 = trunc i32 %and to i8, !dbg !6771
  store i8 %conv7, i8* %efr, align 1, !dbg !6771
  %4 = load i8, i8* %efr, align 1, !dbg !6772
  %5 = load i64, i64* %baseio.addr, align 8, !dbg !6773
  %add8 = add i64 %5, 2, !dbg !6774
  %conv9 = trunc i64 %add8 to i32, !dbg !6773
  call void @outb(i8 zeroext %4, i32 %conv9) #11, !dbg !6775
  %6 = load i8, i8* %oldlcr, align 1, !dbg !6776
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !6777
  %add10 = add i64 %7, 3, !dbg !6778
  %conv11 = trunc i64 %add10 to i32, !dbg !6777
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !6779
  ret void, !dbg !6780
}

; Function Attrs: noredzone
declare dso_local i64 @__get_free_pages(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #3 !dbg !6781 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6787, metadata !DIExpression()), !dbg !6790
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6792, metadata !DIExpression()), !dbg !6793
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6794, metadata !DIExpression()), !dbg !6802
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6804, metadata !DIExpression()), !dbg !6805
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6806, metadata !DIExpression()), !dbg !6807
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6808, metadata !DIExpression()), !dbg !6809
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6810
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6811
  %div = sdiv i64 %1, 64, !dbg !6811
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6812
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6810
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6813
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6814
  %conv.i = trunc i64 %4 to i32, !dbg !6814
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !6815
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6816
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6816
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !6816
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6817
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !6818
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !6819
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !6821
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !6822

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !6823
  %12 = bitcast i64* %11 to i8*, !dbg !6823
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !6823
  %shr.i = ashr i64 %13, 3, !dbg !6823
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !6823
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !6825
  %and.i = and i64 %14, 7, !dbg !6825
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !6825
  %shl.i = shl i32 1, %sh_prom.i, !dbg !6825
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !6826, !srcloc !6827
  br label %arch_set_bit.exit, !dbg !6828

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !6829
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !6831
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !6832, !srcloc !6833
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !6834
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #3 !dbg !6835 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6836, metadata !DIExpression()), !dbg !6838
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6840, metadata !DIExpression()), !dbg !6841
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6794, metadata !DIExpression()), !dbg !6842
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6804, metadata !DIExpression()), !dbg !6844
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6849
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6850
  %div = sdiv i64 %1, 64, !dbg !6850
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6851
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6849
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6852
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6853
  %conv.i = trunc i64 %4 to i32, !dbg !6853
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !6854
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6855
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6855
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !6855
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6856
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !6857
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !6858
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !6860
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !6861

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !6862
  %12 = bitcast i64* %11 to i8*, !dbg !6862
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !6862
  %shr.i = ashr i64 %13, 3, !dbg !6862
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !6862
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !6864
  %and.i = and i64 %14, 7, !dbg !6864
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !6864
  %shl.i = shl i32 1, %sh_prom.i, !dbg !6864
  %neg.i = xor i32 %shl.i, -1, !dbg !6865
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !6866, !srcloc !6867
  br label %arch_clear_bit.exit, !dbg !6868

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !6869
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !6871
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !6872, !srcloc !6873
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !6874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_change_speed(%struct.tty_struct* %tty) #3 !dbg !6875 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %cflag = alloca i32, align 4
  %cval = alloca i32, align 4
  %fcr = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !6878, metadata !DIExpression()), !dbg !6879
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6880
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !6881
  %1 = load i8*, i8** %driver_data, align 8, !dbg !6881
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !6880
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !6879
  call void @llvm.dbg.declare(metadata i32* %cflag, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata i32* %cval, metadata !6884, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata i32* %fcr, metadata !6886, metadata !DIExpression()), !dbg !6887
  call void @llvm.dbg.declare(metadata i8* %status, metadata !6888, metadata !DIExpression()), !dbg !6889
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6890
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 15, !dbg !6891
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !6892
  %4 = load i32, i32* %c_cflag, align 8, !dbg !6892
  store i32 %4, i32* %cflag, align 4, !dbg !6893
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6894
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 2, !dbg !6896
  %6 = load i64, i64* %ioaddr, align 8, !dbg !6896
  %tobool = icmp ne i64 %6, 0, !dbg !6894
  br i1 %tobool, label %if.end, label %if.then, !dbg !6897

if.then:                                          ; preds = %entry
  br label %return, !dbg !6898

if.end:                                           ; preds = %entry
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6899
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 5, !dbg !6901
  %8 = load i32, i32* %index, align 8, !dbg !6901
  %idxprom = sext i32 %8 to i64, !dbg !6902
  %arrayidx = getelementptr [33 x i32], [33 x i32]* @mxser_set_baud_method, i64 0, i64 %idxprom, !dbg !6902
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6902
  %cmp = icmp eq i32 %9, 0, !dbg !6903
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !6904

if.then1:                                         ; preds = %if.end
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6905
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !6906
  %call = call i32 @tty_get_baud_rate(%struct.tty_struct* %11) #11, !dbg !6907
  %conv = zext i32 %call to i64, !dbg !6907
  %call2 = call i32 @mxser_set_baud(%struct.tty_struct* %10, i64 %conv) #11, !dbg !6908
  br label %if.end3, !dbg !6908

if.end3:                                          ; preds = %if.then1, %if.end
  %12 = load i32, i32* %cflag, align 4, !dbg !6909
  %and = and i32 %12, 48, !dbg !6910
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb4
    i32 32, label %sw.bb5
    i32 48, label %sw.bb6
  ], !dbg !6911

sw.bb:                                            ; preds = %if.end3
  store i32 0, i32* %cval, align 4, !dbg !6912
  br label %sw.epilog, !dbg !6914

sw.bb4:                                           ; preds = %if.end3
  store i32 1, i32* %cval, align 4, !dbg !6915
  br label %sw.epilog, !dbg !6916

sw.bb5:                                           ; preds = %if.end3
  store i32 2, i32* %cval, align 4, !dbg !6917
  br label %sw.epilog, !dbg !6918

sw.bb6:                                           ; preds = %if.end3
  store i32 3, i32* %cval, align 4, !dbg !6919
  br label %sw.epilog, !dbg !6920

sw.default:                                       ; preds = %if.end3
  store i32 0, i32* %cval, align 4, !dbg !6921
  br label %sw.epilog, !dbg !6922

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  %13 = load i32, i32* %cflag, align 4, !dbg !6923
  %and7 = and i32 %13, 64, !dbg !6925
  %tobool8 = icmp ne i32 %and7, 0, !dbg !6925
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6926

if.then9:                                         ; preds = %sw.epilog
  %14 = load i32, i32* %cval, align 4, !dbg !6927
  %or = or i32 %14, 4, !dbg !6927
  store i32 %or, i32* %cval, align 4, !dbg !6927
  br label %if.end10, !dbg !6928

if.end10:                                         ; preds = %if.then9, %sw.epilog
  %15 = load i32, i32* %cflag, align 4, !dbg !6929
  %and11 = and i32 %15, 256, !dbg !6931
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6931
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6932

if.then13:                                        ; preds = %if.end10
  %16 = load i32, i32* %cval, align 4, !dbg !6933
  %or14 = or i32 %16, 8, !dbg !6933
  store i32 %or14, i32* %cval, align 4, !dbg !6933
  br label %if.end15, !dbg !6934

if.end15:                                         ; preds = %if.then13, %if.end10
  %17 = load i32, i32* %cflag, align 4, !dbg !6935
  %and16 = and i32 %17, 512, !dbg !6937
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6937
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !6938

if.then18:                                        ; preds = %if.end15
  %18 = load i32, i32* %cval, align 4, !dbg !6939
  %or19 = or i32 %18, 16, !dbg !6939
  store i32 %or19, i32* %cval, align 4, !dbg !6939
  br label %if.end20, !dbg !6940

if.end20:                                         ; preds = %if.then18, %if.end15
  %19 = load i32, i32* %cflag, align 4, !dbg !6941
  %and21 = and i32 %19, 1073741824, !dbg !6943
  %tobool22 = icmp ne i32 %and21, 0, !dbg !6943
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !6944

if.then23:                                        ; preds = %if.end20
  %20 = load i32, i32* %cval, align 4, !dbg !6945
  %or24 = or i32 %20, 32, !dbg !6945
  store i32 %or24, i32* %cval, align 4, !dbg !6945
  br label %if.end25, !dbg !6946

if.end25:                                         ; preds = %if.then23, %if.end20
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6947
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 9, !dbg !6949
  %22 = load i32, i32* %type, align 4, !dbg !6949
  %cmp26 = icmp eq i32 %22, 1, !dbg !6950
  br i1 %cmp26, label %if.then31, label %lor.lhs.false, !dbg !6951

lor.lhs.false:                                    ; preds = %if.end25
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6952
  %type28 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 9, !dbg !6953
  %24 = load i32, i32* %type28, align 4, !dbg !6953
  %cmp29 = icmp eq i32 %24, 2, !dbg !6954
  br i1 %cmp29, label %if.then31, label %if.else36, !dbg !6955

if.then31:                                        ; preds = %lor.lhs.false, %if.end25
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6956
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 1, !dbg !6959
  %26 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !6959
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %26, i32 0, i32 5, !dbg !6960
  %27 = load i32, i32* %chip_flag, align 8, !dbg !6960
  %tobool32 = icmp ne i32 %27, 0, !dbg !6956
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !6961

if.then33:                                        ; preds = %if.then31
  store i32 1, i32* %fcr, align 4, !dbg !6962
  %28 = load i32, i32* %fcr, align 4, !dbg !6964
  %or34 = or i32 %28, 32, !dbg !6964
  store i32 %or34, i32* %fcr, align 4, !dbg !6964
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6965
  call void @mxser_set_must_fifo_value(%struct.mxser_port* %29) #11, !dbg !6966
  br label %if.end35, !dbg !6967

if.else:                                          ; preds = %if.then31
  store i32 0, i32* %fcr, align 4, !dbg !6968
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.then33
  br label %if.end52, !dbg !6969

if.else36:                                        ; preds = %lor.lhs.false
  store i32 1, i32* %fcr, align 4, !dbg !6970
  %30 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6972
  %board37 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 1, !dbg !6974
  %31 = load %struct.mxser_board*, %struct.mxser_board** %board37, align 8, !dbg !6974
  %chip_flag38 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %31, i32 0, i32 5, !dbg !6975
  %32 = load i32, i32* %chip_flag38, align 8, !dbg !6975
  %tobool39 = icmp ne i32 %32, 0, !dbg !6972
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !6976

if.then40:                                        ; preds = %if.else36
  %33 = load i32, i32* %fcr, align 4, !dbg !6977
  %or41 = or i32 %33, 32, !dbg !6977
  store i32 %or41, i32* %fcr, align 4, !dbg !6977
  %34 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6979
  call void @mxser_set_must_fifo_value(%struct.mxser_port* %34) #11, !dbg !6980
  br label %if.end51, !dbg !6981

if.else42:                                        ; preds = %if.else36
  %35 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6982
  %rx_trigger = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 6, !dbg !6984
  %36 = load i32, i32* %rx_trigger, align 8, !dbg !6984
  switch i32 %36, label %sw.default48 [
    i32 1, label %sw.bb43
    i32 4, label %sw.bb44
    i32 8, label %sw.bb46
  ], !dbg !6985

sw.bb43:                                          ; preds = %if.else42
  %37 = load i32, i32* %fcr, align 4, !dbg !6986
  store i32 %37, i32* %fcr, align 4, !dbg !6986
  br label %sw.epilog50, !dbg !6988

sw.bb44:                                          ; preds = %if.else42
  %38 = load i32, i32* %fcr, align 4, !dbg !6989
  %or45 = or i32 %38, 64, !dbg !6989
  store i32 %or45, i32* %fcr, align 4, !dbg !6989
  br label %sw.epilog50, !dbg !6990

sw.bb46:                                          ; preds = %if.else42
  %39 = load i32, i32* %fcr, align 4, !dbg !6991
  %or47 = or i32 %39, 128, !dbg !6991
  store i32 %or47, i32* %fcr, align 4, !dbg !6991
  br label %sw.epilog50, !dbg !6992

sw.default48:                                     ; preds = %if.else42
  %40 = load i32, i32* %fcr, align 4, !dbg !6993
  %or49 = or i32 %40, 192, !dbg !6993
  store i32 %or49, i32* %fcr, align 4, !dbg !6993
  br label %sw.epilog50, !dbg !6994

sw.epilog50:                                      ; preds = %sw.default48, %sw.bb46, %sw.bb44, %sw.bb43
  br label %if.end51

if.end51:                                         ; preds = %sw.epilog50, %if.then40
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end35
  %41 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6995
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 11, !dbg !6996
  %42 = load i32, i32* %IER, align 4, !dbg !6997
  %and53 = and i32 %42, -9, !dbg !6997
  store i32 %and53, i32* %IER, align 4, !dbg !6997
  %43 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !6998
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 12, !dbg !6999
  %44 = load i32, i32* %MCR, align 8, !dbg !7000
  %and54 = and i32 %44, -33, !dbg !7000
  store i32 %and54, i32* %MCR, align 8, !dbg !7000
  %45 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7001
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 0, !dbg !7002
  %46 = load i32, i32* %cflag, align 4, !dbg !7003
  %and55 = and i32 %46, -2147483648, !dbg !7004
  %tobool56 = icmp ne i32 %and55, 0, !dbg !7003
  call void @tty_port_set_cts_flow(%struct.tty_port* %port, i1 zeroext %tobool56) #11, !dbg !7005
  %47 = load i32, i32* %cflag, align 4, !dbg !7006
  %and57 = and i32 %47, -2147483648, !dbg !7008
  %tobool58 = icmp ne i32 %and57, 0, !dbg !7008
  br i1 %tobool58, label %if.then59, label %if.end130, !dbg !7009

if.then59:                                        ; preds = %if.end52
  %48 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7010
  %IER60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %48, i32 0, i32 11, !dbg !7012
  %49 = load i32, i32* %IER60, align 4, !dbg !7013
  %or61 = or i32 %49, 8, !dbg !7013
  store i32 %or61, i32* %IER60, align 4, !dbg !7013
  %50 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7014
  %type62 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %50, i32 0, i32 9, !dbg !7016
  %51 = load i32, i32* %type62, align 4, !dbg !7016
  %cmp63 = icmp eq i32 %51, 4, !dbg !7017
  br i1 %cmp63, label %if.then69, label %lor.lhs.false65, !dbg !7018

lor.lhs.false65:                                  ; preds = %if.then59
  %52 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7019
  %board66 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %52, i32 0, i32 1, !dbg !7020
  %53 = load %struct.mxser_board*, %struct.mxser_board** %board66, align 8, !dbg !7020
  %chip_flag67 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %53, i32 0, i32 5, !dbg !7021
  %54 = load i32, i32* %chip_flag67, align 8, !dbg !7021
  %tobool68 = icmp ne i32 %54, 0, !dbg !7022
  br i1 %tobool68, label %if.then69, label %if.else72, !dbg !7023

if.then69:                                        ; preds = %lor.lhs.false65, %if.then59
  %55 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7024
  %MCR70 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %55, i32 0, i32 12, !dbg !7026
  %56 = load i32, i32* %MCR70, align 8, !dbg !7027
  %or71 = or i32 %56, 32, !dbg !7027
  store i32 %or71, i32* %MCR70, align 8, !dbg !7027
  br label %if.end129, !dbg !7028

if.else72:                                        ; preds = %lor.lhs.false65
  %57 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7029
  %ioaddr73 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %57, i32 0, i32 2, !dbg !7031
  %58 = load i64, i64* %ioaddr73, align 8, !dbg !7031
  %add = add i64 %58, 6, !dbg !7032
  %conv74 = trunc i64 %add to i32, !dbg !7029
  %call75 = call zeroext i8 @inb(i32 %conv74) #11, !dbg !7033
  store i8 %call75, i8* %status, align 1, !dbg !7034
  %59 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7035
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %59, i32 0, i32 26, !dbg !7037
  %60 = load i32, i32* %hw_stopped, align 8, !dbg !7037
  %tobool76 = icmp ne i32 %60, 0, !dbg !7035
  br i1 %tobool76, label %if.then77, label %if.else105, !dbg !7038

if.then77:                                        ; preds = %if.else72
  %61 = load i8, i8* %status, align 1, !dbg !7039
  %conv78 = zext i8 %61 to i32, !dbg !7039
  %and79 = and i32 %conv78, 16, !dbg !7042
  %tobool80 = icmp ne i32 %and79, 0, !dbg !7042
  br i1 %tobool80, label %if.then81, label %if.end104, !dbg !7043

if.then81:                                        ; preds = %if.then77
  %62 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7044
  %hw_stopped82 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %62, i32 0, i32 26, !dbg !7046
  store i32 0, i32* %hw_stopped82, align 8, !dbg !7047
  %63 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7048
  %type83 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %63, i32 0, i32 9, !dbg !7050
  %64 = load i32, i32* %type83, align 4, !dbg !7050
  %cmp84 = icmp ne i32 %64, 4, !dbg !7051
  br i1 %cmp84, label %land.lhs.true, label %if.end103, !dbg !7052

land.lhs.true:                                    ; preds = %if.then81
  %65 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7053
  %board86 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %65, i32 0, i32 1, !dbg !7054
  %66 = load %struct.mxser_board*, %struct.mxser_board** %board86, align 8, !dbg !7054
  %chip_flag87 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %66, i32 0, i32 5, !dbg !7055
  %67 = load i32, i32* %chip_flag87, align 8, !dbg !7055
  %tobool88 = icmp ne i32 %67, 0, !dbg !7053
  br i1 %tobool88, label %if.end103, label %if.then89, !dbg !7056

if.then89:                                        ; preds = %land.lhs.true
  %68 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7057
  %IER90 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %68, i32 0, i32 11, !dbg !7059
  %69 = load i32, i32* %IER90, align 4, !dbg !7059
  %and91 = and i32 %69, -3, !dbg !7060
  %conv92 = trunc i32 %and91 to i8, !dbg !7057
  %70 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7061
  %ioaddr93 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %70, i32 0, i32 2, !dbg !7062
  %71 = load i64, i64* %ioaddr93, align 8, !dbg !7062
  %add94 = add i64 %71, 1, !dbg !7063
  %conv95 = trunc i64 %add94 to i32, !dbg !7061
  call void @outb(i8 zeroext %conv92, i32 %conv95) #11, !dbg !7064
  %72 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7065
  %IER96 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %72, i32 0, i32 11, !dbg !7066
  %73 = load i32, i32* %IER96, align 4, !dbg !7067
  %or97 = or i32 %73, 2, !dbg !7067
  store i32 %or97, i32* %IER96, align 4, !dbg !7067
  %74 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7068
  %IER98 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %74, i32 0, i32 11, !dbg !7069
  %75 = load i32, i32* %IER98, align 4, !dbg !7069
  %conv99 = trunc i32 %75 to i8, !dbg !7068
  %76 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7070
  %ioaddr100 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %76, i32 0, i32 2, !dbg !7071
  %77 = load i64, i64* %ioaddr100, align 8, !dbg !7071
  %add101 = add i64 %77, 1, !dbg !7072
  %conv102 = trunc i64 %add101 to i32, !dbg !7070
  call void @outb(i8 zeroext %conv99, i32 %conv102) #11, !dbg !7073
  br label %if.end103, !dbg !7074

if.end103:                                        ; preds = %if.then89, %land.lhs.true, %if.then81
  %78 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7075
  call void @tty_wakeup(%struct.tty_struct* %78) #11, !dbg !7076
  br label %if.end104, !dbg !7077

if.end104:                                        ; preds = %if.end103, %if.then77
  br label %if.end128, !dbg !7078

if.else105:                                       ; preds = %if.else72
  %79 = load i8, i8* %status, align 1, !dbg !7079
  %conv106 = zext i8 %79 to i32, !dbg !7079
  %and107 = and i32 %conv106, 16, !dbg !7082
  %tobool108 = icmp ne i32 %and107, 0, !dbg !7082
  br i1 %tobool108, label %if.end127, label %if.then109, !dbg !7083

if.then109:                                       ; preds = %if.else105
  %80 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7084
  %hw_stopped110 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %80, i32 0, i32 26, !dbg !7086
  store i32 1, i32* %hw_stopped110, align 8, !dbg !7087
  %81 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7088
  %type111 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %81, i32 0, i32 9, !dbg !7090
  %82 = load i32, i32* %type111, align 4, !dbg !7090
  %cmp112 = icmp ne i32 %82, 4, !dbg !7091
  br i1 %cmp112, label %land.lhs.true114, label %if.end126, !dbg !7092

land.lhs.true114:                                 ; preds = %if.then109
  %83 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7093
  %board115 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %83, i32 0, i32 1, !dbg !7094
  %84 = load %struct.mxser_board*, %struct.mxser_board** %board115, align 8, !dbg !7094
  %chip_flag116 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %84, i32 0, i32 5, !dbg !7095
  %85 = load i32, i32* %chip_flag116, align 8, !dbg !7095
  %tobool117 = icmp ne i32 %85, 0, !dbg !7093
  br i1 %tobool117, label %if.end126, label %if.then118, !dbg !7096

if.then118:                                       ; preds = %land.lhs.true114
  %86 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7097
  %IER119 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %86, i32 0, i32 11, !dbg !7099
  %87 = load i32, i32* %IER119, align 4, !dbg !7100
  %and120 = and i32 %87, -3, !dbg !7100
  store i32 %and120, i32* %IER119, align 4, !dbg !7100
  %88 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7101
  %IER121 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %88, i32 0, i32 11, !dbg !7102
  %89 = load i32, i32* %IER121, align 4, !dbg !7102
  %conv122 = trunc i32 %89 to i8, !dbg !7101
  %90 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7103
  %ioaddr123 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %90, i32 0, i32 2, !dbg !7104
  %91 = load i64, i64* %ioaddr123, align 8, !dbg !7104
  %add124 = add i64 %91, 1, !dbg !7105
  %conv125 = trunc i64 %add124 to i32, !dbg !7103
  call void @outb(i8 zeroext %conv122, i32 %conv125) #11, !dbg !7106
  br label %if.end126, !dbg !7107

if.end126:                                        ; preds = %if.then118, %land.lhs.true114, %if.then109
  br label %if.end127, !dbg !7108

if.end127:                                        ; preds = %if.end126, %if.else105
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end104
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then69
  br label %if.end130, !dbg !7109

if.end130:                                        ; preds = %if.end129, %if.end52
  %92 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7110
  %MCR131 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %92, i32 0, i32 12, !dbg !7111
  %93 = load i32, i32* %MCR131, align 8, !dbg !7111
  %conv132 = trunc i32 %93 to i8, !dbg !7110
  %94 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7112
  %ioaddr133 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %94, i32 0, i32 2, !dbg !7113
  %95 = load i64, i64* %ioaddr133, align 8, !dbg !7113
  %add134 = add i64 %95, 4, !dbg !7114
  %conv135 = trunc i64 %add134 to i32, !dbg !7112
  call void @outb(i8 zeroext %conv132, i32 %conv135) #11, !dbg !7115
  %96 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7116
  %port136 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %96, i32 0, i32 0, !dbg !7117
  %97 = load i32, i32* %cflag, align 4, !dbg !7118
  %neg = xor i32 %97, -1, !dbg !7119
  %and137 = and i32 %neg, 2048, !dbg !7120
  %tobool138 = icmp ne i32 %and137, 0, !dbg !7119
  call void @tty_port_set_check_carrier(%struct.tty_port* %port136, i1 zeroext %tobool138) #11, !dbg !7121
  %98 = load i32, i32* %cflag, align 4, !dbg !7122
  %neg139 = xor i32 %98, -1, !dbg !7124
  %and140 = and i32 %neg139, 2048, !dbg !7125
  %tobool141 = icmp ne i32 %and140, 0, !dbg !7125
  br i1 %tobool141, label %if.then142, label %if.end145, !dbg !7126

if.then142:                                       ; preds = %if.end130
  %99 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7127
  %IER143 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %99, i32 0, i32 11, !dbg !7128
  %100 = load i32, i32* %IER143, align 4, !dbg !7129
  %or144 = or i32 %100, 8, !dbg !7129
  store i32 %or144, i32* %IER143, align 4, !dbg !7129
  br label %if.end145, !dbg !7127

if.end145:                                        ; preds = %if.then142, %if.end130
  %101 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7130
  %IER146 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %101, i32 0, i32 11, !dbg !7131
  %102 = load i32, i32* %IER146, align 4, !dbg !7131
  %conv147 = trunc i32 %102 to i8, !dbg !7130
  %103 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7132
  %ioaddr148 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %103, i32 0, i32 2, !dbg !7133
  %104 = load i64, i64* %ioaddr148, align 8, !dbg !7133
  %add149 = add i64 %104, 1, !dbg !7134
  %conv150 = trunc i64 %add149 to i32, !dbg !7132
  call void @outb(i8 zeroext %conv147, i32 %conv150) #11, !dbg !7135
  %105 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7136
  %read_status_mask = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %105, i32 0, i32 19, !dbg !7137
  store i32 35, i32* %read_status_mask, align 8, !dbg !7138
  %106 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7139
  %termios151 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %106, i32 0, i32 15, !dbg !7139
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios151, i32 0, i32 0, !dbg !7139
  %107 = load i32, i32* %c_iflag, align 8, !dbg !7139
  %and152 = and i32 %107, 16, !dbg !7139
  %tobool153 = icmp ne i32 %and152, 0, !dbg !7139
  br i1 %tobool153, label %if.then154, label %if.end157, !dbg !7141

if.then154:                                       ; preds = %if.end145
  %108 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7142
  %read_status_mask155 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %108, i32 0, i32 19, !dbg !7143
  %109 = load i32, i32* %read_status_mask155, align 8, !dbg !7144
  %or156 = or i32 %109, 12, !dbg !7144
  store i32 %or156, i32* %read_status_mask155, align 8, !dbg !7144
  br label %if.end157, !dbg !7142

if.end157:                                        ; preds = %if.then154, %if.end145
  %110 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7145
  %termios158 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %110, i32 0, i32 15, !dbg !7145
  %c_iflag159 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios158, i32 0, i32 0, !dbg !7145
  %111 = load i32, i32* %c_iflag159, align 8, !dbg !7145
  %and160 = and i32 %111, 2, !dbg !7145
  %tobool161 = icmp ne i32 %and160, 0, !dbg !7145
  br i1 %tobool161, label %if.then167, label %lor.lhs.false162, !dbg !7147

lor.lhs.false162:                                 ; preds = %if.end157
  %112 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7148
  %termios163 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %112, i32 0, i32 15, !dbg !7148
  %c_iflag164 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios163, i32 0, i32 0, !dbg !7148
  %113 = load i32, i32* %c_iflag164, align 8, !dbg !7148
  %and165 = and i32 %113, 8, !dbg !7148
  %tobool166 = icmp ne i32 %and165, 0, !dbg !7148
  br i1 %tobool166, label %if.then167, label %if.end170, !dbg !7149

if.then167:                                       ; preds = %lor.lhs.false162, %if.end157
  %114 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7150
  %read_status_mask168 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %114, i32 0, i32 19, !dbg !7151
  %115 = load i32, i32* %read_status_mask168, align 8, !dbg !7152
  %or169 = or i32 %115, 16, !dbg !7152
  store i32 %or169, i32* %read_status_mask168, align 8, !dbg !7152
  br label %if.end170, !dbg !7150

if.end170:                                        ; preds = %if.then167, %lor.lhs.false162
  %116 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7153
  %ignore_status_mask = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %116, i32 0, i32 20, !dbg !7154
  store i32 0, i32* %ignore_status_mask, align 4, !dbg !7155
  %117 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7156
  %termios171 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %117, i32 0, i32 15, !dbg !7156
  %c_iflag172 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios171, i32 0, i32 0, !dbg !7156
  %118 = load i32, i32* %c_iflag172, align 8, !dbg !7156
  %and173 = and i32 %118, 1, !dbg !7156
  %tobool174 = icmp ne i32 %and173, 0, !dbg !7156
  br i1 %tobool174, label %if.then175, label %if.end190, !dbg !7158

if.then175:                                       ; preds = %if.end170
  %119 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7159
  %ignore_status_mask176 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %119, i32 0, i32 20, !dbg !7161
  %120 = load i32, i32* %ignore_status_mask176, align 4, !dbg !7162
  %or177 = or i32 %120, 16, !dbg !7162
  store i32 %or177, i32* %ignore_status_mask176, align 4, !dbg !7162
  %121 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7163
  %read_status_mask178 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %121, i32 0, i32 19, !dbg !7164
  %122 = load i32, i32* %read_status_mask178, align 8, !dbg !7165
  %or179 = or i32 %122, 16, !dbg !7165
  store i32 %or179, i32* %read_status_mask178, align 8, !dbg !7165
  %123 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7166
  %termios180 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %123, i32 0, i32 15, !dbg !7166
  %c_iflag181 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios180, i32 0, i32 0, !dbg !7166
  %124 = load i32, i32* %c_iflag181, align 8, !dbg !7166
  %and182 = and i32 %124, 4, !dbg !7166
  %tobool183 = icmp ne i32 %and182, 0, !dbg !7166
  br i1 %tobool183, label %if.then184, label %if.end189, !dbg !7168

if.then184:                                       ; preds = %if.then175
  %125 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7169
  %ignore_status_mask185 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %125, i32 0, i32 20, !dbg !7171
  %126 = load i32, i32* %ignore_status_mask185, align 4, !dbg !7172
  %or186 = or i32 %126, 14, !dbg !7172
  store i32 %or186, i32* %ignore_status_mask185, align 4, !dbg !7172
  %127 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7173
  %read_status_mask187 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %127, i32 0, i32 19, !dbg !7174
  %128 = load i32, i32* %read_status_mask187, align 8, !dbg !7175
  %or188 = or i32 %128, 14, !dbg !7175
  store i32 %or188, i32* %read_status_mask187, align 8, !dbg !7175
  br label %if.end189, !dbg !7176

if.end189:                                        ; preds = %if.then184, %if.then175
  br label %if.end190, !dbg !7177

if.end190:                                        ; preds = %if.end189, %if.end170
  %129 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7178
  %board191 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %129, i32 0, i32 1, !dbg !7180
  %130 = load %struct.mxser_board*, %struct.mxser_board** %board191, align 8, !dbg !7180
  %chip_flag192 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %130, i32 0, i32 5, !dbg !7181
  %131 = load i32, i32* %chip_flag192, align 8, !dbg !7181
  %tobool193 = icmp ne i32 %131, 0, !dbg !7178
  br i1 %tobool193, label %if.then194, label %if.end220, !dbg !7182

if.then194:                                       ; preds = %if.end190
  %132 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7183
  %ioaddr195 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %132, i32 0, i32 2, !dbg !7185
  %133 = load i64, i64* %ioaddr195, align 8, !dbg !7185
  %134 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7186
  %termios196 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %134, i32 0, i32 15, !dbg !7186
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios196, i32 0, i32 5, !dbg !7186
  %arrayidx197 = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !7186
  %135 = load i8, i8* %arrayidx197, align 1, !dbg !7186
  call void @mxser_set_must_xon1_value(i64 %133, i8 zeroext %135) #11, !dbg !7187
  %136 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7188
  %ioaddr198 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %136, i32 0, i32 2, !dbg !7189
  %137 = load i64, i64* %ioaddr198, align 8, !dbg !7189
  %138 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7190
  %termios199 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %138, i32 0, i32 15, !dbg !7190
  %c_cc200 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios199, i32 0, i32 5, !dbg !7190
  %arrayidx201 = getelementptr [19 x i8], [19 x i8]* %c_cc200, i64 0, i64 9, !dbg !7190
  %139 = load i8, i8* %arrayidx201, align 1, !dbg !7190
  call void @mxser_set_must_xoff1_value(i64 %137, i8 zeroext %139) #11, !dbg !7191
  %140 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7192
  %termios202 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %140, i32 0, i32 15, !dbg !7192
  %c_iflag203 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios202, i32 0, i32 0, !dbg !7192
  %141 = load i32, i32* %c_iflag203, align 8, !dbg !7192
  %and204 = and i32 %141, 1024, !dbg !7192
  %tobool205 = icmp ne i32 %and204, 0, !dbg !7192
  br i1 %tobool205, label %if.then206, label %if.else208, !dbg !7194

if.then206:                                       ; preds = %if.then194
  %142 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7195
  %ioaddr207 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %142, i32 0, i32 2, !dbg !7197
  %143 = load i64, i64* %ioaddr207, align 8, !dbg !7197
  call void @mxser_enable_must_rx_software_flow_control(i64 %143) #11, !dbg !7198
  br label %if.end210, !dbg !7199

if.else208:                                       ; preds = %if.then194
  %144 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7200
  %ioaddr209 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %144, i32 0, i32 2, !dbg !7202
  %145 = load i64, i64* %ioaddr209, align 8, !dbg !7202
  call void @mxser_disable_must_rx_software_flow_control(i64 %145) #11, !dbg !7203
  br label %if.end210

if.end210:                                        ; preds = %if.else208, %if.then206
  %146 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7204
  %termios211 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %146, i32 0, i32 15, !dbg !7204
  %c_iflag212 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios211, i32 0, i32 0, !dbg !7204
  %147 = load i32, i32* %c_iflag212, align 8, !dbg !7204
  %and213 = and i32 %147, 4096, !dbg !7204
  %tobool214 = icmp ne i32 %and213, 0, !dbg !7204
  br i1 %tobool214, label %if.then215, label %if.else217, !dbg !7206

if.then215:                                       ; preds = %if.end210
  %148 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7207
  %ioaddr216 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %148, i32 0, i32 2, !dbg !7209
  %149 = load i64, i64* %ioaddr216, align 8, !dbg !7209
  call void @mxser_enable_must_tx_software_flow_control(i64 %149) #11, !dbg !7210
  br label %if.end219, !dbg !7211

if.else217:                                       ; preds = %if.end210
  %150 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7212
  %ioaddr218 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %150, i32 0, i32 2, !dbg !7214
  %151 = load i64, i64* %ioaddr218, align 8, !dbg !7214
  call void @mxser_disable_must_tx_software_flow_control(i64 %151) #11, !dbg !7215
  br label %if.end219

if.end219:                                        ; preds = %if.else217, %if.then215
  br label %if.end220, !dbg !7216

if.end220:                                        ; preds = %if.end219, %if.end190
  %152 = load i32, i32* %fcr, align 4, !dbg !7217
  %conv221 = trunc i32 %152 to i8, !dbg !7217
  %153 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7218
  %ioaddr222 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %153, i32 0, i32 2, !dbg !7219
  %154 = load i64, i64* %ioaddr222, align 8, !dbg !7219
  %add223 = add i64 %154, 2, !dbg !7220
  %conv224 = trunc i64 %add223 to i32, !dbg !7218
  call void @outb(i8 zeroext %conv221, i32 %conv224) #11, !dbg !7221
  %155 = load i32, i32* %cval, align 4, !dbg !7222
  %conv225 = trunc i32 %155 to i8, !dbg !7222
  %156 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7223
  %ioaddr226 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %156, i32 0, i32 2, !dbg !7224
  %157 = load i64, i64* %ioaddr226, align 8, !dbg !7224
  %add227 = add i64 %157, 3, !dbg !7225
  %conv228 = trunc i64 %add227 to i32, !dbg !7223
  call void @outb(i8 zeroext %conv225, i32 %conv228) #11, !dbg !7226
  br label %return, !dbg !7227

return:                                           ; preds = %if.end220, %if.then
  ret void, !dbg !7227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #3 !dbg !7228 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7232, metadata !DIExpression()), !dbg !7233
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  ret i1 true, !dbg !7236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #3 !dbg !7237 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  ret void, !dbg !7247
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_set_baud(%struct.tty_struct* %tty, i64 %newspd) #3 !dbg !7248 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %newspd.addr = alloca i64, align 8
  %info = alloca %struct.mxser_port*, align 8
  %quot = alloca i32, align 4
  %baud = alloca i32, align 4
  %cval = alloca i8, align 1
  %timeout = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7251, metadata !DIExpression()), !dbg !7252
  store i64 %newspd, i64* %newspd.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %newspd.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !7255, metadata !DIExpression()), !dbg !7256
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7257
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !7258
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7258
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !7257
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !7256
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !7259, metadata !DIExpression()), !dbg !7260
  store i32 0, i32* %quot, align 4, !dbg !7260
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !7261, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.declare(metadata i8* %cval, metadata !7263, metadata !DIExpression()), !dbg !7264
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !7265, metadata !DIExpression()), !dbg !7266
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7267
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 2, !dbg !7269
  %4 = load i64, i64* %ioaddr, align 8, !dbg !7269
  %tobool = icmp ne i64 %4, 0, !dbg !7267
  br i1 %tobool, label %if.end, label %if.then, !dbg !7270

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7271
  br label %return, !dbg !7271

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %newspd.addr, align 8, !dbg !7272
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7274
  %max_baud = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 4, !dbg !7275
  %7 = load i32, i32* %max_baud, align 8, !dbg !7275
  %conv = sext i32 %7 to i64, !dbg !7274
  %cmp = icmp sgt i64 %5, %conv, !dbg !7276
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7277

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !7278
  br label %return, !dbg !7278

if.end3:                                          ; preds = %if.end
  %8 = load i64, i64* %newspd.addr, align 8, !dbg !7279
  %cmp4 = icmp eq i64 %8, 134, !dbg !7281
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !7282

if.then6:                                         ; preds = %if.end3
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7283
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 8, !dbg !7285
  %10 = load i32, i32* %baud_base, align 8, !dbg !7285
  %mul = mul i32 2, %10, !dbg !7286
  %div = sdiv i32 %mul, 269, !dbg !7287
  store i32 %div, i32* %quot, align 4, !dbg !7288
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7289
  call void @tty_encode_baud_rate(%struct.tty_struct* %11, i32 134, i32 134) #11, !dbg !7290
  br label %if.end21, !dbg !7291

if.else:                                          ; preds = %if.end3
  %12 = load i64, i64* %newspd.addr, align 8, !dbg !7292
  %tobool7 = icmp ne i64 %12, 0, !dbg !7292
  br i1 %tobool7, label %if.then8, label %if.else19, !dbg !7294

if.then8:                                         ; preds = %if.else
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7295
  %baud_base9 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 8, !dbg !7297
  %14 = load i32, i32* %baud_base9, align 8, !dbg !7297
  %conv10 = sext i32 %14 to i64, !dbg !7295
  %15 = load i64, i64* %newspd.addr, align 8, !dbg !7298
  %div11 = sdiv i64 %conv10, %15, !dbg !7299
  %conv12 = trunc i64 %div11 to i32, !dbg !7295
  store i32 %conv12, i32* %quot, align 4, !dbg !7300
  %16 = load i32, i32* %quot, align 4, !dbg !7301
  %cmp13 = icmp eq i32 %16, 0, !dbg !7303
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7304

if.then15:                                        ; preds = %if.then8
  store i32 1, i32* %quot, align 4, !dbg !7305
  br label %if.end16, !dbg !7306

if.end16:                                         ; preds = %if.then15, %if.then8
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7307
  %baud_base17 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 8, !dbg !7308
  %18 = load i32, i32* %baud_base17, align 8, !dbg !7308
  %19 = load i32, i32* %quot, align 4, !dbg !7309
  %div18 = udiv i32 %18, %19, !dbg !7310
  store i32 %div18, i32* %baud, align 4, !dbg !7311
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7312
  %21 = load i32, i32* %baud, align 4, !dbg !7313
  %22 = load i32, i32* %baud, align 4, !dbg !7314
  call void @tty_encode_baud_rate(%struct.tty_struct* %20, i32 %21, i32 %22) #11, !dbg !7315
  br label %if.end20, !dbg !7316

if.else19:                                        ; preds = %if.else
  store i32 0, i32* %quot, align 4, !dbg !7317
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.end16
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then6
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7319
  %xmit_fifo_size = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 21, !dbg !7320
  %24 = load i32, i32* %xmit_fifo_size, align 8, !dbg !7320
  %conv22 = zext i32 %24 to i64, !dbg !7321
  %mul23 = mul i64 %conv22, 250, !dbg !7322
  %mul24 = mul i64 %mul23, 10, !dbg !7323
  %25 = load i32, i32* %quot, align 4, !dbg !7324
  %conv25 = zext i32 %25 to i64, !dbg !7324
  %mul26 = mul i64 %mul24, %conv25, !dbg !7325
  store i64 %mul26, i64* %timeout, align 8, !dbg !7326
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !7327, metadata !DIExpression()), !dbg !7329
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7329
  %baud_base27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 8, !dbg !7329
  %27 = load i32, i32* %baud_base27, align 8, !dbg !7329
  store i32 %27, i32* %__base, align 4, !dbg !7329
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !7330, metadata !DIExpression()), !dbg !7329
  %28 = load i64, i64* %timeout, align 8, !dbg !7329
  %29 = load i32, i32* %__base, align 4, !dbg !7329
  %conv28 = zext i32 %29 to i64, !dbg !7329
  %rem = urem i64 %28, %conv28, !dbg !7329
  %conv29 = trunc i64 %rem to i32, !dbg !7329
  store i32 %conv29, i32* %__rem, align 4, !dbg !7329
  %30 = load i64, i64* %timeout, align 8, !dbg !7329
  %31 = load i32, i32* %__base, align 4, !dbg !7329
  %conv30 = zext i32 %31 to i64, !dbg !7329
  %div31 = udiv i64 %30, %conv30, !dbg !7329
  store i64 %div31, i64* %timeout, align 8, !dbg !7329
  %32 = load i32, i32* %__rem, align 4, !dbg !7329
  store i32 %32, i32* %tmp, align 4, !dbg !7329
  %33 = load i32, i32* %tmp, align 4, !dbg !7329
  %34 = load i64, i64* %timeout, align 8, !dbg !7331
  %add = add i64 %34, 5, !dbg !7332
  %conv32 = trunc i64 %add to i32, !dbg !7331
  %35 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7333
  %timeout33 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 18, !dbg !7334
  store i32 %conv32, i32* %timeout33, align 4, !dbg !7335
  %36 = load i32, i32* %quot, align 4, !dbg !7336
  %tobool34 = icmp ne i32 %36, 0, !dbg !7336
  br i1 %tobool34, label %if.then35, label %if.else41, !dbg !7338

if.then35:                                        ; preds = %if.end21
  %37 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7339
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 12, !dbg !7341
  %38 = load i32, i32* %MCR, align 8, !dbg !7342
  %or = or i32 %38, 1, !dbg !7342
  store i32 %or, i32* %MCR, align 8, !dbg !7342
  %39 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7343
  %MCR36 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %39, i32 0, i32 12, !dbg !7344
  %40 = load i32, i32* %MCR36, align 8, !dbg !7344
  %conv37 = trunc i32 %40 to i8, !dbg !7343
  %41 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7345
  %ioaddr38 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 2, !dbg !7346
  %42 = load i64, i64* %ioaddr38, align 8, !dbg !7346
  %add39 = add i64 %42, 4, !dbg !7347
  %conv40 = trunc i64 %add39 to i32, !dbg !7345
  call void @outb(i8 zeroext %conv37, i32 %conv40) #11, !dbg !7348
  br label %if.end48, !dbg !7349

if.else41:                                        ; preds = %if.end21
  %43 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7350
  %MCR42 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 12, !dbg !7352
  %44 = load i32, i32* %MCR42, align 8, !dbg !7353
  %and = and i32 %44, -2, !dbg !7353
  store i32 %and, i32* %MCR42, align 8, !dbg !7353
  %45 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7354
  %MCR43 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 12, !dbg !7355
  %46 = load i32, i32* %MCR43, align 8, !dbg !7355
  %conv44 = trunc i32 %46 to i8, !dbg !7354
  %47 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7356
  %ioaddr45 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %47, i32 0, i32 2, !dbg !7357
  %48 = load i64, i64* %ioaddr45, align 8, !dbg !7357
  %add46 = add i64 %48, 4, !dbg !7358
  %conv47 = trunc i64 %add46 to i32, !dbg !7356
  call void @outb(i8 zeroext %conv44, i32 %conv47) #11, !dbg !7359
  store i32 0, i32* %retval, align 4, !dbg !7360
  br label %return, !dbg !7360

if.end48:                                         ; preds = %if.then35
  %49 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7361
  %ioaddr49 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %49, i32 0, i32 2, !dbg !7362
  %50 = load i64, i64* %ioaddr49, align 8, !dbg !7362
  %add50 = add i64 %50, 3, !dbg !7363
  %conv51 = trunc i64 %add50 to i32, !dbg !7361
  %call = call zeroext i8 @inb(i32 %conv51) #11, !dbg !7364
  store i8 %call, i8* %cval, align 1, !dbg !7365
  %51 = load i8, i8* %cval, align 1, !dbg !7366
  %conv52 = zext i8 %51 to i32, !dbg !7366
  %or53 = or i32 %conv52, 128, !dbg !7367
  %conv54 = trunc i32 %or53 to i8, !dbg !7366
  %52 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7368
  %ioaddr55 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %52, i32 0, i32 2, !dbg !7369
  %53 = load i64, i64* %ioaddr55, align 8, !dbg !7369
  %add56 = add i64 %53, 3, !dbg !7370
  %conv57 = trunc i64 %add56 to i32, !dbg !7368
  call void @outb(i8 zeroext %conv54, i32 %conv57) #11, !dbg !7371
  %54 = load i32, i32* %quot, align 4, !dbg !7372
  %and58 = and i32 %54, 255, !dbg !7373
  %conv59 = trunc i32 %and58 to i8, !dbg !7372
  %55 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7374
  %ioaddr60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %55, i32 0, i32 2, !dbg !7375
  %56 = load i64, i64* %ioaddr60, align 8, !dbg !7375
  %add61 = add i64 %56, 0, !dbg !7376
  %conv62 = trunc i64 %add61 to i32, !dbg !7374
  call void @outb(i8 zeroext %conv59, i32 %conv62) #11, !dbg !7377
  %57 = load i32, i32* %quot, align 4, !dbg !7378
  %shr = lshr i32 %57, 8, !dbg !7379
  %conv63 = trunc i32 %shr to i8, !dbg !7378
  %58 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7380
  %ioaddr64 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %58, i32 0, i32 2, !dbg !7381
  %59 = load i64, i64* %ioaddr64, align 8, !dbg !7381
  %add65 = add i64 %59, 1, !dbg !7382
  %conv66 = trunc i64 %add65 to i32, !dbg !7380
  call void @outb(i8 zeroext %conv63, i32 %conv66) #11, !dbg !7383
  %60 = load i8, i8* %cval, align 1, !dbg !7384
  %61 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7385
  %ioaddr67 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %61, i32 0, i32 2, !dbg !7386
  %62 = load i64, i64* %ioaddr67, align 8, !dbg !7386
  %add68 = add i64 %62, 3, !dbg !7387
  %conv69 = trunc i64 %add68 to i32, !dbg !7385
  call void @outb(i8 zeroext %60, i32 %conv69) #11, !dbg !7388
  %63 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7389
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %63, i32 0, i32 15, !dbg !7389
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !7389
  %64 = load i32, i32* %c_cflag, align 8, !dbg !7389
  %and70 = and i32 %64, 4111, !dbg !7389
  %cmp71 = icmp eq i32 %and70, 4096, !dbg !7391
  br i1 %cmp71, label %if.then73, label %if.else95, !dbg !7392

if.then73:                                        ; preds = %if.end48
  %65 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7393
  %baud_base74 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %65, i32 0, i32 8, !dbg !7395
  %66 = load i32, i32* %baud_base74, align 8, !dbg !7395
  %conv75 = sext i32 %66 to i64, !dbg !7393
  %67 = load i64, i64* %newspd.addr, align 8, !dbg !7396
  %rem76 = srem i64 %conv75, %67, !dbg !7397
  %conv77 = trunc i64 %rem76 to i32, !dbg !7393
  store i32 %conv77, i32* %quot, align 4, !dbg !7398
  %68 = load i32, i32* %quot, align 4, !dbg !7399
  %mul78 = mul i32 %68, 8, !dbg !7399
  store i32 %mul78, i32* %quot, align 4, !dbg !7399
  %69 = load i32, i32* %quot, align 4, !dbg !7400
  %conv79 = zext i32 %69 to i64, !dbg !7400
  %70 = load i64, i64* %newspd.addr, align 8, !dbg !7402
  %rem80 = srem i64 %conv79, %70, !dbg !7403
  %71 = load i64, i64* %newspd.addr, align 8, !dbg !7404
  %div81 = sdiv i64 %71, 2, !dbg !7405
  %cmp82 = icmp sgt i64 %rem80, %div81, !dbg !7406
  br i1 %cmp82, label %if.then84, label %if.else88, !dbg !7407

if.then84:                                        ; preds = %if.then73
  %72 = load i64, i64* %newspd.addr, align 8, !dbg !7408
  %73 = load i32, i32* %quot, align 4, !dbg !7410
  %conv85 = zext i32 %73 to i64, !dbg !7410
  %div86 = sdiv i64 %conv85, %72, !dbg !7410
  %conv87 = trunc i64 %div86 to i32, !dbg !7410
  store i32 %conv87, i32* %quot, align 4, !dbg !7410
  %74 = load i32, i32* %quot, align 4, !dbg !7411
  %inc = add i32 %74, 1, !dbg !7411
  store i32 %inc, i32* %quot, align 4, !dbg !7411
  br label %if.end92, !dbg !7412

if.else88:                                        ; preds = %if.then73
  %75 = load i64, i64* %newspd.addr, align 8, !dbg !7413
  %76 = load i32, i32* %quot, align 4, !dbg !7414
  %conv89 = zext i32 %76 to i64, !dbg !7414
  %div90 = sdiv i64 %conv89, %75, !dbg !7414
  %conv91 = trunc i64 %div90 to i32, !dbg !7414
  store i32 %conv91, i32* %quot, align 4, !dbg !7414
  br label %if.end92

if.end92:                                         ; preds = %if.else88, %if.then84
  %77 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7415
  %ioaddr93 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %77, i32 0, i32 2, !dbg !7416
  %78 = load i64, i64* %ioaddr93, align 8, !dbg !7416
  %79 = load i32, i32* %quot, align 4, !dbg !7417
  %conv94 = trunc i32 %79 to i8, !dbg !7417
  call void @mxser_set_must_enum_value(i64 %78, i8 zeroext %conv94) #11, !dbg !7418
  br label %if.end97, !dbg !7419

if.else95:                                        ; preds = %if.end48
  %80 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !7420
  %ioaddr96 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %80, i32 0, i32 2, !dbg !7421
  %81 = load i64, i64* %ioaddr96, align 8, !dbg !7421
  call void @mxser_set_must_enum_value(i64 %81, i8 zeroext 0) #11, !dbg !7422
  br label %if.end97

if.end97:                                         ; preds = %if.else95, %if.end92
  store i32 0, i32* %retval, align 4, !dbg !7423
  br label %return, !dbg !7423

return:                                           ; preds = %if.end97, %if.else41, %if.then2, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !7424
  ret i32 %82, !dbg !7424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_get_baud_rate(%struct.tty_struct* %tty) #3 !dbg !7425 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7428, metadata !DIExpression()), !dbg !7429
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7430
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 15, !dbg !7431
  %call = call i32 @tty_termios_baud_rate(%struct.ktermios* %termios) #11, !dbg !7432
  ret i32 %call, !dbg !7433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_set_must_fifo_value(%struct.mxser_port* %info) #3 !dbg !7434 {
entry:
  %info.addr = alloca %struct.mxser_port*, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store %struct.mxser_port* %info, %struct.mxser_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7437, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7439, metadata !DIExpression()), !dbg !7440
  %0 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7441
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %0, i32 0, i32 2, !dbg !7442
  %1 = load i64, i64* %ioaddr, align 8, !dbg !7442
  %add = add i64 %1, 3, !dbg !7443
  %conv = trunc i64 %add to i32, !dbg !7441
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7444
  store i8 %call, i8* %oldlcr, align 1, !dbg !7445
  %2 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7446
  %ioaddr1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %2, i32 0, i32 2, !dbg !7447
  %3 = load i64, i64* %ioaddr1, align 8, !dbg !7447
  %add2 = add i64 %3, 3, !dbg !7448
  %conv3 = trunc i64 %add2 to i32, !dbg !7446
  call void @outb(i8 zeroext -65, i32 %conv3) #11, !dbg !7449
  %4 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7450
  %ioaddr4 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %4, i32 0, i32 2, !dbg !7451
  %5 = load i64, i64* %ioaddr4, align 8, !dbg !7451
  %add5 = add i64 %5, 2, !dbg !7452
  %conv6 = trunc i64 %add5 to i32, !dbg !7450
  %call7 = call zeroext i8 @inb(i32 %conv6) #11, !dbg !7453
  store i8 %call7, i8* %efr, align 1, !dbg !7454
  %6 = load i8, i8* %efr, align 1, !dbg !7455
  %conv8 = zext i8 %6 to i32, !dbg !7455
  %and = and i32 %conv8, -193, !dbg !7455
  %conv9 = trunc i32 %and to i8, !dbg !7455
  store i8 %conv9, i8* %efr, align 1, !dbg !7455
  %7 = load i8, i8* %efr, align 1, !dbg !7456
  %conv10 = zext i8 %7 to i32, !dbg !7456
  %or = or i32 %conv10, 64, !dbg !7456
  %conv11 = trunc i32 %or to i8, !dbg !7456
  store i8 %conv11, i8* %efr, align 1, !dbg !7456
  %8 = load i8, i8* %efr, align 1, !dbg !7457
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7458
  %ioaddr12 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 2, !dbg !7459
  %10 = load i64, i64* %ioaddr12, align 8, !dbg !7459
  %add13 = add i64 %10, 2, !dbg !7460
  %conv14 = trunc i64 %add13 to i32, !dbg !7458
  call void @outb(i8 zeroext %8, i32 %conv14) #11, !dbg !7461
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7462
  %rx_high_water = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 5, !dbg !7463
  %12 = load i32, i32* %rx_high_water, align 4, !dbg !7463
  %conv15 = trunc i32 %12 to i8, !dbg !7464
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7465
  %ioaddr16 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !7466
  %14 = load i64, i64* %ioaddr16, align 8, !dbg !7466
  %add17 = add i64 %14, 5, !dbg !7467
  %conv18 = trunc i64 %add17 to i32, !dbg !7465
  call void @outb(i8 zeroext %conv15, i32 %conv18) #11, !dbg !7468
  %15 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7469
  %rx_trigger = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 6, !dbg !7470
  %16 = load i32, i32* %rx_trigger, align 8, !dbg !7470
  %conv19 = trunc i32 %16 to i8, !dbg !7471
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7472
  %ioaddr20 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 2, !dbg !7473
  %18 = load i64, i64* %ioaddr20, align 8, !dbg !7473
  %add21 = add i64 %18, 6, !dbg !7474
  %conv22 = trunc i64 %add21 to i32, !dbg !7472
  call void @outb(i8 zeroext %conv19, i32 %conv22) #11, !dbg !7475
  %19 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7476
  %rx_low_water = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 7, !dbg !7477
  %20 = load i32, i32* %rx_low_water, align 4, !dbg !7477
  %conv23 = trunc i32 %20 to i8, !dbg !7478
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7479
  %ioaddr24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 2, !dbg !7480
  %22 = load i64, i64* %ioaddr24, align 8, !dbg !7480
  %add25 = add i64 %22, 4, !dbg !7481
  %conv26 = trunc i64 %add25 to i32, !dbg !7479
  call void @outb(i8 zeroext %conv23, i32 %conv26) #11, !dbg !7482
  %23 = load i8, i8* %oldlcr, align 1, !dbg !7483
  %24 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !7484
  %ioaddr27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %24, i32 0, i32 2, !dbg !7485
  %25 = load i64, i64* %ioaddr27, align 8, !dbg !7485
  %add28 = add i64 %25, 3, !dbg !7486
  %conv29 = trunc i64 %add28 to i32, !dbg !7484
  call void @outb(i8 zeroext %23, i32 %conv29) #11, !dbg !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_cts_flow(%struct.tty_port* %port, i1 zeroext %val) #3 !dbg !7489 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7492, metadata !DIExpression()), !dbg !7493
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !7494, metadata !DIExpression()), !dbg !7495
  %0 = load i8, i8* %val.addr, align 1, !dbg !7496
  %tobool = trunc i8 %0 to i1, !dbg !7496
  br i1 %tobool, label %if.then, label %if.else, !dbg !7498

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7499
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !7500
  call void @set_bit(i64 3, i64* %iflags) #11, !dbg !7501
  br label %if.end, !dbg !7501

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7502
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !7503
  call void @clear_bit(i64 3, i64* %iflags1) #11, !dbg !7504
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7505
}

; Function Attrs: noredzone
declare dso_local void @tty_wakeup(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_check_carrier(%struct.tty_port* %port, i1 zeroext %val) #3 !dbg !7506 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !7509, metadata !DIExpression()), !dbg !7510
  %0 = load i8, i8* %val.addr, align 1, !dbg !7511
  %tobool = trunc i8 %0 to i1, !dbg !7511
  br i1 %tobool, label %if.then, label %if.else, !dbg !7513

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7514
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !7515
  call void @set_bit(i64 4, i64* %iflags) #11, !dbg !7516
  br label %if.end, !dbg !7516

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7517
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !7518
  call void @clear_bit(i64 4, i64* %iflags1) #11, !dbg !7519
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_set_must_xoff1_value(i64 %baseio, i8 zeroext %value) #3 !dbg !7521 {
entry:
  %baseio.addr = alloca i64, align 8
  %value.addr = alloca i8, align 1
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7524, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7526, metadata !DIExpression()), !dbg !7527
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7528, metadata !DIExpression()), !dbg !7529
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7530
  %add = add i64 %0, 3, !dbg !7531
  %conv = trunc i64 %add to i32, !dbg !7530
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7532
  store i8 %call, i8* %oldlcr, align 1, !dbg !7533
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7534
  %add1 = add i64 %1, 3, !dbg !7535
  %conv2 = trunc i64 %add1 to i32, !dbg !7534
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7536
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7537
  %add3 = add i64 %2, 2, !dbg !7538
  %conv4 = trunc i64 %add3 to i32, !dbg !7537
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7539
  store i8 %call5, i8* %efr, align 1, !dbg !7540
  %3 = load i8, i8* %efr, align 1, !dbg !7541
  %conv6 = zext i8 %3 to i32, !dbg !7541
  %and = and i32 %conv6, -193, !dbg !7541
  %conv7 = trunc i32 %and to i8, !dbg !7541
  store i8 %conv7, i8* %efr, align 1, !dbg !7541
  %4 = load i8, i8* %efr, align 1, !dbg !7542
  %conv8 = zext i8 %4 to i32, !dbg !7542
  %conv9 = trunc i32 %conv8 to i8, !dbg !7542
  store i8 %conv9, i8* %efr, align 1, !dbg !7542
  %5 = load i8, i8* %efr, align 1, !dbg !7543
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !7544
  %add10 = add i64 %6, 2, !dbg !7545
  %conv11 = trunc i64 %add10 to i32, !dbg !7544
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !7546
  %7 = load i8, i8* %value.addr, align 1, !dbg !7547
  %8 = load i64, i64* %baseio.addr, align 8, !dbg !7548
  %add12 = add i64 %8, 6, !dbg !7549
  %conv13 = trunc i64 %add12 to i32, !dbg !7548
  call void @outb(i8 zeroext %7, i32 %conv13) #11, !dbg !7550
  %9 = load i8, i8* %oldlcr, align 1, !dbg !7551
  %10 = load i64, i64* %baseio.addr, align 8, !dbg !7552
  %add14 = add i64 %10, 3, !dbg !7553
  %conv15 = trunc i64 %add14 to i32, !dbg !7552
  call void @outb(i8 zeroext %9, i32 %conv15) #11, !dbg !7554
  ret void, !dbg !7555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_enable_must_rx_software_flow_control(i64 %baseio) #3 !dbg !7556 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7559, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7563
  %add = add i64 %0, 3, !dbg !7564
  %conv = trunc i64 %add to i32, !dbg !7563
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7565
  store i8 %call, i8* %oldlcr, align 1, !dbg !7566
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7567
  %add1 = add i64 %1, 3, !dbg !7568
  %conv2 = trunc i64 %add1 to i32, !dbg !7567
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7569
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7570
  %add3 = add i64 %2, 2, !dbg !7571
  %conv4 = trunc i64 %add3 to i32, !dbg !7570
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7572
  store i8 %call5, i8* %efr, align 1, !dbg !7573
  %3 = load i8, i8* %efr, align 1, !dbg !7574
  %conv6 = zext i8 %3 to i32, !dbg !7574
  %and = and i32 %conv6, -4, !dbg !7574
  %conv7 = trunc i32 %and to i8, !dbg !7574
  store i8 %conv7, i8* %efr, align 1, !dbg !7574
  %4 = load i8, i8* %efr, align 1, !dbg !7575
  %conv8 = zext i8 %4 to i32, !dbg !7575
  %or = or i32 %conv8, 2, !dbg !7575
  %conv9 = trunc i32 %or to i8, !dbg !7575
  store i8 %conv9, i8* %efr, align 1, !dbg !7575
  %5 = load i8, i8* %efr, align 1, !dbg !7576
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !7577
  %add10 = add i64 %6, 2, !dbg !7578
  %conv11 = trunc i64 %add10 to i32, !dbg !7577
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !7579
  %7 = load i8, i8* %oldlcr, align 1, !dbg !7580
  %8 = load i64, i64* %baseio.addr, align 8, !dbg !7581
  %add12 = add i64 %8, 3, !dbg !7582
  %conv13 = trunc i64 %add12 to i32, !dbg !7581
  call void @outb(i8 zeroext %7, i32 %conv13) #11, !dbg !7583
  ret void, !dbg !7584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_disable_must_rx_software_flow_control(i64 %baseio) #3 !dbg !7585 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7590, metadata !DIExpression()), !dbg !7591
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7592
  %add = add i64 %0, 3, !dbg !7593
  %conv = trunc i64 %add to i32, !dbg !7592
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7594
  store i8 %call, i8* %oldlcr, align 1, !dbg !7595
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7596
  %add1 = add i64 %1, 3, !dbg !7597
  %conv2 = trunc i64 %add1 to i32, !dbg !7596
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7598
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7599
  %add3 = add i64 %2, 2, !dbg !7600
  %conv4 = trunc i64 %add3 to i32, !dbg !7599
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7601
  store i8 %call5, i8* %efr, align 1, !dbg !7602
  %3 = load i8, i8* %efr, align 1, !dbg !7603
  %conv6 = zext i8 %3 to i32, !dbg !7603
  %and = and i32 %conv6, -4, !dbg !7603
  %conv7 = trunc i32 %and to i8, !dbg !7603
  store i8 %conv7, i8* %efr, align 1, !dbg !7603
  %4 = load i8, i8* %efr, align 1, !dbg !7604
  %5 = load i64, i64* %baseio.addr, align 8, !dbg !7605
  %add8 = add i64 %5, 2, !dbg !7606
  %conv9 = trunc i64 %add8 to i32, !dbg !7605
  call void @outb(i8 zeroext %4, i32 %conv9) #11, !dbg !7607
  %6 = load i8, i8* %oldlcr, align 1, !dbg !7608
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !7609
  %add10 = add i64 %7, 3, !dbg !7610
  %conv11 = trunc i64 %add10 to i32, !dbg !7609
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !7611
  ret void, !dbg !7612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_enable_must_tx_software_flow_control(i64 %baseio) #3 !dbg !7613 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7614, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7616, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7618, metadata !DIExpression()), !dbg !7619
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7620
  %add = add i64 %0, 3, !dbg !7621
  %conv = trunc i64 %add to i32, !dbg !7620
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7622
  store i8 %call, i8* %oldlcr, align 1, !dbg !7623
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7624
  %add1 = add i64 %1, 3, !dbg !7625
  %conv2 = trunc i64 %add1 to i32, !dbg !7624
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7626
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7627
  %add3 = add i64 %2, 2, !dbg !7628
  %conv4 = trunc i64 %add3 to i32, !dbg !7627
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7629
  store i8 %call5, i8* %efr, align 1, !dbg !7630
  %3 = load i8, i8* %efr, align 1, !dbg !7631
  %conv6 = zext i8 %3 to i32, !dbg !7631
  %and = and i32 %conv6, -13, !dbg !7631
  %conv7 = trunc i32 %and to i8, !dbg !7631
  store i8 %conv7, i8* %efr, align 1, !dbg !7631
  %4 = load i8, i8* %efr, align 1, !dbg !7632
  %conv8 = zext i8 %4 to i32, !dbg !7632
  %or = or i32 %conv8, 8, !dbg !7632
  %conv9 = trunc i32 %or to i8, !dbg !7632
  store i8 %conv9, i8* %efr, align 1, !dbg !7632
  %5 = load i8, i8* %efr, align 1, !dbg !7633
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !7634
  %add10 = add i64 %6, 2, !dbg !7635
  %conv11 = trunc i64 %add10 to i32, !dbg !7634
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !7636
  %7 = load i8, i8* %oldlcr, align 1, !dbg !7637
  %8 = load i64, i64* %baseio.addr, align 8, !dbg !7638
  %add12 = add i64 %8, 3, !dbg !7639
  %conv13 = trunc i64 %add12 to i32, !dbg !7638
  call void @outb(i8 zeroext %7, i32 %conv13) #11, !dbg !7640
  ret void, !dbg !7641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_disable_must_tx_software_flow_control(i64 %baseio) #3 !dbg !7642 {
entry:
  %baseio.addr = alloca i64, align 8
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7643, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7647, metadata !DIExpression()), !dbg !7648
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7649
  %add = add i64 %0, 3, !dbg !7650
  %conv = trunc i64 %add to i32, !dbg !7649
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7651
  store i8 %call, i8* %oldlcr, align 1, !dbg !7652
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7653
  %add1 = add i64 %1, 3, !dbg !7654
  %conv2 = trunc i64 %add1 to i32, !dbg !7653
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7655
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7656
  %add3 = add i64 %2, 2, !dbg !7657
  %conv4 = trunc i64 %add3 to i32, !dbg !7656
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7658
  store i8 %call5, i8* %efr, align 1, !dbg !7659
  %3 = load i8, i8* %efr, align 1, !dbg !7660
  %conv6 = zext i8 %3 to i32, !dbg !7660
  %and = and i32 %conv6, -13, !dbg !7660
  %conv7 = trunc i32 %and to i8, !dbg !7660
  store i8 %conv7, i8* %efr, align 1, !dbg !7660
  %4 = load i8, i8* %efr, align 1, !dbg !7661
  %5 = load i64, i64* %baseio.addr, align 8, !dbg !7662
  %add8 = add i64 %5, 2, !dbg !7663
  %conv9 = trunc i64 %add8 to i32, !dbg !7662
  call void @outb(i8 zeroext %4, i32 %conv9) #11, !dbg !7664
  %6 = load i8, i8* %oldlcr, align 1, !dbg !7665
  %7 = load i64, i64* %baseio.addr, align 8, !dbg !7666
  %add10 = add i64 %7, 3, !dbg !7667
  %conv11 = trunc i64 %add10 to i32, !dbg !7666
  call void @outb(i8 zeroext %6, i32 %conv11) #11, !dbg !7668
  ret void, !dbg !7669
}

; Function Attrs: noredzone
declare dso_local void @tty_encode_baud_rate(%struct.tty_struct*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_set_must_enum_value(i64 %baseio, i8 zeroext %value) #3 !dbg !7670 {
entry:
  %baseio.addr = alloca i64, align 8
  %value.addr = alloca i8, align 1
  %oldlcr = alloca i8, align 1
  %efr = alloca i8, align 1
  store i64 %baseio, i64* %baseio.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %baseio.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i8* %oldlcr, metadata !7675, metadata !DIExpression()), !dbg !7676
  call void @llvm.dbg.declare(metadata i8* %efr, metadata !7677, metadata !DIExpression()), !dbg !7678
  %0 = load i64, i64* %baseio.addr, align 8, !dbg !7679
  %add = add i64 %0, 3, !dbg !7680
  %conv = trunc i64 %add to i32, !dbg !7679
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7681
  store i8 %call, i8* %oldlcr, align 1, !dbg !7682
  %1 = load i64, i64* %baseio.addr, align 8, !dbg !7683
  %add1 = add i64 %1, 3, !dbg !7684
  %conv2 = trunc i64 %add1 to i32, !dbg !7683
  call void @outb(i8 zeroext -65, i32 %conv2) #11, !dbg !7685
  %2 = load i64, i64* %baseio.addr, align 8, !dbg !7686
  %add3 = add i64 %2, 2, !dbg !7687
  %conv4 = trunc i64 %add3 to i32, !dbg !7686
  %call5 = call zeroext i8 @inb(i32 %conv4) #11, !dbg !7688
  store i8 %call5, i8* %efr, align 1, !dbg !7689
  %3 = load i8, i8* %efr, align 1, !dbg !7690
  %conv6 = zext i8 %3 to i32, !dbg !7690
  %and = and i32 %conv6, -193, !dbg !7690
  %conv7 = trunc i32 %and to i8, !dbg !7690
  store i8 %conv7, i8* %efr, align 1, !dbg !7690
  %4 = load i8, i8* %efr, align 1, !dbg !7691
  %conv8 = zext i8 %4 to i32, !dbg !7691
  %or = or i32 %conv8, 128, !dbg !7691
  %conv9 = trunc i32 %or to i8, !dbg !7691
  store i8 %conv9, i8* %efr, align 1, !dbg !7691
  %5 = load i8, i8* %efr, align 1, !dbg !7692
  %6 = load i64, i64* %baseio.addr, align 8, !dbg !7693
  %add10 = add i64 %6, 2, !dbg !7694
  %conv11 = trunc i64 %add10 to i32, !dbg !7693
  call void @outb(i8 zeroext %5, i32 %conv11) #11, !dbg !7695
  %7 = load i8, i8* %value.addr, align 1, !dbg !7696
  %8 = load i64, i64* %baseio.addr, align 8, !dbg !7697
  %add12 = add i64 %8, 4, !dbg !7698
  %conv13 = trunc i64 %add12 to i32, !dbg !7697
  call void @outb(i8 zeroext %7, i32 %conv13) #11, !dbg !7699
  %9 = load i8, i8* %oldlcr, align 1, !dbg !7700
  %10 = load i64, i64* %baseio.addr, align 8, !dbg !7701
  %add14 = add i64 %10, 3, !dbg !7702
  %conv15 = trunc i64 %add14 to i32, !dbg !7701
  call void @outb(i8 zeroext %9, i32 %conv15) #11, !dbg !7703
  ret void, !dbg !7704
}

; Function Attrs: noredzone
declare dso_local i32 @tty_termios_baud_rate(%struct.ktermios*) #2

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_struct* @tty_port_tty_get(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_initialized(%struct.tty_port* %port) #3 !dbg !7705 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !7708, metadata !DIExpression()), !dbg !7709
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !7710
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !7711
  %call = call zeroext i1 @test_bit(i64 0, i64* %iflags) #11, !dbg !7712
  ret i1 %call, !dbg !7713
}

; Function Attrs: noredzone
declare dso_local void @tty_kref_put(%struct.tty_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_receive_chars(%struct.tty_struct* %tty, %struct.mxser_port* %port, i32* %status) #3 !dbg !7714 {
entry:
  %lock.addr.i142 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i142, metadata !5986, metadata !DIExpression()), !dbg !7717
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5976, metadata !DIExpression()), !dbg !7719
  %tty.addr = alloca %struct.tty_struct*, align 8
  %port.addr = alloca %struct.mxser_port*, align 8
  %status.addr = alloca i32*, align 8
  %ch = alloca i8, align 1
  %gdl = alloca i8, align 1
  %ignored = alloca i32, align 4
  %cnt = alloca i32, align 4
  %recv_room = alloca i32, align 4
  %max = alloca i32, align 4
  %flag = alloca i8, align 1
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store %struct.mxser_port* %port, %struct.mxser_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %port.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !7727, metadata !DIExpression()), !dbg !7728
  call void @llvm.dbg.declare(metadata i8* %gdl, metadata !7729, metadata !DIExpression()), !dbg !7730
  call void @llvm.dbg.declare(metadata i32* %ignored, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i32 0, i32* %ignored, align 4, !dbg !7732
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !7733, metadata !DIExpression()), !dbg !7734
  store i32 0, i32* %cnt, align 4, !dbg !7734
  call void @llvm.dbg.declare(metadata i32* %recv_room, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7737, metadata !DIExpression()), !dbg !7738
  store i32 256, i32* %max, align 4, !dbg !7738
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7739
  %receive_room = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 29, !dbg !7740
  %1 = load i32, i32* %receive_room, align 8, !dbg !7740
  store i32 %1, i32* %recv_room, align 4, !dbg !7741
  %2 = load i32, i32* %recv_room, align 4, !dbg !7742
  %cmp = icmp eq i32 %2, 0, !dbg !7744
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7745

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7746
  %ldisc_stop_rx = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 14, !dbg !7747
  %4 = load i8, i8* %ldisc_stop_rx, align 1, !dbg !7747
  %tobool = icmp ne i8 %4, 0, !dbg !7746
  br i1 %tobool, label %if.end, label %if.then, !dbg !7748

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7749
  call void @mxser_stoprx(%struct.tty_struct* %5) #11, !dbg !7750
  br label %if.end, !dbg !7750

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7751
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 1, !dbg !7753
  %7 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !7753
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %7, i32 0, i32 5, !dbg !7754
  %8 = load i32, i32* %chip_flag, align 8, !dbg !7754
  %cmp1 = icmp ne i32 %8, 0, !dbg !7755
  br i1 %cmp1, label %if.then2, label %if.end43, !dbg !7756

if.then2:                                         ; preds = %if.end
  %9 = load i32*, i32** %status.addr, align 8, !dbg !7757
  %10 = load i32, i32* %9, align 4, !dbg !7760
  %and = and i32 %10, 30, !dbg !7761
  %tobool3 = icmp ne i32 %and, 0, !dbg !7761
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7762

if.then4:                                         ; preds = %if.then2
  br label %intr_old, !dbg !7763

if.end5:                                          ; preds = %if.then2
  %11 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7764
  %board6 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 1, !dbg !7766
  %12 = load %struct.mxser_board*, %struct.mxser_board** %board6, align 8, !dbg !7766
  %chip_flag7 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %12, i32 0, i32 5, !dbg !7767
  %13 = load i32, i32* %chip_flag7, align 8, !dbg !7767
  %cmp8 = icmp eq i32 %13, 2, !dbg !7768
  br i1 %cmp8, label %land.lhs.true9, label %if.end13, !dbg !7769

land.lhs.true9:                                   ; preds = %if.end5
  %14 = load i32*, i32** %status.addr, align 8, !dbg !7770
  %15 = load i32, i32* %14, align 4, !dbg !7771
  %and10 = and i32 %15, 128, !dbg !7772
  %tobool11 = icmp ne i32 %and10, 0, !dbg !7772
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7773

if.then12:                                        ; preds = %land.lhs.true9
  br label %intr_old, !dbg !7774

if.end13:                                         ; preds = %land.lhs.true9, %if.end5
  %16 = load i32*, i32** %status.addr, align 8, !dbg !7775
  %17 = load i32, i32* %16, align 4, !dbg !7777
  %and14 = and i32 %17, 128, !dbg !7778
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7778
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7779

if.then16:                                        ; preds = %if.end13
  br label %intr_old, !dbg !7780

if.end17:                                         ; preds = %if.end13
  %18 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7781
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 2, !dbg !7782
  %19 = load i64, i64* %ioaddr, align 8, !dbg !7782
  %add = add i64 %19, 7, !dbg !7783
  %conv = trunc i64 %add to i32, !dbg !7781
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7784
  store i8 %call, i8* %gdl, align 1, !dbg !7785
  %20 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7786
  %board18 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 1, !dbg !7788
  %21 = load %struct.mxser_board*, %struct.mxser_board** %board18, align 8, !dbg !7788
  %chip_flag19 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %21, i32 0, i32 5, !dbg !7789
  %22 = load i32, i32* %chip_flag19, align 8, !dbg !7789
  %cmp20 = icmp eq i32 %22, 1, !dbg !7790
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !7791

if.then22:                                        ; preds = %if.end17
  %23 = load i8, i8* %gdl, align 1, !dbg !7792
  %conv23 = zext i8 %23 to i32, !dbg !7792
  %and24 = and i32 %conv23, 127, !dbg !7792
  %conv25 = trunc i32 %and24 to i8, !dbg !7792
  store i8 %conv25, i8* %gdl, align 1, !dbg !7792
  br label %if.end26, !dbg !7793

if.end26:                                         ; preds = %if.then22, %if.end17
  %24 = load i8, i8* %gdl, align 1, !dbg !7794
  %conv27 = zext i8 %24 to i32, !dbg !7794
  %25 = load i32, i32* %recv_room, align 4, !dbg !7796
  %cmp28 = icmp sge i32 %conv27, %25, !dbg !7797
  br i1 %cmp28, label %if.then30, label %if.end35, !dbg !7798

if.then30:                                        ; preds = %if.end26
  %26 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7799
  %ldisc_stop_rx31 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 14, !dbg !7802
  %27 = load i8, i8* %ldisc_stop_rx31, align 1, !dbg !7802
  %tobool32 = icmp ne i8 %27, 0, !dbg !7799
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !7803

if.then33:                                        ; preds = %if.then30
  %28 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7804
  call void @mxser_stoprx(%struct.tty_struct* %28) #11, !dbg !7805
  br label %if.end34, !dbg !7805

if.end34:                                         ; preds = %if.then33, %if.then30
  br label %if.end35, !dbg !7806

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %while.cond, !dbg !7807

while.cond:                                       ; preds = %while.body, %if.end35
  %29 = load i8, i8* %gdl, align 1, !dbg !7808
  %dec = add i8 %29, -1, !dbg !7808
  store i8 %dec, i8* %gdl, align 1, !dbg !7808
  %tobool36 = icmp ne i8 %29, 0, !dbg !7807
  br i1 %tobool36, label %while.body, label %while.end, !dbg !7807

while.body:                                       ; preds = %while.cond
  %30 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7809
  %ioaddr37 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 2, !dbg !7811
  %31 = load i64, i64* %ioaddr37, align 8, !dbg !7811
  %add38 = add i64 %31, 0, !dbg !7812
  %conv39 = trunc i64 %add38 to i32, !dbg !7809
  %call40 = call zeroext i8 @inb(i32 %conv39) #11, !dbg !7813
  store i8 %call40, i8* %ch, align 1, !dbg !7814
  %32 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7815
  %port41 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 0, !dbg !7816
  %33 = load i8, i8* %ch, align 1, !dbg !7817
  %call42 = call i32 @tty_insert_flip_char(%struct.tty_port* %port41, i8 zeroext %33, i8 signext 0) #11, !dbg !7818
  %34 = load i32, i32* %cnt, align 4, !dbg !7819
  %inc = add i32 %34, 1, !dbg !7819
  store i32 %inc, i32* %cnt, align 4, !dbg !7819
  br label %while.cond, !dbg !7807, !llvm.loop !7820

while.end:                                        ; preds = %while.cond
  br label %end_intr, !dbg !7822

if.end43:                                         ; preds = %if.end
  br label %intr_old, !dbg !7823

intr_old:                                         ; preds = %if.end43, %if.then16, %if.then12, %if.then4
  call void @llvm.dbg.label(metadata !7824), !dbg !7825
  br label %do.body, !dbg !7826

do.body:                                          ; preds = %do.cond, %intr_old
  %35 = load i32, i32* %max, align 4, !dbg !7827
  %dec44 = add i32 %35, -1, !dbg !7827
  store i32 %dec44, i32* %max, align 4, !dbg !7827
  %cmp45 = icmp slt i32 %35, 0, !dbg !7830
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !7831

if.then47:                                        ; preds = %do.body
  br label %do.end, !dbg !7832

if.end48:                                         ; preds = %do.body
  %36 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7833
  %ioaddr49 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %36, i32 0, i32 2, !dbg !7834
  %37 = load i64, i64* %ioaddr49, align 8, !dbg !7834
  %add50 = add i64 %37, 0, !dbg !7835
  %conv51 = trunc i64 %add50 to i32, !dbg !7833
  %call52 = call zeroext i8 @inb(i32 %conv51) #11, !dbg !7836
  store i8 %call52, i8* %ch, align 1, !dbg !7837
  %38 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7838
  %board53 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %38, i32 0, i32 1, !dbg !7840
  %39 = load %struct.mxser_board*, %struct.mxser_board** %board53, align 8, !dbg !7840
  %chip_flag54 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %39, i32 0, i32 5, !dbg !7841
  %40 = load i32, i32* %chip_flag54, align 8, !dbg !7841
  %tobool55 = icmp ne i32 %40, 0, !dbg !7838
  br i1 %tobool55, label %land.lhs.true56, label %if.end63, !dbg !7842

land.lhs.true56:                                  ; preds = %if.end48
  %41 = load i32*, i32** %status.addr, align 8, !dbg !7843
  %42 = load i32, i32* %41, align 4, !dbg !7844
  %and57 = and i32 %42, 2, !dbg !7845
  %tobool58 = icmp ne i32 %and57, 0, !dbg !7845
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !7846

if.then59:                                        ; preds = %land.lhs.true56
  %43 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7847
  %ioaddr60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 2, !dbg !7848
  %44 = load i64, i64* %ioaddr60, align 8, !dbg !7848
  %add61 = add i64 %44, 2, !dbg !7849
  %conv62 = trunc i64 %add61 to i32, !dbg !7847
  call void @outb(i8 zeroext 35, i32 %conv62) #11, !dbg !7850
  br label %if.end63, !dbg !7850

if.end63:                                         ; preds = %if.then59, %land.lhs.true56, %if.end48
  %45 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7851
  %read_status_mask = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 19, !dbg !7852
  %46 = load i32, i32* %read_status_mask, align 8, !dbg !7852
  %47 = load i32*, i32** %status.addr, align 8, !dbg !7853
  %48 = load i32, i32* %47, align 4, !dbg !7854
  %and64 = and i32 %48, %46, !dbg !7854
  store i32 %and64, i32* %47, align 4, !dbg !7854
  %49 = load i32*, i32** %status.addr, align 8, !dbg !7855
  %50 = load i32, i32* %49, align 4, !dbg !7857
  %51 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7858
  %ignore_status_mask = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %51, i32 0, i32 20, !dbg !7859
  %52 = load i32, i32* %ignore_status_mask, align 4, !dbg !7859
  %and65 = and i32 %50, %52, !dbg !7860
  %tobool66 = icmp ne i32 %and65, 0, !dbg !7860
  br i1 %tobool66, label %if.then67, label %if.else, !dbg !7861

if.then67:                                        ; preds = %if.end63
  %53 = load i32, i32* %ignored, align 4, !dbg !7862
  %inc68 = add i32 %53, 1, !dbg !7862
  store i32 %inc68, i32* %ignored, align 4, !dbg !7862
  %cmp69 = icmp sgt i32 %inc68, 100, !dbg !7865
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !7866

if.then71:                                        ; preds = %if.then67
  br label %do.end, !dbg !7867

if.end72:                                         ; preds = %if.then67
  br label %if.end120, !dbg !7868

if.else:                                          ; preds = %if.end63
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !7869, metadata !DIExpression()), !dbg !7871
  store i8 0, i8* %flag, align 1, !dbg !7871
  %54 = load i32*, i32** %status.addr, align 8, !dbg !7872
  %55 = load i32, i32* %54, align 4, !dbg !7874
  %and73 = and i32 %55, 30, !dbg !7875
  %tobool74 = icmp ne i32 %and73, 0, !dbg !7875
  br i1 %tobool74, label %if.then75, label %if.end108, !dbg !7876

if.then75:                                        ; preds = %if.else
  %56 = load i32*, i32** %status.addr, align 8, !dbg !7877
  %57 = load i32, i32* %56, align 4, !dbg !7880
  %and76 = and i32 %57, 16, !dbg !7881
  %tobool77 = icmp ne i32 %and76, 0, !dbg !7881
  br i1 %tobool77, label %if.then78, label %if.else85, !dbg !7882

if.then78:                                        ; preds = %if.then75
  store i8 1, i8* %flag, align 1, !dbg !7883
  %58 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7885
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %58, i32 0, i32 17, !dbg !7886
  %brk = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount, i32 0, i32 9, !dbg !7887
  %59 = load i32, i32* %brk, align 4, !dbg !7888
  %inc79 = add i32 %59, 1, !dbg !7888
  store i32 %inc79, i32* %brk, align 4, !dbg !7888
  %60 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7889
  %port80 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %60, i32 0, i32 0, !dbg !7891
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port80, i32 0, i32 10, !dbg !7892
  %61 = load i64, i64* %flags, align 8, !dbg !7892
  %and81 = and i64 %61, 4, !dbg !7893
  %tobool82 = icmp ne i64 %and81, 0, !dbg !7893
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !7894

if.then83:                                        ; preds = %if.then78
  %62 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7895
  call void @do_SAK(%struct.tty_struct* %62) #11, !dbg !7896
  br label %if.end84, !dbg !7896

if.end84:                                         ; preds = %if.then83, %if.then78
  br label %if.end107, !dbg !7897

if.else85:                                        ; preds = %if.then75
  %63 = load i32*, i32** %status.addr, align 8, !dbg !7898
  %64 = load i32, i32* %63, align 4, !dbg !7900
  %and86 = and i32 %64, 4, !dbg !7901
  %tobool87 = icmp ne i32 %and86, 0, !dbg !7901
  br i1 %tobool87, label %if.then88, label %if.else91, !dbg !7902

if.then88:                                        ; preds = %if.else85
  store i8 3, i8* %flag, align 1, !dbg !7903
  %65 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7905
  %icount89 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %65, i32 0, i32 17, !dbg !7906
  %parity = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount89, i32 0, i32 7, !dbg !7907
  %66 = load i32, i32* %parity, align 4, !dbg !7908
  %inc90 = add i32 %66, 1, !dbg !7908
  store i32 %inc90, i32* %parity, align 4, !dbg !7908
  br label %if.end106, !dbg !7909

if.else91:                                        ; preds = %if.else85
  %67 = load i32*, i32** %status.addr, align 8, !dbg !7910
  %68 = load i32, i32* %67, align 4, !dbg !7912
  %and92 = and i32 %68, 8, !dbg !7913
  %tobool93 = icmp ne i32 %and92, 0, !dbg !7913
  br i1 %tobool93, label %if.then94, label %if.else97, !dbg !7914

if.then94:                                        ; preds = %if.else91
  store i8 2, i8* %flag, align 1, !dbg !7915
  %69 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7917
  %icount95 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %69, i32 0, i32 17, !dbg !7918
  %frame = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount95, i32 0, i32 6, !dbg !7919
  %70 = load i32, i32* %frame, align 8, !dbg !7920
  %inc96 = add i32 %70, 1, !dbg !7920
  store i32 %inc96, i32* %frame, align 8, !dbg !7920
  br label %if.end105, !dbg !7921

if.else97:                                        ; preds = %if.else91
  %71 = load i32*, i32** %status.addr, align 8, !dbg !7922
  %72 = load i32, i32* %71, align 4, !dbg !7924
  %and98 = and i32 %72, 2, !dbg !7925
  %tobool99 = icmp ne i32 %and98, 0, !dbg !7925
  br i1 %tobool99, label %if.then100, label %if.else103, !dbg !7926

if.then100:                                       ; preds = %if.else97
  store i8 4, i8* %flag, align 1, !dbg !7927
  %73 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7929
  %icount101 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %73, i32 0, i32 17, !dbg !7930
  %overrun = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount101, i32 0, i32 8, !dbg !7931
  %74 = load i32, i32* %overrun, align 8, !dbg !7932
  %inc102 = add i32 %74, 1, !dbg !7932
  store i32 %inc102, i32* %overrun, align 8, !dbg !7932
  br label %if.end104, !dbg !7933

if.else103:                                       ; preds = %if.else97
  store i8 1, i8* %flag, align 1, !dbg !7934
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then100
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then94
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then88
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end84
  br label %if.end108, !dbg !7935

if.end108:                                        ; preds = %if.end107, %if.else
  %75 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7936
  %port109 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %75, i32 0, i32 0, !dbg !7937
  %76 = load i8, i8* %ch, align 1, !dbg !7938
  %77 = load i8, i8* %flag, align 1, !dbg !7939
  %call110 = call i32 @tty_insert_flip_char(%struct.tty_port* %port109, i8 zeroext %76, i8 signext %77) #11, !dbg !7940
  %78 = load i32, i32* %cnt, align 4, !dbg !7941
  %inc111 = add i32 %78, 1, !dbg !7941
  store i32 %inc111, i32* %cnt, align 4, !dbg !7941
  %79 = load i32, i32* %cnt, align 4, !dbg !7942
  %80 = load i32, i32* %recv_room, align 4, !dbg !7944
  %cmp112 = icmp sge i32 %79, %80, !dbg !7945
  br i1 %cmp112, label %if.then114, label %if.end119, !dbg !7946

if.then114:                                       ; preds = %if.end108
  %81 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7947
  %ldisc_stop_rx115 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %81, i32 0, i32 14, !dbg !7950
  %82 = load i8, i8* %ldisc_stop_rx115, align 1, !dbg !7950
  %tobool116 = icmp ne i8 %82, 0, !dbg !7947
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !7951

if.then117:                                       ; preds = %if.then114
  %83 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7952
  call void @mxser_stoprx(%struct.tty_struct* %83) #11, !dbg !7953
  br label %if.end118, !dbg !7953

if.end118:                                        ; preds = %if.then117, %if.then114
  br label %do.end, !dbg !7954

if.end119:                                        ; preds = %if.end108
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end72
  %84 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7955
  %board121 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %84, i32 0, i32 1, !dbg !7957
  %85 = load %struct.mxser_board*, %struct.mxser_board** %board121, align 8, !dbg !7957
  %chip_flag122 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %85, i32 0, i32 5, !dbg !7958
  %86 = load i32, i32* %chip_flag122, align 8, !dbg !7958
  %tobool123 = icmp ne i32 %86, 0, !dbg !7955
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !7959

if.then124:                                       ; preds = %if.end120
  br label %do.end, !dbg !7960

if.end125:                                        ; preds = %if.end120
  %87 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7961
  %ioaddr126 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %87, i32 0, i32 2, !dbg !7962
  %88 = load i64, i64* %ioaddr126, align 8, !dbg !7962
  %add127 = add i64 %88, 5, !dbg !7963
  %conv128 = trunc i64 %add127 to i32, !dbg !7961
  %call129 = call zeroext i8 @inb(i32 %conv128) #11, !dbg !7964
  %conv130 = zext i8 %call129 to i32, !dbg !7964
  %89 = load i32*, i32** %status.addr, align 8, !dbg !7965
  store i32 %conv130, i32* %89, align 4, !dbg !7966
  br label %do.cond, !dbg !7967

do.cond:                                          ; preds = %if.end125
  %90 = load i32*, i32** %status.addr, align 8, !dbg !7968
  %91 = load i32, i32* %90, align 4, !dbg !7969
  %and131 = and i32 %91, 1, !dbg !7970
  %tobool132 = icmp ne i32 %and131, 0, !dbg !7967
  br i1 %tobool132, label %do.body, label %do.end, !dbg !7967, !llvm.loop !7971

do.end:                                           ; preds = %do.cond, %if.then124, %if.end118, %if.then71, %if.then47
  br label %end_intr, !dbg !7967

end_intr:                                         ; preds = %do.end, %while.end
  call void @llvm.dbg.label(metadata !7973), !dbg !7974
  %92 = load i32, i32* %cnt, align 4, !dbg !7975
  %conv133 = sext i32 %92 to i64, !dbg !7975
  %93 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !7976
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %93, i32 0, i32 5, !dbg !7977
  %94 = load i32, i32* %index, align 8, !dbg !7977
  %idxprom = sext i32 %94 to i64, !dbg !7978
  %arrayidx = getelementptr [32 x i64], [32 x i64]* getelementptr inbounds (%struct.mxser_log, %struct.mxser_log* @mxvar_log, i32 0, i32 1), i64 0, i64 %idxprom, !dbg !7978
  %95 = load i64, i64* %arrayidx, align 8, !dbg !7979
  %add134 = add i64 %95, %conv133, !dbg !7979
  store i64 %add134, i64* %arrayidx, align 8, !dbg !7979
  %96 = load i32, i32* %cnt, align 4, !dbg !7980
  %conv135 = sext i32 %96 to i64, !dbg !7980
  %97 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7981
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %97, i32 0, i32 27, !dbg !7982
  %rxcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data, i32 0, i32 0, !dbg !7983
  %98 = load i64, i64* %rxcnt, align 8, !dbg !7984
  %add136 = add i64 %98, %conv135, !dbg !7984
  store i64 %add136, i64* %rxcnt, align 8, !dbg !7984
  %99 = load i32, i32* %cnt, align 4, !dbg !7985
  %conv137 = sext i32 %99 to i64, !dbg !7985
  %100 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7986
  %mon_data138 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %100, i32 0, i32 27, !dbg !7987
  %up_rxcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data138, i32 0, i32 2, !dbg !7988
  %101 = load i64, i64* %up_rxcnt, align 8, !dbg !7989
  %add139 = add i64 %101, %conv137, !dbg !7989
  store i64 %add139, i64* %up_rxcnt, align 8, !dbg !7989
  %102 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7990
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %102, i32 0, i32 28, !dbg !7991
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7992, !srcloc !6267
  %103 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7993
  %104 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %103, i32 0, i32 0, !dbg !7993
  %rlock.i = bitcast %union.anon.2* %104 to %struct.raw_spinlock*, !dbg !7993
  %105 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7994
  %port140 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %105, i32 0, i32 0, !dbg !7995
  call void @tty_flip_buffer_push(%struct.tty_port* %port140) #11, !dbg !7996
  %106 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !7997
  %slock141 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %106, i32 0, i32 28, !dbg !7998
  store %struct.spinlock* %slock141, %struct.spinlock** %lock.addr.i142, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7999, !srcloc !6104
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i142, align 8, !dbg !8000
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !8000
  %rlock.i143 = bitcast %union.anon.2* %108 to %struct.raw_spinlock*, !dbg !8000
  ret void, !dbg !8001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_check_modem_status(%struct.tty_struct* %tty, %struct.mxser_port* %port, i32 %status) #3 !dbg !8002 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %port.addr = alloca %struct.mxser_port*, align 8
  %status.addr = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8005, metadata !DIExpression()), !dbg !8006
  store %struct.mxser_port* %port, %struct.mxser_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %port.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !8009, metadata !DIExpression()), !dbg !8010
  %0 = load i32, i32* %status.addr, align 4, !dbg !8011
  %and = and i32 %0, 4, !dbg !8013
  %tobool = icmp ne i32 %and, 0, !dbg !8013
  br i1 %tobool, label %if.then, label %if.end, !dbg !8014

if.then:                                          ; preds = %entry
  %1 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8015
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %1, i32 0, i32 17, !dbg !8016
  %rng = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount, i32 0, i32 2, !dbg !8017
  %2 = load i32, i32* %rng, align 8, !dbg !8018
  %inc = add i32 %2, 1, !dbg !8018
  store i32 %inc, i32* %rng, align 8, !dbg !8018
  br label %if.end, !dbg !8015

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %status.addr, align 4, !dbg !8019
  %and1 = and i32 %3, 2, !dbg !8021
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8021
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !8022

if.then3:                                         ; preds = %if.end
  %4 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8023
  %icount4 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %4, i32 0, i32 17, !dbg !8024
  %dsr = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount4, i32 0, i32 1, !dbg !8025
  %5 = load i32, i32* %dsr, align 4, !dbg !8026
  %inc5 = add i32 %5, 1, !dbg !8026
  store i32 %inc5, i32* %dsr, align 4, !dbg !8026
  br label %if.end6, !dbg !8023

if.end6:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* %status.addr, align 4, !dbg !8027
  %and7 = and i32 %6, 8, !dbg !8029
  %tobool8 = icmp ne i32 %and7, 0, !dbg !8029
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !8030

if.then9:                                         ; preds = %if.end6
  %7 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8031
  %icount10 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 17, !dbg !8032
  %dcd = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount10, i32 0, i32 3, !dbg !8033
  %8 = load i32, i32* %dcd, align 4, !dbg !8034
  %inc11 = add i32 %8, 1, !dbg !8034
  store i32 %inc11, i32* %dcd, align 4, !dbg !8034
  br label %if.end12, !dbg !8031

if.end12:                                         ; preds = %if.then9, %if.end6
  %9 = load i32, i32* %status.addr, align 4, !dbg !8035
  %and13 = and i32 %9, 1, !dbg !8037
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8037
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !8038

if.then15:                                        ; preds = %if.end12
  %10 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8039
  %icount16 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 17, !dbg !8040
  %cts = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount16, i32 0, i32 0, !dbg !8041
  %11 = load i32, i32* %cts, align 8, !dbg !8042
  %inc17 = add i32 %11, 1, !dbg !8042
  store i32 %inc17, i32* %cts, align 8, !dbg !8042
  br label %if.end18, !dbg !8039

if.end18:                                         ; preds = %if.then15, %if.end12
  %12 = load i32, i32* %status.addr, align 4, !dbg !8043
  %13 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8044
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 27, !dbg !8045
  %modem_status = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data, i32 0, i32 4, !dbg !8046
  store i32 %12, i32* %modem_status, align 8, !dbg !8047
  %14 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8048
  %port19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 0, !dbg !8048
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port19, i32 0, i32 9, !dbg !8048
  call void @__wake_up(%struct.wait_queue_head* %delta_msr_wait, i32 1, i32 1, i8* null) #11, !dbg !8048
  %15 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8049
  %port20 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 0, !dbg !8051
  %call = call zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port20) #11, !dbg !8052
  br i1 %call, label %land.lhs.true, label %if.end29, !dbg !8053

land.lhs.true:                                    ; preds = %if.end18
  %16 = load i32, i32* %status.addr, align 4, !dbg !8054
  %and21 = and i32 %16, 8, !dbg !8055
  %tobool22 = icmp ne i32 %and21, 0, !dbg !8055
  br i1 %tobool22, label %if.then23, label %if.end29, !dbg !8056

if.then23:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %status.addr, align 4, !dbg !8057
  %and24 = and i32 %17, 128, !dbg !8060
  %tobool25 = icmp ne i32 %and24, 0, !dbg !8060
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !8061

if.then26:                                        ; preds = %if.then23
  %18 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8062
  %port27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 0, !dbg !8062
  %open_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port27, i32 0, i32 8, !dbg !8062
  call void @__wake_up(%struct.wait_queue_head* %open_wait, i32 1, i32 1, i8* null) #11, !dbg !8062
  br label %if.end28, !dbg !8062

if.end28:                                         ; preds = %if.then26, %if.then23
  br label %if.end29, !dbg !8063

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end18
  %19 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8064
  %port30 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 0, !dbg !8066
  %call31 = call zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port30) #11, !dbg !8067
  br i1 %call31, label %if.then32, label %if.end74, !dbg !8068

if.then32:                                        ; preds = %if.end29
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8069
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %20, i32 0, i32 26, !dbg !8072
  %21 = load i32, i32* %hw_stopped, align 8, !dbg !8072
  %tobool33 = icmp ne i32 %21, 0, !dbg !8069
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !8073

if.then34:                                        ; preds = %if.then32
  %22 = load i32, i32* %status.addr, align 4, !dbg !8074
  %and35 = and i32 %22, 16, !dbg !8077
  %tobool36 = icmp ne i32 %and35, 0, !dbg !8077
  br i1 %tobool36, label %if.then37, label %if.end51, !dbg !8078

if.then37:                                        ; preds = %if.then34
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8079
  %hw_stopped38 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %23, i32 0, i32 26, !dbg !8081
  store i32 0, i32* %hw_stopped38, align 8, !dbg !8082
  %24 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8083
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %24, i32 0, i32 9, !dbg !8085
  %25 = load i32, i32* %type, align 4, !dbg !8085
  %cmp = icmp ne i32 %25, 4, !dbg !8086
  br i1 %cmp, label %land.lhs.true39, label %if.end50, !dbg !8087

land.lhs.true39:                                  ; preds = %if.then37
  %26 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8088
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 1, !dbg !8089
  %27 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !8089
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %27, i32 0, i32 5, !dbg !8090
  %28 = load i32, i32* %chip_flag, align 8, !dbg !8090
  %tobool40 = icmp ne i32 %28, 0, !dbg !8088
  br i1 %tobool40, label %if.end50, label %if.then41, !dbg !8091

if.then41:                                        ; preds = %land.lhs.true39
  %29 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8092
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 11, !dbg !8094
  %30 = load i32, i32* %IER, align 4, !dbg !8094
  %and42 = and i32 %30, -3, !dbg !8095
  %conv = trunc i32 %and42 to i8, !dbg !8092
  %31 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8096
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %31, i32 0, i32 2, !dbg !8097
  %32 = load i64, i64* %ioaddr, align 8, !dbg !8097
  %add = add i64 %32, 1, !dbg !8098
  %conv43 = trunc i64 %add to i32, !dbg !8096
  call void @outb(i8 zeroext %conv, i32 %conv43) #11, !dbg !8099
  %33 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8100
  %IER44 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %33, i32 0, i32 11, !dbg !8101
  %34 = load i32, i32* %IER44, align 4, !dbg !8102
  %or = or i32 %34, 2, !dbg !8102
  store i32 %or, i32* %IER44, align 4, !dbg !8102
  %35 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8103
  %IER45 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 11, !dbg !8104
  %36 = load i32, i32* %IER45, align 4, !dbg !8104
  %conv46 = trunc i32 %36 to i8, !dbg !8103
  %37 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8105
  %ioaddr47 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 2, !dbg !8106
  %38 = load i64, i64* %ioaddr47, align 8, !dbg !8106
  %add48 = add i64 %38, 1, !dbg !8107
  %conv49 = trunc i64 %add48 to i32, !dbg !8105
  call void @outb(i8 zeroext %conv46, i32 %conv49) #11, !dbg !8108
  br label %if.end50, !dbg !8109

if.end50:                                         ; preds = %if.then41, %land.lhs.true39, %if.then37
  %39 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8110
  call void @tty_wakeup(%struct.tty_struct* %39) #11, !dbg !8111
  br label %if.end51, !dbg !8112

if.end51:                                         ; preds = %if.end50, %if.then34
  br label %if.end73, !dbg !8113

if.else:                                          ; preds = %if.then32
  %40 = load i32, i32* %status.addr, align 4, !dbg !8114
  %and52 = and i32 %40, 16, !dbg !8117
  %tobool53 = icmp ne i32 %and52, 0, !dbg !8117
  br i1 %tobool53, label %if.end72, label %if.then54, !dbg !8118

if.then54:                                        ; preds = %if.else
  %41 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8119
  %hw_stopped55 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %41, i32 0, i32 26, !dbg !8121
  store i32 1, i32* %hw_stopped55, align 8, !dbg !8122
  %42 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8123
  %type56 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %42, i32 0, i32 9, !dbg !8125
  %43 = load i32, i32* %type56, align 4, !dbg !8125
  %cmp57 = icmp ne i32 %43, 4, !dbg !8126
  br i1 %cmp57, label %land.lhs.true59, label %if.end71, !dbg !8127

land.lhs.true59:                                  ; preds = %if.then54
  %44 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8128
  %board60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %44, i32 0, i32 1, !dbg !8129
  %45 = load %struct.mxser_board*, %struct.mxser_board** %board60, align 8, !dbg !8129
  %chip_flag61 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %45, i32 0, i32 5, !dbg !8130
  %46 = load i32, i32* %chip_flag61, align 8, !dbg !8130
  %tobool62 = icmp ne i32 %46, 0, !dbg !8128
  br i1 %tobool62, label %if.end71, label %if.then63, !dbg !8131

if.then63:                                        ; preds = %land.lhs.true59
  %47 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8132
  %IER64 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %47, i32 0, i32 11, !dbg !8134
  %48 = load i32, i32* %IER64, align 4, !dbg !8135
  %and65 = and i32 %48, -3, !dbg !8135
  store i32 %and65, i32* %IER64, align 4, !dbg !8135
  %49 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8136
  %IER66 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %49, i32 0, i32 11, !dbg !8137
  %50 = load i32, i32* %IER66, align 4, !dbg !8137
  %conv67 = trunc i32 %50 to i8, !dbg !8136
  %51 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8138
  %ioaddr68 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %51, i32 0, i32 2, !dbg !8139
  %52 = load i64, i64* %ioaddr68, align 8, !dbg !8139
  %add69 = add i64 %52, 1, !dbg !8140
  %conv70 = trunc i64 %add69 to i32, !dbg !8138
  call void @outb(i8 zeroext %conv67, i32 %conv70) #11, !dbg !8141
  br label %if.end71, !dbg !8142

if.end71:                                         ; preds = %if.then63, %land.lhs.true59, %if.then54
  br label %if.end72, !dbg !8143

if.end72:                                         ; preds = %if.end71, %if.else
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end51
  br label %if.end74, !dbg !8144

if.end74:                                         ; preds = %if.end73, %if.end29
  ret void, !dbg !8145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_transmit_chars(%struct.tty_struct* %tty, %struct.mxser_port* %port) #3 !dbg !8146 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %port.addr = alloca %struct.mxser_port*, align 8
  %count = alloca i32, align 4
  %cnt = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store %struct.mxser_port* %port, %struct.mxser_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %port.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !8155, metadata !DIExpression()), !dbg !8156
  %0 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8157
  %x_char = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %0, i32 0, i32 10, !dbg !8159
  %1 = load i32, i32* %x_char, align 8, !dbg !8159
  %tobool = icmp ne i32 %1, 0, !dbg !8157
  br i1 %tobool, label %if.then, label %if.end, !dbg !8160

if.then:                                          ; preds = %entry
  %2 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8161
  %x_char1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %2, i32 0, i32 10, !dbg !8163
  %3 = load i32, i32* %x_char1, align 8, !dbg !8163
  %conv = trunc i32 %3 to i8, !dbg !8161
  %4 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8164
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %4, i32 0, i32 2, !dbg !8165
  %5 = load i64, i64* %ioaddr, align 8, !dbg !8165
  %add = add i64 %5, 0, !dbg !8166
  %conv2 = trunc i64 %add to i32, !dbg !8164
  call void @outb(i8 zeroext %conv, i32 %conv2) #11, !dbg !8167
  %6 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8168
  %x_char3 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 10, !dbg !8169
  store i32 0, i32* %x_char3, align 8, !dbg !8170
  %7 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8171
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %7, i32 0, i32 5, !dbg !8172
  %8 = load i32, i32* %index, align 8, !dbg !8172
  %idxprom = sext i32 %8 to i64, !dbg !8173
  %arrayidx = getelementptr [32 x i64], [32 x i64]* getelementptr inbounds (%struct.mxser_log, %struct.mxser_log* @mxvar_log, i32 0, i32 2), i64 0, i64 %idxprom, !dbg !8173
  %9 = load i64, i64* %arrayidx, align 8, !dbg !8174
  %inc = add i64 %9, 1, !dbg !8174
  store i64 %inc, i64* %arrayidx, align 8, !dbg !8174
  %10 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8175
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 27, !dbg !8176
  %txcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data, i32 0, i32 1, !dbg !8177
  %11 = load i64, i64* %txcnt, align 8, !dbg !8178
  %inc4 = add i64 %11, 1, !dbg !8178
  store i64 %inc4, i64* %txcnt, align 8, !dbg !8178
  %12 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8179
  %mon_data5 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 27, !dbg !8180
  %up_txcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data5, i32 0, i32 3, !dbg !8181
  %13 = load i64, i64* %up_txcnt, align 8, !dbg !8182
  %inc6 = add i64 %13, 1, !dbg !8182
  store i64 %inc6, i64* %up_txcnt, align 8, !dbg !8182
  %14 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8183
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 17, !dbg !8184
  %tx = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount, i32 0, i32 4, !dbg !8185
  %15 = load i32, i32* %tx, align 8, !dbg !8186
  %inc7 = add i32 %15, 1, !dbg !8186
  store i32 %inc7, i32* %tx, align 8, !dbg !8186
  br label %if.end90, !dbg !8187

if.end:                                           ; preds = %entry
  %16 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8188
  %port8 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 0, !dbg !8190
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port8, i32 0, i32 15, !dbg !8191
  %17 = load i8*, i8** %xmit_buf, align 8, !dbg !8191
  %cmp = icmp eq i8* %17, null, !dbg !8192
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !8193

if.then10:                                        ; preds = %if.end
  br label %if.end90, !dbg !8194

if.end11:                                         ; preds = %if.end
  %18 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8195
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 24, !dbg !8197
  %19 = load i32, i32* %xmit_cnt, align 4, !dbg !8197
  %cmp12 = icmp sle i32 %19, 0, !dbg !8198
  br i1 %cmp12, label %if.then22, label %lor.lhs.false, !dbg !8199

lor.lhs.false:                                    ; preds = %if.end11
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8200
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %20, i32 0, i32 24, !dbg !8201
  %bf.load = load i8, i8* %stopped, align 4, !dbg !8201
  %bf.clear = and i8 %bf.load, 1, !dbg !8201
  %bf.cast = zext i8 %bf.clear to i64, !dbg !8201
  %conv14 = trunc i64 %bf.cast to i32, !dbg !8200
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !8200
  br i1 %tobool15, label %if.then22, label %lor.lhs.false16, !dbg !8202

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %21 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8203
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %21, i32 0, i32 26, !dbg !8204
  %22 = load i32, i32* %hw_stopped, align 8, !dbg !8204
  %tobool17 = icmp ne i32 %22, 0, !dbg !8203
  br i1 %tobool17, label %land.lhs.true, label %if.end28, !dbg !8205

land.lhs.true:                                    ; preds = %lor.lhs.false16
  %23 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8206
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 9, !dbg !8207
  %24 = load i32, i32* %type, align 4, !dbg !8207
  %cmp18 = icmp ne i32 %24, 4, !dbg !8208
  br i1 %cmp18, label %land.lhs.true20, label %if.end28, !dbg !8209

land.lhs.true20:                                  ; preds = %land.lhs.true
  %25 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8210
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 1, !dbg !8211
  %26 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !8211
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %26, i32 0, i32 5, !dbg !8212
  %27 = load i32, i32* %chip_flag, align 8, !dbg !8212
  %tobool21 = icmp ne i32 %27, 0, !dbg !8210
  br i1 %tobool21, label %if.end28, label %if.then22, !dbg !8213

if.then22:                                        ; preds = %land.lhs.true20, %lor.lhs.false, %if.end11
  %28 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8214
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %28, i32 0, i32 11, !dbg !8216
  %29 = load i32, i32* %IER, align 4, !dbg !8217
  %and = and i32 %29, -3, !dbg !8217
  store i32 %and, i32* %IER, align 4, !dbg !8217
  %30 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8218
  %IER23 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 11, !dbg !8219
  %31 = load i32, i32* %IER23, align 4, !dbg !8219
  %conv24 = trunc i32 %31 to i8, !dbg !8218
  %32 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8220
  %ioaddr25 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 2, !dbg !8221
  %33 = load i64, i64* %ioaddr25, align 8, !dbg !8221
  %add26 = add i64 %33, 1, !dbg !8222
  %conv27 = trunc i64 %add26 to i32, !dbg !8220
  call void @outb(i8 zeroext %conv24, i32 %conv27) #11, !dbg !8223
  br label %if.end90, !dbg !8224

if.end28:                                         ; preds = %land.lhs.true20, %land.lhs.true, %lor.lhs.false16
  %34 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8225
  %xmit_cnt29 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %34, i32 0, i32 24, !dbg !8226
  %35 = load i32, i32* %xmit_cnt29, align 4, !dbg !8226
  store i32 %35, i32* %cnt, align 4, !dbg !8227
  %36 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8228
  %xmit_fifo_size = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %36, i32 0, i32 21, !dbg !8229
  %37 = load i32, i32* %xmit_fifo_size, align 8, !dbg !8229
  store i32 %37, i32* %count, align 4, !dbg !8230
  br label %do.body, !dbg !8231

do.body:                                          ; preds = %do.cond, %if.end28
  %38 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8232
  %port30 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %38, i32 0, i32 0, !dbg !8234
  %xmit_buf31 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port30, i32 0, i32 15, !dbg !8235
  %39 = load i8*, i8** %xmit_buf31, align 8, !dbg !8235
  %40 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8236
  %xmit_tail = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %40, i32 0, i32 23, !dbg !8237
  %41 = load i32, i32* %xmit_tail, align 8, !dbg !8238
  %inc32 = add i32 %41, 1, !dbg !8238
  store i32 %inc32, i32* %xmit_tail, align 8, !dbg !8238
  %idxprom33 = sext i32 %41 to i64, !dbg !8232
  %arrayidx34 = getelementptr i8, i8* %39, i64 %idxprom33, !dbg !8232
  %42 = load i8, i8* %arrayidx34, align 1, !dbg !8232
  %43 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8239
  %ioaddr35 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 2, !dbg !8240
  %44 = load i64, i64* %ioaddr35, align 8, !dbg !8240
  %add36 = add i64 %44, 0, !dbg !8241
  %conv37 = trunc i64 %add36 to i32, !dbg !8239
  call void @outb(i8 zeroext %42, i32 %conv37) #11, !dbg !8242
  %45 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8243
  %xmit_tail38 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 23, !dbg !8244
  %46 = load i32, i32* %xmit_tail38, align 8, !dbg !8244
  %conv39 = sext i32 %46 to i64, !dbg !8243
  %and40 = and i64 %conv39, 4095, !dbg !8245
  %conv41 = trunc i64 %and40 to i32, !dbg !8243
  %47 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8246
  %xmit_tail42 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %47, i32 0, i32 23, !dbg !8247
  store i32 %conv41, i32* %xmit_tail42, align 8, !dbg !8248
  %48 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8249
  %xmit_cnt43 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %48, i32 0, i32 24, !dbg !8251
  %49 = load i32, i32* %xmit_cnt43, align 4, !dbg !8252
  %dec = add i32 %49, -1, !dbg !8252
  store i32 %dec, i32* %xmit_cnt43, align 4, !dbg !8252
  %cmp44 = icmp sle i32 %dec, 0, !dbg !8253
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8254

if.then46:                                        ; preds = %do.body
  br label %do.end, !dbg !8255

if.end47:                                         ; preds = %do.body
  br label %do.cond, !dbg !8256

do.cond:                                          ; preds = %if.end47
  %50 = load i32, i32* %count, align 4, !dbg !8257
  %dec48 = add i32 %50, -1, !dbg !8257
  store i32 %dec48, i32* %count, align 4, !dbg !8257
  %cmp49 = icmp sgt i32 %dec48, 0, !dbg !8258
  br i1 %cmp49, label %do.body, label %do.end, !dbg !8256, !llvm.loop !8259

do.end:                                           ; preds = %do.cond, %if.then46
  %51 = load i32, i32* %cnt, align 4, !dbg !8261
  %52 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8262
  %xmit_cnt51 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %52, i32 0, i32 24, !dbg !8263
  %53 = load i32, i32* %xmit_cnt51, align 4, !dbg !8263
  %sub = sub i32 %51, %53, !dbg !8264
  %conv52 = sext i32 %sub to i64, !dbg !8265
  %54 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8266
  %index53 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %54, i32 0, i32 5, !dbg !8267
  %55 = load i32, i32* %index53, align 8, !dbg !8267
  %idxprom54 = sext i32 %55 to i64, !dbg !8268
  %arrayidx55 = getelementptr [32 x i64], [32 x i64]* getelementptr inbounds (%struct.mxser_log, %struct.mxser_log* @mxvar_log, i32 0, i32 2), i64 0, i64 %idxprom54, !dbg !8268
  %56 = load i64, i64* %arrayidx55, align 8, !dbg !8269
  %add56 = add i64 %56, %conv52, !dbg !8269
  store i64 %add56, i64* %arrayidx55, align 8, !dbg !8269
  %57 = load i32, i32* %cnt, align 4, !dbg !8270
  %58 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8271
  %xmit_cnt57 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %58, i32 0, i32 24, !dbg !8272
  %59 = load i32, i32* %xmit_cnt57, align 4, !dbg !8272
  %sub58 = sub i32 %57, %59, !dbg !8273
  %conv59 = sext i32 %sub58 to i64, !dbg !8274
  %60 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8275
  %mon_data60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %60, i32 0, i32 27, !dbg !8276
  %txcnt61 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data60, i32 0, i32 1, !dbg !8277
  %61 = load i64, i64* %txcnt61, align 8, !dbg !8278
  %add62 = add i64 %61, %conv59, !dbg !8278
  store i64 %add62, i64* %txcnt61, align 8, !dbg !8278
  %62 = load i32, i32* %cnt, align 4, !dbg !8279
  %63 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8280
  %xmit_cnt63 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %63, i32 0, i32 24, !dbg !8281
  %64 = load i32, i32* %xmit_cnt63, align 4, !dbg !8281
  %sub64 = sub i32 %62, %64, !dbg !8282
  %conv65 = sext i32 %sub64 to i64, !dbg !8283
  %65 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8284
  %mon_data66 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %65, i32 0, i32 27, !dbg !8285
  %up_txcnt67 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data66, i32 0, i32 3, !dbg !8286
  %66 = load i64, i64* %up_txcnt67, align 8, !dbg !8287
  %add68 = add i64 %66, %conv65, !dbg !8287
  store i64 %add68, i64* %up_txcnt67, align 8, !dbg !8287
  %67 = load i32, i32* %cnt, align 4, !dbg !8288
  %68 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8289
  %xmit_cnt69 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %68, i32 0, i32 24, !dbg !8290
  %69 = load i32, i32* %xmit_cnt69, align 4, !dbg !8290
  %sub70 = sub i32 %67, %69, !dbg !8291
  %70 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8292
  %icount71 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %70, i32 0, i32 17, !dbg !8293
  %tx72 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount71, i32 0, i32 4, !dbg !8294
  %71 = load i32, i32* %tx72, align 8, !dbg !8295
  %add73 = add i32 %71, %sub70, !dbg !8295
  store i32 %add73, i32* %tx72, align 8, !dbg !8295
  %72 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8296
  %xmit_cnt74 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %72, i32 0, i32 24, !dbg !8298
  %73 = load i32, i32* %xmit_cnt74, align 4, !dbg !8298
  %cmp75 = icmp slt i32 %73, 256, !dbg !8299
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !8300

if.then77:                                        ; preds = %do.end
  %74 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8301
  call void @tty_wakeup(%struct.tty_struct* %74) #11, !dbg !8302
  br label %if.end78, !dbg !8302

if.end78:                                         ; preds = %if.then77, %do.end
  %75 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8303
  %xmit_cnt79 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %75, i32 0, i32 24, !dbg !8305
  %76 = load i32, i32* %xmit_cnt79, align 4, !dbg !8305
  %cmp80 = icmp sle i32 %76, 0, !dbg !8306
  br i1 %cmp80, label %if.then82, label %if.end90, !dbg !8307

if.then82:                                        ; preds = %if.end78
  %77 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8308
  %IER83 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %77, i32 0, i32 11, !dbg !8310
  %78 = load i32, i32* %IER83, align 4, !dbg !8311
  %and84 = and i32 %78, -3, !dbg !8311
  store i32 %and84, i32* %IER83, align 4, !dbg !8311
  %79 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8312
  %IER85 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %79, i32 0, i32 11, !dbg !8313
  %80 = load i32, i32* %IER85, align 4, !dbg !8313
  %conv86 = trunc i32 %80 to i8, !dbg !8312
  %81 = load %struct.mxser_port*, %struct.mxser_port** %port.addr, align 8, !dbg !8314
  %ioaddr87 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %81, i32 0, i32 2, !dbg !8315
  %82 = load i64, i64* %ioaddr87, align 8, !dbg !8315
  %add88 = add i64 %82, 1, !dbg !8316
  %conv89 = trunc i64 %add88 to i32, !dbg !8314
  call void @outb(i8 zeroext %conv86, i32 %conv89) #11, !dbg !8317
  br label %if.end90, !dbg !8318

if.end90:                                         ; preds = %if.then, %if.then10, %if.then22, %if.then82, %if.end78
  ret void, !dbg !8319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #3 !dbg !8320 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8326, metadata !DIExpression()), !dbg !8328
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8330, metadata !DIExpression()), !dbg !8331
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8332, metadata !DIExpression()), !dbg !8333
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8334, metadata !DIExpression()), !dbg !8336
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8338, metadata !DIExpression()), !dbg !8339
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8340, metadata !DIExpression()), !dbg !8342
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8344, metadata !DIExpression()), !dbg !8345
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8346, metadata !DIExpression()), !dbg !8347
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8348, metadata !DIExpression()), !dbg !8349
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8350
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8351
  %div = sdiv i64 %1, 64, !dbg !8351
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8352
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8350
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8353
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8354
  %conv.i = trunc i64 %4 to i32, !dbg !8354
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !8355
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8356
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8356
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !8356
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8357
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8357
  br i1 %8, label %cond.true, label %cond.false, !dbg !8357

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8357
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8357
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8358
  %and.i = and i64 %11, 63, !dbg !8359
  %shl.i = shl i64 1, %and.i, !dbg !8360
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8361
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8362
  %shr.i = ashr i64 %13, 6, !dbg !8363
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8361
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8361
  %and1.i = and i64 %shl.i, %14, !dbg !8364
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8365
  %conv = zext i1 %cmp.i to i32, !dbg !8357
  br label %cond.end, !dbg !8357

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8357
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8357
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8366
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8367
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !8368, !srcloc !8369
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8368
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8370
  %tobool.i = trunc i8 %20 to i1, !dbg !8370
  %conv2 = zext i1 %tobool.i to i32, !dbg !8357
  br label %cond.end, !dbg !8357

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8357
  %tobool = icmp ne i32 %cond, 0, !dbg !8357
  ret i1 %tobool, !dbg !8371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #3 !dbg !8372 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  ret i1 true, !dbg !8377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_stoprx(%struct.tty_struct* %tty) #3 !dbg !8378 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !8381, metadata !DIExpression()), !dbg !8382
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8383
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !8384
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8384
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !8383
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !8382
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8385
  %ldisc_stop_rx = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 14, !dbg !8386
  store i8 1, i8* %ldisc_stop_rx, align 1, !dbg !8387
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8388
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 15, !dbg !8388
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !8388
  %5 = load i32, i32* %c_iflag, align 8, !dbg !8388
  %and = and i32 %5, 4096, !dbg !8388
  %tobool = icmp ne i32 %and, 0, !dbg !8388
  br i1 %tobool, label %if.then, label %if.end17, !dbg !8390

if.then:                                          ; preds = %entry
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8391
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 1, !dbg !8394
  %7 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !8394
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %7, i32 0, i32 5, !dbg !8395
  %8 = load i32, i32* %chip_flag, align 8, !dbg !8395
  %tobool1 = icmp ne i32 %8, 0, !dbg !8391
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8396

if.then2:                                         ; preds = %if.then
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8397
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 11, !dbg !8399
  %10 = load i32, i32* %IER, align 4, !dbg !8400
  %and3 = and i32 %10, -18, !dbg !8400
  store i32 %and3, i32* %IER, align 4, !dbg !8400
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8401
  %IER4 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 11, !dbg !8402
  %12 = load i32, i32* %IER4, align 4, !dbg !8402
  %conv = trunc i32 %12 to i8, !dbg !8401
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8403
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !8404
  %14 = load i64, i64* %ioaddr, align 8, !dbg !8404
  %add = add i64 %14, 1, !dbg !8405
  %conv5 = trunc i64 %add to i32, !dbg !8403
  call void @outb(i8 zeroext %conv, i32 %conv5) #11, !dbg !8406
  br label %if.end, !dbg !8407

if.else:                                          ; preds = %if.then
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8408
  %termios6 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !8408
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios6, i32 0, i32 5, !dbg !8408
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 9, !dbg !8408
  %16 = load i8, i8* %arrayidx, align 1, !dbg !8408
  %conv7 = zext i8 %16 to i32, !dbg !8408
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8410
  %x_char = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 10, !dbg !8411
  store i32 %conv7, i32* %x_char, align 8, !dbg !8412
  %18 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8413
  %ioaddr8 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 2, !dbg !8414
  %19 = load i64, i64* %ioaddr8, align 8, !dbg !8414
  %add9 = add i64 %19, 1, !dbg !8415
  %conv10 = trunc i64 %add9 to i32, !dbg !8413
  call void @outb(i8 zeroext 0, i32 %conv10) #11, !dbg !8416
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8417
  %IER11 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 11, !dbg !8418
  %21 = load i32, i32* %IER11, align 4, !dbg !8419
  %or = or i32 %21, 2, !dbg !8419
  store i32 %or, i32* %IER11, align 4, !dbg !8419
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8420
  %IER12 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 11, !dbg !8421
  %23 = load i32, i32* %IER12, align 4, !dbg !8421
  %conv13 = trunc i32 %23 to i8, !dbg !8420
  %24 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8422
  %ioaddr14 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %24, i32 0, i32 2, !dbg !8423
  %25 = load i64, i64* %ioaddr14, align 8, !dbg !8423
  %add15 = add i64 %25, 1, !dbg !8424
  %conv16 = trunc i64 %add15 to i32, !dbg !8422
  call void @outb(i8 zeroext %conv13, i32 %conv16) #11, !dbg !8425
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end17, !dbg !8426

if.end17:                                         ; preds = %if.end, %entry
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8427
  %termios18 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %26, i32 0, i32 15, !dbg !8427
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios18, i32 0, i32 2, !dbg !8427
  %27 = load i32, i32* %c_cflag, align 8, !dbg !8427
  %and19 = and i32 %27, -2147483648, !dbg !8427
  %tobool20 = icmp ne i32 %and19, 0, !dbg !8427
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !8429

if.then21:                                        ; preds = %if.end17
  %28 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8430
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %28, i32 0, i32 12, !dbg !8432
  %29 = load i32, i32* %MCR, align 8, !dbg !8433
  %and22 = and i32 %29, -3, !dbg !8433
  store i32 %and22, i32* %MCR, align 8, !dbg !8433
  %30 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8434
  %MCR23 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 12, !dbg !8435
  %31 = load i32, i32* %MCR23, align 8, !dbg !8435
  %conv24 = trunc i32 %31 to i8, !dbg !8434
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8436
  %ioaddr25 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 2, !dbg !8437
  %33 = load i64, i64* %ioaddr25, align 8, !dbg !8437
  %add26 = add i64 %33, 4, !dbg !8438
  %conv27 = trunc i64 %add26 to i32, !dbg !8436
  call void @outb(i8 zeroext %conv24, i32 %conv27) #11, !dbg !8439
  br label %if.end28, !dbg !8440

if.end28:                                         ; preds = %if.then21, %if.end17
  ret void, !dbg !8441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tty_insert_flip_char(%struct.tty_port* %port, i8 zeroext %ch, i8 signext %flag) #3 !dbg !8442 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.tty_port*, align 8
  %ch.addr = alloca i8, align 1
  %flag.addr = alloca i8, align 1
  %tb = alloca %struct.tty_buffer*, align 8
  %change = alloca i32, align 4
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !8448, metadata !DIExpression()), !dbg !8449
  store i8 %flag, i8* %flag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flag.addr, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %tb, metadata !8452, metadata !DIExpression()), !dbg !8453
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8454
  %buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 0, !dbg !8455
  %tail = getelementptr inbounds %struct.tty_bufhead, %struct.tty_bufhead* %buf, i32 0, i32 8, !dbg !8456
  %1 = load %struct.tty_buffer*, %struct.tty_buffer** %tail, align 8, !dbg !8456
  store %struct.tty_buffer* %1, %struct.tty_buffer** %tb, align 8, !dbg !8453
  call void @llvm.dbg.declare(metadata i32* %change, metadata !8457, metadata !DIExpression()), !dbg !8458
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8459
  %flags = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 5, !dbg !8460
  %3 = load i32, i32* %flags, align 8, !dbg !8460
  %and = and i32 %3, 1, !dbg !8461
  %tobool = icmp ne i32 %and, 0, !dbg !8461
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8462

land.rhs:                                         ; preds = %entry
  %4 = load i8, i8* %flag.addr, align 1, !dbg !8463
  %conv = sext i8 %4 to i32, !dbg !8463
  %cmp = icmp ne i32 %conv, 0, !dbg !8464
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !8465
  %land.ext = zext i1 %5 to i32, !dbg !8462
  store i32 %land.ext, i32* %change, align 4, !dbg !8466
  %6 = load i32, i32* %change, align 4, !dbg !8467
  %tobool2 = icmp ne i32 %6, 0, !dbg !8467
  br i1 %tobool2, label %if.end12, label %land.lhs.true, !dbg !8469

land.lhs.true:                                    ; preds = %land.end
  %7 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8470
  %used = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %7, i32 0, i32 1, !dbg !8471
  %8 = load i32, i32* %used, align 8, !dbg !8471
  %9 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8472
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %9, i32 0, i32 2, !dbg !8473
  %10 = load i32, i32* %size, align 4, !dbg !8473
  %cmp3 = icmp slt i32 %8, %10, !dbg !8474
  br i1 %cmp3, label %if.then, label %if.end12, !dbg !8475

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8476
  %flags5 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %11, i32 0, i32 5, !dbg !8479
  %12 = load i32, i32* %flags5, align 8, !dbg !8479
  %neg = xor i32 %12, -1, !dbg !8480
  %and6 = and i32 %neg, 1, !dbg !8481
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8481
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !8482

if.then8:                                         ; preds = %if.then
  %13 = load i8, i8* %flag.addr, align 1, !dbg !8483
  %14 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8484
  %15 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8485
  %used9 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %15, i32 0, i32 1, !dbg !8486
  %16 = load i32, i32* %used9, align 8, !dbg !8486
  %call = call i8* @flag_buf_ptr(%struct.tty_buffer* %14, i32 %16) #11, !dbg !8487
  store i8 %13, i8* %call, align 1, !dbg !8488
  br label %if.end, !dbg !8489

if.end:                                           ; preds = %if.then8, %if.then
  %17 = load i8, i8* %ch.addr, align 1, !dbg !8490
  %18 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8491
  %19 = load %struct.tty_buffer*, %struct.tty_buffer** %tb, align 8, !dbg !8492
  %used10 = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %19, i32 0, i32 1, !dbg !8493
  %20 = load i32, i32* %used10, align 8, !dbg !8494
  %inc = add i32 %20, 1, !dbg !8494
  store i32 %inc, i32* %used10, align 8, !dbg !8494
  %call11 = call i8* @char_buf_ptr(%struct.tty_buffer* %18, i32 %20) #11, !dbg !8495
  store i8 %17, i8* %call11, align 1, !dbg !8496
  store i32 1, i32* %retval, align 4, !dbg !8497
  br label %return, !dbg !8497

if.end12:                                         ; preds = %land.lhs.true, %land.end
  %21 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8498
  %22 = load i8, i8* %ch.addr, align 1, !dbg !8499
  %23 = load i8, i8* %flag.addr, align 1, !dbg !8500
  %call13 = call i32 @__tty_insert_flip_char(%struct.tty_port* %21, i8 zeroext %22, i8 signext %23) #11, !dbg !8501
  store i32 %call13, i32* %retval, align 4, !dbg !8502
  br label %return, !dbg !8502

return:                                           ; preds = %if.end12, %if.end
  %24 = load i32, i32* %retval, align 4, !dbg !8503
  ret i32 %24, !dbg !8503
}

; Function Attrs: noredzone
declare dso_local void @do_SAK(%struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_flip_buffer_push(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @flag_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #3 !dbg !8504 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !8507, metadata !DIExpression()), !dbg !8508
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8511
  %1 = load i32, i32* %ofs.addr, align 4, !dbg !8512
  %call = call i8* @char_buf_ptr(%struct.tty_buffer* %0, i32 %1) #11, !dbg !8513
  %2 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8514
  %size = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %2, i32 0, i32 2, !dbg !8515
  %3 = load i32, i32* %size, align 4, !dbg !8515
  %idx.ext = sext i32 %3 to i64, !dbg !8516
  %add.ptr = getelementptr i8, i8* %call, i64 %idx.ext, !dbg !8516
  ret i8* %add.ptr, !dbg !8517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @char_buf_ptr(%struct.tty_buffer* %b, i32 %ofs) #3 !dbg !8518 {
entry:
  %b.addr = alloca %struct.tty_buffer*, align 8
  %ofs.addr = alloca i32, align 4
  store %struct.tty_buffer* %b, %struct.tty_buffer** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_buffer** %b.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  %0 = load %struct.tty_buffer*, %struct.tty_buffer** %b.addr, align 8, !dbg !8525
  %data = getelementptr inbounds %struct.tty_buffer, %struct.tty_buffer* %0, i32 0, i32 6, !dbg !8526
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !8525
  %1 = bitcast i64* %arraydecay to i8*, !dbg !8527
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !8528
  %idx.ext = sext i32 %2 to i64, !dbg !8529
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !8529
  ret i8* %add.ptr, !dbg !8530
}

; Function Attrs: noredzone
declare dso_local i32 @__tty_insert_flip_char(%struct.tty_port*, i8 zeroext, i8 signext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_check_carrier(%struct.tty_port* %port) #3 !dbg !8531 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8532, metadata !DIExpression()), !dbg !8533
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8534
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !8535
  %call = call zeroext i1 @test_bit(i64 4, i64* %iflags) #11, !dbg !8536
  ret i1 %call, !dbg !8537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_port_cts_enabled(%struct.tty_port* %port) #3 !dbg !8538 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !8539, metadata !DIExpression()), !dbg !8540
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !8541
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %0, i32 0, i32 11, !dbg !8542
  %call = call zeroext i1 @test_bit(i64 3, i64* %iflags) #11, !dbg !8543
  ret i1 %call, !dbg !8544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #3 !dbg !8545 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8552
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8553
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !8554
  store i8* %0, i8** %driver_data, align 8, !dbg !8555
  ret void, !dbg !8556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @pci_get_drvdata(%struct.pci_dev* %pdev) #3 !dbg !8557 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !8562
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 41, !dbg !8563
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !8564
  ret i8* %call, !dbg !8565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #3 !dbg !8566 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8569, metadata !DIExpression()), !dbg !8570
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8571
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !8572
  %1 = load i8*, i8** %driver_data, align 8, !dbg !8572
  ret i8* %1, !dbg !8573
}

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_release_vector(%struct.mxser_board* %brd) #3 !dbg !8574 {
entry:
  %brd.addr = alloca %struct.mxser_board*, align 8
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !8575, metadata !DIExpression()), !dbg !8576
  %0 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8577
  %call = call zeroext i1 @mxser_overlapping_vector(%struct.mxser_board* %0) #11, !dbg !8579
  br i1 %call, label %if.then, label %if.end, !dbg !8580

if.then:                                          ; preds = %entry
  br label %return, !dbg !8581

if.end:                                           ; preds = %entry
  %1 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8582
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %1, i32 0, i32 3, !dbg !8582
  %2 = load i64, i64* %vector, align 8, !dbg !8582
  call void @__release_region(%struct.resource* @ioport_resource, i64 %2, i64 1) #11, !dbg !8582
  br label %return, !dbg !8583

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mxser_overlapping_vector(%struct.mxser_board* %brd) #3 !dbg !8584 {
entry:
  %brd.addr = alloca %struct.mxser_board*, align 8
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !8587, metadata !DIExpression()), !dbg !8588
  %0 = load i8, i8* @allow_overlapping_vector, align 1, !dbg !8589
  %tobool = trunc i8 %0 to i1, !dbg !8589
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8590

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8591
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %1, i32 0, i32 3, !dbg !8592
  %2 = load i64, i64* %vector, align 8, !dbg !8592
  %3 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8593
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %3, i32 0, i32 7, !dbg !8594
  %arrayidx = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 0, !dbg !8593
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx, i32 0, i32 2, !dbg !8595
  %4 = load i64, i64* %ioaddr, align 8, !dbg !8595
  %cmp = icmp uge i64 %2, %4, !dbg !8596
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8597

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8598
  %vector1 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %5, i32 0, i32 3, !dbg !8599
  %6 = load i64, i64* %vector1, align 8, !dbg !8599
  %7 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8600
  %ports2 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %7, i32 0, i32 7, !dbg !8601
  %arrayidx3 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports2, i64 0, i64 0, !dbg !8600
  %ioaddr4 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx3, i32 0, i32 2, !dbg !8602
  %8 = load i64, i64* %ioaddr4, align 8, !dbg !8602
  %9 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8603
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %9, i32 0, i32 2, !dbg !8604
  %10 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info, align 8, !dbg !8604
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %10, i32 0, i32 1, !dbg !8605
  %11 = load i32, i32* %nports, align 8, !dbg !8605
  %mul = mul i32 8, %11, !dbg !8606
  %conv = zext i32 %mul to i64, !dbg !8607
  %add = add i64 %8, %conv, !dbg !8608
  %cmp5 = icmp ult i64 %6, %add, !dbg !8609
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !8610
  ret i1 %12, !dbg !8611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tty_driver* @alloc_tty_driver(i32 %lines) #3 !dbg !8612 {
entry:
  %retval = alloca %struct.tty_driver*, align 8
  %lines.addr = alloca i32, align 4
  %ret = alloca %struct.tty_driver*, align 8
  store i32 %lines, i32* %lines.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lines.addr, metadata !8615, metadata !DIExpression()), !dbg !8616
  call void @llvm.dbg.declare(metadata %struct.tty_driver** %ret, metadata !8617, metadata !DIExpression()), !dbg !8618
  %0 = load i32, i32* %lines.addr, align 4, !dbg !8619
  %call = call %struct.tty_driver* @__tty_alloc_driver(i32 %0, %struct.module* null, i64 0) #11, !dbg !8619
  store %struct.tty_driver* %call, %struct.tty_driver** %ret, align 8, !dbg !8618
  %1 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !8620
  %2 = bitcast %struct.tty_driver* %1 to i8*, !dbg !8620
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #11, !dbg !8622
  br i1 %call1, label %if.then, label %if.end, !dbg !8623

if.then:                                          ; preds = %entry
  store %struct.tty_driver* null, %struct.tty_driver** %retval, align 8, !dbg !8624
  br label %return, !dbg !8624

if.end:                                           ; preds = %entry
  %3 = load %struct.tty_driver*, %struct.tty_driver** %ret, align 8, !dbg !8625
  store %struct.tty_driver* %3, %struct.tty_driver** %retval, align 8, !dbg !8626
  br label %return, !dbg !8626

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.tty_driver*, %struct.tty_driver** %retval, align 8, !dbg !8627
  ret %struct.tty_driver* %4, !dbg !8627
}

; Function Attrs: noredzone
declare dso_local void @tty_set_operations(%struct.tty_driver*, %struct.tty_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_register_driver(%struct.tty_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_get_ISA_conf(i32 %cap, %struct.mxser_board* %brd) #0 section ".init.text" !dbg !8628 {
entry:
  %retval = alloca i32, align 4
  %cap.addr = alloca i32, align 4
  %brd.addr = alloca %struct.mxser_board*, align 8
  %id = alloca i32, align 4
  %i = alloca i32, align 4
  %bits = alloca i32, align 4
  %ret = alloca i32, align 4
  %regs = alloca [16 x i16], align 16
  %irq = alloca i16, align 2
  %scratch = alloca i8, align 1
  %scratch2 = alloca i8, align 1
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !8631, metadata !DIExpression()), !dbg !8632
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8635, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8637, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !8639, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8641, metadata !DIExpression()), !dbg !8642
  call void @llvm.dbg.declare(metadata [16 x i16]* %regs, metadata !8643, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.declare(metadata i16* %irq, metadata !8646, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.declare(metadata i8* %scratch, metadata !8648, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.declare(metadata i8* %scratch2, metadata !8650, metadata !DIExpression()), !dbg !8651
  %0 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8652
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %0, i32 0, i32 5, !dbg !8653
  store i32 0, i32* %chip_flag, align 8, !dbg !8654
  %1 = load i32, i32* %cap.addr, align 4, !dbg !8655
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %regs, i64 0, i64 0, !dbg !8656
  %call = call i32 @mxser_read_register(i32 %1, i16* %arraydecay) #12, !dbg !8657
  store i32 %call, i32* %id, align 4, !dbg !8658
  %2 = load i32, i32* %id, align 4, !dbg !8659
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 5, label %sw.bb3
    i32 11, label %sw.bb5
    i32 4, label %sw.bb7
    i32 3, label %sw.bb9
  ], !dbg !8660

sw.bb:                                            ; preds = %entry
  %3 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8661
  %info = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %3, i32 0, i32 2, !dbg !8663
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 0), %struct.mxser_cardinfo** %info, align 8, !dbg !8664
  br label %sw.epilog, !dbg !8665

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8666
  %info2 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %4, i32 0, i32 2, !dbg !8667
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 1), %struct.mxser_cardinfo** %info2, align 8, !dbg !8668
  br label %sw.epilog, !dbg !8669

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8670
  %info4 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %5, i32 0, i32 2, !dbg !8671
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 2), %struct.mxser_cardinfo** %info4, align 8, !dbg !8672
  br label %sw.epilog, !dbg !8673

sw.bb5:                                           ; preds = %entry
  %6 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8674
  %info6 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %6, i32 0, i32 2, !dbg !8675
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 5), %struct.mxser_cardinfo** %info6, align 8, !dbg !8676
  br label %sw.epilog, !dbg !8677

sw.bb7:                                           ; preds = %entry
  %7 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8678
  %info8 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %7, i32 0, i32 2, !dbg !8679
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 6), %struct.mxser_cardinfo** %info8, align 8, !dbg !8680
  br label %sw.epilog, !dbg !8681

sw.bb9:                                           ; preds = %entry
  %8 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8682
  %info10 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %8, i32 0, i32 2, !dbg !8683
  store %struct.mxser_cardinfo* getelementptr inbounds ([32 x %struct.mxser_cardinfo], [32 x %struct.mxser_cardinfo]* @mxser_cards, i64 0, i64 7), %struct.mxser_cardinfo** %info10, align 8, !dbg !8684
  br label %sw.epilog, !dbg !8685

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8686
  br label %return, !dbg !8686

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  store i16 0, i16* %irq, align 2, !dbg !8687
  %9 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8688
  %info11 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %9, i32 0, i32 2, !dbg !8690
  %10 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info11, align 8, !dbg !8690
  %nports = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %10, i32 0, i32 1, !dbg !8691
  %11 = load i32, i32* %nports, align 8, !dbg !8691
  %cmp = icmp eq i32 %11, 2, !dbg !8692
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8693

lor.lhs.false:                                    ; preds = %sw.epilog
  %12 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8694
  %info12 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %12, i32 0, i32 2, !dbg !8695
  %13 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info12, align 8, !dbg !8695
  %flags = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %13, i32 0, i32 2, !dbg !8696
  %14 = load i32, i32* %flags, align 4, !dbg !8696
  %and = and i32 %14, 2, !dbg !8697
  %tobool = icmp ne i32 %and, 0, !dbg !8697
  br i1 %tobool, label %if.then, label %if.else, !dbg !8698

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog
  %arrayidx = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8699
  %15 = load i16, i16* %arrayidx, align 2, !dbg !8699
  %conv = zext i16 %15 to i32, !dbg !8699
  %and13 = and i32 %conv, 61440, !dbg !8701
  %conv14 = trunc i32 %and13 to i16, !dbg !8699
  store i16 %conv14, i16* %irq, align 2, !dbg !8702
  %16 = load i16, i16* %irq, align 2, !dbg !8703
  %conv15 = zext i16 %16 to i32, !dbg !8703
  %17 = load i16, i16* %irq, align 2, !dbg !8704
  %conv16 = zext i16 %17 to i32, !dbg !8704
  %shr = ashr i32 %conv16, 4, !dbg !8705
  %or = or i32 %conv15, %shr, !dbg !8706
  %conv17 = trunc i32 %or to i16, !dbg !8703
  store i16 %conv17, i16* %irq, align 2, !dbg !8707
  %18 = load i16, i16* %irq, align 2, !dbg !8708
  %conv18 = zext i16 %18 to i32, !dbg !8708
  %arrayidx19 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8710
  %19 = load i16, i16* %arrayidx19, align 2, !dbg !8710
  %conv20 = zext i16 %19 to i32, !dbg !8710
  %and21 = and i32 %conv20, 65280, !dbg !8711
  %cmp22 = icmp ne i32 %conv18, %and21, !dbg !8712
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !8713

if.then24:                                        ; preds = %if.then
  br label %err_irqconflict, !dbg !8714

if.end:                                           ; preds = %if.then
  br label %if.end86, !dbg !8715

if.else:                                          ; preds = %lor.lhs.false
  %20 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8716
  %info25 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %20, i32 0, i32 2, !dbg !8718
  %21 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info25, align 8, !dbg !8718
  %nports26 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %21, i32 0, i32 1, !dbg !8719
  %22 = load i32, i32* %nports26, align 8, !dbg !8719
  %cmp27 = icmp eq i32 %22, 4, !dbg !8720
  br i1 %cmp27, label %if.then29, label %if.else51, !dbg !8721

if.then29:                                        ; preds = %if.else
  %arrayidx30 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8722
  %23 = load i16, i16* %arrayidx30, align 2, !dbg !8722
  %conv31 = zext i16 %23 to i32, !dbg !8722
  %and32 = and i32 %conv31, 61440, !dbg !8724
  %conv33 = trunc i32 %and32 to i16, !dbg !8722
  store i16 %conv33, i16* %irq, align 2, !dbg !8725
  %24 = load i16, i16* %irq, align 2, !dbg !8726
  %conv34 = zext i16 %24 to i32, !dbg !8726
  %25 = load i16, i16* %irq, align 2, !dbg !8727
  %conv35 = zext i16 %25 to i32, !dbg !8727
  %shr36 = ashr i32 %conv35, 4, !dbg !8728
  %or37 = or i32 %conv34, %shr36, !dbg !8729
  %conv38 = trunc i32 %or37 to i16, !dbg !8726
  store i16 %conv38, i16* %irq, align 2, !dbg !8730
  %26 = load i16, i16* %irq, align 2, !dbg !8731
  %conv39 = zext i16 %26 to i32, !dbg !8731
  %27 = load i16, i16* %irq, align 2, !dbg !8732
  %conv40 = zext i16 %27 to i32, !dbg !8732
  %shr41 = ashr i32 %conv40, 8, !dbg !8733
  %or42 = or i32 %conv39, %shr41, !dbg !8734
  %conv43 = trunc i32 %or42 to i16, !dbg !8731
  store i16 %conv43, i16* %irq, align 2, !dbg !8735
  %28 = load i16, i16* %irq, align 2, !dbg !8736
  %conv44 = zext i16 %28 to i32, !dbg !8736
  %arrayidx45 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8738
  %29 = load i16, i16* %arrayidx45, align 2, !dbg !8738
  %conv46 = zext i16 %29 to i32, !dbg !8738
  %cmp47 = icmp ne i32 %conv44, %conv46, !dbg !8739
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !8740

if.then49:                                        ; preds = %if.then29
  br label %err_irqconflict, !dbg !8741

if.end50:                                         ; preds = %if.then29
  br label %if.end85, !dbg !8742

if.else51:                                        ; preds = %if.else
  %30 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8743
  %info52 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %30, i32 0, i32 2, !dbg !8745
  %31 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info52, align 8, !dbg !8745
  %nports53 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %31, i32 0, i32 1, !dbg !8746
  %32 = load i32, i32* %nports53, align 8, !dbg !8746
  %cmp54 = icmp eq i32 %32, 8, !dbg !8747
  br i1 %cmp54, label %if.then56, label %if.end84, !dbg !8748

if.then56:                                        ; preds = %if.else51
  %arrayidx57 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8749
  %33 = load i16, i16* %arrayidx57, align 2, !dbg !8749
  %conv58 = zext i16 %33 to i32, !dbg !8749
  %and59 = and i32 %conv58, 61440, !dbg !8751
  %conv60 = trunc i32 %and59 to i16, !dbg !8749
  store i16 %conv60, i16* %irq, align 2, !dbg !8752
  %34 = load i16, i16* %irq, align 2, !dbg !8753
  %conv61 = zext i16 %34 to i32, !dbg !8753
  %35 = load i16, i16* %irq, align 2, !dbg !8754
  %conv62 = zext i16 %35 to i32, !dbg !8754
  %shr63 = ashr i32 %conv62, 4, !dbg !8755
  %or64 = or i32 %conv61, %shr63, !dbg !8756
  %conv65 = trunc i32 %or64 to i16, !dbg !8753
  store i16 %conv65, i16* %irq, align 2, !dbg !8757
  %36 = load i16, i16* %irq, align 2, !dbg !8758
  %conv66 = zext i16 %36 to i32, !dbg !8758
  %37 = load i16, i16* %irq, align 2, !dbg !8759
  %conv67 = zext i16 %37 to i32, !dbg !8759
  %shr68 = ashr i32 %conv67, 8, !dbg !8760
  %or69 = or i32 %conv66, %shr68, !dbg !8761
  %conv70 = trunc i32 %or69 to i16, !dbg !8758
  store i16 %conv70, i16* %irq, align 2, !dbg !8762
  %38 = load i16, i16* %irq, align 2, !dbg !8763
  %conv71 = zext i16 %38 to i32, !dbg !8763
  %arrayidx72 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 9, !dbg !8765
  %39 = load i16, i16* %arrayidx72, align 2, !dbg !8765
  %conv73 = zext i16 %39 to i32, !dbg !8765
  %cmp74 = icmp ne i32 %conv71, %conv73, !dbg !8766
  br i1 %cmp74, label %if.then82, label %lor.lhs.false76, !dbg !8767

lor.lhs.false76:                                  ; preds = %if.then56
  %40 = load i16, i16* %irq, align 2, !dbg !8768
  %conv77 = zext i16 %40 to i32, !dbg !8768
  %arrayidx78 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 10, !dbg !8769
  %41 = load i16, i16* %arrayidx78, align 4, !dbg !8769
  %conv79 = zext i16 %41 to i32, !dbg !8769
  %cmp80 = icmp ne i32 %conv77, %conv79, !dbg !8770
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8771

if.then82:                                        ; preds = %lor.lhs.false76, %if.then56
  br label %err_irqconflict, !dbg !8772

if.end83:                                         ; preds = %lor.lhs.false76
  br label %if.end84, !dbg !8773

if.end84:                                         ; preds = %if.end83, %if.else51
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end50
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end
  %42 = load i16, i16* %irq, align 2, !dbg !8774
  %tobool87 = icmp ne i16 %42, 0, !dbg !8774
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !8776

if.then88:                                        ; preds = %if.end86
  %call89 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !8777
  store i32 -5, i32* %retval, align 4, !dbg !8779
  br label %return, !dbg !8779

if.end90:                                         ; preds = %if.end86
  %43 = load i16, i16* %irq, align 2, !dbg !8780
  %conv91 = zext i16 %43 to i32, !dbg !8780
  %and92 = and i32 %conv91, 61440, !dbg !8781
  %shr93 = ashr i32 %and92, 12, !dbg !8782
  %44 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8783
  %irq94 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %44, i32 0, i32 1, !dbg !8784
  store i32 %shr93, i32* %irq94, align 4, !dbg !8785
  store i32 0, i32* %i, align 4, !dbg !8786
  br label %for.cond, !dbg !8788

for.cond:                                         ; preds = %for.inc, %if.end90
  %45 = load i32, i32* %i, align 4, !dbg !8789
  %cmp95 = icmp slt i32 %45, 8, !dbg !8791
  br i1 %cmp95, label %for.body, label %for.end, !dbg !8792

for.body:                                         ; preds = %for.cond
  %46 = load i32, i32* %i, align 4, !dbg !8793
  %add = add i32 %46, 1, !dbg !8794
  %idxprom = sext i32 %add to i64, !dbg !8795
  %arrayidx97 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 %idxprom, !dbg !8795
  %47 = load i16, i16* %arrayidx97, align 2, !dbg !8795
  %conv98 = zext i16 %47 to i32, !dbg !8796
  %and99 = and i32 %conv98, 65528, !dbg !8797
  %conv100 = sext i32 %and99 to i64, !dbg !8796
  %48 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8798
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %48, i32 0, i32 7, !dbg !8799
  %49 = load i32, i32* %i, align 4, !dbg !8800
  %idxprom101 = sext i32 %49 to i64, !dbg !8798
  %arrayidx102 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom101, !dbg !8798
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx102, i32 0, i32 2, !dbg !8801
  store i64 %conv100, i64* %ioaddr, align 8, !dbg !8802
  br label %for.inc, !dbg !8798

for.inc:                                          ; preds = %for.body
  %50 = load i32, i32* %i, align 4, !dbg !8803
  %inc = add i32 %50, 1, !dbg !8803
  store i32 %inc, i32* %i, align 4, !dbg !8803
  br label %for.cond, !dbg !8804, !llvm.loop !8805

for.end:                                          ; preds = %for.cond
  %arrayidx103 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 12, !dbg !8807
  %51 = load i16, i16* %arrayidx103, align 8, !dbg !8807
  %conv104 = zext i16 %51 to i32, !dbg !8807
  %and105 = and i32 %conv104, 128, !dbg !8809
  %cmp106 = icmp eq i32 %and105, 0, !dbg !8810
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !8811

if.then108:                                       ; preds = %for.end
  %call109 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !8812
  store i32 -5, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

if.end110:                                        ; preds = %for.end
  %arrayidx111 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 11, !dbg !8815
  %52 = load i16, i16* %arrayidx111, align 2, !dbg !8815
  %conv112 = zext i16 %52 to i32, !dbg !8816
  %conv113 = sext i32 %conv112 to i64, !dbg !8816
  %53 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8817
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %53, i32 0, i32 3, !dbg !8818
  store i64 %conv113, i64* %vector, align 8, !dbg !8819
  %54 = load i32, i32* %id, align 4, !dbg !8820
  %cmp114 = icmp eq i32 %54, 1, !dbg !8822
  br i1 %cmp114, label %if.then116, label %if.else117, !dbg !8823

if.then116:                                       ; preds = %if.end110
  %55 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8824
  %vector_mask = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %55, i32 0, i32 4, !dbg !8825
  store i64 255, i64* %vector_mask, align 8, !dbg !8826
  br label %if.end119, !dbg !8824

if.else117:                                       ; preds = %if.end110
  %56 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8827
  %vector_mask118 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %56, i32 0, i32 4, !dbg !8828
  store i64 15, i64* %vector_mask118, align 8, !dbg !8829
  br label %if.end119

if.end119:                                        ; preds = %if.else117, %if.then116
  store i32 7, i32* %i, align 4, !dbg !8830
  store i32 256, i32* %bits, align 4, !dbg !8832
  br label %for.cond120, !dbg !8833

for.cond120:                                      ; preds = %for.inc145, %if.end119
  %57 = load i32, i32* %i, align 4, !dbg !8834
  %cmp121 = icmp sge i32 %57, 0, !dbg !8836
  br i1 %cmp121, label %for.body123, label %for.end146, !dbg !8837

for.body123:                                      ; preds = %for.cond120
  %arrayidx124 = getelementptr [16 x i16], [16 x i16]* %regs, i64 0, i64 12, !dbg !8838
  %58 = load i16, i16* %arrayidx124, align 8, !dbg !8838
  %conv125 = zext i16 %58 to i32, !dbg !8838
  %59 = load i32, i32* %bits, align 4, !dbg !8841
  %and126 = and i32 %conv125, %59, !dbg !8842
  %tobool127 = icmp ne i32 %and126, 0, !dbg !8842
  br i1 %tobool127, label %if.then128, label %if.else135, !dbg !8843

if.then128:                                       ; preds = %for.body123
  %60 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8844
  %ports129 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %60, i32 0, i32 7, !dbg !8846
  %61 = load i32, i32* %i, align 4, !dbg !8847
  %idxprom130 = sext i32 %61 to i64, !dbg !8844
  %arrayidx131 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports129, i64 0, i64 %idxprom130, !dbg !8844
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx131, i32 0, i32 8, !dbg !8848
  store i32 921600, i32* %baud_base, align 8, !dbg !8849
  %62 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8850
  %ports132 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %62, i32 0, i32 7, !dbg !8851
  %63 = load i32, i32* %i, align 4, !dbg !8852
  %idxprom133 = sext i32 %63 to i64, !dbg !8850
  %arrayidx134 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports132, i64 0, i64 %idxprom133, !dbg !8850
  %max_baud = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx134, i32 0, i32 4, !dbg !8853
  store i32 921600, i32* %max_baud, align 8, !dbg !8854
  br label %if.end144, !dbg !8855

if.else135:                                       ; preds = %for.body123
  %64 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8856
  %ports136 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %64, i32 0, i32 7, !dbg !8858
  %65 = load i32, i32* %i, align 4, !dbg !8859
  %idxprom137 = sext i32 %65 to i64, !dbg !8856
  %arrayidx138 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports136, i64 0, i64 %idxprom137, !dbg !8856
  %baud_base139 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx138, i32 0, i32 8, !dbg !8860
  store i32 115200, i32* %baud_base139, align 8, !dbg !8861
  %66 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8862
  %ports140 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %66, i32 0, i32 7, !dbg !8863
  %67 = load i32, i32* %i, align 4, !dbg !8864
  %idxprom141 = sext i32 %67 to i64, !dbg !8862
  %arrayidx142 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports140, i64 0, i64 %idxprom141, !dbg !8862
  %max_baud143 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx142, i32 0, i32 4, !dbg !8865
  store i32 115200, i32* %max_baud143, align 8, !dbg !8866
  br label %if.end144

if.end144:                                        ; preds = %if.else135, %if.then128
  br label %for.inc145, !dbg !8867

for.inc145:                                       ; preds = %if.end144
  %68 = load i32, i32* %i, align 4, !dbg !8868
  %dec = add i32 %68, -1, !dbg !8868
  store i32 %dec, i32* %i, align 4, !dbg !8868
  %69 = load i32, i32* %bits, align 4, !dbg !8869
  %shl = shl i32 %69, 1, !dbg !8869
  store i32 %shl, i32* %bits, align 4, !dbg !8869
  br label %for.cond120, !dbg !8870, !llvm.loop !8871

for.end146:                                       ; preds = %for.cond120
  %70 = load i32, i32* %cap.addr, align 4, !dbg !8873
  %add147 = add i32 %70, 3, !dbg !8874
  %call148 = call zeroext i8 @inb(i32 %add147) #11, !dbg !8875
  %conv149 = zext i8 %call148 to i32, !dbg !8875
  %and150 = and i32 %conv149, -129, !dbg !8876
  %conv151 = trunc i32 %and150 to i8, !dbg !8875
  store i8 %conv151, i8* %scratch2, align 1, !dbg !8877
  %71 = load i8, i8* %scratch2, align 1, !dbg !8878
  %conv152 = zext i8 %71 to i32, !dbg !8878
  %or153 = or i32 %conv152, 128, !dbg !8879
  %conv154 = trunc i32 %or153 to i8, !dbg !8878
  %72 = load i32, i32* %cap.addr, align 4, !dbg !8880
  %add155 = add i32 %72, 3, !dbg !8881
  call void @outb(i8 zeroext %conv154, i32 %add155) #11, !dbg !8882
  %73 = load i32, i32* %cap.addr, align 4, !dbg !8883
  %add156 = add i32 %73, 2, !dbg !8884
  call void @outb(i8 zeroext 0, i32 %add156) #11, !dbg !8885
  %74 = load i8, i8* %scratch2, align 1, !dbg !8886
  %75 = load i32, i32* %cap.addr, align 4, !dbg !8887
  %add157 = add i32 %75, 3, !dbg !8888
  call void @outb(i8 zeroext %74, i32 %add157) #11, !dbg !8889
  %76 = load i32, i32* %cap.addr, align 4, !dbg !8890
  %add158 = add i32 %76, 2, !dbg !8891
  call void @outb(i8 zeroext 1, i32 %add158) #11, !dbg !8892
  %77 = load i32, i32* %cap.addr, align 4, !dbg !8893
  %add159 = add i32 %77, 2, !dbg !8894
  %call160 = call zeroext i8 @inb(i32 %add159) #11, !dbg !8895
  store i8 %call160, i8* %scratch, align 1, !dbg !8896
  %78 = load i8, i8* %scratch, align 1, !dbg !8897
  %conv161 = zext i8 %78 to i32, !dbg !8897
  %and162 = and i32 %conv161, 192, !dbg !8899
  %tobool163 = icmp ne i32 %and162, 0, !dbg !8899
  br i1 %tobool163, label %if.then164, label %if.else165, !dbg !8900

if.then164:                                       ; preds = %for.end146
  %79 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8901
  %uart_type = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %79, i32 0, i32 6, !dbg !8902
  store i32 4, i32* %uart_type, align 4, !dbg !8903
  br label %if.end167, !dbg !8901

if.else165:                                       ; preds = %for.end146
  %80 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8904
  %uart_type166 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %80, i32 0, i32 6, !dbg !8905
  store i32 2, i32* %uart_type166, align 4, !dbg !8906
  br label %if.end167

if.end167:                                        ; preds = %if.else165, %if.then164
  %81 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8907
  %ports168 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %81, i32 0, i32 7, !dbg !8907
  %arrayidx169 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports168, i64 0, i64 0, !dbg !8907
  %ioaddr170 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx169, i32 0, i32 2, !dbg !8907
  %82 = load i64, i64* %ioaddr170, align 8, !dbg !8907
  %83 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8907
  %info171 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %83, i32 0, i32 2, !dbg !8907
  %84 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info171, align 8, !dbg !8907
  %nports172 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %84, i32 0, i32 1, !dbg !8907
  %85 = load i32, i32* %nports172, align 8, !dbg !8907
  %mul = mul i32 8, %85, !dbg !8907
  %conv173 = zext i32 %mul to i64, !dbg !8907
  %call174 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %82, i64 %conv173, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 0) #11, !dbg !8907
  %tobool175 = icmp ne %struct.resource* %call174, null, !dbg !8907
  br i1 %tobool175, label %if.end189, label %if.then176, !dbg !8909

if.then176:                                       ; preds = %if.end167
  %86 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8910
  %ports177 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %86, i32 0, i32 7, !dbg !8912
  %arrayidx178 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports177, i64 0, i64 0, !dbg !8910
  %ioaddr179 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx178, i32 0, i32 2, !dbg !8913
  %87 = load i64, i64* %ioaddr179, align 8, !dbg !8913
  %88 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8914
  %ports180 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %88, i32 0, i32 7, !dbg !8915
  %arrayidx181 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports180, i64 0, i64 0, !dbg !8914
  %ioaddr182 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx181, i32 0, i32 2, !dbg !8916
  %89 = load i64, i64* %ioaddr182, align 8, !dbg !8916
  %90 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8917
  %info183 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %90, i32 0, i32 2, !dbg !8918
  %91 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info183, align 8, !dbg !8918
  %nports184 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %91, i32 0, i32 1, !dbg !8919
  %92 = load i32, i32* %nports184, align 8, !dbg !8919
  %mul185 = mul i32 8, %92, !dbg !8920
  %conv186 = zext i32 %mul185 to i64, !dbg !8921
  %add187 = add i64 %89, %conv186, !dbg !8922
  %sub = sub i64 %add187, 1, !dbg !8923
  %call188 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.52, i64 0, i64 0), i64 %87, i64 %sub) #12, !dbg !8924
  store i32 -5, i32* %retval, align 4, !dbg !8925
  br label %return, !dbg !8925

if.end189:                                        ; preds = %if.end167
  %93 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8926
  %call190 = call i32 @mxser_request_vector(%struct.mxser_board* %93) #11, !dbg !8927
  store i32 %call190, i32* %ret, align 4, !dbg !8928
  %94 = load i32, i32* %ret, align 4, !dbg !8929
  %tobool191 = icmp ne i32 %94, 0, !dbg !8929
  br i1 %tobool191, label %if.then192, label %if.end213, !dbg !8931

if.then192:                                       ; preds = %if.end189
  %95 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8932
  %ports193 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %95, i32 0, i32 7, !dbg !8932
  %arrayidx194 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports193, i64 0, i64 0, !dbg !8932
  %ioaddr195 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx194, i32 0, i32 2, !dbg !8932
  %96 = load i64, i64* %ioaddr195, align 8, !dbg !8932
  %97 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8932
  %info196 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %97, i32 0, i32 2, !dbg !8932
  %98 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info196, align 8, !dbg !8932
  %nports197 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %98, i32 0, i32 1, !dbg !8932
  %99 = load i32, i32* %nports197, align 8, !dbg !8932
  %mul198 = mul i32 8, %99, !dbg !8932
  %conv199 = zext i32 %mul198 to i64, !dbg !8932
  call void @__release_region(%struct.resource* @ioport_resource, i64 %96, i64 %conv199) #11, !dbg !8932
  %100 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8934
  %ports200 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %100, i32 0, i32 7, !dbg !8935
  %arrayidx201 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports200, i64 0, i64 0, !dbg !8934
  %ioaddr202 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx201, i32 0, i32 2, !dbg !8936
  %101 = load i64, i64* %ioaddr202, align 8, !dbg !8936
  %102 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8937
  %ports203 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %102, i32 0, i32 7, !dbg !8938
  %arrayidx204 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports203, i64 0, i64 0, !dbg !8937
  %ioaddr205 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx204, i32 0, i32 2, !dbg !8939
  %103 = load i64, i64* %ioaddr205, align 8, !dbg !8939
  %104 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8940
  %info206 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %104, i32 0, i32 2, !dbg !8941
  %105 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info206, align 8, !dbg !8941
  %nports207 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %105, i32 0, i32 1, !dbg !8942
  %106 = load i32, i32* %nports207, align 8, !dbg !8942
  %mul208 = mul i32 8, %106, !dbg !8943
  %conv209 = zext i32 %mul208 to i64, !dbg !8944
  %add210 = add i64 %103, %conv209, !dbg !8945
  %sub211 = sub i64 %add210, 1, !dbg !8946
  %call212 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.53, i64 0, i64 0), i64 %101, i64 %sub211) #12, !dbg !8947
  %107 = load i32, i32* %ret, align 4, !dbg !8948
  store i32 %107, i32* %retval, align 4, !dbg !8949
  br label %return, !dbg !8949

if.end213:                                        ; preds = %if.end189
  %108 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !8950
  %info214 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %108, i32 0, i32 2, !dbg !8951
  %109 = load %struct.mxser_cardinfo*, %struct.mxser_cardinfo** %info214, align 8, !dbg !8951
  %nports215 = getelementptr inbounds %struct.mxser_cardinfo, %struct.mxser_cardinfo* %109, i32 0, i32 1, !dbg !8952
  %110 = load i32, i32* %nports215, align 8, !dbg !8952
  store i32 %110, i32* %retval, align 4, !dbg !8953
  br label %return, !dbg !8953

err_irqconflict:                                  ; preds = %if.then82, %if.then49, %if.then24
  call void @llvm.dbg.label(metadata !8954), !dbg !8955
  %call216 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !8956
  store i32 -5, i32* %retval, align 4, !dbg !8957
  br label %return, !dbg !8957

return:                                           ; preds = %err_irqconflict, %if.end213, %if.then192, %if.then176, %if.then108, %if.then88, %sw.default
  %111 = load i32, i32* %retval, align 4, !dbg !8958
  ret i32 %111, !dbg !8958
}

; Function Attrs: noredzone
declare dso_local i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.tty_driver* @__tty_alloc_driver(i32, %struct.module*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_open(%struct.tty_struct* %tty, %struct.file* %filp) #3 !dbg !8959 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %line = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata i32* %line, metadata !8966, metadata !DIExpression()), !dbg !8967
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8968
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 5, !dbg !8969
  %1 = load i32, i32* %index, align 8, !dbg !8969
  store i32 %1, i32* %line, align 4, !dbg !8970
  %2 = load i32, i32* %line, align 4, !dbg !8971
  %cmp = icmp eq i32 %2, 32, !dbg !8973
  br i1 %cmp, label %if.then, label %if.end, !dbg !8974

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8975
  br label %return, !dbg !8975

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %line, align 4, !dbg !8976
  %div = sdiv i32 %3, 8, !dbg !8977
  %idxprom = sext i32 %div to i64, !dbg !8978
  %arrayidx = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom, !dbg !8978
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx, i32 0, i32 7, !dbg !8979
  %4 = load i32, i32* %line, align 4, !dbg !8980
  %rem = srem i32 %4, 8, !dbg !8981
  %idxprom1 = sext i32 %rem to i64, !dbg !8978
  %arrayidx2 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom1, !dbg !8978
  store %struct.mxser_port* %arrayidx2, %struct.mxser_port** %info, align 8, !dbg !8982
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8983
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 2, !dbg !8985
  %6 = load i64, i64* %ioaddr, align 8, !dbg !8985
  %tobool = icmp ne i64 %6, 0, !dbg !8983
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !8986

if.then3:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !8987
  br label %return, !dbg !8987

if.end4:                                          ; preds = %if.end
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8988
  %8 = bitcast %struct.mxser_port* %7 to i8*, !dbg !8988
  %9 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8989
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %9, i32 0, i32 37, !dbg !8990
  store i8* %8, i8** %driver_data, align 8, !dbg !8991
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !8992
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 0, !dbg !8993
  %11 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !8994
  %12 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8995
  %call = call i32 @tty_port_open(%struct.tty_port* %port, %struct.tty_struct* %11, %struct.file* %12) #11, !dbg !8996
  store i32 %call, i32* %retval, align 4, !dbg !8997
  br label %return, !dbg !8997

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8998
  ret i32 %13, !dbg !8998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_close(%struct.tty_struct* %tty, %struct.file* %filp) #3 !dbg !8999 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %filp.addr = alloca %struct.file*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9004, metadata !DIExpression()), !dbg !9005
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9006
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9007
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9007
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9006
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !9008, metadata !DIExpression()), !dbg !9009
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9010
  %port1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 0, !dbg !9011
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !9009
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9012
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 5, !dbg !9014
  %5 = load i32, i32* %index, align 8, !dbg !9014
  %cmp = icmp eq i32 %5, 32, !dbg !9015
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9016

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9017
  %cmp2 = icmp eq %struct.mxser_port* %6, null, !dbg !9018
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9019

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9020

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9021
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9023
  %9 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !9024
  %call = call i32 @tty_port_close_start(%struct.tty_port* %7, %struct.tty_struct* %8, %struct.file* %9) #11, !dbg !9025
  %cmp3 = icmp eq i32 %call, 0, !dbg !9026
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9027

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !9028

if.end5:                                          ; preds = %if.end
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9029
  %closing = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 25, !dbg !9030
  store i32 1, i32* %closing, align 8, !dbg !9031
  %11 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9032
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %11, i32 0, i32 13, !dbg !9033
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !9034
  %12 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9035
  call void @mxser_close_port(%struct.tty_port* %12) #11, !dbg !9036
  %13 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9037
  call void @mxser_flush_buffer(%struct.tty_struct* %13) #11, !dbg !9038
  %14 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9039
  %call6 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %14) #11, !dbg !9041
  br i1 %call6, label %land.lhs.true, label %if.end8, !dbg !9042

land.lhs.true:                                    ; preds = %if.end5
  %15 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9043
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %15, i32 0, i32 15, !dbg !9043
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !9043
  %16 = load i32, i32* %c_cflag, align 8, !dbg !9043
  %and = and i32 %16, 1024, !dbg !9043
  %tobool = icmp ne i32 %and, 0, !dbg !9043
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !9044

if.then7:                                         ; preds = %land.lhs.true
  %17 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9045
  call void @tty_port_lower_dtr_rts(%struct.tty_port* %17) #11, !dbg !9046
  br label %if.end8, !dbg !9046

if.end8:                                          ; preds = %if.then7, %land.lhs.true, %if.end5
  %18 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9047
  call void @mxser_shutdown_port(%struct.tty_port* %18) #11, !dbg !9048
  %19 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9049
  call void @tty_port_set_initialized(%struct.tty_port* %19, i1 zeroext false) #11, !dbg !9050
  %20 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9051
  %mutex9 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %20, i32 0, i32 13, !dbg !9052
  call void @mutex_unlock(%struct.mutex* %mutex9) #11, !dbg !9053
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9054
  %closing10 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 25, !dbg !9055
  store i32 0, i32* %closing10, align 8, !dbg !9056
  %22 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9057
  %23 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9058
  call void @tty_port_close_end(%struct.tty_port* %22, %struct.tty_struct* %23) #11, !dbg !9059
  %24 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !9060
  call void @tty_port_tty_set(%struct.tty_port* %24, %struct.tty_struct* null) #11, !dbg !9061
  br label %return, !dbg !9062

return:                                           ; preds = %if.end8, %if.then4, %if.then
  ret void, !dbg !9062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_write(%struct.tty_struct* %tty, i8* %buf, i32 %count) #3 !dbg !9063 {
entry:
  %lock.addr.i110 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i110, metadata !5557, metadata !DIExpression()), !dbg !9064
  %lock.addr.i105 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i105, metadata !6302, metadata !DIExpression()), !dbg !9075
  %flags.addr.i106 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i106, metadata !6308, metadata !DIExpression()), !dbg !9078
  %tmp.i107 = alloca i32, align 4
  %tmp8.i108 = alloca i32, align 4
  %lock.addr.i103 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i103, metadata !6302, metadata !DIExpression()), !dbg !9079
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !9081
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !9082
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %c = alloca i32, align 4
  %total = alloca i32, align 4
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__UNIQUE_ID___x254 = alloca i32, align 4
  %__UNIQUE_ID___y255 = alloca i32, align 4
  %__UNIQUE_ID___x252 = alloca i64, align 8
  %__UNIQUE_ID___y253 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp6 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy65 = alloca i64, align 8
  %__dummy266 = alloca i64, align 8
  %tmp69 = alloca i32, align 4
  %__dummy73 = alloca i64, align 8
  %__dummy274 = alloca i64, align 8
  %tmp77 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9089, metadata !DIExpression()), !dbg !9090
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !9093, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %total, metadata !9097, metadata !DIExpression()), !dbg !9098
  store i32 0, i32* %total, align 4, !dbg !9098
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9101
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9102
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9102
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9101
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9100
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9103, metadata !DIExpression()), !dbg !9104
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9105
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 0, !dbg !9107
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !9108
  %4 = load i8*, i8** %xmit_buf, align 8, !dbg !9108
  %tobool = icmp ne i8* %4, null, !dbg !9105
  br i1 %tobool, label %if.end, label %if.then, !dbg !9109

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9110
  br label %return, !dbg !9110

if.end:                                           ; preds = %entry
  br label %while.body, !dbg !9111

while.body:                                       ; preds = %if.end, %do.end41
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x254, metadata !9112, metadata !DIExpression()), !dbg !9114
  %5 = load i32, i32* %count.addr, align 4, !dbg !9114
  store i32 %5, i32* %__UNIQUE_ID___x254, align 4, !dbg !9114
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y255, metadata !9115, metadata !DIExpression()), !dbg !9114
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x252, metadata !9116, metadata !DIExpression()), !dbg !9118
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9118
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 24, !dbg !9118
  %7 = load i32, i32* %xmit_cnt, align 4, !dbg !9118
  %conv = sext i32 %7 to i64, !dbg !9118
  %sub = sub i64 4096, %conv, !dbg !9118
  %sub1 = sub i64 %sub, 1, !dbg !9118
  store i64 %sub1, i64* %__UNIQUE_ID___x252, align 8, !dbg !9118
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y253, metadata !9119, metadata !DIExpression()), !dbg !9118
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9118
  %xmit_head = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 22, !dbg !9118
  %9 = load i32, i32* %xmit_head, align 4, !dbg !9118
  %conv2 = sext i32 %9 to i64, !dbg !9118
  %sub3 = sub i64 4096, %conv2, !dbg !9118
  store i64 %sub3, i64* %__UNIQUE_ID___y253, align 8, !dbg !9118
  %10 = load i64, i64* %__UNIQUE_ID___x252, align 8, !dbg !9118
  %11 = load i64, i64* %__UNIQUE_ID___y253, align 8, !dbg !9118
  %cmp = icmp ult i64 %10, %11, !dbg !9118
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9118

cond.true:                                        ; preds = %while.body
  %12 = load i64, i64* %__UNIQUE_ID___x252, align 8, !dbg !9118
  br label %cond.end, !dbg !9118

cond.false:                                       ; preds = %while.body
  %13 = load i64, i64* %__UNIQUE_ID___y253, align 8, !dbg !9118
  br label %cond.end, !dbg !9118

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %12, %cond.true ], [ %13, %cond.false ], !dbg !9118
  store i64 %cond, i64* %tmp, align 8, !dbg !9118
  %14 = load i64, i64* %tmp, align 8, !dbg !9118
  %conv5 = trunc i64 %14 to i32, !dbg !9114
  store i32 %conv5, i32* %__UNIQUE_ID___y255, align 4, !dbg !9114
  %15 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !9114
  %16 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !9114
  %cmp7 = icmp slt i32 %15, %16, !dbg !9114
  br i1 %cmp7, label %cond.true9, label %cond.false10, !dbg !9114

cond.true9:                                       ; preds = %cond.end
  %17 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !9114
  br label %cond.end11, !dbg !9114

cond.false10:                                     ; preds = %cond.end
  %18 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !9114
  br label %cond.end11, !dbg !9114

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ %17, %cond.true9 ], [ %18, %cond.false10 ], !dbg !9114
  store i32 %cond12, i32* %tmp6, align 4, !dbg !9114
  %19 = load i32, i32* %tmp6, align 4, !dbg !9114
  store i32 %19, i32* %c, align 4, !dbg !9120
  %20 = load i32, i32* %c, align 4, !dbg !9121
  %cmp13 = icmp sle i32 %20, 0, !dbg !9123
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9124

if.then15:                                        ; preds = %cond.end11
  br label %while.end, !dbg !9125

if.end16:                                         ; preds = %cond.end11
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9126
  %port17 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 0, !dbg !9127
  %xmit_buf18 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port17, i32 0, i32 15, !dbg !9128
  %22 = load i8*, i8** %xmit_buf18, align 8, !dbg !9128
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9129
  %xmit_head19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 22, !dbg !9130
  %24 = load i32, i32* %xmit_head19, align 4, !dbg !9130
  %idx.ext = sext i32 %24 to i64, !dbg !9131
  %add.ptr = getelementptr i8, i8* %22, i64 %idx.ext, !dbg !9131
  %25 = load i8*, i8** %buf.addr, align 8, !dbg !9132
  %26 = load i32, i32* %c, align 4, !dbg !9133
  %conv20 = sext i32 %26 to i64, !dbg !9133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %25, i64 %conv20, i1 false), !dbg !9134
  br label %do.body, !dbg !9135

do.body:                                          ; preds = %if.end16
  br label %do.body21, !dbg !9136

do.body21:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9137, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9140, metadata !DIExpression()), !dbg !9139
  %cmp22 = icmp eq i64* %__dummy, %__dummy2, !dbg !9139
  %conv23 = zext i1 %cmp22 to i32, !dbg !9139
  store i32 1, i32* %tmp24, align 4, !dbg !9139
  %27 = load i32, i32* %tmp24, align 4, !dbg !9139
  br label %do.body25, !dbg !9141

do.body25:                                        ; preds = %do.body21
  br label %do.body26, !dbg !9142

do.body26:                                        ; preds = %do.body25
  br label %do.body27, !dbg !9143

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9145, metadata !DIExpression()), !dbg !9148
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !9149, metadata !DIExpression()), !dbg !9148
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !9148
  %conv31 = zext i1 %cmp30 to i32, !dbg !9148
  store i32 1, i32* %tmp32, align 4, !dbg !9148
  %28 = load i32, i32* %tmp32, align 4, !dbg !9148
  %call = call i64 @arch_local_irq_save() #11, !dbg !9150
  store i64 %call, i64* %flags, align 8, !dbg !9150
  br label %do.end, !dbg !9150

do.end:                                           ; preds = %do.body27
  br label %do.end33, !dbg !9143

do.end33:                                         ; preds = %do.end
  br label %do.body34, !dbg !9142

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9151, !srcloc !9152
  br label %do.body35, !dbg !9151

do.body35:                                        ; preds = %do.body34
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9153
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 28, !dbg !9153
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9154
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9155
  %rlock.i = bitcast %union.anon.2* %31 to %struct.raw_spinlock*, !dbg !9155
  br label %do.end37, !dbg !9153

do.end37:                                         ; preds = %do.body35
  br label %do.end38, !dbg !9151

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !9142

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !9141

do.end40:                                         ; preds = %do.end39
  br label %do.end41, !dbg !9136

do.end41:                                         ; preds = %do.end40
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9156
  %xmit_head42 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 22, !dbg !9157
  %33 = load i32, i32* %xmit_head42, align 4, !dbg !9157
  %34 = load i32, i32* %c, align 4, !dbg !9158
  %add = add i32 %33, %34, !dbg !9159
  %conv43 = sext i32 %add to i64, !dbg !9160
  %and = and i64 %conv43, 4095, !dbg !9161
  %conv44 = trunc i64 %and to i32, !dbg !9160
  %35 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9162
  %xmit_head45 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 22, !dbg !9163
  store i32 %conv44, i32* %xmit_head45, align 4, !dbg !9164
  %36 = load i32, i32* %c, align 4, !dbg !9165
  %37 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9166
  %xmit_cnt46 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 24, !dbg !9167
  %38 = load i32, i32* %xmit_cnt46, align 4, !dbg !9168
  %add47 = add i32 %38, %36, !dbg !9168
  store i32 %add47, i32* %xmit_cnt46, align 4, !dbg !9168
  %39 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9169
  %slock48 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %39, i32 0, i32 28, !dbg !9170
  %40 = load i64, i64* %flags, align 8, !dbg !9171
  store %struct.spinlock* %slock48, %struct.spinlock** %lock.addr.i105, align 8
  store i64 %40, i64* %flags.addr.i106, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9172
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9172
  store i32 1, i32* %tmp.i107, align 4, !dbg !9172
  %41 = load i32, i32* %tmp.i107, align 4, !dbg !9172
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9173
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9173
  store i32 1, i32* %tmp8.i108, align 4, !dbg !9173
  %42 = load i32, i32* %tmp8.i108, align 4, !dbg !9173
  %43 = load i64, i64* %flags.addr.i106, align 8, !dbg !9174
  call void @arch_local_irq_restore(i64 %43) #13, !dbg !9174
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9175, !srcloc !6391
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i105, align 8, !dbg !9176
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !9176
  %rlock.i109 = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !9176
  %46 = load i32, i32* %c, align 4, !dbg !9177
  %47 = load i8*, i8** %buf.addr, align 8, !dbg !9178
  %idx.ext49 = sext i32 %46 to i64, !dbg !9178
  %add.ptr50 = getelementptr i8, i8* %47, i64 %idx.ext49, !dbg !9178
  store i8* %add.ptr50, i8** %buf.addr, align 8, !dbg !9178
  %48 = load i32, i32* %c, align 4, !dbg !9179
  %49 = load i32, i32* %count.addr, align 4, !dbg !9180
  %sub51 = sub i32 %49, %48, !dbg !9180
  store i32 %sub51, i32* %count.addr, align 4, !dbg !9180
  %50 = load i32, i32* %c, align 4, !dbg !9181
  %51 = load i32, i32* %total, align 4, !dbg !9182
  %add52 = add i32 %51, %50, !dbg !9182
  store i32 %add52, i32* %total, align 4, !dbg !9182
  br label %while.body, !dbg !9111, !llvm.loop !9183

while.end:                                        ; preds = %if.then15
  %52 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9185
  %xmit_cnt53 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %52, i32 0, i32 24, !dbg !9186
  %53 = load i32, i32* %xmit_cnt53, align 4, !dbg !9186
  %tobool54 = icmp ne i32 %53, 0, !dbg !9185
  br i1 %tobool54, label %land.lhs.true, label %if.end102, !dbg !9187

land.lhs.true:                                    ; preds = %while.end
  %54 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9188
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %54, i32 0, i32 24, !dbg !9189
  %bf.load = load i8, i8* %stopped, align 4, !dbg !9189
  %bf.clear = and i8 %bf.load, 1, !dbg !9189
  %bf.cast = zext i8 %bf.clear to i64, !dbg !9189
  %tobool55 = icmp ne i64 %bf.cast, 0, !dbg !9188
  br i1 %tobool55, label %if.end102, label %if.then56, !dbg !9190

if.then56:                                        ; preds = %land.lhs.true
  %55 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9191
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %55, i32 0, i32 26, !dbg !9192
  %56 = load i32, i32* %hw_stopped, align 8, !dbg !9192
  %tobool57 = icmp ne i32 %56, 0, !dbg !9191
  br i1 %tobool57, label %lor.lhs.false, label %if.then62, !dbg !9193

lor.lhs.false:                                    ; preds = %if.then56
  %57 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9194
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %57, i32 0, i32 9, !dbg !9195
  %58 = load i32, i32* %type, align 4, !dbg !9195
  %cmp58 = icmp eq i32 %58, 4, !dbg !9196
  br i1 %cmp58, label %if.then62, label %lor.lhs.false60, !dbg !9197

lor.lhs.false60:                                  ; preds = %lor.lhs.false
  %59 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9198
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %59, i32 0, i32 1, !dbg !9199
  %60 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !9199
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %60, i32 0, i32 5, !dbg !9200
  %61 = load i32, i32* %chip_flag, align 8, !dbg !9200
  %tobool61 = icmp ne i32 %61, 0, !dbg !9201
  br i1 %tobool61, label %if.then62, label %if.end101, !dbg !9202

if.then62:                                        ; preds = %lor.lhs.false60, %lor.lhs.false, %if.then56
  br label %do.body63, !dbg !9203

do.body63:                                        ; preds = %if.then62
  br label %do.body64, !dbg !9204

do.body64:                                        ; preds = %do.body63
  call void @llvm.dbg.declare(metadata i64* %__dummy65, metadata !9205, metadata !DIExpression()), !dbg !9207
  call void @llvm.dbg.declare(metadata i64* %__dummy266, metadata !9208, metadata !DIExpression()), !dbg !9207
  %cmp67 = icmp eq i64* %__dummy65, %__dummy266, !dbg !9207
  %conv68 = zext i1 %cmp67 to i32, !dbg !9207
  store i32 1, i32* %tmp69, align 4, !dbg !9207
  %62 = load i32, i32* %tmp69, align 4, !dbg !9207
  br label %do.body70, !dbg !9209

do.body70:                                        ; preds = %do.body64
  br label %do.body71, !dbg !9210

do.body71:                                        ; preds = %do.body70
  br label %do.body72, !dbg !9211

do.body72:                                        ; preds = %do.body71
  call void @llvm.dbg.declare(metadata i64* %__dummy73, metadata !9213, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.declare(metadata i64* %__dummy274, metadata !9217, metadata !DIExpression()), !dbg !9216
  %cmp75 = icmp eq i64* %__dummy73, %__dummy274, !dbg !9216
  %conv76 = zext i1 %cmp75 to i32, !dbg !9216
  store i32 1, i32* %tmp77, align 4, !dbg !9216
  %63 = load i32, i32* %tmp77, align 4, !dbg !9216
  %call78 = call i64 @arch_local_irq_save() #11, !dbg !9218
  store i64 %call78, i64* %flags, align 8, !dbg !9218
  br label %do.end79, !dbg !9218

do.end79:                                         ; preds = %do.body72
  br label %do.end80, !dbg !9211

do.end80:                                         ; preds = %do.end79
  br label %do.body81, !dbg !9210

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9219, !srcloc !9220
  br label %do.body82, !dbg !9219

do.body82:                                        ; preds = %do.body81
  %64 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9221
  %slock83 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %64, i32 0, i32 28, !dbg !9221
  store %struct.spinlock* %slock83, %struct.spinlock** %lock.addr.i110, align 8
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i110, align 8, !dbg !9222
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !9223
  %rlock.i111 = bitcast %union.anon.2* %66 to %struct.raw_spinlock*, !dbg !9223
  br label %do.end85, !dbg !9221

do.end85:                                         ; preds = %do.body82
  br label %do.end86, !dbg !9219

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !9210

do.end87:                                         ; preds = %do.end86
  br label %do.end88, !dbg !9209

do.end88:                                         ; preds = %do.end87
  br label %do.end89, !dbg !9204

do.end89:                                         ; preds = %do.end88
  %67 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9224
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %67, i32 0, i32 11, !dbg !9225
  %68 = load i32, i32* %IER, align 4, !dbg !9225
  %and90 = and i32 %68, -3, !dbg !9226
  %conv91 = trunc i32 %and90 to i8, !dbg !9224
  %69 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9227
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %69, i32 0, i32 2, !dbg !9228
  %70 = load i64, i64* %ioaddr, align 8, !dbg !9228
  %add92 = add i64 %70, 1, !dbg !9229
  %conv93 = trunc i64 %add92 to i32, !dbg !9227
  call void @outb(i8 zeroext %conv91, i32 %conv93) #11, !dbg !9230
  %71 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9231
  %IER94 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %71, i32 0, i32 11, !dbg !9232
  %72 = load i32, i32* %IER94, align 4, !dbg !9233
  %or = or i32 %72, 2, !dbg !9233
  store i32 %or, i32* %IER94, align 4, !dbg !9233
  %73 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9234
  %IER95 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %73, i32 0, i32 11, !dbg !9235
  %74 = load i32, i32* %IER95, align 4, !dbg !9235
  %conv96 = trunc i32 %74 to i8, !dbg !9234
  %75 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9236
  %ioaddr97 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %75, i32 0, i32 2, !dbg !9237
  %76 = load i64, i64* %ioaddr97, align 8, !dbg !9237
  %add98 = add i64 %76, 1, !dbg !9238
  %conv99 = trunc i64 %add98 to i32, !dbg !9236
  call void @outb(i8 zeroext %conv96, i32 %conv99) #11, !dbg !9239
  %77 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9240
  %slock100 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %77, i32 0, i32 28, !dbg !9241
  %78 = load i64, i64* %flags, align 8, !dbg !9242
  store %struct.spinlock* %slock100, %struct.spinlock** %lock.addr.i103, align 8
  store i64 %78, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9243
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9243
  store i32 1, i32* %tmp.i, align 4, !dbg !9243
  %79 = load i32, i32* %tmp.i, align 4, !dbg !9243
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9244
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9244
  store i32 1, i32* %tmp8.i, align 4, !dbg !9244
  %80 = load i32, i32* %tmp8.i, align 4, !dbg !9244
  %81 = load i64, i64* %flags.addr.i, align 8, !dbg !9245
  call void @arch_local_irq_restore(i64 %81) #13, !dbg !9245
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9246, !srcloc !6391
  %82 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i103, align 8, !dbg !9247
  %83 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %82, i32 0, i32 0, !dbg !9247
  %rlock.i104 = bitcast %union.anon.2* %83 to %struct.raw_spinlock*, !dbg !9247
  br label %if.end101, !dbg !9248

if.end101:                                        ; preds = %do.end89, %lor.lhs.false60
  br label %if.end102, !dbg !9249

if.end102:                                        ; preds = %if.end101, %land.lhs.true, %while.end
  %84 = load i32, i32* %total, align 4, !dbg !9250
  store i32 %84, i32* %retval, align 4, !dbg !9251
  br label %return, !dbg !9251

return:                                           ; preds = %if.end102, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !9252
  ret i32 %85, !dbg !9252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_put_char(%struct.tty_struct* %tty, i8 zeroext %ch) #3 !dbg !9253 {
entry:
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !5557, metadata !DIExpression()), !dbg !9254
  %lock.addr.i81 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i81, metadata !6302, metadata !DIExpression()), !dbg !9265
  %flags.addr.i82 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i82, metadata !6308, metadata !DIExpression()), !dbg !9267
  %tmp.i83 = alloca i32, align 4
  %tmp8.i84 = alloca i32, align 4
  %lock.addr.i79 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i79, metadata !6302, metadata !DIExpression()), !dbg !9268
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !9270
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !9271
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ch.addr = alloca i8, align 1
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9282, metadata !DIExpression()), !dbg !9283
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9284
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9285
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9285
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9284
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9283
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9286, metadata !DIExpression()), !dbg !9287
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9288
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 0, !dbg !9290
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !9291
  %4 = load i8*, i8** %xmit_buf, align 8, !dbg !9291
  %tobool = icmp ne i8* %4, null, !dbg !9288
  br i1 %tobool, label %if.end, label %if.then, !dbg !9292

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9293
  br label %return, !dbg !9293

if.end:                                           ; preds = %entry
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9294
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 24, !dbg !9296
  %6 = load i32, i32* %xmit_cnt, align 4, !dbg !9296
  %conv = sext i32 %6 to i64, !dbg !9294
  %cmp = icmp uge i64 %conv, 4095, !dbg !9297
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9298

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9299
  br label %return, !dbg !9299

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !9300

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !9301

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9305, metadata !DIExpression()), !dbg !9304
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !9304
  %conv6 = zext i1 %cmp5 to i32, !dbg !9304
  store i32 1, i32* %tmp, align 4, !dbg !9304
  %7 = load i32, i32* %tmp, align 4, !dbg !9304
  br label %do.body7, !dbg !9306

do.body7:                                         ; preds = %do.body4
  br label %do.body8, !dbg !9307

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !9308

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !9310, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !9314, metadata !DIExpression()), !dbg !9313
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !9313
  %conv13 = zext i1 %cmp12 to i32, !dbg !9313
  store i32 1, i32* %tmp14, align 4, !dbg !9313
  %8 = load i32, i32* %tmp14, align 4, !dbg !9313
  %call = call i64 @arch_local_irq_save() #11, !dbg !9315
  store i64 %call, i64* %flags, align 8, !dbg !9315
  br label %do.end, !dbg !9315

do.end:                                           ; preds = %do.body9
  br label %do.end15, !dbg !9308

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !9307

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9316, !srcloc !9317
  br label %do.body17, !dbg !9316

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9318
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 28, !dbg !9318
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9319
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9320
  %rlock.i = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !9320
  br label %do.end19, !dbg !9318

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9316

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9307

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9306

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9301

do.end23:                                         ; preds = %do.end22
  %12 = load i8, i8* %ch.addr, align 1, !dbg !9321
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9322
  %port24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 0, !dbg !9323
  %xmit_buf25 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port24, i32 0, i32 15, !dbg !9324
  %14 = load i8*, i8** %xmit_buf25, align 8, !dbg !9324
  %15 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9325
  %xmit_head = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 22, !dbg !9326
  %16 = load i32, i32* %xmit_head, align 4, !dbg !9327
  %inc = add i32 %16, 1, !dbg !9327
  store i32 %inc, i32* %xmit_head, align 4, !dbg !9327
  %idxprom = sext i32 %16 to i64, !dbg !9322
  %arrayidx = getelementptr i8, i8* %14, i64 %idxprom, !dbg !9322
  store i8 %12, i8* %arrayidx, align 1, !dbg !9328
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9329
  %xmit_head26 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 22, !dbg !9330
  %18 = load i32, i32* %xmit_head26, align 4, !dbg !9331
  %conv27 = sext i32 %18 to i64, !dbg !9331
  %and = and i64 %conv27, 4095, !dbg !9331
  %conv28 = trunc i64 %and to i32, !dbg !9331
  store i32 %conv28, i32* %xmit_head26, align 4, !dbg !9331
  %19 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9332
  %xmit_cnt29 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 24, !dbg !9333
  %20 = load i32, i32* %xmit_cnt29, align 4, !dbg !9334
  %inc30 = add i32 %20, 1, !dbg !9334
  store i32 %inc30, i32* %xmit_cnt29, align 4, !dbg !9334
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9335
  %slock31 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 28, !dbg !9336
  %22 = load i64, i64* %flags, align 8, !dbg !9337
  store %struct.spinlock* %slock31, %struct.spinlock** %lock.addr.i81, align 8
  store i64 %22, i64* %flags.addr.i82, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9338
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9338
  store i32 1, i32* %tmp.i83, align 4, !dbg !9338
  %23 = load i32, i32* %tmp.i83, align 4, !dbg !9338
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9339
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9339
  store i32 1, i32* %tmp8.i84, align 4, !dbg !9339
  %24 = load i32, i32* %tmp8.i84, align 4, !dbg !9339
  %25 = load i64, i64* %flags.addr.i82, align 8, !dbg !9340
  call void @arch_local_irq_restore(i64 %25) #13, !dbg !9340
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9341, !srcloc !6391
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i81, align 8, !dbg !9342
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !9342
  %rlock.i85 = bitcast %union.anon.2* %27 to %struct.raw_spinlock*, !dbg !9342
  %28 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9343
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %28, i32 0, i32 24, !dbg !9344
  %bf.load = load i8, i8* %stopped, align 4, !dbg !9344
  %bf.clear = and i8 %bf.load, 1, !dbg !9344
  %bf.cast = zext i8 %bf.clear to i64, !dbg !9344
  %tobool32 = icmp ne i64 %bf.cast, 0, !dbg !9343
  br i1 %tobool32, label %if.end78, label %if.then33, !dbg !9345

if.then33:                                        ; preds = %do.end23
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9346
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %29, i32 0, i32 26, !dbg !9347
  %30 = load i32, i32* %hw_stopped, align 8, !dbg !9347
  %tobool34 = icmp ne i32 %30, 0, !dbg !9346
  br i1 %tobool34, label %lor.lhs.false, label %if.then39, !dbg !9348

lor.lhs.false:                                    ; preds = %if.then33
  %31 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9349
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %31, i32 0, i32 9, !dbg !9350
  %32 = load i32, i32* %type, align 4, !dbg !9350
  %cmp35 = icmp eq i32 %32, 4, !dbg !9351
  br i1 %cmp35, label %if.then39, label %lor.lhs.false37, !dbg !9352

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %33 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9353
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %33, i32 0, i32 1, !dbg !9354
  %34 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !9354
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %34, i32 0, i32 5, !dbg !9355
  %35 = load i32, i32* %chip_flag, align 8, !dbg !9355
  %tobool38 = icmp ne i32 %35, 0, !dbg !9353
  br i1 %tobool38, label %if.then39, label %if.end77, !dbg !9356

if.then39:                                        ; preds = %lor.lhs.false37, %lor.lhs.false, %if.then33
  br label %do.body40, !dbg !9357

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !9358

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !9359, metadata !DIExpression()), !dbg !9361
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !9362, metadata !DIExpression()), !dbg !9361
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !9361
  %conv45 = zext i1 %cmp44 to i32, !dbg !9361
  store i32 1, i32* %tmp46, align 4, !dbg !9361
  %36 = load i32, i32* %tmp46, align 4, !dbg !9361
  br label %do.body47, !dbg !9363

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !9364

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !9365

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !9367, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !9371, metadata !DIExpression()), !dbg !9370
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !9370
  %conv53 = zext i1 %cmp52 to i32, !dbg !9370
  store i32 1, i32* %tmp54, align 4, !dbg !9370
  %37 = load i32, i32* %tmp54, align 4, !dbg !9370
  %call55 = call i64 @arch_local_irq_save() #11, !dbg !9372
  store i64 %call55, i64* %flags, align 8, !dbg !9372
  br label %do.end56, !dbg !9372

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !9365

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !9364

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9373, !srcloc !9374
  br label %do.body59, !dbg !9373

do.body59:                                        ; preds = %do.body58
  %38 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9375
  %slock60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %38, i32 0, i32 28, !dbg !9375
  store %struct.spinlock* %slock60, %struct.spinlock** %lock.addr.i86, align 8
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !9376
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !9377
  %rlock.i87 = bitcast %union.anon.2* %40 to %struct.raw_spinlock*, !dbg !9377
  br label %do.end62, !dbg !9375

do.end62:                                         ; preds = %do.body59
  br label %do.end63, !dbg !9373

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !9364

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !9363

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !9358

do.end66:                                         ; preds = %do.end65
  %41 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9378
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 11, !dbg !9379
  %42 = load i32, i32* %IER, align 4, !dbg !9379
  %and67 = and i32 %42, -3, !dbg !9380
  %conv68 = trunc i32 %and67 to i8, !dbg !9378
  %43 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9381
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %43, i32 0, i32 2, !dbg !9382
  %44 = load i64, i64* %ioaddr, align 8, !dbg !9382
  %add = add i64 %44, 1, !dbg !9383
  %conv69 = trunc i64 %add to i32, !dbg !9381
  call void @outb(i8 zeroext %conv68, i32 %conv69) #11, !dbg !9384
  %45 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9385
  %IER70 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 11, !dbg !9386
  %46 = load i32, i32* %IER70, align 4, !dbg !9387
  %or = or i32 %46, 2, !dbg !9387
  store i32 %or, i32* %IER70, align 4, !dbg !9387
  %47 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9388
  %IER71 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %47, i32 0, i32 11, !dbg !9389
  %48 = load i32, i32* %IER71, align 4, !dbg !9389
  %conv72 = trunc i32 %48 to i8, !dbg !9388
  %49 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9390
  %ioaddr73 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %49, i32 0, i32 2, !dbg !9391
  %50 = load i64, i64* %ioaddr73, align 8, !dbg !9391
  %add74 = add i64 %50, 1, !dbg !9392
  %conv75 = trunc i64 %add74 to i32, !dbg !9390
  call void @outb(i8 zeroext %conv72, i32 %conv75) #11, !dbg !9393
  %51 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9394
  %slock76 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %51, i32 0, i32 28, !dbg !9395
  %52 = load i64, i64* %flags, align 8, !dbg !9396
  store %struct.spinlock* %slock76, %struct.spinlock** %lock.addr.i79, align 8
  store i64 %52, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9397
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9397
  store i32 1, i32* %tmp.i, align 4, !dbg !9397
  %53 = load i32, i32* %tmp.i, align 4, !dbg !9397
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9398
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9398
  store i32 1, i32* %tmp8.i, align 4, !dbg !9398
  %54 = load i32, i32* %tmp8.i, align 4, !dbg !9398
  %55 = load i64, i64* %flags.addr.i, align 8, !dbg !9399
  call void @arch_local_irq_restore(i64 %55) #13, !dbg !9399
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9400, !srcloc !6391
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i79, align 8, !dbg !9401
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !9401
  %rlock.i80 = bitcast %union.anon.2* %57 to %struct.raw_spinlock*, !dbg !9401
  br label %if.end77, !dbg !9402

if.end77:                                         ; preds = %do.end66, %lor.lhs.false37
  br label %if.end78, !dbg !9403

if.end78:                                         ; preds = %if.end77, %do.end23
  store i32 1, i32* %retval, align 4, !dbg !9404
  br label %return, !dbg !9404

return:                                           ; preds = %if.end78, %if.then2, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !9405
  ret i32 %58, !dbg !9405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_flush_chars(%struct.tty_struct* %tty) #3 !dbg !9406 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !6302, metadata !DIExpression()), !dbg !9407
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !9409
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !9410
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy15 = alloca i64, align 8
  %__dummy216 = alloca i64, align 8
  %tmp19 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9417, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9419, metadata !DIExpression()), !dbg !9420
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9421
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9422
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9422
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9421
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9420
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9423, metadata !DIExpression()), !dbg !9424
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9425
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 24, !dbg !9427
  %4 = load i32, i32* %xmit_cnt, align 4, !dbg !9427
  %cmp = icmp sle i32 %4, 0, !dbg !9428
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9429

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9430
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 24, !dbg !9431
  %bf.load = load i8, i8* %stopped, align 4, !dbg !9431
  %bf.clear = and i8 %bf.load, 1, !dbg !9431
  %bf.cast = zext i8 %bf.clear to i64, !dbg !9431
  %conv = trunc i64 %bf.cast to i32, !dbg !9430
  %tobool = icmp ne i32 %conv, 0, !dbg !9430
  br i1 %tobool, label %if.then, label %lor.lhs.false1, !dbg !9432

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9433
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 0, !dbg !9434
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !9435
  %7 = load i8*, i8** %xmit_buf, align 8, !dbg !9435
  %tobool2 = icmp ne i8* %7, null, !dbg !9433
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !9436

lor.lhs.false3:                                   ; preds = %lor.lhs.false1
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9437
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %8, i32 0, i32 26, !dbg !9438
  %9 = load i32, i32* %hw_stopped, align 8, !dbg !9438
  %tobool4 = icmp ne i32 %9, 0, !dbg !9437
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !9439

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9440
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 9, !dbg !9441
  %11 = load i32, i32* %type, align 4, !dbg !9441
  %cmp5 = icmp ne i32 %11, 4, !dbg !9442
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !9443

land.lhs.true7:                                   ; preds = %land.lhs.true
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9444
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 1, !dbg !9445
  %13 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !9445
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %13, i32 0, i32 5, !dbg !9446
  %14 = load i32, i32* %chip_flag, align 8, !dbg !9446
  %tobool8 = icmp ne i32 %14, 0, !dbg !9444
  br i1 %tobool8, label %if.end, label %if.then, !dbg !9447

if.then:                                          ; preds = %land.lhs.true7, %lor.lhs.false1, %lor.lhs.false, %entry
  br label %return, !dbg !9448

if.end:                                           ; preds = %land.lhs.true7, %land.lhs.true, %lor.lhs.false3
  br label %do.body, !dbg !9449

do.body:                                          ; preds = %if.end
  br label %do.body9, !dbg !9450

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9451, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9454, metadata !DIExpression()), !dbg !9453
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !9453
  %conv11 = zext i1 %cmp10 to i32, !dbg !9453
  store i32 1, i32* %tmp, align 4, !dbg !9453
  %15 = load i32, i32* %tmp, align 4, !dbg !9453
  br label %do.body12, !dbg !9455

do.body12:                                        ; preds = %do.body9
  br label %do.body13, !dbg !9456

do.body13:                                        ; preds = %do.body12
  br label %do.body14, !dbg !9457

do.body14:                                        ; preds = %do.body13
  call void @llvm.dbg.declare(metadata i64* %__dummy15, metadata !9459, metadata !DIExpression()), !dbg !9462
  call void @llvm.dbg.declare(metadata i64* %__dummy216, metadata !9463, metadata !DIExpression()), !dbg !9462
  %cmp17 = icmp eq i64* %__dummy15, %__dummy216, !dbg !9462
  %conv18 = zext i1 %cmp17 to i32, !dbg !9462
  store i32 1, i32* %tmp19, align 4, !dbg !9462
  %16 = load i32, i32* %tmp19, align 4, !dbg !9462
  %call = call i64 @arch_local_irq_save() #11, !dbg !9464
  store i64 %call, i64* %flags, align 8, !dbg !9464
  br label %do.end, !dbg !9464

do.end:                                           ; preds = %do.body14
  br label %do.end20, !dbg !9457

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !9456

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9465, !srcloc !9466
  br label %do.body22, !dbg !9465

do.body22:                                        ; preds = %do.body21
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9467
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 28, !dbg !9467
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9468
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9469
  %rlock.i = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !9469
  br label %do.end24, !dbg !9467

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !9465

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9456

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !9455

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !9450

do.end28:                                         ; preds = %do.end27
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9470
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 11, !dbg !9471
  %21 = load i32, i32* %IER, align 4, !dbg !9471
  %and = and i32 %21, -3, !dbg !9472
  %conv29 = trunc i32 %and to i8, !dbg !9470
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9473
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 2, !dbg !9474
  %23 = load i64, i64* %ioaddr, align 8, !dbg !9474
  %add = add i64 %23, 1, !dbg !9475
  %conv30 = trunc i64 %add to i32, !dbg !9473
  call void @outb(i8 zeroext %conv29, i32 %conv30) #11, !dbg !9476
  %24 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9477
  %IER31 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %24, i32 0, i32 11, !dbg !9478
  %25 = load i32, i32* %IER31, align 4, !dbg !9479
  %or = or i32 %25, 2, !dbg !9479
  store i32 %or, i32* %IER31, align 4, !dbg !9479
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9480
  %IER32 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 11, !dbg !9481
  %27 = load i32, i32* %IER32, align 4, !dbg !9481
  %conv33 = trunc i32 %27 to i8, !dbg !9480
  %28 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9482
  %ioaddr34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %28, i32 0, i32 2, !dbg !9483
  %29 = load i64, i64* %ioaddr34, align 8, !dbg !9483
  %add35 = add i64 %29, 1, !dbg !9484
  %conv36 = trunc i64 %add35 to i32, !dbg !9482
  call void @outb(i8 zeroext %conv33, i32 %conv36) #11, !dbg !9485
  %30 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9486
  %slock37 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %30, i32 0, i32 28, !dbg !9487
  %31 = load i64, i64* %flags, align 8, !dbg !9488
  store %struct.spinlock* %slock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9489
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9489
  store i32 1, i32* %tmp.i, align 4, !dbg !9489
  %32 = load i32, i32* %tmp.i, align 4, !dbg !9489
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9490
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9490
  store i32 1, i32* %tmp8.i, align 4, !dbg !9490
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !9490
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !9491
  call void @arch_local_irq_restore(i64 %34) #13, !dbg !9491
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9492, !srcloc !6391
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !9493
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !9493
  %rlock.i39 = bitcast %union.anon.2* %36 to %struct.raw_spinlock*, !dbg !9493
  br label %return, !dbg !9494

return:                                           ; preds = %do.end28, %if.then
  ret void, !dbg !9494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_write_room(%struct.tty_struct* %tty) #3 !dbg !9495 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %ret = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9498, metadata !DIExpression()), !dbg !9499
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9500
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9501
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9501
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9500
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9499
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9502, metadata !DIExpression()), !dbg !9503
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9504
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 24, !dbg !9505
  %4 = load i32, i32* %xmit_cnt, align 4, !dbg !9505
  %conv = sext i32 %4 to i64, !dbg !9504
  %sub = sub i64 4096, %conv, !dbg !9506
  %sub1 = sub i64 %sub, 1, !dbg !9507
  %conv2 = trunc i64 %sub1 to i32, !dbg !9508
  store i32 %conv2, i32* %ret, align 4, !dbg !9509
  %5 = load i32, i32* %ret, align 4, !dbg !9510
  %cmp = icmp slt i32 %5, 0, !dbg !9511
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9510

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !9510

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9512
  br label %cond.end, !dbg !9510

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9510
  ret i32 %cond, !dbg !9513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_chars_in_buffer(%struct.tty_struct* %tty) #3 !dbg !9514 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9515, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9517, metadata !DIExpression()), !dbg !9518
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9519
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9520
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9520
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9519
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9518
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9521
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 24, !dbg !9522
  %4 = load i32, i32* %xmit_cnt, align 4, !dbg !9522
  ret i32 %4, !dbg !9523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_ioctl(%struct.tty_struct* %tty, i32 %cmd, i64 %arg) #3 !dbg !4739 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !9524, metadata !DIExpression()), !dbg !9529
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !9540, metadata !DIExpression()), !dbg !9541
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !9542, metadata !DIExpression()), !dbg !9543
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !9544, metadata !DIExpression()), !dbg !9545
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !9546, metadata !DIExpression()), !dbg !9549
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !9550, metadata !DIExpression()), !dbg !9551
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !9552, metadata !DIExpression()), !dbg !9553
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !9554, metadata !DIExpression()), !dbg !9555
  %lock.addr.i267 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i267, metadata !9556, metadata !DIExpression()), !dbg !9558
  %lock.addr.i265 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i265, metadata !9560, metadata !DIExpression()), !dbg !9562
  %lock.addr.i263 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i263, metadata !9556, metadata !DIExpression()), !dbg !9564
  %lock.addr.i261 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i261, metadata !9560, metadata !DIExpression()), !dbg !9567
  %lock.addr.i259 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i259, metadata !9556, metadata !DIExpression()), !dbg !9569
  %lock.addr.i257 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i257, metadata !9560, metadata !DIExpression()), !dbg !9571
  %lock.addr.i255 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i255, metadata !6302, metadata !DIExpression()), !dbg !9573
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !9575
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i253 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i253, metadata !5557, metadata !DIExpression()), !dbg !9576
  %lock.addr.i251 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i251, metadata !9556, metadata !DIExpression()), !dbg !9583
  %lock.addr.i249 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i249, metadata !9560, metadata !DIExpression()), !dbg !9589
  %lock.addr.i247 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i247, metadata !9556, metadata !DIExpression()), !dbg !9591
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9560, metadata !DIExpression()), !dbg !9594
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %info = alloca %struct.mxser_port*, align 8
  %cnow = alloca %struct.async_icount, align 4
  %flags = alloca i64, align 8
  %argp = alloca i8*, align 8
  %p = alloca i32, align 4
  %opmode = alloca i64, align 8
  %shiftbit = alloca i32, align 4
  %val = alloca i8, align 1
  %mask = alloca i8, align 1
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp12 = alloca i64, align 8
  %tmp47 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp70 = alloca i32, align 4
  %__dummy74 = alloca i64, align 8
  %__dummy275 = alloca i64, align 8
  %tmp78 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret98 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp109 = alloca i64, align 8
  %tmp112 = alloca i32, align 4
  %tmp114 = alloca i64, align 8
  %__ret_pu115 = alloca i32, align 4
  %__ptr_pu116 = alloca i8*, align 8
  %__val_pu117 = alloca i32, align 4
  %tmp122 = alloca i64, align 8
  %len = alloca i32, align 4
  %lsr = alloca i32, align 4
  %tmp140 = alloca i64, align 8
  %__ret_pu141 = alloca i32, align 4
  %__ptr_pu142 = alloca i8*, align 8
  %__val_pu143 = alloca i32, align 4
  %tmp146 = alloca i64, align 8
  %mcr = alloca i32, align 4
  %status = alloca i32, align 4
  %tmp211 = alloca i64, align 8
  %__ret_pu212 = alloca i32, align 4
  %__ptr_pu213 = alloca i8*, align 8
  %__val_pu214 = alloca i8, align 1
  %tmp217 = alloca i64, align 8
  %method = alloca i32, align 4
  %tmp224 = alloca i64, align 8
  %__ret_gu225 = alloca i32, align 4
  %__val_gu226 = alloca i32, align 4
  %tmp230 = alloca i64, align 8
  %tmp238 = alloca i64, align 8
  %__ret_pu239 = alloca i32, align 4
  %__ptr_pu240 = alloca i8*, align 8
  %__val_pu241 = alloca i32, align 4
  %tmp244 = alloca i64, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !9596, metadata !DIExpression()), !dbg !9597
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !9602, metadata !DIExpression()), !dbg !9603
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9604
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !9605
  %1 = load i8*, i8** %driver_data, align 8, !dbg !9605
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !9604
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !9603
  call void @llvm.dbg.declare(metadata %struct.async_icount* %cnow, metadata !9606, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9608, metadata !DIExpression()), !dbg !9609
  call void @llvm.dbg.declare(metadata i8** %argp, metadata !9610, metadata !DIExpression()), !dbg !9611
  %3 = load i64, i64* %arg.addr, align 8, !dbg !9612
  %4 = inttoptr i64 %3 to i8*, !dbg !9613
  store i8* %4, i8** %argp, align 8, !dbg !9611
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9614
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %5, i32 0, i32 5, !dbg !9616
  %6 = load i32, i32* %index, align 8, !dbg !9616
  %cmp = icmp eq i32 %6, 32, !dbg !9617
  br i1 %cmp, label %if.then, label %if.end, !dbg !9618

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !9619
  %8 = load i8*, i8** %argp, align 8, !dbg !9620
  %call = call i32 @mxser_ioctl_special(i32 %7, i8* %8) #11, !dbg !9621
  store i32 %call, i32* %retval, align 4, !dbg !9622
  br label %return, !dbg !9622

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !9623
  %cmp1 = icmp eq i32 %9, 1090, !dbg !9624
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !9625

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %cmd.addr, align 4, !dbg !9626
  %cmp2 = icmp eq i32 %10, 1091, !dbg !9627
  br i1 %cmp2, label %if.then3, label %if.end57, !dbg !9628

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %p, metadata !9629, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.declare(metadata i64* %opmode, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.declare(metadata i32* %shiftbit, metadata !9633, metadata !DIExpression()), !dbg !9634
  call void @llvm.dbg.declare(metadata i8* %val, metadata !9635, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !9637, metadata !DIExpression()), !dbg !9638
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9639
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 1, !dbg !9641
  %12 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !9641
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %12, i32 0, i32 5, !dbg !9642
  %13 = load i32, i32* %chip_flag, align 8, !dbg !9642
  %cmp4 = icmp ne i32 %13, 2, !dbg !9643
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9644

if.then5:                                         ; preds = %if.then3
  store i32 -14, i32* %retval, align 4, !dbg !9645
  br label %return, !dbg !9645

if.end6:                                          ; preds = %if.then3
  %14 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9646
  %index7 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %14, i32 0, i32 5, !dbg !9647
  %15 = load i32, i32* %index7, align 8, !dbg !9647
  %rem = srem i32 %15, 4, !dbg !9648
  store i32 %rem, i32* %p, align 4, !dbg !9649
  %16 = load i32, i32* %cmd.addr, align 4, !dbg !9650
  %cmp8 = icmp eq i32 %16, 1090, !dbg !9651
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !9652

if.then9:                                         ; preds = %if.end6
  call void @might_fault() #11, !dbg !9653
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !9656, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !9659, metadata !DIExpression()), !dbg !9658
  %17 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !9658
  %18 = load i8*, i8** %argp, align 8, !dbg !9658
  %19 = bitcast i8* %18 to i32*, !dbg !9658
  %20 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %19, i64 4, i64 %17) #7, !dbg !9658, !srcloc !9660
  %asmresult = extractvalue { i32*, i32, i64 } %20, 0, !dbg !9658
  %asmresult10 = extractvalue { i32*, i32, i64 } %20, 1, !dbg !9658
  %asmresult11 = extractvalue { i32*, i32, i64 } %20, 2, !dbg !9658
  %21 = ptrtoint i32* %asmresult to i64, !dbg !9658
  %22 = trunc i64 %21 to i32, !dbg !9658
  store i32 %22, i32* %__ret_gu, align 4, !dbg !9658
  store i32 %asmresult10, i32* %__val_gu, align 4, !dbg !9658
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult11), !dbg !9658
  %23 = load i32, i32* %__val_gu, align 4, !dbg !9658
  %conv = sext i32 %23 to i64, !dbg !9658
  store i64 %conv, i64* %opmode, align 8, !dbg !9658
  %24 = load i32, i32* %__ret_gu, align 4, !dbg !9658
  %conv13 = sext i32 %24 to i64, !dbg !9658
  store i64 %conv13, i64* %tmp12, align 8, !dbg !9658
  %25 = load i64, i64* %tmp12, align 8, !dbg !9658
  store i64 %25, i64* %tmp, align 8, !dbg !9653
  %26 = load i64, i64* %tmp, align 8, !dbg !9653
  %tobool = icmp ne i64 %26, 0, !dbg !9661
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !9662

if.then14:                                        ; preds = %if.then9
  store i32 -14, i32* %retval, align 4, !dbg !9663
  br label %return, !dbg !9663

if.end15:                                         ; preds = %if.then9
  %27 = load i64, i64* %opmode, align 8, !dbg !9664
  %cmp16 = icmp ne i64 %27, 0, !dbg !9666
  br i1 %cmp16, label %land.lhs.true, label %if.end27, !dbg !9667

land.lhs.true:                                    ; preds = %if.end15
  %28 = load i64, i64* %opmode, align 8, !dbg !9668
  %cmp18 = icmp ne i64 %28, 1, !dbg !9669
  br i1 %cmp18, label %land.lhs.true20, label %if.end27, !dbg !9670

land.lhs.true20:                                  ; preds = %land.lhs.true
  %29 = load i64, i64* %opmode, align 8, !dbg !9671
  %cmp21 = icmp ne i64 %29, 2, !dbg !9672
  br i1 %cmp21, label %land.lhs.true23, label %if.end27, !dbg !9673

land.lhs.true23:                                  ; preds = %land.lhs.true20
  %30 = load i64, i64* %opmode, align 8, !dbg !9674
  %cmp24 = icmp ne i64 %30, 3, !dbg !9675
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !9676

if.then26:                                        ; preds = %land.lhs.true23
  store i32 -14, i32* %retval, align 4, !dbg !9677
  br label %return, !dbg !9677

if.end27:                                         ; preds = %land.lhs.true23, %land.lhs.true20, %land.lhs.true, %if.end15
  %31 = load i32, i32* %p, align 4, !dbg !9678
  %idxprom = sext i32 %31 to i64, !dbg !9679
  %arrayidx = getelementptr [4 x i8], [4 x i8]* @mxser_ioctl.ModeMask, i64 0, i64 %idxprom, !dbg !9679
  %32 = load i8, i8* %arrayidx, align 1, !dbg !9679
  store i8 %32, i8* %mask, align 1, !dbg !9680
  %33 = load i32, i32* %p, align 4, !dbg !9681
  %mul = mul i32 %33, 2, !dbg !9682
  store i32 %mul, i32* %shiftbit, align 4, !dbg !9683
  %34 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9684
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %34, i32 0, i32 28, !dbg !9685
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !9686
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9689, !srcloc !9691
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9692
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !9692
  %rlock.i = bitcast %union.anon.2* %36 to %struct.raw_spinlock*, !dbg !9692
  %37 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9694
  %opmode_ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 3, !dbg !9695
  %38 = load i64, i64* %opmode_ioaddr, align 8, !dbg !9695
  %conv28 = trunc i64 %38 to i32, !dbg !9694
  %call29 = call zeroext i8 @inb(i32 %conv28) #11, !dbg !9696
  store i8 %call29, i8* %val, align 1, !dbg !9697
  %39 = load i8, i8* %mask, align 1, !dbg !9698
  %conv30 = zext i8 %39 to i32, !dbg !9698
  %40 = load i8, i8* %val, align 1, !dbg !9699
  %conv31 = zext i8 %40 to i32, !dbg !9699
  %and = and i32 %conv31, %conv30, !dbg !9699
  %conv32 = trunc i32 %and to i8, !dbg !9699
  store i8 %conv32, i8* %val, align 1, !dbg !9699
  %41 = load i64, i64* %opmode, align 8, !dbg !9700
  %42 = load i32, i32* %shiftbit, align 4, !dbg !9701
  %sh_prom = zext i32 %42 to i64, !dbg !9702
  %shl = shl i64 %41, %sh_prom, !dbg !9702
  %43 = load i8, i8* %val, align 1, !dbg !9703
  %conv33 = zext i8 %43 to i64, !dbg !9703
  %or = or i64 %conv33, %shl, !dbg !9703
  %conv34 = trunc i64 %or to i8, !dbg !9703
  store i8 %conv34, i8* %val, align 1, !dbg !9703
  %44 = load i8, i8* %val, align 1, !dbg !9704
  %45 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9705
  %opmode_ioaddr35 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %45, i32 0, i32 3, !dbg !9706
  %46 = load i64, i64* %opmode_ioaddr35, align 8, !dbg !9706
  %conv36 = trunc i64 %46 to i32, !dbg !9705
  call void @outb(i8 zeroext %44, i32 %conv36) #11, !dbg !9707
  %47 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9708
  %slock37 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %47, i32 0, i32 28, !dbg !9709
  store %struct.spinlock* %slock37, %struct.spinlock** %lock.addr.i247, align 8
  call void @arch_local_irq_enable() #13, !dbg !9710
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9713, !srcloc !9715
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i247, align 8, !dbg !9716
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !9716
  %rlock.i248 = bitcast %union.anon.2* %49 to %struct.raw_spinlock*, !dbg !9716
  br label %if.end56, !dbg !9718

if.else:                                          ; preds = %if.end6
  %50 = load i32, i32* %p, align 4, !dbg !9719
  %mul38 = mul i32 %50, 2, !dbg !9720
  store i32 %mul38, i32* %shiftbit, align 4, !dbg !9721
  %51 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9722
  %slock39 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %51, i32 0, i32 28, !dbg !9723
  store %struct.spinlock* %slock39, %struct.spinlock** %lock.addr.i249, align 8
  call void @arch_local_irq_disable() #13, !dbg !9724
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9725, !srcloc !9691
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i249, align 8, !dbg !9726
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !9726
  %rlock.i250 = bitcast %union.anon.2* %53 to %struct.raw_spinlock*, !dbg !9726
  %54 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9727
  %opmode_ioaddr40 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %54, i32 0, i32 3, !dbg !9728
  %55 = load i64, i64* %opmode_ioaddr40, align 8, !dbg !9728
  %conv41 = trunc i64 %55 to i32, !dbg !9727
  %call42 = call zeroext i8 @inb(i32 %conv41) #11, !dbg !9729
  %conv43 = zext i8 %call42 to i32, !dbg !9729
  %56 = load i32, i32* %shiftbit, align 4, !dbg !9730
  %shr = ashr i32 %conv43, %56, !dbg !9731
  %conv44 = sext i32 %shr to i64, !dbg !9729
  store i64 %conv44, i64* %opmode, align 8, !dbg !9732
  %57 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9733
  %slock45 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %57, i32 0, i32 28, !dbg !9734
  store %struct.spinlock* %slock45, %struct.spinlock** %lock.addr.i251, align 8
  call void @arch_local_irq_enable() #13, !dbg !9735
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9736, !srcloc !9715
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i251, align 8, !dbg !9737
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !9737
  %rlock.i252 = bitcast %union.anon.2* %59 to %struct.raw_spinlock*, !dbg !9737
  %60 = load i64, i64* %opmode, align 8, !dbg !9738
  %and46 = and i64 %60, 3, !dbg !9738
  store i64 %and46, i64* %opmode, align 8, !dbg !9738
  call void @might_fault() #11, !dbg !9739
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !9742, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !9745, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !9746, metadata !DIExpression()), !dbg !9744
  %61 = load i8*, i8** %argp, align 8, !dbg !9744
  %62 = bitcast i8* %61 to i32*, !dbg !9744
  %63 = bitcast i32* %62 to i8*, !dbg !9744
  store i8* %63, i8** %__ptr_pu, align 8, !dbg !9744
  %64 = load i64, i64* %opmode, align 8, !dbg !9744
  %conv48 = trunc i64 %64 to i32, !dbg !9744
  store i32 %conv48, i32* %__val_pu, align 4, !dbg !9744
  %65 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !9744
  %66 = load i8*, i8** %__ptr_pu, align 8, !dbg !9744
  %67 = load i32, i32* %__val_pu, align 4, !dbg !9744
  %68 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %66, i32 %67, i64 4, i64 %65) #7, !dbg !9744, !srcloc !9747
  %asmresult49 = extractvalue { i8*, i64 } %68, 0, !dbg !9744
  %asmresult50 = extractvalue { i8*, i64 } %68, 1, !dbg !9744
  %69 = ptrtoint i8* %asmresult49 to i64, !dbg !9744
  %70 = trunc i64 %69 to i32, !dbg !9744
  store i32 %70, i32* %__ret_pu, align 4, !dbg !9744
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult50), !dbg !9744
  %71 = load i32, i32* %__ret_pu, align 4, !dbg !9744
  %conv52 = sext i32 %71 to i64, !dbg !9744
  store i64 %conv52, i64* %tmp51, align 8, !dbg !9744
  %72 = load i64, i64* %tmp51, align 8, !dbg !9744
  store i64 %72, i64* %tmp47, align 8, !dbg !9739
  %73 = load i64, i64* %tmp47, align 8, !dbg !9739
  %tobool53 = icmp ne i64 %73, 0, !dbg !9748
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !9749

if.then54:                                        ; preds = %if.else
  store i32 -14, i32* %retval, align 4, !dbg !9750
  br label %return, !dbg !9750

if.end55:                                         ; preds = %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end27
  store i32 0, i32* %retval, align 4, !dbg !9751
  br label %return, !dbg !9751

if.end57:                                         ; preds = %lor.lhs.false
  %74 = load i32, i32* %cmd.addr, align 4, !dbg !9752
  %cmp58 = icmp ne i32 %74, 21596, !dbg !9754
  br i1 %cmp58, label %land.lhs.true60, label %if.end64, !dbg !9755

land.lhs.true60:                                  ; preds = %if.end57
  %75 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9756
  %call61 = call zeroext i1 @tty_io_error(%struct.tty_struct* %75) #11, !dbg !9757
  br i1 %call61, label %if.then63, label %if.end64, !dbg !9758

if.then63:                                        ; preds = %land.lhs.true60
  store i32 -5, i32* %retval, align 4, !dbg !9759
  br label %return, !dbg !9759

if.end64:                                         ; preds = %land.lhs.true60, %if.end57
  %76 = load i32, i32* %cmd.addr, align 4, !dbg !9760
  switch i32 %76, label %sw.default [
    i32 21593, label %sw.bb
    i32 21596, label %sw.bb66
    i32 1085, label %sw.bb113
    i32 1093, label %sw.bb125
    i32 1094, label %sw.bb129
    i32 1097, label %sw.bb149
    i32 1098, label %sw.bb210
    i32 1100, label %sw.bb223
  ], !dbg !9761

sw.bb:                                            ; preds = %if.end64
  %77 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9762
  %78 = load i8*, i8** %argp, align 8, !dbg !9763
  %79 = bitcast i8* %78 to i32*, !dbg !9763
  %call65 = call i32 @mxser_get_lsr_info(%struct.mxser_port* %77, i32* %79) #11, !dbg !9764
  store i32 %call65, i32* %retval, align 4, !dbg !9765
  br label %return, !dbg !9765

sw.bb66:                                          ; preds = %if.end64
  br label %do.body, !dbg !9766

do.body:                                          ; preds = %sw.bb66
  br label %do.body67, !dbg !9767

do.body67:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9768, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9771, metadata !DIExpression()), !dbg !9770
  %cmp68 = icmp eq i64* %__dummy, %__dummy2, !dbg !9770
  %conv69 = zext i1 %cmp68 to i32, !dbg !9770
  store i32 1, i32* %tmp70, align 4, !dbg !9770
  %80 = load i32, i32* %tmp70, align 4, !dbg !9770
  br label %do.body71, !dbg !9772

do.body71:                                        ; preds = %do.body67
  br label %do.body72, !dbg !9773

do.body72:                                        ; preds = %do.body71
  br label %do.body73, !dbg !9774

do.body73:                                        ; preds = %do.body72
  call void @llvm.dbg.declare(metadata i64* %__dummy74, metadata !9776, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata i64* %__dummy275, metadata !9780, metadata !DIExpression()), !dbg !9779
  %cmp76 = icmp eq i64* %__dummy74, %__dummy275, !dbg !9779
  %conv77 = zext i1 %cmp76 to i32, !dbg !9779
  store i32 1, i32* %tmp78, align 4, !dbg !9779
  %81 = load i32, i32* %tmp78, align 4, !dbg !9779
  %call79 = call i64 @arch_local_irq_save() #11, !dbg !9781
  store i64 %call79, i64* %flags, align 8, !dbg !9781
  br label %do.end, !dbg !9781

do.end:                                           ; preds = %do.body73
  br label %do.end80, !dbg !9774

do.end80:                                         ; preds = %do.end
  br label %do.body81, !dbg !9773

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9782, !srcloc !9783
  br label %do.body82, !dbg !9782

do.body82:                                        ; preds = %do.body81
  %82 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9784
  %slock83 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %82, i32 0, i32 28, !dbg !9784
  store %struct.spinlock* %slock83, %struct.spinlock** %lock.addr.i253, align 8
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i253, align 8, !dbg !9785
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !9786
  %rlock.i254 = bitcast %union.anon.2* %84 to %struct.raw_spinlock*, !dbg !9786
  br label %do.end85, !dbg !9784

do.end85:                                         ; preds = %do.body82
  br label %do.end86, !dbg !9782

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !9773

do.end87:                                         ; preds = %do.end86
  br label %do.end88, !dbg !9772

do.end88:                                         ; preds = %do.end87
  br label %do.end89, !dbg !9767

do.end89:                                         ; preds = %do.end88
  %85 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9787
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %85, i32 0, i32 17, !dbg !9788
  %86 = bitcast %struct.async_icount* %cnow to i8*, !dbg !9788
  %87 = bitcast %struct.async_icount* %icount to i8*, !dbg !9788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 8 %87, i64 44, i1 false), !dbg !9788
  %88 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9789
  %slock90 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %88, i32 0, i32 28, !dbg !9790
  %89 = load i64, i64* %flags, align 8, !dbg !9791
  store %struct.spinlock* %slock90, %struct.spinlock** %lock.addr.i255, align 8
  store i64 %89, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !9792
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !9792
  store i32 1, i32* %tmp.i, align 4, !dbg !9792
  %90 = load i32, i32* %tmp.i, align 4, !dbg !9792
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !9793
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !9793
  store i32 1, i32* %tmp8.i, align 4, !dbg !9793
  %91 = load i32, i32* %tmp8.i, align 4, !dbg !9793
  %92 = load i64, i64* %flags.addr.i, align 8, !dbg !9794
  call void @arch_local_irq_restore(i64 %92) #13, !dbg !9794
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9795, !srcloc !6391
  %93 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i255, align 8, !dbg !9796
  %94 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %93, i32 0, i32 0, !dbg !9796
  %rlock.i256 = bitcast %union.anon.2* %94 to %struct.raw_spinlock*, !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !9797, metadata !DIExpression()), !dbg !9799
  store i32 0, i32* %__ret, align 4, !dbg !9799
  br label %do.body91, !dbg !9799

do.body91:                                        ; preds = %do.end89
  br label %do.body92, !dbg !9800

do.body92:                                        ; preds = %do.body91
  br label %do.end93, !dbg !9802

do.end93:                                         ; preds = %do.body92
  br label %do.end94, !dbg !9800

do.end94:                                         ; preds = %do.end93
  %95 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9804
  %96 = load i64, i64* %arg.addr, align 8, !dbg !9804
  %call95 = call i32 @mxser_cflags_changed(%struct.mxser_port* %95, i64 %96, %struct.async_icount* %cnow) #11, !dbg !9804
  %tobool96 = icmp ne i32 %call95, 0, !dbg !9804
  br i1 %tobool96, label %if.end111, label %if.then97, !dbg !9799

if.then97:                                        ; preds = %do.end94
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !9806, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.declare(metadata i64* %__ret98, metadata !9820, metadata !DIExpression()), !dbg !9819
  store i64 0, i64* %__ret98, align 8, !dbg !9819
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !9819
  br label %for.cond, !dbg !9819

for.cond:                                         ; preds = %if.end106, %if.then97
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !9821, metadata !DIExpression()), !dbg !9825
  %97 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9825
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %97, i32 0, i32 0, !dbg !9825
  %delta_msr_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 9, !dbg !9825
  %call99 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %delta_msr_wait, %struct.wait_queue_entry* %__wq_entry, i32 1) #11, !dbg !9825
  store i64 %call99, i64* %__int, align 8, !dbg !9825
  %98 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9826
  %99 = load i64, i64* %arg.addr, align 8, !dbg !9826
  %call100 = call i32 @mxser_cflags_changed(%struct.mxser_port* %98, i64 %99, %struct.async_icount* %cnow) #11, !dbg !9826
  %tobool101 = icmp ne i32 %call100, 0, !dbg !9826
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !9825

if.then102:                                       ; preds = %for.cond
  br label %for.end, !dbg !9826

if.end103:                                        ; preds = %for.cond
  %100 = load i64, i64* %__int, align 8, !dbg !9828
  %tobool104 = icmp ne i64 %100, 0, !dbg !9828
  br i1 %tobool104, label %if.then105, label %if.end106, !dbg !9825

if.then105:                                       ; preds = %if.end103
  %101 = load i64, i64* %__int, align 8, !dbg !9830
  store i64 %101, i64* %__ret98, align 8, !dbg !9830
  br label %__out, !dbg !9830

if.end106:                                        ; preds = %if.end103
  call void @schedule() #11, !dbg !9825
  br label %for.cond, !dbg !9832, !llvm.loop !9833

for.end:                                          ; preds = %if.then102
  %102 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9819
  %port107 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %102, i32 0, i32 0, !dbg !9819
  %delta_msr_wait108 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port107, i32 0, i32 9, !dbg !9819
  call void @finish_wait(%struct.wait_queue_head* %delta_msr_wait108, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !9819
  br label %__out, !dbg !9819

__out:                                            ; preds = %for.end, %if.then105
  call void @llvm.dbg.label(metadata !9835), !dbg !9819
  %103 = load i64, i64* %__ret98, align 8, !dbg !9819
  store i64 %103, i64* %tmp109, align 8, !dbg !9819
  %104 = load i64, i64* %tmp109, align 8, !dbg !9819
  %conv110 = trunc i64 %104 to i32, !dbg !9804
  store i32 %conv110, i32* %__ret, align 4, !dbg !9804
  br label %if.end111, !dbg !9804

if.end111:                                        ; preds = %__out, %do.end94
  %105 = load i32, i32* %__ret, align 4, !dbg !9799
  store i32 %105, i32* %tmp112, align 4, !dbg !9804
  %106 = load i32, i32* %tmp112, align 4, !dbg !9799
  store i32 %106, i32* %retval, align 4, !dbg !9836
  br label %return, !dbg !9836

sw.bb113:                                         ; preds = %if.end64
  call void @might_fault() #11, !dbg !9837
  call void @llvm.dbg.declare(metadata i32* %__ret_pu115, metadata !9839, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu116, metadata !9842, metadata !DIExpression()), !dbg !9841
  call void @llvm.dbg.declare(metadata i32* %__val_pu117, metadata !9843, metadata !DIExpression()), !dbg !9841
  %107 = load i8*, i8** %argp, align 8, !dbg !9841
  %108 = bitcast i8* %107 to i32*, !dbg !9841
  %109 = bitcast i32* %108 to i8*, !dbg !9841
  store i8* %109, i8** %__ptr_pu116, align 8, !dbg !9841
  %110 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9841
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %110, i32 0, i32 8, !dbg !9841
  %111 = load i32, i32* %baud_base, align 8, !dbg !9841
  %cmp118 = icmp ne i32 %111, 115200, !dbg !9841
  %112 = zext i1 %cmp118 to i64, !dbg !9841
  %cond = select i1 %cmp118, i32 1, i32 0, !dbg !9841
  store i32 %cond, i32* %__val_pu117, align 4, !dbg !9841
  %113 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !9841
  %114 = load i8*, i8** %__ptr_pu116, align 8, !dbg !9841
  %115 = load i32, i32* %__val_pu117, align 4, !dbg !9841
  %116 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %114, i32 %115, i64 4, i64 %113) #7, !dbg !9841, !srcloc !9844
  %asmresult120 = extractvalue { i8*, i64 } %116, 0, !dbg !9841
  %asmresult121 = extractvalue { i8*, i64 } %116, 1, !dbg !9841
  %117 = ptrtoint i8* %asmresult120 to i64, !dbg !9841
  %118 = trunc i64 %117 to i32, !dbg !9841
  store i32 %118, i32* %__ret_pu115, align 4, !dbg !9841
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult121), !dbg !9841
  %119 = load i32, i32* %__ret_pu115, align 4, !dbg !9841
  %conv123 = sext i32 %119 to i64, !dbg !9841
  store i64 %conv123, i64* %tmp122, align 8, !dbg !9841
  %120 = load i64, i64* %tmp122, align 8, !dbg !9841
  store i64 %120, i64* %tmp114, align 8, !dbg !9837
  %121 = load i64, i64* %tmp114, align 8, !dbg !9837
  %conv124 = trunc i64 %121 to i32, !dbg !9845
  store i32 %conv124, i32* %retval, align 4, !dbg !9846
  br label %return, !dbg !9846

sw.bb125:                                         ; preds = %if.end64
  %122 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9847
  %slock126 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %122, i32 0, i32 28, !dbg !9848
  store %struct.spinlock* %slock126, %struct.spinlock** %lock.addr.i257, align 8
  call void @arch_local_irq_disable() #13, !dbg !9849
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9850, !srcloc !9691
  %123 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i257, align 8, !dbg !9851
  %124 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %123, i32 0, i32 0, !dbg !9851
  %rlock.i258 = bitcast %union.anon.2* %124 to %struct.raw_spinlock*, !dbg !9851
  %125 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9852
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %125, i32 0, i32 27, !dbg !9853
  %rxcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data, i32 0, i32 0, !dbg !9854
  store i64 0, i64* %rxcnt, align 8, !dbg !9855
  %126 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9856
  %mon_data127 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %126, i32 0, i32 27, !dbg !9857
  %txcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data127, i32 0, i32 1, !dbg !9858
  store i64 0, i64* %txcnt, align 8, !dbg !9859
  %127 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9860
  %slock128 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %127, i32 0, i32 28, !dbg !9861
  store %struct.spinlock* %slock128, %struct.spinlock** %lock.addr.i259, align 8
  call void @arch_local_irq_enable() #13, !dbg !9862
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9863, !srcloc !9715
  %128 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i259, align 8, !dbg !9864
  %129 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %128, i32 0, i32 0, !dbg !9864
  %rlock.i260 = bitcast %union.anon.2* %129 to %struct.raw_spinlock*, !dbg !9864
  store i32 0, i32* %retval, align 4, !dbg !9865
  br label %return, !dbg !9865

sw.bb129:                                         ; preds = %if.end64
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9866, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.declare(metadata i32* %lsr, metadata !9868, metadata !DIExpression()), !dbg !9869
  %130 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9870
  %call130 = call i32 @mxser_chars_in_buffer(%struct.tty_struct* %130) #11, !dbg !9871
  store i32 %call130, i32* %len, align 4, !dbg !9872
  %131 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9873
  %slock131 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %131, i32 0, i32 28, !dbg !9874
  store %struct.spinlock* %slock131, %struct.spinlock** %lock.addr.i261, align 8
  call void @arch_local_irq_disable() #13, !dbg !9875
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9876, !srcloc !9691
  %132 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i261, align 8, !dbg !9877
  %133 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %132, i32 0, i32 0, !dbg !9877
  %rlock.i262 = bitcast %union.anon.2* %133 to %struct.raw_spinlock*, !dbg !9877
  %134 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9878
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %134, i32 0, i32 2, !dbg !9879
  %135 = load i64, i64* %ioaddr, align 8, !dbg !9879
  %add = add i64 %135, 5, !dbg !9880
  %conv132 = trunc i64 %add to i32, !dbg !9878
  %call133 = call zeroext i8 @inb(i32 %conv132) #11, !dbg !9881
  %conv134 = zext i8 %call133 to i32, !dbg !9881
  %and135 = and i32 %conv134, 32, !dbg !9882
  store i32 %and135, i32* %lsr, align 4, !dbg !9883
  %136 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9884
  %slock136 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %136, i32 0, i32 28, !dbg !9885
  store %struct.spinlock* %slock136, %struct.spinlock** %lock.addr.i263, align 8
  call void @arch_local_irq_enable() #13, !dbg !9886
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9887, !srcloc !9715
  %137 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i263, align 8, !dbg !9888
  %138 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %137, i32 0, i32 0, !dbg !9888
  %rlock.i264 = bitcast %union.anon.2* %138 to %struct.raw_spinlock*, !dbg !9888
  %139 = load i32, i32* %lsr, align 4, !dbg !9889
  %tobool137 = icmp ne i32 %139, 0, !dbg !9889
  %140 = zext i1 %tobool137 to i64, !dbg !9889
  %cond138 = select i1 %tobool137, i32 0, i32 1, !dbg !9889
  %141 = load i32, i32* %len, align 4, !dbg !9890
  %add139 = add i32 %141, %cond138, !dbg !9890
  store i32 %add139, i32* %len, align 4, !dbg !9890
  call void @might_fault() #11, !dbg !9891
  call void @llvm.dbg.declare(metadata i32* %__ret_pu141, metadata !9893, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu142, metadata !9896, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata i32* %__val_pu143, metadata !9897, metadata !DIExpression()), !dbg !9895
  %142 = load i8*, i8** %argp, align 8, !dbg !9895
  %143 = bitcast i8* %142 to i32*, !dbg !9895
  %144 = bitcast i32* %143 to i8*, !dbg !9895
  store i8* %144, i8** %__ptr_pu142, align 8, !dbg !9895
  %145 = load i32, i32* %len, align 4, !dbg !9895
  store i32 %145, i32* %__val_pu143, align 4, !dbg !9895
  %146 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !9895
  %147 = load i8*, i8** %__ptr_pu142, align 8, !dbg !9895
  %148 = load i32, i32* %__val_pu143, align 4, !dbg !9895
  %149 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %147, i32 %148, i64 4, i64 %146) #7, !dbg !9895, !srcloc !9898
  %asmresult144 = extractvalue { i8*, i64 } %149, 0, !dbg !9895
  %asmresult145 = extractvalue { i8*, i64 } %149, 1, !dbg !9895
  %150 = ptrtoint i8* %asmresult144 to i64, !dbg !9895
  %151 = trunc i64 %150 to i32, !dbg !9895
  store i32 %151, i32* %__ret_pu141, align 4, !dbg !9895
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult145), !dbg !9895
  %152 = load i32, i32* %__ret_pu141, align 4, !dbg !9895
  %conv147 = sext i32 %152 to i64, !dbg !9895
  store i64 %conv147, i64* %tmp146, align 8, !dbg !9895
  %153 = load i64, i64* %tmp146, align 8, !dbg !9895
  store i64 %153, i64* %tmp140, align 8, !dbg !9891
  %154 = load i64, i64* %tmp140, align 8, !dbg !9891
  %conv148 = trunc i64 %154 to i32, !dbg !9899
  store i32 %conv148, i32* %retval, align 4, !dbg !9900
  br label %return, !dbg !9900

sw.bb149:                                         ; preds = %if.end64
  call void @llvm.dbg.declare(metadata i32* %mcr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9903, metadata !DIExpression()), !dbg !9904
  %155 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9905
  %slock150 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %155, i32 0, i32 28, !dbg !9906
  store %struct.spinlock* %slock150, %struct.spinlock** %lock.addr.i265, align 8
  call void @arch_local_irq_disable() #13, !dbg !9907
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9908, !srcloc !9691
  %156 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i265, align 8, !dbg !9909
  %157 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %156, i32 0, i32 0, !dbg !9909
  %rlock.i266 = bitcast %union.anon.2* %157 to %struct.raw_spinlock*, !dbg !9909
  %158 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9910
  %ioaddr151 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %158, i32 0, i32 2, !dbg !9911
  %159 = load i64, i64* %ioaddr151, align 8, !dbg !9911
  %conv152 = trunc i64 %159 to i32, !dbg !9910
  %160 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9912
  %index153 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %160, i32 0, i32 5, !dbg !9913
  %161 = load i32, i32* %index153, align 8, !dbg !9913
  %call154 = call zeroext i8 @mxser_get_msr(i32 %conv152, i32 1, i32 %161) #11, !dbg !9914
  %conv155 = zext i8 %call154 to i32, !dbg !9914
  store i32 %conv155, i32* %status, align 4, !dbg !9915
  %162 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9916
  %163 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9917
  %164 = load i32, i32* %status, align 4, !dbg !9918
  call void @mxser_check_modem_status(%struct.tty_struct* %162, %struct.mxser_port* %163, i32 %164) #11, !dbg !9919
  %165 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9920
  %ioaddr156 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %165, i32 0, i32 2, !dbg !9921
  %166 = load i64, i64* %ioaddr156, align 8, !dbg !9921
  %add157 = add i64 %166, 4, !dbg !9922
  %conv158 = trunc i64 %add157 to i32, !dbg !9920
  %call159 = call zeroext i8 @inb(i32 %conv158) #11, !dbg !9923
  %conv160 = zext i8 %call159 to i32, !dbg !9923
  store i32 %conv160, i32* %mcr, align 4, !dbg !9924
  %167 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9925
  %slock161 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %167, i32 0, i32 28, !dbg !9926
  store %struct.spinlock* %slock161, %struct.spinlock** %lock.addr.i267, align 8
  call void @arch_local_irq_enable() #13, !dbg !9927
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9928, !srcloc !9715
  %168 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i267, align 8, !dbg !9929
  %169 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %168, i32 0, i32 0, !dbg !9929
  %rlock.i268 = bitcast %union.anon.2* %169 to %struct.raw_spinlock*, !dbg !9929
  %170 = load i32, i32* %mcr, align 4, !dbg !9930
  %and162 = and i32 %170, 64, !dbg !9932
  %tobool163 = icmp ne i32 %and162, 0, !dbg !9932
  br i1 %tobool163, label %if.then164, label %if.else169, !dbg !9933

if.then164:                                       ; preds = %sw.bb149
  %171 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9934
  %mon_data165 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %171, i32 0, i32 27, !dbg !9935
  %hold_reason = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data165, i32 0, i32 5, !dbg !9936
  %172 = load i8, i8* %hold_reason, align 4, !dbg !9937
  %conv166 = zext i8 %172 to i32, !dbg !9937
  %and167 = and i32 %conv166, -9, !dbg !9937
  %conv168 = trunc i32 %and167 to i8, !dbg !9937
  store i8 %conv168, i8* %hold_reason, align 4, !dbg !9937
  br label %if.end175, !dbg !9934

if.else169:                                       ; preds = %sw.bb149
  %173 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9938
  %mon_data170 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %173, i32 0, i32 27, !dbg !9939
  %hold_reason171 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data170, i32 0, i32 5, !dbg !9940
  %174 = load i8, i8* %hold_reason171, align 4, !dbg !9941
  %conv172 = zext i8 %174 to i32, !dbg !9941
  %or173 = or i32 %conv172, 8, !dbg !9941
  %conv174 = trunc i32 %or173 to i8, !dbg !9941
  store i8 %conv174, i8* %hold_reason171, align 4, !dbg !9941
  br label %if.end175

if.end175:                                        ; preds = %if.else169, %if.then164
  %175 = load i32, i32* %mcr, align 4, !dbg !9942
  %and176 = and i32 %175, 8, !dbg !9944
  %tobool177 = icmp ne i32 %and176, 0, !dbg !9944
  br i1 %tobool177, label %if.then178, label %if.else184, !dbg !9945

if.then178:                                       ; preds = %if.end175
  %176 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9946
  %mon_data179 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %176, i32 0, i32 27, !dbg !9947
  %hold_reason180 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data179, i32 0, i32 5, !dbg !9948
  %177 = load i8, i8* %hold_reason180, align 4, !dbg !9949
  %conv181 = zext i8 %177 to i32, !dbg !9949
  %and182 = and i32 %conv181, -17, !dbg !9949
  %conv183 = trunc i32 %and182 to i8, !dbg !9949
  store i8 %conv183, i8* %hold_reason180, align 4, !dbg !9949
  br label %if.end190, !dbg !9946

if.else184:                                       ; preds = %if.end175
  %178 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9950
  %mon_data185 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %178, i32 0, i32 27, !dbg !9951
  %hold_reason186 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data185, i32 0, i32 5, !dbg !9952
  %179 = load i8, i8* %hold_reason186, align 4, !dbg !9953
  %conv187 = zext i8 %179 to i32, !dbg !9953
  %or188 = or i32 %conv187, 16, !dbg !9953
  %conv189 = trunc i32 %or188 to i8, !dbg !9953
  store i8 %conv189, i8* %hold_reason186, align 4, !dbg !9953
  br label %if.end190

if.end190:                                        ; preds = %if.else184, %if.then178
  %180 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !9954
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %180, i32 0, i32 26, !dbg !9956
  %181 = load i32, i32* %hw_stopped, align 8, !dbg !9956
  %tobool191 = icmp ne i32 %181, 0, !dbg !9954
  br i1 %tobool191, label %if.then192, label %if.else198, !dbg !9957

if.then192:                                       ; preds = %if.end190
  %182 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9958
  %mon_data193 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %182, i32 0, i32 27, !dbg !9959
  %hold_reason194 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data193, i32 0, i32 5, !dbg !9960
  %183 = load i8, i8* %hold_reason194, align 4, !dbg !9961
  %conv195 = zext i8 %183 to i32, !dbg !9961
  %or196 = or i32 %conv195, 1, !dbg !9961
  %conv197 = trunc i32 %or196 to i8, !dbg !9961
  store i8 %conv197, i8* %hold_reason194, align 4, !dbg !9961
  br label %if.end204, !dbg !9958

if.else198:                                       ; preds = %if.end190
  %184 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9962
  %mon_data199 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %184, i32 0, i32 27, !dbg !9963
  %hold_reason200 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data199, i32 0, i32 5, !dbg !9964
  %185 = load i8, i8* %hold_reason200, align 4, !dbg !9965
  %conv201 = zext i8 %185 to i32, !dbg !9965
  %and202 = and i32 %conv201, -2, !dbg !9965
  %conv203 = trunc i32 %and202 to i8, !dbg !9965
  store i8 %conv203, i8* %hold_reason200, align 4, !dbg !9965
  br label %if.end204

if.end204:                                        ; preds = %if.else198, %if.then192
  %186 = load i8*, i8** %argp, align 8, !dbg !9966
  %187 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !9967
  %mon_data205 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %187, i32 0, i32 27, !dbg !9968
  %188 = bitcast %struct.mxser_mon* %mon_data205 to i8*, !dbg !9969
  store i8* %186, i8** %to.addr.i, align 8
  store i8* %188, i8** %from.addr.i, align 8
  store i64 40, i64* %n.addr.i, align 8
  %189 = load i8*, i8** %from.addr.i, align 8, !dbg !9970
  %190 = load i64, i64* %n.addr.i, align 8, !dbg !9970
  store i8* %189, i8** %addr.addr.i.i, align 8
  store i64 %190, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9545
  %191 = load i32, i32* %sz.i.i, align 4, !dbg !9971
  %cmp.i.i = icmp sge i32 %191, 0, !dbg !9971
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9971

land.rhs.i.i:                                     ; preds = %if.end204
  %192 = load i32, i32* %sz.i.i, align 4, !dbg !9971
  %conv.i.i = sext i32 %192 to i64, !dbg !9971
  %193 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9971
  %cmp1.i.i = icmp ult i64 %conv.i.i, %193, !dbg !9971
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end204
  %194 = phi i1 [ false, %if.end204 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9973
  %lnot.i.i = xor i1 %194, true, !dbg !9971
  %lnot.ext.i.i = zext i1 %194 to i32, !dbg !9971
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9971
  br i1 %194, label %if.then.i.i, label %if.end10.i.i, !dbg !9974

if.then.i.i:                                      ; preds = %land.end.i.i
  %195 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9975
  %196 = call i1 @llvm.is.constant.i64(i64 %195) #7, !dbg !9978
  br i1 %196, label %if.else.i.i, label %if.then5.i.i, !dbg !9979

if.then5.i.i:                                     ; preds = %if.then.i.i
  %197 = load i32, i32* %sz.i.i, align 4, !dbg !9980
  %198 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9981
  call void @copy_overflow(i32 %197, i64 %198) #13, !dbg !9982
  br label %if.end9.i.i, !dbg !9982

if.else.i.i:                                      ; preds = %if.then.i.i
  %199 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9983
  %tobool6.i.i = trunc i8 %199 to i1, !dbg !9983
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9985

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !9986
  br label %if.end.i.i, !dbg !9986

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !9987
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9988
  br label %check_copy_size.exit.i, !dbg !9988

if.end10.i.i:                                     ; preds = %land.end.i.i
  %200 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9549
  %cmp11.i.i = icmp ugt i64 %200, 2147483647, !dbg !9549
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9549
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9549
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9549
  %201 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9989
  %tobool17.i.i = icmp ne i32 %201, 0, !dbg !9989
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9989
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9989
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9989
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9549

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !9991, !srcloc !9994
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !9995, !srcloc !9997
  br label %if.end31.i.i, !dbg !9998

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %202 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9549
  %tobool32.i.i = icmp ne i32 %202, 0, !dbg !9549
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9549
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9549
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9549
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9989
  %203 = load i64, i64* %tmp.i.i, align 8, !dbg !9549
  %tobool38.i.i = icmp ne i64 %203, 0, !dbg !9999
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10000

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10001
  br label %check_copy_size.exit.i, !dbg !10001

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %204 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10002
  %205 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10003
  %206 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10004
  %tobool41.i.i = trunc i8 %206 to i1, !dbg !10004
  call void @check_object_size(i8* %204, i64 %205, i1 zeroext %tobool41.i.i) #13, !dbg !10005
  store i1 true, i1* %retval.i.i, align 1, !dbg !10006
  br label %check_copy_size.exit.i, !dbg !10006

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %207 = load i1, i1* %retval.i.i, align 1, !dbg !10007
  %lnot.i = xor i1 %207, true, !dbg !9970
  %lnot.ext.i = zext i1 %207 to i32, !dbg !9970
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9970
  br i1 %207, label %if.then.i, label %copy_to_user.exit, !dbg !10008

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %208 = load i8*, i8** %to.addr.i, align 8, !dbg !10009
  %209 = load i8*, i8** %from.addr.i, align 8, !dbg !10010
  %210 = load i64, i64* %n.addr.i, align 8, !dbg !10011
  %call2.i = call i64 @_copy_to_user(i8* %208, i8* %209, i64 %210) #13, !dbg !10012
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10013
  br label %copy_to_user.exit, !dbg !10014

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %211 = load i64, i64* %n.addr.i, align 8, !dbg !10015
  %tobool207 = icmp ne i64 %211, 0, !dbg !10016
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !10017

if.then208:                                       ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10018
  br label %return, !dbg !10018

if.end209:                                        ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

sw.bb210:                                         ; preds = %if.end64
  call void @might_fault() #11, !dbg !10020
  call void @llvm.dbg.declare(metadata i32* %__ret_pu212, metadata !10024, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu213, metadata !10027, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.declare(metadata i8* %__val_pu214, metadata !10028, metadata !DIExpression()), !dbg !10026
  %212 = load i8*, i8** %argp, align 8, !dbg !10026
  store i8* %212, i8** %__ptr_pu213, align 8, !dbg !10026
  %213 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10026
  %err_shadow = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %213, i32 0, i32 16, !dbg !10026
  %214 = load i8, i8* %err_shadow, align 4, !dbg !10026
  store i8 %214, i8* %__val_pu214, align 1, !dbg !10026
  %215 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !10026
  %216 = load i8*, i8** %__ptr_pu213, align 8, !dbg !10026
  %217 = load i8, i8* %__val_pu214, align 1, !dbg !10026
  %218 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %216, i8 %217, i64 1, i64 %215) #7, !dbg !10026, !srcloc !10029
  %asmresult215 = extractvalue { i8*, i64 } %218, 0, !dbg !10026
  %asmresult216 = extractvalue { i8*, i64 } %218, 1, !dbg !10026
  %219 = ptrtoint i8* %asmresult215 to i64, !dbg !10026
  %220 = trunc i64 %219 to i32, !dbg !10026
  store i32 %220, i32* %__ret_pu212, align 4, !dbg !10026
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult216), !dbg !10026
  %221 = load i32, i32* %__ret_pu212, align 4, !dbg !10026
  %conv218 = sext i32 %221 to i64, !dbg !10026
  store i64 %conv218, i64* %tmp217, align 8, !dbg !10026
  %222 = load i64, i64* %tmp217, align 8, !dbg !10026
  store i64 %222, i64* %tmp211, align 8, !dbg !10020
  %223 = load i64, i64* %tmp211, align 8, !dbg !10020
  %tobool219 = icmp ne i64 %223, 0, !dbg !10030
  br i1 %tobool219, label %if.then220, label %if.end221, !dbg !10031

if.then220:                                       ; preds = %sw.bb210
  store i32 -14, i32* %retval, align 4, !dbg !10032
  br label %return, !dbg !10032

if.end221:                                        ; preds = %sw.bb210
  %224 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10033
  %err_shadow222 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %224, i32 0, i32 16, !dbg !10034
  store i8 0, i8* %err_shadow222, align 4, !dbg !10035
  store i32 0, i32* %retval, align 4, !dbg !10036
  br label %return, !dbg !10036

sw.bb223:                                         ; preds = %if.end64
  call void @llvm.dbg.declare(metadata i32* %method, metadata !10037, metadata !DIExpression()), !dbg !10039
  call void @might_fault() #11, !dbg !10040
  call void @llvm.dbg.declare(metadata i32* %__ret_gu225, metadata !10043, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata i32* %__val_gu226, metadata !10046, metadata !DIExpression()), !dbg !10045
  %225 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !10045
  %226 = load i8*, i8** %argp, align 8, !dbg !10045
  %227 = bitcast i8* %226 to i32*, !dbg !10045
  %228 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %227, i64 4, i64 %225) #7, !dbg !10045, !srcloc !10047
  %asmresult227 = extractvalue { i32*, i32, i64 } %228, 0, !dbg !10045
  %asmresult228 = extractvalue { i32*, i32, i64 } %228, 1, !dbg !10045
  %asmresult229 = extractvalue { i32*, i32, i64 } %228, 2, !dbg !10045
  %229 = ptrtoint i32* %asmresult227 to i64, !dbg !10045
  %230 = trunc i64 %229 to i32, !dbg !10045
  store i32 %230, i32* %__ret_gu225, align 4, !dbg !10045
  store i32 %asmresult228, i32* %__val_gu226, align 4, !dbg !10045
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult229), !dbg !10045
  %231 = load i32, i32* %__val_gu226, align 4, !dbg !10045
  store i32 %231, i32* %method, align 4, !dbg !10045
  %232 = load i32, i32* %__ret_gu225, align 4, !dbg !10045
  %conv231 = sext i32 %232 to i64, !dbg !10045
  store i64 %conv231, i64* %tmp230, align 8, !dbg !10045
  %233 = load i64, i64* %tmp230, align 8, !dbg !10045
  store i64 %233, i64* %tmp224, align 8, !dbg !10040
  %234 = load i64, i64* %tmp224, align 8, !dbg !10040
  %tobool232 = icmp ne i64 %234, 0, !dbg !10048
  br i1 %tobool232, label %if.then233, label %if.end234, !dbg !10049

if.then233:                                       ; preds = %sw.bb223
  store i32 -14, i32* %retval, align 4, !dbg !10050
  br label %return, !dbg !10050

if.end234:                                        ; preds = %sw.bb223
  %235 = load i32, i32* %method, align 4, !dbg !10051
  %236 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10052
  %index235 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %236, i32 0, i32 5, !dbg !10053
  %237 = load i32, i32* %index235, align 8, !dbg !10053
  %idxprom236 = sext i32 %237 to i64, !dbg !10054
  %arrayidx237 = getelementptr [33 x i32], [33 x i32]* @mxser_set_baud_method, i64 0, i64 %idxprom236, !dbg !10054
  store i32 %235, i32* %arrayidx237, align 4, !dbg !10055
  call void @might_fault() #11, !dbg !10056
  call void @llvm.dbg.declare(metadata i32* %__ret_pu239, metadata !10058, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu240, metadata !10061, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.declare(metadata i32* %__val_pu241, metadata !10062, metadata !DIExpression()), !dbg !10060
  %238 = load i8*, i8** %argp, align 8, !dbg !10060
  %239 = bitcast i8* %238 to i32*, !dbg !10060
  %240 = bitcast i32* %239 to i8*, !dbg !10060
  store i8* %240, i8** %__ptr_pu240, align 8, !dbg !10060
  %241 = load i32, i32* %method, align 4, !dbg !10060
  store i32 %241, i32* %__val_pu241, align 4, !dbg !10060
  %242 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !10060
  %243 = load i8*, i8** %__ptr_pu240, align 8, !dbg !10060
  %244 = load i32, i32* %__val_pu241, align 4, !dbg !10060
  %245 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %243, i32 %244, i64 4, i64 %242) #7, !dbg !10060, !srcloc !10063
  %asmresult242 = extractvalue { i8*, i64 } %245, 0, !dbg !10060
  %asmresult243 = extractvalue { i8*, i64 } %245, 1, !dbg !10060
  %246 = ptrtoint i8* %asmresult242 to i64, !dbg !10060
  %247 = trunc i64 %246 to i32, !dbg !10060
  store i32 %247, i32* %__ret_pu239, align 4, !dbg !10060
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult243), !dbg !10060
  %248 = load i32, i32* %__ret_pu239, align 4, !dbg !10060
  %conv245 = sext i32 %248 to i64, !dbg !10060
  store i64 %conv245, i64* %tmp244, align 8, !dbg !10060
  %249 = load i64, i64* %tmp244, align 8, !dbg !10060
  store i64 %249, i64* %tmp238, align 8, !dbg !10056
  %250 = load i64, i64* %tmp238, align 8, !dbg !10056
  %conv246 = trunc i64 %250 to i32, !dbg !10064
  store i32 %conv246, i32* %retval, align 4, !dbg !10065
  br label %return, !dbg !10065

sw.default:                                       ; preds = %if.end64
  store i32 -515, i32* %retval, align 4, !dbg !10066
  br label %return, !dbg !10066

return:                                           ; preds = %sw.default, %if.end234, %if.then233, %if.end221, %if.then220, %if.end209, %if.then208, %sw.bb129, %sw.bb125, %sw.bb113, %if.end111, %sw.bb, %if.then63, %if.end56, %if.then54, %if.then26, %if.then14, %if.then5, %if.then
  %251 = load i32, i32* %retval, align 4, !dbg !10067
  ret i32 %251, !dbg !10067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_set_termios(%struct.tty_struct* %tty, %struct.ktermios* %old_termios) #3 !dbg !10068 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !6302, metadata !DIExpression()), !dbg !10069
  %flags.addr.i68 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i68, metadata !6308, metadata !DIExpression()), !dbg !10075
  %tmp.i69 = alloca i32, align 4
  %tmp8.i70 = alloca i32, align 4
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !5557, metadata !DIExpression()), !dbg !10076
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !6302, metadata !DIExpression()), !dbg !10083
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10085
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10086
  %tty.addr = alloca %struct.tty_struct*, align 8
  %old_termios.addr = alloca %struct.ktermios*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  store %struct.ktermios* %old_termios, %struct.ktermios** %old_termios.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ktermios** %old_termios.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10097, metadata !DIExpression()), !dbg !10098
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10099
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10100
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10100
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10099
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10098
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10101, metadata !DIExpression()), !dbg !10102
  br label %do.body, !dbg !10103

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10104

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10105, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10108, metadata !DIExpression()), !dbg !10107
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10107
  %conv = zext i1 %cmp to i32, !dbg !10107
  store i32 1, i32* %tmp, align 4, !dbg !10107
  %3 = load i32, i32* %tmp, align 4, !dbg !10107
  br label %do.body2, !dbg !10109

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10110

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10111

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10113, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10117, metadata !DIExpression()), !dbg !10116
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10116
  %conv8 = zext i1 %cmp7 to i32, !dbg !10116
  store i32 1, i32* %tmp9, align 4, !dbg !10116
  %4 = load i32, i32* %tmp9, align 4, !dbg !10116
  %call = call i64 @arch_local_irq_save() #11, !dbg !10118
  store i64 %call, i64* %flags, align 8, !dbg !10118
  br label %do.end, !dbg !10118

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10111

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10110

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10119, !srcloc !10120
  br label %do.body12, !dbg !10119

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10121
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !10121
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10122
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10123
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !10123
  br label %do.end14, !dbg !10121

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10119

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10110

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10109

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10104

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10124
  call void @mxser_change_speed(%struct.tty_struct* %8) #11, !dbg !10125
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10126
  %slock19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 28, !dbg !10127
  %10 = load i64, i64* %flags, align 8, !dbg !10128
  store %struct.spinlock* %slock19, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10129
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10129
  store i32 1, i32* %tmp.i, align 4, !dbg !10129
  %11 = load i32, i32* %tmp.i, align 4, !dbg !10129
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10130
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10130
  store i32 1, i32* %tmp8.i, align 4, !dbg !10130
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !10130
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !10131
  call void @arch_local_irq_restore(i64 %13) #13, !dbg !10131
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10132, !srcloc !6391
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !10133
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !10133
  %rlock.i64 = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !10133
  %16 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !10134
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %16, i32 0, i32 2, !dbg !10136
  %17 = load i32, i32* %c_cflag, align 4, !dbg !10136
  %and = and i32 %17, -2147483648, !dbg !10137
  %tobool = icmp ne i32 %and, 0, !dbg !10137
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10138

land.lhs.true:                                    ; preds = %do.end18
  %18 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10139
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %18, i32 0, i32 15, !dbg !10139
  %c_cflag20 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !10139
  %19 = load i32, i32* %c_cflag20, align 8, !dbg !10139
  %and21 = and i32 %19, -2147483648, !dbg !10139
  %tobool22 = icmp ne i32 %and21, 0, !dbg !10139
  br i1 %tobool22, label %if.end, label %if.then, !dbg !10140

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10141
  %hw_stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %20, i32 0, i32 26, !dbg !10143
  store i32 0, i32* %hw_stopped, align 8, !dbg !10144
  %21 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10145
  call void @mxser_start(%struct.tty_struct* %21) #11, !dbg !10146
  br label %if.end, !dbg !10147

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end18
  %22 = load %struct.ktermios*, %struct.ktermios** %old_termios.addr, align 8, !dbg !10148
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %22, i32 0, i32 0, !dbg !10149
  %23 = load i32, i32* %c_iflag, align 4, !dbg !10149
  %and23 = and i32 %23, 1024, !dbg !10150
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10150
  br i1 %tobool24, label %land.lhs.true25, label %if.end62, !dbg !10151

land.lhs.true25:                                  ; preds = %if.end
  %24 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10152
  %termios26 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %24, i32 0, i32 15, !dbg !10152
  %c_iflag27 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios26, i32 0, i32 0, !dbg !10152
  %25 = load i32, i32* %c_iflag27, align 8, !dbg !10152
  %and28 = and i32 %25, 1024, !dbg !10152
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10152
  br i1 %tobool29, label %if.end62, label %if.then30, !dbg !10153

if.then30:                                        ; preds = %land.lhs.true25
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10154
  %stopped = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %26, i32 0, i32 24, !dbg !10155
  %bf.load = load i8, i8* %stopped, align 4, !dbg !10156
  %bf.clear = and i8 %bf.load, -2, !dbg !10156
  store i8 %bf.clear, i8* %stopped, align 4, !dbg !10156
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10157
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 1, !dbg !10158
  %28 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !10158
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %28, i32 0, i32 5, !dbg !10159
  %29 = load i32, i32* %chip_flag, align 8, !dbg !10159
  %tobool31 = icmp ne i32 %29, 0, !dbg !10157
  br i1 %tobool31, label %if.then32, label %if.end61, !dbg !10160

if.then32:                                        ; preds = %if.then30
  br label %do.body33, !dbg !10161

do.body33:                                        ; preds = %if.then32
  br label %do.body34, !dbg !10162

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !10163, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !10166, metadata !DIExpression()), !dbg !10165
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !10165
  %conv38 = zext i1 %cmp37 to i32, !dbg !10165
  store i32 1, i32* %tmp39, align 4, !dbg !10165
  %30 = load i32, i32* %tmp39, align 4, !dbg !10165
  br label %do.body40, !dbg !10167

do.body40:                                        ; preds = %do.body34
  br label %do.body41, !dbg !10168

do.body41:                                        ; preds = %do.body40
  br label %do.body42, !dbg !10169

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !10171, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !10175, metadata !DIExpression()), !dbg !10174
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !10174
  %conv46 = zext i1 %cmp45 to i32, !dbg !10174
  store i32 1, i32* %tmp47, align 4, !dbg !10174
  %31 = load i32, i32* %tmp47, align 4, !dbg !10174
  %call48 = call i64 @arch_local_irq_save() #11, !dbg !10176
  store i64 %call48, i64* %flags, align 8, !dbg !10176
  br label %do.end49, !dbg !10176

do.end49:                                         ; preds = %do.body42
  br label %do.end50, !dbg !10169

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !10168

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10177, !srcloc !10178
  br label %do.body52, !dbg !10177

do.body52:                                        ; preds = %do.body51
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10179
  %slock53 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 28, !dbg !10179
  store %struct.spinlock* %slock53, %struct.spinlock** %lock.addr.i65, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !10180
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !10181
  %rlock.i66 = bitcast %union.anon.2* %34 to %struct.raw_spinlock*, !dbg !10181
  br label %do.end55, !dbg !10179

do.end55:                                         ; preds = %do.body52
  br label %do.end56, !dbg !10177

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !10168

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !10167

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !10162

do.end59:                                         ; preds = %do.end58
  %35 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10182
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 2, !dbg !10183
  %36 = load i64, i64* %ioaddr, align 8, !dbg !10183
  call void @mxser_disable_must_rx_software_flow_control(i64 %36) #11, !dbg !10184
  %37 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10185
  %slock60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %37, i32 0, i32 28, !dbg !10186
  %38 = load i64, i64* %flags, align 8, !dbg !10187
  store %struct.spinlock* %slock60, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %38, i64* %flags.addr.i68, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10188
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10188
  store i32 1, i32* %tmp.i69, align 4, !dbg !10188
  %39 = load i32, i32* %tmp.i69, align 4, !dbg !10188
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10189
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10189
  store i32 1, i32* %tmp8.i70, align 4, !dbg !10189
  %40 = load i32, i32* %tmp8.i70, align 4, !dbg !10189
  %41 = load i64, i64* %flags.addr.i68, align 8, !dbg !10190
  call void @arch_local_irq_restore(i64 %41) #13, !dbg !10190
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10191, !srcloc !6391
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !10192
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !10192
  %rlock.i71 = bitcast %union.anon.2* %43 to %struct.raw_spinlock*, !dbg !10192
  br label %if.end61, !dbg !10193

if.end61:                                         ; preds = %do.end59, %if.then30
  %44 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10194
  call void @mxser_start(%struct.tty_struct* %44) #11, !dbg !10195
  br label %if.end62, !dbg !10196

if.end62:                                         ; preds = %if.end61, %land.lhs.true25, %if.end
  ret void, !dbg !10197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_throttle(%struct.tty_struct* %tty) #3 !dbg !10198 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10199, metadata !DIExpression()), !dbg !10200
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10201
  call void @mxser_stoprx(%struct.tty_struct* %0) #11, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_unthrottle(%struct.tty_struct* %tty) #3 !dbg !10204 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10205, metadata !DIExpression()), !dbg !10206
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10207, metadata !DIExpression()), !dbg !10208
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10209
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10210
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10210
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10209
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10208
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10211
  %ldisc_stop_rx = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 14, !dbg !10212
  store i8 0, i8* %ldisc_stop_rx, align 1, !dbg !10213
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10214
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 15, !dbg !10214
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 0, !dbg !10214
  %5 = load i32, i32* %c_iflag, align 8, !dbg !10214
  %and = and i32 %5, 4096, !dbg !10214
  %tobool = icmp ne i32 %and, 0, !dbg !10214
  br i1 %tobool, label %if.then, label %if.end23, !dbg !10216

if.then:                                          ; preds = %entry
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10217
  %x_char = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 10, !dbg !10220
  %7 = load i32, i32* %x_char, align 8, !dbg !10220
  %tobool1 = icmp ne i32 %7, 0, !dbg !10217
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !10221

if.then2:                                         ; preds = %if.then
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10222
  %x_char3 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 10, !dbg !10223
  store i32 0, i32* %x_char3, align 8, !dbg !10224
  br label %if.end22, !dbg !10222

if.else:                                          ; preds = %if.then
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10225
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 1, !dbg !10228
  %10 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !10228
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %10, i32 0, i32 5, !dbg !10229
  %11 = load i32, i32* %chip_flag, align 8, !dbg !10229
  %tobool4 = icmp ne i32 %11, 0, !dbg !10225
  br i1 %tobool4, label %if.then5, label %if.else8, !dbg !10230

if.then5:                                         ; preds = %if.else
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10231
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 11, !dbg !10233
  %13 = load i32, i32* %IER, align 4, !dbg !10234
  %or = or i32 %13, 17, !dbg !10234
  store i32 %or, i32* %IER, align 4, !dbg !10234
  %14 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10235
  %IER6 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 11, !dbg !10236
  %15 = load i32, i32* %IER6, align 4, !dbg !10236
  %conv = trunc i32 %15 to i8, !dbg !10235
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10237
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 2, !dbg !10238
  %17 = load i64, i64* %ioaddr, align 8, !dbg !10238
  %add = add i64 %17, 1, !dbg !10239
  %conv7 = trunc i64 %add to i32, !dbg !10237
  call void @outb(i8 zeroext %conv, i32 %conv7) #11, !dbg !10240
  br label %if.end, !dbg !10241

if.else8:                                         ; preds = %if.else
  %18 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10242
  %termios9 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %18, i32 0, i32 15, !dbg !10242
  %c_cc = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios9, i32 0, i32 5, !dbg !10242
  %arrayidx = getelementptr [19 x i8], [19 x i8]* %c_cc, i64 0, i64 8, !dbg !10242
  %19 = load i8, i8* %arrayidx, align 1, !dbg !10242
  %conv10 = zext i8 %19 to i32, !dbg !10242
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10244
  %x_char11 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 10, !dbg !10245
  store i32 %conv10, i32* %x_char11, align 8, !dbg !10246
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10247
  %ioaddr12 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 2, !dbg !10248
  %22 = load i64, i64* %ioaddr12, align 8, !dbg !10248
  %add13 = add i64 %22, 1, !dbg !10249
  %conv14 = trunc i64 %add13 to i32, !dbg !10247
  call void @outb(i8 zeroext 0, i32 %conv14) #11, !dbg !10250
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10251
  %IER15 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 11, !dbg !10252
  %24 = load i32, i32* %IER15, align 4, !dbg !10253
  %or16 = or i32 %24, 2, !dbg !10253
  store i32 %or16, i32* %IER15, align 4, !dbg !10253
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10254
  %IER17 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 11, !dbg !10255
  %26 = load i32, i32* %IER17, align 4, !dbg !10255
  %conv18 = trunc i32 %26 to i8, !dbg !10254
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10256
  %ioaddr19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 2, !dbg !10257
  %28 = load i64, i64* %ioaddr19, align 8, !dbg !10257
  %add20 = add i64 %28, 1, !dbg !10258
  %conv21 = trunc i64 %add20 to i32, !dbg !10256
  call void @outb(i8 zeroext %conv18, i32 %conv21) #11, !dbg !10259
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then5
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then2
  br label %if.end23, !dbg !10260

if.end23:                                         ; preds = %if.end22, %entry
  %29 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10261
  %termios24 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %29, i32 0, i32 15, !dbg !10261
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios24, i32 0, i32 2, !dbg !10261
  %30 = load i32, i32* %c_cflag, align 8, !dbg !10261
  %and25 = and i32 %30, -2147483648, !dbg !10261
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10261
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !10263

if.then27:                                        ; preds = %if.end23
  %31 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10264
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %31, i32 0, i32 12, !dbg !10266
  %32 = load i32, i32* %MCR, align 8, !dbg !10267
  %or28 = or i32 %32, 2, !dbg !10267
  store i32 %or28, i32* %MCR, align 8, !dbg !10267
  %33 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10268
  %MCR29 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %33, i32 0, i32 12, !dbg !10269
  %34 = load i32, i32* %MCR29, align 8, !dbg !10269
  %conv30 = trunc i32 %34 to i8, !dbg !10268
  %35 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10270
  %ioaddr31 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %35, i32 0, i32 2, !dbg !10271
  %36 = load i64, i64* %ioaddr31, align 8, !dbg !10271
  %add32 = add i64 %36, 4, !dbg !10272
  %conv33 = trunc i64 %add32 to i32, !dbg !10270
  call void @outb(i8 zeroext %conv30, i32 %conv33) #11, !dbg !10273
  br label %if.end34, !dbg !10274

if.end34:                                         ; preds = %if.then27, %if.end23
  ret void, !dbg !10275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_stop(%struct.tty_struct* %tty) #3 !dbg !10276 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !6302, metadata !DIExpression()), !dbg !10277
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10279
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10280
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10287, metadata !DIExpression()), !dbg !10288
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10289, metadata !DIExpression()), !dbg !10290
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10291
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10292
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10292
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10291
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10290
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10293, metadata !DIExpression()), !dbg !10294
  br label %do.body, !dbg !10295

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10296

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10297, metadata !DIExpression()), !dbg !10299
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10300, metadata !DIExpression()), !dbg !10299
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10299
  %conv = zext i1 %cmp to i32, !dbg !10299
  store i32 1, i32* %tmp, align 4, !dbg !10299
  %3 = load i32, i32* %tmp, align 4, !dbg !10299
  br label %do.body2, !dbg !10301

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10302

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10303

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10305, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10309, metadata !DIExpression()), !dbg !10308
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10308
  %conv8 = zext i1 %cmp7 to i32, !dbg !10308
  store i32 1, i32* %tmp9, align 4, !dbg !10308
  %4 = load i32, i32* %tmp9, align 4, !dbg !10308
  %call = call i64 @arch_local_irq_save() #11, !dbg !10310
  store i64 %call, i64* %flags, align 8, !dbg !10310
  br label %do.end, !dbg !10310

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10303

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10302

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10311, !srcloc !10312
  br label %do.body12, !dbg !10311

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10313
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !10313
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10314
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10315
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !10315
  br label %do.end14, !dbg !10313

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10311

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10302

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10301

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10296

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10316
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 11, !dbg !10318
  %9 = load i32, i32* %IER, align 4, !dbg !10318
  %and = and i32 %9, 2, !dbg !10319
  %tobool = icmp ne i32 %and, 0, !dbg !10319
  br i1 %tobool, label %if.then, label %if.end, !dbg !10320

if.then:                                          ; preds = %do.end18
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10321
  %IER19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 11, !dbg !10323
  %11 = load i32, i32* %IER19, align 4, !dbg !10324
  %and20 = and i32 %11, -3, !dbg !10324
  store i32 %and20, i32* %IER19, align 4, !dbg !10324
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10325
  %IER21 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 11, !dbg !10326
  %13 = load i32, i32* %IER21, align 4, !dbg !10326
  %conv22 = trunc i32 %13 to i8, !dbg !10325
  %14 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10327
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 2, !dbg !10328
  %15 = load i64, i64* %ioaddr, align 8, !dbg !10328
  %add = add i64 %15, 1, !dbg !10329
  %conv23 = trunc i64 %add to i32, !dbg !10327
  call void @outb(i8 zeroext %conv22, i32 %conv23) #11, !dbg !10330
  br label %if.end, !dbg !10331

if.end:                                           ; preds = %if.then, %do.end18
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10332
  %slock24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 28, !dbg !10333
  %17 = load i64, i64* %flags, align 8, !dbg !10334
  store %struct.spinlock* %slock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10335
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10335
  store i32 1, i32* %tmp.i, align 4, !dbg !10335
  %18 = load i32, i32* %tmp.i, align 4, !dbg !10335
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10336
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10336
  store i32 1, i32* %tmp8.i, align 4, !dbg !10336
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !10336
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !10337
  call void @arch_local_irq_restore(i64 %20) #13, !dbg !10337
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10338, !srcloc !6391
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10339
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !10339
  %rlock.i26 = bitcast %union.anon.2* %22 to %struct.raw_spinlock*, !dbg !10339
  ret void, !dbg !10340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_start(%struct.tty_struct* %tty) #3 !dbg !10341 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !6302, metadata !DIExpression()), !dbg !10342
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10344
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10345
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10354, metadata !DIExpression()), !dbg !10355
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10356
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10357
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10357
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10356
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10355
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10358, metadata !DIExpression()), !dbg !10359
  br label %do.body, !dbg !10360

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10361

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10362, metadata !DIExpression()), !dbg !10364
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10365, metadata !DIExpression()), !dbg !10364
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10364
  %conv = zext i1 %cmp to i32, !dbg !10364
  store i32 1, i32* %tmp, align 4, !dbg !10364
  %3 = load i32, i32* %tmp, align 4, !dbg !10364
  br label %do.body2, !dbg !10366

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10367

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10368

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10370, metadata !DIExpression()), !dbg !10373
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10374, metadata !DIExpression()), !dbg !10373
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10373
  %conv8 = zext i1 %cmp7 to i32, !dbg !10373
  store i32 1, i32* %tmp9, align 4, !dbg !10373
  %4 = load i32, i32* %tmp9, align 4, !dbg !10373
  %call = call i64 @arch_local_irq_save() #11, !dbg !10375
  store i64 %call, i64* %flags, align 8, !dbg !10375
  br label %do.end, !dbg !10375

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10368

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10367

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10376, !srcloc !10377
  br label %do.body12, !dbg !10376

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10378
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !10378
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10379
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10380
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !10380
  br label %do.end14, !dbg !10378

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10376

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10367

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10366

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10361

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10381
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 24, !dbg !10383
  %9 = load i32, i32* %xmit_cnt, align 4, !dbg !10383
  %tobool = icmp ne i32 %9, 0, !dbg !10381
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10384

land.lhs.true:                                    ; preds = %do.end18
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10385
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 0, !dbg !10386
  %xmit_buf = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port, i32 0, i32 15, !dbg !10387
  %11 = load i8*, i8** %xmit_buf, align 8, !dbg !10387
  %tobool19 = icmp ne i8* %11, null, !dbg !10385
  br i1 %tobool19, label %if.then, label %if.end, !dbg !10388

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10389
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 11, !dbg !10391
  %13 = load i32, i32* %IER, align 4, !dbg !10391
  %and = and i32 %13, -3, !dbg !10392
  %conv20 = trunc i32 %and to i8, !dbg !10389
  %14 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10393
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 2, !dbg !10394
  %15 = load i64, i64* %ioaddr, align 8, !dbg !10394
  %add = add i64 %15, 1, !dbg !10395
  %conv21 = trunc i64 %add to i32, !dbg !10393
  call void @outb(i8 zeroext %conv20, i32 %conv21) #11, !dbg !10396
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10397
  %IER22 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 11, !dbg !10398
  %17 = load i32, i32* %IER22, align 4, !dbg !10399
  %or = or i32 %17, 2, !dbg !10399
  store i32 %or, i32* %IER22, align 4, !dbg !10399
  %18 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10400
  %IER23 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 11, !dbg !10401
  %19 = load i32, i32* %IER23, align 4, !dbg !10401
  %conv24 = trunc i32 %19 to i8, !dbg !10400
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10402
  %ioaddr25 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 2, !dbg !10403
  %21 = load i64, i64* %ioaddr25, align 8, !dbg !10403
  %add26 = add i64 %21, 1, !dbg !10404
  %conv27 = trunc i64 %add26 to i32, !dbg !10402
  call void @outb(i8 zeroext %conv24, i32 %conv27) #11, !dbg !10405
  br label %if.end, !dbg !10406

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end18
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10407
  %slock28 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 28, !dbg !10408
  %23 = load i64, i64* %flags, align 8, !dbg !10409
  store %struct.spinlock* %slock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10410
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10410
  store i32 1, i32* %tmp.i, align 4, !dbg !10410
  %24 = load i32, i32* %tmp.i, align 4, !dbg !10410
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10411
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10411
  store i32 1, i32* %tmp8.i, align 4, !dbg !10411
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !10411
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !10412
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !10412
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10413, !srcloc !6391
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !10414
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !10414
  %rlock.i30 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !10414
  ret void, !dbg !10415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_hangup(%struct.tty_struct* %tty) #3 !dbg !10416 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10419, metadata !DIExpression()), !dbg !10420
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10421
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10422
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10422
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10421
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10420
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10423
  call void @mxser_flush_buffer(%struct.tty_struct* %3) #11, !dbg !10424
  %4 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10425
  %port = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %4, i32 0, i32 0, !dbg !10426
  call void @tty_port_hangup(%struct.tty_port* %port) #11, !dbg !10427
  ret void, !dbg !10428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_rs_break(%struct.tty_struct* %tty, i32 %break_state) #3 !dbg !10429 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !6302, metadata !DIExpression()), !dbg !10430
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10432
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10433
  %tty.addr = alloca %struct.tty_struct*, align 8
  %break_state.addr = alloca i32, align 4
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  store i32 %break_state, i32* %break_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %break_state.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10444, metadata !DIExpression()), !dbg !10445
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10446
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10447
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10447
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10446
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10445
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10448, metadata !DIExpression()), !dbg !10449
  br label %do.body, !dbg !10450

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10451

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10452, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10455, metadata !DIExpression()), !dbg !10454
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10454
  %conv = zext i1 %cmp to i32, !dbg !10454
  store i32 1, i32* %tmp, align 4, !dbg !10454
  %3 = load i32, i32* %tmp, align 4, !dbg !10454
  br label %do.body2, !dbg !10456

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10457

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10458

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10464, metadata !DIExpression()), !dbg !10463
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10463
  %conv8 = zext i1 %cmp7 to i32, !dbg !10463
  store i32 1, i32* %tmp9, align 4, !dbg !10463
  %4 = load i32, i32* %tmp9, align 4, !dbg !10463
  %call = call i64 @arch_local_irq_save() #11, !dbg !10465
  store i64 %call, i64* %flags, align 8, !dbg !10465
  br label %do.end, !dbg !10465

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10458

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10457

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10466, !srcloc !10467
  br label %do.body12, !dbg !10466

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10468
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !10468
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10469
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10470
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !10470
  br label %do.end14, !dbg !10468

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10466

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10457

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10456

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10451

do.end18:                                         ; preds = %do.end17
  %8 = load i32, i32* %break_state.addr, align 4, !dbg !10471
  %cmp19 = icmp eq i32 %8, -1, !dbg !10473
  br i1 %cmp19, label %if.then, label %if.else, !dbg !10474

if.then:                                          ; preds = %do.end18
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10475
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 2, !dbg !10476
  %10 = load i64, i64* %ioaddr, align 8, !dbg !10476
  %add = add i64 %10, 3, !dbg !10477
  %conv21 = trunc i64 %add to i32, !dbg !10475
  %call22 = call zeroext i8 @inb(i32 %conv21) #11, !dbg !10478
  %conv23 = zext i8 %call22 to i32, !dbg !10478
  %or = or i32 %conv23, 64, !dbg !10479
  %conv24 = trunc i32 %or to i8, !dbg !10478
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10480
  %ioaddr25 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 2, !dbg !10481
  %12 = load i64, i64* %ioaddr25, align 8, !dbg !10481
  %add26 = add i64 %12, 3, !dbg !10482
  %conv27 = trunc i64 %add26 to i32, !dbg !10480
  call void @outb(i8 zeroext %conv24, i32 %conv27) #11, !dbg !10483
  br label %if.end, !dbg !10483

if.else:                                          ; preds = %do.end18
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10484
  %ioaddr28 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !10485
  %14 = load i64, i64* %ioaddr28, align 8, !dbg !10485
  %add29 = add i64 %14, 3, !dbg !10486
  %conv30 = trunc i64 %add29 to i32, !dbg !10484
  %call31 = call zeroext i8 @inb(i32 %conv30) #11, !dbg !10487
  %conv32 = zext i8 %call31 to i32, !dbg !10487
  %and = and i32 %conv32, -65, !dbg !10488
  %conv33 = trunc i32 %and to i8, !dbg !10487
  %15 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10489
  %ioaddr34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 2, !dbg !10490
  %16 = load i64, i64* %ioaddr34, align 8, !dbg !10490
  %add35 = add i64 %16, 3, !dbg !10491
  %conv36 = trunc i64 %add35 to i32, !dbg !10489
  call void @outb(i8 zeroext %conv33, i32 %conv36) #11, !dbg !10492
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10493
  %slock37 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 28, !dbg !10494
  %18 = load i64, i64* %flags, align 8, !dbg !10495
  store %struct.spinlock* %slock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10496
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10496
  store i32 1, i32* %tmp.i, align 4, !dbg !10496
  %19 = load i32, i32* %tmp.i, align 4, !dbg !10496
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10497
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10497
  store i32 1, i32* %tmp8.i, align 4, !dbg !10497
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !10497
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !10498
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !10498
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10499, !srcloc !6391
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !10500
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !10500
  %rlock.i39 = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !10500
  ret i32 0, !dbg !10501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_flush_buffer(%struct.tty_struct* %tty) #3 !dbg !10502 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !6302, metadata !DIExpression()), !dbg !10503
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10505
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10506
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %fcr = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10513, metadata !DIExpression()), !dbg !10514
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10515, metadata !DIExpression()), !dbg !10516
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10517
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10518
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10518
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10517
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10516
  call void @llvm.dbg.declare(metadata i8* %fcr, metadata !10519, metadata !DIExpression()), !dbg !10520
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10521, metadata !DIExpression()), !dbg !10522
  br label %do.body, !dbg !10523

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10524

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10525, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10528, metadata !DIExpression()), !dbg !10527
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10527
  %conv = zext i1 %cmp to i32, !dbg !10527
  store i32 1, i32* %tmp, align 4, !dbg !10527
  %3 = load i32, i32* %tmp, align 4, !dbg !10527
  br label %do.body2, !dbg !10529

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10530

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10531

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10533, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10537, metadata !DIExpression()), !dbg !10536
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10536
  %conv8 = zext i1 %cmp7 to i32, !dbg !10536
  store i32 1, i32* %tmp9, align 4, !dbg !10536
  %4 = load i32, i32* %tmp9, align 4, !dbg !10536
  %call = call i64 @arch_local_irq_save() #11, !dbg !10538
  store i64 %call, i64* %flags, align 8, !dbg !10538
  br label %do.end, !dbg !10538

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10531

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10530

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10539, !srcloc !10540
  br label %do.body12, !dbg !10539

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10541
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !10541
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10542
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !10543
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !10543
  br label %do.end14, !dbg !10541

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10539

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10530

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10529

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10524

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10544
  %xmit_tail = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 23, !dbg !10545
  store i32 0, i32* %xmit_tail, align 8, !dbg !10546
  %9 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10547
  %xmit_head = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %9, i32 0, i32 22, !dbg !10548
  store i32 0, i32* %xmit_head, align 4, !dbg !10549
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10550
  %xmit_cnt = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 24, !dbg !10551
  store i32 0, i32* %xmit_cnt, align 4, !dbg !10552
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10553
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 2, !dbg !10554
  %12 = load i64, i64* %ioaddr, align 8, !dbg !10554
  %add = add i64 %12, 2, !dbg !10555
  %conv19 = trunc i64 %add to i32, !dbg !10553
  %call20 = call zeroext i8 @inb(i32 %conv19) #11, !dbg !10556
  store i8 %call20, i8* %fcr, align 1, !dbg !10557
  %13 = load i8, i8* %fcr, align 1, !dbg !10558
  %conv21 = sext i8 %13 to i32, !dbg !10558
  %or = or i32 %conv21, 2, !dbg !10559
  %or22 = or i32 %or, 4, !dbg !10560
  %conv23 = trunc i32 %or22 to i8, !dbg !10561
  %14 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10562
  %ioaddr24 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 2, !dbg !10563
  %15 = load i64, i64* %ioaddr24, align 8, !dbg !10563
  %add25 = add i64 %15, 2, !dbg !10564
  %conv26 = trunc i64 %add25 to i32, !dbg !10562
  call void @outb(i8 zeroext %conv23, i32 %conv26) #11, !dbg !10565
  %16 = load i8, i8* %fcr, align 1, !dbg !10566
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10567
  %ioaddr27 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 2, !dbg !10568
  %18 = load i64, i64* %ioaddr27, align 8, !dbg !10568
  %add28 = add i64 %18, 2, !dbg !10569
  %conv29 = trunc i64 %add28 to i32, !dbg !10567
  call void @outb(i8 zeroext %16, i32 %conv29) #11, !dbg !10570
  %19 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10571
  %slock30 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 28, !dbg !10572
  %20 = load i64, i64* %flags, align 8, !dbg !10573
  store %struct.spinlock* %slock30, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10574
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10574
  store i32 1, i32* %tmp.i, align 4, !dbg !10574
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10574
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10575
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10575
  store i32 1, i32* %tmp8.i, align 4, !dbg !10575
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10575
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10576
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !10576
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10577, !srcloc !6391
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !10578
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10578
  %rlock.i32 = bitcast %union.anon.2* %25 to %struct.raw_spinlock*, !dbg !10578
  %26 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10579
  call void @tty_wakeup(%struct.tty_struct* %26) #11, !dbg !10580
  ret void, !dbg !10581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_wait_until_sent(%struct.tty_struct* %tty, i32 %timeout) #3 !dbg !10582 {
entry:
  %pscr_ret__.i112 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i112, metadata !10583, metadata !DIExpression()), !dbg !10589
  %__vpp_verify.i113 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i113, metadata !10594, metadata !DIExpression()), !dbg !10596
  %pfo_val__.i114 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i114, metadata !10597, metadata !DIExpression()), !dbg !10599
  %tmp.i115 = alloca %struct.task_struct*, align 8
  %tmp1.i116 = alloca %struct.task_struct*, align 8
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !6302, metadata !DIExpression()), !dbg !10600
  %flags.addr.i108 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i108, metadata !6308, metadata !DIExpression()), !dbg !10602
  %tmp.i109 = alloca i32, align 4
  %tmp8.i110 = alloca i32, align 4
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !10583, metadata !DIExpression()), !dbg !10603
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !10594, metadata !DIExpression()), !dbg !10607
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !10597, metadata !DIExpression()), !dbg !10608
  %tmp.i106 = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i104 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i104, metadata !5557, metadata !DIExpression()), !dbg !10609
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !6302, metadata !DIExpression()), !dbg !10616
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10618
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10619
  %tty.addr = alloca %struct.tty_struct*, align 8
  %timeout.addr = alloca i32, align 4
  %info = alloca %struct.mxser_port*, align 8
  %orig_jiffies = alloca i64, align 8
  %char_time = alloca i64, align 8
  %flags = alloca i64, align 8
  %lsr = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  %__dummy53 = alloca i64, align 8
  %__dummy254 = alloca i64, align 8
  %tmp57 = alloca i32, align 4
  %__dummy61 = alloca i64, align 8
  %__dummy262 = alloca i64, align 8
  %tmp65 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10626, metadata !DIExpression()), !dbg !10627
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !10628, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10630, metadata !DIExpression()), !dbg !10631
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10632
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10633
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10633
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10632
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10631
  call void @llvm.dbg.declare(metadata i64* %orig_jiffies, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata i64* %char_time, metadata !10636, metadata !DIExpression()), !dbg !10637
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10638, metadata !DIExpression()), !dbg !10639
  call void @llvm.dbg.declare(metadata i32* %lsr, metadata !10640, metadata !DIExpression()), !dbg !10641
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10642
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 9, !dbg !10644
  %4 = load i32, i32* %type, align 4, !dbg !10644
  %cmp = icmp eq i32 %4, 0, !dbg !10645
  br i1 %cmp, label %if.then, label %if.end, !dbg !10646

if.then:                                          ; preds = %entry
  br label %do.end101, !dbg !10647

if.end:                                           ; preds = %entry
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10648
  %xmit_fifo_size = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 21, !dbg !10650
  %6 = load i32, i32* %xmit_fifo_size, align 8, !dbg !10650
  %cmp1 = icmp eq i32 %6, 0, !dbg !10651
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10652

if.then2:                                         ; preds = %if.end
  br label %do.end101, !dbg !10653

if.end3:                                          ; preds = %if.end
  %7 = load volatile i64, i64* @jiffies, align 8, !dbg !10654
  store i64 %7, i64* %orig_jiffies, align 8, !dbg !10655
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10656
  %timeout4 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 18, !dbg !10657
  %9 = load i32, i32* %timeout4, align 4, !dbg !10657
  %sub = sub i32 %9, 5, !dbg !10658
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10659
  %xmit_fifo_size5 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 21, !dbg !10660
  %11 = load i32, i32* %xmit_fifo_size5, align 8, !dbg !10660
  %div = udiv i32 %sub, %11, !dbg !10661
  %conv = zext i32 %div to i64, !dbg !10662
  store i64 %conv, i64* %char_time, align 8, !dbg !10663
  %12 = load i64, i64* %char_time, align 8, !dbg !10664
  %div6 = udiv i64 %12, 5, !dbg !10665
  store i64 %div6, i64* %char_time, align 8, !dbg !10666
  %13 = load i64, i64* %char_time, align 8, !dbg !10667
  %cmp7 = icmp eq i64 %13, 0, !dbg !10669
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10670

if.then9:                                         ; preds = %if.end3
  store i64 1, i64* %char_time, align 8, !dbg !10671
  br label %if.end10, !dbg !10672

if.end10:                                         ; preds = %if.then9, %if.end3
  %14 = load i32, i32* %timeout.addr, align 4, !dbg !10673
  %tobool = icmp ne i32 %14, 0, !dbg !10673
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !10675

land.lhs.true:                                    ; preds = %if.end10
  %15 = load i32, i32* %timeout.addr, align 4, !dbg !10676
  %conv11 = sext i32 %15 to i64, !dbg !10676
  %16 = load i64, i64* %char_time, align 8, !dbg !10677
  %cmp12 = icmp ult i64 %conv11, %16, !dbg !10678
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !10679

if.then14:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %timeout.addr, align 4, !dbg !10680
  %conv15 = sext i32 %17 to i64, !dbg !10680
  store i64 %conv15, i64* %char_time, align 8, !dbg !10681
  br label %if.end16, !dbg !10682

if.end16:                                         ; preds = %if.then14, %land.lhs.true, %if.end10
  %18 = load i32, i32* %timeout.addr, align 4, !dbg !10683
  %tobool17 = icmp ne i32 %18, 0, !dbg !10683
  br i1 %tobool17, label %lor.lhs.false, label %if.then21, !dbg !10685

lor.lhs.false:                                    ; preds = %if.end16
  %19 = load i32, i32* %timeout.addr, align 4, !dbg !10686
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10687
  %timeout18 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 18, !dbg !10688
  %21 = load i32, i32* %timeout18, align 4, !dbg !10688
  %mul = mul i32 2, %21, !dbg !10689
  %cmp19 = icmp ugt i32 %19, %mul, !dbg !10690
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !10691

if.then21:                                        ; preds = %lor.lhs.false, %if.end16
  %22 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10692
  %timeout22 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %22, i32 0, i32 18, !dbg !10693
  %23 = load i32, i32* %timeout22, align 4, !dbg !10693
  %mul23 = mul i32 2, %23, !dbg !10694
  store i32 %mul23, i32* %timeout.addr, align 4, !dbg !10695
  br label %if.end24, !dbg !10696

if.end24:                                         ; preds = %if.then21, %lor.lhs.false
  br label %do.body, !dbg !10697

do.body:                                          ; preds = %if.end24
  br label %do.body25, !dbg !10698

do.body25:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10699, metadata !DIExpression()), !dbg !10701
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10702, metadata !DIExpression()), !dbg !10701
  %cmp26 = icmp eq i64* %__dummy, %__dummy2, !dbg !10701
  %conv27 = zext i1 %cmp26 to i32, !dbg !10701
  store i32 1, i32* %tmp, align 4, !dbg !10701
  %24 = load i32, i32* %tmp, align 4, !dbg !10701
  br label %do.body28, !dbg !10703

do.body28:                                        ; preds = %do.body25
  br label %do.body29, !dbg !10704

do.body29:                                        ; preds = %do.body28
  br label %do.body30, !dbg !10705

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !10707, metadata !DIExpression()), !dbg !10710
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !10711, metadata !DIExpression()), !dbg !10710
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !10710
  %conv34 = zext i1 %cmp33 to i32, !dbg !10710
  store i32 1, i32* %tmp35, align 4, !dbg !10710
  %25 = load i32, i32* %tmp35, align 4, !dbg !10710
  %call = call i64 @arch_local_irq_save() #11, !dbg !10712
  store i64 %call, i64* %flags, align 8, !dbg !10712
  br label %do.end, !dbg !10712

do.end:                                           ; preds = %do.body30
  br label %do.end36, !dbg !10705

do.end36:                                         ; preds = %do.end
  br label %do.body37, !dbg !10704

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10713, !srcloc !10714
  br label %do.body38, !dbg !10713

do.body38:                                        ; preds = %do.body37
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10715
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 28, !dbg !10715
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10716
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !10717
  %rlock.i = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !10717
  br label %do.end40, !dbg !10715

do.end40:                                         ; preds = %do.body38
  br label %do.end41, !dbg !10713

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !10704

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !10703

do.end43:                                         ; preds = %do.end42
  br label %do.end44, !dbg !10698

do.end44:                                         ; preds = %do.end43
  br label %while.cond, !dbg !10718

while.cond:                                       ; preds = %if.end91, %do.end44
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10719
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 2, !dbg !10720
  %30 = load i64, i64* %ioaddr, align 8, !dbg !10720
  %add = add i64 %30, 5, !dbg !10721
  %conv45 = trunc i64 %add to i32, !dbg !10719
  %call46 = call zeroext i8 @inb(i32 %conv45) #11, !dbg !10722
  %conv47 = zext i8 %call46 to i32, !dbg !10722
  store i32 %conv47, i32* %lsr, align 4, !dbg !10723
  %and = and i32 %conv47, 64, !dbg !10724
  %tobool48 = icmp ne i32 %and, 0, !dbg !10725
  %lnot = xor i1 %tobool48, true, !dbg !10725
  br i1 %lnot, label %while.body, label %while.end, !dbg !10718

while.body:                                       ; preds = %while.cond
  %31 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10726
  %slock49 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %31, i32 0, i32 28, !dbg !10727
  %32 = load i64, i64* %flags, align 8, !dbg !10728
  store %struct.spinlock* %slock49, %struct.spinlock** %lock.addr.i102, align 8
  store i64 %32, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10729
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10729
  store i32 1, i32* %tmp.i, align 4, !dbg !10729
  %33 = load i32, i32* %tmp.i, align 4, !dbg !10729
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10730
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10730
  store i32 1, i32* %tmp8.i, align 4, !dbg !10730
  %34 = load i32, i32* %tmp8.i, align 4, !dbg !10730
  %35 = load i64, i64* %flags.addr.i, align 8, !dbg !10731
  call void @arch_local_irq_restore(i64 %35) #13, !dbg !10731
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10732, !srcloc !6391
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !10733
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !10733
  %rlock.i103 = bitcast %union.anon.2* %37 to %struct.raw_spinlock*, !dbg !10733
  %38 = load i64, i64* %char_time, align 8, !dbg !10734
  %call50 = call i64 @schedule_timeout_interruptible(i64 %38) #11, !dbg !10735
  br label %do.body51, !dbg !10736

do.body51:                                        ; preds = %while.body
  br label %do.body52, !dbg !10737

do.body52:                                        ; preds = %do.body51
  call void @llvm.dbg.declare(metadata i64* %__dummy53, metadata !10738, metadata !DIExpression()), !dbg !10740
  call void @llvm.dbg.declare(metadata i64* %__dummy254, metadata !10741, metadata !DIExpression()), !dbg !10740
  %cmp55 = icmp eq i64* %__dummy53, %__dummy254, !dbg !10740
  %conv56 = zext i1 %cmp55 to i32, !dbg !10740
  store i32 1, i32* %tmp57, align 4, !dbg !10740
  %39 = load i32, i32* %tmp57, align 4, !dbg !10740
  br label %do.body58, !dbg !10742

do.body58:                                        ; preds = %do.body52
  br label %do.body59, !dbg !10743

do.body59:                                        ; preds = %do.body58
  br label %do.body60, !dbg !10744

do.body60:                                        ; preds = %do.body59
  call void @llvm.dbg.declare(metadata i64* %__dummy61, metadata !10746, metadata !DIExpression()), !dbg !10749
  call void @llvm.dbg.declare(metadata i64* %__dummy262, metadata !10750, metadata !DIExpression()), !dbg !10749
  %cmp63 = icmp eq i64* %__dummy61, %__dummy262, !dbg !10749
  %conv64 = zext i1 %cmp63 to i32, !dbg !10749
  store i32 1, i32* %tmp65, align 4, !dbg !10749
  %40 = load i32, i32* %tmp65, align 4, !dbg !10749
  %call66 = call i64 @arch_local_irq_save() #11, !dbg !10751
  store i64 %call66, i64* %flags, align 8, !dbg !10751
  br label %do.end67, !dbg !10751

do.end67:                                         ; preds = %do.body60
  br label %do.end68, !dbg !10744

do.end68:                                         ; preds = %do.end67
  br label %do.body69, !dbg !10743

do.body69:                                        ; preds = %do.end68
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10752, !srcloc !10753
  br label %do.body70, !dbg !10752

do.body70:                                        ; preds = %do.body69
  %41 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10754
  %slock71 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %41, i32 0, i32 28, !dbg !10754
  store %struct.spinlock* %slock71, %struct.spinlock** %lock.addr.i104, align 8
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i104, align 8, !dbg !10755
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !10756
  %rlock.i105 = bitcast %union.anon.2* %43 to %struct.raw_spinlock*, !dbg !10756
  br label %do.end73, !dbg !10754

do.end73:                                         ; preds = %do.body70
  br label %do.end74, !dbg !10752

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !10743

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !10742

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !10737

do.end77:                                         ; preds = %do.end76
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10607
  %44 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10607
  %45 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10608, !srcloc !10757
  store i64 %45, i64* %pfo_val__.i, align 8, !dbg !10608
  %46 = load i64, i64* %pfo_val__.i, align 8, !dbg !10608
  %47 = inttoptr i64 %46 to %struct.task_struct*, !dbg !10608
  store %struct.task_struct* %47, %struct.task_struct** %tmp.i106, align 8, !dbg !10608
  %48 = load %struct.task_struct*, %struct.task_struct** %tmp.i106, align 8, !dbg !10608
  store %struct.task_struct* %48, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10603
  %49 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10603
  store %struct.task_struct* %49, %struct.task_struct** %tmp1.i, align 8, !dbg !10603
  %50 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10603
  %call79 = call i32 @signal_pending(%struct.task_struct* %50) #11, !dbg !10758
  %tobool80 = icmp ne i32 %call79, 0, !dbg !10758
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !10759

if.then81:                                        ; preds = %do.end77
  br label %while.end, !dbg !10760

if.end82:                                         ; preds = %do.end77
  %51 = load i32, i32* %timeout.addr, align 4, !dbg !10761
  %tobool83 = icmp ne i32 %51, 0, !dbg !10761
  br i1 %tobool83, label %land.lhs.true84, label %if.end91, !dbg !10763

land.lhs.true84:                                  ; preds = %if.end82
  %52 = load i64, i64* %orig_jiffies, align 8, !dbg !10764
  %53 = load i32, i32* %timeout.addr, align 4, !dbg !10764
  %conv85 = sext i32 %53 to i64, !dbg !10764
  %add86 = add i64 %52, %conv85, !dbg !10764
  %54 = load volatile i64, i64* @jiffies, align 8, !dbg !10764
  %sub87 = sub i64 %add86, %54, !dbg !10764
  %cmp88 = icmp slt i64 %sub87, 0, !dbg !10764
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !10765

if.then90:                                        ; preds = %land.lhs.true84
  br label %while.end, !dbg !10766

if.end91:                                         ; preds = %land.lhs.true84, %if.end82
  br label %while.cond, !dbg !10718, !llvm.loop !10767

while.end:                                        ; preds = %if.then90, %if.then81, %while.cond
  %55 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10769
  %slock92 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %55, i32 0, i32 28, !dbg !10770
  %56 = load i64, i64* %flags, align 8, !dbg !10771
  store %struct.spinlock* %slock92, %struct.spinlock** %lock.addr.i107, align 8
  store i64 %56, i64* %flags.addr.i108, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10772
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10772
  store i32 1, i32* %tmp.i109, align 4, !dbg !10772
  %57 = load i32, i32* %tmp.i109, align 4, !dbg !10772
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10773
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10773
  store i32 1, i32* %tmp8.i110, align 4, !dbg !10773
  %58 = load i32, i32* %tmp8.i110, align 4, !dbg !10773
  %59 = load i64, i64* %flags.addr.i108, align 8, !dbg !10774
  call void @arch_local_irq_restore(i64 %59) #13, !dbg !10774
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10775, !srcloc !6391
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !10776
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !10776
  %rlock.i111 = bitcast %union.anon.2* %61 to %struct.raw_spinlock*, !dbg !10776
  br label %do.body93, !dbg !10777

do.body93:                                        ; preds = %while.end
  br label %do.body94, !dbg !10778

do.body94:                                        ; preds = %do.body93
  br label %do.body95, !dbg !10779

do.body95:                                        ; preds = %do.body94
  br label %do.end96, !dbg !10780

do.end96:                                         ; preds = %do.body95
  br label %do.body97, !dbg !10779

do.body97:                                        ; preds = %do.end96
  store i8* null, i8** %__vpp_verify.i113, align 8, !dbg !10596
  %62 = load i8*, i8** %__vpp_verify.i113, align 8, !dbg !10596
  %63 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10599, !srcloc !10757
  store i64 %63, i64* %pfo_val__.i114, align 8, !dbg !10599
  %64 = load i64, i64* %pfo_val__.i114, align 8, !dbg !10599
  %65 = inttoptr i64 %64 to %struct.task_struct*, !dbg !10599
  store %struct.task_struct* %65, %struct.task_struct** %tmp.i115, align 8, !dbg !10599
  %66 = load %struct.task_struct*, %struct.task_struct** %tmp.i115, align 8, !dbg !10599
  store %struct.task_struct* %66, %struct.task_struct** %pscr_ret__.i112, align 8, !dbg !10589
  %67 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i112, align 8, !dbg !10589
  store %struct.task_struct* %67, %struct.task_struct** %tmp1.i116, align 8, !dbg !10589
  %68 = load %struct.task_struct*, %struct.task_struct** %tmp1.i116, align 8, !dbg !10589
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %68, i32 0, i32 1, !dbg !10782
  store volatile i64 0, i64* %state, align 16, !dbg !10782
  br label %do.end99, !dbg !10782

do.end99:                                         ; preds = %do.body97
  br label %do.end100, !dbg !10779

do.end100:                                        ; preds = %do.end99
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10778, !srcloc !10783
  br label %do.end101, !dbg !10778

do.end101:                                        ; preds = %if.then, %if.then2, %do.end100
  ret void, !dbg !10784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_tiocmget(%struct.tty_struct* %tty) #3 !dbg !10785 {
entry:
  %lock.addr.i58 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i58, metadata !6302, metadata !DIExpression()), !dbg !10786
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10788
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10789
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %control = alloca i8, align 1
  %status = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10798, metadata !DIExpression()), !dbg !10799
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10800
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10801
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10801
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10800
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10799
  call void @llvm.dbg.declare(metadata i8* %control, metadata !10802, metadata !DIExpression()), !dbg !10803
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10804, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10806, metadata !DIExpression()), !dbg !10807
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10808
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 5, !dbg !10810
  %4 = load i32, i32* %index, align 8, !dbg !10810
  %cmp = icmp eq i32 %4, 32, !dbg !10811
  br i1 %cmp, label %if.then, label %if.end, !dbg !10812

if.then:                                          ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !10813
  br label %return, !dbg !10813

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10814
  %call = call zeroext i1 @tty_io_error(%struct.tty_struct* %5) #11, !dbg !10816
  br i1 %call, label %if.then1, label %if.end2, !dbg !10817

if.then1:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !10818
  br label %return, !dbg !10818

if.end2:                                          ; preds = %if.end
  %6 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10819
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %6, i32 0, i32 12, !dbg !10820
  %7 = load i32, i32* %MCR, align 8, !dbg !10820
  %conv = trunc i32 %7 to i8, !dbg !10819
  store i8 %conv, i8* %control, align 1, !dbg !10821
  br label %do.body, !dbg !10822

do.body:                                          ; preds = %if.end2
  br label %do.body3, !dbg !10823

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10824, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10827, metadata !DIExpression()), !dbg !10826
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !10826
  %conv5 = zext i1 %cmp4 to i32, !dbg !10826
  store i32 1, i32* %tmp, align 4, !dbg !10826
  %8 = load i32, i32* %tmp, align 4, !dbg !10826
  br label %do.body6, !dbg !10828

do.body6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !10829

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !10830

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !10832, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !10836, metadata !DIExpression()), !dbg !10835
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !10835
  %conv12 = zext i1 %cmp11 to i32, !dbg !10835
  store i32 1, i32* %tmp13, align 4, !dbg !10835
  %9 = load i32, i32* %tmp13, align 4, !dbg !10835
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !10837
  store i64 %call14, i64* %flags, align 8, !dbg !10837
  br label %do.end, !dbg !10837

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !10830

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !10829

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10838, !srcloc !10839
  br label %do.body17, !dbg !10838

do.body17:                                        ; preds = %do.body16
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10840
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 28, !dbg !10840
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10841
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !10842
  %rlock.i = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !10842
  br label %do.end19, !dbg !10840

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !10838

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10829

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10828

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !10823

do.end23:                                         ; preds = %do.end22
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10843
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !10844
  %14 = load i64, i64* %ioaddr, align 8, !dbg !10844
  %add = add i64 %14, 6, !dbg !10845
  %conv24 = trunc i64 %add to i32, !dbg !10843
  %call25 = call zeroext i8 @inb(i32 %conv24) #11, !dbg !10846
  store i8 %call25, i8* %status, align 1, !dbg !10847
  %15 = load i8, i8* %status, align 1, !dbg !10848
  %conv26 = zext i8 %15 to i32, !dbg !10848
  %and = and i32 %conv26, 15, !dbg !10850
  %tobool = icmp ne i32 %and, 0, !dbg !10850
  br i1 %tobool, label %if.then27, label %if.end29, !dbg !10851

if.then27:                                        ; preds = %do.end23
  %16 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10852
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10853
  %18 = load i8, i8* %status, align 1, !dbg !10854
  %conv28 = zext i8 %18 to i32, !dbg !10854
  call void @mxser_check_modem_status(%struct.tty_struct* %16, %struct.mxser_port* %17, i32 %conv28) #11, !dbg !10855
  br label %if.end29, !dbg !10855

if.end29:                                         ; preds = %if.then27, %do.end23
  %19 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10856
  %slock30 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %19, i32 0, i32 28, !dbg !10857
  %20 = load i64, i64* %flags, align 8, !dbg !10858
  store %struct.spinlock* %slock30, %struct.spinlock** %lock.addr.i58, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10859
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10859
  store i32 1, i32* %tmp.i, align 4, !dbg !10859
  %21 = load i32, i32* %tmp.i, align 4, !dbg !10859
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10860
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10860
  store i32 1, i32* %tmp8.i, align 4, !dbg !10860
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !10860
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !10861
  call void @arch_local_irq_restore(i64 %23) #13, !dbg !10861
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10862, !srcloc !6391
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i58, align 8, !dbg !10863
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10863
  %rlock.i59 = bitcast %union.anon.2* %25 to %struct.raw_spinlock*, !dbg !10863
  %26 = load i8, i8* %control, align 1, !dbg !10864
  %conv31 = zext i8 %26 to i32, !dbg !10864
  %and32 = and i32 %conv31, 2, !dbg !10865
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10866
  %27 = zext i1 %tobool33 to i64, !dbg !10866
  %cond = select i1 %tobool33, i32 4, i32 0, !dbg !10866
  %28 = load i8, i8* %control, align 1, !dbg !10867
  %conv34 = zext i8 %28 to i32, !dbg !10867
  %and35 = and i32 %conv34, 1, !dbg !10868
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10869
  %29 = zext i1 %tobool36 to i64, !dbg !10869
  %cond37 = select i1 %tobool36, i32 2, i32 0, !dbg !10869
  %or = or i32 %cond, %cond37, !dbg !10870
  %30 = load i8, i8* %status, align 1, !dbg !10871
  %conv38 = zext i8 %30 to i32, !dbg !10871
  %and39 = and i32 %conv38, 128, !dbg !10872
  %tobool40 = icmp ne i32 %and39, 0, !dbg !10873
  %31 = zext i1 %tobool40 to i64, !dbg !10873
  %cond41 = select i1 %tobool40, i32 64, i32 0, !dbg !10873
  %or42 = or i32 %or, %cond41, !dbg !10874
  %32 = load i8, i8* %status, align 1, !dbg !10875
  %conv43 = zext i8 %32 to i32, !dbg !10875
  %and44 = and i32 %conv43, 64, !dbg !10876
  %tobool45 = icmp ne i32 %and44, 0, !dbg !10877
  %33 = zext i1 %tobool45 to i64, !dbg !10877
  %cond46 = select i1 %tobool45, i32 128, i32 0, !dbg !10877
  %or47 = or i32 %or42, %cond46, !dbg !10878
  %34 = load i8, i8* %status, align 1, !dbg !10879
  %conv48 = zext i8 %34 to i32, !dbg !10879
  %and49 = and i32 %conv48, 32, !dbg !10880
  %tobool50 = icmp ne i32 %and49, 0, !dbg !10881
  %35 = zext i1 %tobool50 to i64, !dbg !10881
  %cond51 = select i1 %tobool50, i32 256, i32 0, !dbg !10881
  %or52 = or i32 %or47, %cond51, !dbg !10882
  %36 = load i8, i8* %status, align 1, !dbg !10883
  %conv53 = zext i8 %36 to i32, !dbg !10883
  %and54 = and i32 %conv53, 16, !dbg !10884
  %tobool55 = icmp ne i32 %and54, 0, !dbg !10885
  %37 = zext i1 %tobool55 to i64, !dbg !10885
  %cond56 = select i1 %tobool55, i32 32, i32 0, !dbg !10885
  %or57 = or i32 %or52, %cond56, !dbg !10886
  store i32 %or57, i32* %retval, align 4, !dbg !10887
  br label %return, !dbg !10887

return:                                           ; preds = %if.end29, %if.then1, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !10888
  ret i32 %38, !dbg !10888
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_tiocmset(%struct.tty_struct* %tty, i32 %set, i32 %clear) #3 !dbg !10889 {
entry:
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !6302, metadata !DIExpression()), !dbg !10890
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10892
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10893
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %set.addr = alloca i32, align 4
  %clear.addr = alloca i32, align 4
  %info = alloca %struct.mxser_port*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10900, metadata !DIExpression()), !dbg !10901
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !10902, metadata !DIExpression()), !dbg !10903
  store i32 %clear, i32* %clear.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clear.addr, metadata !10904, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !10906, metadata !DIExpression()), !dbg !10907
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10908
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !10909
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10909
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !10908
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !10907
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10910, metadata !DIExpression()), !dbg !10911
  %3 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10912
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %3, i32 0, i32 5, !dbg !10914
  %4 = load i32, i32* %index, align 8, !dbg !10914
  %cmp = icmp eq i32 %4, 32, !dbg !10915
  br i1 %cmp, label %if.then, label %if.end, !dbg !10916

if.then:                                          ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !10917
  br label %return, !dbg !10917

if.end:                                           ; preds = %entry
  %5 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !10918
  %call = call zeroext i1 @tty_io_error(%struct.tty_struct* %5) #11, !dbg !10920
  br i1 %call, label %if.then1, label %if.end2, !dbg !10921

if.then1:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !10922
  br label %return, !dbg !10922

if.end2:                                          ; preds = %if.end
  br label %do.body, !dbg !10923

do.body:                                          ; preds = %if.end2
  br label %do.body3, !dbg !10924

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10925, metadata !DIExpression()), !dbg !10927
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10928, metadata !DIExpression()), !dbg !10927
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !10927
  %conv = zext i1 %cmp4 to i32, !dbg !10927
  store i32 1, i32* %tmp, align 4, !dbg !10927
  %6 = load i32, i32* %tmp, align 4, !dbg !10927
  br label %do.body5, !dbg !10929

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !10930

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !10931

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !10933, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !10937, metadata !DIExpression()), !dbg !10936
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !10936
  %conv11 = zext i1 %cmp10 to i32, !dbg !10936
  store i32 1, i32* %tmp12, align 4, !dbg !10936
  %7 = load i32, i32* %tmp12, align 4, !dbg !10936
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !10938
  store i64 %call13, i64* %flags, align 8, !dbg !10938
  br label %do.end, !dbg !10938

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !10931

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !10930

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10939, !srcloc !10940
  br label %do.body16, !dbg !10939

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10941
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 28, !dbg !10941
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10942
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !10943
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !10943
  br label %do.end18, !dbg !10941

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !10939

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10930

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !10929

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !10924

do.end22:                                         ; preds = %do.end21
  %11 = load i32, i32* %set.addr, align 4, !dbg !10944
  %and = and i32 %11, 4, !dbg !10946
  %tobool = icmp ne i32 %and, 0, !dbg !10946
  br i1 %tobool, label %if.then23, label %if.end24, !dbg !10947

if.then23:                                        ; preds = %do.end22
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10948
  %MCR = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 12, !dbg !10949
  %13 = load i32, i32* %MCR, align 8, !dbg !10950
  %or = or i32 %13, 2, !dbg !10950
  store i32 %or, i32* %MCR, align 8, !dbg !10950
  br label %if.end24, !dbg !10948

if.end24:                                         ; preds = %if.then23, %do.end22
  %14 = load i32, i32* %set.addr, align 4, !dbg !10951
  %and25 = and i32 %14, 2, !dbg !10953
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10953
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !10954

if.then27:                                        ; preds = %if.end24
  %15 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10955
  %MCR28 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %15, i32 0, i32 12, !dbg !10956
  %16 = load i32, i32* %MCR28, align 8, !dbg !10957
  %or29 = or i32 %16, 1, !dbg !10957
  store i32 %or29, i32* %MCR28, align 8, !dbg !10957
  br label %if.end30, !dbg !10955

if.end30:                                         ; preds = %if.then27, %if.end24
  %17 = load i32, i32* %clear.addr, align 4, !dbg !10958
  %and31 = and i32 %17, 4, !dbg !10960
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10960
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !10961

if.then33:                                        ; preds = %if.end30
  %18 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10962
  %MCR34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 12, !dbg !10963
  %19 = load i32, i32* %MCR34, align 8, !dbg !10964
  %and35 = and i32 %19, -3, !dbg !10964
  store i32 %and35, i32* %MCR34, align 8, !dbg !10964
  br label %if.end36, !dbg !10962

if.end36:                                         ; preds = %if.then33, %if.end30
  %20 = load i32, i32* %clear.addr, align 4, !dbg !10965
  %and37 = and i32 %20, 2, !dbg !10967
  %tobool38 = icmp ne i32 %and37, 0, !dbg !10967
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !10968

if.then39:                                        ; preds = %if.end36
  %21 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10969
  %MCR40 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %21, i32 0, i32 12, !dbg !10970
  %22 = load i32, i32* %MCR40, align 8, !dbg !10971
  %and41 = and i32 %22, -2, !dbg !10971
  store i32 %and41, i32* %MCR40, align 8, !dbg !10971
  br label %if.end42, !dbg !10969

if.end42:                                         ; preds = %if.then39, %if.end36
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10972
  %MCR43 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 12, !dbg !10973
  %24 = load i32, i32* %MCR43, align 8, !dbg !10973
  %conv44 = trunc i32 %24 to i8, !dbg !10972
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10974
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 2, !dbg !10975
  %26 = load i64, i64* %ioaddr, align 8, !dbg !10975
  %add = add i64 %26, 4, !dbg !10976
  %conv45 = trunc i64 %add to i32, !dbg !10974
  call void @outb(i8 zeroext %conv44, i32 %conv45) #11, !dbg !10977
  %27 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !10978
  %slock46 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %27, i32 0, i32 28, !dbg !10979
  %28 = load i64, i64* %flags, align 8, !dbg !10980
  store %struct.spinlock* %slock46, %struct.spinlock** %lock.addr.i47, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !10981
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !10981
  store i32 1, i32* %tmp.i, align 4, !dbg !10981
  %29 = load i32, i32* %tmp.i, align 4, !dbg !10981
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !10982
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !10982
  store i32 1, i32* %tmp8.i, align 4, !dbg !10982
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !10982
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !10983
  call void @arch_local_irq_restore(i64 %31) #13, !dbg !10983
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10984, !srcloc !6391
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !10985
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !10985
  %rlock.i48 = bitcast %union.anon.2* %33 to %struct.raw_spinlock*, !dbg !10985
  store i32 0, i32* %retval, align 4, !dbg !10986
  br label %return, !dbg !10986

return:                                           ; preds = %if.end42, %if.then1, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !10987
  ret i32 %34, !dbg !10987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_get_icount(%struct.tty_struct* %tty, %struct.serial_icounter_struct* %icount) #3 !dbg !10988 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !6302, metadata !DIExpression()), !dbg !10989
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !10991
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !10992
  %tty.addr = alloca %struct.tty_struct*, align 8
  %icount.addr = alloca %struct.serial_icounter_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %cnow = alloca %struct.async_icount, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  store %struct.serial_icounter_struct* %icount, %struct.serial_icounter_struct** %icount.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_icounter_struct** %icount.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !11003, metadata !DIExpression()), !dbg !11004
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11005
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11006
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11006
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !11005
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !11004
  call void @llvm.dbg.declare(metadata %struct.async_icount* %cnow, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11009, metadata !DIExpression()), !dbg !11010
  br label %do.body, !dbg !11011

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11012

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11013, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11016, metadata !DIExpression()), !dbg !11015
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11015
  %conv = zext i1 %cmp to i32, !dbg !11015
  store i32 1, i32* %tmp, align 4, !dbg !11015
  %3 = load i32, i32* %tmp, align 4, !dbg !11015
  br label %do.body2, !dbg !11017

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11018

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11019

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11021, metadata !DIExpression()), !dbg !11024
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11025, metadata !DIExpression()), !dbg !11024
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11024
  %conv8 = zext i1 %cmp7 to i32, !dbg !11024
  store i32 1, i32* %tmp9, align 4, !dbg !11024
  %4 = load i32, i32* %tmp9, align 4, !dbg !11024
  %call = call i64 @arch_local_irq_save() #11, !dbg !11026
  store i64 %call, i64* %flags, align 8, !dbg !11026
  br label %do.end, !dbg !11026

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11019

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11018

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11027, !srcloc !11028
  br label %do.body12, !dbg !11027

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11029
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 28, !dbg !11029
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11030
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !11031
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !11031
  br label %do.end14, !dbg !11029

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11027

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11018

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11017

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11012

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11032
  %icount19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 17, !dbg !11033
  %9 = bitcast %struct.async_icount* %cnow to i8*, !dbg !11033
  %10 = bitcast %struct.async_icount* %icount19 to i8*, !dbg !11033
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %10, i64 44, i1 false), !dbg !11033
  %11 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11034
  %slock20 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %11, i32 0, i32 28, !dbg !11035
  %12 = load i64, i64* %flags, align 8, !dbg !11036
  store %struct.spinlock* %slock20, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !11037
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !11037
  store i32 1, i32* %tmp.i, align 4, !dbg !11037
  %13 = load i32, i32* %tmp.i, align 4, !dbg !11037
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !11038
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !11038
  store i32 1, i32* %tmp8.i, align 4, !dbg !11038
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !11038
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !11039
  call void @arch_local_irq_restore(i64 %15) #13, !dbg !11039
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11040, !srcloc !6391
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !11041
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !11041
  %rlock.i33 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !11041
  %frame = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 6, !dbg !11042
  %18 = load i32, i32* %frame, align 4, !dbg !11042
  %19 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11043
  %frame21 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %19, i32 0, i32 6, !dbg !11044
  store i32 %18, i32* %frame21, align 4, !dbg !11045
  %brk = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 9, !dbg !11046
  %20 = load i32, i32* %brk, align 4, !dbg !11046
  %21 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11047
  %brk22 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %21, i32 0, i32 9, !dbg !11048
  store i32 %20, i32* %brk22, align 4, !dbg !11049
  %overrun = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 8, !dbg !11050
  %22 = load i32, i32* %overrun, align 4, !dbg !11050
  %23 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11051
  %overrun23 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %23, i32 0, i32 7, !dbg !11052
  store i32 %22, i32* %overrun23, align 4, !dbg !11053
  %buf_overrun = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 10, !dbg !11054
  %24 = load i32, i32* %buf_overrun, align 4, !dbg !11054
  %25 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11055
  %buf_overrun24 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %25, i32 0, i32 10, !dbg !11056
  store i32 %24, i32* %buf_overrun24, align 4, !dbg !11057
  %parity = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 7, !dbg !11058
  %26 = load i32, i32* %parity, align 4, !dbg !11058
  %27 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11059
  %parity25 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %27, i32 0, i32 8, !dbg !11060
  store i32 %26, i32* %parity25, align 4, !dbg !11061
  %rx = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 5, !dbg !11062
  %28 = load i32, i32* %rx, align 4, !dbg !11062
  %29 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11063
  %rx26 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %29, i32 0, i32 4, !dbg !11064
  store i32 %28, i32* %rx26, align 4, !dbg !11065
  %tx = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 4, !dbg !11066
  %30 = load i32, i32* %tx, align 4, !dbg !11066
  %31 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11067
  %tx27 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %31, i32 0, i32 5, !dbg !11068
  store i32 %30, i32* %tx27, align 4, !dbg !11069
  %cts = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 0, !dbg !11070
  %32 = load i32, i32* %cts, align 4, !dbg !11070
  %33 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11071
  %cts28 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %33, i32 0, i32 0, !dbg !11072
  store i32 %32, i32* %cts28, align 4, !dbg !11073
  %dsr = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 1, !dbg !11074
  %34 = load i32, i32* %dsr, align 4, !dbg !11074
  %35 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11075
  %dsr29 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %35, i32 0, i32 1, !dbg !11076
  store i32 %34, i32* %dsr29, align 4, !dbg !11077
  %rng = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 2, !dbg !11078
  %36 = load i32, i32* %rng, align 4, !dbg !11078
  %37 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11079
  %rng30 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %37, i32 0, i32 2, !dbg !11080
  store i32 %36, i32* %rng30, align 4, !dbg !11081
  %dcd = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 3, !dbg !11082
  %38 = load i32, i32* %dcd, align 4, !dbg !11082
  %39 = load %struct.serial_icounter_struct*, %struct.serial_icounter_struct** %icount.addr, align 8, !dbg !11083
  %dcd31 = getelementptr inbounds %struct.serial_icounter_struct, %struct.serial_icounter_struct* %39, i32 0, i32 3, !dbg !11084
  store i32 %38, i32* %dcd31, align 4, !dbg !11085
  ret i32 0, !dbg !11086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_get_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #3 !dbg !11087 {
entry:
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11088, metadata !DIExpression()), !dbg !11089
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !11092, metadata !DIExpression()), !dbg !11093
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11094
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11095
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11095
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !11094
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !11093
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !11096, metadata !DIExpression()), !dbg !11097
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11098
  %port1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 0, !dbg !11099
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !11097
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11100
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 5, !dbg !11102
  %5 = load i32, i32* %index, align 8, !dbg !11102
  %cmp = icmp eq i32 %5, 32, !dbg !11103
  br i1 %cmp, label %if.then, label %if.end, !dbg !11104

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11105
  br label %return, !dbg !11105

if.end:                                           ; preds = %entry
  %6 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11106
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %6, i32 0, i32 13, !dbg !11107
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !11108
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11109
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 9, !dbg !11110
  %8 = load i32, i32* %type, align 4, !dbg !11110
  %9 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11111
  %type2 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %9, i32 0, i32 0, !dbg !11112
  store i32 %8, i32* %type2, align 8, !dbg !11113
  %10 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11114
  %index3 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %10, i32 0, i32 5, !dbg !11115
  %11 = load i32, i32* %index3, align 8, !dbg !11115
  %12 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11116
  %line = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %12, i32 0, i32 1, !dbg !11117
  store i32 %11, i32* %line, align 4, !dbg !11118
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11119
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 2, !dbg !11120
  %14 = load i64, i64* %ioaddr, align 8, !dbg !11120
  %conv = trunc i64 %14 to i32, !dbg !11119
  %15 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11121
  %port4 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %15, i32 0, i32 2, !dbg !11122
  store i32 %conv, i32* %port4, align 8, !dbg !11123
  %16 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11124
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %16, i32 0, i32 1, !dbg !11125
  %17 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !11125
  %irq = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %17, i32 0, i32 1, !dbg !11126
  %18 = load i32, i32* %irq, align 4, !dbg !11126
  %19 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11127
  %irq5 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %19, i32 0, i32 3, !dbg !11128
  store i32 %18, i32* %irq5, align 4, !dbg !11129
  %20 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11130
  %port6 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %20, i32 0, i32 0, !dbg !11131
  %flags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port6, i32 0, i32 10, !dbg !11132
  %21 = load i64, i64* %flags, align 8, !dbg !11132
  %conv7 = trunc i64 %21 to i32, !dbg !11130
  %22 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11133
  %flags8 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %22, i32 0, i32 4, !dbg !11134
  store i32 %conv7, i32* %flags8, align 8, !dbg !11135
  %23 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11136
  %baud_base = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %23, i32 0, i32 8, !dbg !11137
  %24 = load i32, i32* %baud_base, align 8, !dbg !11137
  %25 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11138
  %baud_base9 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %25, i32 0, i32 7, !dbg !11139
  store i32 %24, i32* %baud_base9, align 4, !dbg !11140
  %26 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11141
  %port10 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %26, i32 0, i32 0, !dbg !11142
  %close_delay = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port10, i32 0, i32 16, !dbg !11143
  %27 = load i32, i32* %close_delay, align 8, !dbg !11143
  %conv11 = trunc i32 %27 to i16, !dbg !11141
  %28 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11144
  %close_delay12 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %28, i32 0, i32 8, !dbg !11145
  store i16 %conv11, i16* %close_delay12, align 8, !dbg !11146
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11147
  %port13 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 0, !dbg !11148
  %closing_wait = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port13, i32 0, i32 17, !dbg !11149
  %30 = load i32, i32* %closing_wait, align 4, !dbg !11149
  %conv14 = trunc i32 %30 to i16, !dbg !11147
  %31 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11150
  %closing_wait15 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %31, i32 0, i32 12, !dbg !11151
  store i16 %conv14, i16* %closing_wait15, align 8, !dbg !11152
  %32 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11153
  %custom_divisor = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %32, i32 0, i32 15, !dbg !11154
  %33 = load i32, i32* %custom_divisor, align 8, !dbg !11154
  %34 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11155
  %custom_divisor16 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %34, i32 0, i32 6, !dbg !11156
  store i32 %33, i32* %custom_divisor16, align 8, !dbg !11157
  %35 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11158
  %mutex17 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %35, i32 0, i32 13, !dbg !11159
  call void @mutex_unlock(%struct.mutex* %mutex17) #11, !dbg !11160
  store i32 0, i32* %retval, align 4, !dbg !11161
  br label %return, !dbg !11161

return:                                           ; preds = %if.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !11162
  ret i32 %36, !dbg !11162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_set_serial_info(%struct.tty_struct* %tty, %struct.serial_struct* %ss) #3 !dbg !11163 {
entry:
  %lock.addr.i132 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i132, metadata !6302, metadata !DIExpression()), !dbg !11164
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !11170
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !11171
  %retval = alloca i32, align 4
  %tty.addr = alloca %struct.tty_struct*, align 8
  %ss.addr = alloca %struct.serial_struct*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  %baud = alloca i32, align 4
  %sl_flags = alloca i64, align 8
  %flags = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy107 = alloca i64, align 8
  %__dummy2108 = alloca i64, align 8
  %tmp111 = alloca i32, align 4
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !11178, metadata !DIExpression()), !dbg !11179
  store %struct.serial_struct* %ss, %struct.serial_struct** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.serial_struct** %ss.addr, metadata !11180, metadata !DIExpression()), !dbg !11181
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !11182, metadata !DIExpression()), !dbg !11183
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11184
  %driver_data = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 37, !dbg !11185
  %1 = load i8*, i8** %driver_data, align 8, !dbg !11185
  %2 = bitcast i8* %1 to %struct.mxser_port*, !dbg !11184
  store %struct.mxser_port* %2, %struct.mxser_port** %info, align 8, !dbg !11183
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !11186, metadata !DIExpression()), !dbg !11187
  %3 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11188
  %port1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %3, i32 0, i32 0, !dbg !11189
  store %struct.tty_port* %port1, %struct.tty_port** %port, align 8, !dbg !11187
  call void @llvm.dbg.declare(metadata i32* %baud, metadata !11190, metadata !DIExpression()), !dbg !11191
  call void @llvm.dbg.declare(metadata i64* %sl_flags, metadata !11192, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !11194, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !11196, metadata !DIExpression()), !dbg !11197
  store i32 0, i32* %retval2, align 4, !dbg !11197
  %4 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11198
  %index = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %4, i32 0, i32 5, !dbg !11200
  %5 = load i32, i32* %index, align 8, !dbg !11200
  %cmp = icmp eq i32 %5, 32, !dbg !11201
  br i1 %cmp, label %if.then, label %if.end, !dbg !11202

if.then:                                          ; preds = %entry
  store i32 -25, i32* %retval, align 4, !dbg !11203
  br label %return, !dbg !11203

if.end:                                           ; preds = %entry
  %6 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11204
  %call = call zeroext i1 @tty_io_error(%struct.tty_struct* %6) #11, !dbg !11206
  br i1 %call, label %if.then3, label %if.end4, !dbg !11207

if.then3:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !11208
  br label %return, !dbg !11208

if.end4:                                          ; preds = %if.end
  %7 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11209
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %7, i32 0, i32 13, !dbg !11210
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !11211
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11212
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 2, !dbg !11214
  %9 = load i64, i64* %ioaddr, align 8, !dbg !11214
  %tobool = icmp ne i64 %9, 0, !dbg !11212
  br i1 %tobool, label %if.end7, label %if.then5, !dbg !11215

if.then5:                                         ; preds = %if.end4
  %10 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11216
  %mutex6 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %10, i32 0, i32 13, !dbg !11218
  call void @mutex_unlock(%struct.mutex* %mutex6) #11, !dbg !11219
  store i32 -19, i32* %retval, align 4, !dbg !11220
  br label %return, !dbg !11220

if.end7:                                          ; preds = %if.end4
  %11 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11221
  %irq = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %11, i32 0, i32 3, !dbg !11223
  %12 = load i32, i32* %irq, align 4, !dbg !11223
  %13 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11224
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %13, i32 0, i32 1, !dbg !11225
  %14 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !11225
  %irq8 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %14, i32 0, i32 1, !dbg !11226
  %15 = load i32, i32* %irq8, align 4, !dbg !11226
  %cmp9 = icmp ne i32 %12, %15, !dbg !11227
  br i1 %cmp9, label %if.then14, label %lor.lhs.false, !dbg !11228

lor.lhs.false:                                    ; preds = %if.end7
  %16 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11229
  %port10 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %16, i32 0, i32 2, !dbg !11230
  %17 = load i32, i32* %port10, align 8, !dbg !11230
  %conv = zext i32 %17 to i64, !dbg !11229
  %18 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11231
  %ioaddr11 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %18, i32 0, i32 2, !dbg !11232
  %19 = load i64, i64* %ioaddr11, align 8, !dbg !11232
  %cmp12 = icmp ne i64 %conv, %19, !dbg !11233
  br i1 %cmp12, label %if.then14, label %if.end16, !dbg !11234

if.then14:                                        ; preds = %lor.lhs.false, %if.end7
  %20 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11235
  %mutex15 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %20, i32 0, i32 13, !dbg !11237
  call void @mutex_unlock(%struct.mutex* %mutex15) #11, !dbg !11238
  store i32 -22, i32* %retval, align 4, !dbg !11239
  br label %return, !dbg !11239

if.end16:                                         ; preds = %lor.lhs.false
  %21 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11240
  %flags17 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %21, i32 0, i32 10, !dbg !11241
  %22 = load i64, i64* %flags17, align 8, !dbg !11241
  %and = and i64 %22, 4144, !dbg !11242
  %conv18 = trunc i64 %and to i32, !dbg !11240
  store i32 %conv18, i32* %flags, align 4, !dbg !11243
  %call19 = call zeroext i1 @capable(i32 21) #11, !dbg !11244
  br i1 %call19, label %if.else, label %if.then20, !dbg !11246

if.then20:                                        ; preds = %if.end16
  %23 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11247
  %baud_base = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %23, i32 0, i32 7, !dbg !11250
  %24 = load i32, i32* %baud_base, align 4, !dbg !11250
  %25 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11251
  %baud_base21 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %25, i32 0, i32 8, !dbg !11252
  %26 = load i32, i32* %baud_base21, align 8, !dbg !11252
  %cmp22 = icmp ne i32 %24, %26, !dbg !11253
  br i1 %cmp22, label %if.then39, label %lor.lhs.false24, !dbg !11254

lor.lhs.false24:                                  ; preds = %if.then20
  %27 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11255
  %close_delay = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %27, i32 0, i32 8, !dbg !11256
  %28 = load i16, i16* %close_delay, align 8, !dbg !11256
  %conv25 = zext i16 %28 to i32, !dbg !11255
  %29 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11257
  %port26 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %29, i32 0, i32 0, !dbg !11258
  %close_delay27 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port26, i32 0, i32 16, !dbg !11259
  %30 = load i32, i32* %close_delay27, align 8, !dbg !11259
  %cmp28 = icmp ne i32 %conv25, %30, !dbg !11260
  br i1 %cmp28, label %if.then39, label %lor.lhs.false30, !dbg !11261

lor.lhs.false30:                                  ; preds = %lor.lhs.false24
  %31 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11262
  %flags31 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %31, i32 0, i32 4, !dbg !11263
  %32 = load i32, i32* %flags31, align 8, !dbg !11263
  %and32 = and i32 %32, -13361, !dbg !11264
  %conv33 = zext i32 %and32 to i64, !dbg !11265
  %33 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11266
  %port34 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %33, i32 0, i32 0, !dbg !11267
  %flags35 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port34, i32 0, i32 10, !dbg !11268
  %34 = load i64, i64* %flags35, align 8, !dbg !11268
  %and36 = and i64 %34, 4294953935, !dbg !11269
  %cmp37 = icmp ne i64 %conv33, %and36, !dbg !11270
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !11271

if.then39:                                        ; preds = %lor.lhs.false30, %lor.lhs.false24, %if.then20
  %35 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11272
  %mutex40 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %35, i32 0, i32 13, !dbg !11274
  call void @mutex_unlock(%struct.mutex* %mutex40) #11, !dbg !11275
  store i32 -1, i32* %retval, align 4, !dbg !11276
  br label %return, !dbg !11276

if.end41:                                         ; preds = %lor.lhs.false30
  %36 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11277
  %port42 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %36, i32 0, i32 0, !dbg !11278
  %flags43 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port42, i32 0, i32 10, !dbg !11279
  %37 = load i64, i64* %flags43, align 8, !dbg !11279
  %and44 = and i64 %37, 4294953935, !dbg !11280
  %38 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11281
  %flags45 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %38, i32 0, i32 4, !dbg !11282
  %39 = load i32, i32* %flags45, align 8, !dbg !11282
  %and46 = and i32 %39, 13360, !dbg !11283
  %conv47 = zext i32 %and46 to i64, !dbg !11284
  %or = or i64 %and44, %conv47, !dbg !11285
  %40 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11286
  %port48 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %40, i32 0, i32 0, !dbg !11287
  %flags49 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %port48, i32 0, i32 10, !dbg !11288
  store i64 %or, i64* %flags49, align 8, !dbg !11289
  br label %if.end91, !dbg !11290

if.else:                                          ; preds = %if.end16
  %41 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11291
  %flags50 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %41, i32 0, i32 10, !dbg !11293
  %42 = load i64, i64* %flags50, align 8, !dbg !11293
  %and51 = and i64 %42, 4294836224, !dbg !11294
  %43 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11295
  %flags52 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %43, i32 0, i32 4, !dbg !11296
  %44 = load i32, i32* %flags52, align 8, !dbg !11296
  %and53 = and i32 %44, 131071, !dbg !11297
  %conv54 = zext i32 %and53 to i64, !dbg !11298
  %or55 = or i64 %and51, %conv54, !dbg !11299
  %45 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11300
  %flags56 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %45, i32 0, i32 10, !dbg !11301
  store i64 %or55, i64* %flags56, align 8, !dbg !11302
  %46 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11303
  %close_delay57 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %46, i32 0, i32 8, !dbg !11304
  %47 = load i16, i16* %close_delay57, align 8, !dbg !11304
  %conv58 = zext i16 %47 to i32, !dbg !11303
  %mul = mul i32 %conv58, 250, !dbg !11305
  %div = sdiv i32 %mul, 100, !dbg !11306
  %48 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11307
  %close_delay59 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %48, i32 0, i32 16, !dbg !11308
  store i32 %div, i32* %close_delay59, align 8, !dbg !11309
  %49 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11310
  %closing_wait = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %49, i32 0, i32 12, !dbg !11311
  %50 = load i16, i16* %closing_wait, align 8, !dbg !11311
  %conv60 = zext i16 %50 to i32, !dbg !11310
  %mul61 = mul i32 %conv60, 250, !dbg !11312
  %div62 = sdiv i32 %mul61, 100, !dbg !11313
  %51 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11314
  %closing_wait63 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %51, i32 0, i32 17, !dbg !11315
  store i32 %div62, i32* %closing_wait63, align 4, !dbg !11316
  %52 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11317
  %flags64 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %52, i32 0, i32 10, !dbg !11318
  %53 = load i64, i64* %flags64, align 8, !dbg !11318
  %and65 = and i64 %53, 8192, !dbg !11319
  %tobool66 = icmp ne i64 %and65, 0, !dbg !11320
  %54 = zext i1 %tobool66 to i64, !dbg !11320
  %cond = select i1 %tobool66, i32 1, i32 0, !dbg !11320
  %conv67 = trunc i32 %cond to i8, !dbg !11320
  %55 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11321
  %low_latency = getelementptr inbounds %struct.tty_port, %struct.tty_port* %55, i32 0, i32 12, !dbg !11322
  %bf.load = load i8, i8* %low_latency, align 8, !dbg !11323
  %bf.value = and i8 %conv67, 1, !dbg !11323
  %bf.shl = shl i8 %bf.value, 1, !dbg !11323
  %bf.clear = and i8 %bf.load, -3, !dbg !11323
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !11323
  store i8 %bf.set, i8* %low_latency, align 8, !dbg !11323
  %56 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11324
  %flags68 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %56, i32 0, i32 10, !dbg !11326
  %57 = load i64, i64* %flags68, align 8, !dbg !11326
  %and69 = and i64 %57, 4144, !dbg !11327
  %cmp70 = icmp eq i64 %and69, 48, !dbg !11328
  br i1 %cmp70, label %land.lhs.true, label %if.end90, !dbg !11329

land.lhs.true:                                    ; preds = %if.else
  %58 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11330
  %baud_base72 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %58, i32 0, i32 7, !dbg !11331
  %59 = load i32, i32* %baud_base72, align 4, !dbg !11331
  %60 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11332
  %baud_base73 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %60, i32 0, i32 8, !dbg !11333
  %61 = load i32, i32* %baud_base73, align 8, !dbg !11333
  %cmp74 = icmp ne i32 %59, %61, !dbg !11334
  br i1 %cmp74, label %if.then80, label %lor.lhs.false76, !dbg !11335

lor.lhs.false76:                                  ; preds = %land.lhs.true
  %62 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11336
  %custom_divisor = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %62, i32 0, i32 6, !dbg !11337
  %63 = load i32, i32* %custom_divisor, align 8, !dbg !11337
  %64 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11338
  %custom_divisor77 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %64, i32 0, i32 15, !dbg !11339
  %65 = load i32, i32* %custom_divisor77, align 8, !dbg !11339
  %cmp78 = icmp ne i32 %63, %65, !dbg !11340
  br i1 %cmp78, label %if.then80, label %if.end90, !dbg !11341

if.then80:                                        ; preds = %lor.lhs.false76, %land.lhs.true
  %66 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11342
  %custom_divisor81 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %66, i32 0, i32 6, !dbg !11345
  %67 = load i32, i32* %custom_divisor81, align 8, !dbg !11345
  %cmp82 = icmp eq i32 %67, 0, !dbg !11346
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !11347

if.then84:                                        ; preds = %if.then80
  %68 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11348
  %mutex85 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %68, i32 0, i32 13, !dbg !11350
  call void @mutex_unlock(%struct.mutex* %mutex85) #11, !dbg !11351
  store i32 -22, i32* %retval, align 4, !dbg !11352
  br label %return, !dbg !11352

if.end86:                                         ; preds = %if.then80
  %69 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11353
  %baud_base87 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %69, i32 0, i32 7, !dbg !11354
  %70 = load i32, i32* %baud_base87, align 4, !dbg !11354
  %71 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11355
  %custom_divisor88 = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %71, i32 0, i32 6, !dbg !11356
  %72 = load i32, i32* %custom_divisor88, align 8, !dbg !11356
  %div89 = sdiv i32 %70, %72, !dbg !11357
  store i32 %div89, i32* %baud, align 4, !dbg !11358
  %73 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11359
  %74 = load i32, i32* %baud, align 4, !dbg !11360
  %75 = load i32, i32* %baud, align 4, !dbg !11361
  call void @tty_encode_baud_rate(%struct.tty_struct* %73, i32 %74, i32 %75) #11, !dbg !11362
  br label %if.end90, !dbg !11363

if.end90:                                         ; preds = %if.end86, %lor.lhs.false76, %if.else
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end41
  %76 = load %struct.serial_struct*, %struct.serial_struct** %ss.addr, align 8, !dbg !11364
  %type = getelementptr inbounds %struct.serial_struct, %struct.serial_struct* %76, i32 0, i32 0, !dbg !11365
  %77 = load i32, i32* %type, align 8, !dbg !11365
  %78 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11366
  %type92 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %78, i32 0, i32 9, !dbg !11367
  store i32 %77, i32* %type92, align 4, !dbg !11368
  %79 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11369
  call void @process_txrx_fifo(%struct.mxser_port* %79) #11, !dbg !11370
  %80 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11371
  %call93 = call zeroext i1 @tty_port_initialized(%struct.tty_port* %80) #11, !dbg !11372
  br i1 %call93, label %if.then94, label %if.else124, !dbg !11373

if.then94:                                        ; preds = %if.end91
  %81 = load i32, i32* %flags, align 4, !dbg !11374
  %conv95 = zext i32 %81 to i64, !dbg !11374
  %82 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11375
  %flags96 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %82, i32 0, i32 10, !dbg !11376
  %83 = load i64, i64* %flags96, align 8, !dbg !11376
  %and97 = and i64 %83, 4144, !dbg !11377
  %cmp98 = icmp ne i64 %conv95, %and97, !dbg !11378
  br i1 %cmp98, label %if.then100, label %if.end123, !dbg !11379

if.then100:                                       ; preds = %if.then94
  br label %do.body, !dbg !11380

do.body:                                          ; preds = %if.then100
  br label %do.body101, !dbg !11381

do.body101:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11382, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11385, metadata !DIExpression()), !dbg !11384
  %cmp102 = icmp eq i64* %__dummy, %__dummy2, !dbg !11384
  %conv103 = zext i1 %cmp102 to i32, !dbg !11384
  store i32 1, i32* %tmp, align 4, !dbg !11384
  %84 = load i32, i32* %tmp, align 4, !dbg !11384
  br label %do.body104, !dbg !11386

do.body104:                                       ; preds = %do.body101
  br label %do.body105, !dbg !11387

do.body105:                                       ; preds = %do.body104
  br label %do.body106, !dbg !11388

do.body106:                                       ; preds = %do.body105
  call void @llvm.dbg.declare(metadata i64* %__dummy107, metadata !11390, metadata !DIExpression()), !dbg !11393
  call void @llvm.dbg.declare(metadata i64* %__dummy2108, metadata !11394, metadata !DIExpression()), !dbg !11393
  %cmp109 = icmp eq i64* %__dummy107, %__dummy2108, !dbg !11393
  %conv110 = zext i1 %cmp109 to i32, !dbg !11393
  store i32 1, i32* %tmp111, align 4, !dbg !11393
  %85 = load i32, i32* %tmp111, align 4, !dbg !11393
  %call112 = call i64 @arch_local_irq_save() #11, !dbg !11395
  store i64 %call112, i64* %sl_flags, align 8, !dbg !11395
  br label %do.end, !dbg !11395

do.end:                                           ; preds = %do.body106
  br label %do.end113, !dbg !11388

do.end113:                                        ; preds = %do.end
  br label %do.body114, !dbg !11387

do.body114:                                       ; preds = %do.end113
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11396, !srcloc !11397
  br label %do.body115, !dbg !11396

do.body115:                                       ; preds = %do.body114
  %86 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11398
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %86, i32 0, i32 28, !dbg !11398
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11399
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !11400
  %rlock.i = bitcast %union.anon.2* %88 to %struct.raw_spinlock*, !dbg !11400
  br label %do.end117, !dbg !11398

do.end117:                                        ; preds = %do.body115
  br label %do.end118, !dbg !11396

do.end118:                                        ; preds = %do.end117
  br label %do.end119, !dbg !11387

do.end119:                                        ; preds = %do.end118
  br label %do.end120, !dbg !11386

do.end120:                                        ; preds = %do.end119
  br label %do.end121, !dbg !11381

do.end121:                                        ; preds = %do.end120
  %89 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11401
  call void @mxser_change_speed(%struct.tty_struct* %89) #11, !dbg !11402
  %90 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11403
  %slock122 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %90, i32 0, i32 28, !dbg !11404
  %91 = load i64, i64* %sl_flags, align 8, !dbg !11405
  store %struct.spinlock* %slock122, %struct.spinlock** %lock.addr.i132, align 8
  store i64 %91, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !11406
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !11406
  store i32 1, i32* %tmp.i, align 4, !dbg !11406
  %92 = load i32, i32* %tmp.i, align 4, !dbg !11406
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !11407
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !11407
  store i32 1, i32* %tmp8.i, align 4, !dbg !11407
  %93 = load i32, i32* %tmp8.i, align 4, !dbg !11407
  %94 = load i64, i64* %flags.addr.i, align 8, !dbg !11408
  call void @arch_local_irq_restore(i64 %94) #13, !dbg !11408
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11409, !srcloc !6391
  %95 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i132, align 8, !dbg !11410
  %96 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %95, i32 0, i32 0, !dbg !11410
  %rlock.i133 = bitcast %union.anon.2* %96 to %struct.raw_spinlock*, !dbg !11410
  br label %if.end123, !dbg !11411

if.end123:                                        ; preds = %do.end121, %if.then94
  br label %if.end130, !dbg !11412

if.else124:                                       ; preds = %if.end91
  %97 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11413
  %98 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !11415
  %call125 = call i32 @mxser_activate(%struct.tty_port* %97, %struct.tty_struct* %98) #11, !dbg !11416
  store i32 %call125, i32* %retval2, align 4, !dbg !11417
  %99 = load i32, i32* %retval2, align 4, !dbg !11418
  %cmp126 = icmp eq i32 %99, 0, !dbg !11420
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !11421

if.then128:                                       ; preds = %if.else124
  %100 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11422
  call void @tty_port_set_initialized(%struct.tty_port* %100, i1 zeroext true) #11, !dbg !11423
  br label %if.end129, !dbg !11423

if.end129:                                        ; preds = %if.then128, %if.else124
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end123
  %101 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11424
  %mutex131 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %101, i32 0, i32 13, !dbg !11425
  call void @mutex_unlock(%struct.mutex* %mutex131) #11, !dbg !11426
  %102 = load i32, i32* %retval2, align 4, !dbg !11427
  store i32 %102, i32* %retval, align 4, !dbg !11428
  br label %return, !dbg !11428

return:                                           ; preds = %if.end130, %if.then84, %if.then39, %if.then14, %if.then5, %if.then3, %if.then
  %103 = load i32, i32* %retval, align 4, !dbg !11429
  ret i32 %103, !dbg !11429
}

; Function Attrs: noredzone
declare dso_local i32 @tty_port_open(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local i32 @tty_port_close_start(%struct.tty_port*, %struct.tty_struct*, %struct.file*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mxser_close_port(%struct.tty_port* %port) #3 !dbg !11430 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %info = alloca %struct.mxser_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mxser_port*, align 8
  %timeout = alloca i64, align 8
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11431, metadata !DIExpression()), !dbg !11432
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info, metadata !11433, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11435, metadata !DIExpression()), !dbg !11437
  %0 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11437
  %1 = bitcast %struct.tty_port* %0 to i8*, !dbg !11437
  store i8* %1, i8** %__mptr, align 8, !dbg !11437
  br label %do.body, !dbg !11437

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11438

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11437
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11437
  %3 = bitcast i8* %add.ptr to %struct.mxser_port*, !dbg !11437
  store %struct.mxser_port* %3, %struct.mxser_port** %tmp, align 8, !dbg !11438
  %4 = load %struct.mxser_port*, %struct.mxser_port** %tmp, align 8, !dbg !11437
  store %struct.mxser_port* %4, %struct.mxser_port** %info, align 8, !dbg !11434
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !11440, metadata !DIExpression()), !dbg !11441
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11442
  %IER = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 11, !dbg !11443
  %6 = load i32, i32* %IER, align 4, !dbg !11444
  %and = and i32 %6, -5, !dbg !11444
  store i32 %and, i32* %IER, align 4, !dbg !11444
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11445
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 1, !dbg !11447
  %8 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !11447
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %8, i32 0, i32 5, !dbg !11448
  %9 = load i32, i32* %chip_flag, align 8, !dbg !11448
  %tobool = icmp ne i32 %9, 0, !dbg !11445
  br i1 %tobool, label %if.then, label %if.end, !dbg !11449

if.then:                                          ; preds = %do.end
  %10 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11450
  %IER1 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %10, i32 0, i32 11, !dbg !11451
  %11 = load i32, i32* %IER1, align 4, !dbg !11452
  %and2 = and i32 %11, -18, !dbg !11452
  store i32 %and2, i32* %IER1, align 4, !dbg !11452
  br label %if.end, !dbg !11450

if.end:                                           ; preds = %if.then, %do.end
  %12 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11453
  %IER3 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %12, i32 0, i32 11, !dbg !11454
  %13 = load i32, i32* %IER3, align 4, !dbg !11454
  %conv = trunc i32 %13 to i8, !dbg !11453
  %14 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11455
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %14, i32 0, i32 2, !dbg !11456
  %15 = load i64, i64* %ioaddr, align 8, !dbg !11456
  %add = add i64 %15, 1, !dbg !11457
  %conv4 = trunc i64 %add to i32, !dbg !11455
  call void @outb(i8 zeroext %conv, i32 %conv4) #11, !dbg !11458
  %16 = load volatile i64, i64* @jiffies, align 8, !dbg !11459
  %add5 = add i64 %16, 250, !dbg !11460
  store i64 %add5, i64* %timeout, align 8, !dbg !11461
  br label %while.cond, !dbg !11462

while.cond:                                       ; preds = %if.end15, %if.end
  %17 = load %struct.mxser_port*, %struct.mxser_port** %info, align 8, !dbg !11463
  %ioaddr6 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %17, i32 0, i32 2, !dbg !11464
  %18 = load i64, i64* %ioaddr6, align 8, !dbg !11464
  %add7 = add i64 %18, 5, !dbg !11465
  %conv8 = trunc i64 %add7 to i32, !dbg !11463
  %call = call zeroext i8 @inb(i32 %conv8) #11, !dbg !11466
  %conv9 = zext i8 %call to i32, !dbg !11466
  %and10 = and i32 %conv9, 64, !dbg !11467
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11468
  %lnot = xor i1 %tobool11, true, !dbg !11468
  br i1 %lnot, label %while.body, label %while.end, !dbg !11462

while.body:                                       ; preds = %while.cond
  %call12 = call i64 @schedule_timeout_interruptible(i64 5) #11, !dbg !11469
  %19 = load i64, i64* %timeout, align 8, !dbg !11471
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !11471
  %sub = sub i64 %19, %20, !dbg !11471
  %cmp = icmp slt i64 %sub, 0, !dbg !11471
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !11473

if.then14:                                        ; preds = %while.body
  br label %while.end, !dbg !11474

if.end15:                                         ; preds = %while.body
  br label %while.cond, !dbg !11462, !llvm.loop !11475

while.end:                                        ; preds = %if.then14, %while.cond
  ret void, !dbg !11477
}

; Function Attrs: noredzone
declare dso_local void @tty_port_lower_dtr_rts(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tty_port_set_initialized(%struct.tty_port* %port, i1 zeroext %val) #3 !dbg !11478 {
entry:
  %port.addr = alloca %struct.tty_port*, align 8
  %val.addr = alloca i8, align 1
  store %struct.tty_port* %port, %struct.tty_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port.addr, metadata !11479, metadata !DIExpression()), !dbg !11480
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !11481, metadata !DIExpression()), !dbg !11482
  %0 = load i8, i8* %val.addr, align 1, !dbg !11483
  %tobool = trunc i8 %0 to i1, !dbg !11483
  br i1 %tobool, label %if.then, label %if.else, !dbg !11485

if.then:                                          ; preds = %entry
  %1 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11486
  %iflags = getelementptr inbounds %struct.tty_port, %struct.tty_port* %1, i32 0, i32 11, !dbg !11487
  call void @set_bit(i64 0, i64* %iflags) #11, !dbg !11488
  br label %if.end, !dbg !11488

if.else:                                          ; preds = %entry
  %2 = load %struct.tty_port*, %struct.tty_port** %port.addr, align 8, !dbg !11489
  %iflags1 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %2, i32 0, i32 11, !dbg !11490
  call void @clear_bit(i64 0, i64* %iflags1) #11, !dbg !11491
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11492
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_close_end(%struct.tty_port*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_tty_set(%struct.tty_port*, %struct.tty_struct*) #2

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout_interruptible(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_ioctl_special(i32 %cmd, i8* %argp) #3 !dbg !4743 {
entry:
  %retval.i.i306 = alloca i1, align 1
  %addr.addr.i.i307 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i307, metadata !9524, metadata !DIExpression()), !dbg !11493
  %bytes.addr.i.i308 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i308, metadata !9540, metadata !DIExpression()), !dbg !11499
  %is_source.addr.i.i309 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i309, metadata !9542, metadata !DIExpression()), !dbg !11500
  %sz.i.i310 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i310, metadata !9544, metadata !DIExpression()), !dbg !11501
  %__ret_warn_on.i.i311 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i311, metadata !9546, metadata !DIExpression()), !dbg !11502
  %tmp.i.i312 = alloca i64, align 8
  %to.addr.i313 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i313, metadata !9550, metadata !DIExpression()), !dbg !11503
  %from.addr.i314 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i314, metadata !9552, metadata !DIExpression()), !dbg !11504
  %n.addr.i315 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i315, metadata !9554, metadata !DIExpression()), !dbg !11505
  %lock.addr.i304 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i304, metadata !9556, metadata !DIExpression()), !dbg !11506
  %lock.addr.i302 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i302, metadata !9560, metadata !DIExpression()), !dbg !11514
  %retval.i.i251 = alloca i1, align 1
  %addr.addr.i.i252 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i252, metadata !9524, metadata !DIExpression()), !dbg !11516
  %bytes.addr.i.i253 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i253, metadata !9540, metadata !DIExpression()), !dbg !11526
  %is_source.addr.i.i254 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i254, metadata !9542, metadata !DIExpression()), !dbg !11527
  %sz.i.i255 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i255, metadata !9544, metadata !DIExpression()), !dbg !11528
  %__ret_warn_on.i.i256 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i256, metadata !9546, metadata !DIExpression()), !dbg !11529
  %tmp.i.i257 = alloca i64, align 8
  %to.addr.i258 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i258, metadata !9550, metadata !DIExpression()), !dbg !11530
  %from.addr.i259 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i259, metadata !9552, metadata !DIExpression()), !dbg !11531
  %n.addr.i260 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i260, metadata !9554, metadata !DIExpression()), !dbg !11532
  %lock.addr.i249 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i249, metadata !9556, metadata !DIExpression()), !dbg !11533
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9560, metadata !DIExpression()), !dbg !11535
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !9524, metadata !DIExpression()), !dbg !11537
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !9540, metadata !DIExpression()), !dbg !11541
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !9542, metadata !DIExpression()), !dbg !11542
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !9544, metadata !DIExpression()), !dbg !11543
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !9546, metadata !DIExpression()), !dbg !11544
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !9550, metadata !DIExpression()), !dbg !11545
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !9552, metadata !DIExpression()), !dbg !11546
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !9554, metadata !DIExpression()), !dbg !11547
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !10583, metadata !DIExpression()), !dbg !11548
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !10594, metadata !DIExpression()), !dbg !11552
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !10597, metadata !DIExpression()), !dbg !11553
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %cmd.addr = alloca i32, align 4
  %argp.addr = alloca i8*, align 8
  %ip = alloca %struct.mxser_port*, align 8
  %port = alloca %struct.tty_port*, align 8
  %tty = alloca %struct.tty_struct*, align 8
  %result = alloca i32, align 4
  %status = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  %tmp20 = alloca i64, align 8
  %__ret_pu21 = alloca i32, align 4
  %__ptr_pu22 = alloca i8*, align 8
  %__val_pu23 = alloca i64, align 8
  %tmp27 = alloca i64, align 8
  %ms = alloca %struct.mxser_mstatus, align 4
  %msu = alloca %struct.mxser_mstatus*, align 8
  %me = alloca %struct.mxser_mon_ext*, align 8
  %cflag88 = alloca i32, align 4
  %iflag = alloca i32, align 4
  %p = alloca i32, align 4
  %opmode = alloca i8, align 1
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  store i8* %argp, i8** %argp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argp.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %ip, metadata !11558, metadata !DIExpression()), !dbg !11559
  call void @llvm.dbg.declare(metadata %struct.tty_port** %port, metadata !11560, metadata !DIExpression()), !dbg !11561
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty, metadata !11562, metadata !DIExpression()), !dbg !11563
  call void @llvm.dbg.declare(metadata i32* %result, metadata !11564, metadata !DIExpression()), !dbg !11565
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11566, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11568, metadata !DIExpression()), !dbg !11569
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11570, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11572, metadata !DIExpression()), !dbg !11573
  store i32 0, i32* %ret, align 4, !dbg !11573
  %0 = load i32, i32* %cmd.addr, align 4, !dbg !11574
  switch i32 %0, label %sw.default [
    i32 1087, label %sw.bb
    i32 1084, label %sw.bb6
    i32 1047, label %sw.bb30
    i32 1089, label %sw.bb35
    i32 1099, label %sw.bb87
  ], !dbg !11575

sw.bb:                                            ; preds = %entry
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @mxser_ioctl_special._rs, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.mxser_ioctl_special, i64 0, i64 0)) #11, !dbg !11576
  %tobool = icmp ne i32 %call, 0, !dbg !11576
  br i1 %tobool, label %if.then, label %if.end, !dbg !11577

if.then:                                          ; preds = %sw.bb
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11552
  %1 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11552
  %2 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11553, !srcloc !10757
  store i64 %2, i64* %pfo_val__.i, align 8, !dbg !11553
  %3 = load i64, i64* %pfo_val__.i, align 8, !dbg !11553
  %4 = inttoptr i64 %3 to %struct.task_struct*, !dbg !11553
  store %struct.task_struct* %4, %struct.task_struct** %tmp.i, align 8, !dbg !11553
  %5 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11553
  store %struct.task_struct* %5, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11548
  %6 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11548
  store %struct.task_struct* %6, %struct.task_struct** %tmp1.i, align 8, !dbg !11548
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11548
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %7, i32 0, i32 68, !dbg !11576
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !11576
  %8 = load i32, i32* %cmd.addr, align 4, !dbg !11576
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay, i32 %8) #12, !dbg !11576
  br label %if.end, !dbg !11576

if.end:                                           ; preds = %if.then, %sw.bb
  call void @might_fault() #11, !dbg !11578
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !11580, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !11583, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !11584, metadata !DIExpression()), !dbg !11582
  %9 = load i8*, i8** %argp.addr, align 8, !dbg !11582
  %10 = bitcast i8* %9 to i32*, !dbg !11582
  %11 = bitcast i32* %10 to i8*, !dbg !11582
  store i8* %11, i8** %__ptr_pu, align 8, !dbg !11582
  %12 = load i32, i32* @ttymajor, align 4, !dbg !11582
  store i32 %12, i32* %__val_pu, align 4, !dbg !11582
  %13 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !11582
  %14 = load i8*, i8** %__ptr_pu, align 8, !dbg !11582
  %15 = load i32, i32* %__val_pu, align 4, !dbg !11582
  %16 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %14, i32 %15, i64 4, i64 %13) #7, !dbg !11582, !srcloc !11585
  %asmresult = extractvalue { i8*, i64 } %16, 0, !dbg !11582
  %asmresult3 = extractvalue { i8*, i64 } %16, 1, !dbg !11582
  %17 = ptrtoint i8* %asmresult to i64, !dbg !11582
  %18 = trunc i64 %17 to i32, !dbg !11582
  store i32 %18, i32* %__ret_pu, align 4, !dbg !11582
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult3), !dbg !11582
  %19 = load i32, i32* %__ret_pu, align 4, !dbg !11582
  %conv = sext i32 %19 to i64, !dbg !11582
  store i64 %conv, i64* %tmp4, align 8, !dbg !11582
  %20 = load i64, i64* %tmp4, align 8, !dbg !11582
  store i64 %20, i64* %tmp, align 8, !dbg !11578
  %21 = load i64, i64* %tmp, align 8, !dbg !11578
  %conv5 = trunc i64 %21 to i32, !dbg !11586
  store i32 %conv5, i32* %retval, align 4, !dbg !11587
  br label %return, !dbg !11587

sw.bb6:                                           ; preds = %entry
  store i32 0, i32* %result, align 4, !dbg !11588
  store i32 0, i32* %i, align 4, !dbg !11589
  br label %for.cond, !dbg !11591

for.cond:                                         ; preds = %for.inc17, %sw.bb6
  %22 = load i32, i32* %i, align 4, !dbg !11592
  %cmp = icmp ult i32 %22, 4, !dbg !11594
  br i1 %cmp, label %for.body, label %for.end19, !dbg !11595

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !11596
  br label %for.cond8, !dbg !11598

for.cond8:                                        ; preds = %for.inc, %for.body
  %23 = load i32, i32* %j, align 4, !dbg !11599
  %cmp9 = icmp ult i32 %23, 8, !dbg !11601
  br i1 %cmp9, label %for.body11, label %for.end, !dbg !11602

for.body11:                                       ; preds = %for.cond8
  %24 = load i32, i32* %i, align 4, !dbg !11603
  %idxprom = zext i32 %24 to i64, !dbg !11605
  %arrayidx = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom, !dbg !11605
  %ports = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx, i32 0, i32 7, !dbg !11606
  %25 = load i32, i32* %j, align 4, !dbg !11607
  %idxprom12 = zext i32 %25 to i64, !dbg !11605
  %arrayidx13 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports, i64 0, i64 %idxprom12, !dbg !11605
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %arrayidx13, i32 0, i32 2, !dbg !11608
  %26 = load i64, i64* %ioaddr, align 8, !dbg !11608
  %tobool14 = icmp ne i64 %26, 0, !dbg !11605
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11609

if.then15:                                        ; preds = %for.body11
  %27 = load i32, i32* %i, align 4, !dbg !11610
  %shl = shl i32 1, %27, !dbg !11611
  %28 = load i32, i32* %result, align 4, !dbg !11612
  %or = or i32 %28, %shl, !dbg !11612
  store i32 %or, i32* %result, align 4, !dbg !11612
  br label %if.end16, !dbg !11613

if.end16:                                         ; preds = %if.then15, %for.body11
  br label %for.inc, !dbg !11608

for.inc:                                          ; preds = %if.end16
  %29 = load i32, i32* %j, align 4, !dbg !11614
  %inc = add i32 %29, 1, !dbg !11614
  store i32 %inc, i32* %j, align 4, !dbg !11614
  br label %for.cond8, !dbg !11615, !llvm.loop !11616

for.end:                                          ; preds = %for.cond8
  br label %for.inc17, !dbg !11617

for.inc17:                                        ; preds = %for.end
  %30 = load i32, i32* %i, align 4, !dbg !11618
  %inc18 = add i32 %30, 1, !dbg !11618
  store i32 %inc18, i32* %i, align 4, !dbg !11618
  br label %for.cond, !dbg !11619, !llvm.loop !11620

for.end19:                                        ; preds = %for.cond
  call void @might_fault() #11, !dbg !11622
  call void @llvm.dbg.declare(metadata i32* %__ret_pu21, metadata !11624, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu22, metadata !11627, metadata !DIExpression()), !dbg !11626
  call void @llvm.dbg.declare(metadata i64* %__val_pu23, metadata !11628, metadata !DIExpression()), !dbg !11626
  %31 = load i8*, i8** %argp.addr, align 8, !dbg !11626
  %32 = bitcast i8* %31 to i64*, !dbg !11626
  %33 = bitcast i64* %32 to i8*, !dbg !11626
  store i8* %33, i8** %__ptr_pu22, align 8, !dbg !11626
  %34 = load i32, i32* %result, align 4, !dbg !11626
  %conv24 = sext i32 %34 to i64, !dbg !11626
  store i64 %conv24, i64* %__val_pu23, align 8, !dbg !11626
  %35 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !11626
  %36 = load i8*, i8** %__ptr_pu22, align 8, !dbg !11626
  %37 = load i64, i64* %__val_pu23, align 8, !dbg !11626
  %38 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %36, i64 %37, i64 8, i64 %35) #7, !dbg !11626, !srcloc !11629
  %asmresult25 = extractvalue { i8*, i64 } %38, 0, !dbg !11626
  %asmresult26 = extractvalue { i8*, i64 } %38, 1, !dbg !11626
  %39 = ptrtoint i8* %asmresult25 to i64, !dbg !11626
  %40 = trunc i64 %39 to i32, !dbg !11626
  store i32 %40, i32* %__ret_pu21, align 4, !dbg !11626
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult26), !dbg !11626
  %41 = load i32, i32* %__ret_pu21, align 4, !dbg !11626
  %conv28 = sext i32 %41 to i64, !dbg !11626
  store i64 %conv28, i64* %tmp27, align 8, !dbg !11626
  %42 = load i64, i64* %tmp27, align 8, !dbg !11626
  store i64 %42, i64* %tmp20, align 8, !dbg !11622
  %43 = load i64, i64* %tmp20, align 8, !dbg !11622
  %conv29 = trunc i64 %43 to i32, !dbg !11630
  store i32 %conv29, i32* %retval, align 4, !dbg !11631
  br label %return, !dbg !11631

sw.bb30:                                          ; preds = %entry
  %44 = load i8*, i8** %argp.addr, align 8, !dbg !11632
  store i8* %44, i8** %to.addr.i, align 8
  store i8* bitcast (%struct.mxser_log* @mxvar_log to i8*), i8** %from.addr.i, align 8
  store i64 520, i64* %n.addr.i, align 8
  %45 = load i8*, i8** %from.addr.i, align 8, !dbg !11633
  %46 = load i64, i64* %n.addr.i, align 8, !dbg !11633
  store i8* %45, i8** %addr.addr.i.i, align 8
  store i64 %46, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11543
  %47 = load i32, i32* %sz.i.i, align 4, !dbg !11634
  %cmp.i.i = icmp sge i32 %47, 0, !dbg !11634
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !11634

land.rhs.i.i:                                     ; preds = %sw.bb30
  %48 = load i32, i32* %sz.i.i, align 4, !dbg !11634
  %conv.i.i = sext i32 %48 to i64, !dbg !11634
  %49 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11634
  %cmp1.i.i = icmp ult i64 %conv.i.i, %49, !dbg !11634
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb30
  %50 = phi i1 [ false, %sw.bb30 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11635
  %lnot.i.i = xor i1 %50, true, !dbg !11634
  %lnot.ext.i.i = zext i1 %50 to i32, !dbg !11634
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11634
  br i1 %50, label %if.then.i.i, label %if.end10.i.i, !dbg !11636

if.then.i.i:                                      ; preds = %land.end.i.i
  %51 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11637
  %52 = call i1 @llvm.is.constant.i64(i64 %51) #7, !dbg !11638
  br i1 %52, label %if.else.i.i, label %if.then5.i.i, !dbg !11639

if.then5.i.i:                                     ; preds = %if.then.i.i
  %53 = load i32, i32* %sz.i.i, align 4, !dbg !11640
  %54 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11641
  call void @copy_overflow(i32 %53, i64 %54) #13, !dbg !11642
  br label %if.end9.i.i, !dbg !11642

if.else.i.i:                                      ; preds = %if.then.i.i
  %55 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11643
  %tobool6.i.i = trunc i8 %55 to i1, !dbg !11643
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11644

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !11645
  br label %if.end.i.i, !dbg !11645

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !11646
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11647
  br label %check_copy_size.exit.i, !dbg !11647

if.end10.i.i:                                     ; preds = %land.end.i.i
  %56 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11544
  %cmp11.i.i = icmp ugt i64 %56, 2147483647, !dbg !11544
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11544
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11544
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11544
  %57 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11648
  %tobool17.i.i = icmp ne i32 %57, 0, !dbg !11648
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11648
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11648
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11648
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11544

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !11649, !srcloc !9994
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !11650, !srcloc !9997
  br label %if.end31.i.i, !dbg !11651

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %58 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11544
  %tobool32.i.i = icmp ne i32 %58, 0, !dbg !11544
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11544
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11544
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11544
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11648
  %59 = load i64, i64* %tmp.i.i, align 8, !dbg !11544
  %tobool38.i.i = icmp ne i64 %59, 0, !dbg !11652
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11653

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !11654
  br label %check_copy_size.exit.i, !dbg !11654

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %60 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11655
  %61 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11656
  %62 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11657
  %tobool41.i.i = trunc i8 %62 to i1, !dbg !11657
  call void @check_object_size(i8* %60, i64 %61, i1 zeroext %tobool41.i.i) #13, !dbg !11658
  store i1 true, i1* %retval.i.i, align 1, !dbg !11659
  br label %check_copy_size.exit.i, !dbg !11659

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %63 = load i1, i1* %retval.i.i, align 1, !dbg !11660
  %lnot.i = xor i1 %63, true, !dbg !11633
  %lnot.ext.i = zext i1 %63 to i32, !dbg !11633
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11633
  br i1 %63, label %if.then.i, label %copy_to_user.exit, !dbg !11661

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %64 = load i8*, i8** %to.addr.i, align 8, !dbg !11662
  %65 = load i8*, i8** %from.addr.i, align 8, !dbg !11663
  %66 = load i64, i64* %n.addr.i, align 8, !dbg !11664
  %call2.i = call i64 @_copy_to_user(i8* %64, i8* %65, i64 %66) #13, !dbg !11665
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11666
  br label %copy_to_user.exit, !dbg !11667

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %67 = load i64, i64* %n.addr.i, align 8, !dbg !11668
  %tobool32 = icmp ne i64 %67, 0, !dbg !11669
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11670

if.then33:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !11671
  br label %if.end34, !dbg !11672

if.end34:                                         ; preds = %if.then33, %copy_to_user.exit
  %68 = load i32, i32* %ret, align 4, !dbg !11673
  store i32 %68, i32* %retval, align 4, !dbg !11674
  br label %return, !dbg !11674

sw.bb35:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mxser_mstatus* %ms, metadata !11675, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.mxser_mstatus** %msu, metadata !11684, metadata !DIExpression()), !dbg !11686
  %69 = load i8*, i8** %argp.addr, align 8, !dbg !11687
  %70 = bitcast i8* %69 to %struct.mxser_mstatus*, !dbg !11687
  store %struct.mxser_mstatus* %70, %struct.mxser_mstatus** %msu, align 8, !dbg !11686
  store i32 0, i32* %i, align 4, !dbg !11688
  br label %for.cond36, !dbg !11689

for.cond36:                                       ; preds = %for.inc84, %sw.bb35
  %71 = load i32, i32* %i, align 4, !dbg !11690
  %cmp37 = icmp ult i32 %71, 4, !dbg !11691
  br i1 %cmp37, label %for.body39, label %for.end86, !dbg !11692

for.body39:                                       ; preds = %for.cond36
  store i32 0, i32* %j, align 4, !dbg !11693
  br label %for.cond40, !dbg !11694

for.cond40:                                       ; preds = %for.inc81, %for.body39
  %72 = load i32, i32* %j, align 4, !dbg !11695
  %cmp41 = icmp ult i32 %72, 8, !dbg !11696
  br i1 %cmp41, label %for.body43, label %for.end83, !dbg !11697

for.body43:                                       ; preds = %for.cond40
  %73 = load i32, i32* %i, align 4, !dbg !11698
  %idxprom44 = zext i32 %73 to i64, !dbg !11699
  %arrayidx45 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom44, !dbg !11699
  %ports46 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx45, i32 0, i32 7, !dbg !11700
  %74 = load i32, i32* %j, align 4, !dbg !11701
  %idxprom47 = zext i32 %74 to i64, !dbg !11699
  %arrayidx48 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports46, i64 0, i64 %idxprom47, !dbg !11699
  store %struct.mxser_port* %arrayidx48, %struct.mxser_port** %ip, align 8, !dbg !11702
  %75 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11703
  %port49 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %75, i32 0, i32 0, !dbg !11704
  store %struct.tty_port* %port49, %struct.tty_port** %port, align 8, !dbg !11705
  %76 = bitcast %struct.mxser_mstatus* %ms to i8*, !dbg !11706
  call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 20, i1 false), !dbg !11706
  %77 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11707
  %mutex = getelementptr inbounds %struct.tty_port, %struct.tty_port* %77, i32 0, i32 13, !dbg !11708
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !11709
  %78 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11710
  %ioaddr50 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %78, i32 0, i32 2, !dbg !11712
  %79 = load i64, i64* %ioaddr50, align 8, !dbg !11712
  %tobool51 = icmp ne i64 %79, 0, !dbg !11710
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !11713

if.then52:                                        ; preds = %for.body43
  br label %copy, !dbg !11714

if.end53:                                         ; preds = %for.body43
  %80 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11715
  %call54 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %80) #11, !dbg !11716
  store %struct.tty_struct* %call54, %struct.tty_struct** %tty, align 8, !dbg !11717
  %81 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11718
  %tobool55 = icmp ne %struct.tty_struct* %81, null, !dbg !11718
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !11720

if.then56:                                        ; preds = %if.end53
  %82 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11721
  %normal_termios = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %82, i32 0, i32 26, !dbg !11722
  %c_cflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %normal_termios, i32 0, i32 2, !dbg !11723
  %83 = load i32, i32* %c_cflag, align 4, !dbg !11723
  %cflag = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %ms, i32 0, i32 0, !dbg !11724
  store i32 %83, i32* %cflag, align 4, !dbg !11725
  br label %if.end59, !dbg !11726

if.else:                                          ; preds = %if.end53
  %84 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11727
  %termios = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %84, i32 0, i32 15, !dbg !11728
  %c_cflag57 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios, i32 0, i32 2, !dbg !11729
  %85 = load i32, i32* %c_cflag57, align 8, !dbg !11729
  %cflag58 = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %ms, i32 0, i32 0, !dbg !11730
  store i32 %85, i32* %cflag58, align 4, !dbg !11731
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.then56
  %86 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11732
  call void @tty_kref_put(%struct.tty_struct* %86) #11, !dbg !11733
  %87 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11734
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %87, i32 0, i32 28, !dbg !11735
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !11736
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11737, !srcloc !9691
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11738
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !11738
  %rlock.i = bitcast %union.anon.2* %89 to %struct.raw_spinlock*, !dbg !11738
  %90 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11739
  %ioaddr60 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %90, i32 0, i32 2, !dbg !11740
  %91 = load i64, i64* %ioaddr60, align 8, !dbg !11740
  %add = add i64 %91, 6, !dbg !11741
  %conv61 = trunc i64 %add to i32, !dbg !11739
  %call62 = call zeroext i8 @inb(i32 %conv61) #11, !dbg !11742
  %conv63 = zext i8 %call62 to i32, !dbg !11742
  store i32 %conv63, i32* %status, align 4, !dbg !11743
  %92 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11744
  %slock64 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %92, i32 0, i32 28, !dbg !11745
  store %struct.spinlock* %slock64, %struct.spinlock** %lock.addr.i249, align 8
  call void @arch_local_irq_enable() #13, !dbg !11746
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11747, !srcloc !9715
  %93 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i249, align 8, !dbg !11748
  %94 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %93, i32 0, i32 0, !dbg !11748
  %rlock.i250 = bitcast %union.anon.2* %94 to %struct.raw_spinlock*, !dbg !11748
  %95 = load i32, i32* %status, align 4, !dbg !11749
  %and = and i32 %95, 128, !dbg !11751
  %tobool65 = icmp ne i32 %and, 0, !dbg !11751
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !11752

if.then66:                                        ; preds = %if.end59
  %dcd = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %ms, i32 0, i32 4, !dbg !11753
  store i32 1, i32* %dcd, align 4, !dbg !11754
  br label %if.end67, !dbg !11755

if.end67:                                         ; preds = %if.then66, %if.end59
  %96 = load i32, i32* %status, align 4, !dbg !11756
  %and68 = and i32 %96, 32, !dbg !11758
  %tobool69 = icmp ne i32 %and68, 0, !dbg !11758
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !11759

if.then70:                                        ; preds = %if.end67
  %dsr = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %ms, i32 0, i32 2, !dbg !11760
  store i32 1, i32* %dsr, align 4, !dbg !11761
  br label %if.end71, !dbg !11762

if.end71:                                         ; preds = %if.then70, %if.end67
  %97 = load i32, i32* %status, align 4, !dbg !11763
  %and72 = and i32 %97, 16, !dbg !11765
  %tobool73 = icmp ne i32 %and72, 0, !dbg !11765
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !11766

if.then74:                                        ; preds = %if.end71
  %cts = getelementptr inbounds %struct.mxser_mstatus, %struct.mxser_mstatus* %ms, i32 0, i32 1, !dbg !11767
  store i32 1, i32* %cts, align 4, !dbg !11768
  br label %if.end75, !dbg !11769

if.end75:                                         ; preds = %if.then74, %if.end71
  br label %copy, !dbg !11770

copy:                                             ; preds = %if.end75, %if.then52
  call void @llvm.dbg.label(metadata !11771), !dbg !11772
  %98 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11773
  %mutex76 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %98, i32 0, i32 13, !dbg !11774
  call void @mutex_unlock(%struct.mutex* %mutex76) #11, !dbg !11775
  %99 = load %struct.mxser_mstatus*, %struct.mxser_mstatus** %msu, align 8, !dbg !11776
  %100 = bitcast %struct.mxser_mstatus* %99 to i8*, !dbg !11776
  %101 = bitcast %struct.mxser_mstatus* %ms to i8*, !dbg !11777
  store i8* %100, i8** %to.addr.i258, align 8
  store i8* %101, i8** %from.addr.i259, align 8
  store i64 20, i64* %n.addr.i260, align 8
  %102 = load i8*, i8** %from.addr.i259, align 8, !dbg !11778
  %103 = load i64, i64* %n.addr.i260, align 8, !dbg !11778
  store i8* %102, i8** %addr.addr.i.i252, align 8
  store i64 %103, i64* %bytes.addr.i.i253, align 8
  store i8 1, i8* %is_source.addr.i.i254, align 1
  store i32 -1, i32* %sz.i.i255, align 4, !dbg !11528
  %104 = load i32, i32* %sz.i.i255, align 4, !dbg !11779
  %cmp.i.i261 = icmp sge i32 %104, 0, !dbg !11779
  br i1 %cmp.i.i261, label %land.rhs.i.i264, label %land.end.i.i268, !dbg !11779

land.rhs.i.i264:                                  ; preds = %copy
  %105 = load i32, i32* %sz.i.i255, align 4, !dbg !11779
  %conv.i.i262 = sext i32 %105 to i64, !dbg !11779
  %106 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !11779
  %cmp1.i.i263 = icmp ult i64 %conv.i.i262, %106, !dbg !11779
  br label %land.end.i.i268

land.end.i.i268:                                  ; preds = %land.rhs.i.i264, %copy
  %107 = phi i1 [ false, %copy ], [ %cmp1.i.i263, %land.rhs.i.i264 ], !dbg !11780
  %lnot.i.i265 = xor i1 %107, true, !dbg !11779
  %lnot.ext.i.i266 = zext i1 %107 to i32, !dbg !11779
  %conv4.i.i267 = sext i32 %lnot.ext.i.i266 to i64, !dbg !11779
  br i1 %107, label %if.then.i.i269, label %if.end10.i.i284, !dbg !11781

if.then.i.i269:                                   ; preds = %land.end.i.i268
  %108 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !11782
  %109 = call i1 @llvm.is.constant.i64(i64 %108) #7, !dbg !11783
  br i1 %109, label %if.else.i.i272, label %if.then5.i.i270, !dbg !11784

if.then5.i.i270:                                  ; preds = %if.then.i.i269
  %110 = load i32, i32* %sz.i.i255, align 4, !dbg !11785
  %111 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !11786
  call void @copy_overflow(i32 %110, i64 %111) #13, !dbg !11787
  br label %if.end9.i.i276, !dbg !11787

if.else.i.i272:                                   ; preds = %if.then.i.i269
  %112 = load i8, i8* %is_source.addr.i.i254, align 1, !dbg !11788
  %tobool6.i.i271 = trunc i8 %112 to i1, !dbg !11788
  br i1 %tobool6.i.i271, label %if.then7.i.i273, label %if.else8.i.i274, !dbg !11789

if.then7.i.i273:                                  ; preds = %if.else.i.i272
  call void @__bad_copy_from() #13, !dbg !11790
  br label %if.end.i.i275, !dbg !11790

if.else8.i.i274:                                  ; preds = %if.else.i.i272
  call void @__bad_copy_to() #13, !dbg !11791
  br label %if.end.i.i275

if.end.i.i275:                                    ; preds = %if.else8.i.i274, %if.then7.i.i273
  br label %if.end9.i.i276

if.end9.i.i276:                                   ; preds = %if.end.i.i275, %if.then5.i.i270
  store i1 false, i1* %retval.i.i251, align 1, !dbg !11792
  br label %check_copy_size.exit.i298, !dbg !11792

if.end10.i.i284:                                  ; preds = %land.end.i.i268
  %113 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !11529
  %cmp11.i.i277 = icmp ugt i64 %113, 2147483647, !dbg !11529
  %lnot13.i.i278 = xor i1 %cmp11.i.i277, true, !dbg !11529
  %lnot.ext16.i.i279 = zext i1 %cmp11.i.i277 to i32, !dbg !11529
  store i32 %lnot.ext16.i.i279, i32* %__ret_warn_on.i.i256, align 4, !dbg !11529
  %114 = load i32, i32* %__ret_warn_on.i.i256, align 4, !dbg !11793
  %tobool17.i.i280 = icmp ne i32 %114, 0, !dbg !11793
  %lnot18.i.i281 = xor i1 %tobool17.i.i280, true, !dbg !11793
  %lnot.ext21.i.i282 = zext i1 %tobool17.i.i280 to i32, !dbg !11793
  %conv22.i.i283 = sext i32 %lnot.ext21.i.i282 to i64, !dbg !11793
  br i1 %tobool17.i.i280, label %if.then24.i.i285, label %if.end31.i.i291, !dbg !11529

if.then24.i.i285:                                 ; preds = %if.end10.i.i284
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !11794, !srcloc !9994
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !11795, !srcloc !9997
  br label %if.end31.i.i291, !dbg !11796

if.end31.i.i291:                                  ; preds = %if.then24.i.i285, %if.end10.i.i284
  %115 = load i32, i32* %__ret_warn_on.i.i256, align 4, !dbg !11529
  %tobool32.i.i286 = icmp ne i32 %115, 0, !dbg !11529
  %lnot33.i.i287 = xor i1 %tobool32.i.i286, true, !dbg !11529
  %lnot.ext36.i.i288 = zext i1 %tobool32.i.i286 to i32, !dbg !11529
  %conv37.i.i289 = sext i32 %lnot.ext36.i.i288 to i64, !dbg !11529
  store i64 %conv37.i.i289, i64* %tmp.i.i257, align 8, !dbg !11793
  %116 = load i64, i64* %tmp.i.i257, align 8, !dbg !11529
  %tobool38.i.i290 = icmp ne i64 %116, 0, !dbg !11797
  br i1 %tobool38.i.i290, label %if.then39.i.i292, label %if.end40.i.i294, !dbg !11798

if.then39.i.i292:                                 ; preds = %if.end31.i.i291
  store i1 false, i1* %retval.i.i251, align 1, !dbg !11799
  br label %check_copy_size.exit.i298, !dbg !11799

if.end40.i.i294:                                  ; preds = %if.end31.i.i291
  %117 = load i8*, i8** %addr.addr.i.i252, align 8, !dbg !11800
  %118 = load i64, i64* %bytes.addr.i.i253, align 8, !dbg !11801
  %119 = load i8, i8* %is_source.addr.i.i254, align 1, !dbg !11802
  %tobool41.i.i293 = trunc i8 %119 to i1, !dbg !11802
  call void @check_object_size(i8* %117, i64 %118, i1 zeroext %tobool41.i.i293) #13, !dbg !11803
  store i1 true, i1* %retval.i.i251, align 1, !dbg !11804
  br label %check_copy_size.exit.i298, !dbg !11804

check_copy_size.exit.i298:                        ; preds = %if.end40.i.i294, %if.then39.i.i292, %if.end9.i.i276
  %120 = load i1, i1* %retval.i.i251, align 1, !dbg !11805
  %lnot.i295 = xor i1 %120, true, !dbg !11778
  %lnot.ext.i296 = zext i1 %120 to i32, !dbg !11778
  %conv.i297 = sext i32 %lnot.ext.i296 to i64, !dbg !11778
  br i1 %120, label %if.then.i300, label %copy_to_user.exit301, !dbg !11806

if.then.i300:                                     ; preds = %check_copy_size.exit.i298
  %121 = load i8*, i8** %to.addr.i258, align 8, !dbg !11807
  %122 = load i8*, i8** %from.addr.i259, align 8, !dbg !11808
  %123 = load i64, i64* %n.addr.i260, align 8, !dbg !11809
  %call2.i299 = call i64 @_copy_to_user(i8* %121, i8* %122, i64 %123) #13, !dbg !11810
  store i64 %call2.i299, i64* %n.addr.i260, align 8, !dbg !11811
  br label %copy_to_user.exit301, !dbg !11812

copy_to_user.exit301:                             ; preds = %check_copy_size.exit.i298, %if.then.i300
  %124 = load i64, i64* %n.addr.i260, align 8, !dbg !11813
  %tobool78 = icmp ne i64 %124, 0, !dbg !11814
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !11815

if.then79:                                        ; preds = %copy_to_user.exit301
  store i32 -14, i32* %retval, align 4, !dbg !11816
  br label %return, !dbg !11816

if.end80:                                         ; preds = %copy_to_user.exit301
  %125 = load %struct.mxser_mstatus*, %struct.mxser_mstatus** %msu, align 8, !dbg !11817
  %incdec.ptr = getelementptr %struct.mxser_mstatus, %struct.mxser_mstatus* %125, i32 1, !dbg !11817
  store %struct.mxser_mstatus* %incdec.ptr, %struct.mxser_mstatus** %msu, align 8, !dbg !11817
  br label %for.inc81, !dbg !11818

for.inc81:                                        ; preds = %if.end80
  %126 = load i32, i32* %j, align 4, !dbg !11819
  %inc82 = add i32 %126, 1, !dbg !11819
  store i32 %inc82, i32* %j, align 4, !dbg !11819
  br label %for.cond40, !dbg !11820, !llvm.loop !11821

for.end83:                                        ; preds = %for.cond40
  br label %for.inc84, !dbg !11822

for.inc84:                                        ; preds = %for.end83
  %127 = load i32, i32* %i, align 4, !dbg !11823
  %inc85 = add i32 %127, 1, !dbg !11823
  store i32 %inc85, i32* %i, align 4, !dbg !11823
  br label %for.cond36, !dbg !11824, !llvm.loop !11825

for.end86:                                        ; preds = %for.cond36
  store i32 0, i32* %retval, align 4, !dbg !11827
  br label %return, !dbg !11827

sw.bb87:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.mxser_mon_ext** %me, metadata !11828, metadata !DIExpression()), !dbg !11846
  call void @llvm.dbg.declare(metadata i32* %cflag88, metadata !11847, metadata !DIExpression()), !dbg !11848
  call void @llvm.dbg.declare(metadata i32* %iflag, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata i32* %p, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata i8* %opmode, metadata !11853, metadata !DIExpression()), !dbg !11854
  %call89 = call i8* @kzalloc(i64 2176, i32 3264) #11, !dbg !11855
  %128 = bitcast i8* %call89 to %struct.mxser_mon_ext*, !dbg !11855
  store %struct.mxser_mon_ext* %128, %struct.mxser_mon_ext** %me, align 8, !dbg !11856
  %129 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11857
  %tobool90 = icmp ne %struct.mxser_mon_ext* %129, null, !dbg !11857
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !11859

if.then91:                                        ; preds = %sw.bb87
  store i32 -12, i32* %retval, align 4, !dbg !11860
  br label %return, !dbg !11860

if.end92:                                         ; preds = %sw.bb87
  store i32 0, i32* %i, align 4, !dbg !11861
  store i32 0, i32* %p, align 4, !dbg !11862
  br label %for.cond93, !dbg !11863

for.cond93:                                       ; preds = %for.inc242, %if.end92
  %130 = load i32, i32* %i, align 4, !dbg !11864
  %cmp94 = icmp ult i32 %130, 4, !dbg !11865
  br i1 %cmp94, label %for.body96, label %for.end244, !dbg !11866

for.body96:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4, !dbg !11867
  br label %for.cond97, !dbg !11868

for.cond97:                                       ; preds = %for.inc238, %for.body96
  %131 = load i32, i32* %j, align 4, !dbg !11869
  %cmp98 = icmp ult i32 %131, 8, !dbg !11870
  br i1 %cmp98, label %for.body100, label %for.end241, !dbg !11871

for.body100:                                      ; preds = %for.cond97
  %132 = load i32, i32* %p, align 4, !dbg !11872
  %conv101 = zext i32 %132 to i64, !dbg !11872
  %cmp102 = icmp uge i64 %conv101, 32, !dbg !11874
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !11875

if.then104:                                       ; preds = %for.body100
  store i32 4, i32* %i, align 4, !dbg !11876
  br label %for.end241, !dbg !11878

if.end105:                                        ; preds = %for.body100
  %133 = load i32, i32* %i, align 4, !dbg !11879
  %idxprom106 = zext i32 %133 to i64, !dbg !11880
  %arrayidx107 = getelementptr [4 x %struct.mxser_board], [4 x %struct.mxser_board]* @mxser_boards, i64 0, i64 %idxprom106, !dbg !11880
  %ports108 = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %arrayidx107, i32 0, i32 7, !dbg !11881
  %134 = load i32, i32* %j, align 4, !dbg !11882
  %idxprom109 = zext i32 %134 to i64, !dbg !11880
  %arrayidx110 = getelementptr [8 x %struct.mxser_port], [8 x %struct.mxser_port]* %ports108, i64 0, i64 %idxprom109, !dbg !11880
  store %struct.mxser_port* %arrayidx110, %struct.mxser_port** %ip, align 8, !dbg !11883
  %135 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11884
  %port111 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %135, i32 0, i32 0, !dbg !11885
  store %struct.tty_port* %port111, %struct.tty_port** %port, align 8, !dbg !11886
  %136 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11887
  %mutex112 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %136, i32 0, i32 13, !dbg !11888
  call void @mutex_lock(%struct.mutex* %mutex112) #11, !dbg !11889
  %137 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11890
  %ioaddr113 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %137, i32 0, i32 2, !dbg !11892
  %138 = load i64, i64* %ioaddr113, align 8, !dbg !11892
  %tobool114 = icmp ne i64 %138, 0, !dbg !11890
  br i1 %tobool114, label %if.end117, label %if.then115, !dbg !11893

if.then115:                                       ; preds = %if.end105
  %139 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !11894
  %mutex116 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %139, i32 0, i32 13, !dbg !11896
  call void @mutex_unlock(%struct.mutex* %mutex116) #11, !dbg !11897
  br label %for.inc238, !dbg !11898

if.end117:                                        ; preds = %if.end105
  %140 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11899
  %slock118 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %140, i32 0, i32 28, !dbg !11900
  store %struct.spinlock* %slock118, %struct.spinlock** %lock.addr.i302, align 8
  call void @arch_local_irq_disable() #13, !dbg !11901
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11902, !srcloc !9691
  %141 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i302, align 8, !dbg !11903
  %142 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %141, i32 0, i32 0, !dbg !11903
  %rlock.i303 = bitcast %union.anon.2* %142 to %struct.raw_spinlock*, !dbg !11903
  %143 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11904
  %ioaddr119 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %143, i32 0, i32 2, !dbg !11905
  %144 = load i64, i64* %ioaddr119, align 8, !dbg !11905
  %conv120 = trunc i64 %144 to i32, !dbg !11904
  %145 = load i32, i32* %p, align 4, !dbg !11906
  %call121 = call zeroext i8 @mxser_get_msr(i32 %conv120, i32 0, i32 %145) #11, !dbg !11907
  %conv122 = zext i8 %call121 to i32, !dbg !11907
  store i32 %conv122, i32* %status, align 4, !dbg !11908
  %146 = load i32, i32* %status, align 4, !dbg !11909
  %and123 = and i32 %146, 4, !dbg !11911
  %tobool124 = icmp ne i32 %and123, 0, !dbg !11911
  br i1 %tobool124, label %if.then125, label %if.end127, !dbg !11912

if.then125:                                       ; preds = %if.end117
  %147 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11913
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %147, i32 0, i32 17, !dbg !11914
  %rng = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount, i32 0, i32 2, !dbg !11915
  %148 = load i32, i32* %rng, align 8, !dbg !11916
  %inc126 = add i32 %148, 1, !dbg !11916
  store i32 %inc126, i32* %rng, align 8, !dbg !11916
  br label %if.end127, !dbg !11913

if.end127:                                        ; preds = %if.then125, %if.end117
  %149 = load i32, i32* %status, align 4, !dbg !11917
  %and128 = and i32 %149, 2, !dbg !11919
  %tobool129 = icmp ne i32 %and128, 0, !dbg !11919
  br i1 %tobool129, label %if.then130, label %if.end134, !dbg !11920

if.then130:                                       ; preds = %if.end127
  %150 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11921
  %icount131 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %150, i32 0, i32 17, !dbg !11922
  %dsr132 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount131, i32 0, i32 1, !dbg !11923
  %151 = load i32, i32* %dsr132, align 4, !dbg !11924
  %inc133 = add i32 %151, 1, !dbg !11924
  store i32 %inc133, i32* %dsr132, align 4, !dbg !11924
  br label %if.end134, !dbg !11921

if.end134:                                        ; preds = %if.then130, %if.end127
  %152 = load i32, i32* %status, align 4, !dbg !11925
  %and135 = and i32 %152, 8, !dbg !11927
  %tobool136 = icmp ne i32 %and135, 0, !dbg !11927
  br i1 %tobool136, label %if.then137, label %if.end141, !dbg !11928

if.then137:                                       ; preds = %if.end134
  %153 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11929
  %icount138 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %153, i32 0, i32 17, !dbg !11930
  %dcd139 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount138, i32 0, i32 3, !dbg !11931
  %154 = load i32, i32* %dcd139, align 4, !dbg !11932
  %inc140 = add i32 %154, 1, !dbg !11932
  store i32 %inc140, i32* %dcd139, align 4, !dbg !11932
  br label %if.end141, !dbg !11929

if.end141:                                        ; preds = %if.then137, %if.end134
  %155 = load i32, i32* %status, align 4, !dbg !11933
  %and142 = and i32 %155, 1, !dbg !11935
  %tobool143 = icmp ne i32 %and142, 0, !dbg !11935
  br i1 %tobool143, label %if.then144, label %if.end148, !dbg !11936

if.then144:                                       ; preds = %if.end141
  %156 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11937
  %icount145 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %156, i32 0, i32 17, !dbg !11938
  %cts146 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %icount145, i32 0, i32 0, !dbg !11939
  %157 = load i32, i32* %cts146, align 8, !dbg !11940
  %inc147 = add i32 %157, 1, !dbg !11940
  store i32 %inc147, i32* %cts146, align 8, !dbg !11940
  br label %if.end148, !dbg !11937

if.end148:                                        ; preds = %if.then144, %if.end141
  %158 = load i32, i32* %status, align 4, !dbg !11941
  %159 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11942
  %mon_data = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %159, i32 0, i32 27, !dbg !11943
  %modem_status = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data, i32 0, i32 4, !dbg !11944
  store i32 %158, i32* %modem_status, align 8, !dbg !11945
  %160 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11946
  %mon_data149 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %160, i32 0, i32 27, !dbg !11947
  %rxcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data149, i32 0, i32 0, !dbg !11948
  %161 = load i64, i64* %rxcnt, align 8, !dbg !11948
  %162 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11949
  %rx_cnt = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %162, i32 0, i32 0, !dbg !11950
  %163 = load i32, i32* %p, align 4, !dbg !11951
  %idxprom150 = zext i32 %163 to i64, !dbg !11949
  %arrayidx151 = getelementptr [32 x i64], [32 x i64]* %rx_cnt, i64 0, i64 %idxprom150, !dbg !11949
  store i64 %161, i64* %arrayidx151, align 8, !dbg !11952
  %164 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11953
  %mon_data152 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %164, i32 0, i32 27, !dbg !11954
  %txcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data152, i32 0, i32 1, !dbg !11955
  %165 = load i64, i64* %txcnt, align 8, !dbg !11955
  %166 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11956
  %tx_cnt = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %166, i32 0, i32 1, !dbg !11957
  %167 = load i32, i32* %p, align 4, !dbg !11958
  %idxprom153 = zext i32 %167 to i64, !dbg !11956
  %arrayidx154 = getelementptr [32 x i64], [32 x i64]* %tx_cnt, i64 0, i64 %idxprom153, !dbg !11956
  store i64 %165, i64* %arrayidx154, align 8, !dbg !11959
  %168 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11960
  %mon_data155 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %168, i32 0, i32 27, !dbg !11961
  %up_rxcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data155, i32 0, i32 2, !dbg !11962
  %169 = load i64, i64* %up_rxcnt, align 8, !dbg !11962
  %170 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11963
  %up_rxcnt156 = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %170, i32 0, i32 2, !dbg !11964
  %171 = load i32, i32* %p, align 4, !dbg !11965
  %idxprom157 = zext i32 %171 to i64, !dbg !11963
  %arrayidx158 = getelementptr [32 x i64], [32 x i64]* %up_rxcnt156, i64 0, i64 %idxprom157, !dbg !11963
  store i64 %169, i64* %arrayidx158, align 8, !dbg !11966
  %172 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11967
  %mon_data159 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %172, i32 0, i32 27, !dbg !11968
  %up_txcnt = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data159, i32 0, i32 3, !dbg !11969
  %173 = load i64, i64* %up_txcnt, align 8, !dbg !11969
  %174 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11970
  %up_txcnt160 = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %174, i32 0, i32 3, !dbg !11971
  %175 = load i32, i32* %p, align 4, !dbg !11972
  %idxprom161 = zext i32 %175 to i64, !dbg !11970
  %arrayidx162 = getelementptr [32 x i64], [32 x i64]* %up_txcnt160, i64 0, i64 %idxprom161, !dbg !11970
  store i64 %173, i64* %arrayidx162, align 8, !dbg !11973
  %176 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11974
  %mon_data163 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %176, i32 0, i32 27, !dbg !11975
  %modem_status164 = getelementptr inbounds %struct.mxser_mon, %struct.mxser_mon* %mon_data163, i32 0, i32 4, !dbg !11976
  %177 = load i32, i32* %modem_status164, align 8, !dbg !11976
  %178 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !11977
  %modem_status165 = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %178, i32 0, i32 4, !dbg !11978
  %179 = load i32, i32* %p, align 4, !dbg !11979
  %idxprom166 = zext i32 %179 to i64, !dbg !11977
  %arrayidx167 = getelementptr [32 x i32], [32 x i32]* %modem_status165, i64 0, i64 %idxprom166, !dbg !11977
  store i32 %177, i32* %arrayidx167, align 4, !dbg !11980
  %180 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11981
  %slock168 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %180, i32 0, i32 28, !dbg !11982
  store %struct.spinlock* %slock168, %struct.spinlock** %lock.addr.i304, align 8
  call void @arch_local_irq_enable() #13, !dbg !11983
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11984, !srcloc !9715
  %181 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i304, align 8, !dbg !11985
  %182 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %181, i32 0, i32 0, !dbg !11985
  %rlock.i305 = bitcast %union.anon.2* %182 to %struct.raw_spinlock*, !dbg !11985
  %183 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11986
  %port169 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %183, i32 0, i32 0, !dbg !11987
  %call170 = call %struct.tty_struct* @tty_port_tty_get(%struct.tty_port* %port169) #11, !dbg !11988
  store %struct.tty_struct* %call170, %struct.tty_struct** %tty, align 8, !dbg !11989
  %184 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !11990
  %tobool171 = icmp ne %struct.tty_struct* %184, null, !dbg !11990
  br i1 %tobool171, label %if.else181, label %if.then172, !dbg !11992

if.then172:                                       ; preds = %if.end148
  %185 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11993
  %normal_termios173 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %185, i32 0, i32 26, !dbg !11995
  %c_cflag174 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %normal_termios173, i32 0, i32 2, !dbg !11996
  %186 = load i32, i32* %c_cflag174, align 4, !dbg !11996
  store i32 %186, i32* %cflag88, align 4, !dbg !11997
  %187 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !11998
  %normal_termios175 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %187, i32 0, i32 26, !dbg !11999
  %c_iflag = getelementptr inbounds %struct.ktermios, %struct.ktermios* %normal_termios175, i32 0, i32 0, !dbg !12000
  %188 = load i32, i32* %c_iflag, align 4, !dbg !12000
  store i32 %188, i32* %iflag, align 4, !dbg !12001
  %189 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !12002
  %normal_termios176 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %189, i32 0, i32 26, !dbg !12003
  %call177 = call i32 @tty_termios_baud_rate(%struct.ktermios* %normal_termios176) #11, !dbg !12004
  %conv178 = zext i32 %call177 to i64, !dbg !12004
  %190 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12005
  %baudrate = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %190, i32 0, i32 5, !dbg !12006
  %191 = load i32, i32* %p, align 4, !dbg !12007
  %idxprom179 = zext i32 %191 to i64, !dbg !12005
  %arrayidx180 = getelementptr [32 x i64], [32 x i64]* %baudrate, i64 0, i64 %idxprom179, !dbg !12005
  store i64 %conv178, i64* %arrayidx180, align 8, !dbg !12008
  br label %if.end191, !dbg !12009

if.else181:                                       ; preds = %if.end148
  %192 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12010
  %termios182 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %192, i32 0, i32 15, !dbg !12012
  %c_cflag183 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios182, i32 0, i32 2, !dbg !12013
  %193 = load i32, i32* %c_cflag183, align 8, !dbg !12013
  store i32 %193, i32* %cflag88, align 4, !dbg !12014
  %194 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12015
  %termios184 = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %194, i32 0, i32 15, !dbg !12016
  %c_iflag185 = getelementptr inbounds %struct.ktermios, %struct.ktermios* %termios184, i32 0, i32 0, !dbg !12017
  %195 = load i32, i32* %c_iflag185, align 8, !dbg !12017
  store i32 %195, i32* %iflag, align 4, !dbg !12018
  %196 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12019
  %call186 = call i32 @tty_get_baud_rate(%struct.tty_struct* %196) #11, !dbg !12020
  %conv187 = zext i32 %call186 to i64, !dbg !12020
  %197 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12021
  %baudrate188 = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %197, i32 0, i32 5, !dbg !12022
  %198 = load i32, i32* %p, align 4, !dbg !12023
  %idxprom189 = zext i32 %198 to i64, !dbg !12021
  %arrayidx190 = getelementptr [32 x i64], [32 x i64]* %baudrate188, i64 0, i64 %idxprom189, !dbg !12021
  store i64 %conv187, i64* %arrayidx190, align 8, !dbg !12024
  br label %if.end191

if.end191:                                        ; preds = %if.else181, %if.then172
  %199 = load %struct.tty_struct*, %struct.tty_struct** %tty, align 8, !dbg !12025
  call void @tty_kref_put(%struct.tty_struct* %199) #11, !dbg !12026
  %200 = load i32, i32* %cflag88, align 4, !dbg !12027
  %and192 = and i32 %200, 48, !dbg !12028
  %201 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12029
  %databits = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %201, i32 0, i32 6, !dbg !12030
  %202 = load i32, i32* %p, align 4, !dbg !12031
  %idxprom193 = zext i32 %202 to i64, !dbg !12029
  %arrayidx194 = getelementptr [32 x i32], [32 x i32]* %databits, i64 0, i64 %idxprom193, !dbg !12029
  store i32 %and192, i32* %arrayidx194, align 4, !dbg !12032
  %203 = load i32, i32* %cflag88, align 4, !dbg !12033
  %and195 = and i32 %203, 64, !dbg !12034
  %204 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12035
  %stopbits = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %204, i32 0, i32 7, !dbg !12036
  %205 = load i32, i32* %p, align 4, !dbg !12037
  %idxprom196 = zext i32 %205 to i64, !dbg !12035
  %arrayidx197 = getelementptr [32 x i32], [32 x i32]* %stopbits, i64 0, i64 %idxprom196, !dbg !12035
  store i32 %and195, i32* %arrayidx197, align 4, !dbg !12038
  %206 = load i32, i32* %cflag88, align 4, !dbg !12039
  %and198 = and i32 %206, 1073742592, !dbg !12040
  %207 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12041
  %parity = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %207, i32 0, i32 8, !dbg !12042
  %208 = load i32, i32* %p, align 4, !dbg !12043
  %idxprom199 = zext i32 %208 to i64, !dbg !12041
  %arrayidx200 = getelementptr [32 x i32], [32 x i32]* %parity, i64 0, i64 %idxprom199, !dbg !12041
  store i32 %and198, i32* %arrayidx200, align 4, !dbg !12044
  %209 = load i32, i32* %cflag88, align 4, !dbg !12045
  %and201 = and i32 %209, -2147483648, !dbg !12047
  %tobool202 = icmp ne i32 %and201, 0, !dbg !12047
  br i1 %tobool202, label %if.then203, label %if.end207, !dbg !12048

if.then203:                                       ; preds = %if.end191
  %210 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12049
  %flowctrl = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %210, i32 0, i32 9, !dbg !12050
  %211 = load i32, i32* %p, align 4, !dbg !12051
  %idxprom204 = zext i32 %211 to i64, !dbg !12049
  %arrayidx205 = getelementptr [32 x i32], [32 x i32]* %flowctrl, i64 0, i64 %idxprom204, !dbg !12049
  %212 = load i32, i32* %arrayidx205, align 4, !dbg !12052
  %or206 = or i32 %212, 3, !dbg !12052
  store i32 %or206, i32* %arrayidx205, align 4, !dbg !12052
  br label %if.end207, !dbg !12049

if.end207:                                        ; preds = %if.then203, %if.end191
  %213 = load i32, i32* %iflag, align 4, !dbg !12053
  %and208 = and i32 %213, 5120, !dbg !12055
  %tobool209 = icmp ne i32 %and208, 0, !dbg !12055
  br i1 %tobool209, label %if.then210, label %if.end215, !dbg !12056

if.then210:                                       ; preds = %if.end207
  %214 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12057
  %flowctrl211 = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %214, i32 0, i32 9, !dbg !12058
  %215 = load i32, i32* %p, align 4, !dbg !12059
  %idxprom212 = zext i32 %215 to i64, !dbg !12057
  %arrayidx213 = getelementptr [32 x i32], [32 x i32]* %flowctrl211, i64 0, i64 %idxprom212, !dbg !12057
  %216 = load i32, i32* %arrayidx213, align 4, !dbg !12060
  %or214 = or i32 %216, 12, !dbg !12060
  store i32 %or214, i32* %arrayidx213, align 4, !dbg !12060
  br label %if.end215, !dbg !12057

if.end215:                                        ; preds = %if.then210, %if.end207
  %217 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !12061
  %type = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %217, i32 0, i32 9, !dbg !12063
  %218 = load i32, i32* %type, align 4, !dbg !12063
  %cmp216 = icmp eq i32 %218, 4, !dbg !12064
  br i1 %cmp216, label %if.then218, label %if.end221, !dbg !12065

if.then218:                                       ; preds = %if.end215
  %219 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12066
  %fifo = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %219, i32 0, i32 10, !dbg !12067
  %220 = load i32, i32* %p, align 4, !dbg !12068
  %idxprom219 = zext i32 %220 to i64, !dbg !12066
  %arrayidx220 = getelementptr [32 x i32], [32 x i32]* %fifo, i64 0, i64 %idxprom219, !dbg !12066
  store i32 1, i32* %arrayidx220, align 4, !dbg !12069
  br label %if.end221, !dbg !12066

if.end221:                                        ; preds = %if.then218, %if.end215
  %221 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !12070
  %board = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %221, i32 0, i32 1, !dbg !12072
  %222 = load %struct.mxser_board*, %struct.mxser_board** %board, align 8, !dbg !12072
  %chip_flag = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %222, i32 0, i32 5, !dbg !12073
  %223 = load i32, i32* %chip_flag, align 8, !dbg !12073
  %cmp222 = icmp eq i32 %223, 2, !dbg !12074
  br i1 %cmp222, label %if.then224, label %if.else232, !dbg !12075

if.then224:                                       ; preds = %if.end221
  %224 = load %struct.mxser_port*, %struct.mxser_port** %ip, align 8, !dbg !12076
  %opmode_ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %224, i32 0, i32 3, !dbg !12078
  %225 = load i64, i64* %opmode_ioaddr, align 8, !dbg !12078
  %conv225 = trunc i64 %225 to i32, !dbg !12076
  %call226 = call zeroext i8 @inb(i32 %conv225) #11, !dbg !12079
  %conv227 = zext i8 %call226 to i32, !dbg !12079
  %226 = load i32, i32* %p, align 4, !dbg !12080
  %rem = urem i32 %226, 4, !dbg !12081
  %mul = mul i32 %rem, 2, !dbg !12082
  %shr = ashr i32 %conv227, %mul, !dbg !12083
  %conv228 = trunc i32 %shr to i8, !dbg !12079
  store i8 %conv228, i8* %opmode, align 1, !dbg !12084
  %227 = load i8, i8* %opmode, align 1, !dbg !12085
  %conv229 = zext i8 %227 to i32, !dbg !12085
  %and230 = and i32 %conv229, 3, !dbg !12085
  %conv231 = trunc i32 %and230 to i8, !dbg !12085
  store i8 %conv231, i8* %opmode, align 1, !dbg !12085
  br label %if.end233, !dbg !12086

if.else232:                                       ; preds = %if.end221
  store i8 0, i8* %opmode, align 1, !dbg !12087
  br label %if.end233

if.end233:                                        ; preds = %if.else232, %if.then224
  %228 = load i8, i8* %opmode, align 1, !dbg !12089
  %conv234 = zext i8 %228 to i32, !dbg !12089
  %229 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12090
  %iftype = getelementptr inbounds %struct.mxser_mon_ext, %struct.mxser_mon_ext* %229, i32 0, i32 11, !dbg !12091
  %230 = load i32, i32* %p, align 4, !dbg !12092
  %idxprom235 = zext i32 %230 to i64, !dbg !12090
  %arrayidx236 = getelementptr [32 x i32], [32 x i32]* %iftype, i64 0, i64 %idxprom235, !dbg !12090
  store i32 %conv234, i32* %arrayidx236, align 4, !dbg !12093
  %231 = load %struct.tty_port*, %struct.tty_port** %port, align 8, !dbg !12094
  %mutex237 = getelementptr inbounds %struct.tty_port, %struct.tty_port* %231, i32 0, i32 13, !dbg !12095
  call void @mutex_unlock(%struct.mutex* %mutex237) #11, !dbg !12096
  br label %for.inc238, !dbg !12097

for.inc238:                                       ; preds = %if.end233, %if.then115
  %232 = load i32, i32* %j, align 4, !dbg !12098
  %inc239 = add i32 %232, 1, !dbg !12098
  store i32 %inc239, i32* %j, align 4, !dbg !12098
  %233 = load i32, i32* %p, align 4, !dbg !12099
  %inc240 = add i32 %233, 1, !dbg !12099
  store i32 %inc240, i32* %p, align 4, !dbg !12099
  br label %for.cond97, !dbg !12100, !llvm.loop !12101

for.end241:                                       ; preds = %if.then104, %for.cond97
  br label %for.inc242, !dbg !12103

for.inc242:                                       ; preds = %for.end241
  %234 = load i32, i32* %i, align 4, !dbg !12104
  %inc243 = add i32 %234, 1, !dbg !12104
  store i32 %inc243, i32* %i, align 4, !dbg !12104
  br label %for.cond93, !dbg !12105, !llvm.loop !12106

for.end244:                                       ; preds = %for.cond93
  %235 = load i8*, i8** %argp.addr, align 8, !dbg !12108
  %236 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12109
  %237 = bitcast %struct.mxser_mon_ext* %236 to i8*, !dbg !12109
  store i8* %235, i8** %to.addr.i313, align 8
  store i8* %237, i8** %from.addr.i314, align 8
  store i64 2176, i64* %n.addr.i315, align 8
  %238 = load i8*, i8** %from.addr.i314, align 8, !dbg !12110
  %239 = load i64, i64* %n.addr.i315, align 8, !dbg !12110
  store i8* %238, i8** %addr.addr.i.i307, align 8
  store i64 %239, i64* %bytes.addr.i.i308, align 8
  store i8 1, i8* %is_source.addr.i.i309, align 1
  store i32 -1, i32* %sz.i.i310, align 4, !dbg !11501
  %240 = load i32, i32* %sz.i.i310, align 4, !dbg !12111
  %cmp.i.i316 = icmp sge i32 %240, 0, !dbg !12111
  br i1 %cmp.i.i316, label %land.rhs.i.i319, label %land.end.i.i323, !dbg !12111

land.rhs.i.i319:                                  ; preds = %for.end244
  %241 = load i32, i32* %sz.i.i310, align 4, !dbg !12111
  %conv.i.i317 = sext i32 %241 to i64, !dbg !12111
  %242 = load i64, i64* %bytes.addr.i.i308, align 8, !dbg !12111
  %cmp1.i.i318 = icmp ult i64 %conv.i.i317, %242, !dbg !12111
  br label %land.end.i.i323

land.end.i.i323:                                  ; preds = %land.rhs.i.i319, %for.end244
  %243 = phi i1 [ false, %for.end244 ], [ %cmp1.i.i318, %land.rhs.i.i319 ], !dbg !12112
  %lnot.i.i320 = xor i1 %243, true, !dbg !12111
  %lnot.ext.i.i321 = zext i1 %243 to i32, !dbg !12111
  %conv4.i.i322 = sext i32 %lnot.ext.i.i321 to i64, !dbg !12111
  br i1 %243, label %if.then.i.i324, label %if.end10.i.i339, !dbg !12113

if.then.i.i324:                                   ; preds = %land.end.i.i323
  %244 = load i64, i64* %bytes.addr.i.i308, align 8, !dbg !12114
  %245 = call i1 @llvm.is.constant.i64(i64 %244) #7, !dbg !12115
  br i1 %245, label %if.else.i.i327, label %if.then5.i.i325, !dbg !12116

if.then5.i.i325:                                  ; preds = %if.then.i.i324
  %246 = load i32, i32* %sz.i.i310, align 4, !dbg !12117
  %247 = load i64, i64* %bytes.addr.i.i308, align 8, !dbg !12118
  call void @copy_overflow(i32 %246, i64 %247) #13, !dbg !12119
  br label %if.end9.i.i331, !dbg !12119

if.else.i.i327:                                   ; preds = %if.then.i.i324
  %248 = load i8, i8* %is_source.addr.i.i309, align 1, !dbg !12120
  %tobool6.i.i326 = trunc i8 %248 to i1, !dbg !12120
  br i1 %tobool6.i.i326, label %if.then7.i.i328, label %if.else8.i.i329, !dbg !12121

if.then7.i.i328:                                  ; preds = %if.else.i.i327
  call void @__bad_copy_from() #13, !dbg !12122
  br label %if.end.i.i330, !dbg !12122

if.else8.i.i329:                                  ; preds = %if.else.i.i327
  call void @__bad_copy_to() #13, !dbg !12123
  br label %if.end.i.i330

if.end.i.i330:                                    ; preds = %if.else8.i.i329, %if.then7.i.i328
  br label %if.end9.i.i331

if.end9.i.i331:                                   ; preds = %if.end.i.i330, %if.then5.i.i325
  store i1 false, i1* %retval.i.i306, align 1, !dbg !12124
  br label %check_copy_size.exit.i353, !dbg !12124

if.end10.i.i339:                                  ; preds = %land.end.i.i323
  %249 = load i64, i64* %bytes.addr.i.i308, align 8, !dbg !11502
  %cmp11.i.i332 = icmp ugt i64 %249, 2147483647, !dbg !11502
  %lnot13.i.i333 = xor i1 %cmp11.i.i332, true, !dbg !11502
  %lnot.ext16.i.i334 = zext i1 %cmp11.i.i332 to i32, !dbg !11502
  store i32 %lnot.ext16.i.i334, i32* %__ret_warn_on.i.i311, align 4, !dbg !11502
  %250 = load i32, i32* %__ret_warn_on.i.i311, align 4, !dbg !12125
  %tobool17.i.i335 = icmp ne i32 %250, 0, !dbg !12125
  %lnot18.i.i336 = xor i1 %tobool17.i.i335, true, !dbg !12125
  %lnot.ext21.i.i337 = zext i1 %tobool17.i.i335 to i32, !dbg !12125
  %conv22.i.i338 = sext i32 %lnot.ext21.i.i337 to i64, !dbg !12125
  br i1 %tobool17.i.i335, label %if.then24.i.i340, label %if.end31.i.i346, !dbg !11502

if.then24.i.i340:                                 ; preds = %if.end10.i.i339
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !12126, !srcloc !9994
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !12127, !srcloc !9997
  br label %if.end31.i.i346, !dbg !12128

if.end31.i.i346:                                  ; preds = %if.then24.i.i340, %if.end10.i.i339
  %251 = load i32, i32* %__ret_warn_on.i.i311, align 4, !dbg !11502
  %tobool32.i.i341 = icmp ne i32 %251, 0, !dbg !11502
  %lnot33.i.i342 = xor i1 %tobool32.i.i341, true, !dbg !11502
  %lnot.ext36.i.i343 = zext i1 %tobool32.i.i341 to i32, !dbg !11502
  %conv37.i.i344 = sext i32 %lnot.ext36.i.i343 to i64, !dbg !11502
  store i64 %conv37.i.i344, i64* %tmp.i.i312, align 8, !dbg !12125
  %252 = load i64, i64* %tmp.i.i312, align 8, !dbg !11502
  %tobool38.i.i345 = icmp ne i64 %252, 0, !dbg !12129
  br i1 %tobool38.i.i345, label %if.then39.i.i347, label %if.end40.i.i349, !dbg !12130

if.then39.i.i347:                                 ; preds = %if.end31.i.i346
  store i1 false, i1* %retval.i.i306, align 1, !dbg !12131
  br label %check_copy_size.exit.i353, !dbg !12131

if.end40.i.i349:                                  ; preds = %if.end31.i.i346
  %253 = load i8*, i8** %addr.addr.i.i307, align 8, !dbg !12132
  %254 = load i64, i64* %bytes.addr.i.i308, align 8, !dbg !12133
  %255 = load i8, i8* %is_source.addr.i.i309, align 1, !dbg !12134
  %tobool41.i.i348 = trunc i8 %255 to i1, !dbg !12134
  call void @check_object_size(i8* %253, i64 %254, i1 zeroext %tobool41.i.i348) #13, !dbg !12135
  store i1 true, i1* %retval.i.i306, align 1, !dbg !12136
  br label %check_copy_size.exit.i353, !dbg !12136

check_copy_size.exit.i353:                        ; preds = %if.end40.i.i349, %if.then39.i.i347, %if.end9.i.i331
  %256 = load i1, i1* %retval.i.i306, align 1, !dbg !12137
  %lnot.i350 = xor i1 %256, true, !dbg !12110
  %lnot.ext.i351 = zext i1 %256 to i32, !dbg !12110
  %conv.i352 = sext i32 %lnot.ext.i351 to i64, !dbg !12110
  br i1 %256, label %if.then.i355, label %copy_to_user.exit356, !dbg !12138

if.then.i355:                                     ; preds = %check_copy_size.exit.i353
  %257 = load i8*, i8** %to.addr.i313, align 8, !dbg !12139
  %258 = load i8*, i8** %from.addr.i314, align 8, !dbg !12140
  %259 = load i64, i64* %n.addr.i315, align 8, !dbg !12141
  %call2.i354 = call i64 @_copy_to_user(i8* %257, i8* %258, i64 %259) #13, !dbg !12142
  store i64 %call2.i354, i64* %n.addr.i315, align 8, !dbg !12143
  br label %copy_to_user.exit356, !dbg !12144

copy_to_user.exit356:                             ; preds = %check_copy_size.exit.i353, %if.then.i355
  %260 = load i64, i64* %n.addr.i315, align 8, !dbg !12145
  %tobool246 = icmp ne i64 %260, 0, !dbg !12146
  br i1 %tobool246, label %if.then247, label %if.end248, !dbg !12147

if.then247:                                       ; preds = %copy_to_user.exit356
  store i32 -14, i32* %ret, align 4, !dbg !12148
  br label %if.end248, !dbg !12149

if.end248:                                        ; preds = %if.then247, %copy_to_user.exit356
  %261 = load %struct.mxser_mon_ext*, %struct.mxser_mon_ext** %me, align 8, !dbg !12150
  %262 = bitcast %struct.mxser_mon_ext* %261 to i8*, !dbg !12150
  call void @kfree(i8* %262) #11, !dbg !12151
  %263 = load i32, i32* %ret, align 4, !dbg !12152
  store i32 %263, i32* %retval, align 4, !dbg !12153
  br label %return, !dbg !12153

sw.default:                                       ; preds = %entry
  store i32 -515, i32* %retval, align 4, !dbg !12154
  br label %return, !dbg !12154

return:                                           ; preds = %sw.default, %if.end248, %if.then91, %for.end86, %if.then79, %if.end34, %for.end19, %if.end
  %264 = load i32, i32* %retval, align 4, !dbg !12155
  ret i32 %264, !dbg !12155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #3 !dbg !12156 {
entry:
  ret void, !dbg !12158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @tty_io_error(%struct.tty_struct* %tty) #3 !dbg !12159 {
entry:
  %tty.addr = alloca %struct.tty_struct*, align 8
  store %struct.tty_struct* %tty, %struct.tty_struct** %tty.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tty_struct** %tty.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  %0 = load %struct.tty_struct*, %struct.tty_struct** %tty.addr, align 8, !dbg !12164
  %flags = getelementptr inbounds %struct.tty_struct, %struct.tty_struct* %0, i32 0, i32 21, !dbg !12165
  %call = call zeroext i1 @test_bit(i64 1, i64* %flags) #11, !dbg !12166
  ret i1 %call, !dbg !12167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_get_lsr_info(%struct.mxser_port* %info, i32* %value) #3 !dbg !12168 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !6302, metadata !DIExpression()), !dbg !12171
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !12173
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !12174
  %info.addr = alloca %struct.mxser_port*, align 8
  %value.addr = alloca i32*, align 8
  %status = alloca i8, align 1
  %result = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp23 = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp25 = alloca i64, align 8
  store %struct.mxser_port* %info, %struct.mxser_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info.addr, metadata !12181, metadata !DIExpression()), !dbg !12182
  store i32* %value, i32** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %value.addr, metadata !12183, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12185, metadata !DIExpression()), !dbg !12186
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12187, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12189, metadata !DIExpression()), !dbg !12190
  br label %do.body, !dbg !12191

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12192

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12193, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12196, metadata !DIExpression()), !dbg !12195
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12195
  %conv = zext i1 %cmp to i32, !dbg !12195
  store i32 1, i32* %tmp, align 4, !dbg !12195
  %0 = load i32, i32* %tmp, align 4, !dbg !12195
  br label %do.body2, !dbg !12197

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12198

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12199

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12201, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12205, metadata !DIExpression()), !dbg !12204
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12204
  %conv8 = zext i1 %cmp7 to i32, !dbg !12204
  store i32 1, i32* %tmp9, align 4, !dbg !12204
  %1 = load i32, i32* %tmp9, align 4, !dbg !12204
  %call = call i64 @arch_local_irq_save() #11, !dbg !12206
  store i64 %call, i64* %flags, align 8, !dbg !12206
  br label %do.end, !dbg !12206

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12199

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12198

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12207, !srcloc !12208
  br label %do.body12, !dbg !12207

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12209
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %2, i32 0, i32 28, !dbg !12209
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12210
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12211
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !12211
  br label %do.end14, !dbg !12209

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12207

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12198

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12197

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12192

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12212
  %ioaddr = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 2, !dbg !12213
  %6 = load i64, i64* %ioaddr, align 8, !dbg !12213
  %add = add i64 %6, 5, !dbg !12214
  %conv19 = trunc i64 %add to i32, !dbg !12212
  %call20 = call zeroext i8 @inb(i32 %conv19) #11, !dbg !12215
  store i8 %call20, i8* %status, align 1, !dbg !12216
  %7 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12217
  %slock21 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %7, i32 0, i32 28, !dbg !12218
  %8 = load i64, i64* %flags, align 8, !dbg !12219
  store %struct.spinlock* %slock21, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !12220
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !12220
  store i32 1, i32* %tmp.i, align 4, !dbg !12220
  %9 = load i32, i32* %tmp.i, align 4, !dbg !12220
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !12221
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !12221
  store i32 1, i32* %tmp8.i, align 4, !dbg !12221
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !12221
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !12222
  call void @arch_local_irq_restore(i64 %11) #13, !dbg !12222
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12223, !srcloc !6391
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !12224
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !12224
  %rlock.i29 = bitcast %union.anon.2* %13 to %struct.raw_spinlock*, !dbg !12224
  %14 = load i8, i8* %status, align 1, !dbg !12225
  %conv22 = zext i8 %14 to i32, !dbg !12225
  %and = and i32 %conv22, 64, !dbg !12226
  %tobool = icmp ne i32 %and, 0, !dbg !12227
  %15 = zext i1 %tobool to i64, !dbg !12227
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !12227
  store i32 %cond, i32* %result, align 4, !dbg !12228
  call void @might_fault() #11, !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !12231, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !12234, metadata !DIExpression()), !dbg !12233
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !12235, metadata !DIExpression()), !dbg !12233
  %16 = load i32*, i32** %value.addr, align 8, !dbg !12233
  %17 = bitcast i32* %16 to i8*, !dbg !12233
  store i8* %17, i8** %__ptr_pu, align 8, !dbg !12233
  %18 = load i32, i32* %result, align 4, !dbg !12233
  store i32 %18, i32* %__val_pu, align 4, !dbg !12233
  %19 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !12233
  %20 = load i8*, i8** %__ptr_pu, align 8, !dbg !12233
  %21 = load i32, i32* %__val_pu, align 4, !dbg !12233
  %22 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %20, i32 %21, i64 4, i64 %19) #7, !dbg !12233, !srcloc !12236
  %asmresult = extractvalue { i8*, i64 } %22, 0, !dbg !12233
  %asmresult24 = extractvalue { i8*, i64 } %22, 1, !dbg !12233
  %23 = ptrtoint i8* %asmresult to i64, !dbg !12233
  %24 = trunc i64 %23 to i32, !dbg !12233
  store i32 %24, i32* %__ret_pu, align 4, !dbg !12233
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult24), !dbg !12233
  %25 = load i32, i32* %__ret_pu, align 4, !dbg !12233
  %conv26 = sext i32 %25 to i64, !dbg !12233
  store i64 %conv26, i64* %tmp25, align 8, !dbg !12233
  %26 = load i64, i64* %tmp25, align 8, !dbg !12233
  store i64 %26, i64* %tmp23, align 8, !dbg !12229
  %27 = load i64, i64* %tmp23, align 8, !dbg !12229
  %conv27 = trunc i64 %27 to i32, !dbg !12237
  ret i32 %conv27, !dbg !12238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_cflags_changed(%struct.mxser_port* %info, i64 %arg, %struct.async_icount* %cprev) #3 !dbg !12239 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !6302, metadata !DIExpression()), !dbg !12243
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6308, metadata !DIExpression()), !dbg !12245
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5557, metadata !DIExpression()), !dbg !12246
  %info.addr = alloca %struct.mxser_port*, align 8
  %arg.addr = alloca i64, align 8
  %cprev.addr = alloca %struct.async_icount*, align 8
  %cnow = alloca %struct.async_icount, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.mxser_port* %info, %struct.mxser_port** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_port** %info.addr, metadata !12253, metadata !DIExpression()), !dbg !12254
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !12255, metadata !DIExpression()), !dbg !12256
  store %struct.async_icount* %cprev, %struct.async_icount** %cprev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.async_icount** %cprev.addr, metadata !12257, metadata !DIExpression()), !dbg !12258
  call void @llvm.dbg.declare(metadata %struct.async_icount* %cnow, metadata !12259, metadata !DIExpression()), !dbg !12260
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12261, metadata !DIExpression()), !dbg !12262
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12263, metadata !DIExpression()), !dbg !12264
  br label %do.body, !dbg !12265

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12266

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12267, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12270, metadata !DIExpression()), !dbg !12269
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12269
  %conv = zext i1 %cmp to i32, !dbg !12269
  store i32 1, i32* %tmp, align 4, !dbg !12269
  %0 = load i32, i32* %tmp, align 4, !dbg !12269
  br label %do.body2, !dbg !12271

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12272

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12273

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12275, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12279, metadata !DIExpression()), !dbg !12278
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12278
  %conv8 = zext i1 %cmp7 to i32, !dbg !12278
  store i32 1, i32* %tmp9, align 4, !dbg !12278
  %1 = load i32, i32* %tmp9, align 4, !dbg !12278
  %call = call i64 @arch_local_irq_save() #11, !dbg !12280
  store i64 %call, i64* %flags, align 8, !dbg !12280
  br label %do.end, !dbg !12280

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12273

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12272

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12281, !srcloc !12282
  br label %do.body12, !dbg !12281

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12283
  %slock = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %2, i32 0, i32 28, !dbg !12283
  store %struct.spinlock* %slock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12284
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12285
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !12285
  br label %do.end14, !dbg !12283

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12281

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12272

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12271

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12266

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12286
  %icount = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %5, i32 0, i32 17, !dbg !12287
  %6 = bitcast %struct.async_icount* %cnow to i8*, !dbg !12287
  %7 = bitcast %struct.async_icount* %icount to i8*, !dbg !12287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %7, i64 44, i1 false), !dbg !12287
  %8 = load %struct.mxser_port*, %struct.mxser_port** %info.addr, align 8, !dbg !12288
  %slock19 = getelementptr inbounds %struct.mxser_port, %struct.mxser_port* %8, i32 0, i32 28, !dbg !12289
  %9 = load i64, i64* %flags, align 8, !dbg !12290
  store %struct.spinlock* %slock19, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !197, metadata !6376, metadata !DIExpression()) #7, !dbg !12291
  call void @llvm.dbg.declare(metadata !197, metadata !6380, metadata !DIExpression()) #7, !dbg !12291
  store i32 1, i32* %tmp.i, align 4, !dbg !12291
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12291
  call void @llvm.dbg.declare(metadata !197, metadata !6381, metadata !DIExpression()) #7, !dbg !12292
  call void @llvm.dbg.declare(metadata !197, metadata !6387, metadata !DIExpression()) #7, !dbg !12292
  store i32 1, i32* %tmp8.i, align 4, !dbg !12292
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12292
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12293
  call void @arch_local_irq_restore(i64 %12) #13, !dbg !12293
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12294, !srcloc !6391
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !12295
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12295
  %rlock.i42 = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !12295
  %15 = load i64, i64* %arg.addr, align 8, !dbg !12296
  %and = and i64 %15, 128, !dbg !12297
  %tobool = icmp ne i64 %and, 0, !dbg !12297
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !12298

land.lhs.true:                                    ; preds = %do.end18
  %rng = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 2, !dbg !12299
  %16 = load i32, i32* %rng, align 4, !dbg !12299
  %17 = load %struct.async_icount*, %struct.async_icount** %cprev.addr, align 8, !dbg !12300
  %rng20 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %17, i32 0, i32 2, !dbg !12301
  %18 = load i32, i32* %rng20, align 4, !dbg !12301
  %cmp21 = icmp ne i32 %16, %18, !dbg !12302
  br i1 %cmp21, label %lor.end, label %lor.lhs.false, !dbg !12303

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.end18
  %19 = load i64, i64* %arg.addr, align 8, !dbg !12304
  %and23 = and i64 %19, 256, !dbg !12305
  %tobool24 = icmp ne i64 %and23, 0, !dbg !12305
  br i1 %tobool24, label %land.lhs.true25, label %lor.lhs.false29, !dbg !12306

land.lhs.true25:                                  ; preds = %lor.lhs.false
  %dsr = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 1, !dbg !12307
  %20 = load i32, i32* %dsr, align 4, !dbg !12307
  %21 = load %struct.async_icount*, %struct.async_icount** %cprev.addr, align 8, !dbg !12308
  %dsr26 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %21, i32 0, i32 1, !dbg !12309
  %22 = load i32, i32* %dsr26, align 4, !dbg !12309
  %cmp27 = icmp ne i32 %20, %22, !dbg !12310
  br i1 %cmp27, label %lor.end, label %lor.lhs.false29, !dbg !12311

lor.lhs.false29:                                  ; preds = %land.lhs.true25, %lor.lhs.false
  %23 = load i64, i64* %arg.addr, align 8, !dbg !12312
  %and30 = and i64 %23, 64, !dbg !12313
  %tobool31 = icmp ne i64 %and30, 0, !dbg !12313
  br i1 %tobool31, label %land.lhs.true32, label %lor.rhs, !dbg !12314

land.lhs.true32:                                  ; preds = %lor.lhs.false29
  %dcd = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 3, !dbg !12315
  %24 = load i32, i32* %dcd, align 4, !dbg !12315
  %25 = load %struct.async_icount*, %struct.async_icount** %cprev.addr, align 8, !dbg !12316
  %dcd33 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %25, i32 0, i32 3, !dbg !12317
  %26 = load i32, i32* %dcd33, align 4, !dbg !12317
  %cmp34 = icmp ne i32 %24, %26, !dbg !12318
  br i1 %cmp34, label %lor.end, label %lor.rhs, !dbg !12319

lor.rhs:                                          ; preds = %land.lhs.true32, %lor.lhs.false29
  %27 = load i64, i64* %arg.addr, align 8, !dbg !12320
  %and36 = and i64 %27, 32, !dbg !12321
  %tobool37 = icmp ne i64 %and36, 0, !dbg !12321
  br i1 %tobool37, label %land.rhs, label %land.end, !dbg !12322

land.rhs:                                         ; preds = %lor.rhs
  %cts = getelementptr inbounds %struct.async_icount, %struct.async_icount* %cnow, i32 0, i32 0, !dbg !12323
  %28 = load i32, i32* %cts, align 4, !dbg !12323
  %29 = load %struct.async_icount*, %struct.async_icount** %cprev.addr, align 8, !dbg !12324
  %cts38 = getelementptr inbounds %struct.async_icount, %struct.async_icount* %29, i32 0, i32 0, !dbg !12325
  %30 = load i32, i32* %cts38, align 4, !dbg !12325
  %cmp39 = icmp ne i32 %28, %30, !dbg !12326
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %31 = phi i1 [ false, %lor.rhs ], [ %cmp39, %land.rhs ], !dbg !12327
  br label %lor.end, !dbg !12319

lor.end:                                          ; preds = %land.end, %land.lhs.true32, %land.lhs.true25, %land.lhs.true
  %32 = phi i1 [ true, %land.lhs.true32 ], [ true, %land.lhs.true25 ], [ true, %land.lhs.true ], [ %31, %land.end ]
  %lor.ext = zext i1 %32 to i32, !dbg !12319
  store i32 %lor.ext, i32* %ret, align 4, !dbg !12328
  %33 = load %struct.async_icount*, %struct.async_icount** %cprev.addr, align 8, !dbg !12329
  %34 = bitcast %struct.async_icount* %33 to i8*, !dbg !12330
  %35 = bitcast %struct.async_icount* %cnow to i8*, !dbg !12330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 44, i1 false), !dbg !12330
  %36 = load i32, i32* %ret, align 4, !dbg !12331
  ret i32 %36, !dbg !12332
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @mxser_get_msr(i32 %baseaddr, i32 %mode, i32 %port) #3 !dbg !4748 {
entry:
  %baseaddr.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %status = alloca i8, align 1
  store i32 %baseaddr, i32* %baseaddr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %baseaddr.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12335, metadata !DIExpression()), !dbg !12336
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12337, metadata !DIExpression()), !dbg !12338
  call void @llvm.dbg.declare(metadata i8* %status, metadata !12339, metadata !DIExpression()), !dbg !12340
  store i8 0, i8* %status, align 1, !dbg !12340
  %0 = load i32, i32* %baseaddr.addr, align 4, !dbg !12341
  %add = add i32 %0, 6, !dbg !12342
  %call = call zeroext i8 @inb(i32 %add) #11, !dbg !12343
  store i8 %call, i8* %status, align 1, !dbg !12344
  %1 = load i32, i32* %port.addr, align 4, !dbg !12345
  %idxprom = sext i32 %1 to i64, !dbg !12346
  %arrayidx = getelementptr [33 x i8], [33 x i8]* @mxser_get_msr.mxser_msr, i64 0, i64 %idxprom, !dbg !12346
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12347
  %conv = zext i8 %2 to i32, !dbg !12347
  %and = and i32 %conv, 15, !dbg !12347
  %conv1 = trunc i32 %and to i8, !dbg !12347
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !12347
  %3 = load i8, i8* %status, align 1, !dbg !12348
  %conv2 = zext i8 %3 to i32, !dbg !12348
  %4 = load i32, i32* %port.addr, align 4, !dbg !12349
  %idxprom3 = sext i32 %4 to i64, !dbg !12350
  %arrayidx4 = getelementptr [33 x i8], [33 x i8]* @mxser_get_msr.mxser_msr, i64 0, i64 %idxprom3, !dbg !12350
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !12351
  %conv5 = zext i8 %5 to i32, !dbg !12351
  %or = or i32 %conv5, %conv2, !dbg !12351
  %conv6 = trunc i32 %or to i8, !dbg !12351
  store i8 %conv6, i8* %arrayidx4, align 1, !dbg !12351
  %6 = load i32, i32* %port.addr, align 4, !dbg !12352
  %idxprom7 = sext i32 %6 to i64, !dbg !12353
  %arrayidx8 = getelementptr [33 x i8], [33 x i8]* @mxser_get_msr.mxser_msr, i64 0, i64 %idxprom7, !dbg !12353
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !12353
  store i8 %7, i8* %status, align 1, !dbg !12354
  %8 = load i32, i32* %mode.addr, align 4, !dbg !12355
  %tobool = icmp ne i32 %8, 0, !dbg !12355
  br i1 %tobool, label %if.then, label %if.end, !dbg !12357

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %port.addr, align 4, !dbg !12358
  %idxprom9 = sext i32 %9 to i64, !dbg !12359
  %arrayidx10 = getelementptr [33 x i8], [33 x i8]* @mxser_get_msr.mxser_msr, i64 0, i64 %idxprom9, !dbg !12359
  store i8 0, i8* %arrayidx10, align 1, !dbg !12360
  br label %if.end, !dbg !12359

if.end:                                           ; preds = %if.then, %entry
  %10 = load i8, i8* %status, align 1, !dbg !12361
  ret i8 %10, !dbg !12362
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #3 !dbg !12363 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !12366, metadata !DIExpression()), !dbg !12370
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !12376, metadata !DIExpression()), !dbg !12377
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !12378, metadata !DIExpression()), !dbg !12379
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !12380, metadata !DIExpression()), !dbg !12381
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !12382, metadata !DIExpression()), !dbg !12386
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !12388, metadata !DIExpression()), !dbg !12392
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !12394, metadata !DIExpression()), !dbg !12398
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !12403, metadata !DIExpression()), !dbg !12404
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !12405, metadata !DIExpression()), !dbg !12406
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12407, metadata !DIExpression()), !dbg !12408
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !12409, metadata !DIExpression()), !dbg !12410
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !12411, metadata !DIExpression()), !dbg !12412
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12413, metadata !DIExpression()), !dbg !12414
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !12415, metadata !DIExpression()), !dbg !12416
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !12417, metadata !DIExpression()), !dbg !12418
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  %0 = load i64, i64* %size.addr, align 8, !dbg !12423
  %1 = load i32, i32* %flags.addr, align 4, !dbg !12424
  %or = or i32 %1, 256, !dbg !12425
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12426
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !12427
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !12428

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12429
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !12430
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12431

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !12432
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !12433
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12434
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !12435
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12412
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !12436
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12437
  %10 = load i32, i32* %order.i.i, align 4, !dbg !12438
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12439
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12440
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12441
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !12442
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12442
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12442
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12442
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !12442
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12443
  br label %kmalloc.exit, !dbg !12443

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !12444
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12445
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !12445
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12447

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12448
  br label %kmalloc_index.exit.i, !dbg !12448

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12449
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !12451
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12452

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12453
  br label %kmalloc_index.exit.i, !dbg !12453

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12454
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !12456
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12457

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12458
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !12459
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12460

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12461
  br label %kmalloc_index.exit.i, !dbg !12461

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12462
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !12464
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12465

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12466
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !12467
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12468

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12469
  br label %kmalloc_index.exit.i, !dbg !12469

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12470
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !12472
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12473

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12474
  br label %kmalloc_index.exit.i, !dbg !12474

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12475
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !12477
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12478

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12479
  br label %kmalloc_index.exit.i, !dbg !12479

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12480
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !12482
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12483

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12484
  br label %kmalloc_index.exit.i, !dbg !12484

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12485
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !12487
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12488

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12489
  br label %kmalloc_index.exit.i, !dbg !12489

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12490
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !12492
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12493

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12494
  br label %kmalloc_index.exit.i, !dbg !12494

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12495
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !12497
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12498

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12499
  br label %kmalloc_index.exit.i, !dbg !12499

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12500
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !12502
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12503

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12504
  br label %kmalloc_index.exit.i, !dbg !12504

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12505
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !12507
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12508

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12509
  br label %kmalloc_index.exit.i, !dbg !12509

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12510
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !12512
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12513

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12514
  br label %kmalloc_index.exit.i, !dbg !12514

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12515
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !12517
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12518

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12519
  br label %kmalloc_index.exit.i, !dbg !12519

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12520
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !12522
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12523

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12524
  br label %kmalloc_index.exit.i, !dbg !12524

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12525
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !12527
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12528

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12529
  br label %kmalloc_index.exit.i, !dbg !12529

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12530
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !12532
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12533

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12534
  br label %kmalloc_index.exit.i, !dbg !12534

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12535
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !12537
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12538

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12539
  br label %kmalloc_index.exit.i, !dbg !12539

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12540
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !12542
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12543

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12544
  br label %kmalloc_index.exit.i, !dbg !12544

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12545
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !12547
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12548

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12549
  br label %kmalloc_index.exit.i, !dbg !12549

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12550
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !12552
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12553

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12554
  br label %kmalloc_index.exit.i, !dbg !12554

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12555
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !12557
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12558

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12559
  br label %kmalloc_index.exit.i, !dbg !12559

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12560
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !12562
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12563

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12564
  br label %kmalloc_index.exit.i, !dbg !12564

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12565
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !12567
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12568

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12569
  br label %kmalloc_index.exit.i, !dbg !12569

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12570
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !12572
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12573

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12574
  br label %kmalloc_index.exit.i, !dbg !12574

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12575
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !12577
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12578

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12579
  br label %kmalloc_index.exit.i, !dbg !12579

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12580
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !12582
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12583

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12584
  br label %kmalloc_index.exit.i, !dbg !12584

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12585
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !12587
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12588

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12589
  br label %kmalloc_index.exit.i, !dbg !12589

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12590, !srcloc !12593
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 232) #7, !dbg !12594, !srcloc !12597
  unreachable, !dbg !12598

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !12599
  store i32 %45, i32* %index.i, align 4, !dbg !12600
  %46 = load i32, i32* %index.i, align 4, !dbg !12601
  %tobool.i = icmp ne i32 %46, 0, !dbg !12601
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12603

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12604
  br label %kmalloc.exit, !dbg !12604

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !12605
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12606
  %and.i.i = and i32 %48, 17, !dbg !12606
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12606
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12606
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12606
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12606
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12608

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12609
  br label %kmalloc_type.exit.i, !dbg !12609

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12610
  %and2.i.i = and i32 %49, 1, !dbg !12611
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12610
  %50 = zext i1 %tobool3.i.i to i64, !dbg !12610
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12610
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12612
  br label %kmalloc_type.exit.i, !dbg !12612

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !12613
  %idxprom.i = zext i32 %51 to i64, !dbg !12614
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12614
  %52 = load i32, i32* %index.i, align 4, !dbg !12615
  %idxprom6.i = zext i32 %52 to i64, !dbg !12614
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12614
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12614
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !12616
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !12617
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12618
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12619
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !12620
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12620
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12620
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12620
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !12620
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12381
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12621
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !12622
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12623
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12624
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !12625
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12626
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !12627
  store i8* %62, i8** %retval.i, align 8, !dbg !12628
  br label %kmalloc.exit, !dbg !12628

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !12629
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !12630
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !12631
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12631
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12631
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12631
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !12631
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12632
  br label %kmalloc.exit, !dbg !12632

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !12633
  ret i8* %65, !dbg !12634
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !12635 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12637, metadata !DIExpression()), !dbg !12641
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12643, metadata !DIExpression()), !dbg !12644
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12645, metadata !DIExpression()), !dbg !12646
  %0 = load i64, i64* %size.addr, align 8, !dbg !12647
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !12649
  br i1 %1, label %if.then, label %if.end447, !dbg !12650

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !12651
  %tobool = icmp ne i64 %2, 0, !dbg !12651
  br i1 %tobool, label %if.end, label %if.then1, !dbg !12654

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12655
  br label %return, !dbg !12655

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12656
  %cmp = icmp ult i64 %3, 4096, !dbg !12658
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12659

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12660
  br label %return, !dbg !12660

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub = sub i64 %4, 1, !dbg !12661
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12661
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12661

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub4 = sub i64 %6, 1, !dbg !12661
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12661
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12661

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub6 = sub i64 %8, 1, !dbg !12661
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12661
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12661

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12661

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub9 = sub i64 %9, 1, !dbg !12661
  %and = and i64 %sub9, -9223372036854775808, !dbg !12661
  %tobool10 = icmp ne i64 %and, 0, !dbg !12661
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12661

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12661

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub13 = sub i64 %10, 1, !dbg !12661
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12661
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12661
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12661

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12661

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub18 = sub i64 %11, 1, !dbg !12661
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12661
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12661
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12661

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12661

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub23 = sub i64 %12, 1, !dbg !12661
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12661
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12661
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12661

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12661

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub28 = sub i64 %13, 1, !dbg !12661
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12661
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12661
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12661

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12661

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub33 = sub i64 %14, 1, !dbg !12661
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12661
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12661
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12661

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12661

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub38 = sub i64 %15, 1, !dbg !12661
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12661
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12661
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12661

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12661

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub43 = sub i64 %16, 1, !dbg !12661
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12661
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12661
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12661

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12661

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub48 = sub i64 %17, 1, !dbg !12661
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12661
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12661
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12661

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12661

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub53 = sub i64 %18, 1, !dbg !12661
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12661
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12661
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12661

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12661

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub58 = sub i64 %19, 1, !dbg !12661
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12661
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12661
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12661

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12661

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub63 = sub i64 %20, 1, !dbg !12661
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12661
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12661
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12661

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12661

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub68 = sub i64 %21, 1, !dbg !12661
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12661
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12661
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12661

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12661

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub73 = sub i64 %22, 1, !dbg !12661
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12661
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12661
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12661

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12661

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub78 = sub i64 %23, 1, !dbg !12661
  %and79 = and i64 %sub78, 562949953421312, !dbg !12661
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12661
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12661

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12661

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub83 = sub i64 %24, 1, !dbg !12661
  %and84 = and i64 %sub83, 281474976710656, !dbg !12661
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12661
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12661

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12661

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub88 = sub i64 %25, 1, !dbg !12661
  %and89 = and i64 %sub88, 140737488355328, !dbg !12661
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12661
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12661

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12661

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub93 = sub i64 %26, 1, !dbg !12661
  %and94 = and i64 %sub93, 70368744177664, !dbg !12661
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12661
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12661

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12661

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub98 = sub i64 %27, 1, !dbg !12661
  %and99 = and i64 %sub98, 35184372088832, !dbg !12661
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12661
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12661

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12661

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub103 = sub i64 %28, 1, !dbg !12661
  %and104 = and i64 %sub103, 17592186044416, !dbg !12661
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12661
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12661

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12661

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub108 = sub i64 %29, 1, !dbg !12661
  %and109 = and i64 %sub108, 8796093022208, !dbg !12661
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12661
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12661

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12661

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub113 = sub i64 %30, 1, !dbg !12661
  %and114 = and i64 %sub113, 4398046511104, !dbg !12661
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12661
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12661

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12661

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub118 = sub i64 %31, 1, !dbg !12661
  %and119 = and i64 %sub118, 2199023255552, !dbg !12661
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12661
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12661

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12661

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub123 = sub i64 %32, 1, !dbg !12661
  %and124 = and i64 %sub123, 1099511627776, !dbg !12661
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12661
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12661

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12661

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub128 = sub i64 %33, 1, !dbg !12661
  %and129 = and i64 %sub128, 549755813888, !dbg !12661
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12661
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12661

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12661

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub133 = sub i64 %34, 1, !dbg !12661
  %and134 = and i64 %sub133, 274877906944, !dbg !12661
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12661
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12661

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12661

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub138 = sub i64 %35, 1, !dbg !12661
  %and139 = and i64 %sub138, 137438953472, !dbg !12661
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12661
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12661

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12661

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub143 = sub i64 %36, 1, !dbg !12661
  %and144 = and i64 %sub143, 68719476736, !dbg !12661
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12661
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12661

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12661

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub148 = sub i64 %37, 1, !dbg !12661
  %and149 = and i64 %sub148, 34359738368, !dbg !12661
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12661
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12661

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12661

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub153 = sub i64 %38, 1, !dbg !12661
  %and154 = and i64 %sub153, 17179869184, !dbg !12661
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12661
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12661

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12661

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub158 = sub i64 %39, 1, !dbg !12661
  %and159 = and i64 %sub158, 8589934592, !dbg !12661
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12661
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12661

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12661

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub163 = sub i64 %40, 1, !dbg !12661
  %and164 = and i64 %sub163, 4294967296, !dbg !12661
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12661
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12661

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12661

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub168 = sub i64 %41, 1, !dbg !12661
  %and169 = and i64 %sub168, 2147483648, !dbg !12661
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12661
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12661

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12661

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub173 = sub i64 %42, 1, !dbg !12661
  %and174 = and i64 %sub173, 1073741824, !dbg !12661
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12661
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12661

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12661

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub178 = sub i64 %43, 1, !dbg !12661
  %and179 = and i64 %sub178, 536870912, !dbg !12661
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12661
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12661

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12661

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub183 = sub i64 %44, 1, !dbg !12661
  %and184 = and i64 %sub183, 268435456, !dbg !12661
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12661
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12661

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12661

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub188 = sub i64 %45, 1, !dbg !12661
  %and189 = and i64 %sub188, 134217728, !dbg !12661
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12661
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12661

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12661

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub193 = sub i64 %46, 1, !dbg !12661
  %and194 = and i64 %sub193, 67108864, !dbg !12661
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12661
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12661

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12661

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub198 = sub i64 %47, 1, !dbg !12661
  %and199 = and i64 %sub198, 33554432, !dbg !12661
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12661
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12661

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12661

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub203 = sub i64 %48, 1, !dbg !12661
  %and204 = and i64 %sub203, 16777216, !dbg !12661
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12661
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12661

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12661

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub208 = sub i64 %49, 1, !dbg !12661
  %and209 = and i64 %sub208, 8388608, !dbg !12661
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12661
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12661

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12661

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub213 = sub i64 %50, 1, !dbg !12661
  %and214 = and i64 %sub213, 4194304, !dbg !12661
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12661
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12661

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12661

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub218 = sub i64 %51, 1, !dbg !12661
  %and219 = and i64 %sub218, 2097152, !dbg !12661
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12661
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12661

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12661

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub223 = sub i64 %52, 1, !dbg !12661
  %and224 = and i64 %sub223, 1048576, !dbg !12661
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12661
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12661

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12661

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub228 = sub i64 %53, 1, !dbg !12661
  %and229 = and i64 %sub228, 524288, !dbg !12661
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12661
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12661

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12661

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub233 = sub i64 %54, 1, !dbg !12661
  %and234 = and i64 %sub233, 262144, !dbg !12661
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12661
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12661

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12661

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub238 = sub i64 %55, 1, !dbg !12661
  %and239 = and i64 %sub238, 131072, !dbg !12661
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12661
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12661

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12661

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub243 = sub i64 %56, 1, !dbg !12661
  %and244 = and i64 %sub243, 65536, !dbg !12661
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12661
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12661

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12661

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub248 = sub i64 %57, 1, !dbg !12661
  %and249 = and i64 %sub248, 32768, !dbg !12661
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12661
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12661

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12661

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub253 = sub i64 %58, 1, !dbg !12661
  %and254 = and i64 %sub253, 16384, !dbg !12661
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12661
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12661

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12661

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub258 = sub i64 %59, 1, !dbg !12661
  %and259 = and i64 %sub258, 8192, !dbg !12661
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12661
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12661

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12661

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub263 = sub i64 %60, 1, !dbg !12661
  %and264 = and i64 %sub263, 4096, !dbg !12661
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12661
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12661

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12661

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub268 = sub i64 %61, 1, !dbg !12661
  %and269 = and i64 %sub268, 2048, !dbg !12661
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12661
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12661

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12661

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub273 = sub i64 %62, 1, !dbg !12661
  %and274 = and i64 %sub273, 1024, !dbg !12661
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12661
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12661

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12661

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub278 = sub i64 %63, 1, !dbg !12661
  %and279 = and i64 %sub278, 512, !dbg !12661
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12661
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12661

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12661

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub283 = sub i64 %64, 1, !dbg !12661
  %and284 = and i64 %sub283, 256, !dbg !12661
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12661
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12661

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12661

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub288 = sub i64 %65, 1, !dbg !12661
  %and289 = and i64 %sub288, 128, !dbg !12661
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12661
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12661

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12661

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub293 = sub i64 %66, 1, !dbg !12661
  %and294 = and i64 %sub293, 64, !dbg !12661
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12661
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12661

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12661

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub298 = sub i64 %67, 1, !dbg !12661
  %and299 = and i64 %sub298, 32, !dbg !12661
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12661
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12661

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12661

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub303 = sub i64 %68, 1, !dbg !12661
  %and304 = and i64 %sub303, 16, !dbg !12661
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12661
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12661

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12661

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub308 = sub i64 %69, 1, !dbg !12661
  %and309 = and i64 %sub308, 8, !dbg !12661
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12661
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12661

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12661

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub313 = sub i64 %70, 1, !dbg !12661
  %and314 = and i64 %sub313, 4, !dbg !12661
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12661
  %71 = zext i1 %tobool315 to i64, !dbg !12661
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12661
  br label %cond.end, !dbg !12661

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12661
  br label %cond.end317, !dbg !12661

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12661
  br label %cond.end319, !dbg !12661

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12661
  br label %cond.end321, !dbg !12661

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12661
  br label %cond.end323, !dbg !12661

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12661
  br label %cond.end325, !dbg !12661

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12661
  br label %cond.end327, !dbg !12661

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12661
  br label %cond.end329, !dbg !12661

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12661
  br label %cond.end331, !dbg !12661

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12661
  br label %cond.end333, !dbg !12661

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12661
  br label %cond.end335, !dbg !12661

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12661
  br label %cond.end337, !dbg !12661

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12661
  br label %cond.end339, !dbg !12661

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12661
  br label %cond.end341, !dbg !12661

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12661
  br label %cond.end343, !dbg !12661

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12661
  br label %cond.end345, !dbg !12661

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12661
  br label %cond.end347, !dbg !12661

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12661
  br label %cond.end349, !dbg !12661

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12661
  br label %cond.end351, !dbg !12661

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12661
  br label %cond.end353, !dbg !12661

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12661
  br label %cond.end355, !dbg !12661

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12661
  br label %cond.end357, !dbg !12661

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12661
  br label %cond.end359, !dbg !12661

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12661
  br label %cond.end361, !dbg !12661

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12661
  br label %cond.end363, !dbg !12661

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12661
  br label %cond.end365, !dbg !12661

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12661
  br label %cond.end367, !dbg !12661

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12661
  br label %cond.end369, !dbg !12661

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12661
  br label %cond.end371, !dbg !12661

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12661
  br label %cond.end373, !dbg !12661

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12661
  br label %cond.end375, !dbg !12661

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12661
  br label %cond.end377, !dbg !12661

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12661
  br label %cond.end379, !dbg !12661

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12661
  br label %cond.end381, !dbg !12661

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12661
  br label %cond.end383, !dbg !12661

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12661
  br label %cond.end385, !dbg !12661

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12661
  br label %cond.end387, !dbg !12661

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12661
  br label %cond.end389, !dbg !12661

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12661
  br label %cond.end391, !dbg !12661

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12661
  br label %cond.end393, !dbg !12661

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12661
  br label %cond.end395, !dbg !12661

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12661
  br label %cond.end397, !dbg !12661

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12661
  br label %cond.end399, !dbg !12661

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12661
  br label %cond.end401, !dbg !12661

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12661
  br label %cond.end403, !dbg !12661

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12661
  br label %cond.end405, !dbg !12661

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12661
  br label %cond.end407, !dbg !12661

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12661
  br label %cond.end409, !dbg !12661

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12661
  br label %cond.end411, !dbg !12661

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12661
  br label %cond.end413, !dbg !12661

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12661
  br label %cond.end415, !dbg !12661

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12661
  br label %cond.end417, !dbg !12661

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12661
  br label %cond.end419, !dbg !12661

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12661
  br label %cond.end421, !dbg !12661

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12661
  br label %cond.end423, !dbg !12661

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12661
  br label %cond.end425, !dbg !12661

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12661
  br label %cond.end427, !dbg !12661

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12661
  br label %cond.end429, !dbg !12661

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12661
  br label %cond.end431, !dbg !12661

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12661
  br label %cond.end433, !dbg !12661

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12661
  br label %cond.end435, !dbg !12661

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12661
  br label %cond.end437, !dbg !12661

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12661
  br label %cond.end440, !dbg !12661

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12661

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12661
  br label %cond.end444, !dbg !12661

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12661
  %sub443 = sub i64 %72, 1, !dbg !12661
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !12661
  br label %cond.end444, !dbg !12661

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12661
  %sub446 = sub i32 %cond445, 12, !dbg !12662
  %add = add i32 %sub446, 1, !dbg !12663
  store i32 %add, i32* %retval, align 4, !dbg !12664
  br label %return, !dbg !12664

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12665
  %dec = add i64 %73, -1, !dbg !12665
  store i64 %dec, i64* %size.addr, align 8, !dbg !12665
  %74 = load i64, i64* %size.addr, align 8, !dbg !12666
  %shr = lshr i64 %74, 12, !dbg !12666
  store i64 %shr, i64* %size.addr, align 8, !dbg !12666
  %75 = load i64, i64* %size.addr, align 8, !dbg !12667
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12644
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12668
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12669
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !12668, !srcloc !12670
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12668
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12671
  %add.i = add i32 %79, 1, !dbg !12672
  store i32 %add.i, i32* %retval, align 4, !dbg !12673
  br label %return, !dbg !12673

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12674
  ret i32 %80, !dbg !12674
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !12675 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12637, metadata !DIExpression()), !dbg !12679
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12643, metadata !DIExpression()), !dbg !12681
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  %0 = load i64, i64* %n.addr, align 8, !dbg !12684
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12681
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12685
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12686
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !12685, !srcloc !12670
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12685
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12687
  %add.i = add i32 %4, 1, !dbg !12688
  %sub = sub i32 %add.i, 1, !dbg !12689
  ret i32 %sub, !dbg !12690
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #3 !dbg !12691 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12699, metadata !DIExpression()), !dbg !12700
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12703
  ret i8* %0, !dbg !12704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #3 !dbg !12705 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12706, metadata !DIExpression()), !dbg !12708
  %0 = load i64, i64* %__edi, align 8, !dbg !12708
  store i64 %0, i64* %__edi, align 8, !dbg !12708
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12709, metadata !DIExpression()), !dbg !12708
  %1 = load i64, i64* %__esi, align 8, !dbg !12708
  store i64 %1, i64* %__esi, align 8, !dbg !12708
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12710, metadata !DIExpression()), !dbg !12708
  %2 = load i64, i64* %__edx, align 8, !dbg !12708
  store i64 %2, i64* %__edx, align 8, !dbg !12708
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12711, metadata !DIExpression()), !dbg !12708
  %3 = load i64, i64* %__ecx, align 8, !dbg !12708
  store i64 %3, i64* %__ecx, align 8, !dbg !12708
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12712, metadata !DIExpression()), !dbg !12708
  %4 = load i64, i64* %__eax, align 8, !dbg !12708
  store i64 %4, i64* %__eax, align 8, !dbg !12708
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !12708
  %6 = call i64 @llvm.read_register.i64(metadata !4755), !dbg !12708
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !12708, !srcloc !12713
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12708
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12708
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12708
  call void @llvm.write_register.i64(metadata !4755, i64 %asmresult1), !dbg !12708
  ret void, !dbg !12714
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #3 !dbg !12715 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12722, metadata !DIExpression()), !dbg !12724
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !12724
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !12725
  %tobool = icmp ne i32 %0, 0, !dbg !12725
  %lnot = xor i1 %tobool, true, !dbg !12725
  %lnot1 = xor i1 %lnot, true, !dbg !12725
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12725
  %conv = sext i32 %lnot.ext to i64, !dbg !12725
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12725
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12724

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12725

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !12727

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !12729

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !12727
  %2 = load i64, i64* %count.addr, align 8, !dbg !12727
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.49, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !12727
  br label %do.body4, !dbg !12727

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !12731

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !12733

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12731

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i64 0, i64 0), i32 134, i32 2313, i64 12) #7, !dbg !12735, !srcloc !12737
  br label %do.end8, !dbg !12735

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #7, !dbg !12738, !srcloc !12740
  br label %do.body9, !dbg !12731

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !12741

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !12731

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !12727

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !12743

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !12727

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !12727

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !12724
  %tobool15 = icmp ne i32 %3, 0, !dbg !12724
  %lnot16 = xor i1 %tobool15, true, !dbg !12724
  %lnot18 = xor i1 %lnot16, true, !dbg !12724
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !12724
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !12724
  store i64 %conv20, i64* %tmp, align 8, !dbg !12725
  %4 = load i64, i64* %tmp, align 8, !dbg !12724
  ret void, !dbg !12745
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #3 !dbg !12746 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12749, metadata !DIExpression()), !dbg !12750
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12751, metadata !DIExpression()), !dbg !12752
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !12753, metadata !DIExpression()), !dbg !12754
  ret void, !dbg !12755
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @tty_port_hangup(%struct.tty_port*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #3 !dbg !12756 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !12759, metadata !DIExpression()), !dbg !12760
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !12761
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #11, !dbg !12761
  %tobool = icmp ne i32 %call, 0, !dbg !12761
  %lnot = xor i1 %tobool, true, !dbg !12761
  %lnot1 = xor i1 %lnot, true, !dbg !12761
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12761
  %conv = sext i32 %lnot.ext to i64, !dbg !12761
  %conv2 = trunc i64 %conv to i32, !dbg !12761
  ret i32 %conv2, !dbg !12762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #3 !dbg !12763 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !12768, metadata !DIExpression()), !dbg !12769
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !12770
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #11, !dbg !12771
  %1 = load i32, i32* %flag.addr, align 4, !dbg !12772
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #11, !dbg !12773
  ret i32 %call1, !dbg !12774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #3 !dbg !12775 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !12779, metadata !DIExpression()), !dbg !12780
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  %0 = load i32, i32* %flag.addr, align 4, !dbg !12783
  %conv = sext i32 %0 to i64, !dbg !12783
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !12784
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !12785
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #11, !dbg !12786
  %conv1 = zext i1 %call to i32, !dbg !12786
  ret i32 %conv1, !dbg !12787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #3 !dbg !12788 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !12791, metadata !DIExpression()), !dbg !12792
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !12793
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !12794
  ret %struct.thread_info* %thread_info, !dbg !12795
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_read_register(i32 %port, i16* %regs) #0 section ".init.text" !dbg !12796 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %regs.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %value = alloca i32, align 4
  %id = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12800, metadata !DIExpression()), !dbg !12801
  store i16* %regs, i16** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %regs.addr, metadata !12802, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12804, metadata !DIExpression()), !dbg !12805
  call void @llvm.dbg.declare(metadata i32* %k, metadata !12806, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.declare(metadata i32* %value, metadata !12808, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.declare(metadata i32* %id, metadata !12810, metadata !DIExpression()), !dbg !12811
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12812, metadata !DIExpression()), !dbg !12813
  %0 = load i32, i32* %port.addr, align 4, !dbg !12814
  %call = call i32 @mxser_program_mode(i32 %0) #12, !dbg !12815
  store i32 %call, i32* %id, align 4, !dbg !12816
  %1 = load i32, i32* %id, align 4, !dbg !12817
  %cmp = icmp slt i32 %1, 0, !dbg !12819
  br i1 %cmp, label %if.then, label %if.end, !dbg !12820

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %id, align 4, !dbg !12821
  store i32 %2, i32* %retval, align 4, !dbg !12822
  br label %return, !dbg !12822

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12823
  br label %for.cond, !dbg !12825

for.cond:                                         ; preds = %for.inc22, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !12826
  %cmp1 = icmp slt i32 %3, 14, !dbg !12828
  br i1 %cmp1, label %for.body, label %for.end24, !dbg !12829

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !12830
  %and = and i32 %4, 63, !dbg !12832
  %or = or i32 %and, 384, !dbg !12833
  store i32 %or, i32* %k, align 4, !dbg !12834
  store i32 256, i32* %j, align 4, !dbg !12835
  br label %for.cond2, !dbg !12837

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !12838
  %cmp3 = icmp ugt i32 %5, 0, !dbg !12840
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !12841

for.body4:                                        ; preds = %for.cond2
  %6 = load i32, i32* %port.addr, align 4, !dbg !12842
  call void @outb(i8 zeroext 4, i32 %6) #11, !dbg !12844
  %7 = load i32, i32* %k, align 4, !dbg !12845
  %8 = load i32, i32* %j, align 4, !dbg !12847
  %and5 = and i32 %7, %8, !dbg !12848
  %tobool = icmp ne i32 %and5, 0, !dbg !12848
  br i1 %tobool, label %if.then6, label %if.else, !dbg !12849

if.then6:                                         ; preds = %for.body4
  %9 = load i32, i32* %port.addr, align 4, !dbg !12850
  call void @outb(i8 zeroext 6, i32 %9) #11, !dbg !12852
  %10 = load i32, i32* %port.addr, align 4, !dbg !12853
  call void @outb(i8 zeroext 7, i32 %10) #11, !dbg !12854
  br label %if.end7, !dbg !12855

if.else:                                          ; preds = %for.body4
  %11 = load i32, i32* %port.addr, align 4, !dbg !12856
  call void @outb(i8 zeroext 4, i32 %11) #11, !dbg !12858
  %12 = load i32, i32* %port.addr, align 4, !dbg !12859
  call void @outb(i8 zeroext 5, i32 %12) #11, !dbg !12860
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then6
  br label %for.inc, !dbg !12861

for.inc:                                          ; preds = %if.end7
  %13 = load i32, i32* %j, align 4, !dbg !12862
  %shr = lshr i32 %13, 1, !dbg !12862
  store i32 %shr, i32* %j, align 4, !dbg !12862
  br label %for.cond2, !dbg !12863, !llvm.loop !12864

for.end:                                          ; preds = %for.cond2
  %14 = load i32, i32* %port.addr, align 4, !dbg !12866
  %call8 = call zeroext i8 @inb(i32 %14) #11, !dbg !12867
  store i32 0, i32* %value, align 4, !dbg !12868
  store i32 0, i32* %k, align 4, !dbg !12869
  store i32 32768, i32* %j, align 4, !dbg !12871
  br label %for.cond9, !dbg !12872

for.cond9:                                        ; preds = %for.inc18, %for.end
  %15 = load i32, i32* %k, align 4, !dbg !12873
  %cmp10 = icmp slt i32 %15, 16, !dbg !12875
  br i1 %cmp10, label %for.body11, label %for.end20, !dbg !12876

for.body11:                                       ; preds = %for.cond9
  %16 = load i32, i32* %port.addr, align 4, !dbg !12877
  call void @outb(i8 zeroext 4, i32 %16) #11, !dbg !12879
  %17 = load i32, i32* %port.addr, align 4, !dbg !12880
  call void @outb(i8 zeroext 5, i32 %17) #11, !dbg !12881
  %18 = load i32, i32* %port.addr, align 4, !dbg !12882
  %call12 = call zeroext i8 @inb(i32 %18) #11, !dbg !12884
  %conv = zext i8 %call12 to i32, !dbg !12884
  %and13 = and i32 %conv, 8, !dbg !12885
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12885
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !12886

if.then15:                                        ; preds = %for.body11
  %19 = load i32, i32* %j, align 4, !dbg !12887
  %20 = load i32, i32* %value, align 4, !dbg !12888
  %or16 = or i32 %20, %19, !dbg !12888
  store i32 %or16, i32* %value, align 4, !dbg !12888
  br label %if.end17, !dbg !12889

if.end17:                                         ; preds = %if.then15, %for.body11
  br label %for.inc18, !dbg !12890

for.inc18:                                        ; preds = %if.end17
  %21 = load i32, i32* %k, align 4, !dbg !12891
  %inc = add i32 %21, 1, !dbg !12891
  store i32 %inc, i32* %k, align 4, !dbg !12891
  %22 = load i32, i32* %j, align 4, !dbg !12892
  %shr19 = lshr i32 %22, 1, !dbg !12892
  store i32 %shr19, i32* %j, align 4, !dbg !12892
  br label %for.cond9, !dbg !12893, !llvm.loop !12894

for.end20:                                        ; preds = %for.cond9
  %23 = load i32, i32* %value, align 4, !dbg !12896
  %conv21 = trunc i32 %23 to i16, !dbg !12896
  %24 = load i16*, i16** %regs.addr, align 8, !dbg !12897
  %25 = load i32, i32* %i, align 4, !dbg !12898
  %idxprom = sext i32 %25 to i64, !dbg !12897
  %arrayidx = getelementptr i16, i16* %24, i64 %idxprom, !dbg !12897
  store i16 %conv21, i16* %arrayidx, align 2, !dbg !12899
  %26 = load i32, i32* %port.addr, align 4, !dbg !12900
  call void @outb(i8 zeroext 0, i32 %26) #11, !dbg !12901
  br label %for.inc22, !dbg !12902

for.inc22:                                        ; preds = %for.end20
  %27 = load i32, i32* %i, align 4, !dbg !12903
  %inc23 = add i32 %27, 1, !dbg !12903
  store i32 %inc23, i32* %i, align 4, !dbg !12903
  br label %for.cond, !dbg !12904, !llvm.loop !12905

for.end24:                                        ; preds = %for.cond
  %28 = load i32, i32* %port.addr, align 4, !dbg !12907
  call void @mxser_normal_mode(i32 %28) #12, !dbg !12908
  %29 = load i32, i32* %id, align 4, !dbg !12909
  store i32 %29, i32* %retval, align 4, !dbg !12910
  br label %return, !dbg !12910

return:                                           ; preds = %for.end24, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !12911
  ret i32 %30, !dbg !12911
}

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_request_vector(%struct.mxser_board* %brd) #3 !dbg !12912 {
entry:
  %retval = alloca i32, align 4
  %brd.addr = alloca %struct.mxser_board*, align 8
  store %struct.mxser_board* %brd, %struct.mxser_board** %brd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mxser_board** %brd.addr, metadata !12913, metadata !DIExpression()), !dbg !12914
  %0 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !12915
  %call = call zeroext i1 @mxser_overlapping_vector(%struct.mxser_board* %0) #11, !dbg !12917
  br i1 %call, label %if.then, label %if.end, !dbg !12918

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12919
  br label %return, !dbg !12919

if.end:                                           ; preds = %entry
  %1 = load %struct.mxser_board*, %struct.mxser_board** %brd.addr, align 8, !dbg !12920
  %vector = getelementptr inbounds %struct.mxser_board, %struct.mxser_board* %1, i32 0, i32 3, !dbg !12920
  %2 = load i64, i64* %vector, align 8, !dbg !12920
  %call1 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %2, i64 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 0) #11, !dbg !12920
  %tobool = icmp ne %struct.resource* %call1, null, !dbg !12920
  %3 = zext i1 %tobool to i64, !dbg !12920
  %cond = select i1 %tobool, i32 0, i32 -5, !dbg !12920
  store i32 %cond, i32* %retval, align 4, !dbg !12921
  br label %return, !dbg !12921

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !12922
  ret i32 %4, !dbg !12922
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @mxser_program_mode(i32 %port) #0 section ".init.text" !dbg !12923 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %id = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata i32* %id, metadata !12926, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12928, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12930, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.declare(metadata i32* %n, metadata !12932, metadata !DIExpression()), !dbg !12933
  %0 = load i32, i32* %port.addr, align 4, !dbg !12934
  call void @outb(i8 zeroext 0, i32 %0) #11, !dbg !12935
  %1 = load i32, i32* %port.addr, align 4, !dbg !12936
  call void @outb(i8 zeroext 0, i32 %1) #11, !dbg !12937
  %2 = load i32, i32* %port.addr, align 4, !dbg !12938
  call void @outb(i8 zeroext 0, i32 %2) #11, !dbg !12939
  %3 = load i32, i32* %port.addr, align 4, !dbg !12940
  %call = call zeroext i8 @inb(i32 %3) #11, !dbg !12941
  %4 = load i32, i32* %port.addr, align 4, !dbg !12942
  %call1 = call zeroext i8 @inb(i32 %4) #11, !dbg !12943
  %5 = load i32, i32* %port.addr, align 4, !dbg !12944
  call void @outb(i8 zeroext 0, i32 %5) #11, !dbg !12945
  %6 = load i32, i32* %port.addr, align 4, !dbg !12946
  %call2 = call zeroext i8 @inb(i32 %6) #11, !dbg !12947
  %7 = load i32, i32* %port.addr, align 4, !dbg !12948
  %add = add i32 %7, 1, !dbg !12949
  %call3 = call zeroext i8 @inb(i32 %add) #11, !dbg !12950
  %conv = zext i8 %call3 to i32, !dbg !12950
  %and = and i32 %conv, 31, !dbg !12951
  store i32 %and, i32* %id, align 4, !dbg !12952
  %8 = load i32, i32* %id, align 4, !dbg !12953
  %cmp = icmp ne i32 %8, 1, !dbg !12955
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12956

land.lhs.true:                                    ; preds = %entry
  %9 = load i32, i32* %id, align 4, !dbg !12957
  %cmp5 = icmp ne i32 %9, 2, !dbg !12958
  br i1 %cmp5, label %land.lhs.true7, label %if.end, !dbg !12959

land.lhs.true7:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %id, align 4, !dbg !12960
  %cmp8 = icmp ne i32 %10, 11, !dbg !12961
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !12962

land.lhs.true10:                                  ; preds = %land.lhs.true7
  %11 = load i32, i32* %id, align 4, !dbg !12963
  %cmp11 = icmp ne i32 %11, 4, !dbg !12964
  br i1 %cmp11, label %land.lhs.true13, label %if.end, !dbg !12965

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %12 = load i32, i32* %id, align 4, !dbg !12966
  %cmp14 = icmp ne i32 %12, 3, !dbg !12967
  br i1 %cmp14, label %land.lhs.true16, label %if.end, !dbg !12968

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %13 = load i32, i32* %id, align 4, !dbg !12969
  %cmp17 = icmp ne i32 %13, 5, !dbg !12970
  br i1 %cmp17, label %if.then, label %if.end, !dbg !12971

if.then:                                          ; preds = %land.lhs.true16
  store i32 -1, i32* %retval, align 4, !dbg !12972
  br label %return, !dbg !12972

if.end:                                           ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true10, %land.lhs.true7, %land.lhs.true, %entry
  store i32 0, i32* %i, align 4, !dbg !12973
  store i32 0, i32* %j, align 4, !dbg !12975
  br label %for.cond, !dbg !12976

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !12977
  %cmp19 = icmp slt i32 %14, 4, !dbg !12979
  br i1 %cmp19, label %for.body, label %for.end, !dbg !12980

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %port.addr, align 4, !dbg !12981
  %add21 = add i32 %15, 2, !dbg !12983
  %call22 = call zeroext i8 @inb(i32 %add21) #11, !dbg !12984
  %conv23 = zext i8 %call22 to i32, !dbg !12984
  store i32 %conv23, i32* %n, align 4, !dbg !12985
  %16 = load i32, i32* %n, align 4, !dbg !12986
  %cmp24 = icmp eq i32 %16, 77, !dbg !12988
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !12989

if.then26:                                        ; preds = %for.body
  store i32 1, i32* %j, align 4, !dbg !12990
  br label %if.end35, !dbg !12992

if.else:                                          ; preds = %for.body
  %17 = load i32, i32* %j, align 4, !dbg !12993
  %cmp27 = icmp eq i32 %17, 1, !dbg !12995
  br i1 %cmp27, label %land.lhs.true29, label %if.else33, !dbg !12996

land.lhs.true29:                                  ; preds = %if.else
  %18 = load i32, i32* %n, align 4, !dbg !12997
  %cmp30 = icmp eq i32 %18, 1, !dbg !12998
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !12999

if.then32:                                        ; preds = %land.lhs.true29
  store i32 2, i32* %j, align 4, !dbg !13000
  br label %for.end, !dbg !13002

if.else33:                                        ; preds = %land.lhs.true29, %if.else
  store i32 0, i32* %j, align 4, !dbg !13003
  br label %if.end34

if.end34:                                         ; preds = %if.else33
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then26
  br label %for.inc, !dbg !13004

for.inc:                                          ; preds = %if.end35
  %19 = load i32, i32* %i, align 4, !dbg !13005
  %inc = add i32 %19, 1, !dbg !13005
  store i32 %inc, i32* %i, align 4, !dbg !13005
  br label %for.cond, !dbg !13006, !llvm.loop !13007

for.end:                                          ; preds = %if.then32, %for.cond
  %20 = load i32, i32* %j, align 4, !dbg !13009
  %cmp36 = icmp ne i32 %20, 2, !dbg !13011
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !13012

if.then38:                                        ; preds = %for.end
  store i32 -2, i32* %id, align 4, !dbg !13013
  br label %if.end39, !dbg !13014

if.end39:                                         ; preds = %if.then38, %for.end
  %21 = load i32, i32* %id, align 4, !dbg !13015
  store i32 %21, i32* %retval, align 4, !dbg !13016
  br label %return, !dbg !13016

return:                                           ; preds = %if.end39, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !13017
  ret i32 %22, !dbg !13017
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @mxser_normal_mode(i32 %port) #0 section ".init.text" !dbg !13018 {
entry:
  %port.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !13019, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13021, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13023, metadata !DIExpression()), !dbg !13024
  %0 = load i32, i32* %port.addr, align 4, !dbg !13025
  %add = add i32 %0, 1, !dbg !13026
  call void @outb(i8 zeroext -91, i32 %add) #11, !dbg !13027
  %1 = load i32, i32* %port.addr, align 4, !dbg !13028
  %add1 = add i32 %1, 3, !dbg !13029
  call void @outb(i8 zeroext -128, i32 %add1) #11, !dbg !13030
  %2 = load i32, i32* %port.addr, align 4, !dbg !13031
  %add2 = add i32 %2, 0, !dbg !13032
  call void @outb(i8 zeroext 12, i32 %add2) #11, !dbg !13033
  %3 = load i32, i32* %port.addr, align 4, !dbg !13034
  %add3 = add i32 %3, 1, !dbg !13035
  call void @outb(i8 zeroext 0, i32 %add3) #11, !dbg !13036
  %4 = load i32, i32* %port.addr, align 4, !dbg !13037
  %add4 = add i32 %4, 3, !dbg !13038
  call void @outb(i8 zeroext 3, i32 %add4) #11, !dbg !13039
  %5 = load i32, i32* %port.addr, align 4, !dbg !13040
  %add5 = add i32 %5, 4, !dbg !13041
  call void @outb(i8 zeroext 19, i32 %add5) #11, !dbg !13042
  store i32 0, i32* %i, align 4, !dbg !13043
  br label %for.cond, !dbg !13045

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !13046
  %cmp = icmp slt i32 %6, 16, !dbg !13048
  br i1 %cmp, label %for.body, label %for.end, !dbg !13049

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %port.addr, align 4, !dbg !13050
  %add6 = add i32 %7, 5, !dbg !13052
  %call = call zeroext i8 @inb(i32 %add6) #11, !dbg !13053
  %conv = zext i8 %call to i32, !dbg !13053
  store i32 %conv, i32* %n, align 4, !dbg !13054
  %8 = load i32, i32* %n, align 4, !dbg !13055
  %and = and i32 %8, 97, !dbg !13057
  %cmp7 = icmp eq i32 %and, 96, !dbg !13058
  br i1 %cmp7, label %if.then, label %if.end, !dbg !13059

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !13060

if.end:                                           ; preds = %for.body
  %9 = load i32, i32* %n, align 4, !dbg !13061
  %and9 = and i32 %9, 1, !dbg !13063
  %cmp10 = icmp eq i32 %and9, 1, !dbg !13064
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !13065

if.then12:                                        ; preds = %if.end
  %10 = load i32, i32* %port.addr, align 4, !dbg !13066
  %call13 = call zeroext i8 @inb(i32 %10) #11, !dbg !13067
  br label %if.end14, !dbg !13068

if.end14:                                         ; preds = %if.then12, %if.end
  br label %for.inc, !dbg !13069

for.inc:                                          ; preds = %if.end14
  %11 = load i32, i32* %i, align 4, !dbg !13070
  %inc = add i32 %11, 1, !dbg !13070
  store i32 %inc, i32* %i, align 4, !dbg !13070
  br label %for.cond, !dbg !13071, !llvm.loop !13072

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32, i32* %port.addr, align 4, !dbg !13074
  %add15 = add i32 %12, 4, !dbg !13075
  call void @outb(i8 zeroext 0, i32 %add15) #11, !dbg !13076
  ret void, !dbg !13077
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4755}
!llvm.module.flags = !{!4756, !4757, !4758, !4759}
!llvm.ident = !{!4760}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author240", scope: !2, file: !3, line: 180, type: !4752, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !111, globals: !4290, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/tty/mxser.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !98, !104}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !94, line: 10, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97}
!96 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !99, line: 11, baseType: !7, size: 32, elements: !100)
!99 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!100 = !{!101, !102, !103}
!101 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !105, line: 305, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110}
!107 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!111 = !{!112, !113, !114, !145, !773, !4053, !4284, !4286, !413, !4287, !1361, !4288, !274, !309, !623, !698, !4289, !1230}
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!113 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_port", file: !3, line: 220, size: 4288, elements: !116)
!116 = !{!117, !4215, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4283}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !115, file: !3, line: 221, baseType: !118, size: 2432)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !119, line: 230, size: 2432, elements: !120)
!119 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !212, !4165, !4166, !4188, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !118, file: !119, line: 231, baseType: !122, size: 1024)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !119, line: 85, size: 1024, elements: !123)
!123 = !{!124, !148, !177, !199, !204, !205, !209, !210, !211}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !122, file: !119, line: 86, baseType: !125, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !119, line: 58, size: 256, elements: !127)
!127 = !{!128, !138, !139, !140, !141, !142, !143}
!128 = !DIDerivedType(tag: DW_TAG_member, scope: !126, file: !119, line: 59, baseType: !129, size: 64)
!129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !126, file: !119, line: 59, size: 64, elements: !130)
!130 = !{!131, !132}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !129, file: !119, line: 60, baseType: !125, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !129, file: !119, line: 61, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !134, line: 58, size: 64, elements: !135)
!134 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!135 = !{!136}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !133, file: !134, line: 59, baseType: !137, size: 64)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !126, file: !119, line: 63, baseType: !113, size: 32, offset: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !126, file: !119, line: 64, baseType: !113, size: 32, offset: 96)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !126, file: !119, line: 65, baseType: !113, size: 32, offset: 128)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !126, file: !119, line: 66, baseType: !113, size: 32, offset: 160)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !126, file: !119, line: 67, baseType: !113, size: 32, offset: 192)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !126, file: !119, line: 69, baseType: !144, offset: 256)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, elements: !146)
!145 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!146 = !{!147}
!147 = !DISubrange(count: -1)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !122, file: !119, line: 87, baseType: !149, size: 256, offset: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !150, line: 102, size: 256, elements: !151)
!150 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!151 = !{!152, !165, !171}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !149, file: !150, line: 103, baseType: !153, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !154, line: 13, baseType: !155)
!154 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !156, line: 175, baseType: !157)
!156 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 173, size: 64, elements: !158)
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !157, file: !156, line: 174, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !161, line: 22, baseType: !162)
!161 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !163, line: 30, baseType: !164)
!163 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!164 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !149, file: !150, line: 104, baseType: !166, size: 128, offset: 64)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !156, line: 178, size: 128, elements: !167)
!167 = !{!168, !170}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !166, file: !156, line: 179, baseType: !169, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !166, file: !156, line: 179, baseType: !169, size: 64, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !149, file: !150, line: 105, baseType: !172, size: 64, offset: 192)
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !150, line: 21, baseType: !173)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DISubroutineType(types: !175)
!175 = !{null, !176}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !122, file: !119, line: 88, baseType: !178, size: 192, offset: 320)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !179, line: 53, size: 192, elements: !180)
!179 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!180 = !{!181, !182, !198}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !178, file: !179, line: 54, baseType: !153, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !178, file: !179, line: 55, baseType: !183, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !184, line: 83, baseType: !185)
!184 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !184, line: 71, elements: !186)
!186 = !{!187}
!187 = !DIDerivedType(tag: DW_TAG_member, scope: !185, file: !184, line: 72, baseType: !188)
!188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !185, file: !184, line: 72, elements: !189)
!189 = !{!190}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !188, file: !184, line: 73, baseType: !191)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !184, line: 20, elements: !192)
!192 = !{!193}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !191, file: !184, line: 21, baseType: !194)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !195, line: 25, baseType: !196)
!195 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !195, line: 25, elements: !197)
!197 = !{}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !178, file: !179, line: 59, baseType: !166, size: 128, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !122, file: !119, line: 89, baseType: !200, size: 32, offset: 512)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !156, line: 168, baseType: !201)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !156, line: 166, size: 32, elements: !202)
!202 = !{!203}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !201, file: !156, line: 167, baseType: !113, size: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !122, file: !119, line: 90, baseType: !126, size: 256, offset: 576)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !122, file: !119, line: 91, baseType: !206, size: 64, offset: 832)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !134, line: 54, size: 64, elements: !207)
!207 = !{!208}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !206, file: !134, line: 55, baseType: !137, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !122, file: !119, line: 92, baseType: !200, size: 32, offset: 896)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !122, file: !119, line: 93, baseType: !113, size: 32, offset: 928)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !122, file: !119, line: 94, baseType: !125, size: 64, offset: 960)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !118, file: !119, line: 232, baseType: !213, size: 64, offset: 1024)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !119, line: 285, size: 5056, elements: !215)
!215 = !{!216, !217, !227, !3851, !4064, !4065, !4066, !4075, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !214, file: !119, line: 286, baseType: !113, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !214, file: !119, line: 287, baseType: !218, size: 32, offset: 32)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !219, line: 19, size: 32, elements: !220)
!219 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !218, file: !219, line: 20, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !223, line: 113, baseType: !224)
!223 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !223, line: 111, size: 32, elements: !225)
!225 = !{!226}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !224, file: !223, line: 112, baseType: !200, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !214, file: !119, line: 288, baseType: !228, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !230)
!230 = !{!231, !3405, !3406, !3409, !3410, !3461, !3552, !3553, !3554, !3555, !3556, !3565, !3670, !3683, !3686, !3687, !3691, !3693, !3694, !3695, !3699, !3705, !3706, !3709, !3713, !3803, !3804, !3805, !3806, !3807, !3839, !3840, !3841, !3844, !3847, !3848, !3849, !3850}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !229, file: !73, line: 462, baseType: !232, size: 512)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !233, line: 64, size: 512, elements: !234)
!233 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!234 = !{!235, !239, !240, !242, !287, !3278, !3399, !3400, !3401, !3402, !3403, !3404}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !232, file: !233, line: 65, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!238 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !232, file: !233, line: 66, baseType: !166, size: 128, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !232, file: !233, line: 67, baseType: !241, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !232, file: !233, line: 68, baseType: !243, size: 64, offset: 256)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !233, line: 192, size: 704, elements: !245)
!245 = !{!246, !247, !248, !249}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !244, file: !233, line: 193, baseType: !166, size: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !244, file: !233, line: 194, baseType: !183, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !244, file: !233, line: 195, baseType: !232, size: 512, offset: 128)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !244, file: !233, line: 196, baseType: !250, size: 64, offset: 640)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !233, line: 156, size: 192, elements: !253)
!253 = !{!254, !259, !264}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !252, file: !233, line: 157, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DISubroutineType(types: !258)
!258 = !{!113, !243, !241}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !252, file: !233, line: 158, baseType: !260, size: 64, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DISubroutineType(types: !263)
!263 = !{!236, !243, !241}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !252, file: !233, line: 159, baseType: !265, size: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!113, !243, !241, !269}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !233, line: 148, size: 20736, elements: !271)
!271 = !{!272, !277, !281, !282, !286}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !270, file: !233, line: 149, baseType: !273, size: 192)
!273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 192, elements: !275)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!275 = !{!276}
!276 = !DISubrange(count: 3)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !270, file: !233, line: 150, baseType: !278, size: 4096, offset: 192)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 4096, elements: !279)
!279 = !{!280}
!280 = !DISubrange(count: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !270, file: !233, line: 151, baseType: !113, size: 32, offset: 4288)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !270, file: !233, line: 152, baseType: !283, size: 16384, offset: 4320)
!283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 16384, elements: !284)
!284 = !{!285}
!285 = !DISubrange(count: 2048)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !270, file: !233, line: 153, baseType: !113, size: 32, offset: 20704)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !232, file: !233, line: 69, baseType: !288, size: 64, offset: 320)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !233, line: 138, size: 448, elements: !290)
!290 = !{!291, !295, !324, !326, !3240, !3268, !3272}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !289, file: !233, line: 139, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DISubroutineType(types: !294)
!294 = !{null, !241}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !289, file: !233, line: 140, baseType: !296, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !299, line: 230, size: 128, elements: !300)
!299 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!300 = !{!301, !317}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !298, file: !299, line: 231, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!305, !241, !310, !274}
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !156, line: 60, baseType: !306)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !307, line: 73, baseType: !308)
!307 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !307, line: 15, baseType: !309)
!309 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !299, line: 30, size: 128, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !311, file: !299, line: 31, baseType: !236, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !311, file: !299, line: 32, baseType: !315, size: 16, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !156, line: 19, baseType: !316)
!316 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !298, file: !299, line: 232, baseType: !318, size: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!305, !241, !310, !236, !321}
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !156, line: 55, baseType: !322)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !307, line: 72, baseType: !323)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !307, line: 16, baseType: !145)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !289, file: !233, line: 141, baseType: !325, size: 64, offset: 128)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !289, file: !233, line: 142, baseType: !327, size: 64, offset: 192)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !299, line: 84, size: 320, elements: !331)
!331 = !{!332, !333, !337, !3237, !3238}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !330, file: !299, line: 85, baseType: !236, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !330, file: !299, line: 86, baseType: !334, size: 64, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!315, !241, !310, !113}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !330, file: !299, line: 88, baseType: !338, size: 64, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!339 = !DISubroutineType(types: !340)
!340 = !{!315, !241, !341, !113}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !299, line: 168, size: 448, elements: !343)
!343 = !{!344, !345, !346, !347, !3232, !3233}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !342, file: !299, line: 169, baseType: !311, size: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !342, file: !299, line: 170, baseType: !321, size: 64, offset: 128)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !342, file: !299, line: 171, baseType: !112, size: 64, offset: 192)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !342, file: !299, line: 172, baseType: !348, size: 64, offset: 256)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = !DISubroutineType(types: !350)
!350 = !{!305, !351, !241, !341, !274, !523, !321}
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !353)
!353 = !{!354, !367, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3215, !3216, !3225, !3226, !3227, !3228, !3229, !3230, !3231}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !352, file: !44, line: 920, baseType: !355, size: 128)
!355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !352, file: !44, line: 917, size: 128, elements: !356)
!356 = !{!357, !358}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !355, file: !44, line: 918, baseType: !133, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !355, file: !44, line: 919, baseType: !359, size: 128, align: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !156, line: 216, size: 128, align: 64, elements: !360)
!360 = !{!361, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !359, file: !156, line: 217, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !359, file: !156, line: 218, baseType: !364, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{null, !362}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !352, file: !44, line: 921, baseType: !368, size: 128, offset: 128)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !369, line: 8, size: 128, elements: !370)
!369 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!370 = !{!371, !375}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !368, file: !369, line: 9, baseType: !372, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !374, line: 18, flags: DIFlagFwdDecl)
!374 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!375 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !368, file: !369, line: 10, baseType: !376, size: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !374, line: 89, size: 1536, elements: !378)
!378 = !{!379, !380, !390, !398, !399, !420, !3165, !3167, !3179, !3180, !3181, !3182, !3183, !3189, !3190, !3191}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !377, file: !374, line: 91, baseType: !7, size: 32)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !377, file: !374, line: 92, baseType: !381, size: 32, offset: 32)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !382, line: 277, baseType: !383)
!382 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !382, line: 277, size: 32, elements: !384)
!384 = !{!385}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !383, file: !382, line: 277, baseType: !386, size: 32)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !382, line: 70, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !382, line: 65, size: 32, elements: !388)
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !387, file: !382, line: 66, baseType: !7, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !377, file: !374, line: 93, baseType: !391, size: 128, offset: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !392, line: 38, size: 128, elements: !393)
!392 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!393 = !{!394, !396}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !391, file: !392, line: 39, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !391, file: !392, line: 39, baseType: !397, size: 64, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !377, file: !374, line: 94, baseType: !376, size: 64, offset: 192)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !377, file: !374, line: 95, baseType: !400, size: 128, offset: 256)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !374, line: 47, size: 128, elements: !401)
!401 = !{!402, !416}
!402 = !DIDerivedType(tag: DW_TAG_member, scope: !400, file: !374, line: 48, baseType: !403, size: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !400, file: !374, line: 48, size: 64, elements: !404)
!404 = !{!405, !412}
!405 = !DIDerivedType(tag: DW_TAG_member, scope: !403, file: !374, line: 49, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !403, file: !374, line: 49, size: 64, elements: !407)
!407 = !{!408, !411}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !406, file: !374, line: 50, baseType: !409, size: 32)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !161, line: 21, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !163, line: 27, baseType: !7)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !406, file: !374, line: 50, baseType: !409, size: 32, offset: 32)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !403, file: !374, line: 52, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !161, line: 23, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !163, line: 31, baseType: !415)
!415 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !400, file: !374, line: 54, baseType: !417, size: 64, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !377, file: !374, line: 96, baseType: !421, size: 64, offset: 384)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !423)
!423 = !{!424, !425, !426, !434, !441, !442, !588, !2869, !2870, !2871, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !3133, !3141, !3142, !3143, !3161, !3162, !3163, !3164}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !422, file: !44, line: 611, baseType: !315, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !422, file: !44, line: 612, baseType: !316, size: 16, offset: 16)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !422, file: !44, line: 613, baseType: !427, size: 32, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !428, line: 23, baseType: !429)
!428 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 21, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !429, file: !428, line: 22, baseType: !432, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !156, line: 32, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !307, line: 49, baseType: !7)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !422, file: !44, line: 614, baseType: !435, size: 32, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !428, line: 28, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 26, size: 32, elements: !437)
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !436, file: !428, line: 27, baseType: !439, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !156, line: 33, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !307, line: 50, baseType: !7)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !422, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !422, file: !44, line: 622, baseType: !443, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !446)
!446 = !{!447, !451, !464, !468, !474, !478, !484, !488, !492, !496, !500, !501, !507, !511, !535, !564, !568, !574, !579, !583, !584}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !445, file: !44, line: 1865, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!376, !421, !376, !7}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !445, file: !44, line: 1866, baseType: !452, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!236, !376, !421, !455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !457, line: 10, size: 128, elements: !458)
!457 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!458 = !{!459, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !456, file: !457, line: 11, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{null, !112}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !456, file: !457, line: 12, baseType: !112, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !445, file: !44, line: 1867, baseType: !465, size: 64, offset: 128)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!113, !421, !113}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !445, file: !44, line: 1868, baseType: !469, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!472, !421, !113}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !445, file: !44, line: 1870, baseType: !475, size: 64, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!113, !376, !274, !113}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !445, file: !44, line: 1872, baseType: !479, size: 64, offset: 320)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!113, !421, !376, !315, !482}
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !156, line: 30, baseType: !483)
!483 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !445, file: !44, line: 1873, baseType: !485, size: 64, offset: 384)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!113, !376, !421, !376}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !445, file: !44, line: 1874, baseType: !489, size: 64, offset: 448)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!113, !421, !376}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !445, file: !44, line: 1875, baseType: !493, size: 64, offset: 512)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!113, !421, !376, !236}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !445, file: !44, line: 1876, baseType: !497, size: 64, offset: 576)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!113, !421, !376, !315}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !445, file: !44, line: 1877, baseType: !489, size: 64, offset: 640)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !445, file: !44, line: 1878, baseType: !502, size: 64, offset: 704)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!113, !421, !376, !315, !505}
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !156, line: 16, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !156, line: 13, baseType: !409)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !445, file: !44, line: 1879, baseType: !508, size: 64, offset: 768)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!113, !421, !376, !421, !376, !7}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !445, file: !44, line: 1881, baseType: !512, size: 64, offset: 832)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!113, !376, !515}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !517)
!517 = !{!518, !519, !520, !521, !522, !525, !532, !533, !534}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !516, file: !44, line: 220, baseType: !7, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !516, file: !44, line: 221, baseType: !315, size: 16, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !516, file: !44, line: 222, baseType: !427, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !516, file: !44, line: 223, baseType: !435, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !516, file: !44, line: 224, baseType: !523, size: 64, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !156, line: 46, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !307, line: 88, baseType: !164)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !516, file: !44, line: 225, baseType: !526, size: 128, offset: 192)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !527, line: 13, size: 128, elements: !528)
!527 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!528 = !{!529, !531}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !526, file: !527, line: 14, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !527, line: 8, baseType: !162)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !526, file: !527, line: 15, baseType: !309, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !516, file: !44, line: 226, baseType: !526, size: 128, offset: 320)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !516, file: !44, line: 227, baseType: !526, size: 128, offset: 448)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !516, file: !44, line: 234, baseType: !351, size: 64, offset: 576)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !445, file: !44, line: 1882, baseType: !536, size: 64, offset: 896)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!113, !539, !541, !409, !7}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !368)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !543, line: 22, size: 1152, elements: !544)
!543 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!544 = !{!545, !546, !547, !548, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !542, file: !543, line: 23, baseType: !409, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !542, file: !543, line: 24, baseType: !315, size: 16, offset: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !542, file: !543, line: 25, baseType: !7, size: 32, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !542, file: !543, line: 26, baseType: !549, size: 32, offset: 96)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !156, line: 104, baseType: !409)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !542, file: !543, line: 27, baseType: !413, size: 64, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !542, file: !543, line: 28, baseType: !413, size: 64, offset: 192)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !542, file: !543, line: 37, baseType: !413, size: 64, offset: 256)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !542, file: !543, line: 38, baseType: !505, size: 32, offset: 320)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !542, file: !543, line: 39, baseType: !505, size: 32, offset: 352)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !542, file: !543, line: 40, baseType: !427, size: 32, offset: 384)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !542, file: !543, line: 41, baseType: !435, size: 32, offset: 416)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !542, file: !543, line: 42, baseType: !523, size: 64, offset: 448)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !542, file: !543, line: 43, baseType: !526, size: 128, offset: 512)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !542, file: !543, line: 44, baseType: !526, size: 128, offset: 640)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !542, file: !543, line: 45, baseType: !526, size: 128, offset: 768)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !542, file: !543, line: 46, baseType: !526, size: 128, offset: 896)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !542, file: !543, line: 47, baseType: !413, size: 64, offset: 1024)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !542, file: !543, line: 48, baseType: !413, size: 64, offset: 1088)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !445, file: !44, line: 1883, baseType: !565, size: 64, offset: 960)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!305, !376, !274, !321}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !445, file: !44, line: 1884, baseType: !569, size: 64, offset: 1024)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!113, !421, !572, !413, !413}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !445, file: !44, line: 1886, baseType: !575, size: 64, offset: 1088)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!113, !421, !578, !113}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !445, file: !44, line: 1887, baseType: !580, size: 64, offset: 1152)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!113, !421, !376, !351, !7, !315}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !445, file: !44, line: 1890, baseType: !497, size: 64, offset: 1216)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !445, file: !44, line: 1891, baseType: !585, size: 64, offset: 1280)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{!113, !421, !472, !113}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !422, file: !44, line: 623, baseType: !589, size: 64, offset: 192)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !591)
!591 = !{!592, !593, !594, !595, !596, !597, !647, !2476, !2558, !2641, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2657, !2661, !2662, !2665, !2666, !2669, !2670, !2671, !2712, !2739, !2740, !2741, !2742, !2743, !2744, !2747, !2749, !2756, !2757, !2759, !2760, !2761, !2820, !2821, !2836, !2837, !2838, !2839, !2840, !2843, !2844, !2845, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !590, file: !44, line: 1417, baseType: !166, size: 128)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !590, file: !44, line: 1418, baseType: !505, size: 32, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !590, file: !44, line: 1419, baseType: !419, size: 8, offset: 160)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !590, file: !44, line: 1420, baseType: !145, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !590, file: !44, line: 1421, baseType: !523, size: 64, offset: 256)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !590, file: !44, line: 1422, baseType: !598, size: 64, offset: 320)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !600)
!600 = !{!601, !602, !603, !610, !614, !618, !622, !626, !627, !637, !640, !641, !642, !644, !645, !646}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !599, file: !44, line: 2229, baseType: !236, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !599, file: !44, line: 2230, baseType: !113, size: 32, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !599, file: !44, line: 2238, baseType: !604, size: 64, offset: 128)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{!113, !607}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !609, line: 28, flags: DIFlagFwdDecl)
!609 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!610 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !599, file: !44, line: 2239, baseType: !611, size: 64, offset: 192)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !599, file: !44, line: 2240, baseType: !615, size: 64, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DISubroutineType(types: !617)
!617 = !{!376, !598, !113, !236, !112}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !599, file: !44, line: 2242, baseType: !619, size: 64, offset: 320)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !589}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !599, file: !44, line: 2243, baseType: !623, size: 64, offset: 384)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !625, line: 76, flags: DIFlagFwdDecl)
!625 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!626 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !599, file: !44, line: 2244, baseType: !598, size: 64, offset: 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !599, file: !44, line: 2245, baseType: !628, size: 64, offset: 512)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !156, line: 182, size: 64, elements: !629)
!629 = !{!630}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !628, file: !156, line: 183, baseType: !631, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !156, line: 186, size: 128, elements: !633)
!633 = !{!634, !635}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !632, file: !156, line: 187, baseType: !631, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !632, file: !156, line: 187, baseType: !636, size: 64, offset: 64)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !599, file: !44, line: 2247, baseType: !638, offset: 576)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !639, line: 187, elements: !197)
!639 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!640 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !599, file: !44, line: 2248, baseType: !638, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !599, file: !44, line: 2249, baseType: !638, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !599, file: !44, line: 2250, baseType: !643, offset: 576)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !638, elements: !275)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !599, file: !44, line: 2252, baseType: !638, offset: 576)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !599, file: !44, line: 2253, baseType: !638, offset: 576)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !599, file: !44, line: 2254, baseType: !638, offset: 576)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !590, file: !44, line: 1423, baseType: !648, size: 64, offset: 384)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !651)
!651 = !{!652, !656, !660, !661, !665, !671, !675, !676, !677, !681, !685, !686, !687, !688, !694, !699, !700, !743, !744, !745, !746, !2460, !2475}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !650, file: !44, line: 1936, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!421, !589}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !650, file: !44, line: 1937, baseType: !657, size: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{null, !421}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !650, file: !44, line: 1938, baseType: !657, size: 64, offset: 128)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !650, file: !44, line: 1940, baseType: !662, size: 64, offset: 192)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{null, !421, !113}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !650, file: !44, line: 1941, baseType: !666, size: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!113, !421, !669}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !44, line: 289, flags: DIFlagFwdDecl)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !650, file: !44, line: 1942, baseType: !672, size: 64, offset: 320)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!113, !421}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !650, file: !44, line: 1943, baseType: !657, size: 64, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !650, file: !44, line: 1944, baseType: !619, size: 64, offset: 448)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !650, file: !44, line: 1945, baseType: !678, size: 64, offset: 512)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{!113, !589, !113}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !650, file: !44, line: 1946, baseType: !682, size: 64, offset: 576)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!113, !589}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !650, file: !44, line: 1947, baseType: !682, size: 64, offset: 640)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !650, file: !44, line: 1948, baseType: !682, size: 64, offset: 704)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !650, file: !44, line: 1949, baseType: !682, size: 64, offset: 768)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !650, file: !44, line: 1950, baseType: !689, size: 64, offset: 832)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{!113, !376, !692}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !650, file: !44, line: 1951, baseType: !695, size: 64, offset: 896)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!113, !589, !698, !274}
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !650, file: !44, line: 1952, baseType: !619, size: 64, offset: 960)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !650, file: !44, line: 1954, baseType: !701, size: 64, offset: 1024)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{!113, !704, !376}
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !706, line: 16, size: 896, elements: !707)
!706 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!707 = !{!708, !709, !710, !711, !712, !713, !714, !715, !716, !738, !739, !742}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !705, file: !706, line: 17, baseType: !274, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !705, file: !706, line: 18, baseType: !321, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !705, file: !706, line: 19, baseType: !321, size: 64, offset: 128)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !705, file: !706, line: 20, baseType: !321, size: 64, offset: 192)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !705, file: !706, line: 21, baseType: !321, size: 64, offset: 256)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !705, file: !706, line: 22, baseType: !523, size: 64, offset: 320)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !705, file: !706, line: 23, baseType: !523, size: 64, offset: 384)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !705, file: !706, line: 24, baseType: !178, size: 192, offset: 448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !705, file: !706, line: 25, baseType: !717, size: 64, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !706, line: 31, size: 256, elements: !720)
!720 = !{!721, !726, !730, !734}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !719, file: !706, line: 32, baseType: !722, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!112, !704, !725}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !719, file: !706, line: 33, baseType: !727, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{null, !704, !112}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !719, file: !706, line: 34, baseType: !731, size: 64, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!112, !704, !112, !725}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !719, file: !706, line: 35, baseType: !735, size: 64, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DISubroutineType(types: !737)
!737 = !{!113, !704, !112}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !705, file: !706, line: 26, baseType: !113, size: 32, offset: 704)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !705, file: !706, line: 27, baseType: !740, size: 64, offset: 768)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !705, file: !706, line: 28, baseType: !112, size: 64, offset: 832)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !650, file: !44, line: 1955, baseType: !701, size: 64, offset: 1088)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !650, file: !44, line: 1956, baseType: !701, size: 64, offset: 1152)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !650, file: !44, line: 1957, baseType: !701, size: 64, offset: 1216)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !650, file: !44, line: 1963, baseType: !747, size: 64, offset: 1280)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!113, !589, !750, !773}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !752, line: 68, size: 512, align: 128, elements: !753)
!752 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!753 = !{!754, !755, !2452, !2459}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !751, file: !752, line: 69, baseType: !145, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, scope: !751, file: !752, line: 77, baseType: !756, size: 320, offset: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !751, file: !752, line: 77, size: 320, elements: !757)
!757 = !{!758, !935, !940, !968, !976, !982, !2383, !2451}
!758 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 78, baseType: !759, size: 320)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 78, size: 320, elements: !760)
!760 = !{!761, !762, !933, !934}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !759, file: !752, line: 84, baseType: !166, size: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !759, file: !752, line: 86, baseType: !763, size: 64, offset: 128)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !765)
!765 = !{!766, !767, !775, !776, !777, !792, !801, !802, !803, !804, !926, !927, !930, !931, !932}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !764, file: !44, line: 452, baseType: !421, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !764, file: !44, line: 453, baseType: !768, size: 128, offset: 64)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !769, line: 292, size: 128, elements: !770)
!769 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!770 = !{!771, !772, !774}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !768, file: !769, line: 293, baseType: !183)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !768, file: !769, line: 295, baseType: !773, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !156, line: 148, baseType: !7)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !768, file: !769, line: 296, baseType: !112, size: 64, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !764, file: !44, line: 454, baseType: !773, size: 32, offset: 192)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !764, file: !44, line: 455, baseType: !200, size: 32, offset: 224)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !764, file: !44, line: 460, baseType: !778, size: 128, offset: 256)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !779, line: 125, size: 128, elements: !780)
!779 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!780 = !{!781, !791}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !778, file: !779, line: 126, baseType: !782, size: 64)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !779, line: 31, size: 64, elements: !783)
!783 = !{!784}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !782, file: !779, line: 32, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !779, line: 24, size: 192, align: 64, elements: !787)
!787 = !{!788, !789, !790}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !786, file: !779, line: 25, baseType: !145, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !786, file: !779, line: 26, baseType: !785, size: 64, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !786, file: !779, line: 27, baseType: !785, size: 64, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !778, file: !779, line: 127, baseType: !785, size: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !764, file: !44, line: 461, baseType: !793, size: 256, offset: 384)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !794, line: 35, size: 256, elements: !795)
!794 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!795 = !{!796, !797, !798, !800}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !793, file: !794, line: 36, baseType: !153, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !793, file: !794, line: 42, baseType: !153, size: 64, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !793, file: !794, line: 46, baseType: !799, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !184, line: 29, baseType: !191)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !793, file: !794, line: 47, baseType: !166, size: 128, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !764, file: !44, line: 462, baseType: !145, size: 64, offset: 640)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !764, file: !44, line: 463, baseType: !145, size: 64, offset: 704)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !764, file: !44, line: 464, baseType: !145, size: 64, offset: 768)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !764, file: !44, line: 465, baseType: !805, size: 64, offset: 832)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !808)
!808 = !{!809, !813, !817, !821, !825, !829, !835, !841, !845, !850, !854, !858, !862, !890, !894, !900, !901, !902, !906, !911, !915, !922}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !807, file: !44, line: 368, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!113, !750, !669}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !807, file: !44, line: 369, baseType: !814, size: 64, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!113, !351, !750}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !807, file: !44, line: 372, baseType: !818, size: 64, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!113, !763, !669}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !807, file: !44, line: 375, baseType: !822, size: 64, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!113, !750}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !807, file: !44, line: 381, baseType: !826, size: 64, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!113, !351, !763, !169, !7}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !807, file: !44, line: 383, baseType: !830, size: 64, offset: 320)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{null, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !807, file: !44, line: 385, baseType: !836, size: 64, offset: 384)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!113, !351, !763, !523, !7, !7, !839, !840}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !807, file: !44, line: 388, baseType: !842, size: 64, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!113, !351, !763, !523, !7, !7, !750, !112}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !807, file: !44, line: 393, baseType: !846, size: 64, offset: 512)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!849, !763, !849}
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !156, line: 125, baseType: !413)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !807, file: !44, line: 394, baseType: !851, size: 64, offset: 576)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DISubroutineType(types: !853)
!853 = !{null, !750, !7, !7}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !807, file: !44, line: 395, baseType: !855, size: 64, offset: 640)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!113, !750, !773}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !807, file: !44, line: 396, baseType: !859, size: 64, offset: 704)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !750}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !807, file: !44, line: 397, baseType: !863, size: 64, offset: 768)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!305, !866, !888}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !868)
!868 = !{!869, !870, !871, !875, !876, !877, !880, !881}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !867, file: !44, line: 321, baseType: !351, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !867, file: !44, line: 326, baseType: !523, size: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !867, file: !44, line: 327, baseType: !872, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{null, !866, !309, !309}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !867, file: !44, line: 328, baseType: !112, size: 64, offset: 192)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !867, file: !44, line: 329, baseType: !113, size: 32, offset: 256)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !867, file: !44, line: 330, baseType: !878, size: 16, offset: 288)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !161, line: 19, baseType: !879)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !163, line: 24, baseType: !316)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !867, file: !44, line: 331, baseType: !878, size: 16, offset: 304)
!881 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !44, line: 332, baseType: !882, size: 64, offset: 320)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !867, file: !44, line: 332, size: 64, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !882, file: !44, line: 333, baseType: !7, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !882, file: !44, line: 334, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !807, file: !44, line: 402, baseType: !891, size: 64, offset: 832)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!113, !763, !750, !750, !5}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !807, file: !44, line: 404, baseType: !895, size: 64, offset: 896)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!482, !750, !898}
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !899, line: 305, baseType: !7)
!899 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!900 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !807, file: !44, line: 405, baseType: !859, size: 64, offset: 960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !807, file: !44, line: 406, baseType: !822, size: 64, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !807, file: !44, line: 407, baseType: !903, size: 64, offset: 1088)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!113, !750, !145, !145}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !807, file: !44, line: 409, baseType: !907, size: 64, offset: 1152)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{null, !750, !910, !910}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !807, file: !44, line: 410, baseType: !912, size: 64, offset: 1216)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!113, !763, !750}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !807, file: !44, line: 413, baseType: !916, size: 64, offset: 1280)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!113, !919, !351, !921}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !807, file: !44, line: 415, baseType: !923, size: 64, offset: 1344)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{null, !351}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !764, file: !44, line: 466, baseType: !145, size: 64, offset: 896)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !764, file: !44, line: 467, baseType: !928, size: 32, offset: 960)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !929, line: 8, baseType: !409)
!929 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!930 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !764, file: !44, line: 468, baseType: !183, offset: 992)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !764, file: !44, line: 469, baseType: !166, size: 128, offset: 1024)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !764, file: !44, line: 470, baseType: !112, size: 64, offset: 1152)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !759, file: !752, line: 87, baseType: !145, size: 64, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !759, file: !752, line: 94, baseType: !145, size: 64, offset: 256)
!935 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 96, baseType: !936, size: 64)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 96, size: 64, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !936, file: !752, line: 101, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !156, line: 143, baseType: !413)
!940 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 103, baseType: !941, size: 320)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 103, size: 320, elements: !942)
!942 = !{!943, !953, !956, !957}
!943 = !DIDerivedType(tag: DW_TAG_member, scope: !941, file: !752, line: 104, baseType: !944, size: 128)
!944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !941, file: !752, line: 104, size: 128, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !944, file: !752, line: 105, baseType: !166, size: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, scope: !944, file: !752, line: 106, baseType: !948, size: 128)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !944, file: !752, line: 106, size: 128, elements: !949)
!949 = !{!950, !951, !952}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !948, file: !752, line: 107, baseType: !750, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !948, file: !752, line: 109, baseType: !113, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !948, file: !752, line: 110, baseType: !113, size: 32, offset: 96)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !941, file: !752, line: 117, baseType: !954, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !752, line: 117, flags: DIFlagFwdDecl)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !941, file: !752, line: 119, baseType: !112, size: 64, offset: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, scope: !941, file: !752, line: 120, baseType: !958, size: 64, offset: 256)
!958 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !941, file: !752, line: 120, size: 64, elements: !959)
!959 = !{!960, !961, !962}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !958, file: !752, line: 121, baseType: !112, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !958, file: !752, line: 122, baseType: !145, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, scope: !958, file: !752, line: 123, baseType: !963, size: 32)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !958, file: !752, line: 123, size: 32, elements: !964)
!964 = !{!965, !966, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !963, file: !752, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !963, file: !752, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !963, file: !752, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 130, baseType: !969, size: 192)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 130, size: 192, elements: !970)
!970 = !{!971, !972, !973, !974, !975}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !969, file: !752, line: 131, baseType: !145, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !969, file: !752, line: 134, baseType: !419, size: 8, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !969, file: !752, line: 135, baseType: !419, size: 8, offset: 72)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !969, file: !752, line: 136, baseType: !200, size: 32, offset: 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !969, file: !752, line: 137, baseType: !7, size: 32, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 139, baseType: !977, size: 256)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 139, size: 256, elements: !978)
!978 = !{!979, !980, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !977, file: !752, line: 140, baseType: !145, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !977, file: !752, line: 141, baseType: !200, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !977, file: !752, line: 143, baseType: !166, size: 128, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 145, baseType: !983, size: 256)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 145, size: 256, elements: !984)
!984 = !{!985, !986, !989, !990, !2382}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !983, file: !752, line: 146, baseType: !145, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !983, file: !752, line: 147, baseType: !987, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !988, line: 509, baseType: !750)
!988 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!989 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !983, file: !752, line: 148, baseType: !145, size: 64, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !752, line: 149, baseType: !991, size: 64, offset: 192)
!991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !752, line: 149, size: 64, elements: !992)
!992 = !{!993, !2381}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !991, file: !752, line: 150, baseType: !994, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !752, line: 388, size: 7296, elements: !996)
!996 = !{!997, !2380}
!997 = !DIDerivedType(tag: DW_TAG_member, scope: !995, file: !752, line: 389, baseType: !998, size: 7296)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !995, file: !752, line: 389, size: 7296, elements: !999)
!999 = !{!1000, !1118, !1119, !1120, !1124, !1125, !1126, !1127, !1128, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1169, !1177, !1180, !1220, !1221, !2364, !2365, !2368, !2369, !2370, !2373, !2374, !2375, !2378, !2379}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !998, file: !752, line: 390, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !752, line: 305, size: 1472, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1018, !1019, !1024, !1025, !1028, !1112, !1113, !1114, !1115, !1116}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1002, file: !752, line: 308, baseType: !145, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1002, file: !752, line: 309, baseType: !145, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1002, file: !752, line: 313, baseType: !1001, size: 64, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1002, file: !752, line: 313, baseType: !1001, size: 64, offset: 192)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1002, file: !752, line: 315, baseType: !786, size: 192, align: 64, offset: 256)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1002, file: !752, line: 323, baseType: !145, size: 64, offset: 448)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1002, file: !752, line: 327, baseType: !994, size: 64, offset: 512)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1002, file: !752, line: 333, baseType: !1012, size: 64, offset: 576)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !988, line: 284, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !988, line: 284, size: 64, elements: !1014)
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1013, file: !988, line: 284, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1017, line: 19, baseType: !145)
!1017 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1002, file: !752, line: 334, baseType: !145, size: 64, offset: 640)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1002, file: !752, line: 343, baseType: !1020, size: 256, offset: 704)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1002, file: !752, line: 340, size: 256, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1020, file: !752, line: 341, baseType: !786, size: 192, align: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1020, file: !752, line: 342, baseType: !145, size: 64, offset: 192)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1002, file: !752, line: 351, baseType: !166, size: 128, offset: 960)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1002, file: !752, line: 353, baseType: !1026, size: 64, offset: 1088)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !752, line: 353, flags: DIFlagFwdDecl)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1002, file: !752, line: 356, baseType: !1029, size: 64, offset: 1152)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1032)
!1032 = !{!1033, !1037, !1038, !1042, !1046, !1086, !1090, !1094, !1098, !1099, !1100, !1104, !1108}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1031, file: !14, line: 558, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{null, !1001}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1031, file: !14, line: 559, baseType: !1034, size: 64, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1031, file: !14, line: 560, baseType: !1039, size: 64, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!113, !1001, !145}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1031, file: !14, line: 561, baseType: !1043, size: 64, offset: 192)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!113, !1001}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1031, file: !14, line: 562, baseType: !1047, size: 64, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !752, line: 682, baseType: !7)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1053)
!1053 = !{!1054, !1055, !1056, !1057, !1058, !1059, !1066, !1073, !1079, !1080, !1081, !1083, !1085}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1052, file: !14, line: 509, baseType: !1001, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1052, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1052, file: !14, line: 511, baseType: !773, size: 32, offset: 96)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1052, file: !14, line: 512, baseType: !145, size: 64, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1052, file: !14, line: 513, baseType: !145, size: 64, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1052, file: !14, line: 514, baseType: !1060, size: 64, offset: 256)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !988, line: 385, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !988, line: 385, size: 64, elements: !1063)
!1063 = !{!1064}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1062, file: !988, line: 385, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1017, line: 15, baseType: !145)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1052, file: !14, line: 516, baseType: !1067, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !988, line: 359, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !988, line: 359, size: 64, elements: !1070)
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1069, file: !988, line: 359, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1017, line: 16, baseType: !145)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1052, file: !14, line: 519, baseType: !1074, size: 64, offset: 384)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1017, line: 21, baseType: !1075)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1017, line: 21, size: 64, elements: !1076)
!1076 = !{!1077}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1075, file: !1017, line: 21, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1017, line: 14, baseType: !145)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1052, file: !14, line: 521, baseType: !750, size: 64, offset: 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1052, file: !14, line: 522, baseType: !750, size: 64, offset: 512)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1052, file: !14, line: 528, baseType: !1082, size: 64, offset: 576)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1052, file: !14, line: 532, baseType: !1084, size: 64, offset: 640)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1052, file: !14, line: 536, baseType: !987, size: 64, offset: 704)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1031, file: !14, line: 563, baseType: !1087, size: 64, offset: 320)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!1050, !1051, !13}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1031, file: !14, line: 565, baseType: !1091, size: 64, offset: 384)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{null, !1051, !145, !145}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1031, file: !14, line: 567, baseType: !1095, size: 64, offset: 448)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!145, !1001}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1031, file: !14, line: 571, baseType: !1047, size: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1031, file: !14, line: 574, baseType: !1047, size: 64, offset: 576)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1031, file: !14, line: 579, baseType: !1101, size: 64, offset: 640)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!113, !1001, !145, !112, !113, !113}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1031, file: !14, line: 585, baseType: !1105, size: 64, offset: 704)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!236, !1001}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1031, file: !14, line: 615, baseType: !1109, size: 64, offset: 768)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!750, !1001, !145}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1002, file: !752, line: 359, baseType: !145, size: 64, offset: 1216)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1002, file: !752, line: 361, baseType: !351, size: 64, offset: 1280)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1002, file: !752, line: 362, baseType: !112, size: 64, offset: 1344)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1002, file: !752, line: 365, baseType: !153, size: 64, offset: 1408)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1002, file: !752, line: 373, baseType: !1117, offset: 1472)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !752, line: 296, elements: !197)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !998, file: !752, line: 391, baseType: !782, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !998, file: !752, line: 392, baseType: !413, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !998, file: !752, line: 394, baseType: !1121, size: 64, offset: 192)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!145, !351, !145, !145, !145, !145}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !998, file: !752, line: 398, baseType: !145, size: 64, offset: 256)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !998, file: !752, line: 399, baseType: !145, size: 64, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !998, file: !752, line: 405, baseType: !145, size: 64, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !998, file: !752, line: 406, baseType: !145, size: 64, offset: 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !998, file: !752, line: 407, baseType: !1129, size: 64, offset: 512)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !988, line: 286, baseType: !1131)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !988, line: 286, size: 64, elements: !1132)
!1132 = !{!1133}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1131, file: !988, line: 286, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1017, line: 18, baseType: !145)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !998, file: !752, line: 416, baseType: !200, size: 32, offset: 576)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !998, file: !752, line: 428, baseType: !200, size: 32, offset: 608)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !998, file: !752, line: 437, baseType: !200, size: 32, offset: 640)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !998, file: !752, line: 447, baseType: !200, size: 32, offset: 672)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !998, file: !752, line: 450, baseType: !153, size: 64, offset: 704)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !998, file: !752, line: 452, baseType: !113, size: 32, offset: 768)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !998, file: !752, line: 454, baseType: !183, offset: 800)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !998, file: !752, line: 457, baseType: !793, size: 256, offset: 832)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !998, file: !752, line: 459, baseType: !166, size: 128, offset: 1088)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !998, file: !752, line: 466, baseType: !145, size: 64, offset: 1216)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !998, file: !752, line: 467, baseType: !145, size: 64, offset: 1280)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !998, file: !752, line: 469, baseType: !145, size: 64, offset: 1344)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !998, file: !752, line: 470, baseType: !145, size: 64, offset: 1408)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !998, file: !752, line: 471, baseType: !155, size: 64, offset: 1472)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !998, file: !752, line: 472, baseType: !145, size: 64, offset: 1536)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !998, file: !752, line: 473, baseType: !145, size: 64, offset: 1600)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !998, file: !752, line: 474, baseType: !145, size: 64, offset: 1664)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !998, file: !752, line: 475, baseType: !145, size: 64, offset: 1728)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !998, file: !752, line: 477, baseType: !183, offset: 1792)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !998, file: !752, line: 478, baseType: !145, size: 64, offset: 1792)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !998, file: !752, line: 478, baseType: !145, size: 64, offset: 1856)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !998, file: !752, line: 478, baseType: !145, size: 64, offset: 1920)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !998, file: !752, line: 478, baseType: !145, size: 64, offset: 1984)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !998, file: !752, line: 479, baseType: !145, size: 64, offset: 2048)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !998, file: !752, line: 479, baseType: !145, size: 64, offset: 2112)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !998, file: !752, line: 479, baseType: !145, size: 64, offset: 2176)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !998, file: !752, line: 480, baseType: !145, size: 64, offset: 2240)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !998, file: !752, line: 480, baseType: !145, size: 64, offset: 2304)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !998, file: !752, line: 480, baseType: !145, size: 64, offset: 2368)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !998, file: !752, line: 480, baseType: !145, size: 64, offset: 2432)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !998, file: !752, line: 482, baseType: !1166, size: 2816, offset: 2496)
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 2816, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 44)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !998, file: !752, line: 488, baseType: !1170, size: 256, offset: 5312)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1171, line: 60, size: 256, elements: !1172)
!1171 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1172 = !{!1173}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1170, file: !1171, line: 61, baseType: !1174, size: 256)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 256, elements: !1175)
!1175 = !{!1176}
!1176 = !DISubrange(count: 4)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !998, file: !752, line: 490, baseType: !1178, size: 64, offset: 5568)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !752, line: 490, flags: DIFlagFwdDecl)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !998, file: !752, line: 493, baseType: !1181, size: 896, offset: 5632)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1182, line: 53, baseType: !1183)
!1182 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1182, line: 13, size: 896, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1191, !1192, !1193, !1194, !1214, !1215, !1216}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1183, file: !1182, line: 18, baseType: !413, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1183, file: !1182, line: 28, baseType: !155, size: 64, offset: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1183, file: !1182, line: 31, baseType: !793, size: 256, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1183, file: !1182, line: 32, baseType: !1189, size: 64, offset: 384)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1182, line: 32, flags: DIFlagFwdDecl)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1183, file: !1182, line: 37, baseType: !316, size: 16, offset: 448)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1183, file: !1182, line: 40, baseType: !178, size: 192, offset: 512)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1183, file: !1182, line: 41, baseType: !112, size: 64, offset: 704)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1183, file: !1182, line: 42, baseType: !1195, size: 64, offset: 768)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1198, line: 13, size: 896, elements: !1199)
!1198 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1197, file: !1198, line: 14, baseType: !112, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1197, file: !1198, line: 15, baseType: !145, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1197, file: !1198, line: 17, baseType: !145, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1197, file: !1198, line: 17, baseType: !145, size: 64, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1197, file: !1198, line: 19, baseType: !309, size: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1197, file: !1198, line: 21, baseType: !309, size: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1197, file: !1198, line: 22, baseType: !309, size: 64, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1197, file: !1198, line: 23, baseType: !309, size: 64, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1197, file: !1198, line: 24, baseType: !309, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1197, file: !1198, line: 25, baseType: !309, size: 64, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1197, file: !1198, line: 26, baseType: !309, size: 64, offset: 640)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1197, file: !1198, line: 27, baseType: !309, size: 64, offset: 704)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1197, file: !1198, line: 28, baseType: !309, size: 64, offset: 768)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1197, file: !1198, line: 29, baseType: !309, size: 64, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1183, file: !1182, line: 44, baseType: !200, size: 32, offset: 832)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1183, file: !1182, line: 50, baseType: !878, size: 16, offset: 864)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1183, file: !1182, line: 51, baseType: !1217, size: 16, offset: 880)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !161, line: 18, baseType: !1218)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !163, line: 23, baseType: !1219)
!1219 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !998, file: !752, line: 495, baseType: !145, size: 64, offset: 6528)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !998, file: !752, line: 497, baseType: !1222, size: 64, offset: 6592)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !752, line: 381, size: 384, elements: !1224)
!1224 = !{!1225, !1226, !2363}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1223, file: !752, line: 382, baseType: !200, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1223, file: !752, line: 383, baseType: !1227, size: 128, offset: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !752, line: 376, size: 128, elements: !1228)
!1228 = !{!1229, !2361}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1227, file: !752, line: 377, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1232, line: 640, size: 48640, elements: !1233)
!1232 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1233 = !{!1234, !1240, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1255, !1273, !1284, !1369, !1370, !1371, !1382, !1383, !1385, !1386, !1387, !1388, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1467, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1538, !1540, !1541, !1542, !1554, !1555, !1556, !1557, !1558, !1559, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1583, !1588, !1770, !1771, !1772, !1773, !1777, !1780, !1783, !1786, !1789, !1815, !1914, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1960, !1961, !1962, !1963, !1964, !1969, !1970, !1971, !1974, !1975, !1978, !1981, !1984, !1987, !2019, !2022, !2023, !2102, !2103, !2106, !2107, !2110, !2111, !2112, !2116, !2117, !2118, !2131, !2132, !2133, !2143, !2148, !2151, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1231, file: !1232, line: 646, baseType: !1235, size: 128)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1236, line: 56, size: 128, elements: !1237)
!1236 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1235, file: !1236, line: 57, baseType: !145, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1235, file: !1236, line: 58, baseType: !409, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1231, file: !1232, line: 649, baseType: !1241, size: 64, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !309)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1231, file: !1232, line: 657, baseType: !112, size: 64, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1231, file: !1232, line: 658, baseType: !222, size: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !1232, line: 660, baseType: !7, size: 32, offset: 288)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1231, file: !1232, line: 661, baseType: !7, size: 32, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1231, file: !1232, line: 684, baseType: !113, size: 32, offset: 352)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1231, file: !1232, line: 686, baseType: !113, size: 32, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1231, file: !1232, line: 687, baseType: !113, size: 32, offset: 416)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1231, file: !1232, line: 688, baseType: !113, size: 32, offset: 448)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1231, file: !1232, line: 689, baseType: !7, size: 32, offset: 480)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1231, file: !1232, line: 691, baseType: !1252, size: 64, offset: 512)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1254)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1232, line: 691, flags: DIFlagFwdDecl)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1231, file: !1232, line: 692, baseType: !1256, size: 832, offset: 576)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1232, line: 451, size: 832, elements: !1257)
!1257 = !{!1258, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1256, file: !1232, line: 453, baseType: !1259, size: 128)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1232, line: 325, size: 128, elements: !1260)
!1260 = !{!1261, !1262}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1259, file: !1232, line: 326, baseType: !145, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1259, file: !1232, line: 327, baseType: !409, size: 32, offset: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1256, file: !1232, line: 454, baseType: !786, size: 192, align: 64, offset: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1256, file: !1232, line: 455, baseType: !166, size: 128, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1256, file: !1232, line: 456, baseType: !7, size: 32, offset: 448)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1256, file: !1232, line: 458, baseType: !413, size: 64, offset: 512)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1256, file: !1232, line: 459, baseType: !413, size: 64, offset: 576)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1256, file: !1232, line: 460, baseType: !413, size: 64, offset: 640)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1256, file: !1232, line: 461, baseType: !413, size: 64, offset: 704)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1256, file: !1232, line: 463, baseType: !413, size: 64, offset: 768)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1256, file: !1232, line: 465, baseType: !1272, offset: 832)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1232, line: 415, elements: !197)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1231, file: !1232, line: 693, baseType: !1274, size: 384, offset: 1408)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1232, line: 489, size: 384, elements: !1275)
!1275 = !{!1276, !1277, !1278, !1279, !1280, !1281, !1282}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1274, file: !1232, line: 490, baseType: !166, size: 128)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1274, file: !1232, line: 491, baseType: !145, size: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1274, file: !1232, line: 492, baseType: !145, size: 64, offset: 192)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1274, file: !1232, line: 493, baseType: !7, size: 32, offset: 256)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1274, file: !1232, line: 494, baseType: !316, size: 16, offset: 288)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1274, file: !1232, line: 495, baseType: !316, size: 16, offset: 304)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1274, file: !1232, line: 497, baseType: !1283, size: 64, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1231, file: !1232, line: 697, baseType: !1285, size: 1792, offset: 1792)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1232, line: 507, size: 1792, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1366, !1367}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1285, file: !1232, line: 508, baseType: !786, size: 192, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1285, file: !1232, line: 515, baseType: !413, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1285, file: !1232, line: 516, baseType: !413, size: 64, offset: 256)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1285, file: !1232, line: 517, baseType: !413, size: 64, offset: 320)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1285, file: !1232, line: 518, baseType: !413, size: 64, offset: 384)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1285, file: !1232, line: 519, baseType: !413, size: 64, offset: 448)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1285, file: !1232, line: 526, baseType: !160, size: 64, offset: 512)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1285, file: !1232, line: 527, baseType: !413, size: 64, offset: 576)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1285, file: !1232, line: 528, baseType: !7, size: 32, offset: 640)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1285, file: !1232, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1285, file: !1232, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1285, file: !1232, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1285, file: !1232, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1285, file: !1232, line: 563, baseType: !1301, size: 512, offset: 704)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1302)
!1302 = !{!1303, !1311, !1312, !1317, !1360, !1363, !1364, !1365}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1301, file: !20, line: 119, baseType: !1304, size: 256)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1305, line: 9, size: 256, elements: !1306)
!1305 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1306 = !{!1307, !1308}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1304, file: !1305, line: 10, baseType: !786, size: 192, align: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1304, file: !1305, line: 11, baseType: !1309, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1310, line: 29, baseType: !160)
!1310 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1301, file: !20, line: 120, baseType: !1309, size: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1301, file: !20, line: 121, baseType: !1313, size: 64, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{!19, !1316}
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1301, file: !20, line: 122, baseType: !1318, size: 64, offset: 384)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1320)
!1320 = !{!1321, !1341, !1342, !1345, !1350, !1351, !1355, !1359}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1319, file: !20, line: 160, baseType: !1322, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1323, file: !20, line: 215, baseType: !799)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1323, file: !20, line: 216, baseType: !7, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1323, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1323, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1323, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1323, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1323, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1323, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1323, file: !20, line: 233, baseType: !1309, size: 64, offset: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1323, file: !20, line: 234, baseType: !1316, size: 64, offset: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1323, file: !20, line: 235, baseType: !1309, size: 64, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1323, file: !20, line: 236, baseType: !1316, size: 64, offset: 320)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1323, file: !20, line: 237, baseType: !1338, size: 4096, offset: 512)
!1338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1319, size: 4096, elements: !1339)
!1339 = !{!1340}
!1340 = !DISubrange(count: 8)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1319, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1319, file: !20, line: 162, baseType: !1343, size: 32, offset: 96)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !156, line: 27, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !307, line: 96, baseType: !113)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1319, file: !20, line: 163, baseType: !1346, size: 32, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !382, line: 276, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !382, line: 276, size: 32, elements: !1348)
!1348 = !{!1349}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1347, file: !382, line: 276, baseType: !386, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1319, file: !20, line: 164, baseType: !1316, size: 64, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1319, file: !20, line: 165, baseType: !1352, size: 128, offset: 256)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1305, line: 14, size: 128, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1352, file: !1305, line: 15, baseType: !778, size: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1319, file: !20, line: 166, baseType: !1356, size: 64, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!1309}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1319, file: !20, line: 167, baseType: !1309, size: 64, offset: 448)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1301, file: !20, line: 123, baseType: !1361, size: 8, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !161, line: 17, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !163, line: 21, baseType: !419)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1301, file: !20, line: 124, baseType: !1361, size: 8, offset: 456)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1301, file: !20, line: 125, baseType: !1361, size: 8, offset: 464)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1301, file: !20, line: 126, baseType: !1361, size: 8, offset: 472)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1285, file: !1232, line: 572, baseType: !1301, size: 512, offset: 1216)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1285, file: !1232, line: 580, baseType: !1368, size: 64, offset: 1728)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1231, file: !1232, line: 721, baseType: !7, size: 32, offset: 3584)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1231, file: !1232, line: 722, baseType: !113, size: 32, offset: 3616)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1231, file: !1232, line: 723, baseType: !1372, size: 64, offset: 3648)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1375, line: 17, baseType: !1376)
!1375 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1375, line: 17, size: 64, elements: !1377)
!1377 = !{!1378}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1376, file: !1375, line: 17, baseType: !1379, size: 64)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 64, elements: !1380)
!1380 = !{!1381}
!1381 = !DISubrange(count: 1)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1231, file: !1232, line: 724, baseType: !1374, size: 64, offset: 3712)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1231, file: !1232, line: 749, baseType: !1384, offset: 3776)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1232, line: 290, elements: !197)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1231, file: !1232, line: 751, baseType: !166, size: 128, offset: 3776)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1231, file: !1232, line: 757, baseType: !994, size: 64, offset: 3904)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1231, file: !1232, line: 758, baseType: !994, size: 64, offset: 3968)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1231, file: !1232, line: 761, baseType: !1389, size: 320, offset: 4032)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1171, line: 34, size: 320, elements: !1390)
!1390 = !{!1391, !1392}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1389, file: !1171, line: 35, baseType: !413, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1389, file: !1171, line: 36, baseType: !1393, size: 256, offset: 64)
!1393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 256, elements: !1175)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1231, file: !1232, line: 766, baseType: !113, size: 32, offset: 4352)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1231, file: !1232, line: 767, baseType: !113, size: 32, offset: 4384)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1231, file: !1232, line: 768, baseType: !113, size: 32, offset: 4416)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1231, file: !1232, line: 770, baseType: !113, size: 32, offset: 4448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1231, file: !1232, line: 772, baseType: !145, size: 64, offset: 4480)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1231, file: !1232, line: 775, baseType: !7, size: 32, offset: 4544)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1231, file: !1232, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1231, file: !1232, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1231, file: !1232, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1231, file: !1232, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1231, file: !1232, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1231, file: !1232, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1231, file: !1232, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1231, file: !1232, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1231, file: !1232, line: 831, baseType: !145, size: 64, offset: 4672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1231, file: !1232, line: 833, baseType: !1410, size: 384, offset: 4736)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1411)
!1411 = !{!1412, !1417}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1410, file: !25, line: 26, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DISubroutineType(types: !1415)
!1415 = !{!309, !1416}
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !25, line: 27, baseType: !1418, size: 320, offset: 64)
!1418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !25, line: 27, size: 320, elements: !1419)
!1419 = !{!1420, !1430, !1457}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1418, file: !25, line: 36, baseType: !1421, size: 320)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1418, file: !25, line: 29, size: 320, elements: !1422)
!1422 = !{!1423, !1425, !1426, !1427, !1428, !1429}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1421, file: !25, line: 30, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1421, file: !25, line: 31, baseType: !409, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1421, file: !25, line: 32, baseType: !409, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1421, file: !25, line: 33, baseType: !409, size: 32, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1421, file: !25, line: 34, baseType: !413, size: 64, offset: 192)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1421, file: !25, line: 35, baseType: !1424, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1418, file: !25, line: 46, baseType: !1431, size: 192)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1418, file: !25, line: 38, size: 192, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1456}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1431, file: !25, line: 39, baseType: !1343, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1431, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, scope: !1431, file: !25, line: 41, baseType: !1436, size: 64, offset: 64)
!1436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1431, file: !25, line: 41, size: 64, elements: !1437)
!1437 = !{!1438, !1446}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1436, file: !25, line: 42, baseType: !1439, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1441, line: 7, size: 128, elements: !1442)
!1441 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1442 = !{!1443, !1445}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1440, file: !1441, line: 8, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !307, line: 93, baseType: !164)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1440, file: !1441, line: 9, baseType: !164, size: 64, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1436, file: !25, line: 43, baseType: !1447, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1449, line: 7, size: 64, elements: !1450)
!1449 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1450 = !{!1451, !1455}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1448, file: !1449, line: 8, baseType: !1452, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1449, line: 5, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !161, line: 20, baseType: !1454)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !163, line: 26, baseType: !113)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1448, file: !1449, line: 9, baseType: !1453, size: 32, offset: 32)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1431, file: !25, line: 45, baseType: !413, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1418, file: !25, line: 54, baseType: !1458, size: 256)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1418, file: !25, line: 48, size: 256, elements: !1459)
!1459 = !{!1460, !1463, !1464, !1465, !1466}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1458, file: !25, line: 49, baseType: !1461, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1458, file: !25, line: 50, baseType: !113, size: 32, offset: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1458, file: !25, line: 51, baseType: !113, size: 32, offset: 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1458, file: !25, line: 52, baseType: !145, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1458, file: !25, line: 53, baseType: !145, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1231, file: !1232, line: 835, baseType: !1468, size: 32, offset: 5120)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !156, line: 22, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !307, line: 28, baseType: !113)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1231, file: !1232, line: 836, baseType: !1468, size: 32, offset: 5152)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1231, file: !1232, line: 840, baseType: !145, size: 64, offset: 5184)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1231, file: !1232, line: 849, baseType: !1230, size: 64, offset: 5248)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1231, file: !1232, line: 852, baseType: !1230, size: 64, offset: 5312)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1231, file: !1232, line: 857, baseType: !166, size: 128, offset: 5376)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1231, file: !1232, line: 858, baseType: !166, size: 128, offset: 5504)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1231, file: !1232, line: 859, baseType: !1230, size: 64, offset: 5632)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1231, file: !1232, line: 867, baseType: !166, size: 128, offset: 5696)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1231, file: !1232, line: 868, baseType: !166, size: 128, offset: 5824)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1231, file: !1232, line: 871, baseType: !1480, size: 64, offset: 5952)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1488, !1489, !1496, !1497}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1481, file: !53, line: 61, baseType: !222, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1481, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1481, file: !53, line: 63, baseType: !183, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1481, file: !53, line: 65, baseType: !1487, size: 256, offset: 64)
!1487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !628, size: 256, elements: !1175)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1481, file: !53, line: 66, baseType: !628, size: 64, offset: 320)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1481, file: !53, line: 68, baseType: !1490, size: 128, offset: 384)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1491, line: 40, baseType: !1492)
!1491 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1491, line: 36, size: 128, elements: !1493)
!1493 = !{!1494, !1495}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1492, file: !1491, line: 37, baseType: !183)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1492, file: !1491, line: 38, baseType: !166, size: 128)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1481, file: !53, line: 69, baseType: !359, size: 128, align: 64, offset: 512)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1481, file: !53, line: 70, baseType: !1498, size: 128, offset: 640)
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 128, elements: !1380)
!1499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1500)
!1500 = !{!1501, !1502}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1499, file: !53, line: 55, baseType: !113, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1499, file: !53, line: 56, baseType: !1503, size: 64, offset: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1505, line: 20, size: 1088, elements: !1506)
!1505 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1506 = !{!1507, !1508, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1524, !1527, !1528}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1504, file: !1505, line: 21, baseType: !218, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1504, file: !1505, line: 22, baseType: !1509, size: 192, offset: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1510, line: 19, size: 192, elements: !1511)
!1510 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1511 = !{!1512, !1513, !1514}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1509, file: !1510, line: 20, baseType: !768, size: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1509, file: !1510, line: 21, baseType: !7, size: 32, offset: 128)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1509, file: !1510, line: 22, baseType: !7, size: 32, offset: 160)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1504, file: !1505, line: 23, baseType: !359, size: 128, align: 64, offset: 256)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1504, file: !1505, line: 24, baseType: !7, size: 32, offset: 384)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1504, file: !1505, line: 25, baseType: !1230, size: 64, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1504, file: !1505, line: 26, baseType: !954, size: 64, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1504, file: !1505, line: 27, baseType: !7, size: 32, offset: 576)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1504, file: !1505, line: 28, baseType: !1503, size: 64, offset: 640)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1504, file: !1505, line: 32, baseType: !1522, size: 64, offset: 704)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !428, line: 18, flags: DIFlagFwdDecl)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1504, file: !1505, line: 33, baseType: !1525, size: 64, offset: 768)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1505, line: 33, flags: DIFlagFwdDecl)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1504, file: !1505, line: 34, baseType: !113, size: 32, offset: 832)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1504, file: !1505, line: 35, baseType: !1529, size: 192, offset: 896)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1530, line: 7, size: 192, elements: !1531)
!1530 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1531 = !{!1532, !1533, !1537}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1529, file: !1530, line: 8, baseType: !153, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1529, file: !1530, line: 9, baseType: !1534, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1530, line: 5, flags: DIFlagFwdDecl)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1529, file: !1530, line: 10, baseType: !7, size: 32, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1231, file: !1232, line: 872, baseType: !1539, size: 512, offset: 6016)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 512, elements: !1175)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1231, file: !1232, line: 873, baseType: !166, size: 128, offset: 6528)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1231, file: !1232, line: 874, baseType: !166, size: 128, offset: 6656)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1231, file: !1232, line: 876, baseType: !1543, size: 64, offset: 6784)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1545, line: 26, size: 192, elements: !1546)
!1545 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1544, file: !1545, line: 27, baseType: !7, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1544, file: !1545, line: 28, baseType: !1549, size: 128, offset: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1550, line: 43, size: 128, elements: !1551)
!1550 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1549, file: !1550, line: 44, baseType: !799)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1549, file: !1550, line: 45, baseType: !166, size: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1231, file: !1232, line: 879, baseType: !698, size: 64, offset: 6848)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1231, file: !1232, line: 882, baseType: !698, size: 64, offset: 6912)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1231, file: !1232, line: 884, baseType: !413, size: 64, offset: 6976)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1231, file: !1232, line: 885, baseType: !413, size: 64, offset: 7040)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1231, file: !1232, line: 890, baseType: !413, size: 64, offset: 7104)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1231, file: !1232, line: 891, baseType: !1560, size: 128, offset: 7168)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1232, line: 242, size: 128, elements: !1561)
!1561 = !{!1562, !1563, !1564}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1560, file: !1232, line: 244, baseType: !413, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1560, file: !1232, line: 245, baseType: !413, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1560, file: !1232, line: 246, baseType: !799, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1231, file: !1232, line: 900, baseType: !145, size: 64, offset: 7296)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1231, file: !1232, line: 901, baseType: !145, size: 64, offset: 7360)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1231, file: !1232, line: 904, baseType: !413, size: 64, offset: 7424)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1231, file: !1232, line: 907, baseType: !413, size: 64, offset: 7488)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1231, file: !1232, line: 910, baseType: !145, size: 64, offset: 7552)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1231, file: !1232, line: 911, baseType: !145, size: 64, offset: 7616)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1231, file: !1232, line: 914, baseType: !1572, size: 640, offset: 7680)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1573, line: 123, size: 640, elements: !1574)
!1573 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1574 = !{!1575, !1581, !1582}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1572, file: !1573, line: 124, baseType: !1576, size: 576)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1577, size: 576, elements: !275)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1573, line: 108, size: 192, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1577, file: !1573, line: 109, baseType: !413, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1577, file: !1573, line: 110, baseType: !1352, size: 128, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1572, file: !1573, line: 125, baseType: !7, size: 32, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1572, file: !1573, line: 126, baseType: !7, size: 32, offset: 608)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1231, file: !1232, line: 917, baseType: !1584, size: 192, offset: 8320)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1573, line: 134, size: 192, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1584, file: !1573, line: 135, baseType: !359, size: 128, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1584, file: !1573, line: 136, baseType: !7, size: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1231, file: !1232, line: 923, baseType: !1589, size: 64, offset: 8512)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1592, line: 111, size: 1280, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1613, !1614, !1615, !1616, !1617, !1618, !1725, !1726, !1727, !1728, !1754, !1755, !1765}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1591, file: !1592, line: 112, baseType: !200, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1591, file: !1592, line: 120, baseType: !427, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1591, file: !1592, line: 121, baseType: !435, size: 32, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1591, file: !1592, line: 122, baseType: !427, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1591, file: !1592, line: 123, baseType: !435, size: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1591, file: !1592, line: 124, baseType: !427, size: 32, offset: 160)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1591, file: !1592, line: 125, baseType: !435, size: 32, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1591, file: !1592, line: 126, baseType: !427, size: 32, offset: 224)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1591, file: !1592, line: 127, baseType: !435, size: 32, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1591, file: !1592, line: 128, baseType: !7, size: 32, offset: 288)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1591, file: !1592, line: 129, baseType: !1605, size: 64, offset: 320)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1606, line: 26, baseType: !1607)
!1606 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1606, line: 24, size: 64, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1607, file: !1606, line: 25, baseType: !1610, size: 64)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !410, size: 64, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 2)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1591, file: !1592, line: 130, baseType: !1605, size: 64, offset: 384)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1591, file: !1592, line: 131, baseType: !1605, size: 64, offset: 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1591, file: !1592, line: 132, baseType: !1605, size: 64, offset: 512)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1591, file: !1592, line: 133, baseType: !1605, size: 64, offset: 576)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1591, file: !1592, line: 135, baseType: !419, size: 8, offset: 640)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1591, file: !1592, line: 137, baseType: !1619, size: 64, offset: 704)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1621, line: 189, size: 1664, elements: !1622)
!1621 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1622 = !{!1623, !1624, !1627, !1632, !1633, !1636, !1637, !1642, !1643, !1644, !1645, !1647, !1648, !1649, !1650, !1651, !1689, !1710}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1620, file: !1621, line: 190, baseType: !222, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1620, file: !1621, line: 191, baseType: !1625, size: 32, offset: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1621, line: 28, baseType: !1626)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !156, line: 98, baseType: !1453)
!1627 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 192, baseType: !1628, size: 192, offset: 64)
!1628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 192, size: 192, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1628, file: !1621, line: 193, baseType: !166, size: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1628, file: !1621, line: 194, baseType: !786, size: 192, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1620, file: !1621, line: 199, baseType: !793, size: 256, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1620, file: !1621, line: 200, baseType: !1634, size: 64, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1621, line: 200, flags: DIFlagFwdDecl)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1620, file: !1621, line: 201, baseType: !112, size: 64, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 202, baseType: !1638, size: 64, offset: 640)
!1638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 202, size: 64, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1638, file: !1621, line: 203, baseType: !530, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1638, file: !1621, line: 204, baseType: !530, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1620, file: !1621, line: 206, baseType: !530, size: 64, offset: 704)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1620, file: !1621, line: 207, baseType: !427, size: 32, offset: 768)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1620, file: !1621, line: 208, baseType: !435, size: 32, offset: 800)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1620, file: !1621, line: 209, baseType: !1646, size: 32, offset: 832)
!1646 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1621, line: 31, baseType: !549)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1620, file: !1621, line: 210, baseType: !316, size: 16, offset: 864)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1620, file: !1621, line: 211, baseType: !316, size: 16, offset: 880)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1620, file: !1621, line: 215, baseType: !1219, size: 16, offset: 896)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1620, file: !1621, line: 222, baseType: !145, size: 64, offset: 960)
!1651 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 239, baseType: !1652, size: 320, offset: 1024)
!1652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 239, size: 320, elements: !1653)
!1653 = !{!1654, !1681}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1652, file: !1621, line: 240, baseType: !1655, size: 320)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1621, line: 108, size: 320, elements: !1656)
!1656 = !{!1657, !1658, !1670, !1673, !1680}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1655, file: !1621, line: 110, baseType: !145, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !1621, line: 111, baseType: !1659, size: 64, offset: 64)
!1659 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1655, file: !1621, line: 111, size: 64, elements: !1660)
!1660 = !{!1661, !1669}
!1661 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1621, line: 112, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1659, file: !1621, line: 112, size: 64, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1662, file: !1621, line: 114, baseType: !878, size: 16)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1662, file: !1621, line: 115, baseType: !1666, size: 48, offset: 16)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 48, elements: !1667)
!1667 = !{!1668}
!1668 = !DISubrange(count: 6)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1659, file: !1621, line: 121, baseType: !145, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1655, file: !1621, line: 123, baseType: !1671, size: 64, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1621, line: 96, flags: DIFlagFwdDecl)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1655, file: !1621, line: 124, baseType: !1674, size: 64, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1621, line: 102, size: 192, elements: !1676)
!1676 = !{!1677, !1678, !1679}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1675, file: !1621, line: 103, baseType: !359, size: 128, align: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1675, file: !1621, line: 104, baseType: !222, size: 32, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1675, file: !1621, line: 105, baseType: !482, size: 8, offset: 160)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1655, file: !1621, line: 125, baseType: !236, size: 64, offset: 256)
!1681 = !DIDerivedType(tag: DW_TAG_member, scope: !1652, file: !1621, line: 241, baseType: !1682, size: 320)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1652, file: !1621, line: 241, size: 320, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1688}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1682, file: !1621, line: 242, baseType: !145, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1682, file: !1621, line: 243, baseType: !145, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1682, file: !1621, line: 244, baseType: !1671, size: 64, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1682, file: !1621, line: 245, baseType: !1674, size: 64, offset: 192)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1682, file: !1621, line: 246, baseType: !274, size: 64, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1621, line: 254, baseType: !1690, size: 256, offset: 1344)
!1690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1620, file: !1621, line: 254, size: 256, elements: !1691)
!1691 = !{!1692, !1698}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1690, file: !1621, line: 255, baseType: !1693, size: 256)
!1693 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1621, line: 128, size: 256, elements: !1694)
!1694 = !{!1695, !1696}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1693, file: !1621, line: 129, baseType: !112, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1693, file: !1621, line: 130, baseType: !1697, size: 256)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 256, elements: !1175)
!1698 = !DIDerivedType(tag: DW_TAG_member, scope: !1690, file: !1621, line: 256, baseType: !1699, size: 256)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1690, file: !1621, line: 256, size: 256, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1699, file: !1621, line: 258, baseType: !166, size: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1699, file: !1621, line: 259, baseType: !1703, size: 128, offset: 128)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1704, line: 22, size: 128, elements: !1705)
!1704 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1705 = !{!1706, !1709}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1703, file: !1704, line: 23, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1704, line: 23, flags: DIFlagFwdDecl)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1703, file: !1704, line: 24, baseType: !145, size: 64, offset: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1620, file: !1621, line: 274, baseType: !1711, size: 64, offset: 1600)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1621, line: 170, size: 192, elements: !1713)
!1713 = !{!1714, !1723, !1724}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1712, file: !1621, line: 171, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1621, line: 165, baseType: !1716)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!113, !1619, !1719, !1721, !1619}
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1712, file: !1621, line: 172, baseType: !1619, size: 64, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1712, file: !1621, line: 173, baseType: !1671, size: 64, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1591, file: !1592, line: 138, baseType: !1619, size: 64, offset: 768)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1591, file: !1592, line: 139, baseType: !1619, size: 64, offset: 832)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1591, file: !1592, line: 140, baseType: !1619, size: 64, offset: 896)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1591, file: !1592, line: 145, baseType: !1729, size: 64, offset: 960)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1731, line: 13, size: 896, elements: !1732)
!1731 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1732 = !{!1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1730, file: !1731, line: 14, baseType: !222, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1730, file: !1731, line: 15, baseType: !200, size: 32, offset: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1730, file: !1731, line: 16, baseType: !200, size: 32, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1730, file: !1731, line: 21, baseType: !153, size: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1730, file: !1731, line: 27, baseType: !145, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1730, file: !1731, line: 28, baseType: !145, size: 64, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1730, file: !1731, line: 29, baseType: !153, size: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1730, file: !1731, line: 32, baseType: !632, size: 128, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1730, file: !1731, line: 33, baseType: !427, size: 32, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1730, file: !1731, line: 37, baseType: !153, size: 64, offset: 576)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1730, file: !1731, line: 44, baseType: !1744, size: 256, offset: 640)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1745, line: 15, size: 256, elements: !1746)
!1745 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1744, file: !1745, line: 16, baseType: !799)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1744, file: !1745, line: 18, baseType: !113, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1744, file: !1745, line: 19, baseType: !113, size: 32, offset: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1744, file: !1745, line: 20, baseType: !113, size: 32, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1744, file: !1745, line: 21, baseType: !113, size: 32, offset: 96)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1744, file: !1745, line: 22, baseType: !145, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1744, file: !1745, line: 23, baseType: !145, size: 64, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1591, file: !1592, line: 146, baseType: !1522, size: 64, offset: 1024)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1591, file: !1592, line: 147, baseType: !1756, size: 64, offset: 1088)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1592, line: 25, size: 64, elements: !1758)
!1758 = !{!1759, !1760, !1761}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1757, file: !1592, line: 26, baseType: !200, size: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1757, file: !1592, line: 27, baseType: !113, size: 32, offset: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1757, file: !1592, line: 28, baseType: !1762, offset: 64)
!1762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, elements: !1763)
!1763 = !{!1764}
!1764 = !DISubrange(count: 0)
!1765 = !DIDerivedType(tag: DW_TAG_member, scope: !1591, file: !1592, line: 149, baseType: !1766, size: 128, offset: 1152)
!1766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1591, file: !1592, line: 149, size: 128, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1766, file: !1592, line: 150, baseType: !113, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1766, file: !1592, line: 151, baseType: !359, size: 128, align: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1231, file: !1232, line: 926, baseType: !1589, size: 64, offset: 8576)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1231, file: !1232, line: 929, baseType: !1589, size: 64, offset: 8640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1231, file: !1232, line: 933, baseType: !1619, size: 64, offset: 8704)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1231, file: !1232, line: 943, baseType: !1774, size: 128, offset: 8768)
!1774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 128, elements: !1775)
!1775 = !{!1776}
!1776 = !DISubrange(count: 16)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1231, file: !1232, line: 945, baseType: !1778, size: 64, offset: 8896)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1232, line: 49, flags: DIFlagFwdDecl)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1231, file: !1232, line: 956, baseType: !1781, size: 64, offset: 8960)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1232, line: 45, flags: DIFlagFwdDecl)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1231, file: !1232, line: 959, baseType: !1784, size: 64, offset: 9024)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1232, line: 959, flags: DIFlagFwdDecl)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1231, file: !1232, line: 962, baseType: !1787, size: 64, offset: 9088)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1232, line: 66, flags: DIFlagFwdDecl)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1231, file: !1232, line: 966, baseType: !1790, size: 64, offset: 9152)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1792, line: 31, size: 576, elements: !1793)
!1792 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1793 = !{!1794, !1795, !1798, !1801, !1804, !1805, !1808, !1811, !1812}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1791, file: !1792, line: 32, baseType: !200, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1791, file: !1792, line: 33, baseType: !1796, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1792, line: 9, flags: DIFlagFwdDecl)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1791, file: !1792, line: 34, baseType: !1799, size: 64, offset: 128)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1792, line: 10, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1791, file: !1792, line: 35, baseType: !1802, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1792, line: 8, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1791, file: !1792, line: 36, baseType: !1503, size: 64, offset: 256)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1791, file: !1792, line: 37, baseType: !1806, size: 64, offset: 320)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1621, line: 34, flags: DIFlagFwdDecl)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1791, file: !1792, line: 38, baseType: !1809, size: 64, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!1810 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1792, line: 38, flags: DIFlagFwdDecl)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1791, file: !1792, line: 39, baseType: !1809, size: 64, offset: 448)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1791, file: !1792, line: 40, baseType: !1813, size: 64, offset: 512)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1792, line: 12, flags: DIFlagFwdDecl)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1231, file: !1232, line: 969, baseType: !1816, size: 64, offset: 9216)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1818, line: 82, size: 7296, elements: !1819)
!1818 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825, !1826, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1855, !1864, !1865, !1867, !1868, !1869, !1870, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1900, !1901, !1908, !1909, !1910, !1911, !1912, !1913}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1817, file: !1818, line: 83, baseType: !222, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1817, file: !1818, line: 84, baseType: !200, size: 32, offset: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1817, file: !1818, line: 85, baseType: !113, size: 32, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1817, file: !1818, line: 86, baseType: !166, size: 128, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1817, file: !1818, line: 88, baseType: !1490, size: 128, offset: 256)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1817, file: !1818, line: 91, baseType: !1230, size: 64, offset: 384)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1817, file: !1818, line: 94, baseType: !1827, size: 192, offset: 448)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1828, line: 30, size: 192, elements: !1829)
!1828 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1827, file: !1828, line: 31, baseType: !166, size: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1827, file: !1828, line: 32, baseType: !1832, size: 64, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1833, line: 25, baseType: !1834)
!1833 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1833, line: 23, size: 64, elements: !1835)
!1835 = !{!1836}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1834, file: !1833, line: 24, baseType: !1379, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1817, file: !1818, line: 97, baseType: !628, size: 64, offset: 640)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1817, file: !1818, line: 100, baseType: !113, size: 32, offset: 704)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1817, file: !1818, line: 106, baseType: !113, size: 32, offset: 736)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1817, file: !1818, line: 107, baseType: !1230, size: 64, offset: 768)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1817, file: !1818, line: 110, baseType: !113, size: 32, offset: 832)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1817, file: !1818, line: 111, baseType: !7, size: 32, offset: 864)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1817, file: !1818, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1817, file: !1818, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1817, file: !1818, line: 128, baseType: !113, size: 32, offset: 928)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1817, file: !1818, line: 129, baseType: !166, size: 128, offset: 960)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1817, file: !1818, line: 132, baseType: !1301, size: 512, offset: 1088)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1817, file: !1818, line: 133, baseType: !1309, size: 64, offset: 1600)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1817, file: !1818, line: 140, baseType: !1850, size: 256, offset: 1664)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1851, size: 256, elements: !1611)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1818, line: 38, size: 128, elements: !1852)
!1852 = !{!1853, !1854}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1851, file: !1818, line: 39, baseType: !413, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1851, file: !1818, line: 40, baseType: !413, size: 64, offset: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1817, file: !1818, line: 146, baseType: !1856, size: 192, offset: 1920)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1818, line: 66, size: 192, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1856, file: !1818, line: 67, baseType: !1859, size: 192)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1818, line: 47, size: 192, elements: !1860)
!1860 = !{!1861, !1862, !1863}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1859, file: !1818, line: 48, baseType: !155, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1859, file: !1818, line: 49, baseType: !155, size: 64, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1859, file: !1818, line: 50, baseType: !155, size: 64, offset: 128)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1817, file: !1818, line: 150, baseType: !1572, size: 640, offset: 2112)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1817, file: !1818, line: 153, baseType: !1866, size: 256, offset: 2752)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 256, elements: !1175)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1817, file: !1818, line: 159, baseType: !1480, size: 64, offset: 3008)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1817, file: !1818, line: 162, baseType: !113, size: 32, offset: 3072)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1817, file: !1818, line: 164, baseType: !213, size: 64, offset: 3136)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1817, file: !1818, line: 175, baseType: !1871, size: 32, offset: 3200)
!1871 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !382, line: 805, baseType: !1872)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !382, line: 798, size: 32, elements: !1873)
!1873 = !{!1874, !1875}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1872, file: !382, line: 803, baseType: !381, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1872, file: !382, line: 804, baseType: !183, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1817, file: !1818, line: 176, baseType: !413, size: 64, offset: 3264)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1817, file: !1818, line: 176, baseType: !413, size: 64, offset: 3328)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1817, file: !1818, line: 176, baseType: !413, size: 64, offset: 3392)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1817, file: !1818, line: 176, baseType: !413, size: 64, offset: 3456)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1817, file: !1818, line: 177, baseType: !413, size: 64, offset: 3520)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1817, file: !1818, line: 178, baseType: !413, size: 64, offset: 3584)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1817, file: !1818, line: 179, baseType: !1560, size: 128, offset: 3648)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1817, file: !1818, line: 180, baseType: !145, size: 64, offset: 3776)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1817, file: !1818, line: 180, baseType: !145, size: 64, offset: 3840)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1817, file: !1818, line: 180, baseType: !145, size: 64, offset: 3904)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1817, file: !1818, line: 180, baseType: !145, size: 64, offset: 3968)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1817, file: !1818, line: 181, baseType: !145, size: 64, offset: 4032)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1817, file: !1818, line: 181, baseType: !145, size: 64, offset: 4096)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1817, file: !1818, line: 181, baseType: !145, size: 64, offset: 4160)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1817, file: !1818, line: 181, baseType: !145, size: 64, offset: 4224)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1817, file: !1818, line: 182, baseType: !145, size: 64, offset: 4288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1817, file: !1818, line: 182, baseType: !145, size: 64, offset: 4352)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1817, file: !1818, line: 182, baseType: !145, size: 64, offset: 4416)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1817, file: !1818, line: 182, baseType: !145, size: 64, offset: 4480)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1817, file: !1818, line: 183, baseType: !145, size: 64, offset: 4544)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1817, file: !1818, line: 183, baseType: !145, size: 64, offset: 4608)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1817, file: !1818, line: 184, baseType: !1898, offset: 4672)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1899, line: 12, elements: !197)
!1899 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1817, file: !1818, line: 192, baseType: !415, size: 64, offset: 4672)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1817, file: !1818, line: 203, baseType: !1902, size: 2048, offset: 4736)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1903, size: 2048, elements: !1775)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1904, line: 43, size: 128, elements: !1905)
!1904 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1905 = !{!1906, !1907}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1903, file: !1904, line: 44, baseType: !323, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1903, file: !1904, line: 45, baseType: !323, size: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1817, file: !1818, line: 220, baseType: !482, size: 8, offset: 6784)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1817, file: !1818, line: 221, baseType: !1219, size: 16, offset: 6800)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1817, file: !1818, line: 222, baseType: !1219, size: 16, offset: 6816)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1817, file: !1818, line: 224, baseType: !994, size: 64, offset: 6848)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1817, file: !1818, line: 227, baseType: !178, size: 192, offset: 6912)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1817, file: !1818, line: 233, baseType: !178, size: 192, offset: 7104)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1231, file: !1232, line: 970, baseType: !1915, size: 64, offset: 9280)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1818, line: 20, size: 16576, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1916, file: !1818, line: 21, baseType: !183)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1916, file: !1818, line: 22, baseType: !222, size: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1916, file: !1818, line: 23, baseType: !1490, size: 128, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1916, file: !1818, line: 24, baseType: !1922, size: 16384, offset: 192)
!1922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1923, size: 16384, elements: !279)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1828, line: 49, size: 256, elements: !1924)
!1924 = !{!1925}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1923, file: !1828, line: 50, baseType: !1926, size: 256)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1828, line: 35, size: 256, elements: !1927)
!1927 = !{!1928, !1935, !1936, !1942}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1926, file: !1828, line: 37, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1930, line: 19, baseType: !1931)
!1930 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1930, line: 18, baseType: !1933)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{null, !113}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1926, file: !1828, line: 38, baseType: !145, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1926, file: !1828, line: 44, baseType: !1937, size: 64, offset: 128)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1930, line: 22, baseType: !1938)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1930, line: 21, baseType: !1940)
!1940 = !DISubroutineType(types: !1941)
!1941 = !{null}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1926, file: !1828, line: 46, baseType: !1832, size: 64, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1231, file: !1232, line: 971, baseType: !1832, size: 64, offset: 9344)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1231, file: !1232, line: 972, baseType: !1832, size: 64, offset: 9408)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1231, file: !1232, line: 974, baseType: !1832, size: 64, offset: 9472)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1231, file: !1232, line: 975, baseType: !1827, size: 192, offset: 9536)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1231, file: !1232, line: 976, baseType: !145, size: 64, offset: 9728)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1231, file: !1232, line: 977, baseType: !321, size: 64, offset: 9792)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1231, file: !1232, line: 978, baseType: !7, size: 32, offset: 9856)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1231, file: !1232, line: 980, baseType: !362, size: 64, offset: 9920)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1231, file: !1232, line: 989, baseType: !1952, size: 128, offset: 9984)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1953, line: 35, size: 128, elements: !1954)
!1953 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1954 = !{!1955, !1956, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1952, file: !1953, line: 36, baseType: !113, size: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1952, file: !1953, line: 37, baseType: !200, size: 32, offset: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1952, file: !1953, line: 38, baseType: !1958, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1953, line: 23, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1231, file: !1232, line: 992, baseType: !413, size: 64, offset: 10112)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1231, file: !1232, line: 993, baseType: !413, size: 64, offset: 10176)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1231, file: !1232, line: 996, baseType: !183, offset: 10240)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1231, file: !1232, line: 999, baseType: !799, offset: 10240)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1231, file: !1232, line: 1001, baseType: !1965, size: 64, offset: 10240)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1232, line: 636, size: 64, elements: !1966)
!1966 = !{!1967}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1965, file: !1232, line: 637, baseType: !1968, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1231, file: !1232, line: 1005, baseType: !778, size: 128, offset: 10304)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1231, file: !1232, line: 1007, baseType: !1230, size: 64, offset: 10432)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1231, file: !1232, line: 1009, baseType: !1972, size: 64, offset: 10496)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1232, line: 1009, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1231, file: !1232, line: 1043, baseType: !112, size: 64, offset: 10560)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1231, file: !1232, line: 1046, baseType: !1976, size: 64, offset: 10624)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1232, line: 41, flags: DIFlagFwdDecl)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1231, file: !1232, line: 1050, baseType: !1979, size: 64, offset: 10688)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1232, line: 42, flags: DIFlagFwdDecl)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1231, file: !1232, line: 1054, baseType: !1982, size: 64, offset: 10752)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1232, line: 55, flags: DIFlagFwdDecl)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1231, file: !1232, line: 1056, baseType: !1985, size: 64, offset: 10816)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1232, line: 40, flags: DIFlagFwdDecl)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1231, file: !1232, line: 1058, baseType: !1988, size: 64, offset: 10880)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1990, line: 99, size: 704, elements: !1991)
!1990 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1991 = !{!1992, !1993, !1994, !1995, !1996, !1997, !1998, !2017, !2018}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1989, file: !1990, line: 100, baseType: !153, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1989, file: !1990, line: 101, baseType: !200, size: 32, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1989, file: !1990, line: 102, baseType: !200, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1989, file: !1990, line: 105, baseType: !183, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1989, file: !1990, line: 107, baseType: !316, size: 16, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1989, file: !1990, line: 109, baseType: !768, size: 128, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1989, file: !1990, line: 110, baseType: !1999, size: 64, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1990, line: 73, size: 448, elements: !2001)
!2001 = !{!2002, !2005, !2006, !2011, !2016}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2000, file: !1990, line: 74, baseType: !2003, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1990, line: 74, flags: DIFlagFwdDecl)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2000, file: !1990, line: 75, baseType: !1988, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, scope: !2000, file: !1990, line: 83, baseType: !2007, size: 128, offset: 128)
!2007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2000, file: !1990, line: 83, size: 128, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2007, file: !1990, line: 84, baseType: !166, size: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2007, file: !1990, line: 85, baseType: !954, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, scope: !2000, file: !1990, line: 87, baseType: !2012, size: 128, offset: 256)
!2012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2000, file: !1990, line: 87, size: 128, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2012, file: !1990, line: 88, baseType: !632, size: 128)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2012, file: !1990, line: 89, baseType: !359, size: 128, align: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2000, file: !1990, line: 92, baseType: !7, size: 32, offset: 384)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1989, file: !1990, line: 111, baseType: !628, size: 64, offset: 384)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1989, file: !1990, line: 113, baseType: !149, size: 256, offset: 448)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1231, file: !1232, line: 1061, baseType: !2020, size: 64, offset: 10944)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1232, line: 43, flags: DIFlagFwdDecl)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1231, file: !1232, line: 1064, baseType: !145, size: 64, offset: 11008)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1231, file: !1232, line: 1065, baseType: !2024, size: 64, offset: 11072)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1828, line: 14, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1828, line: 12, size: 384, elements: !2027)
!2027 = !{!2028}
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2026, file: !1828, line: 13, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2026, file: !1828, line: 13, size: 384, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2029, file: !1828, line: 13, baseType: !113, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2029, file: !1828, line: 13, baseType: !113, size: 32, offset: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2029, file: !1828, line: 13, baseType: !113, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2029, file: !1828, line: 13, baseType: !2035, size: 256, offset: 128)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2036, line: 32, size: 256, elements: !2037)
!2036 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2043, !2056, !2062, !2071, !2091, !2096}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2035, file: !2036, line: 37, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 34, size: 64, elements: !2040)
!2040 = !{!2041, !2042}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2039, file: !2036, line: 35, baseType: !1469, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2039, file: !2036, line: 36, baseType: !433, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2035, file: !2036, line: 45, baseType: !2044, size: 192)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 40, size: 192, elements: !2045)
!2045 = !{!2046, !2048, !2049, !2055}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2044, file: !2036, line: 41, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !307, line: 95, baseType: !113)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2044, file: !2036, line: 42, baseType: !113, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2044, file: !2036, line: 43, baseType: !2050, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2036, line: 11, baseType: !2051)
!2051 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2036, line: 8, size: 64, elements: !2052)
!2052 = !{!2053, !2054}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2051, file: !2036, line: 9, baseType: !113, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2051, file: !2036, line: 10, baseType: !112, size: 64)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2044, file: !2036, line: 44, baseType: !113, size: 32, offset: 128)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2035, file: !2036, line: 52, baseType: !2057, size: 128)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 48, size: 128, elements: !2058)
!2058 = !{!2059, !2060, !2061}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2057, file: !2036, line: 49, baseType: !1469, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2057, file: !2036, line: 50, baseType: !433, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2057, file: !2036, line: 51, baseType: !2050, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2035, file: !2036, line: 61, baseType: !2063, size: 256)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 55, size: 256, elements: !2064)
!2064 = !{!2065, !2066, !2067, !2068, !2070}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2063, file: !2036, line: 56, baseType: !1469, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2063, file: !2036, line: 57, baseType: !433, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2063, file: !2036, line: 58, baseType: !113, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2063, file: !2036, line: 59, baseType: !2069, size: 64, offset: 128)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !307, line: 94, baseType: !308)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2063, file: !2036, line: 60, baseType: !2069, size: 64, offset: 192)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2035, file: !2036, line: 95, baseType: !2072, size: 256)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 64, size: 256, elements: !2073)
!2073 = !{!2074, !2075}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2072, file: !2036, line: 65, baseType: !112, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2072, file: !2036, line: 77, baseType: !2076, size: 192, offset: 64)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2072, file: !2036, line: 77, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2086}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2076, file: !2036, line: 82, baseType: !1219, size: 16)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2076, file: !2036, line: 88, baseType: !2080, size: 192)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2076, file: !2036, line: 84, size: 192, elements: !2081)
!2081 = !{!2082, !2084, !2085}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2080, file: !2036, line: 85, baseType: !2083, size: 64)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 64, elements: !1339)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2080, file: !2036, line: 86, baseType: !112, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2080, file: !2036, line: 87, baseType: !112, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2076, file: !2036, line: 93, baseType: !2087, size: 96)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2076, file: !2036, line: 90, size: 96, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2087, file: !2036, line: 91, baseType: !2083, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2087, file: !2036, line: 92, baseType: !410, size: 32, offset: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2035, file: !2036, line: 101, baseType: !2092, size: 128)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 98, size: 128, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2092, file: !2036, line: 99, baseType: !309, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2092, file: !2036, line: 100, baseType: !113, size: 32, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2035, file: !2036, line: 108, baseType: !2097, size: 128)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2035, file: !2036, line: 104, size: 128, elements: !2098)
!2098 = !{!2099, !2100, !2101}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2097, file: !2036, line: 105, baseType: !112, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2097, file: !2036, line: 106, baseType: !113, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2097, file: !2036, line: 107, baseType: !7, size: 32, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1231, file: !1232, line: 1067, baseType: !1898, offset: 11136)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1231, file: !1232, line: 1099, baseType: !2104, size: 64, offset: 11136)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1232, line: 56, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1231, file: !1232, line: 1103, baseType: !166, size: 128, offset: 11200)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1231, file: !1232, line: 1104, baseType: !2108, size: 64, offset: 11328)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1232, line: 46, flags: DIFlagFwdDecl)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1231, file: !1232, line: 1105, baseType: !178, size: 192, offset: 11392)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1231, file: !1232, line: 1106, baseType: !7, size: 32, offset: 11584)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1231, file: !1232, line: 1109, baseType: !2113, size: 128, offset: 11648)
!2113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2114, size: 128, elements: !1611)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1232, line: 51, flags: DIFlagFwdDecl)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1231, file: !1232, line: 1110, baseType: !178, size: 192, offset: 11776)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1231, file: !1232, line: 1111, baseType: !166, size: 128, offset: 11968)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1231, file: !1232, line: 1173, baseType: !2119, size: 64, offset: 12096)
!2119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2120, size: 64)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2121, line: 62, size: 256, align: 256, elements: !2122)
!2121 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2122 = !{!2123, !2124, !2125, !2130}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2120, file: !2121, line: 75, baseType: !410, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2120, file: !2121, line: 90, baseType: !410, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2120, file: !2121, line: 124, baseType: !2126, size: 64, offset: 64)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2120, file: !2121, line: 109, size: 64, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2126, file: !2121, line: 110, baseType: !414, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2126, file: !2121, line: 112, baseType: !414, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2120, file: !2121, line: 144, baseType: !410, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1231, file: !1232, line: 1174, baseType: !409, size: 32, offset: 12160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1231, file: !1232, line: 1179, baseType: !145, size: 64, offset: 12224)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1231, file: !1232, line: 1182, baseType: !2134, size: 128, offset: 12288)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1171, line: 76, size: 128, elements: !2135)
!2135 = !{!2136, !2141, !2142}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2134, file: !1171, line: 85, baseType: !2137, size: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2138, line: 7, size: 64, elements: !2139)
!2138 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2139 = !{!2140}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2137, file: !2138, line: 12, baseType: !1376, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2134, file: !1171, line: 88, baseType: !482, size: 8, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2134, file: !1171, line: 95, baseType: !482, size: 8, offset: 72)
!2143 = !DIDerivedType(tag: DW_TAG_member, scope: !1231, file: !1232, line: 1184, baseType: !2144, size: 128, offset: 12416)
!2144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1231, file: !1232, line: 1184, size: 128, elements: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2144, file: !1232, line: 1185, baseType: !222, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2144, file: !1232, line: 1186, baseType: !359, size: 128, align: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1231, file: !1232, line: 1190, baseType: !2149, size: 64, offset: 12544)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1232, line: 53, flags: DIFlagFwdDecl)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1231, file: !1232, line: 1192, baseType: !2152, size: 128, offset: 12608)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1171, line: 64, size: 128, elements: !2153)
!2153 = !{!2154, !2155, !2156}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2152, file: !1171, line: 65, baseType: !750, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2152, file: !1171, line: 67, baseType: !410, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2152, file: !1171, line: 68, baseType: !410, size: 32, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1231, file: !1232, line: 1206, baseType: !113, size: 32, offset: 12736)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1231, file: !1232, line: 1207, baseType: !113, size: 32, offset: 12768)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1231, file: !1232, line: 1209, baseType: !145, size: 64, offset: 12800)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1231, file: !1232, line: 1219, baseType: !413, size: 64, offset: 12864)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1231, file: !1232, line: 1220, baseType: !413, size: 64, offset: 12928)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1231, file: !1232, line: 1317, baseType: !113, size: 32, offset: 12992)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1231, file: !1232, line: 1319, baseType: !1230, size: 64, offset: 13056)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1231, file: !1232, line: 1322, baseType: !2165, size: 64, offset: 13120)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2167, line: 56, size: 512, elements: !2168)
!2167 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2168 = !{!2169, !2170, !2171, !2172, !2173, !2174, !2175, !2177}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2166, file: !2167, line: 57, baseType: !2165, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2166, file: !2167, line: 58, baseType: !112, size: 64, offset: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2166, file: !2167, line: 59, baseType: !145, size: 64, offset: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2166, file: !2167, line: 60, baseType: !145, size: 64, offset: 192)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2166, file: !2167, line: 61, baseType: !839, size: 64, offset: 256)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2166, file: !2167, line: 62, baseType: !7, size: 32, offset: 320)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2166, file: !2167, line: 63, baseType: !2176, size: 64, offset: 384)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !156, line: 153, baseType: !413)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2166, file: !2167, line: 64, baseType: !2178, size: 64, offset: 448)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1231, file: !1232, line: 1326, baseType: !222, size: 32, offset: 13184)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1231, file: !1232, line: 1342, baseType: !112, size: 64, offset: 13248)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1231, file: !1232, line: 1343, baseType: !414, size: 64, offset: 13312)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1231, file: !1232, line: 1344, baseType: !413, size: 64, offset: 13376)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1231, file: !1232, line: 1345, baseType: !414, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1231, file: !1232, line: 1346, baseType: !414, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1231, file: !1232, line: 1347, baseType: !414, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1231, file: !1232, line: 1348, baseType: !359, size: 128, align: 64, offset: 13504)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1231, file: !1232, line: 1358, baseType: !2189, size: 34816, offset: 13824)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2190, line: 485, size: 34816, elements: !2191)
!2190 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2191 = !{!2192, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2221, !2222, !2223, !2224, !2225, !2226, !2229, !2230, !2231}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2189, file: !2190, line: 487, baseType: !2193, size: 192)
!2193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2194, size: 192, elements: !275)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2195, line: 16, size: 64, elements: !2196)
!2195 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2196 = !{!2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2194, file: !2195, line: 17, baseType: !878, size: 16)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2194, file: !2195, line: 18, baseType: !878, size: 16, offset: 16)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2194, file: !2195, line: 19, baseType: !878, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2194, file: !2195, line: 19, baseType: !878, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2194, file: !2195, line: 19, baseType: !878, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2194, file: !2195, line: 19, baseType: !878, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2194, file: !2195, line: 19, baseType: !878, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2194, file: !2195, line: 20, baseType: !878, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2194, file: !2195, line: 20, baseType: !878, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2194, file: !2195, line: 20, baseType: !878, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2194, file: !2195, line: 20, baseType: !878, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2194, file: !2195, line: 20, baseType: !878, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2194, file: !2195, line: 20, baseType: !878, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2189, file: !2190, line: 491, baseType: !145, size: 64, offset: 192)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2189, file: !2190, line: 495, baseType: !316, size: 16, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2189, file: !2190, line: 496, baseType: !316, size: 16, offset: 272)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2189, file: !2190, line: 497, baseType: !316, size: 16, offset: 288)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2189, file: !2190, line: 498, baseType: !316, size: 16, offset: 304)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2189, file: !2190, line: 502, baseType: !145, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2189, file: !2190, line: 503, baseType: !145, size: 64, offset: 384)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2189, file: !2190, line: 514, baseType: !2218, size: 256, offset: 448)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2219, size: 256, elements: !1175)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2190, line: 483, flags: DIFlagFwdDecl)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2189, file: !2190, line: 516, baseType: !145, size: 64, offset: 704)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2189, file: !2190, line: 518, baseType: !145, size: 64, offset: 768)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2189, file: !2190, line: 520, baseType: !145, size: 64, offset: 832)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2189, file: !2190, line: 521, baseType: !145, size: 64, offset: 896)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2189, file: !2190, line: 522, baseType: !145, size: 64, offset: 960)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2189, file: !2190, line: 528, baseType: !2227, size: 64, offset: 1024)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2190, line: 10, flags: DIFlagFwdDecl)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2189, file: !2190, line: 535, baseType: !145, size: 64, offset: 1088)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2189, file: !2190, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2189, file: !2190, line: 540, baseType: !2232, size: 33280, offset: 1536)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2233, line: 317, size: 33280, elements: !2234)
!2233 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2234 = !{!2235, !2236, !2237}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2232, file: !2233, line: 330, baseType: !7, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2232, file: !2233, line: 337, baseType: !145, size: 64, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2232, file: !2233, line: 348, baseType: !2238, size: 32768, offset: 512)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2233, line: 304, size: 32768, elements: !2239)
!2239 = !{!2240, !2255, !2294, !2344, !2357}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2238, file: !2233, line: 305, baseType: !2241, size: 896)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2233, line: 12, size: 896, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2254}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2241, file: !2233, line: 13, baseType: !409, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2241, file: !2233, line: 14, baseType: !409, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2241, file: !2233, line: 15, baseType: !409, size: 32, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2241, file: !2233, line: 16, baseType: !409, size: 32, offset: 96)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2241, file: !2233, line: 17, baseType: !409, size: 32, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2241, file: !2233, line: 18, baseType: !409, size: 32, offset: 160)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2241, file: !2233, line: 19, baseType: !409, size: 32, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2241, file: !2233, line: 22, baseType: !2251, size: 640, offset: 224)
!2251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 640, elements: !2252)
!2252 = !{!2253}
!2253 = !DISubrange(count: 20)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2241, file: !2233, line: 25, baseType: !409, size: 32, offset: 864)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2238, file: !2233, line: 306, baseType: !2256, size: 4096, align: 128)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2233, line: 34, size: 4096, align: 128, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2277, !2278, !2279, !2283, !2285, !2289}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2256, file: !2233, line: 35, baseType: !878, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2256, file: !2233, line: 36, baseType: !878, size: 16, offset: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2256, file: !2233, line: 37, baseType: !878, size: 16, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2256, file: !2233, line: 38, baseType: !878, size: 16, offset: 48)
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2256, file: !2233, line: 39, baseType: !2263, size: 128, offset: 64)
!2263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2256, file: !2233, line: 39, size: 128, elements: !2264)
!2264 = !{!2265, !2270}
!2265 = !DIDerivedType(tag: DW_TAG_member, scope: !2263, file: !2233, line: 40, baseType: !2266, size: 128)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2263, file: !2233, line: 40, size: 128, elements: !2267)
!2267 = !{!2268, !2269}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2266, file: !2233, line: 41, baseType: !413, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2266, file: !2233, line: 42, baseType: !413, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2263, file: !2233, line: 44, baseType: !2271, size: 128)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2263, file: !2233, line: 44, size: 128, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2271, file: !2233, line: 45, baseType: !409, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2271, file: !2233, line: 46, baseType: !409, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2271, file: !2233, line: 47, baseType: !409, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2271, file: !2233, line: 48, baseType: !409, size: 32, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2256, file: !2233, line: 51, baseType: !409, size: 32, offset: 192)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2256, file: !2233, line: 52, baseType: !409, size: 32, offset: 224)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2256, file: !2233, line: 55, baseType: !2280, size: 1024, offset: 256)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 1024, elements: !2281)
!2281 = !{!2282}
!2282 = !DISubrange(count: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2256, file: !2233, line: 58, baseType: !2284, size: 2048, offset: 1280)
!2284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 2048, elements: !279)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2256, file: !2233, line: 60, baseType: !2286, size: 384, offset: 3328)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 384, elements: !2287)
!2287 = !{!2288}
!2288 = !DISubrange(count: 12)
!2289 = !DIDerivedType(tag: DW_TAG_member, scope: !2256, file: !2233, line: 62, baseType: !2290, size: 384, offset: 3712)
!2290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2256, file: !2233, line: 62, size: 384, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2290, file: !2233, line: 63, baseType: !2286, size: 384)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2290, file: !2233, line: 64, baseType: !2286, size: 384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2238, file: !2233, line: 307, baseType: !2295, size: 1088)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2233, line: 79, size: 1088, elements: !2296)
!2296 = !{!2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2343}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2295, file: !2233, line: 80, baseType: !409, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2295, file: !2233, line: 81, baseType: !409, size: 32, offset: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2295, file: !2233, line: 82, baseType: !409, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2295, file: !2233, line: 83, baseType: !409, size: 32, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2295, file: !2233, line: 84, baseType: !409, size: 32, offset: 128)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2295, file: !2233, line: 85, baseType: !409, size: 32, offset: 160)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2295, file: !2233, line: 86, baseType: !409, size: 32, offset: 192)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2295, file: !2233, line: 88, baseType: !2251, size: 640, offset: 224)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2295, file: !2233, line: 89, baseType: !1361, size: 8, offset: 864)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2295, file: !2233, line: 90, baseType: !1361, size: 8, offset: 872)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2295, file: !2233, line: 91, baseType: !1361, size: 8, offset: 880)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2295, file: !2233, line: 92, baseType: !1361, size: 8, offset: 888)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2295, file: !2233, line: 93, baseType: !1361, size: 8, offset: 896)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2295, file: !2233, line: 94, baseType: !1361, size: 8, offset: 904)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2295, file: !2233, line: 95, baseType: !2312, size: 64, offset: 960)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2314, line: 11, size: 128, elements: !2315)
!2314 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2315 = !{!2316, !2317}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2313, file: !2314, line: 12, baseType: !309, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2313, file: !2314, line: 13, baseType: !2318, size: 64, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2320, line: 56, size: 1344, elements: !2321)
!2320 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2321 = !{!2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2319, file: !2320, line: 61, baseType: !145, size: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2319, file: !2320, line: 62, baseType: !145, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2319, file: !2320, line: 63, baseType: !145, size: 64, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2319, file: !2320, line: 64, baseType: !145, size: 64, offset: 192)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2319, file: !2320, line: 65, baseType: !145, size: 64, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2319, file: !2320, line: 66, baseType: !145, size: 64, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2319, file: !2320, line: 68, baseType: !145, size: 64, offset: 384)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2319, file: !2320, line: 69, baseType: !145, size: 64, offset: 448)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2319, file: !2320, line: 70, baseType: !145, size: 64, offset: 512)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2319, file: !2320, line: 71, baseType: !145, size: 64, offset: 576)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2319, file: !2320, line: 72, baseType: !145, size: 64, offset: 640)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2319, file: !2320, line: 73, baseType: !145, size: 64, offset: 704)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2319, file: !2320, line: 74, baseType: !145, size: 64, offset: 768)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2319, file: !2320, line: 75, baseType: !145, size: 64, offset: 832)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2319, file: !2320, line: 76, baseType: !145, size: 64, offset: 896)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2319, file: !2320, line: 81, baseType: !145, size: 64, offset: 960)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2319, file: !2320, line: 83, baseType: !145, size: 64, offset: 1024)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2319, file: !2320, line: 84, baseType: !145, size: 64, offset: 1088)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2319, file: !2320, line: 85, baseType: !145, size: 64, offset: 1152)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2319, file: !2320, line: 86, baseType: !145, size: 64, offset: 1216)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2319, file: !2320, line: 87, baseType: !145, size: 64, offset: 1280)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2295, file: !2233, line: 96, baseType: !409, size: 32, offset: 1024)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2238, file: !2233, line: 308, baseType: !2345, size: 4608, align: 512)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2233, line: 289, size: 4608, align: 512, elements: !2346)
!2346 = !{!2347, !2348, !2355}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2345, file: !2233, line: 290, baseType: !2256, size: 4096, align: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2345, file: !2233, line: 291, baseType: !2349, size: 512, offset: 4096)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2233, line: 268, size: 512, elements: !2350)
!2350 = !{!2351, !2352, !2353}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2349, file: !2233, line: 269, baseType: !413, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2349, file: !2233, line: 270, baseType: !413, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2349, file: !2233, line: 271, baseType: !2354, size: 384, offset: 128)
!2354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 384, elements: !1667)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2345, file: !2233, line: 292, baseType: !2356, offset: 4608)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1361, elements: !1763)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2238, file: !2233, line: 309, baseType: !2358, size: 32768)
!2358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1361, size: 32768, elements: !2359)
!2359 = !{!2360}
!2360 = !DISubrange(count: 4096)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1227, file: !752, line: 378, baseType: !2362, size: 64, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1223, file: !752, line: 384, baseType: !1544, size: 192, offset: 192)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !998, file: !752, line: 500, baseType: !183, offset: 6656)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !998, file: !752, line: 501, baseType: !2366, size: 64, offset: 6656)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !752, line: 387, flags: DIFlagFwdDecl)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !998, file: !752, line: 516, baseType: !1522, size: 64, offset: 6720)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !998, file: !752, line: 519, baseType: !351, size: 64, offset: 6784)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !998, file: !752, line: 521, baseType: !2371, size: 64, offset: 6848)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !752, line: 521, flags: DIFlagFwdDecl)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !998, file: !752, line: 545, baseType: !200, size: 32, offset: 6912)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !998, file: !752, line: 548, baseType: !482, size: 8, offset: 6944)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !998, file: !752, line: 550, baseType: !2376, offset: 6952)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2377, line: 142, elements: !197)
!2377 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !998, file: !752, line: 554, baseType: !149, size: 256, offset: 6976)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !998, file: !752, line: 557, baseType: !409, size: 32, offset: 7232)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !995, file: !752, line: 565, baseType: !144, offset: 7296)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !991, file: !752, line: 151, baseType: !200, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !983, file: !752, line: 156, baseType: !183, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !752, line: 159, baseType: !2384, size: 128)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !752, line: 159, size: 128, elements: !2385)
!2385 = !{!2386, !2450}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2384, file: !752, line: 161, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2389)
!2389 = !{!2390, !2400, !2421, !2422, !2423, !2424, !2425, !2437, !2438, !2439}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2388, file: !31, line: 111, baseType: !2391, size: 384)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2392)
!2392 = !{!2393, !2395, !2396, !2397, !2398, !2399}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2391, file: !31, line: 20, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2391, file: !31, line: 21, baseType: !2394, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2391, file: !31, line: 22, baseType: !2394, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2391, file: !31, line: 23, baseType: !145, size: 64, offset: 192)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2391, file: !31, line: 24, baseType: !145, size: 64, offset: 256)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2391, file: !31, line: 25, baseType: !145, size: 64, offset: 320)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2388, file: !31, line: 112, baseType: !2401, size: 64, offset: 384)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2403, line: 105, size: 128, elements: !2404)
!2403 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2404 = !{!2405, !2406}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2402, file: !2403, line: 110, baseType: !145, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2402, file: !2403, line: 118, baseType: !2407, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2403, line: 95, size: 448, elements: !2409)
!2409 = !{!2410, !2411, !2416, !2417, !2418, !2419, !2420}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2408, file: !2403, line: 96, baseType: !153, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2408, file: !2403, line: 97, baseType: !2412, size: 64, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2403, line: 60, baseType: !2414)
!2414 = !DISubroutineType(types: !2415)
!2415 = !{null, !2401}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2408, file: !2403, line: 98, baseType: !2412, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2408, file: !2403, line: 99, baseType: !482, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2408, file: !2403, line: 100, baseType: !482, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2408, file: !2403, line: 101, baseType: !359, size: 128, align: 64, offset: 256)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2408, file: !2403, line: 102, baseType: !2401, size: 64, offset: 384)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2388, file: !31, line: 113, baseType: !2402, size: 128, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2388, file: !31, line: 114, baseType: !1544, size: 192, offset: 576)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2388, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2388, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2388, file: !31, line: 117, baseType: !2426, size: 64, offset: 832)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2429)
!2429 = !{!2430, !2431, !2435, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2428, file: !31, line: 73, baseType: !859, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2428, file: !31, line: 78, baseType: !2432, size: 64, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{null, !2387}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2428, file: !31, line: 83, baseType: !2432, size: 64, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2428, file: !31, line: 89, baseType: !1047, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2388, file: !31, line: 118, baseType: !112, size: 64, offset: 896)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2388, file: !31, line: 119, baseType: !113, size: 32, offset: 960)
!2439 = !DIDerivedType(tag: DW_TAG_member, scope: !2388, file: !31, line: 120, baseType: !2440, size: 128, offset: 1024)
!2440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2388, file: !31, line: 120, size: 128, elements: !2441)
!2441 = !{!2442, !2448}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2440, file: !31, line: 121, baseType: !2443, size: 128)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2444, line: 6, size: 128, elements: !2445)
!2444 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2443, file: !2444, line: 7, baseType: !413, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2443, file: !2444, line: 8, baseType: !413, size: 64, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2440, file: !31, line: 122, baseType: !2449)
!2449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2443, elements: !1763)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2384, file: !752, line: 162, baseType: !112, size: 64, offset: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !756, file: !752, line: 176, baseType: !359, size: 128, align: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !751, file: !752, line: 179, baseType: !2453, size: 32, offset: 384)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !751, file: !752, line: 179, size: 32, elements: !2454)
!2454 = !{!2455, !2456, !2457, !2458}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2453, file: !752, line: 184, baseType: !200, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2453, file: !752, line: 192, baseType: !7, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2453, file: !752, line: 194, baseType: !7, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2453, file: !752, line: 195, baseType: !113, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !751, file: !752, line: 199, baseType: !200, size: 32, offset: 416)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !650, file: !44, line: 1964, baseType: !2461, size: 64, offset: 1344)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!309, !589, !2464}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2466, line: 12, size: 256, elements: !2467)
!2466 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2467 = !{!2468, !2469, !2470, !2471, !2472}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2465, file: !2466, line: 13, baseType: !773, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2465, file: !2466, line: 16, baseType: !113, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2465, file: !2466, line: 23, baseType: !145, size: 64, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2465, file: !2466, line: 30, baseType: !145, size: 64, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2465, file: !2466, line: 33, baseType: !2473, size: 64, offset: 192)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !752, line: 27, flags: DIFlagFwdDecl)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !650, file: !44, line: 1966, baseType: !2461, size: 64, offset: 1408)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !590, file: !44, line: 1424, baseType: !2477, size: 64, offset: 448)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2480)
!2480 = !{!2481, !2527, !2531, !2535, !2536, !2537, !2538, !2539, !2544, !2549, !2553}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2479, file: !38, line: 323, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!113, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2487)
!2487 = !{!2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2512, !2513, !2514}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2486, file: !38, line: 295, baseType: !632, size: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2486, file: !38, line: 296, baseType: !166, size: 128, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2486, file: !38, line: 297, baseType: !166, size: 128, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2486, file: !38, line: 298, baseType: !166, size: 128, offset: 384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2486, file: !38, line: 299, baseType: !178, size: 192, offset: 512)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2486, file: !38, line: 300, baseType: !183, offset: 704)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2486, file: !38, line: 301, baseType: !200, size: 32, offset: 704)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2486, file: !38, line: 302, baseType: !589, size: 64, offset: 768)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2486, file: !38, line: 303, baseType: !2497, size: 64, offset: 832)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2498)
!2498 = !{!2499, !2511}
!2499 = !DIDerivedType(tag: DW_TAG_member, scope: !2497, file: !38, line: 69, baseType: !2500, size: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2497, file: !38, line: 69, size: 32, elements: !2501)
!2501 = !{!2502, !2503, !2504}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2500, file: !38, line: 70, baseType: !427, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2500, file: !38, line: 71, baseType: !435, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2500, file: !38, line: 72, baseType: !2505, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2506, line: 24, baseType: !2507)
!2506 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2506, line: 22, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2507, file: !2506, line: 23, baseType: !2510, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2506, line: 20, baseType: !433)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2497, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2486, file: !38, line: 304, baseType: !523, size: 64, offset: 896)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2486, file: !38, line: 305, baseType: !145, size: 64, offset: 960)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2486, file: !38, line: 306, baseType: !2515, size: 576, offset: 1024)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2516)
!2516 = !{!2517, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2515, file: !38, line: 206, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !164)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2515, file: !38, line: 207, baseType: !2518, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2515, file: !38, line: 208, baseType: !2518, size: 64, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2515, file: !38, line: 209, baseType: !2518, size: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2515, file: !38, line: 210, baseType: !2518, size: 64, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2515, file: !38, line: 211, baseType: !2518, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2515, file: !38, line: 212, baseType: !2518, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2515, file: !38, line: 213, baseType: !530, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2515, file: !38, line: 214, baseType: !530, size: 64, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2479, file: !38, line: 324, baseType: !2528, size: 64, offset: 64)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2485, !589, !113}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2479, file: !38, line: 325, baseType: !2532, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !2485}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2479, file: !38, line: 326, baseType: !2482, size: 64, offset: 192)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2479, file: !38, line: 327, baseType: !2482, size: 64, offset: 256)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2479, file: !38, line: 328, baseType: !2482, size: 64, offset: 320)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2479, file: !38, line: 329, baseType: !678, size: 64, offset: 384)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2479, file: !38, line: 332, baseType: !2540, size: 64, offset: 448)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!2543, !421}
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2479, file: !38, line: 333, baseType: !2545, size: 64, offset: 512)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!113, !421, !2548}
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2479, file: !38, line: 335, baseType: !2550, size: 64, offset: 576)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{!113, !421, !2543}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2479, file: !38, line: 337, baseType: !2554, size: 64, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!113, !589, !2557}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !590, file: !44, line: 1425, baseType: !2559, size: 64, offset: 512)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2562)
!2562 = !{!2563, !2567, !2568, !2572, !2573, !2574, !2589, !2612, !2616, !2617, !2640}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2561, file: !38, line: 429, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!113, !589, !113, !113, !539}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2561, file: !38, line: 430, baseType: !678, size: 64, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2561, file: !38, line: 431, baseType: !2569, size: 64, offset: 128)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DISubroutineType(types: !2571)
!2571 = !{!113, !589, !7}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2561, file: !38, line: 432, baseType: !2569, size: 64, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2561, file: !38, line: 433, baseType: !678, size: 64, offset: 256)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2561, file: !38, line: 434, baseType: !2575, size: 64, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!113, !589, !113, !2578}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2579, file: !38, line: 416, baseType: !113, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2579, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2579, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2579, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2579, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2579, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2579, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2579, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2561, file: !38, line: 435, baseType: !2590, size: 64, offset: 384)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!113, !589, !2497, !2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2594, file: !38, line: 344, baseType: !113, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2594, file: !38, line: 345, baseType: !413, size: 64, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2594, file: !38, line: 346, baseType: !413, size: 64, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2594, file: !38, line: 347, baseType: !413, size: 64, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2594, file: !38, line: 348, baseType: !413, size: 64, offset: 256)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2594, file: !38, line: 349, baseType: !413, size: 64, offset: 320)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2594, file: !38, line: 350, baseType: !413, size: 64, offset: 384)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2594, file: !38, line: 351, baseType: !160, size: 64, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2594, file: !38, line: 353, baseType: !160, size: 64, offset: 512)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2594, file: !38, line: 354, baseType: !113, size: 32, offset: 576)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2594, file: !38, line: 355, baseType: !113, size: 32, offset: 608)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2594, file: !38, line: 356, baseType: !413, size: 64, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2594, file: !38, line: 357, baseType: !413, size: 64, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2594, file: !38, line: 358, baseType: !413, size: 64, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2594, file: !38, line: 359, baseType: !160, size: 64, offset: 832)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2594, file: !38, line: 360, baseType: !113, size: 32, offset: 896)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2561, file: !38, line: 436, baseType: !2613, size: 64, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DISubroutineType(types: !2615)
!2615 = !{!113, !589, !2557, !2593}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2561, file: !38, line: 438, baseType: !2590, size: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2561, file: !38, line: 439, baseType: !2618, size: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!113, !589, !2621}
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2622, file: !38, line: 410, baseType: !7, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2622, file: !38, line: 411, baseType: !2626, size: 1344, offset: 64)
!2626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2627, size: 1344, elements: !275)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2628)
!2628 = !{!2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2639}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2627, file: !38, line: 396, baseType: !7, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2627, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2627, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2627, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2627, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2627, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2627, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2627, file: !38, line: 404, baseType: !415, size: 64, offset: 256)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2627, file: !38, line: 405, baseType: !2638, size: 64, offset: 320)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !156, line: 126, baseType: !413)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2627, file: !38, line: 406, baseType: !2638, size: 64, offset: 384)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2561, file: !38, line: 440, baseType: !2569, size: 64, offset: 640)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !590, file: !44, line: 1426, baseType: !2642, size: 64, offset: 576)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2644)
!2644 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !590, file: !44, line: 1427, baseType: !145, size: 64, offset: 640)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !590, file: !44, line: 1428, baseType: !145, size: 64, offset: 704)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !590, file: !44, line: 1429, baseType: !145, size: 64, offset: 768)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !590, file: !44, line: 1430, baseType: !376, size: 64, offset: 832)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !590, file: !44, line: 1431, baseType: !793, size: 256, offset: 896)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !590, file: !44, line: 1432, baseType: !113, size: 32, offset: 1152)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !590, file: !44, line: 1433, baseType: !200, size: 32, offset: 1184)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !590, file: !44, line: 1437, baseType: !2653, size: 64, offset: 1216)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2656)
!2656 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !590, file: !44, line: 1449, baseType: !2658, size: 64, offset: 1280)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !392, line: 34, size: 64, elements: !2659)
!2659 = !{!2660}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2658, file: !392, line: 35, baseType: !395, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !590, file: !44, line: 1450, baseType: !166, size: 128, offset: 1344)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !590, file: !44, line: 1451, baseType: !2663, size: 64, offset: 1472)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !590, file: !44, line: 1452, baseType: !1985, size: 64, offset: 1536)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !590, file: !44, line: 1453, baseType: !2667, size: 64, offset: 1600)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !590, file: !44, line: 1454, baseType: !632, size: 128, offset: 1664)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !590, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !590, file: !44, line: 1456, baseType: !2672, size: 2432, offset: 1856)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2678, !2710}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2672, file: !38, line: 519, baseType: !7, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2672, file: !38, line: 520, baseType: !793, size: 256, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2672, file: !38, line: 521, baseType: !2677, size: 192, offset: 320)
!2677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 192, elements: !275)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2672, file: !38, line: 522, baseType: !2679, size: 1728, offset: 512)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2680, size: 1728, elements: !275)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2681)
!2681 = !{!2682, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2680, file: !38, line: 223, baseType: !2683, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2685)
!2685 = !{!2686, !2687, !2700, !2701}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2684, file: !38, line: 444, baseType: !113, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2684, file: !38, line: 445, baseType: !2688, size: 64, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2690)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2691)
!2691 = !{!2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2690, file: !38, line: 311, baseType: !678, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2690, file: !38, line: 312, baseType: !678, size: 64, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2690, file: !38, line: 313, baseType: !678, size: 64, offset: 128)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2690, file: !38, line: 314, baseType: !678, size: 64, offset: 192)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2690, file: !38, line: 315, baseType: !2482, size: 64, offset: 256)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2690, file: !38, line: 316, baseType: !2482, size: 64, offset: 320)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2690, file: !38, line: 317, baseType: !2482, size: 64, offset: 384)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2690, file: !38, line: 318, baseType: !2554, size: 64, offset: 448)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2684, file: !38, line: 446, baseType: !623, size: 64, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2684, file: !38, line: 447, baseType: !2683, size: 64, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2680, file: !38, line: 224, baseType: !113, size: 32, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2680, file: !38, line: 226, baseType: !166, size: 128, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2680, file: !38, line: 227, baseType: !145, size: 64, offset: 256)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2680, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2680, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2680, file: !38, line: 230, baseType: !2518, size: 64, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2680, file: !38, line: 231, baseType: !2518, size: 64, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2680, file: !38, line: 232, baseType: !112, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2672, file: !38, line: 523, baseType: !2711, size: 192, offset: 2240)
!2711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2688, size: 192, elements: !275)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !590, file: !44, line: 1458, baseType: !2713, size: 2112, offset: 4288)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2714)
!2714 = !{!2715, !2716, !2717}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2713, file: !44, line: 1411, baseType: !113, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2713, file: !44, line: 1412, baseType: !1490, size: 128, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2713, file: !44, line: 1413, baseType: !2718, size: 1920, offset: 192)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2719, size: 1920, elements: !275)
!2719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2720, line: 12, size: 640, elements: !2721)
!2720 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2721 = !{!2722, !2730, !2732, !2737, !2738}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2719, file: !2720, line: 13, baseType: !2723, size: 320)
!2723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2724, line: 17, size: 320, elements: !2725)
!2724 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2725 = !{!2726, !2727, !2728, !2729}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2723, file: !2724, line: 18, baseType: !113, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2723, file: !2724, line: 19, baseType: !113, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2723, file: !2724, line: 20, baseType: !1490, size: 128, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2723, file: !2724, line: 22, baseType: !359, size: 128, align: 64, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2719, file: !2720, line: 14, baseType: !2731, size: 64, offset: 320)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2719, file: !2720, line: 15, baseType: !2733, size: 64, offset: 384)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2734, line: 16, size: 64, elements: !2735)
!2734 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2735 = !{!2736}
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2733, file: !2734, line: 17, baseType: !1230, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2719, file: !2720, line: 16, baseType: !1490, size: 128, offset: 448)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2719, file: !2720, line: 17, baseType: !200, size: 32, offset: 576)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !590, file: !44, line: 1465, baseType: !112, size: 64, offset: 6400)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !590, file: !44, line: 1468, baseType: !409, size: 32, offset: 6464)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !590, file: !44, line: 1470, baseType: !530, size: 64, offset: 6528)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !590, file: !44, line: 1471, baseType: !530, size: 64, offset: 6592)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !590, file: !44, line: 1473, baseType: !410, size: 32, offset: 6656)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !590, file: !44, line: 1474, baseType: !2745, size: 64, offset: 6720)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !590, file: !44, line: 1477, baseType: !2748, size: 256, offset: 6784)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 256, elements: !2281)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !590, file: !44, line: 1478, baseType: !2750, size: 128, offset: 7040)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2751, line: 18, baseType: !2752)
!2751 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2751, line: 16, size: 128, elements: !2753)
!2753 = !{!2754}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2752, file: !2751, line: 17, baseType: !2755, size: 128)
!2755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 128, elements: !1775)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !590, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !590, file: !44, line: 1481, baseType: !2758, size: 32, offset: 7200)
!2758 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !156, line: 150, baseType: !7)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !590, file: !44, line: 1487, baseType: !178, size: 192, offset: 7232)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !590, file: !44, line: 1493, baseType: !236, size: 64, offset: 7424)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !590, file: !44, line: 1495, baseType: !2762, size: 64, offset: 7488)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !374, line: 135, size: 1024, align: 512, elements: !2765)
!2765 = !{!2766, !2770, !2771, !2778, !2784, !2788, !2792, !2796, !2797, !2801, !2805, !2810, !2814}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2764, file: !374, line: 136, baseType: !2767, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!113, !376, !7}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2764, file: !374, line: 137, baseType: !2767, size: 64, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2764, file: !374, line: 138, baseType: !2772, size: 64, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!113, !2775, !2777}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !377)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2764, file: !374, line: 139, baseType: !2779, size: 64, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!113, !2775, !7, !236, !2782}
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !400)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2764, file: !374, line: 141, baseType: !2785, size: 64, offset: 256)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DISubroutineType(types: !2787)
!2787 = !{!113, !2775}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2764, file: !374, line: 142, baseType: !2789, size: 64, offset: 320)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!113, !376}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2764, file: !374, line: 143, baseType: !2793, size: 64, offset: 384)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2794, size: 64)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{null, !376}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2764, file: !374, line: 144, baseType: !2793, size: 64, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2764, file: !374, line: 145, baseType: !2798, size: 64, offset: 512)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DISubroutineType(types: !2800)
!2800 = !{null, !376, !421}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2764, file: !374, line: 146, baseType: !2802, size: 64, offset: 576)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!274, !376, !274, !113}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2764, file: !374, line: 147, baseType: !2806, size: 64, offset: 640)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!372, !2809}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2764, file: !374, line: 148, baseType: !2811, size: 64, offset: 704)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!113, !539, !482}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2764, file: !374, line: 149, baseType: !2815, size: 64, offset: 768)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{!376, !376, !2818}
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !590, file: !44, line: 1500, baseType: !113, size: 32, offset: 7552)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !590, file: !44, line: 1502, baseType: !2822, size: 448, offset: 7616)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2466, line: 60, size: 448, elements: !2823)
!2823 = !{!2824, !2829, !2830, !2831, !2832, !2833, !2834}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2822, file: !2466, line: 61, baseType: !2825, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!145, !2828, !2464}
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2822, file: !2466, line: 63, baseType: !2825, size: 64, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2822, file: !2466, line: 66, baseType: !309, size: 64, offset: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2822, file: !2466, line: 67, baseType: !113, size: 32, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2822, file: !2466, line: 68, baseType: !7, size: 32, offset: 224)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2822, file: !2466, line: 71, baseType: !166, size: 128, offset: 256)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2822, file: !2466, line: 77, baseType: !2835, size: 64, offset: 384)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !590, file: !44, line: 1505, baseType: !153, size: 64, offset: 8064)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !590, file: !44, line: 1508, baseType: !153, size: 64, offset: 8128)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !590, file: !44, line: 1511, baseType: !113, size: 32, offset: 8192)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !590, file: !44, line: 1514, baseType: !928, size: 32, offset: 8224)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !590, file: !44, line: 1517, baseType: !2841, size: 64, offset: 8256)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !150, line: 18, flags: DIFlagFwdDecl)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !590, file: !44, line: 1518, baseType: !628, size: 64, offset: 8320)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !590, file: !44, line: 1525, baseType: !1522, size: 64, offset: 8384)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !590, file: !44, line: 1532, baseType: !2846, size: 64, offset: 8448)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2847, line: 52, size: 64, elements: !2848)
!2847 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2848 = !{!2849}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2846, file: !2847, line: 53, baseType: !2850, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2847, line: 40, size: 256, elements: !2852)
!2852 = !{!2853, !2854, !2859}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2851, file: !2847, line: 42, baseType: !183)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2851, file: !2847, line: 44, baseType: !2855, size: 192)
!2855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2847, line: 28, size: 192, elements: !2856)
!2856 = !{!2857, !2858}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2855, file: !2847, line: 29, baseType: !166, size: 128)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2855, file: !2847, line: 31, baseType: !309, size: 64, offset: 128)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2851, file: !2847, line: 49, baseType: !309, size: 64, offset: 192)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !590, file: !44, line: 1533, baseType: !2846, size: 64, offset: 8512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !590, file: !44, line: 1534, baseType: !359, size: 128, align: 64, offset: 8576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !590, file: !44, line: 1535, baseType: !149, size: 256, offset: 8704)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !590, file: !44, line: 1537, baseType: !178, size: 192, offset: 8960)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !590, file: !44, line: 1542, baseType: !113, size: 32, offset: 9152)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !590, file: !44, line: 1545, baseType: !183, offset: 9184)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !590, file: !44, line: 1546, baseType: !166, size: 128, offset: 9216)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !590, file: !44, line: 1548, baseType: !183, offset: 9344)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !590, file: !44, line: 1549, baseType: !166, size: 128, offset: 9344)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !422, file: !44, line: 624, baseType: !763, size: 64, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !422, file: !44, line: 631, baseType: !145, size: 64, offset: 320)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 639, baseType: !2872, size: 32, offset: 384)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 639, size: 32, elements: !2873)
!2873 = !{!2874, !2876}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2872, file: !44, line: 640, baseType: !2875, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2872, file: !44, line: 641, baseType: !7, size: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !422, file: !44, line: 643, baseType: !505, size: 32, offset: 416)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !422, file: !44, line: 644, baseType: !523, size: 64, offset: 448)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !422, file: !44, line: 645, baseType: !526, size: 128, offset: 512)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !422, file: !44, line: 646, baseType: !526, size: 128, offset: 640)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !422, file: !44, line: 647, baseType: !526, size: 128, offset: 768)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !422, file: !44, line: 648, baseType: !183, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !422, file: !44, line: 649, baseType: !316, size: 16, offset: 896)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !422, file: !44, line: 650, baseType: !1361, size: 8, offset: 912)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !422, file: !44, line: 651, baseType: !1361, size: 8, offset: 920)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !422, file: !44, line: 652, baseType: !2638, size: 64, offset: 960)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !422, file: !44, line: 659, baseType: !145, size: 64, offset: 1024)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !422, file: !44, line: 660, baseType: !793, size: 256, offset: 1088)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !422, file: !44, line: 662, baseType: !145, size: 64, offset: 1344)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !422, file: !44, line: 663, baseType: !145, size: 64, offset: 1408)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !422, file: !44, line: 665, baseType: !632, size: 128, offset: 1472)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !422, file: !44, line: 666, baseType: !166, size: 128, offset: 1600)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !422, file: !44, line: 675, baseType: !166, size: 128, offset: 1728)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !422, file: !44, line: 676, baseType: !166, size: 128, offset: 1856)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !422, file: !44, line: 677, baseType: !166, size: 128, offset: 1984)
!2896 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 678, baseType: !2897, size: 128, offset: 2112)
!2897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 678, size: 128, elements: !2898)
!2898 = !{!2899, !2900}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2897, file: !44, line: 679, baseType: !628, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2897, file: !44, line: 680, baseType: !359, size: 128, align: 64)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !422, file: !44, line: 682, baseType: !155, size: 64, offset: 2240)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !422, file: !44, line: 683, baseType: !155, size: 64, offset: 2304)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !422, file: !44, line: 684, baseType: !200, size: 32, offset: 2368)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !422, file: !44, line: 685, baseType: !200, size: 32, offset: 2400)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !422, file: !44, line: 686, baseType: !200, size: 32, offset: 2432)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !422, file: !44, line: 688, baseType: !200, size: 32, offset: 2464)
!2907 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 690, baseType: !2908, size: 64, offset: 2496)
!2908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 690, size: 64, elements: !2909)
!2909 = !{!2910, !3132}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2908, file: !44, line: 691, baseType: !2911, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2913)
!2913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2914)
!2914 = !{!2915, !2916, !2920, !2924, !2928, !2929, !2930, !2934, !2947, !2948, !2956, !2960, !2961, !2965, !2966, !2970, !2975, !2976, !2980, !2984, !3092, !3096, !3097, !3101, !3102, !3106, !3110, !3115, !3119, !3123, !3127, !3131}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2913, file: !44, line: 1823, baseType: !623, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2913, file: !44, line: 1824, baseType: !2917, size: 64, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!523, !351, !523, !113}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2913, file: !44, line: 1825, baseType: !2921, size: 64, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!305, !351, !274, !321, !725}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2913, file: !44, line: 1826, baseType: !2925, size: 64, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!305, !351, !236, !321, !725}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2913, file: !44, line: 1827, baseType: !863, size: 64, offset: 256)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2913, file: !44, line: 1828, baseType: !863, size: 64, offset: 320)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2913, file: !44, line: 1829, baseType: !2931, size: 64, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!113, !866, !482}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2913, file: !44, line: 1830, baseType: !2935, size: 64, offset: 448)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!113, !351, !2938}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2940)
!2940 = !{!2941, !2946}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2939, file: !44, line: 1777, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2943)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!113, !2938, !236, !113, !523, !413, !7}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2939, file: !44, line: 1778, baseType: !523, size: 64, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2913, file: !44, line: 1831, baseType: !2935, size: 64, offset: 512)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2913, file: !44, line: 1832, baseType: !2949, size: 64, offset: 576)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!2952, !351, !2954}
!2952 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2953, line: 52, baseType: !7)
!2953 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !609, line: 27, flags: DIFlagFwdDecl)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2913, file: !44, line: 1833, baseType: !2957, size: 64, offset: 640)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!309, !351, !7, !145}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2913, file: !44, line: 1834, baseType: !2957, size: 64, offset: 704)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2913, file: !44, line: 1835, baseType: !2962, size: 64, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!113, !351, !1001}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2913, file: !44, line: 1836, baseType: !145, size: 64, offset: 832)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2913, file: !44, line: 1837, baseType: !2967, size: 64, offset: 896)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!113, !421, !351}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2913, file: !44, line: 1838, baseType: !2971, size: 64, offset: 960)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!113, !351, !2974}
!2974 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !112)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2913, file: !44, line: 1839, baseType: !2967, size: 64, offset: 1024)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2913, file: !44, line: 1840, baseType: !2977, size: 64, offset: 1088)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DISubroutineType(types: !2979)
!2979 = !{!113, !351, !523, !523, !113}
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2913, file: !44, line: 1841, baseType: !2981, size: 64, offset: 1152)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!113, !113, !351, !113}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2913, file: !44, line: 1842, baseType: !2985, size: 64, offset: 1216)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!113, !351, !113, !2988}
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2990)
!2990 = !{!2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3022, !3023, !3024, !3037, !3068}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2989, file: !44, line: 1063, baseType: !2988, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2989, file: !44, line: 1064, baseType: !166, size: 128, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2989, file: !44, line: 1065, baseType: !632, size: 128, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2989, file: !44, line: 1066, baseType: !166, size: 128, offset: 320)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2989, file: !44, line: 1069, baseType: !166, size: 128, offset: 448)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2989, file: !44, line: 1072, baseType: !2974, size: 64, offset: 576)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2989, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2989, file: !44, line: 1074, baseType: !419, size: 8, offset: 672)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2989, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2989, file: !44, line: 1076, baseType: !113, size: 32, offset: 736)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2989, file: !44, line: 1077, baseType: !1490, size: 128, offset: 768)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2989, file: !44, line: 1078, baseType: !351, size: 64, offset: 896)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2989, file: !44, line: 1079, baseType: !523, size: 64, offset: 960)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2989, file: !44, line: 1080, baseType: !523, size: 64, offset: 1024)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2989, file: !44, line: 1082, baseType: !3006, size: 64, offset: 1088)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3008)
!3008 = !{!3009, !3017, !3018, !3019, !3020, !3021}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3007, file: !44, line: 1315, baseType: !3010)
!3010 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3011, line: 20, baseType: !3012)
!3011 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3011, line: 11, elements: !3013)
!3013 = !{!3014}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3012, file: !3011, line: 12, baseType: !3015)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !195, line: 33, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !195, line: 31, elements: !197)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3007, file: !44, line: 1316, baseType: !113, size: 32)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3007, file: !44, line: 1317, baseType: !113, size: 32, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3007, file: !44, line: 1318, baseType: !3006, size: 64, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3007, file: !44, line: 1319, baseType: !351, size: 64, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3007, file: !44, line: 1320, baseType: !359, size: 128, align: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2989, file: !44, line: 1084, baseType: !145, size: 64, offset: 1152)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2989, file: !44, line: 1085, baseType: !145, size: 64, offset: 1216)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2989, file: !44, line: 1087, baseType: !3025, size: 64, offset: 1280)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3028)
!3028 = !{!3029, !3033}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3027, file: !44, line: 1012, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{null, !2988, !2988}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3027, file: !44, line: 1013, baseType: !3034, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DISubroutineType(types: !3036)
!3036 = !{null, !2988}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2989, file: !44, line: 1088, baseType: !3038, size: 64, offset: 1344)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3041)
!3041 = !{!3042, !3046, !3050, !3051, !3055, !3059, !3063, !3067}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3040, file: !44, line: 1017, baseType: !3043, size: 64)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!2974, !2974}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3040, file: !44, line: 1018, baseType: !3047, size: 64, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{null, !2974}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3040, file: !44, line: 1019, baseType: !3034, size: 64, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3040, file: !44, line: 1020, baseType: !3052, size: 64, offset: 192)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!113, !2988, !113}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3040, file: !44, line: 1021, baseType: !3056, size: 64, offset: 256)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!482, !2988}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3040, file: !44, line: 1022, baseType: !3060, size: 64, offset: 320)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!113, !2988, !113, !169}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3040, file: !44, line: 1023, baseType: !3064, size: 64, offset: 384)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !2988, !840}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3040, file: !44, line: 1024, baseType: !3056, size: 64, offset: 448)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2989, file: !44, line: 1097, baseType: !3069, size: 256, offset: 1408)
!3069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2989, file: !44, line: 1089, size: 256, elements: !3070)
!3070 = !{!3071, !3080, !3086}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3069, file: !44, line: 1090, baseType: !3072, size: 256)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3073, line: 10, size: 256, elements: !3074)
!3073 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3074 = !{!3075, !3076, !3079}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3072, file: !3073, line: 11, baseType: !409, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3072, file: !3073, line: 12, baseType: !3077, size: 64, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3073, line: 5, flags: DIFlagFwdDecl)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3072, file: !3073, line: 13, baseType: !166, size: 128, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3069, file: !44, line: 1091, baseType: !3081, size: 64)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3073, line: 17, size: 64, elements: !3082)
!3082 = !{!3083}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3081, file: !3073, line: 18, baseType: !3084, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3073, line: 16, flags: DIFlagFwdDecl)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3069, file: !44, line: 1096, baseType: !3087, size: 192)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3069, file: !44, line: 1092, size: 192, elements: !3088)
!3088 = !{!3089, !3090, !3091}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3087, file: !44, line: 1093, baseType: !166, size: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3087, file: !44, line: 1094, baseType: !113, size: 32, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3087, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2913, file: !44, line: 1843, baseType: !3093, size: 64, offset: 1280)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!305, !351, !750, !113, !321, !725, !113}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2913, file: !44, line: 1844, baseType: !1121, size: 64, offset: 1344)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2913, file: !44, line: 1845, baseType: !3098, size: 64, offset: 1408)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!113, !113}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2913, file: !44, line: 1846, baseType: !2985, size: 64, offset: 1472)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2913, file: !44, line: 1847, baseType: !3103, size: 64, offset: 1536)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!305, !2149, !351, !725, !321, !7}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2913, file: !44, line: 1848, baseType: !3107, size: 64, offset: 1600)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!305, !351, !725, !2149, !321, !7}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2913, file: !44, line: 1849, baseType: !3111, size: 64, offset: 1664)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!113, !351, !309, !3114, !840}
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2913, file: !44, line: 1850, baseType: !3116, size: 64, offset: 1728)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!309, !351, !113, !523, !523}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2913, file: !44, line: 1852, baseType: !3120, size: 64, offset: 1792)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{null, !704, !351}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2913, file: !44, line: 1856, baseType: !3124, size: 64, offset: 1856)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!305, !351, !523, !351, !523, !321, !7}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2913, file: !44, line: 1858, baseType: !3128, size: 64, offset: 1920)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!523, !351, !523, !351, !523, !523, !7}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2913, file: !44, line: 1861, baseType: !2977, size: 64, offset: 1984)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2908, file: !44, line: 692, baseType: !657, size: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !422, file: !44, line: 694, baseType: !3134, size: 64, offset: 2560)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3135, file: !44, line: 1101, baseType: !183)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3135, file: !44, line: 1102, baseType: !166, size: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3135, file: !44, line: 1103, baseType: !166, size: 128, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3135, file: !44, line: 1104, baseType: !166, size: 128, offset: 256)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !422, file: !44, line: 695, baseType: !764, size: 1216, align: 64, offset: 2624)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !422, file: !44, line: 696, baseType: !166, size: 128, offset: 3840)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 697, baseType: !3144, size: 64, offset: 3968)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 697, size: 64, elements: !3145)
!3145 = !{!3146, !3147, !3148, !3159, !3160}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3144, file: !44, line: 698, baseType: !2149, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3144, file: !44, line: 699, baseType: !2663, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3144, file: !44, line: 700, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3151, line: 14, size: 832, elements: !3152)
!3151 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3152 = !{!3153, !3154, !3155, !3156, !3157, !3158}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3150, file: !3151, line: 15, baseType: !232, size: 512)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3150, file: !3151, line: 16, baseType: !623, size: 64, offset: 512)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3150, file: !3151, line: 17, baseType: !2911, size: 64, offset: 576)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3150, file: !3151, line: 18, baseType: !166, size: 128, offset: 640)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3150, file: !3151, line: 19, baseType: !505, size: 32, offset: 768)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3150, file: !3151, line: 20, baseType: !7, size: 32, offset: 800)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3144, file: !44, line: 701, baseType: !274, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3144, file: !44, line: 702, baseType: !7, size: 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !422, file: !44, line: 705, baseType: !410, size: 32, offset: 4032)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !422, file: !44, line: 708, baseType: !410, size: 32, offset: 4064)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !422, file: !44, line: 709, baseType: !2745, size: 64, offset: 4096)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !422, file: !44, line: 720, baseType: !112, size: 64, offset: 4160)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !377, file: !374, line: 98, baseType: !3166, size: 256, offset: 448)
!3166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 256, elements: !2281)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !377, file: !374, line: 101, baseType: !3168, size: 32, offset: 704)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3169, line: 25, size: 32, elements: !3170)
!3169 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3170 = !{!3171}
!3171 = !DIDerivedType(tag: DW_TAG_member, scope: !3168, file: !3169, line: 26, baseType: !3172, size: 32)
!3172 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3168, file: !3169, line: 26, size: 32, elements: !3173)
!3173 = !{!3174}
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !3172, file: !3169, line: 30, baseType: !3175, size: 32)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3172, file: !3169, line: 30, size: 32, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3175, file: !3169, line: 31, baseType: !183)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3175, file: !3169, line: 32, baseType: !113, size: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !377, file: !374, line: 102, baseType: !2762, size: 64, offset: 768)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !377, file: !374, line: 103, baseType: !589, size: 64, offset: 832)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !377, file: !374, line: 104, baseType: !145, size: 64, offset: 896)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !377, file: !374, line: 105, baseType: !112, size: 64, offset: 960)
!3183 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !374, line: 107, baseType: !3184, size: 128, offset: 1024)
!3184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !374, line: 107, size: 128, elements: !3185)
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3184, file: !374, line: 108, baseType: !166, size: 128)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3184, file: !374, line: 109, baseType: !3188, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !377, file: !374, line: 111, baseType: !166, size: 128, offset: 1152)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !377, file: !374, line: 112, baseType: !166, size: 128, offset: 1280)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !377, file: !374, line: 120, baseType: !3192, size: 128, offset: 1408)
!3192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !374, line: 116, size: 128, elements: !3193)
!3193 = !{!3194, !3195, !3196}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3192, file: !374, line: 117, baseType: !632, size: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3192, file: !374, line: 118, baseType: !391, size: 128)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3192, file: !374, line: 119, baseType: !359, size: 128, align: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !352, file: !44, line: 922, baseType: !421, size: 64, offset: 256)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !352, file: !44, line: 923, baseType: !2911, size: 64, offset: 320)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !352, file: !44, line: 929, baseType: !183, offset: 384)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !352, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !352, file: !44, line: 931, baseType: !153, size: 64, offset: 448)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !352, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !352, file: !44, line: 933, baseType: !2758, size: 32, offset: 544)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !352, file: !44, line: 934, baseType: !178, size: 192, offset: 576)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !352, file: !44, line: 935, baseType: !523, size: 64, offset: 768)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !352, file: !44, line: 936, baseType: !3207, size: 192, offset: 832)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3208)
!3208 = !{!3209, !3210, !3211, !3212, !3213, !3214}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3207, file: !44, line: 886, baseType: !3010)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3207, file: !44, line: 887, baseType: !1480, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3207, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3207, file: !44, line: 889, baseType: !427, size: 32, offset: 96)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3207, file: !44, line: 889, baseType: !427, size: 32, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3207, file: !44, line: 890, baseType: !113, size: 32, offset: 160)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !352, file: !44, line: 937, baseType: !1589, size: 64, offset: 1024)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !352, file: !44, line: 938, baseType: !3217, size: 256, offset: 1088)
!3217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3218)
!3218 = !{!3219, !3220, !3221, !3222, !3223, !3224}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3217, file: !44, line: 897, baseType: !145, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3217, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3217, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3217, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3217, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3217, file: !44, line: 904, baseType: !523, size: 64, offset: 192)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !352, file: !44, line: 940, baseType: !413, size: 64, offset: 1344)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !352, file: !44, line: 945, baseType: !112, size: 64, offset: 1408)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !352, file: !44, line: 949, baseType: !166, size: 128, offset: 1472)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !352, file: !44, line: 950, baseType: !166, size: 128, offset: 1600)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !352, file: !44, line: 952, baseType: !763, size: 64, offset: 1728)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !352, file: !44, line: 953, baseType: !928, size: 32, offset: 1792)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !352, file: !44, line: 954, baseType: !928, size: 32, offset: 1824)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !342, file: !299, line: 174, baseType: !348, size: 64, offset: 320)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !342, file: !299, line: 176, baseType: !3234, size: 64, offset: 384)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!113, !351, !241, !341, !1001}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !330, file: !299, line: 90, baseType: !325, size: 64, offset: 192)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !330, file: !299, line: 91, baseType: !3239, size: 64, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !289, file: !233, line: 143, baseType: !3241, size: 64, offset: 256)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!3244, !241}
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3246)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3247)
!3247 = !{!3248, !3249, !3253, !3257, !3263, !3267}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3246, file: !61, line: 40, baseType: !60, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3246, file: !61, line: 41, baseType: !3250, size: 64, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!482}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3246, file: !61, line: 42, baseType: !3254, size: 64, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 64)
!3255 = !DISubroutineType(types: !3256)
!3256 = !{!112}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3246, file: !61, line: 43, baseType: !3258, size: 64, offset: 192)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!2178, !3261}
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3246, file: !61, line: 44, baseType: !3264, size: 64, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{!2178}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3246, file: !61, line: 45, baseType: !460, size: 64, offset: 320)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !289, file: !233, line: 144, baseType: !3269, size: 64, offset: 320)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!2178, !241}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !289, file: !233, line: 145, baseType: !3273, size: 64, offset: 384)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{null, !241, !3276, !3277}
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !232, file: !233, line: 70, baseType: !3279, size: 64, offset: 384)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !609, line: 123, size: 1024, elements: !3281)
!3281 = !{!3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3392, !3393, !3394, !3395, !3396}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3280, file: !609, line: 124, baseType: !200, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3280, file: !609, line: 125, baseType: !200, size: 32, offset: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3280, file: !609, line: 135, baseType: !3279, size: 64, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3280, file: !609, line: 136, baseType: !236, size: 64, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3280, file: !609, line: 138, baseType: !786, size: 192, align: 64, offset: 192)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3280, file: !609, line: 140, baseType: !2178, size: 64, offset: 384)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3280, file: !609, line: 141, baseType: !7, size: 32, offset: 448)
!3289 = !DIDerivedType(tag: DW_TAG_member, scope: !3280, file: !609, line: 142, baseType: !3290, size: 256, offset: 512)
!3290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3280, file: !609, line: 142, size: 256, elements: !3291)
!3291 = !{!3292, !3332, !3336}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3290, file: !609, line: 143, baseType: !3293, size: 192)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !609, line: 91, size: 192, elements: !3294)
!3294 = !{!3295, !3296, !3297}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3293, file: !609, line: 92, baseType: !145, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3293, file: !609, line: 94, baseType: !782, size: 64, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3293, file: !609, line: 100, baseType: !3298, size: 64, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !609, line: 180, size: 704, elements: !3300)
!3300 = !{!3301, !3302, !3303, !3304, !3305, !3306, !3330, !3331}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3299, file: !609, line: 182, baseType: !3279, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3299, file: !609, line: 183, baseType: !7, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3299, file: !609, line: 186, baseType: !1509, size: 192, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3299, file: !609, line: 187, baseType: !409, size: 32, offset: 320)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3299, file: !609, line: 188, baseType: !409, size: 32, offset: 352)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3299, file: !609, line: 189, baseType: !3307, size: 64, offset: 384)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !609, line: 168, size: 320, elements: !3309)
!3309 = !{!3310, !3314, !3318, !3322, !3326}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3308, file: !609, line: 169, baseType: !3311, size: 64)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!113, !704, !3298}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3308, file: !609, line: 171, baseType: !3315, size: 64, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!113, !3279, !236, !315}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3308, file: !609, line: 173, baseType: !3319, size: 64, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!113, !3279}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3308, file: !609, line: 174, baseType: !3323, size: 64, offset: 192)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!113, !3279, !3279, !236}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3308, file: !609, line: 176, baseType: !3327, size: 64, offset: 256)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!113, !704, !3279, !3298}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3299, file: !609, line: 192, baseType: !166, size: 128, offset: 448)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3299, file: !609, line: 194, baseType: !1490, size: 128, offset: 576)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3290, file: !609, line: 144, baseType: !3333, size: 64)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !609, line: 103, size: 64, elements: !3334)
!3334 = !{!3335}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3333, file: !609, line: 104, baseType: !3279, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3290, file: !609, line: 145, baseType: !3337, size: 256)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !609, line: 107, size: 256, elements: !3338)
!3338 = !{!3339, !3387, !3390, !3391}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3337, file: !609, line: 108, baseType: !3340, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3342)
!3342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !609, line: 217, size: 768, elements: !3343)
!3343 = !{!3344, !3364, !3368, !3369, !3370, !3371, !3372, !3376, !3377, !3378, !3379, !3383}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3342, file: !609, line: 222, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!113, !3348}
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !609, line: 197, size: 1088, elements: !3350)
!3350 = !{!3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3349, file: !609, line: 199, baseType: !3279, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3349, file: !609, line: 200, baseType: !351, size: 64, offset: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3349, file: !609, line: 201, baseType: !704, size: 64, offset: 128)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3349, file: !609, line: 202, baseType: !112, size: 64, offset: 192)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3349, file: !609, line: 205, baseType: !178, size: 192, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3349, file: !609, line: 206, baseType: !178, size: 192, offset: 448)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3349, file: !609, line: 207, baseType: !113, size: 32, offset: 640)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3349, file: !609, line: 208, baseType: !166, size: 128, offset: 704)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3349, file: !609, line: 209, baseType: !274, size: 64, offset: 832)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3349, file: !609, line: 211, baseType: !321, size: 64, offset: 896)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3349, file: !609, line: 212, baseType: !482, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3349, file: !609, line: 213, baseType: !482, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3349, file: !609, line: 214, baseType: !1029, size: 64, offset: 1024)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3342, file: !609, line: 223, baseType: !3365, size: 64, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{null, !3348}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3342, file: !609, line: 236, baseType: !735, size: 64, offset: 128)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3342, file: !609, line: 238, baseType: !722, size: 64, offset: 192)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3342, file: !609, line: 239, baseType: !731, size: 64, offset: 256)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3342, file: !609, line: 240, baseType: !727, size: 64, offset: 320)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3342, file: !609, line: 242, baseType: !3373, size: 64, offset: 384)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{!305, !3348, !274, !321, !523}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3342, file: !609, line: 252, baseType: !321, size: 64, offset: 448)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3342, file: !609, line: 259, baseType: !482, size: 8, offset: 512)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3342, file: !609, line: 260, baseType: !3373, size: 64, offset: 576)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3342, file: !609, line: 263, baseType: !3380, size: 64, offset: 640)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!2952, !3348, !2954}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3342, file: !609, line: 266, baseType: !3384, size: 64, offset: 704)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!113, !3348, !1001}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3337, file: !609, line: 109, baseType: !3388, size: 64, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !609, line: 31, flags: DIFlagFwdDecl)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3337, file: !609, line: 110, baseType: !523, size: 64, offset: 128)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3337, file: !609, line: 111, baseType: !3279, size: 64, offset: 192)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3280, file: !609, line: 148, baseType: !112, size: 64, offset: 768)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3280, file: !609, line: 154, baseType: !413, size: 64, offset: 832)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3280, file: !609, line: 156, baseType: !316, size: 16, offset: 896)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3280, file: !609, line: 157, baseType: !315, size: 16, offset: 912)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3280, file: !609, line: 158, baseType: !3397, size: 64, offset: 960)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !609, line: 32, flags: DIFlagFwdDecl)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !232, file: !233, line: 71, baseType: !218, size: 32, offset: 448)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !232, file: !233, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !232, file: !233, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !232, file: !233, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !232, file: !233, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !232, file: !233, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !229, file: !73, line: 463, baseType: !228, size: 64, offset: 512)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !229, file: !73, line: 465, baseType: !3407, size: 64, offset: 576)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !229, file: !73, line: 467, baseType: !236, size: 64, offset: 640)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !229, file: !73, line: 468, baseType: !3411, size: 64, offset: 704)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3413)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3414)
!3414 = !{!3415, !3416, !3417, !3421, !3426, !3430}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3413, file: !73, line: 88, baseType: !236, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3413, file: !73, line: 89, baseType: !327, size: 64, offset: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3413, file: !73, line: 90, baseType: !3418, size: 64, offset: 128)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{!113, !228, !269}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3413, file: !73, line: 91, baseType: !3422, size: 64, offset: 192)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!274, !228, !3425, !3276, !3277}
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3413, file: !73, line: 93, baseType: !3427, size: 64, offset: 256)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !228}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3413, file: !73, line: 95, baseType: !3431, size: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3433)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3434)
!3434 = !{!3435, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3433, file: !80, line: 279, baseType: !3436, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!113, !228}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3433, file: !80, line: 280, baseType: !3427, size: 64, offset: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3433, file: !80, line: 281, baseType: !3436, size: 64, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3433, file: !80, line: 282, baseType: !3436, size: 64, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3433, file: !80, line: 283, baseType: !3436, size: 64, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3433, file: !80, line: 284, baseType: !3436, size: 64, offset: 320)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3433, file: !80, line: 285, baseType: !3436, size: 64, offset: 384)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3433, file: !80, line: 286, baseType: !3436, size: 64, offset: 448)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3433, file: !80, line: 287, baseType: !3436, size: 64, offset: 512)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3433, file: !80, line: 288, baseType: !3436, size: 64, offset: 576)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3433, file: !80, line: 289, baseType: !3436, size: 64, offset: 640)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3433, file: !80, line: 290, baseType: !3436, size: 64, offset: 704)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3433, file: !80, line: 291, baseType: !3436, size: 64, offset: 768)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3433, file: !80, line: 292, baseType: !3436, size: 64, offset: 832)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3433, file: !80, line: 293, baseType: !3436, size: 64, offset: 896)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3433, file: !80, line: 294, baseType: !3436, size: 64, offset: 960)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3433, file: !80, line: 295, baseType: !3436, size: 64, offset: 1024)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3433, file: !80, line: 296, baseType: !3436, size: 64, offset: 1088)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3433, file: !80, line: 297, baseType: !3436, size: 64, offset: 1152)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3433, file: !80, line: 298, baseType: !3436, size: 64, offset: 1216)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3433, file: !80, line: 299, baseType: !3436, size: 64, offset: 1280)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3433, file: !80, line: 300, baseType: !3436, size: 64, offset: 1344)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3433, file: !80, line: 301, baseType: !3436, size: 64, offset: 1408)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !229, file: !73, line: 470, baseType: !3462, size: 64, offset: 768)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3464, line: 82, size: 1408, elements: !3465)
!3464 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3465 = !{!3466, !3467, !3468, !3469, !3470, !3471, !3472, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3547, !3550, !3551}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3463, file: !3464, line: 83, baseType: !236, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3463, file: !3464, line: 84, baseType: !236, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3463, file: !3464, line: 85, baseType: !228, size: 64, offset: 128)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3463, file: !3464, line: 86, baseType: !327, size: 64, offset: 192)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3463, file: !3464, line: 87, baseType: !327, size: 64, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3463, file: !3464, line: 88, baseType: !327, size: 64, offset: 320)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3463, file: !3464, line: 90, baseType: !3473, size: 64, offset: 384)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!113, !228, !3476}
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3478)
!3478 = !{!3479, !3480, !3481, !3482, !3483, !3484, !3485, !3498, !3511, !3512, !3513, !3514, !3515, !3523, !3524, !3525, !3526, !3527, !3528}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3477, file: !67, line: 96, baseType: !236, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3477, file: !67, line: 97, baseType: !3462, size: 64, offset: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3477, file: !67, line: 99, baseType: !623, size: 64, offset: 128)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3477, file: !67, line: 100, baseType: !236, size: 64, offset: 192)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3477, file: !67, line: 102, baseType: !482, size: 8, offset: 256)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3477, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3477, file: !67, line: 105, baseType: !3486, size: 64, offset: 320)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3488)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3489, line: 262, size: 1600, elements: !3490)
!3489 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3490 = !{!3491, !3492, !3493, !3497}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3488, file: !3489, line: 263, baseType: !2748, size: 256)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3488, file: !3489, line: 264, baseType: !2748, size: 256, offset: 256)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3488, file: !3489, line: 265, baseType: !3494, size: 1024, offset: 512)
!3494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 1024, elements: !3495)
!3495 = !{!3496}
!3496 = !DISubrange(count: 128)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3488, file: !3489, line: 266, baseType: !2178, size: 64, offset: 1536)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3477, file: !67, line: 106, baseType: !3499, size: 64, offset: 384)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3501)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3489, line: 210, size: 256, elements: !3502)
!3502 = !{!3503, !3507, !3509, !3510}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3501, file: !3489, line: 211, baseType: !3504, size: 72)
!3504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1362, size: 72, elements: !3505)
!3505 = !{!3506}
!3506 = !DISubrange(count: 9)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3501, file: !3489, line: 212, baseType: !3508, size: 64, offset: 128)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3489, line: 14, baseType: !145)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3501, file: !3489, line: 213, baseType: !410, size: 32, offset: 192)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3501, file: !3489, line: 214, baseType: !410, size: 32, offset: 224)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3477, file: !67, line: 108, baseType: !3436, size: 64, offset: 448)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3477, file: !67, line: 109, baseType: !3427, size: 64, offset: 512)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3477, file: !67, line: 110, baseType: !3436, size: 64, offset: 576)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3477, file: !67, line: 111, baseType: !3427, size: 64, offset: 640)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3477, file: !67, line: 112, baseType: !3516, size: 64, offset: 704)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!113, !228, !3519}
!3519 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3520)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3521)
!3521 = !{!3522}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3520, file: !80, line: 51, baseType: !113, size: 32)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3477, file: !67, line: 113, baseType: !3436, size: 64, offset: 768)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3477, file: !67, line: 114, baseType: !327, size: 64, offset: 832)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3477, file: !67, line: 115, baseType: !327, size: 64, offset: 896)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3477, file: !67, line: 117, baseType: !3431, size: 64, offset: 960)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3477, file: !67, line: 118, baseType: !3427, size: 64, offset: 1024)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3477, file: !67, line: 120, baseType: !3529, size: 64, offset: 1088)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3463, file: !3464, line: 91, baseType: !3418, size: 64, offset: 448)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3463, file: !3464, line: 92, baseType: !3436, size: 64, offset: 512)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3463, file: !3464, line: 93, baseType: !3427, size: 64, offset: 576)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3463, file: !3464, line: 94, baseType: !3436, size: 64, offset: 640)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3463, file: !3464, line: 95, baseType: !3427, size: 64, offset: 704)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3463, file: !3464, line: 97, baseType: !3436, size: 64, offset: 768)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3463, file: !3464, line: 98, baseType: !3436, size: 64, offset: 832)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3463, file: !3464, line: 100, baseType: !3516, size: 64, offset: 896)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3463, file: !3464, line: 101, baseType: !3436, size: 64, offset: 960)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3463, file: !3464, line: 103, baseType: !3436, size: 64, offset: 1024)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3463, file: !3464, line: 105, baseType: !3436, size: 64, offset: 1088)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3463, file: !3464, line: 107, baseType: !3431, size: 64, offset: 1152)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3463, file: !3464, line: 109, baseType: !3544, size: 64, offset: 1216)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3546)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3464, line: 109, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3463, file: !3464, line: 111, baseType: !3548, size: 64, offset: 1280)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3464, line: 111, flags: DIFlagFwdDecl)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3463, file: !3464, line: 112, baseType: !638, offset: 1344)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3463, file: !3464, line: 114, baseType: !482, size: 8, offset: 1344)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !229, file: !73, line: 471, baseType: !3476, size: 64, offset: 832)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !229, file: !73, line: 473, baseType: !112, size: 64, offset: 896)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !229, file: !73, line: 475, baseType: !112, size: 64, offset: 960)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !229, file: !73, line: 480, baseType: !178, size: 192, offset: 1024)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !229, file: !73, line: 484, baseType: !3557, size: 576, offset: 1216)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3558)
!3558 = !{!3559, !3560, !3561, !3562, !3563, !3564}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3557, file: !73, line: 362, baseType: !166, size: 128)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3557, file: !73, line: 363, baseType: !166, size: 128, offset: 128)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3557, file: !73, line: 364, baseType: !166, size: 128, offset: 256)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3557, file: !73, line: 365, baseType: !166, size: 128, offset: 384)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3557, file: !73, line: 366, baseType: !482, size: 8, offset: 512)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3557, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !229, file: !73, line: 485, baseType: !3566, size: 2304, offset: 1792)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3567)
!3567 = !{!3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3663, !3667}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3566, file: !80, line: 566, baseType: !3519, size: 32)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3566, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3566, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3566, file: !80, line: 569, baseType: !482, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3566, file: !80, line: 570, baseType: !482, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3566, file: !80, line: 571, baseType: !482, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3566, file: !80, line: 572, baseType: !482, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3566, file: !80, line: 573, baseType: !482, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3566, file: !80, line: 574, baseType: !482, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3566, file: !80, line: 575, baseType: !482, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3566, file: !80, line: 576, baseType: !482, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3566, file: !80, line: 577, baseType: !409, size: 32, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3566, file: !80, line: 578, baseType: !183, offset: 96)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3566, file: !80, line: 580, baseType: !166, size: 128, offset: 128)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3566, file: !80, line: 581, baseType: !1544, size: 192, offset: 256)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3566, file: !80, line: 582, baseType: !3584, size: 64, offset: 448)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3586, line: 43, size: 1472, elements: !3587)
!3586 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3587 = !{!3588, !3589, !3590, !3591, !3592, !3595, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3585, file: !3586, line: 44, baseType: !236, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3585, file: !3586, line: 45, baseType: !113, size: 32, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3585, file: !3586, line: 46, baseType: !166, size: 128, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3585, file: !3586, line: 47, baseType: !183, offset: 256)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3585, file: !3586, line: 48, baseType: !3593, size: 64, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3585, file: !3586, line: 49, baseType: !3596, size: 320, offset: 320)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3597, line: 11, size: 320, elements: !3598)
!3597 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3598 = !{!3599, !3600, !3601, !3606}
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3596, file: !3597, line: 16, baseType: !632, size: 128)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3596, file: !3597, line: 17, baseType: !145, size: 64, offset: 128)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3596, file: !3597, line: 18, baseType: !3602, size: 64, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3603, size: 64)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{null, !3605}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3596, file: !3597, line: 19, baseType: !409, size: 32, offset: 256)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3585, file: !3586, line: 50, baseType: !145, size: 64, offset: 640)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3585, file: !3586, line: 51, baseType: !1309, size: 64, offset: 704)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3585, file: !3586, line: 52, baseType: !1309, size: 64, offset: 768)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3585, file: !3586, line: 53, baseType: !1309, size: 64, offset: 832)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3585, file: !3586, line: 54, baseType: !1309, size: 64, offset: 896)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3585, file: !3586, line: 55, baseType: !1309, size: 64, offset: 960)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3585, file: !3586, line: 56, baseType: !145, size: 64, offset: 1024)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3585, file: !3586, line: 57, baseType: !145, size: 64, offset: 1088)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3585, file: !3586, line: 58, baseType: !145, size: 64, offset: 1152)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3585, file: !3586, line: 59, baseType: !145, size: 64, offset: 1216)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3585, file: !3586, line: 60, baseType: !145, size: 64, offset: 1280)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3585, file: !3586, line: 61, baseType: !228, size: 64, offset: 1344)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3585, file: !3586, line: 62, baseType: !482, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3585, file: !3586, line: 63, baseType: !482, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3566, file: !80, line: 583, baseType: !482, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3566, file: !80, line: 584, baseType: !482, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3566, file: !80, line: 585, baseType: !482, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3566, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3566, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3566, file: !80, line: 592, baseType: !1301, size: 512, offset: 576)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3566, file: !80, line: 593, baseType: !413, size: 64, offset: 1088)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3566, file: !80, line: 594, baseType: !149, size: 256, offset: 1152)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3566, file: !80, line: 595, baseType: !1490, size: 128, offset: 1408)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3566, file: !80, line: 596, baseType: !3593, size: 64, offset: 1536)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3566, file: !80, line: 597, baseType: !200, size: 32, offset: 1600)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3566, file: !80, line: 598, baseType: !200, size: 32, offset: 1632)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3566, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3566, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3566, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3566, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3566, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3566, file: !80, line: 604, baseType: !482, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3566, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3566, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3566, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3566, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3566, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3566, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3566, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3566, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3566, file: !80, line: 613, baseType: !113, size: 32, offset: 1792)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3566, file: !80, line: 614, baseType: !113, size: 32, offset: 1824)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3566, file: !80, line: 615, baseType: !413, size: 64, offset: 1856)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3566, file: !80, line: 616, baseType: !413, size: 64, offset: 1920)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3566, file: !80, line: 617, baseType: !413, size: 64, offset: 1984)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3566, file: !80, line: 618, baseType: !413, size: 64, offset: 2048)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3566, file: !80, line: 620, baseType: !3654, size: 64, offset: 2112)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3656)
!3656 = !{!3657, !3658, !3659, !3660}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3655, file: !80, line: 537, baseType: !183)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3655, file: !80, line: 538, baseType: !7, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3655, file: !80, line: 540, baseType: !166, size: 128, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3655, file: !80, line: 543, baseType: !3661, size: 64, offset: 192)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3566, file: !80, line: 621, baseType: !3664, size: 64, offset: 2176)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !228, !1453}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3566, file: !80, line: 622, baseType: !3668, size: 64, offset: 2240)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !229, file: !73, line: 486, baseType: !3671, size: 64, offset: 4096)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3673)
!3673 = !{!3674, !3675, !3676, !3680, !3681, !3682}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3672, file: !80, line: 643, baseType: !3433, size: 1472)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3672, file: !80, line: 644, baseType: !3436, size: 64, offset: 1472)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3672, file: !80, line: 645, baseType: !3677, size: 64, offset: 1536)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !228, !482}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3672, file: !80, line: 646, baseType: !3436, size: 64, offset: 1600)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3672, file: !80, line: 647, baseType: !3427, size: 64, offset: 1664)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3672, file: !80, line: 648, baseType: !3427, size: 64, offset: 1728)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !229, file: !73, line: 493, baseType: !3684, size: 64, offset: 4160)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !229, file: !73, line: 499, baseType: !166, size: 128, offset: 4224)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !229, file: !73, line: 502, baseType: !3688, size: 64, offset: 4352)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3690)
!3690 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !229, file: !73, line: 504, baseType: !3692, size: 64, offset: 4416)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !229, file: !73, line: 505, baseType: !413, size: 64, offset: 4480)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !229, file: !73, line: 510, baseType: !413, size: 64, offset: 4544)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !229, file: !73, line: 511, baseType: !3696, size: 64, offset: 4608)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3698)
!3698 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !229, file: !73, line: 513, baseType: !3700, size: 64, offset: 4672)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3702)
!3702 = !{!3703, !3704}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3701, file: !73, line: 293, baseType: !7, size: 32)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3701, file: !73, line: 294, baseType: !145, size: 64, offset: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !229, file: !73, line: 515, baseType: !166, size: 128, offset: 4736)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !229, file: !73, line: 526, baseType: !3707, offset: 4864)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3708, line: 5, elements: !197)
!3708 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !229, file: !73, line: 528, baseType: !3710, size: 64, offset: 4864)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3712, line: 14, flags: DIFlagFwdDecl)
!3712 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !229, file: !73, line: 529, baseType: !3714, size: 64, offset: 4928)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3716, line: 17, size: 192, elements: !3717)
!3716 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3717 = !{!3718, !3719, !3802}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3715, file: !3716, line: 18, baseType: !3714, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3715, file: !3716, line: 19, baseType: !3720, size: 64, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3722)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3716, line: 110, size: 1152, elements: !3723)
!3723 = !{!3724, !3728, !3732, !3738, !3744, !3748, !3752, !3757, !3761, !3762, !3766, !3770, !3774, !3785, !3786, !3787, !3788, !3798}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3722, file: !3716, line: 111, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!3714, !3714}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3722, file: !3716, line: 112, baseType: !3729, size: 64, offset: 64)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !3714}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3722, file: !3716, line: 113, baseType: !3733, size: 64, offset: 128)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!482, !3736}
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3715)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3722, file: !3716, line: 114, baseType: !3739, size: 64, offset: 192)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 64)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!2178, !3736, !3742}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3722, file: !3716, line: 116, baseType: !3745, size: 64, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!482, !3736, !236}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3722, file: !3716, line: 118, baseType: !3749, size: 64, offset: 320)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!113, !3736, !236, !7, !112, !321}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3722, file: !3716, line: 123, baseType: !3753, size: 64, offset: 384)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!113, !3736, !236, !3756, !321}
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3722, file: !3716, line: 126, baseType: !3758, size: 64, offset: 448)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!236, !3736}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3722, file: !3716, line: 127, baseType: !3758, size: 64, offset: 512)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3722, file: !3716, line: 128, baseType: !3763, size: 64, offset: 576)
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{!3714, !3736}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3722, file: !3716, line: 130, baseType: !3767, size: 64, offset: 640)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DISubroutineType(types: !3769)
!3769 = !{!3714, !3736, !3714}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3722, file: !3716, line: 133, baseType: !3771, size: 64, offset: 704)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!3714, !3736, !236}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3722, file: !3716, line: 135, baseType: !3775, size: 64, offset: 768)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!113, !3736, !236, !236, !7, !7, !3778}
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3716, line: 43, size: 640, elements: !3780)
!3780 = !{!3781, !3782, !3783}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3779, file: !3716, line: 44, baseType: !3714, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3779, file: !3716, line: 45, baseType: !7, size: 32, offset: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3779, file: !3716, line: 46, baseType: !3784, size: 512, offset: 128)
!3784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 512, elements: !1339)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3722, file: !3716, line: 140, baseType: !3767, size: 64, offset: 832)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3722, file: !3716, line: 143, baseType: !3763, size: 64, offset: 896)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3722, file: !3716, line: 145, baseType: !3725, size: 64, offset: 960)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3722, file: !3716, line: 146, baseType: !3789, size: 64, offset: 1024)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!113, !3736, !3792}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3716, line: 29, size: 128, elements: !3794)
!3794 = !{!3795, !3796, !3797}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3793, file: !3716, line: 30, baseType: !7, size: 32)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3793, file: !3716, line: 31, baseType: !7, size: 32, offset: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3793, file: !3716, line: 32, baseType: !3736, size: 64, offset: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3722, file: !3716, line: 148, baseType: !3799, size: 64, offset: 1088)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!113, !3736, !228}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3715, file: !3716, line: 20, baseType: !228, size: 64, offset: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !229, file: !73, line: 534, baseType: !505, size: 32, offset: 4992)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !229, file: !73, line: 535, baseType: !409, size: 32, offset: 5024)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !229, file: !73, line: 537, baseType: !183, offset: 5056)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !229, file: !73, line: 538, baseType: !166, size: 128, offset: 5056)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !229, file: !73, line: 540, baseType: !3808, size: 64, offset: 5184)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3810, line: 54, size: 960, elements: !3811)
!3810 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3811 = !{!3812, !3813, !3814, !3815, !3816, !3817, !3818, !3822, !3826, !3827, !3828, !3829, !3833, !3837, !3838}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3809, file: !3810, line: 55, baseType: !236, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3809, file: !3810, line: 56, baseType: !623, size: 64, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3809, file: !3810, line: 58, baseType: !327, size: 64, offset: 128)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3809, file: !3810, line: 59, baseType: !327, size: 64, offset: 192)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3809, file: !3810, line: 60, baseType: !241, size: 64, offset: 256)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3809, file: !3810, line: 62, baseType: !3418, size: 64, offset: 320)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3809, file: !3810, line: 63, baseType: !3819, size: 64, offset: 384)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!274, !228, !3425}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3809, file: !3810, line: 65, baseType: !3823, size: 64, offset: 448)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{null, !3808}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3809, file: !3810, line: 66, baseType: !3427, size: 64, offset: 512)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3809, file: !3810, line: 68, baseType: !3436, size: 64, offset: 576)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3809, file: !3810, line: 70, baseType: !3244, size: 64, offset: 640)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3809, file: !3810, line: 71, baseType: !3830, size: 64, offset: 704)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{!2178, !228}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3809, file: !3810, line: 73, baseType: !3834, size: 64, offset: 768)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DISubroutineType(types: !3836)
!3836 = !{null, !228, !3276, !3277}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3809, file: !3810, line: 75, baseType: !3431, size: 64, offset: 832)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3809, file: !3810, line: 77, baseType: !3548, size: 64, offset: 896)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !229, file: !73, line: 541, baseType: !327, size: 64, offset: 5248)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !229, file: !73, line: 543, baseType: !3427, size: 64, offset: 5312)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !229, file: !73, line: 544, baseType: !3842, size: 64, offset: 5376)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !229, file: !73, line: 545, baseType: !3845, size: 64, offset: 5440)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !229, file: !73, line: 547, baseType: !482, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !229, file: !73, line: 548, baseType: !482, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !229, file: !73, line: 549, baseType: !482, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !229, file: !73, line: 550, baseType: !482, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !214, file: !119, line: 289, baseType: !3852, size: 64, offset: 128)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !3854, line: 302, size: 1472, elements: !3855)
!3854 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!3855 = !{!3856, !3857, !3858, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3887, !3888, !3892, !3893, !3895, !3898, !3901, !3902, !4063}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3853, file: !3854, line: 303, baseType: !113, size: 32)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3853, file: !3854, line: 304, baseType: !218, size: 32, offset: 32)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !3853, file: !3854, line: 305, baseType: !3859, size: 64, offset: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3853, file: !3854, line: 306, baseType: !623, size: 64, offset: 128)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3853, file: !3854, line: 307, baseType: !236, size: 64, offset: 192)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3853, file: !3854, line: 308, baseType: !236, size: 64, offset: 256)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !3853, file: !3854, line: 309, baseType: !113, size: 32, offset: 320)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3853, file: !3854, line: 310, baseType: !113, size: 32, offset: 352)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !3853, file: !3854, line: 311, baseType: !113, size: 32, offset: 384)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3853, file: !3854, line: 312, baseType: !7, size: 32, offset: 416)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3853, file: !3854, line: 313, baseType: !1219, size: 16, offset: 448)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3853, file: !3854, line: 314, baseType: !1219, size: 16, offset: 464)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !3853, file: !3854, line: 315, baseType: !3870, size: 352, offset: 480)
!3870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !3871, line: 32, size: 352, elements: !3872)
!3871 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!3872 = !{!3873, !3875, !3876, !3877, !3878, !3880, !3884, !3886}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !3870, file: !3871, line: 33, baseType: !3874, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !3871, line: 9, baseType: !7)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !3870, file: !3871, line: 34, baseType: !3874, size: 32, offset: 32)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !3870, file: !3871, line: 35, baseType: !3874, size: 32, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !3870, file: !3871, line: 36, baseType: !3874, size: 32, offset: 96)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !3870, file: !3871, line: 37, baseType: !3879, size: 8, offset: 128)
!3879 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !3871, line: 7, baseType: !419)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !3870, file: !3871, line: 38, baseType: !3881, size: 152, offset: 136)
!3881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3879, size: 152, elements: !3882)
!3882 = !{!3883}
!3883 = !DISubrange(count: 19)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !3870, file: !3871, line: 39, baseType: !3885, size: 32, offset: 288)
!3885 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !3871, line: 8, baseType: !7)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !3870, file: !3871, line: 40, baseType: !3885, size: 32, offset: 320)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3853, file: !3854, line: 316, baseType: !145, size: 64, offset: 832)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !3853, file: !3854, line: 317, baseType: !3889, size: 64, offset: 896)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3891, line: 123, flags: DIFlagFwdDecl)
!3891 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3853, file: !3854, line: 318, baseType: !3852, size: 64, offset: 960)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !3853, file: !3854, line: 323, baseType: !3894, size: 64, offset: 1024)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !3853, file: !3854, line: 324, baseType: !3896, size: 64, offset: 1088)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !3853, file: !3854, line: 325, baseType: !3899, size: 64, offset: 1152)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !3853, file: !3854, line: 326, baseType: !112, size: 64, offset: 1216)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3853, file: !3854, line: 332, baseType: !3903, size: 64, offset: 1280)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3905)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !3854, line: 254, size: 2176, elements: !3906)
!3906 = !{!3907, !3911, !3915, !3919, !3923, !3927, !3931, !3932, !3936, !3940, !3941, !3945, !3946, !3950, !3954, !3958, !3959, !3960, !3961, !3962, !3963, !3967, !3968, !3969, !3973, !3977, !3978, !3982, !3994, !4009, !4030, !4057, !4058, !4062}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !3905, file: !3854, line: 255, baseType: !3908, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!213, !3852, !351, !113}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !3905, file: !3854, line: 257, baseType: !3912, size: 64, offset: 64)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!113, !3852, !213}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3905, file: !3854, line: 258, baseType: !3916, size: 64, offset: 128)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3852, !213}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3905, file: !3854, line: 259, baseType: !3920, size: 64, offset: 192)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!113, !213, !351}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3905, file: !3854, line: 260, baseType: !3924, size: 64, offset: 256)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{null, !213, !351}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3905, file: !3854, line: 261, baseType: !3928, size: 64, offset: 320)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !213}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3905, file: !3854, line: 262, baseType: !3928, size: 64, offset: 384)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3905, file: !3854, line: 263, baseType: !3933, size: 64, offset: 448)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!113, !213, !417, !113}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !3905, file: !3854, line: 265, baseType: !3937, size: 64, offset: 512)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!113, !213, !419}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !3905, file: !3854, line: 266, baseType: !3928, size: 64, offset: 576)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !3905, file: !3854, line: 267, baseType: !3942, size: 64, offset: 640)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!113, !213}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !3905, file: !3854, line: 268, baseType: !3942, size: 64, offset: 704)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !3905, file: !3854, line: 269, baseType: !3947, size: 64, offset: 768)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!113, !213, !7, !145}
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3905, file: !3854, line: 271, baseType: !3951, size: 64, offset: 832)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DISubroutineType(types: !3953)
!3953 = !{!309, !213, !7, !145}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !3905, file: !3854, line: 273, baseType: !3955, size: 64, offset: 896)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{null, !213, !3900}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !3905, file: !3854, line: 274, baseType: !3928, size: 64, offset: 960)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !3905, file: !3854, line: 275, baseType: !3928, size: 64, offset: 1024)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !3905, file: !3854, line: 276, baseType: !3928, size: 64, offset: 1088)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3905, file: !3854, line: 277, baseType: !3928, size: 64, offset: 1152)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !3905, file: !3854, line: 278, baseType: !3928, size: 64, offset: 1216)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !3905, file: !3854, line: 279, baseType: !3964, size: 64, offset: 1280)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = !DISubroutineType(types: !3966)
!3966 = !{!113, !213, !113}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !3905, file: !3854, line: 280, baseType: !3928, size: 64, offset: 1344)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !3905, file: !3854, line: 281, baseType: !3928, size: 64, offset: 1408)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !3905, file: !3854, line: 282, baseType: !3970, size: 64, offset: 1472)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{null, !213, !113}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !3905, file: !3854, line: 283, baseType: !3974, size: 64, offset: 1536)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !213, !238}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !3905, file: !3854, line: 284, baseType: !3942, size: 64, offset: 1600)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !3905, file: !3854, line: 285, baseType: !3979, size: 64, offset: 1664)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3980, size: 64)
!3980 = !DISubroutineType(types: !3981)
!3981 = !{!113, !213, !7, !7}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !3905, file: !3854, line: 287, baseType: !3983, size: 64, offset: 1728)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!113, !213, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !3988, line: 15, size: 64, elements: !3989)
!3988 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!3989 = !{!3990, !3991, !3992, !3993}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !3987, file: !3988, line: 16, baseType: !316, size: 16)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !3987, file: !3988, line: 17, baseType: !316, size: 16, offset: 16)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !3987, file: !3988, line: 18, baseType: !316, size: 16, offset: 32)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !3987, file: !3988, line: 19, baseType: !316, size: 16, offset: 48)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !3905, file: !3854, line: 288, baseType: !3995, size: 64, offset: 1792)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!113, !213, !3998}
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !4000, line: 10, size: 128, elements: !4001)
!4000 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!4001 = !{!4002, !4003, !4004, !4008}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !3999, file: !4000, line: 12, baseType: !879, size: 16)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !3999, file: !4000, line: 13, baseType: !879, size: 16, offset: 16)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !3999, file: !4000, line: 14, baseType: !4005, size: 80, offset: 32)
!4005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !879, size: 80, elements: !4006)
!4006 = !{!4007}
!4007 = !DISubrange(count: 5)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !3999, file: !4000, line: 15, baseType: !879, size: 16, offset: 112)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !3905, file: !3854, line: 289, baseType: !4010, size: 64, offset: 1856)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!113, !213, !4013}
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !4015, line: 102, size: 640, elements: !4016)
!4015 = !DIFile(filename: "./include/uapi/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4016 = !{!4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4014, file: !4015, line: 103, baseType: !113, size: 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4014, file: !4015, line: 103, baseType: !113, size: 32, offset: 32)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4014, file: !4015, line: 103, baseType: !113, size: 32, offset: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4014, file: !4015, line: 103, baseType: !113, size: 32, offset: 96)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4014, file: !4015, line: 104, baseType: !113, size: 32, offset: 128)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4014, file: !4015, line: 104, baseType: !113, size: 32, offset: 160)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4014, file: !4015, line: 105, baseType: !113, size: 32, offset: 192)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4014, file: !4015, line: 105, baseType: !113, size: 32, offset: 224)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4014, file: !4015, line: 105, baseType: !113, size: 32, offset: 256)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4014, file: !4015, line: 105, baseType: !113, size: 32, offset: 288)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4014, file: !4015, line: 106, baseType: !113, size: 32, offset: 320)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4014, file: !4015, line: 107, baseType: !4029, size: 288, offset: 352)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 288, elements: !3505)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !3905, file: !3854, line: 291, baseType: !4031, size: 64, offset: 1920)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!113, !213, !4034}
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !4015, line: 19, size: 576, elements: !4036)
!4036 = !{!4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4049, !4050, !4051, !4052, !4054, !4055, !4056}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4035, file: !4015, line: 20, baseType: !113, size: 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4035, file: !4015, line: 21, baseType: !113, size: 32, offset: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4035, file: !4015, line: 22, baseType: !7, size: 32, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4035, file: !4015, line: 23, baseType: !113, size: 32, offset: 96)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4035, file: !4015, line: 24, baseType: !113, size: 32, offset: 128)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4035, file: !4015, line: 25, baseType: !113, size: 32, offset: 160)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !4035, file: !4015, line: 26, baseType: !113, size: 32, offset: 192)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !4035, file: !4015, line: 27, baseType: !113, size: 32, offset: 224)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !4035, file: !4015, line: 28, baseType: !316, size: 16, offset: 256)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "io_type", scope: !4035, file: !4015, line: 29, baseType: !238, size: 8, offset: 272)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_char", scope: !4035, file: !4015, line: 30, baseType: !4048, size: 8, offset: 280)
!4048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 8, elements: !1380)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "hub6", scope: !4035, file: !4015, line: 31, baseType: !113, size: 32, offset: 288)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !4035, file: !4015, line: 32, baseType: !316, size: 16, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait2", scope: !4035, file: !4015, line: 33, baseType: !316, size: 16, offset: 336)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_base", scope: !4035, file: !4015, line: 34, baseType: !4053, size: 64, offset: 384)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "iomem_reg_shift", scope: !4035, file: !4015, line: 35, baseType: !316, size: 16, offset: 448)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "port_high", scope: !4035, file: !4015, line: 36, baseType: !7, size: 32, offset: 480)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "iomap_base", scope: !4035, file: !4015, line: 37, baseType: !145, size: 64, offset: 512)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !3905, file: !3854, line: 292, baseType: !4031, size: 64, offset: 1984)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3905, file: !3854, line: 293, baseType: !4059, size: 64, offset: 2048)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{null, !213, !704}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !3905, file: !3854, line: 299, baseType: !735, size: 64, offset: 2112)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !3853, file: !3854, line: 333, baseType: !166, size: 128, offset: 1344)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !214, file: !119, line: 290, baseType: !3903, size: 64, offset: 192)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !214, file: !119, line: 291, baseType: !113, size: 32, offset: 256)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !214, file: !119, line: 294, baseType: !4067, size: 384, offset: 320)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !4068, line: 133, size: 384, elements: !4069)
!4068 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!4069 = !{!4070, !4071, !4072, !4073, !4074}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4067, file: !4068, line: 134, baseType: !153, size: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4067, file: !4068, line: 135, baseType: !799, offset: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !4067, file: !4068, line: 136, baseType: !7, size: 32, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !4067, file: !4068, line: 137, baseType: !166, size: 128, offset: 128)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !4067, file: !4068, line: 138, baseType: !166, size: 128, offset: 256)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !214, file: !119, line: 295, baseType: !4076, size: 64, offset: 704)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !4068, line: 215, size: 128, elements: !4078)
!4078 = !{!4079, !4124}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4077, file: !4068, line: 216, baseType: !4080, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !4068, line: 175, size: 1216, elements: !4082)
!4082 = !{!4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4094, !4098, !4102, !4103, !4104, !4108, !4109, !4113, !4114, !4118, !4122, !4123}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4081, file: !4068, line: 176, baseType: !113, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4081, file: !4068, line: 177, baseType: !274, size: 64, offset: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4081, file: !4068, line: 178, baseType: !113, size: 32, offset: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4081, file: !4068, line: 179, baseType: !113, size: 32, offset: 160)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4081, file: !4068, line: 184, baseType: !3942, size: 64, offset: 192)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4081, file: !4068, line: 185, baseType: !3928, size: 64, offset: 256)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !4081, file: !4068, line: 186, baseType: !3928, size: 64, offset: 320)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4081, file: !4068, line: 187, baseType: !4091, size: 64, offset: 384)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!305, !213, !351, !4053, !321}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4081, file: !4068, line: 189, baseType: !4095, size: 64, offset: 448)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!305, !213, !351, !417, !321}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4081, file: !4068, line: 191, baseType: !4099, size: 64, offset: 512)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!113, !213, !351, !7, !145}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4081, file: !4068, line: 193, baseType: !4099, size: 64, offset: 576)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !4081, file: !4068, line: 195, baseType: !3955, size: 64, offset: 640)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4081, file: !4068, line: 196, baseType: !4105, size: 64, offset: 704)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!2952, !213, !351, !2954}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !4081, file: !4068, line: 198, baseType: !3942, size: 64, offset: 768)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4081, file: !4068, line: 203, baseType: !4110, size: 64, offset: 832)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{null, !213, !417, !274, !113}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4081, file: !4068, line: 205, baseType: !3928, size: 64, offset: 896)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !4081, file: !4068, line: 206, baseType: !4115, size: 64, offset: 960)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{null, !213, !7}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !4081, file: !4068, line: 207, baseType: !4119, size: 64, offset: 1024)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!113, !213, !417, !274, !113}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4081, file: !4068, line: 210, baseType: !623, size: 64, offset: 1088)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4081, file: !4068, line: 212, baseType: !113, size: 32, offset: 1152)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4077, file: !4068, line: 217, baseType: !213, size: 64, offset: 64)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !214, file: !119, line: 297, baseType: !178, size: 192, offset: 768)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !214, file: !119, line: 298, baseType: !178, size: 192, offset: 960)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !214, file: !119, line: 299, baseType: !178, size: 192, offset: 1152)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !214, file: !119, line: 300, baseType: !793, size: 256, offset: 1344)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !214, file: !119, line: 301, baseType: !178, size: 192, offset: 1600)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !214, file: !119, line: 302, baseType: !183, offset: 1792)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !214, file: !119, line: 303, baseType: !183, offset: 1792)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !214, file: !119, line: 305, baseType: !3870, size: 352, offset: 1792)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !214, file: !119, line: 305, baseType: !3870, size: 352, offset: 2144)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !214, file: !119, line: 306, baseType: !3998, size: 64, offset: 2496)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !214, file: !119, line: 307, baseType: !4136, size: 512, offset: 2560)
!4136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 512, elements: !279)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !214, file: !119, line: 308, baseType: !1480, size: 64, offset: 3072)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !214, file: !119, line: 313, baseType: !1480, size: 64, offset: 3136)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !214, file: !119, line: 314, baseType: !145, size: 64, offset: 3200)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !214, file: !119, line: 315, baseType: !113, size: 32, offset: 3264)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !214, file: !119, line: 316, baseType: !3987, size: 64, offset: 3296)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !214, file: !119, line: 317, baseType: !145, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !214, file: !119, line: 318, baseType: !145, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !214, file: !119, line: 319, baseType: !145, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !214, file: !119, line: 320, baseType: !113, size: 32, offset: 3456)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !214, file: !119, line: 321, baseType: !145, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !214, file: !119, line: 322, baseType: !145, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !214, file: !119, line: 323, baseType: !145, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !214, file: !119, line: 324, baseType: !7, size: 32, offset: 3584)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !214, file: !119, line: 325, baseType: !113, size: 32, offset: 3616)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !214, file: !119, line: 327, baseType: !213, size: 64, offset: 3648)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !214, file: !119, line: 328, baseType: !3006, size: 64, offset: 3712)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !214, file: !119, line: 329, baseType: !1490, size: 128, offset: 3776)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !214, file: !119, line: 330, baseType: !1490, size: 128, offset: 3904)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !214, file: !119, line: 331, baseType: !149, size: 256, offset: 4032)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !214, file: !119, line: 332, baseType: !112, size: 64, offset: 4288)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !214, file: !119, line: 333, baseType: !112, size: 64, offset: 4352)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !214, file: !119, line: 334, baseType: !183, offset: 4416)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !214, file: !119, line: 335, baseType: !166, size: 128, offset: 4416)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !214, file: !119, line: 339, baseType: !113, size: 32, offset: 4544)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !214, file: !119, line: 340, baseType: !4053, size: 64, offset: 4608)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !214, file: !119, line: 341, baseType: !113, size: 32, offset: 4672)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !214, file: !119, line: 343, baseType: !149, size: 256, offset: 4736)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !214, file: !119, line: 344, baseType: !3897, size: 64, offset: 4992)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !118, file: !119, line: 233, baseType: !213, size: 64, offset: 1088)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !118, file: !119, line: 234, baseType: !4167, size: 64, offset: 1152)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4169)
!4169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !119, line: 205, size: 320, elements: !4170)
!4170 = !{!4171, !4175, !4179, !4183, !4187}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !4169, file: !119, line: 207, baseType: !4172, size: 64)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4173, size: 64)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!113, !3897}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !4169, file: !119, line: 209, baseType: !4176, size: 64, offset: 64)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{null, !3897, !113}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4169, file: !119, line: 213, baseType: !4180, size: 64, offset: 128)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{null, !3897}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4169, file: !119, line: 218, baseType: !4184, size: 64, offset: 192)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!113, !3897, !213}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !4169, file: !119, line: 220, baseType: !4180, size: 64, offset: 256)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !118, file: !119, line: 235, baseType: !4189, size: 64, offset: 1216)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4191)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !119, line: 223, size: 128, elements: !4192)
!4192 = !{!4193, !4197}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !4191, file: !119, line: 224, baseType: !4194, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!113, !3897, !417, !417, !321}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !4191, file: !119, line: 225, baseType: !4180, size: 64, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !118, file: !119, line: 236, baseType: !183, offset: 1280)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !118, file: !119, line: 237, baseType: !113, size: 32, offset: 1280)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !118, file: !119, line: 238, baseType: !113, size: 32, offset: 1312)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !118, file: !119, line: 239, baseType: !1490, size: 128, offset: 1344)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !118, file: !119, line: 240, baseType: !1490, size: 128, offset: 1472)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !118, file: !119, line: 241, baseType: !145, size: 64, offset: 1600)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !118, file: !119, line: 242, baseType: !145, size: 64, offset: 1664)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !118, file: !119, line: 243, baseType: !419, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !118, file: !119, line: 244, baseType: !419, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !118, file: !119, line: 245, baseType: !178, size: 192, offset: 1792)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !118, file: !119, line: 246, baseType: !178, size: 192, offset: 1984)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !118, file: !119, line: 247, baseType: !4053, size: 64, offset: 2176)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !118, file: !119, line: 248, baseType: !7, size: 32, offset: 2240)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !118, file: !119, line: 249, baseType: !7, size: 32, offset: 2272)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !118, file: !119, line: 250, baseType: !113, size: 32, offset: 2304)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !118, file: !119, line: 253, baseType: !218, size: 32, offset: 2336)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !118, file: !119, line: 254, baseType: !112, size: 64, offset: 2368)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "board", scope: !115, file: !3, line: 222, baseType: !4216, size: 64, offset: 2432)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_board", file: !3, line: 262, size: 34624, elements: !4218)
!4218 = !{!4219, !4220, !4221, !4229, !4230, !4231, !4232, !4233}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4217, file: !3, line: 263, baseType: !7, size: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4217, file: !3, line: 264, baseType: !113, size: 32, offset: 32)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4217, file: !3, line: 265, baseType: !4222, size: 64, offset: 64)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4224)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_cardinfo", file: !3, line: 101, size: 128, elements: !4225)
!4225 = !{!4226, !4227, !4228}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4224, file: !3, line: 102, baseType: !274, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "nports", scope: !4224, file: !3, line: 103, baseType: !7, size: 32, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4224, file: !3, line: 104, baseType: !7, size: 32, offset: 96)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !4217, file: !3, line: 266, baseType: !145, size: 64, offset: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "vector_mask", scope: !4217, file: !3, line: 267, baseType: !145, size: 64, offset: 192)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "chip_flag", scope: !4217, file: !3, line: 269, baseType: !113, size: 32, offset: 256)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "uart_type", scope: !4217, file: !3, line: 270, baseType: !113, size: 32, offset: 288)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !4217, file: !3, line: 272, baseType: !4234, size: 34304, offset: 320)
!4234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 34304, elements: !1339)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "ioaddr", scope: !115, file: !3, line: 224, baseType: !145, size: 64, offset: 2496)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "opmode_ioaddr", scope: !115, file: !3, line: 225, baseType: !145, size: 64, offset: 2560)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "max_baud", scope: !115, file: !3, line: 226, baseType: !113, size: 32, offset: 2624)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "rx_high_water", scope: !115, file: !3, line: 228, baseType: !113, size: 32, offset: 2656)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "rx_trigger", scope: !115, file: !3, line: 229, baseType: !113, size: 32, offset: 2688)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "rx_low_water", scope: !115, file: !3, line: 230, baseType: !113, size: 32, offset: 2720)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "baud_base", scope: !115, file: !3, line: 231, baseType: !113, size: 32, offset: 2752)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !115, file: !3, line: 232, baseType: !113, size: 32, offset: 2784)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "x_char", scope: !115, file: !3, line: 234, baseType: !113, size: 32, offset: 2816)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !115, file: !3, line: 235, baseType: !113, size: 32, offset: 2848)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !115, file: !3, line: 236, baseType: !113, size: 32, offset: 2880)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "stop_rx", scope: !115, file: !3, line: 238, baseType: !419, size: 8, offset: 2912)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_stop_rx", scope: !115, file: !3, line: 239, baseType: !419, size: 8, offset: 2920)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "custom_divisor", scope: !115, file: !3, line: 241, baseType: !113, size: 32, offset: 2944)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "err_shadow", scope: !115, file: !3, line: 242, baseType: !419, size: 8, offset: 2976)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "icount", scope: !115, file: !3, line: 244, baseType: !4251, size: 352, offset: 3008)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "async_icount", file: !4252, line: 20, size: 352, elements: !4253)
!4252 = !DIFile(filename: "./include/linux/serial.h", directory: "/home/lizy2001/genbc/linux")
!4253 = !{!4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32, offset: 32)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32, offset: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32, offset: 96)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32, offset: 128)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !4251, file: !4252, line: 21, baseType: !410, size: 32, offset: 160)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !4251, file: !4252, line: 22, baseType: !410, size: 32, offset: 192)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4251, file: !4252, line: 22, baseType: !410, size: 32, offset: 224)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "overrun", scope: !4251, file: !4252, line: 22, baseType: !410, size: 32, offset: 256)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !4251, file: !4252, line: 22, baseType: !410, size: 32, offset: 288)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "buf_overrun", scope: !4251, file: !4252, line: 23, baseType: !410, size: 32, offset: 320)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !115, file: !3, line: 245, baseType: !7, size: 32, offset: 3360)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "read_status_mask", scope: !115, file: !3, line: 247, baseType: !113, size: 32, offset: 3392)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_status_mask", scope: !115, file: !3, line: 248, baseType: !113, size: 32, offset: 3424)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !115, file: !3, line: 249, baseType: !7, size: 32, offset: 3456)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_head", scope: !115, file: !3, line: 250, baseType: !113, size: 32, offset: 3488)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_tail", scope: !115, file: !3, line: 251, baseType: !113, size: 32, offset: 3520)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_cnt", scope: !115, file: !3, line: 252, baseType: !113, size: 32, offset: 3552)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !115, file: !3, line: 253, baseType: !113, size: 32, offset: 3584)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "normal_termios", scope: !115, file: !3, line: 255, baseType: !3870, size: 352, offset: 3616)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "mon_data", scope: !115, file: !3, line: 257, baseType: !4275, size: 320, offset: 3968)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_mon", file: !3, line: 193, size: 320, elements: !4276)
!4276 = !{!4277, !4278, !4279, !4280, !4281, !4282}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "rxcnt", scope: !4275, file: !3, line: 194, baseType: !145, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "txcnt", scope: !4275, file: !3, line: 195, baseType: !145, size: 64, offset: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "up_rxcnt", scope: !4275, file: !3, line: 196, baseType: !145, size: 64, offset: 128)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "up_txcnt", scope: !4275, file: !3, line: 197, baseType: !145, size: 64, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "modem_status", scope: !4275, file: !3, line: 198, baseType: !113, size: 32, offset: 256)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "hold_reason", scope: !4275, file: !3, line: 199, baseType: !419, size: 8, offset: 288)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !115, file: !3, line: 259, baseType: !183, offset: 4288)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !238)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !156, line: 107, baseType: !413)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!4290 = !{!0, !4291, !4296, !4348, !4353, !4358, !4360, !4365, !4370, !4375, !4377, !4382, !4385, !4387, !4392, !4395, !4397, !4399, !4404, !4406, !4409, !4414, !4416, !4421, !4698, !4703, !4706, !4720, !4722, !4727, !4735, !4737, !4741, !4746}
!4291 = !DIGlobalVariableExpression(var: !4292, expr: !DIExpression())
!4292 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description241", scope: !2, file: !3, line: 181, type: !4293, isLocal: true, isDefinition: true, align: 8)
!4293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 616, elements: !4294)
!4294 = !{!4295}
!4295 = !DISubrange(count: 77)
!4296 = !DIGlobalVariableExpression(var: !4297, expr: !DIExpression())
!4297 = distinct !DIGlobalVariable(name: "__param_ioaddr", scope: !2, file: !3, line: 182, type: !4298, isLocal: true, isDefinition: true, align: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4300, line: 69, size: 320, elements: !4301)
!4300 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4301 = !{!4302, !4303, !4304, !4320, !4322, !4326, !4327}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4299, file: !4300, line: 70, baseType: !236, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4299, file: !4300, line: 71, baseType: !623, size: 64, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4299, file: !4300, line: 72, baseType: !4305, size: 64, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4307)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4300, line: 47, size: 256, elements: !4308)
!4308 = !{!4309, !4310, !4315, !4319}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4307, file: !4300, line: 49, baseType: !7, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4307, file: !4300, line: 51, baseType: !4311, size: 64, offset: 64)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!113, !236, !4314}
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4307, file: !4300, line: 53, baseType: !4316, size: 64, offset: 128)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!113, !274, !4314}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4307, file: !4300, line: 55, baseType: !460, size: 64, offset: 192)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4299, file: !4300, line: 73, baseType: !4321, size: 16, offset: 192)
!4321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4299, file: !4300, line: 74, baseType: !4323, size: 8, offset: 208)
!4323 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !161, line: 16, baseType: !4324)
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !163, line: 20, baseType: !4325)
!4325 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4299, file: !4300, line: 75, baseType: !1361, size: 8, offset: 216)
!4327 = !DIDerivedType(tag: DW_TAG_member, scope: !4299, file: !4300, line: 76, baseType: !4328, size: 64, offset: 256)
!4328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4299, file: !4300, line: 76, size: 64, elements: !4329)
!4329 = !{!4330, !4331, !4338}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4328, file: !4300, line: 77, baseType: !112, size: 64)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4328, file: !4300, line: 78, baseType: !4332, size: 64)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4334)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4300, line: 86, size: 128, elements: !4335)
!4335 = !{!4336, !4337}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4334, file: !4300, line: 87, baseType: !7, size: 32)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4334, file: !4300, line: 88, baseType: !274, size: 64, offset: 64)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4328, file: !4300, line: 79, baseType: !4339, size: 64)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4341)
!4341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4300, line: 92, size: 256, elements: !4342)
!4342 = !{!4343, !4344, !4345, !4346, !4347}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4341, file: !4300, line: 94, baseType: !7, size: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4341, file: !4300, line: 95, baseType: !7, size: 32, offset: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4341, file: !4300, line: 96, baseType: !2731, size: 64, offset: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4341, file: !4300, line: 97, baseType: !4305, size: 64, offset: 128)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4341, file: !4300, line: 98, baseType: !112, size: 64, offset: 192)
!4348 = !DIGlobalVariableExpression(var: !4349, expr: !DIExpression())
!4349 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ioaddrtype242", scope: !2, file: !3, line: 182, type: !4350, isLocal: true, isDefinition: true, align: 8)
!4350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 296, elements: !4351)
!4351 = !{!4352}
!4352 = !DISubrange(count: 37)
!4353 = !DIGlobalVariableExpression(var: !4354, expr: !DIExpression())
!4354 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ioaddr243", scope: !2, file: !3, line: 183, type: !4355, isLocal: true, isDefinition: true, align: 8)
!4355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 480, elements: !4356)
!4356 = !{!4357}
!4357 = !DISubrange(count: 60)
!4358 = !DIGlobalVariableExpression(var: !4359, expr: !DIExpression())
!4359 = distinct !DIGlobalVariable(name: "__param_ttymajor", scope: !2, file: !3, line: 184, type: !4298, isLocal: true, isDefinition: true, align: 64)
!4360 = !DIGlobalVariableExpression(var: !4361, expr: !DIExpression())
!4361 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ttymajortype244", scope: !2, file: !3, line: 184, type: !4362, isLocal: true, isDefinition: true, align: 8)
!4362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 224, elements: !4363)
!4363 = !{!4364}
!4364 = !DISubrange(count: 28)
!4365 = !DIGlobalVariableExpression(var: !4366, expr: !DIExpression())
!4366 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file245", scope: !2, file: !3, line: 185, type: !4367, isLocal: true, isDefinition: true, align: 8)
!4367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 232, elements: !4368)
!4368 = !{!4369}
!4369 = !DISubrange(count: 29)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license246", scope: !2, file: !3, line: 185, type: !4372, isLocal: true, isDefinition: true, align: 8)
!4372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 144, elements: !4373)
!4373 = !{!4374}
!4374 = !DISubrange(count: 18)
!4375 = !DIGlobalVariableExpression(var: !4376, expr: !DIExpression())
!4376 = distinct !DIGlobalVariable(name: "__param_allow_overlapping_vector", scope: !2, file: !3, line: 2345, type: !4298, isLocal: true, isDefinition: true, align: 64)
!4377 = !DIGlobalVariableExpression(var: !4378, expr: !DIExpression())
!4378 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_allow_overlapping_vectortype257", scope: !2, file: !3, line: 2345, type: !4379, isLocal: true, isDefinition: true, align: 8)
!4379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 360, elements: !4380)
!4380 = !{!4381}
!4381 = !DISubrange(count: 45)
!4382 = !DIGlobalVariableExpression(var: !4383, expr: !DIExpression())
!4383 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_allow_overlapping_vector258", scope: !2, file: !3, line: 2346, type: !4384, isLocal: true, isDefinition: true, align: 8)
!4384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 1024, elements: !3495)
!4385 = !DIGlobalVariableExpression(var: !4386, expr: !DIExpression())
!4386 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_mxser_module_init259", scope: !2, file: !3, line: 2807, type: !112, isLocal: true, isDefinition: true)
!4387 = !DIGlobalVariableExpression(var: !4388, expr: !DIExpression())
!4388 = distinct !DIGlobalVariable(name: "__exitcall_mxser_module_exit", scope: !2, file: !3, line: 2808, type: !4389, isLocal: true, isDefinition: true)
!4389 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4390, line: 117, baseType: !4391)
!4390 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!4392 = !DIGlobalVariableExpression(var: !4393, expr: !DIExpression())
!4393 = distinct !DIGlobalVariable(name: "mxser_boards", scope: !2, file: !3, line: 283, type: !4394, isLocal: true, isDefinition: true)
!4394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4217, size: 138496, elements: !1175)
!4395 = !DIGlobalVariableExpression(var: !4396, expr: !DIExpression())
!4396 = distinct !DIGlobalVariable(name: "mxvar_sdriver", scope: !2, file: !3, line: 284, type: !3852, isLocal: true, isDefinition: true)
!4397 = !DIGlobalVariableExpression(var: !4398, expr: !DIExpression())
!4398 = distinct !DIGlobalVariable(name: "allow_overlapping_vector", scope: !2, file: !3, line: 2344, type: !482, isLocal: true, isDefinition: true)
!4399 = !DIGlobalVariableExpression(var: !4400, expr: !DIExpression())
!4400 = distinct !DIGlobalVariable(name: "__param_str_ioaddr", scope: !2, file: !3, line: 182, type: !4401, isLocal: true, isDefinition: true)
!4401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 104, elements: !4402)
!4402 = !{!4403}
!4403 = !DISubrange(count: 13)
!4404 = !DIGlobalVariableExpression(var: !4405, expr: !DIExpression())
!4405 = distinct !DIGlobalVariable(name: "__param_arr_ioaddr", scope: !2, file: !3, line: 182, type: !4340, isLocal: true, isDefinition: true)
!4406 = !DIGlobalVariableExpression(var: !4407, expr: !DIExpression())
!4407 = distinct !DIGlobalVariable(name: "ioaddr", scope: !2, file: !3, line: 175, type: !4408, isLocal: true, isDefinition: true)
!4408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 256, elements: !1175)
!4409 = !DIGlobalVariableExpression(var: !4410, expr: !DIExpression())
!4410 = distinct !DIGlobalVariable(name: "__param_str_ttymajor", scope: !2, file: !3, line: 184, type: !4411, isLocal: true, isDefinition: true)
!4411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 120, elements: !4412)
!4412 = !{!4413}
!4413 = !DISubrange(count: 15)
!4414 = !DIGlobalVariableExpression(var: !4415, expr: !DIExpression())
!4415 = distinct !DIGlobalVariable(name: "ttymajor", scope: !2, file: !3, line: 176, type: !113, isLocal: true, isDefinition: true)
!4416 = !DIGlobalVariableExpression(var: !4417, expr: !DIExpression())
!4417 = distinct !DIGlobalVariable(name: "__param_str_allow_overlapping_vector", scope: !2, file: !3, line: 2345, type: !4418, isLocal: true, isDefinition: true)
!4418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 248, elements: !4419)
!4419 = !{!4420}
!4420 = !DISubrange(count: 31)
!4421 = !DIGlobalVariableExpression(var: !4422, expr: !DIExpression())
!4422 = distinct !DIGlobalVariable(name: "mxser_driver", scope: !2, file: !3, line: 2690, type: !4423, isLocal: true, isDefinition: true)
!4423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4424, line: 858, size: 2048, elements: !4425)
!4424 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4425 = !{!4426, !4427, !4428, !4440, !4656, !4660, !4664, !4668, !4669, !4673, !4691, !4692, !4693}
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4423, file: !4424, line: 859, baseType: !166, size: 128)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4423, file: !4424, line: 860, baseType: !236, size: 64, offset: 128)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4423, file: !4424, line: 861, baseType: !4429, size: 64, offset: 192)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4431)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3489, line: 38, size: 256, elements: !4432)
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438, !4439}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4431, file: !3489, line: 39, baseType: !410, size: 32)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4431, file: !3489, line: 39, baseType: !410, size: 32, offset: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4431, file: !3489, line: 40, baseType: !410, size: 32, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4431, file: !3489, line: 40, baseType: !410, size: 32, offset: 96)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4431, file: !3489, line: 41, baseType: !410, size: 32, offset: 128)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4431, file: !3489, line: 41, baseType: !410, size: 32, offset: 160)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4431, file: !3489, line: 42, baseType: !3508, size: 64, offset: 192)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4423, file: !4424, line: 862, baseType: !4441, size: 64, offset: 256)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{!113, !4444, !4429}
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4424, line: 309, size: 19264, elements: !4446)
!4446 = !{!4447, !4448, !4520, !4521, !4522, !4523, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !4552, !4553, !4554, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4578, !4579, !4580, !4581, !4583, !4584, !4585, !4586, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4629, !4630, !4632, !4633, !4634, !4635, !4637, !4638, !4639, !4642, !4649, !4650, !4651, !4652, !4653, !4654, !4655}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4445, file: !4424, line: 310, baseType: !166, size: 128)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4445, file: !4424, line: 311, baseType: !4449, size: 64, offset: 128)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4424, line: 605, size: 8064, elements: !4451)
!4451 = !{!4452, !4453, !4454, !4455, !4456, !4457, !4458, !4473, !4474, !4475, !4499, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4512, !4513, !4515, !4516, !4517, !4518, !4519}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4450, file: !4424, line: 606, baseType: !166, size: 128)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4450, file: !4424, line: 607, baseType: !4449, size: 64, offset: 128)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4450, file: !4424, line: 608, baseType: !166, size: 128, offset: 192)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4450, file: !4424, line: 609, baseType: !166, size: 128, offset: 320)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4450, file: !4424, line: 610, baseType: !4444, size: 64, offset: 448)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4450, file: !4424, line: 611, baseType: !166, size: 128, offset: 512)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4450, file: !4424, line: 613, baseType: !4459, size: 256, offset: 640)
!4459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4460, size: 256, elements: !1175)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4462, line: 20, size: 512, elements: !4463)
!4462 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4463 = !{!4464, !4466, !4467, !4468, !4469, !4470, !4471, !4472}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4461, file: !4462, line: 21, baseType: !4465, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !156, line: 158, baseType: !2176)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4461, file: !4462, line: 22, baseType: !4465, size: 64, offset: 64)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4461, file: !4462, line: 23, baseType: !236, size: 64, offset: 128)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4461, file: !4462, line: 24, baseType: !145, size: 64, offset: 192)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4461, file: !4462, line: 25, baseType: !145, size: 64, offset: 256)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4461, file: !4462, line: 26, baseType: !4460, size: 64, offset: 320)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4461, file: !4462, line: 26, baseType: !4460, size: 64, offset: 384)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4461, file: !4462, line: 26, baseType: !4460, size: 64, offset: 448)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4450, file: !4424, line: 614, baseType: !166, size: 128, offset: 896)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4450, file: !4424, line: 615, baseType: !4461, size: 512, offset: 1024)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4450, file: !4424, line: 617, baseType: !4476, size: 64, offset: 1536)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4424, line: 731, size: 320, elements: !4478)
!4478 = !{!4479, !4483, !4487, !4491, !4495}
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4477, file: !4424, line: 732, baseType: !4480, size: 64)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DISubroutineType(types: !4482)
!4482 = !{!113, !4449}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4477, file: !4424, line: 733, baseType: !4484, size: 64, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !4449}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4477, file: !4424, line: 734, baseType: !4488, size: 64, offset: 128)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!112, !4449, !7, !113}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4477, file: !4424, line: 735, baseType: !4492, size: 64, offset: 192)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!113, !4449, !7, !113, !113, !1424}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4477, file: !4424, line: 736, baseType: !4496, size: 64, offset: 256)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!113, !4449, !7, !113, !113, !409}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4450, file: !4424, line: 618, baseType: !4500, size: 64, offset: 1600)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4424, line: 537, flags: DIFlagFwdDecl)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4450, file: !4424, line: 619, baseType: !112, size: 64, offset: 1664)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4450, file: !4424, line: 620, baseType: !3889, size: 64, offset: 1728)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4450, file: !4424, line: 622, baseType: !419, size: 8, offset: 1792)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4450, file: !4424, line: 623, baseType: !419, size: 8, offset: 1800)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4450, file: !4424, line: 624, baseType: !419, size: 8, offset: 1808)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4450, file: !4424, line: 625, baseType: !419, size: 8, offset: 1816)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4450, file: !4424, line: 630, baseType: !4509, size: 384, offset: 1824)
!4509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !238, size: 384, elements: !4510)
!4510 = !{!4511}
!4511 = !DISubrange(count: 48)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4450, file: !4424, line: 632, baseType: !316, size: 16, offset: 2208)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4450, file: !4424, line: 633, baseType: !4514, size: 16, offset: 2224)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4424, line: 237, baseType: !316)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4450, file: !4424, line: 634, baseType: !228, size: 64, offset: 2240)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4450, file: !4424, line: 635, baseType: !229, size: 5568, offset: 2304)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4450, file: !4424, line: 636, baseType: !341, size: 64, offset: 7872)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4450, file: !4424, line: 637, baseType: !341, size: 64, offset: 7936)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4450, file: !4424, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4445, file: !4424, line: 312, baseType: !4449, size: 64, offset: 192)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4445, file: !4424, line: 314, baseType: !112, size: 64, offset: 256)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4445, file: !4424, line: 315, baseType: !3889, size: 64, offset: 320)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4445, file: !4424, line: 316, baseType: !4524, size: 64, offset: 384)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4424, line: 69, size: 832, elements: !4526)
!4526 = !{!4527, !4528, !4529, !4532, !4533}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4525, file: !4424, line: 70, baseType: !4449, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4525, file: !4424, line: 71, baseType: !166, size: 128, offset: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4525, file: !4424, line: 72, baseType: !4530, size: 64, offset: 192)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4424, line: 72, flags: DIFlagFwdDecl)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4525, file: !4424, line: 73, baseType: !419, size: 8, offset: 256)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4525, file: !4424, line: 74, baseType: !232, size: 512, offset: 320)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4445, file: !4424, line: 318, baseType: !7, size: 32, offset: 448)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4445, file: !4424, line: 319, baseType: !316, size: 16, offset: 480)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4445, file: !4424, line: 320, baseType: !316, size: 16, offset: 496)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4445, file: !4424, line: 321, baseType: !316, size: 16, offset: 512)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4445, file: !4424, line: 322, baseType: !316, size: 16, offset: 528)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4445, file: !4424, line: 323, baseType: !7, size: 32, offset: 544)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4445, file: !4424, line: 324, baseType: !1361, size: 8, offset: 576)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4445, file: !4424, line: 325, baseType: !1361, size: 8, offset: 584)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4445, file: !4424, line: 330, baseType: !1361, size: 8, offset: 592)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4445, file: !4424, line: 331, baseType: !1361, size: 8, offset: 600)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4445, file: !4424, line: 332, baseType: !1361, size: 8, offset: 608)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4445, file: !4424, line: 333, baseType: !1361, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4445, file: !4424, line: 334, baseType: !1361, size: 8, offset: 624)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4445, file: !4424, line: 335, baseType: !1361, size: 8, offset: 632)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4445, file: !4424, line: 336, baseType: !878, size: 16, offset: 640)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4445, file: !4424, line: 337, baseType: !4288, size: 64, offset: 704)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4445, file: !4424, line: 339, baseType: !4551, size: 64, offset: 768)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4445, file: !4424, line: 340, baseType: !413, size: 64, offset: 832)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4445, file: !4424, line: 346, baseType: !3701, size: 128, offset: 896)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4445, file: !4424, line: 348, baseType: !4555, size: 32, offset: 1024)
!4555 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4424, line: 155, baseType: !113)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4445, file: !4424, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4445, file: !4424, line: 352, baseType: !1361, size: 8, offset: 1064)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4445, file: !4424, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4445, file: !4424, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4445, file: !4424, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4445, file: !4424, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4445, file: !4424, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4445, file: !4424, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4445, file: !4424, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4445, file: !4424, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4445, file: !4424, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4445, file: !4424, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4445, file: !4424, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4445, file: !4424, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4445, file: !4424, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4445, file: !4424, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4445, file: !4424, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4445, file: !4424, line: 376, baseType: !7, size: 32, offset: 1120)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4445, file: !4424, line: 377, baseType: !7, size: 32, offset: 1152)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4445, file: !4424, line: 380, baseType: !4576, size: 64, offset: 1216)
!4576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4577, size: 64)
!4577 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4424, line: 303, flags: DIFlagFwdDecl)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4445, file: !4424, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4445, file: !4424, line: 383, baseType: !113, size: 32, offset: 1312)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4445, file: !4424, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4445, file: !4424, line: 387, baseType: !4582, size: 32, offset: 1376)
!4582 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4424, line: 180, baseType: !7)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4445, file: !4424, line: 388, baseType: !229, size: 5568, offset: 1408)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4445, file: !4424, line: 390, baseType: !113, size: 32, offset: 6976)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4445, file: !4424, line: 396, baseType: !7, size: 32, offset: 7008)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4445, file: !4424, line: 397, baseType: !4587, size: 8704, offset: 7040)
!4587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4461, size: 8704, elements: !4588)
!4588 = !{!4589}
!4589 = !DISubrange(count: 17)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4445, file: !4424, line: 399, baseType: !482, size: 8, offset: 15744)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4445, file: !4424, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4445, file: !4424, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4445, file: !4424, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4445, file: !4424, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4445, file: !4424, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4445, file: !4424, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4445, file: !4424, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4445, file: !4424, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4445, file: !4424, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4445, file: !4424, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4445, file: !4424, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4445, file: !4424, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4445, file: !4424, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4445, file: !4424, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4445, file: !4424, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4445, file: !4424, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4445, file: !4424, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4445, file: !4424, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4445, file: !4424, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4445, file: !4424, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4445, file: !4424, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4445, file: !4424, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4445, file: !4424, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4445, file: !4424, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4445, file: !4424, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4445, file: !4424, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4445, file: !4424, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4445, file: !4424, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4445, file: !4424, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4445, file: !4424, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4445, file: !4424, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4445, file: !4424, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4445, file: !4424, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4445, file: !4424, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4445, file: !4424, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4445, file: !4424, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4445, file: !4424, line: 450, baseType: !4628, size: 16, offset: 15792)
!4628 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4424, line: 206, baseType: !316)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4445, file: !4424, line: 451, baseType: !200, size: 32, offset: 15808)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4445, file: !4424, line: 453, baseType: !4631, size: 512, offset: 15840)
!4631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 512, elements: !1775)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4445, file: !4424, line: 454, baseType: !628, size: 64, offset: 16384)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4445, file: !4424, line: 455, baseType: !341, size: 64, offset: 16448)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4445, file: !4424, line: 456, baseType: !113, size: 32, offset: 16512)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4445, file: !4424, line: 457, baseType: !4636, size: 1088, offset: 16576)
!4636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 1088, elements: !4588)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4445, file: !4424, line: 458, baseType: !4636, size: 1088, offset: 17664)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4445, file: !4424, line: 469, baseType: !327, size: 64, offset: 18752)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4445, file: !4424, line: 471, baseType: !4640, size: 64, offset: 18816)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4424, line: 304, flags: DIFlagFwdDecl)
!4642 = !DIDerivedType(tag: DW_TAG_member, scope: !4445, file: !4424, line: 478, baseType: !4643, size: 64, offset: 18880)
!4643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4445, file: !4424, line: 478, size: 64, elements: !4644)
!4644 = !{!4645, !4648}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4643, file: !4424, line: 479, baseType: !4646, size: 64)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4424, line: 305, flags: DIFlagFwdDecl)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4643, file: !4424, line: 480, baseType: !4444, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4445, file: !4424, line: 482, baseType: !878, size: 16, offset: 18944)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4445, file: !4424, line: 483, baseType: !1361, size: 8, offset: 18960)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4445, file: !4424, line: 497, baseType: !878, size: 16, offset: 18976)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4445, file: !4424, line: 498, baseType: !2176, size: 64, offset: 19008)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4445, file: !4424, line: 499, baseType: !321, size: 64, offset: 19072)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4445, file: !4424, line: 500, baseType: !274, size: 64, offset: 19136)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4445, file: !4424, line: 502, baseType: !145, size: 64, offset: 19200)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4423, file: !4424, line: 863, baseType: !4657, size: 64, offset: 320)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{null, !4444}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4423, file: !4424, line: 864, baseType: !4661, size: 64, offset: 384)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!113, !4444, !3519}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4423, file: !4424, line: 865, baseType: !4665, size: 64, offset: 448)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!113, !4444}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4423, file: !4424, line: 866, baseType: !4657, size: 64, offset: 512)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4423, file: !4424, line: 867, baseType: !4670, size: 64, offset: 576)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!113, !4444, !113}
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4423, file: !4424, line: 868, baseType: !4674, size: 64, offset: 640)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4676)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4424, line: 795, size: 384, elements: !4677)
!4677 = !{!4678, !4683, !4687, !4688, !4689, !4690}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4676, file: !4424, line: 797, baseType: !4679, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4680, size: 64)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!4682, !4444, !4582}
!4682 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4424, line: 772, baseType: !7)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4676, file: !4424, line: 801, baseType: !4684, size: 64, offset: 64)
!4684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4685, size: 64)
!4685 = !DISubroutineType(types: !4686)
!4686 = !{!4682, !4444}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4676, file: !4424, line: 804, baseType: !4684, size: 64, offset: 128)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4676, file: !4424, line: 807, baseType: !4657, size: 64, offset: 192)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4676, file: !4424, line: 808, baseType: !4657, size: 64, offset: 256)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4676, file: !4424, line: 811, baseType: !4657, size: 64, offset: 320)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4423, file: !4424, line: 869, baseType: !327, size: 64, offset: 704)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4423, file: !4424, line: 870, baseType: !3477, size: 1152, offset: 768)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4423, file: !4424, line: 871, baseType: !4694, size: 128, offset: 1920)
!4694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4424, line: 759, size: 128, elements: !4695)
!4695 = !{!4696, !4697}
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4694, file: !4424, line: 760, baseType: !183)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4694, file: !4424, line: 761, baseType: !166, size: 128)
!4698 = !DIGlobalVariableExpression(var: !4699, expr: !DIExpression())
!4699 = distinct !DIGlobalVariable(name: "mxser_pcibrds", scope: !2, file: !3, line: 144, type: !4700, isLocal: true, isDefinition: true)
!4700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4430, size: 6912, elements: !4701)
!4701 = !{!4702}
!4702 = !DISubrange(count: 27)
!4703 = !DIGlobalVariableExpression(var: !4704, expr: !DIExpression())
!4704 = distinct !DIGlobalVariable(name: "mxser_cards", scope: !2, file: !3, line: 107, type: !4705, isLocal: true, isDefinition: true)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4223, size: 4096, elements: !2281)
!4706 = !DIGlobalVariableExpression(var: !4707, expr: !DIExpression())
!4707 = distinct !DIGlobalVariable(name: "Gpci_uart_info", scope: !2, file: !3, line: 94, type: !4708, isLocal: true, isDefinition: true)
!4708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4709, size: 960, elements: !275)
!4709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4710)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 85, size: 320, elements: !4711)
!4711 = !{!4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4710, file: !3, line: 86, baseType: !113, size: 32)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo", scope: !4710, file: !3, line: 87, baseType: !113, size: 32, offset: 32)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo", scope: !4710, file: !3, line: 88, baseType: !113, size: 32, offset: 64)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_fifo_size", scope: !4710, file: !3, line: 89, baseType: !113, size: 32, offset: 96)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "rx_high_water", scope: !4710, file: !3, line: 90, baseType: !113, size: 32, offset: 128)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "rx_trigger", scope: !4710, file: !3, line: 91, baseType: !113, size: 32, offset: 160)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "rx_low_water", scope: !4710, file: !3, line: 92, baseType: !113, size: 32, offset: 192)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "max_baud", scope: !4710, file: !3, line: 93, baseType: !309, size: 64, offset: 256)
!4720 = !DIGlobalVariableExpression(var: !4721, expr: !DIExpression())
!4721 = distinct !DIGlobalVariable(name: "mxser_port_ops", scope: !2, file: !3, line: 2333, type: !4168, isLocal: true, isDefinition: true)
!4722 = !DIGlobalVariableExpression(var: !4723, expr: !DIExpression())
!4723 = distinct !DIGlobalVariable(name: "mxser_set_baud_method", scope: !2, file: !3, line: 286, type: !4724, isLocal: true, isDefinition: true)
!4724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1056, elements: !4725)
!4725 = !{!4726}
!4726 = !DISubrange(count: 33)
!4727 = !DIGlobalVariableExpression(var: !4728, expr: !DIExpression())
!4728 = distinct !DIGlobalVariable(name: "mxvar_log", scope: !2, file: !3, line: 285, type: !4729, isLocal: true, isDefinition: true)
!4729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_log", file: !3, line: 187, size: 4160, elements: !4730)
!4730 = !{!4731, !4732, !4734}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "tick", scope: !4729, file: !3, line: 188, baseType: !113, size: 32)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "rxcnt", scope: !4729, file: !3, line: 189, baseType: !4733, size: 2048, offset: 64)
!4733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !145, size: 2048, elements: !2281)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "txcnt", scope: !4729, file: !3, line: 190, baseType: !4733, size: 2048, offset: 2112)
!4735 = !DIGlobalVariableExpression(var: !4736, expr: !DIExpression())
!4736 = distinct !DIGlobalVariable(name: "mxser_ops", scope: !2, file: !3, line: 2308, type: !3904, isLocal: true, isDefinition: true)
!4737 = !DIGlobalVariableExpression(var: !4738, expr: !DIExpression())
!4738 = distinct !DIGlobalVariable(name: "ModeMask", scope: !4739, file: !3, line: 1685, type: !4740, isLocal: true, isDefinition: true)
!4739 = distinct !DISubprogram(name: "mxser_ioctl", scope: !3, file: !3, line: 1671, type: !3948, scopeLine: 1673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 32, elements: !1175)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "_rs", scope: !4743, file: !3, line: 1503, type: !1744, isLocal: true, isDefinition: true)
!4743 = distinct !DISubprogram(name: "mxser_ioctl_special", scope: !3, file: !3, line: 1492, type: !4744, scopeLine: 1493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!113, !7, !112}
!4746 = !DIGlobalVariableExpression(var: !4747, expr: !DIExpression())
!4747 = distinct !DIGlobalVariable(name: "mxser_msr", scope: !4748, file: !3, line: 533, type: !4751, isLocal: true, isDefinition: true)
!4748 = distinct !DISubprogram(name: "mxser_get_msr", scope: !3, file: !3, line: 531, type: !4749, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!419, !113, !113, !113}
!4751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 264, elements: !4725)
!4752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 200, elements: !4753)
!4753 = !{!4754}
!4754 = !DISubrange(count: 25)
!4755 = !{!"rsp"}
!4756 = !{i32 7, !"Dwarf Version", i32 4}
!4757 = !{i32 2, !"Debug Info Version", i32 3}
!4758 = !{i32 1, !"wchar_size", i32 2}
!4759 = !{i32 1, !"Code Model", i32 2}
!4760 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4761 = distinct !DISubprogram(name: "mxser_module_exit", scope: !3, file: !3, line: 2790, type: !1940, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4762 = !DILocalVariable(name: "i", scope: !4761, file: !3, line: 2792, type: !7)
!4763 = !DILocation(line: 2792, column: 15, scope: !4761)
!4764 = !DILocation(line: 2794, column: 2, scope: !4761)
!4765 = !DILocation(line: 2796, column: 9, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 2796, column: 2)
!4767 = !DILocation(line: 2796, column: 7, scope: !4766)
!4768 = !DILocation(line: 2796, column: 14, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 2796, column: 2)
!4770 = !DILocation(line: 2796, column: 16, scope: !4769)
!4771 = !DILocation(line: 2796, column: 2, scope: !4766)
!4772 = !DILocation(line: 2797, column: 20, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 2797, column: 7)
!4774 = !DILocation(line: 2797, column: 7, scope: !4773)
!4775 = !DILocation(line: 2797, column: 23, scope: !4773)
!4776 = !DILocation(line: 2797, column: 28, scope: !4773)
!4777 = !DILocation(line: 2797, column: 7, scope: !4769)
!4778 = !DILocation(line: 2798, column: 37, scope: !4773)
!4779 = !DILocation(line: 2798, column: 24, scope: !4773)
!4780 = !DILocation(line: 2798, column: 4, scope: !4773)
!4781 = !DILocation(line: 2797, column: 31, scope: !4773)
!4782 = !DILocation(line: 2796, column: 33, scope: !4769)
!4783 = !DILocation(line: 2796, column: 2, scope: !4769)
!4784 = distinct !{!4784, !4771, !4785}
!4785 = !DILocation(line: 2798, column: 39, scope: !4766)
!4786 = !DILocation(line: 2799, column: 24, scope: !4761)
!4787 = !DILocation(line: 2799, column: 2, scope: !4761)
!4788 = !DILocation(line: 2800, column: 17, scope: !4761)
!4789 = !DILocation(line: 2800, column: 2, scope: !4761)
!4790 = !DILocation(line: 2802, column: 9, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 2802, column: 2)
!4792 = !DILocation(line: 2802, column: 7, scope: !4791)
!4793 = !DILocation(line: 2802, column: 14, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 2802, column: 2)
!4795 = !DILocation(line: 2802, column: 16, scope: !4794)
!4796 = !DILocation(line: 2802, column: 2, scope: !4791)
!4797 = !DILocation(line: 2803, column: 20, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 2803, column: 7)
!4799 = !DILocation(line: 2803, column: 7, scope: !4798)
!4800 = !DILocation(line: 2803, column: 23, scope: !4798)
!4801 = !DILocation(line: 2803, column: 28, scope: !4798)
!4802 = !DILocation(line: 2803, column: 7, scope: !4794)
!4803 = !DILocation(line: 2804, column: 40, scope: !4798)
!4804 = !DILocation(line: 2804, column: 27, scope: !4798)
!4805 = !DILocation(line: 2804, column: 4, scope: !4798)
!4806 = !DILocation(line: 2803, column: 31, scope: !4798)
!4807 = !DILocation(line: 2802, column: 33, scope: !4794)
!4808 = !DILocation(line: 2802, column: 2, scope: !4794)
!4809 = distinct !{!4809, !4796, !4810}
!4810 = !DILocation(line: 2804, column: 42, scope: !4791)
!4811 = !DILocation(line: 2805, column: 1, scope: !4761)
!4812 = distinct !DISubprogram(name: "mxser_board_remove", scope: !3, file: !3, line: 2426, type: !4813, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{null, !4216}
!4815 = !DILocalVariable(name: "brd", arg: 1, scope: !4812, file: !3, line: 2426, type: !4216)
!4816 = !DILocation(line: 2426, column: 52, scope: !4812)
!4817 = !DILocalVariable(name: "i", scope: !4812, file: !3, line: 2428, type: !7)
!4818 = !DILocation(line: 2428, column: 15, scope: !4812)
!4819 = !DILocation(line: 2430, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 2430, column: 2)
!4821 = !DILocation(line: 2430, column: 7, scope: !4820)
!4822 = !DILocation(line: 2430, column: 14, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 2430, column: 2)
!4824 = !DILocation(line: 2430, column: 18, scope: !4823)
!4825 = !DILocation(line: 2430, column: 23, scope: !4823)
!4826 = !DILocation(line: 2430, column: 29, scope: !4823)
!4827 = !DILocation(line: 2430, column: 16, scope: !4823)
!4828 = !DILocation(line: 2430, column: 2, scope: !4820)
!4829 = !DILocation(line: 2431, column: 25, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 2430, column: 42)
!4831 = !DILocation(line: 2431, column: 40, scope: !4830)
!4832 = !DILocation(line: 2431, column: 45, scope: !4830)
!4833 = !DILocation(line: 2431, column: 51, scope: !4830)
!4834 = !DILocation(line: 2431, column: 49, scope: !4830)
!4835 = !DILocation(line: 2431, column: 3, scope: !4830)
!4836 = !DILocation(line: 2432, column: 21, scope: !4830)
!4837 = !DILocation(line: 2432, column: 26, scope: !4830)
!4838 = !DILocation(line: 2432, column: 32, scope: !4830)
!4839 = !DILocation(line: 2432, column: 35, scope: !4830)
!4840 = !DILocation(line: 2432, column: 3, scope: !4830)
!4841 = !DILocation(line: 2433, column: 2, scope: !4830)
!4842 = !DILocation(line: 2430, column: 38, scope: !4823)
!4843 = !DILocation(line: 2430, column: 2, scope: !4823)
!4844 = distinct !{!4844, !4828, !4845}
!4845 = !DILocation(line: 2433, column: 2, scope: !4820)
!4846 = !DILocation(line: 2434, column: 11, scope: !4812)
!4847 = !DILocation(line: 2434, column: 16, scope: !4812)
!4848 = !DILocation(line: 2434, column: 21, scope: !4812)
!4849 = !DILocation(line: 2434, column: 2, scope: !4812)
!4850 = !DILocation(line: 2435, column: 1, scope: !4812)
!4851 = distinct !DISubprogram(name: "mxser_release_ISA_res", scope: !3, file: !3, line: 2369, type: !4813, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4852 = !DILocalVariable(name: "brd", arg: 1, scope: !4851, file: !3, line: 2369, type: !4216)
!4853 = !DILocation(line: 2369, column: 55, scope: !4851)
!4854 = !DILocation(line: 2371, column: 2, scope: !4851)
!4855 = !DILocation(line: 2372, column: 23, scope: !4851)
!4856 = !DILocation(line: 2372, column: 2, scope: !4851)
!4857 = !DILocation(line: 2373, column: 1, scope: !4851)
!4858 = distinct !DISubprogram(name: "mxser_module_init", scope: !3, file: !3, line: 2697, type: !4859, scopeLine: 2698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{!113}
!4861 = !DILocalVariable(name: "brd", scope: !4858, file: !3, line: 2699, type: !4216)
!4862 = !DILocation(line: 2699, column: 22, scope: !4858)
!4863 = !DILocalVariable(name: "tty_dev", scope: !4858, file: !3, line: 2700, type: !228)
!4864 = !DILocation(line: 2700, column: 17, scope: !4858)
!4865 = !DILocalVariable(name: "b", scope: !4858, file: !3, line: 2701, type: !7)
!4866 = !DILocation(line: 2701, column: 15, scope: !4858)
!4867 = !DILocalVariable(name: "i", scope: !4858, file: !3, line: 2701, type: !7)
!4868 = !DILocation(line: 2701, column: 18, scope: !4858)
!4869 = !DILocalVariable(name: "m", scope: !4858, file: !3, line: 2701, type: !7)
!4870 = !DILocation(line: 2701, column: 21, scope: !4858)
!4871 = !DILocalVariable(name: "retval", scope: !4858, file: !3, line: 2702, type: !113)
!4872 = !DILocation(line: 2702, column: 6, scope: !4858)
!4873 = !DILocation(line: 2704, column: 18, scope: !4858)
!4874 = !DILocation(line: 2704, column: 16, scope: !4858)
!4875 = !DILocation(line: 2705, column: 7, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2705, column: 6)
!4877 = !DILocation(line: 2705, column: 6, scope: !4858)
!4878 = !DILocation(line: 2706, column: 3, scope: !4876)
!4879 = !DILocation(line: 2708, column: 2, scope: !4858)
!4880 = !DILocation(line: 2712, column: 2, scope: !4858)
!4881 = !DILocation(line: 2712, column: 17, scope: !4858)
!4882 = !DILocation(line: 2712, column: 22, scope: !4858)
!4883 = !DILocation(line: 2713, column: 25, scope: !4858)
!4884 = !DILocation(line: 2713, column: 2, scope: !4858)
!4885 = !DILocation(line: 2713, column: 17, scope: !4858)
!4886 = !DILocation(line: 2713, column: 23, scope: !4858)
!4887 = !DILocation(line: 2714, column: 2, scope: !4858)
!4888 = !DILocation(line: 2714, column: 17, scope: !4858)
!4889 = !DILocation(line: 2714, column: 29, scope: !4858)
!4890 = !DILocation(line: 2715, column: 2, scope: !4858)
!4891 = !DILocation(line: 2715, column: 17, scope: !4858)
!4892 = !DILocation(line: 2715, column: 22, scope: !4858)
!4893 = !DILocation(line: 2716, column: 2, scope: !4858)
!4894 = !DILocation(line: 2716, column: 17, scope: !4858)
!4895 = !DILocation(line: 2716, column: 25, scope: !4858)
!4896 = !DILocation(line: 2717, column: 2, scope: !4858)
!4897 = !DILocation(line: 2717, column: 17, scope: !4858)
!4898 = !DILocation(line: 2717, column: 32, scope: !4858)
!4899 = !DILocation(line: 2718, column: 2, scope: !4858)
!4900 = !DILocation(line: 2718, column: 17, scope: !4858)
!4901 = !DILocation(line: 2718, column: 30, scope: !4858)
!4902 = !DILocation(line: 2718, column: 38, scope: !4858)
!4903 = !DILocation(line: 2719, column: 2, scope: !4858)
!4904 = !DILocation(line: 2719, column: 17, scope: !4858)
!4905 = !DILocation(line: 2719, column: 23, scope: !4858)
!4906 = !DILocation(line: 2720, column: 21, scope: !4858)
!4907 = !DILocation(line: 2720, column: 2, scope: !4858)
!4908 = !DILocation(line: 2722, column: 31, scope: !4858)
!4909 = !DILocation(line: 2722, column: 11, scope: !4858)
!4910 = !DILocation(line: 2722, column: 9, scope: !4858)
!4911 = !DILocation(line: 2723, column: 6, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2723, column: 6)
!4913 = !DILocation(line: 2723, column: 6, scope: !4858)
!4914 = !DILocation(line: 2724, column: 3, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !3, line: 2723, column: 14)
!4916 = !DILocation(line: 2726, column: 3, scope: !4915)
!4917 = !DILocation(line: 2730, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2730, column: 2)
!4919 = !DILocation(line: 2730, column: 16, scope: !4918)
!4920 = !DILocation(line: 2730, column: 7, scope: !4918)
!4921 = !DILocation(line: 2730, column: 21, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2730, column: 2)
!4923 = !DILocation(line: 2730, column: 23, scope: !4922)
!4924 = !DILocation(line: 2730, column: 2, scope: !4918)
!4925 = !DILocation(line: 2731, column: 15, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2731, column: 7)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 2730, column: 44)
!4928 = !DILocation(line: 2731, column: 8, scope: !4926)
!4929 = !DILocation(line: 2731, column: 7, scope: !4927)
!4930 = !DILocation(line: 2732, column: 4, scope: !4926)
!4931 = !DILocation(line: 2734, column: 23, scope: !4927)
!4932 = !DILocation(line: 2734, column: 10, scope: !4927)
!4933 = !DILocation(line: 2734, column: 7, scope: !4927)
!4934 = !DILocation(line: 2735, column: 38, scope: !4927)
!4935 = !DILocation(line: 2735, column: 31, scope: !4927)
!4936 = !DILocation(line: 2735, column: 42, scope: !4927)
!4937 = !DILocation(line: 2735, column: 12, scope: !4927)
!4938 = !DILocation(line: 2735, column: 10, scope: !4927)
!4939 = !DILocation(line: 2736, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2736, column: 7)
!4941 = !DILocation(line: 2736, column: 14, scope: !4940)
!4942 = !DILocation(line: 2736, column: 7, scope: !4927)
!4943 = !DILocation(line: 2737, column: 4, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2736, column: 20)
!4945 = !DILocation(line: 2737, column: 9, scope: !4944)
!4946 = !DILocation(line: 2737, column: 14, scope: !4944)
!4947 = !DILocation(line: 2738, column: 4, scope: !4944)
!4948 = !DILocation(line: 2742, column: 5, scope: !4927)
!4949 = !DILocation(line: 2742, column: 10, scope: !4927)
!4950 = !DILocation(line: 2742, column: 16, scope: !4927)
!4951 = !DILocation(line: 2742, column: 29, scope: !4927)
!4952 = !DILocation(line: 2742, column: 22, scope: !4927)
!4953 = !DILocation(line: 2741, column: 3, scope: !4927)
!4954 = !DILocation(line: 2745, column: 21, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2745, column: 7)
!4956 = !DILocation(line: 2745, column: 7, scope: !4955)
!4957 = !DILocation(line: 2745, column: 26, scope: !4955)
!4958 = !DILocation(line: 2745, column: 7, scope: !4927)
!4959 = !DILocation(line: 2746, column: 26, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2745, column: 31)
!4961 = !DILocation(line: 2746, column: 4, scope: !4960)
!4962 = !DILocation(line: 2747, column: 4, scope: !4960)
!4963 = !DILocation(line: 2747, column: 9, scope: !4960)
!4964 = !DILocation(line: 2747, column: 14, scope: !4960)
!4965 = !DILocation(line: 2748, column: 4, scope: !4960)
!4966 = !DILocation(line: 2751, column: 14, scope: !4927)
!4967 = !DILocation(line: 2751, column: 16, scope: !4927)
!4968 = !DILocation(line: 2751, column: 3, scope: !4927)
!4969 = !DILocation(line: 2751, column: 8, scope: !4927)
!4970 = !DILocation(line: 2751, column: 12, scope: !4927)
!4971 = !DILocation(line: 2752, column: 10, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2752, column: 3)
!4973 = !DILocation(line: 2752, column: 8, scope: !4972)
!4974 = !DILocation(line: 2752, column: 15, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 2752, column: 3)
!4976 = !DILocation(line: 2752, column: 19, scope: !4975)
!4977 = !DILocation(line: 2752, column: 24, scope: !4975)
!4978 = !DILocation(line: 2752, column: 30, scope: !4975)
!4979 = !DILocation(line: 2752, column: 17, scope: !4975)
!4980 = !DILocation(line: 2752, column: 3, scope: !4972)
!4981 = !DILocation(line: 2753, column: 40, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 2752, column: 43)
!4983 = !DILocation(line: 2753, column: 45, scope: !4982)
!4984 = !DILocation(line: 2753, column: 51, scope: !4982)
!4985 = !DILocation(line: 2753, column: 54, scope: !4982)
!4986 = !DILocation(line: 2754, column: 6, scope: !4982)
!4987 = !DILocation(line: 2754, column: 21, scope: !4982)
!4988 = !DILocation(line: 2754, column: 26, scope: !4982)
!4989 = !DILocation(line: 2754, column: 32, scope: !4982)
!4990 = !DILocation(line: 2754, column: 30, scope: !4982)
!4991 = !DILocation(line: 2753, column: 14, scope: !4982)
!4992 = !DILocation(line: 2753, column: 12, scope: !4982)
!4993 = !DILocation(line: 2755, column: 15, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 2755, column: 8)
!4995 = !DILocation(line: 2755, column: 8, scope: !4994)
!4996 = !DILocation(line: 2755, column: 8, scope: !4982)
!4997 = !DILocation(line: 2756, column: 5, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 2755, column: 25)
!4999 = !DILocation(line: 2756, column: 12, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 2756, column: 5)
!5001 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 2756, column: 5)
!5002 = !DILocation(line: 2756, column: 14, scope: !5000)
!5003 = !DILocation(line: 2756, column: 5, scope: !5001)
!5004 = !DILocation(line: 2757, column: 28, scope: !5000)
!5005 = !DILocation(line: 2758, column: 7, scope: !5000)
!5006 = !DILocation(line: 2758, column: 12, scope: !5000)
!5007 = !DILocation(line: 2758, column: 18, scope: !5000)
!5008 = !DILocation(line: 2758, column: 16, scope: !5000)
!5009 = !DILocation(line: 2758, column: 20, scope: !5000)
!5010 = !DILocation(line: 2757, column: 6, scope: !5000)
!5011 = !DILocation(line: 2756, column: 20, scope: !5000)
!5012 = !DILocation(line: 2756, column: 5, scope: !5000)
!5013 = distinct !{!5013, !5003, !5014}
!5014 = !DILocation(line: 2758, column: 23, scope: !5001)
!5015 = !DILocation(line: 2759, column: 12, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4998, file: !3, line: 2759, column: 5)
!5017 = !DILocation(line: 2759, column: 10, scope: !5016)
!5018 = !DILocation(line: 2759, column: 17, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5016, file: !3, line: 2759, column: 5)
!5020 = !DILocation(line: 2759, column: 21, scope: !5019)
!5021 = !DILocation(line: 2759, column: 26, scope: !5019)
!5022 = !DILocation(line: 2759, column: 32, scope: !5019)
!5023 = !DILocation(line: 2759, column: 19, scope: !5019)
!5024 = !DILocation(line: 2759, column: 5, scope: !5016)
!5025 = !DILocation(line: 2760, column: 24, scope: !5019)
!5026 = !DILocation(line: 2760, column: 29, scope: !5019)
!5027 = !DILocation(line: 2760, column: 35, scope: !5019)
!5028 = !DILocation(line: 2760, column: 38, scope: !5019)
!5029 = !DILocation(line: 2760, column: 6, scope: !5019)
!5030 = !DILocation(line: 2759, column: 41, scope: !5019)
!5031 = !DILocation(line: 2759, column: 5, scope: !5019)
!5032 = distinct !{!5032, !5024, !5033}
!5033 = !DILocation(line: 2760, column: 42, scope: !5016)
!5034 = !DILocation(line: 2761, column: 14, scope: !4998)
!5035 = !DILocation(line: 2761, column: 19, scope: !4998)
!5036 = !DILocation(line: 2761, column: 24, scope: !4998)
!5037 = !DILocation(line: 2761, column: 5, scope: !4998)
!5038 = !DILocation(line: 2762, column: 27, scope: !4998)
!5039 = !DILocation(line: 2762, column: 5, scope: !4998)
!5040 = !DILocation(line: 2763, column: 5, scope: !4998)
!5041 = !DILocation(line: 2763, column: 10, scope: !4998)
!5042 = !DILocation(line: 2763, column: 15, scope: !4998)
!5043 = !DILocation(line: 2764, column: 5, scope: !4998)
!5044 = !DILocation(line: 2766, column: 3, scope: !4982)
!5045 = !DILocation(line: 2752, column: 39, scope: !4975)
!5046 = !DILocation(line: 2752, column: 3, scope: !4975)
!5047 = distinct !{!5047, !4980, !5048}
!5048 = !DILocation(line: 2766, column: 3, scope: !4972)
!5049 = !DILocation(line: 2767, column: 7, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2767, column: 7)
!5051 = !DILocation(line: 2767, column: 12, scope: !5050)
!5052 = !DILocation(line: 2767, column: 17, scope: !5050)
!5053 = !DILocation(line: 2767, column: 7, scope: !4927)
!5054 = !DILocation(line: 2768, column: 4, scope: !5050)
!5055 = !DILocation(line: 2770, column: 4, scope: !4927)
!5056 = !DILocation(line: 2771, column: 2, scope: !4927)
!5057 = !DILocation(line: 2730, column: 40, scope: !4922)
!5058 = !DILocation(line: 2730, column: 2, scope: !4922)
!5059 = distinct !{!5059, !4924, !5060}
!5060 = !DILocation(line: 2771, column: 2, scope: !4918)
!5061 = !DILocation(line: 2773, column: 11, scope: !4858)
!5062 = !DILocation(line: 2773, column: 9, scope: !4858)
!5063 = !DILocation(line: 2774, column: 6, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2774, column: 6)
!5065 = !DILocation(line: 2774, column: 6, scope: !4858)
!5066 = !DILocation(line: 2775, column: 3, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 2774, column: 14)
!5068 = !DILocation(line: 2776, column: 8, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 2776, column: 7)
!5070 = !DILocation(line: 2776, column: 7, scope: !5067)
!5071 = !DILocation(line: 2777, column: 11, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 2776, column: 11)
!5073 = !DILocation(line: 2778, column: 4, scope: !5072)
!5074 = !DILocation(line: 2780, column: 2, scope: !5067)
!5075 = !DILocation(line: 2782, column: 2, scope: !4858)
!5076 = !DILabel(scope: !4858, name: "err_unr", file: !3, line: 2783)
!5077 = !DILocation(line: 2783, column: 1, scope: !4858)
!5078 = !DILocation(line: 2784, column: 24, scope: !4858)
!5079 = !DILocation(line: 2784, column: 2, scope: !4858)
!5080 = !DILabel(scope: !4858, name: "err_put", file: !3, line: 2785)
!5081 = !DILocation(line: 2785, column: 1, scope: !4858)
!5082 = !DILocation(line: 2786, column: 17, scope: !4858)
!5083 = !DILocation(line: 2786, column: 2, scope: !4858)
!5084 = !DILocation(line: 2787, column: 9, scope: !4858)
!5085 = !DILocation(line: 2787, column: 2, scope: !4858)
!5086 = !DILocation(line: 2788, column: 1, scope: !4858)
!5087 = distinct !DISubprogram(name: "mxser_probe", scope: !3, file: !3, line: 2552, type: !4442, scopeLine: 2554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5088 = !DILocalVariable(name: "pdev", arg: 1, scope: !5087, file: !3, line: 2552, type: !4444)
!5089 = !DILocation(line: 2552, column: 40, scope: !5087)
!5090 = !DILocalVariable(name: "ent", arg: 2, scope: !5087, file: !3, line: 2553, type: !4429)
!5091 = !DILocation(line: 2553, column: 31, scope: !5087)
!5092 = !DILocalVariable(name: "brd", scope: !5087, file: !3, line: 2556, type: !4216)
!5093 = !DILocation(line: 2556, column: 22, scope: !5087)
!5094 = !DILocalVariable(name: "i", scope: !5087, file: !3, line: 2557, type: !7)
!5095 = !DILocation(line: 2557, column: 15, scope: !5087)
!5096 = !DILocalVariable(name: "j", scope: !5087, file: !3, line: 2557, type: !7)
!5097 = !DILocation(line: 2557, column: 18, scope: !5087)
!5098 = !DILocalVariable(name: "ioaddress", scope: !5087, file: !3, line: 2558, type: !145)
!5099 = !DILocation(line: 2558, column: 16, scope: !5087)
!5100 = !DILocalVariable(name: "tty_dev", scope: !5087, file: !3, line: 2559, type: !228)
!5101 = !DILocation(line: 2559, column: 17, scope: !5087)
!5102 = !DILocalVariable(name: "retval", scope: !5087, file: !3, line: 2560, type: !113)
!5103 = !DILocation(line: 2560, column: 6, scope: !5087)
!5104 = !DILocation(line: 2562, column: 9, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2562, column: 2)
!5106 = !DILocation(line: 2562, column: 7, scope: !5105)
!5107 = !DILocation(line: 2562, column: 14, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 2562, column: 2)
!5109 = !DILocation(line: 2562, column: 16, scope: !5108)
!5110 = !DILocation(line: 2562, column: 2, scope: !5105)
!5111 = !DILocation(line: 2563, column: 20, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5108, file: !3, line: 2563, column: 7)
!5113 = !DILocation(line: 2563, column: 7, scope: !5112)
!5114 = !DILocation(line: 2563, column: 23, scope: !5112)
!5115 = !DILocation(line: 2563, column: 28, scope: !5112)
!5116 = !DILocation(line: 2563, column: 7, scope: !5108)
!5117 = !DILocation(line: 2564, column: 4, scope: !5112)
!5118 = !DILocation(line: 2563, column: 31, scope: !5112)
!5119 = !DILocation(line: 2562, column: 33, scope: !5108)
!5120 = !DILocation(line: 2562, column: 2, scope: !5108)
!5121 = distinct !{!5121, !5110, !5122}
!5122 = !DILocation(line: 2564, column: 4, scope: !5105)
!5123 = !DILocation(line: 2566, column: 6, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2566, column: 6)
!5125 = !DILocation(line: 2566, column: 8, scope: !5124)
!5126 = !DILocation(line: 2566, column: 6, scope: !5087)
!5127 = !DILocation(line: 2567, column: 3, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 2566, column: 25)
!5129 = !DILocation(line: 2569, column: 3, scope: !5128)
!5130 = !DILocation(line: 2572, column: 22, scope: !5087)
!5131 = !DILocation(line: 2572, column: 9, scope: !5087)
!5132 = !DILocation(line: 2572, column: 6, scope: !5087)
!5133 = !DILocation(line: 2573, column: 13, scope: !5087)
!5134 = !DILocation(line: 2573, column: 15, scope: !5087)
!5135 = !DILocation(line: 2573, column: 2, scope: !5087)
!5136 = !DILocation(line: 2573, column: 7, scope: !5087)
!5137 = !DILocation(line: 2573, column: 11, scope: !5087)
!5138 = !DILocation(line: 2574, column: 2, scope: !5087)
!5139 = !DILocation(line: 2578, column: 29, scope: !5087)
!5140 = !DILocation(line: 2578, column: 11, scope: !5087)
!5141 = !DILocation(line: 2578, column: 9, scope: !5087)
!5142 = !DILocation(line: 2579, column: 6, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2579, column: 6)
!5144 = !DILocation(line: 2579, column: 6, scope: !5087)
!5145 = !DILocation(line: 2580, column: 3, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5143, file: !3, line: 2579, column: 14)
!5147 = !DILocation(line: 2581, column: 3, scope: !5146)
!5148 = !DILocation(line: 2585, column: 14, scope: !5087)
!5149 = !DILocation(line: 2585, column: 12, scope: !5087)
!5150 = !DILocation(line: 2586, column: 30, scope: !5087)
!5151 = !DILocation(line: 2586, column: 11, scope: !5087)
!5152 = !DILocation(line: 2586, column: 9, scope: !5087)
!5153 = !DILocation(line: 2587, column: 6, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2587, column: 6)
!5155 = !DILocation(line: 2587, column: 6, scope: !5087)
!5156 = !DILocation(line: 2588, column: 3, scope: !5154)
!5157 = !DILocation(line: 2590, column: 27, scope: !5087)
!5158 = !DILocation(line: 2590, column: 32, scope: !5087)
!5159 = !DILocation(line: 2590, column: 15, scope: !5087)
!5160 = !DILocation(line: 2590, column: 2, scope: !5087)
!5161 = !DILocation(line: 2590, column: 7, scope: !5087)
!5162 = !DILocation(line: 2590, column: 12, scope: !5087)
!5163 = !DILocation(line: 2591, column: 9, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2591, column: 2)
!5165 = !DILocation(line: 2591, column: 7, scope: !5164)
!5166 = !DILocation(line: 2591, column: 14, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2591, column: 2)
!5168 = !DILocation(line: 2591, column: 18, scope: !5167)
!5169 = !DILocation(line: 2591, column: 23, scope: !5167)
!5170 = !DILocation(line: 2591, column: 29, scope: !5167)
!5171 = !DILocation(line: 2591, column: 16, scope: !5167)
!5172 = !DILocation(line: 2591, column: 2, scope: !5164)
!5173 = !DILocation(line: 2592, column: 26, scope: !5167)
!5174 = !DILocation(line: 2592, column: 42, scope: !5167)
!5175 = !DILocation(line: 2592, column: 40, scope: !5167)
!5176 = !DILocation(line: 2592, column: 38, scope: !5167)
!5177 = !DILocation(line: 2592, column: 36, scope: !5167)
!5178 = !DILocation(line: 2592, column: 3, scope: !5167)
!5179 = !DILocation(line: 2592, column: 8, scope: !5167)
!5180 = !DILocation(line: 2592, column: 14, scope: !5167)
!5181 = !DILocation(line: 2592, column: 17, scope: !5167)
!5182 = !DILocation(line: 2592, column: 24, scope: !5167)
!5183 = !DILocation(line: 2591, column: 38, scope: !5167)
!5184 = !DILocation(line: 2591, column: 2, scope: !5167)
!5185 = distinct !{!5185, !5172, !5186}
!5186 = !DILocation(line: 2592, column: 42, scope: !5164)
!5187 = !DILocation(line: 2595, column: 14, scope: !5087)
!5188 = !DILocation(line: 2595, column: 12, scope: !5087)
!5189 = !DILocation(line: 2596, column: 30, scope: !5087)
!5190 = !DILocation(line: 2596, column: 11, scope: !5087)
!5191 = !DILocation(line: 2596, column: 9, scope: !5087)
!5192 = !DILocation(line: 2597, column: 6, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2597, column: 6)
!5194 = !DILocation(line: 2597, column: 6, scope: !5087)
!5195 = !DILocation(line: 2598, column: 3, scope: !5193)
!5196 = !DILocation(line: 2599, column: 16, scope: !5087)
!5197 = !DILocation(line: 2599, column: 2, scope: !5087)
!5198 = !DILocation(line: 2599, column: 7, scope: !5087)
!5199 = !DILocation(line: 2599, column: 14, scope: !5087)
!5200 = !DILocation(line: 2602, column: 13, scope: !5087)
!5201 = !DILocation(line: 2602, column: 19, scope: !5087)
!5202 = !DILocation(line: 2602, column: 2, scope: !5087)
!5203 = !DILocation(line: 2602, column: 7, scope: !5087)
!5204 = !DILocation(line: 2602, column: 11, scope: !5087)
!5205 = !DILocation(line: 2604, column: 35, scope: !5087)
!5206 = !DILocation(line: 2604, column: 40, scope: !5087)
!5207 = !DILocation(line: 2604, column: 49, scope: !5087)
!5208 = !DILocation(line: 2604, column: 19, scope: !5087)
!5209 = !DILocation(line: 2604, column: 2, scope: !5087)
!5210 = !DILocation(line: 2604, column: 7, scope: !5087)
!5211 = !DILocation(line: 2604, column: 17, scope: !5087)
!5212 = !DILocation(line: 2605, column: 2, scope: !5087)
!5213 = !DILocation(line: 2605, column: 7, scope: !5087)
!5214 = !DILocation(line: 2605, column: 17, scope: !5087)
!5215 = !DILocation(line: 2606, column: 2, scope: !5087)
!5216 = !DILocation(line: 2606, column: 7, scope: !5087)
!5217 = !DILocation(line: 2606, column: 19, scope: !5087)
!5218 = !DILocation(line: 2608, column: 9, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2608, column: 2)
!5220 = !DILocation(line: 2608, column: 7, scope: !5219)
!5221 = !DILocation(line: 2608, column: 14, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 2608, column: 2)
!5223 = !DILocation(line: 2608, column: 18, scope: !5222)
!5224 = !DILocation(line: 2608, column: 23, scope: !5222)
!5225 = !DILocation(line: 2608, column: 29, scope: !5222)
!5226 = !DILocation(line: 2608, column: 16, scope: !5222)
!5227 = !DILocation(line: 2608, column: 2, scope: !5219)
!5228 = !DILocation(line: 2609, column: 10, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 2609, column: 3)
!5230 = distinct !DILexicalBlock(scope: !5222, file: !3, line: 2608, column: 42)
!5231 = !DILocation(line: 2609, column: 8, scope: !5229)
!5232 = !DILocation(line: 2609, column: 15, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 2609, column: 3)
!5234 = !DILocation(line: 2609, column: 17, scope: !5233)
!5235 = !DILocation(line: 2609, column: 3, scope: !5229)
!5236 = !DILocation(line: 2610, column: 23, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 2610, column: 8)
!5238 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2609, column: 39)
!5239 = !DILocation(line: 2610, column: 8, scope: !5237)
!5240 = !DILocation(line: 2610, column: 26, scope: !5237)
!5241 = !DILocation(line: 2610, column: 34, scope: !5237)
!5242 = !DILocation(line: 2610, column: 39, scope: !5237)
!5243 = !DILocation(line: 2610, column: 31, scope: !5237)
!5244 = !DILocation(line: 2610, column: 8, scope: !5238)
!5245 = !DILocation(line: 2612, column: 21, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 2610, column: 50)
!5247 = !DILocation(line: 2612, column: 6, scope: !5246)
!5248 = !DILocation(line: 2612, column: 24, scope: !5246)
!5249 = !DILocation(line: 2611, column: 5, scope: !5246)
!5250 = !DILocation(line: 2611, column: 10, scope: !5246)
!5251 = !DILocation(line: 2611, column: 16, scope: !5246)
!5252 = !DILocation(line: 2611, column: 19, scope: !5246)
!5253 = !DILocation(line: 2611, column: 28, scope: !5246)
!5254 = !DILocation(line: 2615, column: 9, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 2615, column: 9)
!5256 = !DILocation(line: 2615, column: 14, scope: !5255)
!5257 = !DILocation(line: 2615, column: 20, scope: !5255)
!5258 = !DILocation(line: 2615, column: 26, scope: !5255)
!5259 = !DILocation(line: 2615, column: 9, scope: !5246)
!5260 = !DILocation(line: 2616, column: 6, scope: !5255)
!5261 = !DILocation(line: 2616, column: 11, scope: !5255)
!5262 = !DILocation(line: 2616, column: 17, scope: !5255)
!5263 = !DILocation(line: 2616, column: 20, scope: !5255)
!5264 = !DILocation(line: 2616, column: 29, scope: !5255)
!5265 = !DILocation(line: 2617, column: 5, scope: !5246)
!5266 = !DILocation(line: 2619, column: 3, scope: !5238)
!5267 = !DILocation(line: 2609, column: 35, scope: !5233)
!5268 = !DILocation(line: 2609, column: 3, scope: !5233)
!5269 = distinct !{!5269, !5235, !5270}
!5270 = !DILocation(line: 2619, column: 3, scope: !5229)
!5271 = !DILocation(line: 2620, column: 2, scope: !5230)
!5272 = !DILocation(line: 2608, column: 38, scope: !5222)
!5273 = !DILocation(line: 2608, column: 2, scope: !5222)
!5274 = distinct !{!5274, !5227, !5275}
!5275 = !DILocation(line: 2620, column: 2, scope: !5219)
!5276 = !DILocation(line: 2622, column: 6, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2622, column: 6)
!5278 = !DILocation(line: 2622, column: 11, scope: !5277)
!5279 = !DILocation(line: 2622, column: 21, scope: !5277)
!5280 = !DILocation(line: 2622, column: 6, scope: !5087)
!5281 = !DILocation(line: 2623, column: 10, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 2623, column: 3)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 2622, column: 46)
!5284 = !DILocation(line: 2623, column: 8, scope: !5282)
!5285 = !DILocation(line: 2623, column: 15, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 2623, column: 3)
!5287 = !DILocation(line: 2623, column: 19, scope: !5286)
!5288 = !DILocation(line: 2623, column: 24, scope: !5286)
!5289 = !DILocation(line: 2623, column: 30, scope: !5286)
!5290 = !DILocation(line: 2623, column: 17, scope: !5286)
!5291 = !DILocation(line: 2623, column: 3, scope: !5282)
!5292 = !DILocation(line: 2624, column: 8, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 2624, column: 8)
!5294 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 2623, column: 43)
!5295 = !DILocation(line: 2624, column: 10, scope: !5293)
!5296 = !DILocation(line: 2624, column: 8, scope: !5294)
!5297 = !DILocation(line: 2625, column: 35, scope: !5293)
!5298 = !DILocation(line: 2625, column: 45, scope: !5293)
!5299 = !DILocation(line: 2625, column: 5, scope: !5293)
!5300 = !DILocation(line: 2625, column: 10, scope: !5293)
!5301 = !DILocation(line: 2625, column: 16, scope: !5293)
!5302 = !DILocation(line: 2625, column: 19, scope: !5293)
!5303 = !DILocation(line: 2625, column: 33, scope: !5293)
!5304 = !DILocation(line: 2627, column: 35, scope: !5293)
!5305 = !DILocation(line: 2627, column: 45, scope: !5293)
!5306 = !DILocation(line: 2627, column: 5, scope: !5293)
!5307 = !DILocation(line: 2627, column: 10, scope: !5293)
!5308 = !DILocation(line: 2627, column: 16, scope: !5293)
!5309 = !DILocation(line: 2627, column: 19, scope: !5293)
!5310 = !DILocation(line: 2627, column: 33, scope: !5293)
!5311 = !DILocation(line: 2628, column: 3, scope: !5294)
!5312 = !DILocation(line: 2623, column: 39, scope: !5286)
!5313 = !DILocation(line: 2623, column: 3, scope: !5286)
!5314 = distinct !{!5314, !5291, !5315}
!5315 = !DILocation(line: 2628, column: 3, scope: !5282)
!5316 = !DILocation(line: 2629, column: 11, scope: !5283)
!5317 = !DILocation(line: 2629, column: 21, scope: !5283)
!5318 = !DILocation(line: 2629, column: 3, scope: !5283)
!5319 = !DILocation(line: 2630, column: 11, scope: !5283)
!5320 = !DILocation(line: 2630, column: 21, scope: !5283)
!5321 = !DILocation(line: 2630, column: 3, scope: !5283)
!5322 = !DILocation(line: 2631, column: 2, scope: !5283)
!5323 = !DILocation(line: 2633, column: 9, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2633, column: 2)
!5325 = !DILocation(line: 2633, column: 7, scope: !5324)
!5326 = !DILocation(line: 2633, column: 14, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 2633, column: 2)
!5328 = !DILocation(line: 2633, column: 18, scope: !5327)
!5329 = !DILocation(line: 2633, column: 23, scope: !5327)
!5330 = !DILocation(line: 2633, column: 29, scope: !5327)
!5331 = !DILocation(line: 2633, column: 16, scope: !5327)
!5332 = !DILocation(line: 2633, column: 2, scope: !5324)
!5333 = !DILocation(line: 2634, column: 29, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 2633, column: 42)
!5335 = !DILocation(line: 2634, column: 26, scope: !5334)
!5336 = !DILocation(line: 2634, column: 23, scope: !5334)
!5337 = !DILocation(line: 2634, column: 3, scope: !5334)
!5338 = !DILocation(line: 2634, column: 8, scope: !5334)
!5339 = !DILocation(line: 2634, column: 20, scope: !5334)
!5340 = !DILocation(line: 2635, column: 3, scope: !5334)
!5341 = !DILocation(line: 2635, column: 8, scope: !5334)
!5342 = !DILocation(line: 2635, column: 14, scope: !5334)
!5343 = !DILocation(line: 2635, column: 17, scope: !5334)
!5344 = !DILocation(line: 2635, column: 27, scope: !5334)
!5345 = !DILocation(line: 2636, column: 2, scope: !5334)
!5346 = !DILocation(line: 2633, column: 38, scope: !5327)
!5347 = !DILocation(line: 2633, column: 2, scope: !5327)
!5348 = distinct !{!5348, !5332, !5349}
!5349 = !DILocation(line: 2636, column: 2, scope: !5324)
!5350 = !DILocation(line: 2639, column: 25, scope: !5087)
!5351 = !DILocation(line: 2639, column: 11, scope: !5087)
!5352 = !DILocation(line: 2639, column: 9, scope: !5087)
!5353 = !DILocation(line: 2640, column: 6, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2640, column: 6)
!5355 = !DILocation(line: 2640, column: 6, scope: !5087)
!5356 = !DILocation(line: 2641, column: 3, scope: !5354)
!5357 = !DILocation(line: 2643, column: 9, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2643, column: 2)
!5359 = !DILocation(line: 2643, column: 7, scope: !5358)
!5360 = !DILocation(line: 2643, column: 14, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 2643, column: 2)
!5362 = !DILocation(line: 2643, column: 18, scope: !5361)
!5363 = !DILocation(line: 2643, column: 23, scope: !5361)
!5364 = !DILocation(line: 2643, column: 29, scope: !5361)
!5365 = !DILocation(line: 2643, column: 16, scope: !5361)
!5366 = !DILocation(line: 2643, column: 2, scope: !5358)
!5367 = !DILocation(line: 2644, column: 39, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 2643, column: 42)
!5369 = !DILocation(line: 2644, column: 44, scope: !5368)
!5370 = !DILocation(line: 2644, column: 50, scope: !5368)
!5371 = !DILocation(line: 2644, column: 53, scope: !5368)
!5372 = !DILocation(line: 2645, column: 5, scope: !5368)
!5373 = !DILocation(line: 2645, column: 20, scope: !5368)
!5374 = !DILocation(line: 2645, column: 25, scope: !5368)
!5375 = !DILocation(line: 2645, column: 31, scope: !5368)
!5376 = !DILocation(line: 2645, column: 29, scope: !5368)
!5377 = !DILocation(line: 2645, column: 35, scope: !5368)
!5378 = !DILocation(line: 2645, column: 41, scope: !5368)
!5379 = !DILocation(line: 2644, column: 13, scope: !5368)
!5380 = !DILocation(line: 2644, column: 11, scope: !5368)
!5381 = !DILocation(line: 2646, column: 14, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 2646, column: 7)
!5383 = !DILocation(line: 2646, column: 7, scope: !5382)
!5384 = !DILocation(line: 2646, column: 7, scope: !5368)
!5385 = !DILocation(line: 2647, column: 21, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2646, column: 24)
!5387 = !DILocation(line: 2647, column: 13, scope: !5386)
!5388 = !DILocation(line: 2647, column: 11, scope: !5386)
!5389 = !DILocation(line: 2648, column: 4, scope: !5386)
!5390 = !DILocation(line: 2648, column: 11, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5392, file: !3, line: 2648, column: 4)
!5392 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 2648, column: 4)
!5393 = !DILocation(line: 2648, column: 13, scope: !5391)
!5394 = !DILocation(line: 2648, column: 4, scope: !5392)
!5395 = !DILocation(line: 2649, column: 27, scope: !5391)
!5396 = !DILocation(line: 2650, column: 6, scope: !5391)
!5397 = !DILocation(line: 2650, column: 11, scope: !5391)
!5398 = !DILocation(line: 2650, column: 17, scope: !5391)
!5399 = !DILocation(line: 2650, column: 15, scope: !5391)
!5400 = !DILocation(line: 2650, column: 19, scope: !5391)
!5401 = !DILocation(line: 2649, column: 5, scope: !5391)
!5402 = !DILocation(line: 2648, column: 19, scope: !5391)
!5403 = !DILocation(line: 2648, column: 4, scope: !5391)
!5404 = distinct !{!5404, !5394, !5405}
!5405 = !DILocation(line: 2650, column: 22, scope: !5392)
!5406 = !DILocation(line: 2651, column: 4, scope: !5386)
!5407 = !DILocation(line: 2653, column: 2, scope: !5368)
!5408 = !DILocation(line: 2643, column: 38, scope: !5361)
!5409 = !DILocation(line: 2643, column: 2, scope: !5361)
!5410 = distinct !{!5410, !5366, !5411}
!5411 = !DILocation(line: 2653, column: 2, scope: !5358)
!5412 = !DILocation(line: 2655, column: 18, scope: !5087)
!5413 = !DILocation(line: 2655, column: 24, scope: !5087)
!5414 = !DILocation(line: 2655, column: 2, scope: !5087)
!5415 = !DILocation(line: 2657, column: 2, scope: !5087)
!5416 = !DILabel(scope: !5087, name: "err_relbrd", file: !3, line: 2658)
!5417 = !DILocation(line: 2658, column: 1, scope: !5087)
!5418 = !DILocation(line: 2659, column: 9, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5087, file: !3, line: 2659, column: 2)
!5420 = !DILocation(line: 2659, column: 7, scope: !5419)
!5421 = !DILocation(line: 2659, column: 14, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 2659, column: 2)
!5423 = !DILocation(line: 2659, column: 18, scope: !5422)
!5424 = !DILocation(line: 2659, column: 23, scope: !5422)
!5425 = !DILocation(line: 2659, column: 29, scope: !5422)
!5426 = !DILocation(line: 2659, column: 16, scope: !5422)
!5427 = !DILocation(line: 2659, column: 2, scope: !5419)
!5428 = !DILocation(line: 2660, column: 21, scope: !5422)
!5429 = !DILocation(line: 2660, column: 26, scope: !5422)
!5430 = !DILocation(line: 2660, column: 32, scope: !5422)
!5431 = !DILocation(line: 2660, column: 35, scope: !5422)
!5432 = !DILocation(line: 2660, column: 3, scope: !5422)
!5433 = !DILocation(line: 2659, column: 38, scope: !5422)
!5434 = !DILocation(line: 2659, column: 2, scope: !5422)
!5435 = distinct !{!5435, !5427, !5436}
!5436 = !DILocation(line: 2660, column: 39, scope: !5419)
!5437 = !DILocation(line: 2661, column: 11, scope: !5087)
!5438 = !DILocation(line: 2661, column: 16, scope: !5087)
!5439 = !DILocation(line: 2661, column: 21, scope: !5087)
!5440 = !DILocation(line: 2661, column: 2, scope: !5087)
!5441 = !DILabel(scope: !5087, name: "err_rel3", file: !3, line: 2662)
!5442 = !DILocation(line: 2662, column: 1, scope: !5087)
!5443 = !DILocation(line: 2663, column: 21, scope: !5087)
!5444 = !DILocation(line: 2663, column: 2, scope: !5087)
!5445 = !DILabel(scope: !5087, name: "err_zero", file: !3, line: 2664)
!5446 = !DILocation(line: 2664, column: 1, scope: !5087)
!5447 = !DILocation(line: 2665, column: 2, scope: !5087)
!5448 = !DILocation(line: 2665, column: 7, scope: !5087)
!5449 = !DILocation(line: 2665, column: 12, scope: !5087)
!5450 = !DILocation(line: 2666, column: 21, scope: !5087)
!5451 = !DILocation(line: 2666, column: 2, scope: !5087)
!5452 = !DILabel(scope: !5087, name: "err_dis", file: !3, line: 2667)
!5453 = !DILocation(line: 2667, column: 1, scope: !5087)
!5454 = !DILocation(line: 2668, column: 21, scope: !5087)
!5455 = !DILocation(line: 2668, column: 2, scope: !5087)
!5456 = !DILabel(scope: !5087, name: "err", file: !3, line: 2669)
!5457 = !DILocation(line: 2669, column: 1, scope: !5087)
!5458 = !DILocation(line: 2670, column: 9, scope: !5087)
!5459 = !DILocation(line: 2670, column: 2, scope: !5087)
!5460 = !DILocation(line: 2674, column: 1, scope: !5087)
!5461 = distinct !DISubprogram(name: "mxser_remove", scope: !3, file: !3, line: 2676, type: !4658, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5462 = !DILocalVariable(name: "pdev", arg: 1, scope: !5461, file: !3, line: 2676, type: !4444)
!5463 = !DILocation(line: 2676, column: 42, scope: !5461)
!5464 = !DILocalVariable(name: "brd", scope: !5461, file: !3, line: 2679, type: !4216)
!5465 = !DILocation(line: 2679, column: 22, scope: !5461)
!5466 = !DILocation(line: 2679, column: 44, scope: !5461)
!5467 = !DILocation(line: 2679, column: 28, scope: !5461)
!5468 = !DILocation(line: 2681, column: 21, scope: !5461)
!5469 = !DILocation(line: 2681, column: 2, scope: !5461)
!5470 = !DILocation(line: 2683, column: 21, scope: !5461)
!5471 = !DILocation(line: 2683, column: 2, scope: !5461)
!5472 = !DILocation(line: 2684, column: 21, scope: !5461)
!5473 = !DILocation(line: 2684, column: 2, scope: !5461)
!5474 = !DILocation(line: 2685, column: 21, scope: !5461)
!5475 = !DILocation(line: 2685, column: 2, scope: !5461)
!5476 = !DILocation(line: 2686, column: 2, scope: !5461)
!5477 = !DILocation(line: 2686, column: 7, scope: !5461)
!5478 = !DILocation(line: 2686, column: 12, scope: !5461)
!5479 = !DILocation(line: 2688, column: 1, scope: !5461)
!5480 = distinct !DISubprogram(name: "CheckIsMoxaMust", scope: !3, file: !3, line: 487, type: !5481, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{!113, !145}
!5483 = !DILocalVariable(name: "io", arg: 1, scope: !5480, file: !3, line: 487, type: !145)
!5484 = !DILocation(line: 487, column: 42, scope: !5480)
!5485 = !DILocalVariable(name: "oldmcr", scope: !5480, file: !3, line: 489, type: !1361)
!5486 = !DILocation(line: 489, column: 5, scope: !5480)
!5487 = !DILocalVariable(name: "hwid", scope: !5480, file: !3, line: 489, type: !1361)
!5488 = !DILocation(line: 489, column: 13, scope: !5480)
!5489 = !DILocalVariable(name: "i", scope: !5480, file: !3, line: 490, type: !113)
!5490 = !DILocation(line: 490, column: 6, scope: !5480)
!5491 = !DILocation(line: 492, column: 10, scope: !5480)
!5492 = !DILocation(line: 492, column: 13, scope: !5480)
!5493 = !DILocation(line: 492, column: 2, scope: !5480)
!5494 = !DILocation(line: 493, column: 35, scope: !5480)
!5495 = !DILocation(line: 493, column: 2, scope: !5480)
!5496 = !DILocation(line: 494, column: 15, scope: !5480)
!5497 = !DILocation(line: 494, column: 18, scope: !5480)
!5498 = !DILocation(line: 494, column: 11, scope: !5480)
!5499 = !DILocation(line: 494, column: 9, scope: !5480)
!5500 = !DILocation(line: 495, column: 10, scope: !5480)
!5501 = !DILocation(line: 495, column: 13, scope: !5480)
!5502 = !DILocation(line: 495, column: 2, scope: !5480)
!5503 = !DILocation(line: 496, column: 28, scope: !5480)
!5504 = !DILocation(line: 496, column: 2, scope: !5480)
!5505 = !DILocation(line: 497, column: 18, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 497, column: 6)
!5507 = !DILocation(line: 497, column: 21, scope: !5506)
!5508 = !DILocation(line: 497, column: 14, scope: !5506)
!5509 = !DILocation(line: 497, column: 12, scope: !5506)
!5510 = !DILocation(line: 497, column: 6, scope: !5506)
!5511 = !DILocation(line: 497, column: 34, scope: !5506)
!5512 = !DILocation(line: 497, column: 6, scope: !5480)
!5513 = !DILocation(line: 498, column: 8, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 497, column: 40)
!5515 = !DILocation(line: 498, column: 16, scope: !5514)
!5516 = !DILocation(line: 498, column: 19, scope: !5514)
!5517 = !DILocation(line: 498, column: 3, scope: !5514)
!5518 = !DILocation(line: 499, column: 3, scope: !5514)
!5519 = !DILocation(line: 502, column: 29, scope: !5480)
!5520 = !DILocation(line: 502, column: 2, scope: !5480)
!5521 = !DILocation(line: 503, column: 9, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 503, column: 2)
!5523 = !DILocation(line: 503, column: 7, scope: !5522)
!5524 = !DILocation(line: 503, column: 14, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 503, column: 2)
!5526 = !DILocation(line: 503, column: 16, scope: !5525)
!5527 = !DILocation(line: 503, column: 2, scope: !5522)
!5528 = !DILocation(line: 504, column: 7, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5530, file: !3, line: 504, column: 7)
!5530 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 503, column: 38)
!5531 = !DILocation(line: 504, column: 30, scope: !5529)
!5532 = !DILocation(line: 504, column: 15, scope: !5529)
!5533 = !DILocation(line: 504, column: 33, scope: !5529)
!5534 = !DILocation(line: 504, column: 12, scope: !5529)
!5535 = !DILocation(line: 504, column: 7, scope: !5530)
!5536 = !DILocation(line: 505, column: 16, scope: !5529)
!5537 = !DILocation(line: 505, column: 11, scope: !5529)
!5538 = !DILocation(line: 505, column: 4, scope: !5529)
!5539 = !DILocation(line: 506, column: 2, scope: !5530)
!5540 = !DILocation(line: 503, column: 34, scope: !5525)
!5541 = !DILocation(line: 503, column: 2, scope: !5525)
!5542 = distinct !{!5542, !5527, !5543}
!5543 = !DILocation(line: 506, column: 2, scope: !5522)
!5544 = !DILocation(line: 507, column: 2, scope: !5480)
!5545 = !DILocation(line: 508, column: 1, scope: !5480)
!5546 = distinct !DISubprogram(name: "outb", scope: !5547, file: !5547, line: 334, type: !5548, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5547 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!5548 = !DISubroutineType(types: !5549)
!5549 = !{null, !419, !113}
!5550 = !DILocalVariable(name: "value", arg: 1, scope: !5546, file: !5547, line: 334, type: !419)
!5551 = !DILocation(line: 334, column: 1, scope: !5546)
!5552 = !DILocalVariable(name: "port", arg: 2, scope: !5546, file: !5547, line: 334, type: !113)
!5553 = !{i32 -2141877058}
!5554 = distinct !DISubprogram(name: "mxser_initbrd", scope: !3, file: !3, line: 2375, type: !5555, scopeLine: 2376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!113, !4216}
!5557 = !DILocalVariable(name: "lock", arg: 1, scope: !5558, file: !5559, line: 327, type: !1084)
!5558 = distinct !DISubprogram(name: "spinlock_check", scope: !5559, file: !5559, line: 327, type: !5560, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5559 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!5562, !1084}
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!5563 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !5564)
!5564 = distinct !DILocation(line: 2406, column: 3, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 2406, column: 3)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 2384, column: 42)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 2384, column: 2)
!5568 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 2384, column: 2)
!5569 = !DILocalVariable(name: "brd", arg: 1, scope: !5554, file: !3, line: 2375, type: !4216)
!5570 = !DILocation(line: 2375, column: 46, scope: !5554)
!5571 = !DILocalVariable(name: "info", scope: !5554, file: !3, line: 2377, type: !114)
!5572 = !DILocation(line: 2377, column: 21, scope: !5554)
!5573 = !DILocalVariable(name: "i", scope: !5554, file: !3, line: 2378, type: !7)
!5574 = !DILocation(line: 2378, column: 15, scope: !5554)
!5575 = !DILocalVariable(name: "retval", scope: !5554, file: !3, line: 2379, type: !113)
!5576 = !DILocation(line: 2379, column: 6, scope: !5554)
!5577 = !DILocation(line: 2382, column: 4, scope: !5554)
!5578 = !DILocation(line: 2382, column: 9, scope: !5554)
!5579 = !DILocation(line: 2382, column: 18, scope: !5554)
!5580 = !DILocation(line: 2381, column: 2, scope: !5554)
!5581 = !DILocation(line: 2384, column: 9, scope: !5568)
!5582 = !DILocation(line: 2384, column: 7, scope: !5568)
!5583 = !DILocation(line: 2384, column: 14, scope: !5567)
!5584 = !DILocation(line: 2384, column: 18, scope: !5567)
!5585 = !DILocation(line: 2384, column: 23, scope: !5567)
!5586 = !DILocation(line: 2384, column: 29, scope: !5567)
!5587 = !DILocation(line: 2384, column: 16, scope: !5567)
!5588 = !DILocation(line: 2384, column: 2, scope: !5568)
!5589 = !DILocation(line: 2385, column: 11, scope: !5566)
!5590 = !DILocation(line: 2385, column: 16, scope: !5566)
!5591 = !DILocation(line: 2385, column: 22, scope: !5566)
!5592 = !DILocation(line: 2385, column: 8, scope: !5566)
!5593 = !DILocation(line: 2386, column: 18, scope: !5566)
!5594 = !DILocation(line: 2386, column: 24, scope: !5566)
!5595 = !DILocation(line: 2386, column: 3, scope: !5566)
!5596 = !DILocation(line: 2387, column: 3, scope: !5566)
!5597 = !DILocation(line: 2387, column: 9, scope: !5566)
!5598 = !DILocation(line: 2387, column: 14, scope: !5566)
!5599 = !DILocation(line: 2387, column: 18, scope: !5566)
!5600 = !DILocation(line: 2388, column: 17, scope: !5566)
!5601 = !DILocation(line: 2388, column: 3, scope: !5566)
!5602 = !DILocation(line: 2388, column: 9, scope: !5566)
!5603 = !DILocation(line: 2388, column: 15, scope: !5566)
!5604 = !DILocation(line: 2389, column: 3, scope: !5566)
!5605 = !DILocation(line: 2389, column: 9, scope: !5566)
!5606 = !DILocation(line: 2389, column: 17, scope: !5566)
!5607 = !DILocation(line: 2390, column: 3, scope: !5566)
!5608 = !DILocation(line: 2390, column: 9, scope: !5566)
!5609 = !DILocation(line: 2390, column: 23, scope: !5566)
!5610 = !DILocation(line: 2393, column: 7, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 2393, column: 7)
!5612 = !DILocation(line: 2393, column: 12, scope: !5611)
!5613 = !DILocation(line: 2393, column: 22, scope: !5611)
!5614 = !DILocation(line: 2393, column: 7, scope: !5566)
!5615 = !DILocation(line: 2394, column: 36, scope: !5611)
!5616 = !DILocation(line: 2394, column: 42, scope: !5611)
!5617 = !DILocation(line: 2394, column: 4, scope: !5611)
!5618 = !DILocation(line: 2396, column: 16, scope: !5566)
!5619 = !DILocation(line: 2396, column: 21, scope: !5566)
!5620 = !DILocation(line: 2396, column: 3, scope: !5566)
!5621 = !DILocation(line: 2396, column: 9, scope: !5566)
!5622 = !DILocation(line: 2396, column: 14, scope: !5566)
!5623 = !DILocation(line: 2398, column: 21, scope: !5566)
!5624 = !DILocation(line: 2398, column: 3, scope: !5566)
!5625 = !DILocation(line: 2400, column: 26, scope: !5566)
!5626 = !DILocation(line: 2400, column: 32, scope: !5566)
!5627 = !DILocation(line: 2400, column: 42, scope: !5566)
!5628 = !DILocation(line: 2400, column: 3, scope: !5566)
!5629 = !DILocation(line: 2400, column: 9, scope: !5566)
!5630 = !DILocation(line: 2400, column: 24, scope: !5566)
!5631 = !DILocation(line: 2401, column: 3, scope: !5566)
!5632 = !DILocation(line: 2401, column: 9, scope: !5566)
!5633 = !DILocation(line: 2401, column: 14, scope: !5566)
!5634 = !DILocation(line: 2401, column: 26, scope: !5566)
!5635 = !DILocation(line: 2402, column: 3, scope: !5566)
!5636 = !DILocation(line: 2402, column: 9, scope: !5566)
!5637 = !DILocation(line: 2402, column: 14, scope: !5566)
!5638 = !DILocation(line: 2402, column: 27, scope: !5566)
!5639 = !DILocation(line: 2403, column: 3, scope: !5566)
!5640 = !DILocation(line: 2403, column: 9, scope: !5566)
!5641 = !DILocation(line: 2403, column: 26, scope: !5566)
!5642 = !DILocation(line: 2403, column: 41, scope: !5566)
!5643 = !DILocation(line: 2404, column: 11, scope: !5566)
!5644 = !DILocation(line: 2404, column: 17, scope: !5566)
!5645 = !DILocation(line: 2404, column: 3, scope: !5566)
!5646 = !DILocation(line: 2405, column: 3, scope: !5566)
!5647 = !DILocation(line: 2405, column: 9, scope: !5566)
!5648 = !DILocation(line: 2405, column: 20, scope: !5566)
!5649 = !DILocation(line: 2406, column: 3, scope: !5566)
!5650 = !DILocation(line: 2406, column: 3, scope: !5565)
!5651 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !5564)
!5652 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !5564)
!5653 = !DILocation(line: 2409, column: 12, scope: !5566)
!5654 = !DILocation(line: 2409, column: 18, scope: !5566)
!5655 = !DILocation(line: 2409, column: 25, scope: !5566)
!5656 = !DILocation(line: 2409, column: 8, scope: !5566)
!5657 = !DILocation(line: 2409, column: 37, scope: !5566)
!5658 = !DILocation(line: 2410, column: 4, scope: !5566)
!5659 = !DILocation(line: 2410, column: 10, scope: !5566)
!5660 = !DILocation(line: 2410, column: 17, scope: !5566)
!5661 = !DILocation(line: 2409, column: 3, scope: !5566)
!5662 = !DILocation(line: 2411, column: 2, scope: !5566)
!5663 = !DILocation(line: 2384, column: 38, scope: !5567)
!5664 = !DILocation(line: 2384, column: 2, scope: !5567)
!5665 = distinct !{!5665, !5588, !5666}
!5666 = !DILocation(line: 2411, column: 2, scope: !5568)
!5667 = !DILocation(line: 2413, column: 23, scope: !5554)
!5668 = !DILocation(line: 2413, column: 28, scope: !5554)
!5669 = !DILocation(line: 2414, column: 4, scope: !5554)
!5670 = !DILocation(line: 2413, column: 11, scope: !5554)
!5671 = !DILocation(line: 2413, column: 9, scope: !5554)
!5672 = !DILocation(line: 2415, column: 6, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 2415, column: 6)
!5674 = !DILocation(line: 2415, column: 6, scope: !5554)
!5675 = !DILocation(line: 2416, column: 10, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2416, column: 3)
!5677 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 2415, column: 14)
!5678 = !DILocation(line: 2416, column: 8, scope: !5676)
!5679 = !DILocation(line: 2416, column: 15, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 2416, column: 3)
!5681 = !DILocation(line: 2416, column: 19, scope: !5680)
!5682 = !DILocation(line: 2416, column: 24, scope: !5680)
!5683 = !DILocation(line: 2416, column: 30, scope: !5680)
!5684 = !DILocation(line: 2416, column: 17, scope: !5680)
!5685 = !DILocation(line: 2416, column: 3, scope: !5676)
!5686 = !DILocation(line: 2417, column: 22, scope: !5680)
!5687 = !DILocation(line: 2417, column: 27, scope: !5680)
!5688 = !DILocation(line: 2417, column: 33, scope: !5680)
!5689 = !DILocation(line: 2417, column: 36, scope: !5680)
!5690 = !DILocation(line: 2417, column: 4, scope: !5680)
!5691 = !DILocation(line: 2416, column: 39, scope: !5680)
!5692 = !DILocation(line: 2416, column: 3, scope: !5680)
!5693 = distinct !{!5693, !5685, !5694}
!5694 = !DILocation(line: 2417, column: 40, scope: !5676)
!5695 = !DILocation(line: 2420, column: 4, scope: !5677)
!5696 = !DILocation(line: 2420, column: 9, scope: !5677)
!5697 = !DILocation(line: 2420, column: 15, scope: !5677)
!5698 = !DILocation(line: 2420, column: 21, scope: !5677)
!5699 = !DILocation(line: 2420, column: 26, scope: !5677)
!5700 = !DILocation(line: 2418, column: 3, scope: !5677)
!5701 = !DILocation(line: 2421, column: 2, scope: !5677)
!5702 = !DILocation(line: 2423, column: 9, scope: !5554)
!5703 = !DILocation(line: 2423, column: 2, scope: !5554)
!5704 = distinct !DISubprogram(name: "IS_ERR", scope: !5705, file: !5705, line: 34, type: !5706, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5705 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!482, !2178}
!5708 = !DILocalVariable(name: "ptr", arg: 1, scope: !5704, file: !5705, line: 34, type: !2178)
!5709 = !DILocation(line: 34, column: 60, scope: !5704)
!5710 = !DILocation(line: 36, column: 9, scope: !5704)
!5711 = !DILocation(line: 36, column: 2, scope: !5704)
!5712 = distinct !DISubprogram(name: "PTR_ERR", scope: !5705, file: !5705, line: 29, type: !5713, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5713 = !DISubroutineType(types: !5714)
!5714 = !{!309, !2178}
!5715 = !DILocalVariable(name: "ptr", arg: 1, scope: !5712, file: !5705, line: 29, type: !2178)
!5716 = !DILocation(line: 29, column: 61, scope: !5712)
!5717 = !DILocation(line: 31, column: 16, scope: !5712)
!5718 = !DILocation(line: 31, column: 9, scope: !5712)
!5719 = !DILocation(line: 31, column: 2, scope: !5712)
!5720 = distinct !DISubprogram(name: "pci_set_drvdata", scope: !4424, file: !4424, line: 1870, type: !5721, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{null, !4444, !112}
!5723 = !DILocalVariable(name: "pdev", arg: 1, scope: !5720, file: !4424, line: 1870, type: !4444)
!5724 = !DILocation(line: 1870, column: 52, scope: !5720)
!5725 = !DILocalVariable(name: "data", arg: 2, scope: !5720, file: !4424, line: 1870, type: !112)
!5726 = !DILocation(line: 1870, column: 64, scope: !5720)
!5727 = !DILocation(line: 1872, column: 19, scope: !5720)
!5728 = !DILocation(line: 1872, column: 25, scope: !5720)
!5729 = !DILocation(line: 1872, column: 30, scope: !5720)
!5730 = !DILocation(line: 1872, column: 2, scope: !5720)
!5731 = !DILocation(line: 1873, column: 1, scope: !5720)
!5732 = distinct !DISubprogram(name: "mxser_disable_must_enchance_mode", scope: !3, file: !3, line: 304, type: !5733, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{null, !145}
!5735 = !DILocalVariable(name: "baseio", arg: 1, scope: !5732, file: !3, line: 304, type: !145)
!5736 = !DILocation(line: 304, column: 60, scope: !5732)
!5737 = !DILocalVariable(name: "oldlcr", scope: !5732, file: !3, line: 306, type: !1361)
!5738 = !DILocation(line: 306, column: 5, scope: !5732)
!5739 = !DILocalVariable(name: "efr", scope: !5732, file: !3, line: 307, type: !1361)
!5740 = !DILocation(line: 307, column: 5, scope: !5732)
!5741 = !DILocation(line: 309, column: 15, scope: !5732)
!5742 = !DILocation(line: 309, column: 22, scope: !5732)
!5743 = !DILocation(line: 309, column: 11, scope: !5732)
!5744 = !DILocation(line: 309, column: 9, scope: !5732)
!5745 = !DILocation(line: 310, column: 33, scope: !5732)
!5746 = !DILocation(line: 310, column: 40, scope: !5732)
!5747 = !DILocation(line: 310, column: 2, scope: !5732)
!5748 = !DILocation(line: 312, column: 12, scope: !5732)
!5749 = !DILocation(line: 312, column: 19, scope: !5732)
!5750 = !DILocation(line: 312, column: 8, scope: !5732)
!5751 = !DILocation(line: 312, column: 6, scope: !5732)
!5752 = !DILocation(line: 313, column: 6, scope: !5732)
!5753 = !DILocation(line: 315, column: 7, scope: !5732)
!5754 = !DILocation(line: 315, column: 12, scope: !5732)
!5755 = !DILocation(line: 315, column: 19, scope: !5732)
!5756 = !DILocation(line: 315, column: 2, scope: !5732)
!5757 = !DILocation(line: 316, column: 7, scope: !5732)
!5758 = !DILocation(line: 316, column: 15, scope: !5732)
!5759 = !DILocation(line: 316, column: 22, scope: !5732)
!5760 = !DILocation(line: 316, column: 2, scope: !5732)
!5761 = !DILocation(line: 317, column: 1, scope: !5732)
!5762 = distinct !DISubprogram(name: "inb", scope: !5547, file: !5547, line: 334, type: !5763, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5763 = !DISubroutineType(types: !5764)
!5764 = !{!419, !113}
!5765 = !DILocalVariable(name: "port", arg: 1, scope: !5762, file: !5547, line: 334, type: !113)
!5766 = !DILocation(line: 334, column: 1, scope: !5762)
!5767 = !DILocalVariable(name: "value", scope: !5762, file: !5547, line: 334, type: !419)
!5768 = !{i32 -2141876856}
!5769 = distinct !DISubprogram(name: "mxser_set_must_xon1_value", scope: !3, file: !3, line: 320, type: !5770, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5770 = !DISubroutineType(types: !5771)
!5771 = !{null, !145, !1361}
!5772 = !DILocalVariable(name: "baseio", arg: 1, scope: !5769, file: !3, line: 320, type: !145)
!5773 = !DILocation(line: 320, column: 53, scope: !5769)
!5774 = !DILocalVariable(name: "value", arg: 2, scope: !5769, file: !3, line: 320, type: !1361)
!5775 = !DILocation(line: 320, column: 64, scope: !5769)
!5776 = !DILocalVariable(name: "oldlcr", scope: !5769, file: !3, line: 322, type: !1361)
!5777 = !DILocation(line: 322, column: 5, scope: !5769)
!5778 = !DILocalVariable(name: "efr", scope: !5769, file: !3, line: 323, type: !1361)
!5779 = !DILocation(line: 323, column: 5, scope: !5769)
!5780 = !DILocation(line: 325, column: 15, scope: !5769)
!5781 = !DILocation(line: 325, column: 22, scope: !5769)
!5782 = !DILocation(line: 325, column: 11, scope: !5769)
!5783 = !DILocation(line: 325, column: 9, scope: !5769)
!5784 = !DILocation(line: 326, column: 33, scope: !5769)
!5785 = !DILocation(line: 326, column: 40, scope: !5769)
!5786 = !DILocation(line: 326, column: 2, scope: !5769)
!5787 = !DILocation(line: 328, column: 12, scope: !5769)
!5788 = !DILocation(line: 328, column: 19, scope: !5769)
!5789 = !DILocation(line: 328, column: 8, scope: !5769)
!5790 = !DILocation(line: 328, column: 6, scope: !5769)
!5791 = !DILocation(line: 329, column: 6, scope: !5769)
!5792 = !DILocation(line: 330, column: 6, scope: !5769)
!5793 = !DILocation(line: 332, column: 7, scope: !5769)
!5794 = !DILocation(line: 332, column: 12, scope: !5769)
!5795 = !DILocation(line: 332, column: 19, scope: !5769)
!5796 = !DILocation(line: 332, column: 2, scope: !5769)
!5797 = !DILocation(line: 333, column: 7, scope: !5769)
!5798 = !DILocation(line: 333, column: 14, scope: !5769)
!5799 = !DILocation(line: 333, column: 21, scope: !5769)
!5800 = !DILocation(line: 333, column: 2, scope: !5769)
!5801 = !DILocation(line: 334, column: 7, scope: !5769)
!5802 = !DILocation(line: 334, column: 15, scope: !5769)
!5803 = !DILocation(line: 334, column: 22, scope: !5769)
!5804 = !DILocation(line: 334, column: 2, scope: !5769)
!5805 = !DILocation(line: 335, column: 1, scope: !5769)
!5806 = distinct !DISubprogram(name: "mxser_get_must_hardware_id", scope: !3, file: !3, line: 391, type: !5807, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5807 = !DISubroutineType(types: !5808)
!5808 = !{null, !145, !5809}
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!5810 = !DILocalVariable(name: "baseio", arg: 1, scope: !5806, file: !3, line: 391, type: !145)
!5811 = !DILocation(line: 391, column: 54, scope: !5806)
!5812 = !DILocalVariable(name: "pId", arg: 2, scope: !5806, file: !3, line: 391, type: !5809)
!5813 = !DILocation(line: 391, column: 66, scope: !5806)
!5814 = !DILocalVariable(name: "oldlcr", scope: !5806, file: !3, line: 393, type: !1361)
!5815 = !DILocation(line: 393, column: 5, scope: !5806)
!5816 = !DILocalVariable(name: "efr", scope: !5806, file: !3, line: 394, type: !1361)
!5817 = !DILocation(line: 394, column: 5, scope: !5806)
!5818 = !DILocation(line: 396, column: 15, scope: !5806)
!5819 = !DILocation(line: 396, column: 22, scope: !5806)
!5820 = !DILocation(line: 396, column: 11, scope: !5806)
!5821 = !DILocation(line: 396, column: 9, scope: !5806)
!5822 = !DILocation(line: 397, column: 33, scope: !5806)
!5823 = !DILocation(line: 397, column: 40, scope: !5806)
!5824 = !DILocation(line: 397, column: 2, scope: !5806)
!5825 = !DILocation(line: 399, column: 12, scope: !5806)
!5826 = !DILocation(line: 399, column: 19, scope: !5806)
!5827 = !DILocation(line: 399, column: 8, scope: !5806)
!5828 = !DILocation(line: 399, column: 6, scope: !5806)
!5829 = !DILocation(line: 400, column: 6, scope: !5806)
!5830 = !DILocation(line: 401, column: 6, scope: !5806)
!5831 = !DILocation(line: 403, column: 7, scope: !5806)
!5832 = !DILocation(line: 403, column: 12, scope: !5806)
!5833 = !DILocation(line: 403, column: 19, scope: !5806)
!5834 = !DILocation(line: 403, column: 2, scope: !5806)
!5835 = !DILocation(line: 404, column: 13, scope: !5806)
!5836 = !DILocation(line: 404, column: 20, scope: !5806)
!5837 = !DILocation(line: 404, column: 9, scope: !5806)
!5838 = !DILocation(line: 404, column: 3, scope: !5806)
!5839 = !DILocation(line: 404, column: 7, scope: !5806)
!5840 = !DILocation(line: 405, column: 7, scope: !5806)
!5841 = !DILocation(line: 405, column: 15, scope: !5806)
!5842 = !DILocation(line: 405, column: 22, scope: !5806)
!5843 = !DILocation(line: 405, column: 2, scope: !5806)
!5844 = !DILocation(line: 406, column: 1, scope: !5806)
!5845 = distinct !DISubprogram(name: "mxser_enable_must_enchance_mode", scope: !3, file: !3, line: 288, type: !5733, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5846 = !DILocalVariable(name: "baseio", arg: 1, scope: !5845, file: !3, line: 288, type: !145)
!5847 = !DILocation(line: 288, column: 59, scope: !5845)
!5848 = !DILocalVariable(name: "oldlcr", scope: !5845, file: !3, line: 290, type: !1361)
!5849 = !DILocation(line: 290, column: 5, scope: !5845)
!5850 = !DILocalVariable(name: "efr", scope: !5845, file: !3, line: 291, type: !1361)
!5851 = !DILocation(line: 291, column: 5, scope: !5845)
!5852 = !DILocation(line: 293, column: 15, scope: !5845)
!5853 = !DILocation(line: 293, column: 22, scope: !5845)
!5854 = !DILocation(line: 293, column: 11, scope: !5845)
!5855 = !DILocation(line: 293, column: 9, scope: !5845)
!5856 = !DILocation(line: 294, column: 33, scope: !5845)
!5857 = !DILocation(line: 294, column: 40, scope: !5845)
!5858 = !DILocation(line: 294, column: 2, scope: !5845)
!5859 = !DILocation(line: 296, column: 12, scope: !5845)
!5860 = !DILocation(line: 296, column: 19, scope: !5845)
!5861 = !DILocation(line: 296, column: 8, scope: !5845)
!5862 = !DILocation(line: 296, column: 6, scope: !5845)
!5863 = !DILocation(line: 297, column: 6, scope: !5845)
!5864 = !DILocation(line: 299, column: 7, scope: !5845)
!5865 = !DILocation(line: 299, column: 12, scope: !5845)
!5866 = !DILocation(line: 299, column: 19, scope: !5845)
!5867 = !DILocation(line: 299, column: 2, scope: !5845)
!5868 = !DILocation(line: 300, column: 7, scope: !5845)
!5869 = !DILocation(line: 300, column: 15, scope: !5845)
!5870 = !DILocation(line: 300, column: 22, scope: !5845)
!5871 = !DILocation(line: 300, column: 2, scope: !5845)
!5872 = !DILocation(line: 301, column: 1, scope: !5845)
!5873 = distinct !DISubprogram(name: "process_txrx_fifo", scope: !3, file: !3, line: 511, type: !5874, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5874 = !DISubroutineType(types: !5875)
!5875 = !{null, !114}
!5876 = !DILocalVariable(name: "info", arg: 1, scope: !5873, file: !3, line: 511, type: !114)
!5877 = !DILocation(line: 511, column: 50, scope: !5873)
!5878 = !DILocalVariable(name: "i", scope: !5873, file: !3, line: 513, type: !113)
!5879 = !DILocation(line: 513, column: 6, scope: !5873)
!5880 = !DILocation(line: 515, column: 7, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 515, column: 6)
!5882 = !DILocation(line: 515, column: 13, scope: !5881)
!5883 = !DILocation(line: 515, column: 18, scope: !5881)
!5884 = !DILocation(line: 515, column: 33, scope: !5881)
!5885 = !DILocation(line: 515, column: 37, scope: !5881)
!5886 = !DILocation(line: 515, column: 43, scope: !5881)
!5887 = !DILocation(line: 515, column: 48, scope: !5881)
!5888 = !DILocation(line: 515, column: 6, scope: !5873)
!5889 = !DILocation(line: 516, column: 3, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 515, column: 63)
!5891 = !DILocation(line: 516, column: 9, scope: !5890)
!5892 = !DILocation(line: 516, column: 20, scope: !5890)
!5893 = !DILocation(line: 517, column: 3, scope: !5890)
!5894 = !DILocation(line: 517, column: 9, scope: !5890)
!5895 = !DILocation(line: 517, column: 23, scope: !5890)
!5896 = !DILocation(line: 518, column: 3, scope: !5890)
!5897 = !DILocation(line: 518, column: 9, scope: !5890)
!5898 = !DILocation(line: 518, column: 22, scope: !5890)
!5899 = !DILocation(line: 519, column: 3, scope: !5890)
!5900 = !DILocation(line: 519, column: 9, scope: !5890)
!5901 = !DILocation(line: 519, column: 24, scope: !5890)
!5902 = !DILocation(line: 520, column: 2, scope: !5890)
!5903 = !DILocation(line: 521, column: 10, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 521, column: 3)
!5905 = !DILocation(line: 521, column: 8, scope: !5904)
!5906 = !DILocation(line: 521, column: 15, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5904, file: !3, line: 521, column: 3)
!5908 = !DILocation(line: 521, column: 17, scope: !5907)
!5909 = !DILocation(line: 521, column: 3, scope: !5904)
!5910 = !DILocation(line: 522, column: 8, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 522, column: 8)
!5912 = !DILocation(line: 522, column: 14, scope: !5911)
!5913 = !DILocation(line: 522, column: 21, scope: !5911)
!5914 = !DILocation(line: 522, column: 49, scope: !5911)
!5915 = !DILocation(line: 522, column: 34, scope: !5911)
!5916 = !DILocation(line: 522, column: 52, scope: !5911)
!5917 = !DILocation(line: 522, column: 31, scope: !5911)
!5918 = !DILocation(line: 522, column: 8, scope: !5907)
!5919 = !DILocation(line: 523, column: 39, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 522, column: 58)
!5921 = !DILocation(line: 523, column: 24, scope: !5920)
!5922 = !DILocation(line: 523, column: 42, scope: !5920)
!5923 = !DILocation(line: 523, column: 5, scope: !5920)
!5924 = !DILocation(line: 523, column: 11, scope: !5920)
!5925 = !DILocation(line: 523, column: 22, scope: !5920)
!5926 = !DILocation(line: 524, column: 41, scope: !5920)
!5927 = !DILocation(line: 524, column: 26, scope: !5920)
!5928 = !DILocation(line: 524, column: 44, scope: !5920)
!5929 = !DILocation(line: 524, column: 5, scope: !5920)
!5930 = !DILocation(line: 524, column: 11, scope: !5920)
!5931 = !DILocation(line: 524, column: 24, scope: !5920)
!5932 = !DILocation(line: 525, column: 42, scope: !5920)
!5933 = !DILocation(line: 525, column: 27, scope: !5920)
!5934 = !DILocation(line: 525, column: 45, scope: !5920)
!5935 = !DILocation(line: 525, column: 5, scope: !5920)
!5936 = !DILocation(line: 525, column: 11, scope: !5920)
!5937 = !DILocation(line: 525, column: 25, scope: !5920)
!5938 = !DILocation(line: 526, column: 43, scope: !5920)
!5939 = !DILocation(line: 526, column: 28, scope: !5920)
!5940 = !DILocation(line: 526, column: 46, scope: !5920)
!5941 = !DILocation(line: 526, column: 5, scope: !5920)
!5942 = !DILocation(line: 526, column: 11, scope: !5920)
!5943 = !DILocation(line: 526, column: 26, scope: !5920)
!5944 = !DILocation(line: 527, column: 5, scope: !5920)
!5945 = !DILocation(line: 521, column: 35, scope: !5907)
!5946 = !DILocation(line: 521, column: 3, scope: !5907)
!5947 = distinct !{!5947, !5909, !5948}
!5948 = !DILocation(line: 528, column: 4, scope: !5904)
!5949 = !DILocation(line: 529, column: 1, scope: !5873)
!5950 = distinct !DISubprogram(name: "request_irq", scope: !3891, file: !3891, line: 157, type: !5951, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!113, !7, !5953, !145, !236, !112}
!5953 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !3891, line: 92, baseType: !5954)
!5954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5955, size: 64)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{!5957, !113, !112}
!5957 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !99, line: 17, baseType: !98)
!5958 = !DILocalVariable(name: "irq", arg: 1, scope: !5950, file: !3891, line: 157, type: !7)
!5959 = !DILocation(line: 157, column: 26, scope: !5950)
!5960 = !DILocalVariable(name: "handler", arg: 2, scope: !5950, file: !3891, line: 157, type: !5953)
!5961 = !DILocation(line: 157, column: 45, scope: !5950)
!5962 = !DILocalVariable(name: "flags", arg: 3, scope: !5950, file: !3891, line: 157, type: !145)
!5963 = !DILocation(line: 157, column: 68, scope: !5950)
!5964 = !DILocalVariable(name: "name", arg: 4, scope: !5950, file: !3891, line: 158, type: !236)
!5965 = !DILocation(line: 158, column: 18, scope: !5950)
!5966 = !DILocalVariable(name: "dev", arg: 5, scope: !5950, file: !3891, line: 158, type: !112)
!5967 = !DILocation(line: 158, column: 30, scope: !5950)
!5968 = !DILocation(line: 160, column: 30, scope: !5950)
!5969 = !DILocation(line: 160, column: 35, scope: !5950)
!5970 = !DILocation(line: 160, column: 50, scope: !5950)
!5971 = !DILocation(line: 160, column: 57, scope: !5950)
!5972 = !DILocation(line: 160, column: 63, scope: !5950)
!5973 = !DILocation(line: 160, column: 9, scope: !5950)
!5974 = !DILocation(line: 160, column: 2, scope: !5950)
!5975 = distinct !DISubprogram(name: "mxser_interrupt", scope: !3, file: !3, line: 2209, type: !5955, scopeLine: 2210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5976 = !DILocalVariable(name: "lock", arg: 1, scope: !5977, file: !5559, line: 392, type: !1084)
!5977 = distinct !DISubprogram(name: "spin_unlock", scope: !5559, file: !5559, line: 392, type: !5978, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{null, !1084}
!5980 = !DILocation(line: 392, column: 53, scope: !5977, inlinedAt: !5981)
!5981 = distinct !DILocation(line: 2300, column: 4, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 2236, column: 68)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 2236, column: 3)
!5984 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2236, column: 3)
!5985 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2230, column: 48)
!5986 = !DILocalVariable(name: "lock", arg: 1, scope: !5987, file: !5559, line: 352, type: !1084)
!5987 = distinct !DISubprogram(name: "spin_lock", scope: !5559, file: !5559, line: 352, type: !5978, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!5988 = !DILocation(line: 352, column: 51, scope: !5987, inlinedAt: !5989)
!5989 = distinct !DILocation(line: 2244, column: 4, scope: !5982)
!5990 = !DILocalVariable(name: "irq", arg: 1, scope: !5975, file: !3, line: 2209, type: !113)
!5991 = !DILocation(line: 2209, column: 40, scope: !5975)
!5992 = !DILocalVariable(name: "dev_id", arg: 2, scope: !5975, file: !3, line: 2209, type: !112)
!5993 = !DILocation(line: 2209, column: 51, scope: !5975)
!5994 = !DILocalVariable(name: "status", scope: !5975, file: !3, line: 2211, type: !113)
!5995 = !DILocation(line: 2211, column: 6, scope: !5975)
!5996 = !DILocalVariable(name: "iir", scope: !5975, file: !3, line: 2211, type: !113)
!5997 = !DILocation(line: 2211, column: 14, scope: !5975)
!5998 = !DILocalVariable(name: "i", scope: !5975, file: !3, line: 2211, type: !113)
!5999 = !DILocation(line: 2211, column: 19, scope: !5975)
!6000 = !DILocalVariable(name: "brd", scope: !5975, file: !3, line: 2212, type: !4216)
!6001 = !DILocation(line: 2212, column: 22, scope: !5975)
!6002 = !DILocalVariable(name: "port", scope: !5975, file: !3, line: 2213, type: !114)
!6003 = !DILocation(line: 2213, column: 21, scope: !5975)
!6004 = !DILocalVariable(name: "max", scope: !5975, file: !3, line: 2214, type: !113)
!6005 = !DILocation(line: 2214, column: 6, scope: !5975)
!6006 = !DILocalVariable(name: "irqbits", scope: !5975, file: !3, line: 2214, type: !113)
!6007 = !DILocation(line: 2214, column: 11, scope: !5975)
!6008 = !DILocalVariable(name: "bits", scope: !5975, file: !3, line: 2214, type: !113)
!6009 = !DILocation(line: 2214, column: 20, scope: !5975)
!6010 = !DILocalVariable(name: "msr", scope: !5975, file: !3, line: 2214, type: !113)
!6011 = !DILocation(line: 2214, column: 26, scope: !5975)
!6012 = !DILocalVariable(name: "int_cnt", scope: !5975, file: !3, line: 2215, type: !7)
!6013 = !DILocation(line: 2215, column: 15, scope: !5975)
!6014 = !DILocalVariable(name: "pass_counter", scope: !5975, file: !3, line: 2215, type: !7)
!6015 = !DILocation(line: 2215, column: 24, scope: !5975)
!6016 = !DILocalVariable(name: "handled", scope: !5975, file: !3, line: 2216, type: !113)
!6017 = !DILocation(line: 2216, column: 6, scope: !5975)
!6018 = !DILocalVariable(name: "tty", scope: !5975, file: !3, line: 2217, type: !213)
!6019 = !DILocation(line: 2217, column: 21, scope: !5975)
!6020 = !DILocation(line: 2219, column: 9, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2219, column: 2)
!6022 = !DILocation(line: 2219, column: 7, scope: !6021)
!6023 = !DILocation(line: 2219, column: 14, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !3, line: 2219, column: 2)
!6025 = !DILocation(line: 2219, column: 16, scope: !6024)
!6026 = !DILocation(line: 2219, column: 2, scope: !6021)
!6027 = !DILocation(line: 2220, column: 7, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 2220, column: 7)
!6029 = !DILocation(line: 2220, column: 31, scope: !6028)
!6030 = !DILocation(line: 2220, column: 18, scope: !6028)
!6031 = !DILocation(line: 2220, column: 17, scope: !6028)
!6032 = !DILocation(line: 2220, column: 14, scope: !6028)
!6033 = !DILocation(line: 2220, column: 7, scope: !6024)
!6034 = !DILocation(line: 2221, column: 10, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 2220, column: 35)
!6036 = !DILocation(line: 2221, column: 8, scope: !6035)
!6037 = !DILocation(line: 2222, column: 4, scope: !6035)
!6038 = !DILocation(line: 2220, column: 32, scope: !6028)
!6039 = !DILocation(line: 2219, column: 33, scope: !6024)
!6040 = !DILocation(line: 2219, column: 2, scope: !6024)
!6041 = distinct !{!6041, !6026, !6042}
!6042 = !DILocation(line: 2223, column: 3, scope: !6021)
!6043 = !DILocation(line: 2225, column: 6, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2225, column: 6)
!6045 = !DILocation(line: 2225, column: 8, scope: !6044)
!6046 = !DILocation(line: 2225, column: 6, scope: !5975)
!6047 = !DILocation(line: 2226, column: 3, scope: !6044)
!6048 = !DILocation(line: 2227, column: 6, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 2227, column: 6)
!6050 = !DILocation(line: 2227, column: 10, scope: !6049)
!6051 = !DILocation(line: 2227, column: 6, scope: !5975)
!6052 = !DILocation(line: 2228, column: 3, scope: !6049)
!6053 = !DILocation(line: 2229, column: 8, scope: !5975)
!6054 = !DILocation(line: 2229, column: 13, scope: !5975)
!6055 = !DILocation(line: 2229, column: 19, scope: !5975)
!6056 = !DILocation(line: 2229, column: 6, scope: !5975)
!6057 = !DILocation(line: 2230, column: 2, scope: !5975)
!6058 = !DILocation(line: 2230, column: 21, scope: !5975)
!6059 = !DILocation(line: 2230, column: 24, scope: !5975)
!6060 = !DILocation(line: 2231, column: 17, scope: !5985)
!6061 = !DILocation(line: 2231, column: 22, scope: !5985)
!6062 = !DILocation(line: 2231, column: 13, scope: !5985)
!6063 = !DILocation(line: 2231, column: 32, scope: !5985)
!6064 = !DILocation(line: 2231, column: 37, scope: !5985)
!6065 = !DILocation(line: 2231, column: 30, scope: !5985)
!6066 = !DILocation(line: 2231, column: 11, scope: !5985)
!6067 = !DILocation(line: 2232, column: 7, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2232, column: 7)
!6069 = !DILocation(line: 2232, column: 18, scope: !6068)
!6070 = !DILocation(line: 2232, column: 23, scope: !6068)
!6071 = !DILocation(line: 2232, column: 15, scope: !6068)
!6072 = !DILocation(line: 2232, column: 7, scope: !5985)
!6073 = !DILocation(line: 2233, column: 4, scope: !6068)
!6074 = !DILocation(line: 2235, column: 11, scope: !5985)
!6075 = !DILocation(line: 2236, column: 10, scope: !5984)
!6076 = !DILocation(line: 2236, column: 20, scope: !5984)
!6077 = !DILocation(line: 2236, column: 8, scope: !5984)
!6078 = !DILocation(line: 2236, column: 25, scope: !5983)
!6079 = !DILocation(line: 2236, column: 29, scope: !5983)
!6080 = !DILocation(line: 2236, column: 27, scope: !5983)
!6081 = !DILocation(line: 2236, column: 3, scope: !5984)
!6082 = !DILocation(line: 2237, column: 8, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 2237, column: 8)
!6084 = !DILocation(line: 2237, column: 19, scope: !6083)
!6085 = !DILocation(line: 2237, column: 24, scope: !6083)
!6086 = !DILocation(line: 2237, column: 16, scope: !6083)
!6087 = !DILocation(line: 2237, column: 8, scope: !5982)
!6088 = !DILocation(line: 2238, column: 5, scope: !6083)
!6089 = !DILocation(line: 2239, column: 8, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 2239, column: 8)
!6091 = !DILocation(line: 2239, column: 15, scope: !6090)
!6092 = !DILocation(line: 2239, column: 13, scope: !6090)
!6093 = !DILocation(line: 2239, column: 8, scope: !5982)
!6094 = !DILocation(line: 2240, column: 5, scope: !6090)
!6095 = !DILocation(line: 2241, column: 12, scope: !5982)
!6096 = !DILocation(line: 2241, column: 17, scope: !5982)
!6097 = !DILocation(line: 2241, column: 23, scope: !5982)
!6098 = !DILocation(line: 2241, column: 9, scope: !5982)
!6099 = !DILocation(line: 2243, column: 12, scope: !5982)
!6100 = !DILocation(line: 2244, column: 15, scope: !5982)
!6101 = !DILocation(line: 2244, column: 21, scope: !5982)
!6102 = !DILocation(line: 354, column: 2, scope: !6103, inlinedAt: !5989)
!6103 = distinct !DILexicalBlock(scope: !5987, file: !5559, line: 354, column: 2)
!6104 = !{i32 -2145410777}
!6105 = !DILocation(line: 354, column: 2, scope: !6106, inlinedAt: !5989)
!6106 = distinct !DILexicalBlock(scope: !6103, file: !5559, line: 354, column: 2)
!6107 = !DILocation(line: 2245, column: 4, scope: !5982)
!6108 = !DILocation(line: 2246, column: 15, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 2245, column: 7)
!6110 = !DILocation(line: 2246, column: 21, scope: !6109)
!6111 = !DILocation(line: 2246, column: 28, scope: !6109)
!6112 = !DILocation(line: 2246, column: 11, scope: !6109)
!6113 = !DILocation(line: 2246, column: 9, scope: !6109)
!6114 = !DILocation(line: 2247, column: 9, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2247, column: 9)
!6116 = !DILocation(line: 2247, column: 13, scope: !6115)
!6117 = !DILocation(line: 2247, column: 9, scope: !6109)
!6118 = !DILocation(line: 2248, column: 6, scope: !6115)
!6119 = !DILocation(line: 2249, column: 9, scope: !6109)
!6120 = !DILocation(line: 2250, column: 29, scope: !6109)
!6121 = !DILocation(line: 2250, column: 35, scope: !6109)
!6122 = !DILocation(line: 2250, column: 11, scope: !6109)
!6123 = !DILocation(line: 2250, column: 9, scope: !6109)
!6124 = !DILocation(line: 2251, column: 10, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2251, column: 9)
!6126 = !DILocation(line: 2251, column: 14, scope: !6125)
!6127 = !DILocation(line: 2251, column: 17, scope: !6125)
!6128 = !DILocation(line: 2251, column: 23, scope: !6125)
!6129 = !DILocation(line: 2251, column: 31, scope: !6125)
!6130 = !DILocation(line: 2252, column: 32, scope: !6125)
!6131 = !DILocation(line: 2252, column: 38, scope: !6125)
!6132 = !DILocation(line: 2252, column: 10, scope: !6125)
!6133 = !DILocation(line: 2251, column: 9, scope: !6109)
!6134 = !DILocation(line: 2253, column: 19, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 2252, column: 45)
!6136 = !DILocation(line: 2253, column: 25, scope: !6135)
!6137 = !DILocation(line: 2253, column: 32, scope: !6135)
!6138 = !DILocation(line: 2253, column: 15, scope: !6135)
!6139 = !DILocation(line: 2253, column: 13, scope: !6135)
!6140 = !DILocation(line: 2254, column: 17, scope: !6135)
!6141 = !DILocation(line: 2254, column: 23, scope: !6135)
!6142 = !DILocation(line: 2254, column: 30, scope: !6135)
!6143 = !DILocation(line: 2254, column: 6, scope: !6135)
!6144 = !DILocation(line: 2255, column: 10, scope: !6135)
!6145 = !DILocation(line: 2255, column: 16, scope: !6135)
!6146 = !DILocation(line: 2255, column: 23, scope: !6135)
!6147 = !DILocation(line: 2255, column: 6, scope: !6135)
!6148 = !DILocation(line: 2256, column: 19, scope: !6135)
!6149 = !DILocation(line: 2256, column: 6, scope: !6135)
!6150 = !DILocation(line: 2257, column: 6, scope: !6135)
!6151 = !DILocation(line: 2260, column: 18, scope: !6109)
!6152 = !DILocation(line: 2260, column: 24, scope: !6109)
!6153 = !DILocation(line: 2260, column: 31, scope: !6109)
!6154 = !DILocation(line: 2260, column: 14, scope: !6109)
!6155 = !DILocation(line: 2260, column: 12, scope: !6109)
!6156 = !DILocation(line: 2262, column: 9, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2262, column: 9)
!6158 = !DILocation(line: 2262, column: 16, scope: !6157)
!6159 = !DILocation(line: 2262, column: 9, scope: !6109)
!6160 = !DILocation(line: 2263, column: 6, scope: !6157)
!6161 = !DILocation(line: 2263, column: 12, scope: !6157)
!6162 = !DILocation(line: 2263, column: 23, scope: !6157)
!6163 = !DILocation(line: 2264, column: 9, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2264, column: 9)
!6165 = !DILocation(line: 2264, column: 16, scope: !6164)
!6166 = !DILocation(line: 2264, column: 9, scope: !6109)
!6167 = !DILocation(line: 2265, column: 6, scope: !6164)
!6168 = !DILocation(line: 2265, column: 12, scope: !6164)
!6169 = !DILocation(line: 2265, column: 23, scope: !6164)
!6170 = !DILocation(line: 2266, column: 9, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2266, column: 9)
!6172 = !DILocation(line: 2266, column: 16, scope: !6171)
!6173 = !DILocation(line: 2266, column: 9, scope: !6109)
!6174 = !DILocation(line: 2267, column: 6, scope: !6171)
!6175 = !DILocation(line: 2267, column: 12, scope: !6171)
!6176 = !DILocation(line: 2267, column: 23, scope: !6171)
!6177 = !DILocation(line: 2269, column: 9, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2269, column: 9)
!6179 = !DILocation(line: 2269, column: 16, scope: !6178)
!6180 = !DILocation(line: 2269, column: 9, scope: !6109)
!6181 = !DILocation(line: 2270, column: 6, scope: !6178)
!6182 = !DILocation(line: 2270, column: 12, scope: !6178)
!6183 = !DILocation(line: 2270, column: 23, scope: !6178)
!6184 = !DILocation(line: 2272, column: 9, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2272, column: 9)
!6186 = !DILocation(line: 2272, column: 15, scope: !6185)
!6187 = !DILocation(line: 2272, column: 22, scope: !6185)
!6188 = !DILocation(line: 2272, column: 9, scope: !6109)
!6189 = !DILocation(line: 2273, column: 10, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 2273, column: 10)
!6191 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 2272, column: 33)
!6192 = !DILocation(line: 2273, column: 14, scope: !6190)
!6193 = !DILocation(line: 2273, column: 35, scope: !6190)
!6194 = !DILocation(line: 2274, column: 10, scope: !6190)
!6195 = !DILocation(line: 2274, column: 14, scope: !6190)
!6196 = !DILocation(line: 2274, column: 35, scope: !6190)
!6197 = !DILocation(line: 2275, column: 10, scope: !6190)
!6198 = !DILocation(line: 2275, column: 14, scope: !6190)
!6199 = !DILocation(line: 2275, column: 35, scope: !6190)
!6200 = !DILocation(line: 2276, column: 10, scope: !6190)
!6201 = !DILocation(line: 2276, column: 14, scope: !6190)
!6202 = !DILocation(line: 2273, column: 10, scope: !6191)
!6203 = !DILocation(line: 2277, column: 27, scope: !6190)
!6204 = !DILocation(line: 2277, column: 32, scope: !6190)
!6205 = !DILocation(line: 2277, column: 7, scope: !6190)
!6206 = !DILocation(line: 2280, column: 5, scope: !6191)
!6207 = !DILocation(line: 2281, column: 16, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 2280, column: 12)
!6209 = !DILocation(line: 2281, column: 22, scope: !6208)
!6210 = !DILocation(line: 2281, column: 13, scope: !6208)
!6211 = !DILocation(line: 2282, column: 10, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 2282, column: 10)
!6213 = !DILocation(line: 2282, column: 17, scope: !6212)
!6214 = !DILocation(line: 2282, column: 10, scope: !6208)
!6215 = !DILocation(line: 2283, column: 27, scope: !6212)
!6216 = !DILocation(line: 2283, column: 32, scope: !6212)
!6217 = !DILocation(line: 2283, column: 7, scope: !6212)
!6218 = !DILocation(line: 2286, column: 15, scope: !6109)
!6219 = !DILocation(line: 2286, column: 21, scope: !6109)
!6220 = !DILocation(line: 2286, column: 28, scope: !6109)
!6221 = !DILocation(line: 2286, column: 11, scope: !6109)
!6222 = !DILocation(line: 2286, column: 9, scope: !6109)
!6223 = !DILocation(line: 2287, column: 9, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2287, column: 9)
!6225 = !DILocation(line: 2287, column: 13, scope: !6224)
!6226 = !DILocation(line: 2287, column: 9, scope: !6109)
!6227 = !DILocation(line: 2288, column: 31, scope: !6224)
!6228 = !DILocation(line: 2288, column: 36, scope: !6224)
!6229 = !DILocation(line: 2288, column: 42, scope: !6224)
!6230 = !DILocation(line: 2288, column: 6, scope: !6224)
!6231 = !DILocation(line: 2290, column: 9, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 2290, column: 9)
!6233 = !DILocation(line: 2290, column: 15, scope: !6232)
!6234 = !DILocation(line: 2290, column: 22, scope: !6232)
!6235 = !DILocation(line: 2290, column: 9, scope: !6109)
!6236 = !DILocation(line: 2291, column: 10, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 2291, column: 10)
!6238 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2290, column: 33)
!6239 = !DILocation(line: 2291, column: 14, scope: !6237)
!6240 = !DILocation(line: 2291, column: 22, scope: !6237)
!6241 = !DILocation(line: 2291, column: 26, scope: !6237)
!6242 = !DILocation(line: 2291, column: 33, scope: !6237)
!6243 = !DILocation(line: 2291, column: 10, scope: !6238)
!6244 = !DILocation(line: 2293, column: 28, scope: !6237)
!6245 = !DILocation(line: 2293, column: 33, scope: !6237)
!6246 = !DILocation(line: 2293, column: 7, scope: !6237)
!6247 = !DILocation(line: 2294, column: 5, scope: !6238)
!6248 = !DILocation(line: 2295, column: 10, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 2295, column: 10)
!6250 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 2294, column: 12)
!6251 = !DILocation(line: 2295, column: 17, scope: !6249)
!6252 = !DILocation(line: 2295, column: 10, scope: !6250)
!6253 = !DILocation(line: 2296, column: 28, scope: !6249)
!6254 = !DILocation(line: 2296, column: 33, scope: !6249)
!6255 = !DILocation(line: 2296, column: 7, scope: !6249)
!6256 = !DILocation(line: 2298, column: 18, scope: !6109)
!6257 = !DILocation(line: 2298, column: 5, scope: !6109)
!6258 = !DILocation(line: 2299, column: 4, scope: !6109)
!6259 = !DILocation(line: 2299, column: 20, scope: !5982)
!6260 = !DILocation(line: 2299, column: 23, scope: !5982)
!6261 = distinct !{!6261, !6107, !6262}
!6262 = !DILocation(line: 2299, column: 45, scope: !5982)
!6263 = !DILocation(line: 2300, column: 17, scope: !5982)
!6264 = !DILocation(line: 2300, column: 23, scope: !5982)
!6265 = !DILocation(line: 394, column: 2, scope: !6266, inlinedAt: !5981)
!6266 = distinct !DILexicalBlock(scope: !5977, file: !5559, line: 394, column: 2)
!6267 = !{i32 -2145408416}
!6268 = !DILocation(line: 394, column: 2, scope: !6269, inlinedAt: !5981)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !5559, line: 394, column: 2)
!6270 = !DILocation(line: 2301, column: 3, scope: !5982)
!6271 = !DILocation(line: 2236, column: 35, scope: !5983)
!6272 = !DILocation(line: 2236, column: 50, scope: !5983)
!6273 = !DILocation(line: 2236, column: 47, scope: !5983)
!6274 = !DILocation(line: 2236, column: 61, scope: !5983)
!6275 = !DILocation(line: 2236, column: 3, scope: !5983)
!6276 = distinct !{!6276, !6081, !6277}
!6277 = !DILocation(line: 2301, column: 3, scope: !5984)
!6278 = distinct !{!6278, !6057, !6279}
!6279 = !DILocation(line: 2302, column: 2, scope: !5975)
!6280 = !DILabel(scope: !5975, name: "irq_stop", file: !3, line: 2304)
!6281 = !DILocation(line: 2304, column: 1, scope: !5975)
!6282 = !DILocation(line: 2305, column: 9, scope: !5975)
!6283 = !DILocation(line: 2305, column: 2, scope: !5975)
!6284 = distinct !DISubprogram(name: "mxser_carrier_raised", scope: !3, file: !3, line: 547, type: !4173, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6285 = !DILocalVariable(name: "port", arg: 1, scope: !6284, file: !3, line: 547, type: !3897)
!6286 = !DILocation(line: 547, column: 50, scope: !6284)
!6287 = !DILocalVariable(name: "mp", scope: !6284, file: !3, line: 549, type: !114)
!6288 = !DILocation(line: 549, column: 21, scope: !6284)
!6289 = !DILocalVariable(name: "__mptr", scope: !6290, file: !3, line: 549, type: !112)
!6290 = distinct !DILexicalBlock(scope: !6284, file: !3, line: 549, column: 26)
!6291 = !DILocation(line: 549, column: 26, scope: !6290)
!6292 = !DILocation(line: 549, column: 26, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 549, column: 26)
!6294 = !DILocation(line: 550, column: 14, scope: !6284)
!6295 = !DILocation(line: 550, column: 18, scope: !6284)
!6296 = !DILocation(line: 550, column: 25, scope: !6284)
!6297 = !DILocation(line: 550, column: 10, scope: !6284)
!6298 = !DILocation(line: 550, column: 37, scope: !6284)
!6299 = !DILocation(line: 550, column: 9, scope: !6284)
!6300 = !DILocation(line: 550, column: 2, scope: !6284)
!6301 = distinct !DISubprogram(name: "mxser_dtr_rts", scope: !3, file: !3, line: 553, type: !4177, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6302 = !DILocalVariable(name: "lock", arg: 1, scope: !6303, file: !5559, line: 407, type: !1084)
!6303 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5559, file: !5559, line: 407, type: !6304, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6304 = !DISubroutineType(types: !6305)
!6305 = !{null, !1084, !145}
!6306 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !6307)
!6307 = distinct !DILocation(line: 565, column: 2, scope: !6301)
!6308 = !DILocalVariable(name: "flags", arg: 2, scope: !6303, file: !5559, line: 407, type: !145)
!6309 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !6307)
!6310 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !6311)
!6311 = distinct !DILocation(line: 558, column: 2, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 558, column: 2)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 558, column: 2)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 558, column: 2)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 558, column: 2)
!6316 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 558, column: 2)
!6317 = !DILocalVariable(name: "port", arg: 1, scope: !6301, file: !3, line: 553, type: !3897)
!6318 = !DILocation(line: 553, column: 44, scope: !6301)
!6319 = !DILocalVariable(name: "on", arg: 2, scope: !6301, file: !3, line: 553, type: !113)
!6320 = !DILocation(line: 553, column: 54, scope: !6301)
!6321 = !DILocalVariable(name: "mp", scope: !6301, file: !3, line: 555, type: !114)
!6322 = !DILocation(line: 555, column: 21, scope: !6301)
!6323 = !DILocalVariable(name: "__mptr", scope: !6324, file: !3, line: 555, type: !112)
!6324 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 555, column: 26)
!6325 = !DILocation(line: 555, column: 26, scope: !6324)
!6326 = !DILocation(line: 555, column: 26, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 555, column: 26)
!6328 = !DILocalVariable(name: "flags", scope: !6301, file: !3, line: 556, type: !145)
!6329 = !DILocation(line: 556, column: 16, scope: !6301)
!6330 = !DILocation(line: 558, column: 2, scope: !6301)
!6331 = !DILocation(line: 558, column: 2, scope: !6316)
!6332 = !DILocalVariable(name: "__dummy", scope: !6333, file: !3, line: 558, type: !145)
!6333 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 558, column: 2)
!6334 = !DILocation(line: 558, column: 2, scope: !6333)
!6335 = !DILocalVariable(name: "__dummy2", scope: !6333, file: !3, line: 558, type: !145)
!6336 = !DILocation(line: 558, column: 2, scope: !6315)
!6337 = !DILocation(line: 558, column: 2, scope: !6314)
!6338 = !DILocation(line: 558, column: 2, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 558, column: 2)
!6340 = !DILocalVariable(name: "__dummy", scope: !6341, file: !3, line: 558, type: !145)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !3, line: 558, column: 2)
!6342 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 558, column: 2)
!6343 = !DILocation(line: 558, column: 2, scope: !6341)
!6344 = !DILocalVariable(name: "__dummy2", scope: !6341, file: !3, line: 558, type: !145)
!6345 = !DILocation(line: 558, column: 2, scope: !6342)
!6346 = !DILocation(line: 558, column: 2, scope: !6313)
!6347 = !{i32 -2141484681}
!6348 = !DILocation(line: 558, column: 2, scope: !6312)
!6349 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !6311)
!6350 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !6311)
!6351 = !DILocation(line: 559, column: 6, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 559, column: 6)
!6353 = !DILocation(line: 559, column: 6, scope: !6301)
!6354 = !DILocation(line: 560, column: 12, scope: !6352)
!6355 = !DILocation(line: 560, column: 16, scope: !6352)
!6356 = !DILocation(line: 560, column: 23, scope: !6352)
!6357 = !DILocation(line: 560, column: 8, scope: !6352)
!6358 = !DILocation(line: 560, column: 35, scope: !6352)
!6359 = !DILocation(line: 561, column: 17, scope: !6352)
!6360 = !DILocation(line: 561, column: 33, scope: !6352)
!6361 = !DILocation(line: 561, column: 37, scope: !6352)
!6362 = !DILocation(line: 561, column: 44, scope: !6352)
!6363 = !DILocation(line: 560, column: 3, scope: !6352)
!6364 = !DILocation(line: 563, column: 12, scope: !6352)
!6365 = !DILocation(line: 563, column: 16, scope: !6352)
!6366 = !DILocation(line: 563, column: 23, scope: !6352)
!6367 = !DILocation(line: 563, column: 8, scope: !6352)
!6368 = !DILocation(line: 563, column: 34, scope: !6352)
!6369 = !DILocation(line: 564, column: 4, scope: !6352)
!6370 = !DILocation(line: 564, column: 8, scope: !6352)
!6371 = !DILocation(line: 564, column: 15, scope: !6352)
!6372 = !DILocation(line: 563, column: 3, scope: !6352)
!6373 = !DILocation(line: 565, column: 26, scope: !6301)
!6374 = !DILocation(line: 565, column: 30, scope: !6301)
!6375 = !DILocation(line: 565, column: 37, scope: !6301)
!6376 = !DILocalVariable(name: "__dummy", scope: !6377, file: !5559, line: 409, type: !145)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !5559, line: 409, column: 2)
!6378 = distinct !DILexicalBlock(scope: !6303, file: !5559, line: 409, column: 2)
!6379 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !6307)
!6380 = !DILocalVariable(name: "__dummy2", scope: !6377, file: !5559, line: 409, type: !145)
!6381 = !DILocalVariable(name: "__dummy", scope: !6382, file: !5559, line: 409, type: !145)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !5559, line: 409, column: 2)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !5559, line: 409, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !5559, line: 409, column: 2)
!6385 = distinct !DILexicalBlock(scope: !6378, file: !5559, line: 409, column: 2)
!6386 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !6307)
!6387 = !DILocalVariable(name: "__dummy2", scope: !6382, file: !5559, line: 409, type: !145)
!6388 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !6307)
!6389 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !6307)
!6390 = distinct !DILexicalBlock(scope: !6385, file: !5559, line: 409, column: 2)
!6391 = !{i32 -2145406090}
!6392 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !6307)
!6393 = distinct !DILexicalBlock(scope: !6390, file: !5559, line: 409, column: 2)
!6394 = !DILocation(line: 566, column: 1, scope: !6301)
!6395 = distinct !DISubprogram(name: "mxser_shutdown_port", scope: !3, file: !3, line: 949, type: !4181, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6396 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !6397)
!6397 = distinct !DILocation(line: 989, column: 2, scope: !6395)
!6398 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !6397)
!6399 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !6400)
!6400 = distinct !DILocation(line: 954, column: 2, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 954, column: 2)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 954, column: 2)
!6403 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 954, column: 2)
!6404 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 954, column: 2)
!6405 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 954, column: 2)
!6406 = !DILocalVariable(name: "port", arg: 1, scope: !6395, file: !3, line: 949, type: !3897)
!6407 = !DILocation(line: 949, column: 50, scope: !6395)
!6408 = !DILocalVariable(name: "info", scope: !6395, file: !3, line: 951, type: !114)
!6409 = !DILocation(line: 951, column: 21, scope: !6395)
!6410 = !DILocalVariable(name: "__mptr", scope: !6411, file: !3, line: 951, type: !112)
!6411 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 951, column: 28)
!6412 = !DILocation(line: 951, column: 28, scope: !6411)
!6413 = !DILocation(line: 951, column: 28, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 951, column: 28)
!6415 = !DILocalVariable(name: "flags", scope: !6395, file: !3, line: 952, type: !145)
!6416 = !DILocation(line: 952, column: 16, scope: !6395)
!6417 = !DILocation(line: 954, column: 2, scope: !6395)
!6418 = !DILocation(line: 954, column: 2, scope: !6405)
!6419 = !DILocalVariable(name: "__dummy", scope: !6420, file: !3, line: 954, type: !145)
!6420 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 954, column: 2)
!6421 = !DILocation(line: 954, column: 2, scope: !6420)
!6422 = !DILocalVariable(name: "__dummy2", scope: !6420, file: !3, line: 954, type: !145)
!6423 = !DILocation(line: 954, column: 2, scope: !6404)
!6424 = !DILocation(line: 954, column: 2, scope: !6403)
!6425 = !DILocation(line: 954, column: 2, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 954, column: 2)
!6427 = !DILocalVariable(name: "__dummy", scope: !6428, file: !3, line: 954, type: !145)
!6428 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 954, column: 2)
!6429 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 954, column: 2)
!6430 = !DILocation(line: 954, column: 2, scope: !6428)
!6431 = !DILocalVariable(name: "__dummy2", scope: !6428, file: !3, line: 954, type: !145)
!6432 = !DILocation(line: 954, column: 2, scope: !6429)
!6433 = !DILocation(line: 954, column: 2, scope: !6402)
!6434 = !{i32 -2141477557}
!6435 = !DILocation(line: 954, column: 2, scope: !6401)
!6436 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !6400)
!6437 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !6400)
!6438 = !DILocation(line: 960, column: 2, scope: !6395)
!6439 = !DILocation(line: 965, column: 6, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 965, column: 6)
!6441 = !DILocation(line: 965, column: 12, scope: !6440)
!6442 = !DILocation(line: 965, column: 17, scope: !6440)
!6443 = !DILocation(line: 965, column: 6, scope: !6395)
!6444 = !DILocation(line: 966, column: 3, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 965, column: 27)
!6446 = !DILocation(line: 967, column: 3, scope: !6445)
!6447 = !DILocation(line: 967, column: 9, scope: !6445)
!6448 = !DILocation(line: 967, column: 14, scope: !6445)
!6449 = !DILocation(line: 967, column: 23, scope: !6445)
!6450 = !DILocation(line: 968, column: 2, scope: !6445)
!6451 = !DILocation(line: 970, column: 2, scope: !6395)
!6452 = !DILocation(line: 970, column: 8, scope: !6395)
!6453 = !DILocation(line: 970, column: 12, scope: !6395)
!6454 = !DILocation(line: 971, column: 13, scope: !6395)
!6455 = !DILocation(line: 971, column: 19, scope: !6395)
!6456 = !DILocation(line: 971, column: 26, scope: !6395)
!6457 = !DILocation(line: 971, column: 2, scope: !6395)
!6458 = !DILocation(line: 974, column: 6, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 974, column: 6)
!6460 = !DILocation(line: 974, column: 12, scope: !6459)
!6461 = !DILocation(line: 974, column: 19, scope: !6459)
!6462 = !DILocation(line: 974, column: 6, scope: !6395)
!6463 = !DILocation(line: 977, column: 5, scope: !6459)
!6464 = !DILocation(line: 977, column: 11, scope: !6459)
!6465 = !DILocation(line: 977, column: 18, scope: !6459)
!6466 = !DILocation(line: 975, column: 3, scope: !6459)
!6467 = !DILocation(line: 980, column: 4, scope: !6459)
!6468 = !DILocation(line: 980, column: 10, scope: !6459)
!6469 = !DILocation(line: 980, column: 17, scope: !6459)
!6470 = !DILocation(line: 979, column: 3, scope: !6459)
!6471 = !DILocation(line: 983, column: 13, scope: !6395)
!6472 = !DILocation(line: 983, column: 19, scope: !6395)
!6473 = !DILocation(line: 983, column: 26, scope: !6395)
!6474 = !DILocation(line: 983, column: 9, scope: !6395)
!6475 = !DILocation(line: 986, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 986, column: 6)
!6477 = !DILocation(line: 986, column: 12, scope: !6476)
!6478 = !DILocation(line: 986, column: 19, scope: !6476)
!6479 = !DILocation(line: 986, column: 6, scope: !6395)
!6480 = !DILocation(line: 987, column: 42, scope: !6476)
!6481 = !DILocation(line: 987, column: 48, scope: !6476)
!6482 = !DILocation(line: 987, column: 3, scope: !6476)
!6483 = !DILocation(line: 989, column: 26, scope: !6395)
!6484 = !DILocation(line: 989, column: 32, scope: !6395)
!6485 = !DILocation(line: 989, column: 39, scope: !6395)
!6486 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !6397)
!6487 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !6397)
!6488 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !6397)
!6489 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !6397)
!6490 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !6397)
!6491 = !DILocation(line: 990, column: 1, scope: !6395)
!6492 = distinct !DISubprogram(name: "mxser_activate", scope: !3, file: !3, line: 856, type: !4185, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6493 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !6494)
!6494 = distinct !DILocation(line: 894, column: 3, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 893, column: 44)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 893, column: 6)
!6497 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !6494)
!6498 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !6499)
!6499 = distinct !DILocation(line: 871, column: 3, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 868, column: 36)
!6501 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 868, column: 6)
!6502 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !6499)
!6503 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !6504)
!6504 = distinct !DILocation(line: 941, column: 2, scope: !6492)
!6505 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !6504)
!6506 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !6507)
!6507 = distinct !DILocation(line: 866, column: 2, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 866, column: 2)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 866, column: 2)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 866, column: 2)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 866, column: 2)
!6512 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 866, column: 2)
!6513 = !DILocalVariable(name: "port", arg: 1, scope: !6492, file: !3, line: 856, type: !3897)
!6514 = !DILocation(line: 856, column: 44, scope: !6492)
!6515 = !DILocalVariable(name: "tty", arg: 2, scope: !6492, file: !3, line: 856, type: !213)
!6516 = !DILocation(line: 856, column: 69, scope: !6492)
!6517 = !DILocalVariable(name: "info", scope: !6492, file: !3, line: 858, type: !114)
!6518 = !DILocation(line: 858, column: 21, scope: !6492)
!6519 = !DILocalVariable(name: "__mptr", scope: !6520, file: !3, line: 858, type: !112)
!6520 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 858, column: 28)
!6521 = !DILocation(line: 858, column: 28, scope: !6520)
!6522 = !DILocation(line: 858, column: 28, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 858, column: 28)
!6524 = !DILocalVariable(name: "page", scope: !6492, file: !3, line: 859, type: !145)
!6525 = !DILocation(line: 859, column: 16, scope: !6492)
!6526 = !DILocalVariable(name: "flags", scope: !6492, file: !3, line: 860, type: !145)
!6527 = !DILocation(line: 860, column: 16, scope: !6492)
!6528 = !DILocation(line: 862, column: 9, scope: !6492)
!6529 = !DILocation(line: 862, column: 7, scope: !6492)
!6530 = !DILocation(line: 863, column: 7, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 863, column: 6)
!6532 = !DILocation(line: 863, column: 6, scope: !6492)
!6533 = !DILocation(line: 864, column: 3, scope: !6531)
!6534 = !DILocation(line: 866, column: 2, scope: !6492)
!6535 = !DILocation(line: 866, column: 2, scope: !6512)
!6536 = !DILocalVariable(name: "__dummy", scope: !6537, file: !3, line: 866, type: !145)
!6537 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 866, column: 2)
!6538 = !DILocation(line: 866, column: 2, scope: !6537)
!6539 = !DILocalVariable(name: "__dummy2", scope: !6537, file: !3, line: 866, type: !145)
!6540 = !DILocation(line: 866, column: 2, scope: !6511)
!6541 = !DILocation(line: 866, column: 2, scope: !6510)
!6542 = !DILocation(line: 866, column: 2, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 866, column: 2)
!6544 = !DILocalVariable(name: "__dummy", scope: !6545, file: !3, line: 866, type: !145)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 866, column: 2)
!6546 = distinct !DILexicalBlock(scope: !6543, file: !3, line: 866, column: 2)
!6547 = !DILocation(line: 866, column: 2, scope: !6545)
!6548 = !DILocalVariable(name: "__dummy2", scope: !6545, file: !3, line: 866, type: !145)
!6549 = !DILocation(line: 866, column: 2, scope: !6546)
!6550 = !DILocation(line: 866, column: 2, scope: !6509)
!6551 = !{i32 -2141480220}
!6552 = !DILocation(line: 866, column: 2, scope: !6508)
!6553 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !6507)
!6554 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !6507)
!6555 = !DILocation(line: 868, column: 7, scope: !6501)
!6556 = !DILocation(line: 868, column: 13, scope: !6501)
!6557 = !DILocation(line: 868, column: 20, scope: !6501)
!6558 = !DILocation(line: 868, column: 24, scope: !6501)
!6559 = !DILocation(line: 868, column: 30, scope: !6501)
!6560 = !DILocation(line: 868, column: 6, scope: !6492)
!6561 = !DILocation(line: 869, column: 26, scope: !6500)
!6562 = !DILocation(line: 869, column: 31, scope: !6500)
!6563 = !DILocation(line: 869, column: 3, scope: !6500)
!6564 = !DILocation(line: 870, column: 3, scope: !6500)
!6565 = !DILocation(line: 871, column: 27, scope: !6500)
!6566 = !DILocation(line: 871, column: 33, scope: !6500)
!6567 = !DILocation(line: 871, column: 40, scope: !6500)
!6568 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !6499)
!6569 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !6499)
!6570 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !6499)
!6571 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !6499)
!6572 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !6499)
!6573 = !DILocation(line: 872, column: 3, scope: !6500)
!6574 = !DILocation(line: 874, column: 42, scope: !6492)
!6575 = !DILocation(line: 874, column: 24, scope: !6492)
!6576 = !DILocation(line: 874, column: 2, scope: !6492)
!6577 = !DILocation(line: 874, column: 8, scope: !6492)
!6578 = !DILocation(line: 874, column: 13, scope: !6492)
!6579 = !DILocation(line: 874, column: 22, scope: !6492)
!6580 = !DILocation(line: 880, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 880, column: 6)
!6582 = !DILocation(line: 880, column: 12, scope: !6581)
!6583 = !DILocation(line: 880, column: 19, scope: !6581)
!6584 = !DILocation(line: 880, column: 6, scope: !6492)
!6585 = !DILocation(line: 883, column: 36, scope: !6581)
!6586 = !DILocation(line: 883, column: 42, scope: !6581)
!6587 = !DILocation(line: 883, column: 49, scope: !6581)
!6588 = !DILocation(line: 881, column: 3, scope: !6581)
!6589 = !DILocation(line: 886, column: 4, scope: !6581)
!6590 = !DILocation(line: 886, column: 10, scope: !6581)
!6591 = !DILocation(line: 886, column: 17, scope: !6581)
!6592 = !DILocation(line: 885, column: 3, scope: !6581)
!6593 = !DILocation(line: 893, column: 10, scope: !6496)
!6594 = !DILocation(line: 893, column: 16, scope: !6496)
!6595 = !DILocation(line: 893, column: 23, scope: !6496)
!6596 = !DILocation(line: 893, column: 6, scope: !6496)
!6597 = !DILocation(line: 893, column: 35, scope: !6496)
!6598 = !DILocation(line: 893, column: 6, scope: !6492)
!6599 = !DILocation(line: 894, column: 27, scope: !6495)
!6600 = !DILocation(line: 894, column: 33, scope: !6495)
!6601 = !DILocation(line: 894, column: 40, scope: !6495)
!6602 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !6494)
!6603 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !6494)
!6604 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !6494)
!6605 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !6494)
!6606 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !6494)
!6607 = !DILocation(line: 895, column: 7, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 895, column: 7)
!6609 = !DILocation(line: 895, column: 7, scope: !6495)
!6610 = !DILocation(line: 896, column: 27, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 895, column: 31)
!6612 = !DILocation(line: 896, column: 32, scope: !6611)
!6613 = !DILocation(line: 896, column: 4, scope: !6611)
!6614 = !DILocation(line: 897, column: 4, scope: !6611)
!6615 = !DILocation(line: 899, column: 4, scope: !6608)
!6616 = !DILocation(line: 905, column: 13, scope: !6492)
!6617 = !DILocation(line: 905, column: 19, scope: !6492)
!6618 = !DILocation(line: 905, column: 26, scope: !6492)
!6619 = !DILocation(line: 905, column: 9, scope: !6492)
!6620 = !DILocation(line: 906, column: 13, scope: !6492)
!6621 = !DILocation(line: 906, column: 19, scope: !6492)
!6622 = !DILocation(line: 906, column: 26, scope: !6492)
!6623 = !DILocation(line: 906, column: 9, scope: !6492)
!6624 = !DILocation(line: 907, column: 13, scope: !6492)
!6625 = !DILocation(line: 907, column: 19, scope: !6492)
!6626 = !DILocation(line: 907, column: 26, scope: !6492)
!6627 = !DILocation(line: 907, column: 9, scope: !6492)
!6628 = !DILocation(line: 908, column: 13, scope: !6492)
!6629 = !DILocation(line: 908, column: 19, scope: !6492)
!6630 = !DILocation(line: 908, column: 26, scope: !6492)
!6631 = !DILocation(line: 908, column: 9, scope: !6492)
!6632 = !DILocation(line: 913, column: 23, scope: !6492)
!6633 = !DILocation(line: 913, column: 29, scope: !6492)
!6634 = !DILocation(line: 913, column: 36, scope: !6492)
!6635 = !DILocation(line: 913, column: 2, scope: !6492)
!6636 = !DILocation(line: 914, column: 2, scope: !6492)
!6637 = !DILocation(line: 914, column: 8, scope: !6492)
!6638 = !DILocation(line: 914, column: 12, scope: !6492)
!6639 = !DILocation(line: 915, column: 7, scope: !6492)
!6640 = !DILocation(line: 915, column: 13, scope: !6492)
!6641 = !DILocation(line: 915, column: 18, scope: !6492)
!6642 = !DILocation(line: 915, column: 24, scope: !6492)
!6643 = !DILocation(line: 915, column: 31, scope: !6492)
!6644 = !DILocation(line: 915, column: 2, scope: !6492)
!6645 = !DILocation(line: 920, column: 2, scope: !6492)
!6646 = !DILocation(line: 920, column: 8, scope: !6492)
!6647 = !DILocation(line: 920, column: 12, scope: !6492)
!6648 = !DILocation(line: 922, column: 6, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 922, column: 6)
!6650 = !DILocation(line: 922, column: 12, scope: !6649)
!6651 = !DILocation(line: 922, column: 19, scope: !6649)
!6652 = !DILocation(line: 922, column: 6, scope: !6492)
!6653 = !DILocation(line: 923, column: 3, scope: !6649)
!6654 = !DILocation(line: 923, column: 9, scope: !6649)
!6655 = !DILocation(line: 923, column: 13, scope: !6649)
!6656 = !DILocation(line: 924, column: 7, scope: !6492)
!6657 = !DILocation(line: 924, column: 13, scope: !6492)
!6658 = !DILocation(line: 924, column: 18, scope: !6492)
!6659 = !DILocation(line: 924, column: 24, scope: !6492)
!6660 = !DILocation(line: 924, column: 31, scope: !6492)
!6661 = !DILocation(line: 924, column: 2, scope: !6492)
!6662 = !DILocation(line: 929, column: 13, scope: !6492)
!6663 = !DILocation(line: 929, column: 19, scope: !6492)
!6664 = !DILocation(line: 929, column: 26, scope: !6492)
!6665 = !DILocation(line: 929, column: 9, scope: !6492)
!6666 = !DILocation(line: 930, column: 13, scope: !6492)
!6667 = !DILocation(line: 930, column: 19, scope: !6492)
!6668 = !DILocation(line: 930, column: 26, scope: !6492)
!6669 = !DILocation(line: 930, column: 9, scope: !6492)
!6670 = !DILocation(line: 931, column: 13, scope: !6492)
!6671 = !DILocation(line: 931, column: 19, scope: !6492)
!6672 = !DILocation(line: 931, column: 26, scope: !6492)
!6673 = !DILocation(line: 931, column: 9, scope: !6492)
!6674 = !DILocation(line: 932, column: 13, scope: !6492)
!6675 = !DILocation(line: 932, column: 19, scope: !6492)
!6676 = !DILocation(line: 932, column: 26, scope: !6492)
!6677 = !DILocation(line: 932, column: 9, scope: !6492)
!6678 = !DILocation(line: 934, column: 27, scope: !6492)
!6679 = !DILocation(line: 934, column: 32, scope: !6492)
!6680 = !DILocation(line: 934, column: 2, scope: !6492)
!6681 = !DILocation(line: 935, column: 37, scope: !6492)
!6682 = !DILocation(line: 935, column: 43, scope: !6492)
!6683 = !DILocation(line: 935, column: 53, scope: !6492)
!6684 = !DILocation(line: 935, column: 19, scope: !6492)
!6685 = !DILocation(line: 935, column: 25, scope: !6492)
!6686 = !DILocation(line: 935, column: 35, scope: !6492)
!6687 = !DILocation(line: 935, column: 2, scope: !6492)
!6688 = !DILocation(line: 935, column: 8, scope: !6492)
!6689 = !DILocation(line: 935, column: 17, scope: !6492)
!6690 = !DILocation(line: 940, column: 21, scope: !6492)
!6691 = !DILocation(line: 940, column: 2, scope: !6492)
!6692 = !DILocation(line: 941, column: 26, scope: !6492)
!6693 = !DILocation(line: 941, column: 32, scope: !6492)
!6694 = !DILocation(line: 941, column: 39, scope: !6492)
!6695 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !6504)
!6696 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !6504)
!6697 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !6504)
!6698 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !6504)
!6699 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !6504)
!6700 = !DILocation(line: 943, column: 2, scope: !6492)
!6701 = !DILocation(line: 944, column: 1, scope: !6492)
!6702 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6703, file: !6703, line: 666, type: !6704, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6703 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6704 = !DISubroutineType(types: !6705)
!6705 = !{!145}
!6706 = !DILocalVariable(name: "f", scope: !6702, file: !6703, line: 668, type: !145)
!6707 = !DILocation(line: 668, column: 16, scope: !6702)
!6708 = !DILocation(line: 670, column: 6, scope: !6702)
!6709 = !DILocation(line: 670, column: 4, scope: !6702)
!6710 = !DILocation(line: 671, column: 2, scope: !6702)
!6711 = !DILocation(line: 672, column: 9, scope: !6702)
!6712 = !DILocation(line: 672, column: 2, scope: !6702)
!6713 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6703, file: !6703, line: 646, type: !6704, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6714 = !DILocalVariable(name: "__ret", scope: !6715, file: !6703, line: 648, type: !145)
!6715 = distinct !DILexicalBlock(scope: !6713, file: !6703, line: 648, column: 9)
!6716 = !DILocation(line: 648, column: 9, scope: !6715)
!6717 = !DILocalVariable(name: "__edi", scope: !6715, file: !6703, line: 648, type: !145)
!6718 = !DILocalVariable(name: "__esi", scope: !6715, file: !6703, line: 648, type: !145)
!6719 = !DILocalVariable(name: "__edx", scope: !6715, file: !6703, line: 648, type: !145)
!6720 = !DILocalVariable(name: "__ecx", scope: !6715, file: !6703, line: 648, type: !145)
!6721 = !DILocalVariable(name: "__eax", scope: !6715, file: !6703, line: 648, type: !145)
!6722 = !DILocation(line: 648, column: 9, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6724, file: !6703, line: 648, column: 9)
!6724 = distinct !DILexicalBlock(scope: !6715, file: !6703, line: 648, column: 9)
!6725 = !{i32 -2145719659, i32 -2145717344, i32 -2145717110, i32 -2145717059, i32 -2145717031, i32 -2145717006, i32 -2145717322, i32 -2145717309, i32 -2145716871, i32 -2145716752, i32 -2145717217, i32 -2145717190, i32 -2145717162, i32 -2145717132}
!6726 = !DILocalVariable(name: "__mask", scope: !6727, file: !6703, line: 648, type: !145)
!6727 = distinct !DILexicalBlock(scope: !6723, file: !6703, line: 648, column: 9)
!6728 = !DILocation(line: 648, column: 9, scope: !6727)
!6729 = !DILocation(line: 648, column: 9, scope: !6724)
!6730 = !DILocation(line: 648, column: 2, scope: !6713)
!6731 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6703, file: !6703, line: 656, type: !1940, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6732 = !DILocalVariable(name: "__edi", scope: !6733, file: !6703, line: 658, type: !145)
!6733 = distinct !DILexicalBlock(scope: !6731, file: !6703, line: 658, column: 2)
!6734 = !DILocation(line: 658, column: 2, scope: !6733)
!6735 = !DILocalVariable(name: "__esi", scope: !6733, file: !6703, line: 658, type: !145)
!6736 = !DILocalVariable(name: "__edx", scope: !6733, file: !6703, line: 658, type: !145)
!6737 = !DILocalVariable(name: "__ecx", scope: !6733, file: !6703, line: 658, type: !145)
!6738 = !DILocalVariable(name: "__eax", scope: !6733, file: !6703, line: 658, type: !145)
!6739 = !{i32 -2145712565, i32 -2145711833, i32 -2145711599, i32 -2145711548, i32 -2145711520, i32 -2145711495, i32 -2145711811, i32 -2145711798, i32 -2145711360, i32 -2145711241, i32 -2145711706, i32 -2145711679, i32 -2145711651, i32 -2145711621}
!6740 = !DILocation(line: 659, column: 1, scope: !6731)
!6741 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6703, file: !6703, line: 651, type: !5733, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6742 = !DILocalVariable(name: "f", arg: 1, scope: !6741, file: !6703, line: 651, type: !145)
!6743 = !DILocation(line: 651, column: 65, scope: !6741)
!6744 = !DILocalVariable(name: "__edi", scope: !6745, file: !6703, line: 653, type: !145)
!6745 = distinct !DILexicalBlock(scope: !6741, file: !6703, line: 653, column: 2)
!6746 = !DILocation(line: 653, column: 2, scope: !6745)
!6747 = !DILocalVariable(name: "__esi", scope: !6745, file: !6703, line: 653, type: !145)
!6748 = !DILocalVariable(name: "__edx", scope: !6745, file: !6703, line: 653, type: !145)
!6749 = !DILocalVariable(name: "__ecx", scope: !6745, file: !6703, line: 653, type: !145)
!6750 = !DILocalVariable(name: "__eax", scope: !6745, file: !6703, line: 653, type: !145)
!6751 = !{i32 -2145715192, i32 -2145714442, i32 -2145714208, i32 -2145714157, i32 -2145714129, i32 -2145714104, i32 -2145714420, i32 -2145714407, i32 -2145713969, i32 -2145713850, i32 -2145714315, i32 -2145714288, i32 -2145714260, i32 -2145714230}
!6752 = !DILocation(line: 654, column: 1, scope: !6741)
!6753 = distinct !DISubprogram(name: "SET_MOXA_MUST_NO_SOFTWARE_FLOW_CONTROL", scope: !3, file: !3, line: 409, type: !5733, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6754 = !DILocalVariable(name: "baseio", arg: 1, scope: !6753, file: !3, line: 409, type: !145)
!6755 = !DILocation(line: 409, column: 66, scope: !6753)
!6756 = !DILocalVariable(name: "oldlcr", scope: !6753, file: !3, line: 411, type: !1361)
!6757 = !DILocation(line: 411, column: 5, scope: !6753)
!6758 = !DILocalVariable(name: "efr", scope: !6753, file: !3, line: 412, type: !1361)
!6759 = !DILocation(line: 412, column: 5, scope: !6753)
!6760 = !DILocation(line: 414, column: 15, scope: !6753)
!6761 = !DILocation(line: 414, column: 22, scope: !6753)
!6762 = !DILocation(line: 414, column: 11, scope: !6753)
!6763 = !DILocation(line: 414, column: 9, scope: !6753)
!6764 = !DILocation(line: 415, column: 33, scope: !6753)
!6765 = !DILocation(line: 415, column: 40, scope: !6753)
!6766 = !DILocation(line: 415, column: 2, scope: !6753)
!6767 = !DILocation(line: 417, column: 12, scope: !6753)
!6768 = !DILocation(line: 417, column: 19, scope: !6753)
!6769 = !DILocation(line: 417, column: 8, scope: !6753)
!6770 = !DILocation(line: 417, column: 6, scope: !6753)
!6771 = !DILocation(line: 418, column: 6, scope: !6753)
!6772 = !DILocation(line: 420, column: 7, scope: !6753)
!6773 = !DILocation(line: 420, column: 12, scope: !6753)
!6774 = !DILocation(line: 420, column: 19, scope: !6753)
!6775 = !DILocation(line: 420, column: 2, scope: !6753)
!6776 = !DILocation(line: 421, column: 7, scope: !6753)
!6777 = !DILocation(line: 421, column: 15, scope: !6753)
!6778 = !DILocation(line: 421, column: 22, scope: !6753)
!6779 = !DILocation(line: 421, column: 2, scope: !6753)
!6780 = !DILocation(line: 422, column: 1, scope: !6753)
!6781 = distinct !DISubprogram(name: "set_bit", scope: !6782, file: !6782, line: 26, type: !6783, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6782 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!6783 = !DISubroutineType(types: !6784)
!6784 = !{null, !309, !6785}
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !145)
!6787 = !DILocalVariable(name: "nr", arg: 1, scope: !6788, file: !6789, line: 52, type: !309)
!6788 = distinct !DISubprogram(name: "arch_set_bit", scope: !6789, file: !6789, line: 52, type: !6783, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6789 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6790 = !DILocation(line: 52, column: 19, scope: !6788, inlinedAt: !6791)
!6791 = distinct !DILocation(line: 29, column: 2, scope: !6781)
!6792 = !DILocalVariable(name: "addr", arg: 2, scope: !6788, file: !6789, line: 52, type: !6785)
!6793 = !DILocation(line: 52, column: 47, scope: !6788, inlinedAt: !6791)
!6794 = !DILocalVariable(name: "v", arg: 1, scope: !6795, file: !6796, line: 84, type: !6799)
!6795 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6796, file: !6796, line: 84, type: !6797, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6796 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6797 = !DISubroutineType(types: !6798)
!6798 = !{null, !6799, !321}
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 64)
!6800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6801)
!6801 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6802 = !DILocation(line: 84, column: 74, scope: !6795, inlinedAt: !6803)
!6803 = distinct !DILocation(line: 28, column: 2, scope: !6781)
!6804 = !DILocalVariable(name: "size", arg: 2, scope: !6795, file: !6796, line: 84, type: !321)
!6805 = !DILocation(line: 84, column: 84, scope: !6795, inlinedAt: !6803)
!6806 = !DILocalVariable(name: "nr", arg: 1, scope: !6781, file: !6782, line: 26, type: !309)
!6807 = !DILocation(line: 26, column: 33, scope: !6781)
!6808 = !DILocalVariable(name: "addr", arg: 2, scope: !6781, file: !6782, line: 26, type: !6785)
!6809 = !DILocation(line: 26, column: 61, scope: !6781)
!6810 = !DILocation(line: 28, column: 26, scope: !6781)
!6811 = !DILocation(line: 28, column: 33, scope: !6781)
!6812 = !DILocation(line: 28, column: 31, scope: !6781)
!6813 = !DILocation(line: 86, column: 20, scope: !6795, inlinedAt: !6803)
!6814 = !DILocation(line: 86, column: 23, scope: !6795, inlinedAt: !6803)
!6815 = !DILocation(line: 86, column: 2, scope: !6795, inlinedAt: !6803)
!6816 = !DILocation(line: 87, column: 2, scope: !6795, inlinedAt: !6803)
!6817 = !DILocation(line: 29, column: 15, scope: !6781)
!6818 = !DILocation(line: 29, column: 19, scope: !6781)
!6819 = !DILocation(line: 54, column: 27, scope: !6820, inlinedAt: !6791)
!6820 = distinct !DILexicalBlock(scope: !6788, file: !6789, line: 54, column: 6)
!6821 = !DILocation(line: 54, column: 6, scope: !6820, inlinedAt: !6791)
!6822 = !DILocation(line: 54, column: 6, scope: !6788, inlinedAt: !6791)
!6823 = !DILocation(line: 56, column: 6, scope: !6824, inlinedAt: !6791)
!6824 = distinct !DILexicalBlock(scope: !6820, file: !6789, line: 54, column: 32)
!6825 = !DILocation(line: 57, column: 12, scope: !6824, inlinedAt: !6791)
!6826 = !DILocation(line: 55, column: 3, scope: !6824, inlinedAt: !6791)
!6827 = !{i32 -2147083921}
!6828 = !DILocation(line: 59, column: 2, scope: !6824, inlinedAt: !6791)
!6829 = !DILocation(line: 61, column: 8, scope: !6830, inlinedAt: !6791)
!6830 = distinct !DILexicalBlock(scope: !6820, file: !6789, line: 59, column: 9)
!6831 = !DILocation(line: 61, column: 32, scope: !6830, inlinedAt: !6791)
!6832 = !DILocation(line: 60, column: 3, scope: !6830, inlinedAt: !6791)
!6833 = !{i32 -2147083789}
!6834 = !DILocation(line: 30, column: 1, scope: !6781)
!6835 = distinct !DISubprogram(name: "clear_bit", scope: !6782, file: !6782, line: 39, type: !6783, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6836 = !DILocalVariable(name: "nr", arg: 1, scope: !6837, file: !6789, line: 72, type: !309)
!6837 = distinct !DISubprogram(name: "arch_clear_bit", scope: !6789, file: !6789, line: 72, type: !6783, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6838 = !DILocation(line: 72, column: 21, scope: !6837, inlinedAt: !6839)
!6839 = distinct !DILocation(line: 42, column: 2, scope: !6835)
!6840 = !DILocalVariable(name: "addr", arg: 2, scope: !6837, file: !6789, line: 72, type: !6785)
!6841 = !DILocation(line: 72, column: 49, scope: !6837, inlinedAt: !6839)
!6842 = !DILocation(line: 84, column: 74, scope: !6795, inlinedAt: !6843)
!6843 = distinct !DILocation(line: 41, column: 2, scope: !6835)
!6844 = !DILocation(line: 84, column: 84, scope: !6795, inlinedAt: !6843)
!6845 = !DILocalVariable(name: "nr", arg: 1, scope: !6835, file: !6782, line: 39, type: !309)
!6846 = !DILocation(line: 39, column: 35, scope: !6835)
!6847 = !DILocalVariable(name: "addr", arg: 2, scope: !6835, file: !6782, line: 39, type: !6785)
!6848 = !DILocation(line: 39, column: 63, scope: !6835)
!6849 = !DILocation(line: 41, column: 26, scope: !6835)
!6850 = !DILocation(line: 41, column: 33, scope: !6835)
!6851 = !DILocation(line: 41, column: 31, scope: !6835)
!6852 = !DILocation(line: 86, column: 20, scope: !6795, inlinedAt: !6843)
!6853 = !DILocation(line: 86, column: 23, scope: !6795, inlinedAt: !6843)
!6854 = !DILocation(line: 86, column: 2, scope: !6795, inlinedAt: !6843)
!6855 = !DILocation(line: 87, column: 2, scope: !6795, inlinedAt: !6843)
!6856 = !DILocation(line: 42, column: 17, scope: !6835)
!6857 = !DILocation(line: 42, column: 21, scope: !6835)
!6858 = !DILocation(line: 74, column: 27, scope: !6859, inlinedAt: !6839)
!6859 = distinct !DILexicalBlock(scope: !6837, file: !6789, line: 74, column: 6)
!6860 = !DILocation(line: 74, column: 6, scope: !6859, inlinedAt: !6839)
!6861 = !DILocation(line: 74, column: 6, scope: !6837, inlinedAt: !6839)
!6862 = !DILocation(line: 76, column: 6, scope: !6863, inlinedAt: !6839)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !6789, line: 74, column: 32)
!6864 = !DILocation(line: 77, column: 13, scope: !6863, inlinedAt: !6839)
!6865 = !DILocation(line: 77, column: 12, scope: !6863, inlinedAt: !6839)
!6866 = !DILocation(line: 75, column: 3, scope: !6863, inlinedAt: !6839)
!6867 = !{i32 -2147082967}
!6868 = !DILocation(line: 78, column: 2, scope: !6863, inlinedAt: !6839)
!6869 = !DILocation(line: 80, column: 8, scope: !6870, inlinedAt: !6839)
!6870 = distinct !DILexicalBlock(scope: !6859, file: !6789, line: 78, column: 9)
!6871 = !DILocation(line: 80, column: 32, scope: !6870, inlinedAt: !6839)
!6872 = !DILocation(line: 79, column: 3, scope: !6870, inlinedAt: !6839)
!6873 = !{i32 -2147082835}
!6874 = !DILocation(line: 43, column: 1, scope: !6835)
!6875 = distinct !DISubprogram(name: "mxser_change_speed", scope: !3, file: !3, line: 641, type: !3929, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!6876 = !DILocalVariable(name: "tty", arg: 1, scope: !6875, file: !3, line: 641, type: !213)
!6877 = !DILocation(line: 641, column: 51, scope: !6875)
!6878 = !DILocalVariable(name: "info", scope: !6875, file: !3, line: 643, type: !114)
!6879 = !DILocation(line: 643, column: 21, scope: !6875)
!6880 = !DILocation(line: 643, column: 28, scope: !6875)
!6881 = !DILocation(line: 643, column: 33, scope: !6875)
!6882 = !DILocalVariable(name: "cflag", scope: !6875, file: !3, line: 644, type: !7)
!6883 = !DILocation(line: 644, column: 11, scope: !6875)
!6884 = !DILocalVariable(name: "cval", scope: !6875, file: !3, line: 644, type: !7)
!6885 = !DILocation(line: 644, column: 18, scope: !6875)
!6886 = !DILocalVariable(name: "fcr", scope: !6875, file: !3, line: 644, type: !7)
!6887 = !DILocation(line: 644, column: 24, scope: !6875)
!6888 = !DILocalVariable(name: "status", scope: !6875, file: !3, line: 645, type: !419)
!6889 = !DILocation(line: 645, column: 16, scope: !6875)
!6890 = !DILocation(line: 647, column: 10, scope: !6875)
!6891 = !DILocation(line: 647, column: 15, scope: !6875)
!6892 = !DILocation(line: 647, column: 23, scope: !6875)
!6893 = !DILocation(line: 647, column: 8, scope: !6875)
!6894 = !DILocation(line: 648, column: 7, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 648, column: 6)
!6896 = !DILocation(line: 648, column: 13, scope: !6895)
!6897 = !DILocation(line: 648, column: 6, scope: !6875)
!6898 = !DILocation(line: 649, column: 3, scope: !6895)
!6899 = !DILocation(line: 651, column: 28, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 651, column: 6)
!6901 = !DILocation(line: 651, column: 33, scope: !6900)
!6902 = !DILocation(line: 651, column: 6, scope: !6900)
!6903 = !DILocation(line: 651, column: 40, scope: !6900)
!6904 = !DILocation(line: 651, column: 6, scope: !6875)
!6905 = !DILocation(line: 652, column: 18, scope: !6900)
!6906 = !DILocation(line: 652, column: 41, scope: !6900)
!6907 = !DILocation(line: 652, column: 23, scope: !6900)
!6908 = !DILocation(line: 652, column: 3, scope: !6900)
!6909 = !DILocation(line: 655, column: 10, scope: !6875)
!6910 = !DILocation(line: 655, column: 16, scope: !6875)
!6911 = !DILocation(line: 655, column: 2, scope: !6875)
!6912 = !DILocation(line: 657, column: 8, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 655, column: 25)
!6914 = !DILocation(line: 658, column: 3, scope: !6913)
!6915 = !DILocation(line: 660, column: 8, scope: !6913)
!6916 = !DILocation(line: 661, column: 3, scope: !6913)
!6917 = !DILocation(line: 663, column: 8, scope: !6913)
!6918 = !DILocation(line: 664, column: 3, scope: !6913)
!6919 = !DILocation(line: 666, column: 8, scope: !6913)
!6920 = !DILocation(line: 667, column: 3, scope: !6913)
!6921 = !DILocation(line: 669, column: 8, scope: !6913)
!6922 = !DILocation(line: 670, column: 3, scope: !6913)
!6923 = !DILocation(line: 672, column: 6, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 672, column: 6)
!6925 = !DILocation(line: 672, column: 12, scope: !6924)
!6926 = !DILocation(line: 672, column: 6, scope: !6875)
!6927 = !DILocation(line: 673, column: 8, scope: !6924)
!6928 = !DILocation(line: 673, column: 3, scope: !6924)
!6929 = !DILocation(line: 674, column: 6, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 674, column: 6)
!6931 = !DILocation(line: 674, column: 12, scope: !6930)
!6932 = !DILocation(line: 674, column: 6, scope: !6875)
!6933 = !DILocation(line: 675, column: 8, scope: !6930)
!6934 = !DILocation(line: 675, column: 3, scope: !6930)
!6935 = !DILocation(line: 676, column: 8, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 676, column: 6)
!6937 = !DILocation(line: 676, column: 14, scope: !6936)
!6938 = !DILocation(line: 676, column: 6, scope: !6875)
!6939 = !DILocation(line: 677, column: 8, scope: !6936)
!6940 = !DILocation(line: 677, column: 3, scope: !6936)
!6941 = !DILocation(line: 678, column: 6, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 678, column: 6)
!6943 = !DILocation(line: 678, column: 12, scope: !6942)
!6944 = !DILocation(line: 678, column: 6, scope: !6875)
!6945 = !DILocation(line: 679, column: 8, scope: !6942)
!6946 = !DILocation(line: 679, column: 3, scope: !6942)
!6947 = !DILocation(line: 681, column: 7, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 681, column: 6)
!6949 = !DILocation(line: 681, column: 13, scope: !6948)
!6950 = !DILocation(line: 681, column: 18, scope: !6948)
!6951 = !DILocation(line: 681, column: 32, scope: !6948)
!6952 = !DILocation(line: 681, column: 36, scope: !6948)
!6953 = !DILocation(line: 681, column: 42, scope: !6948)
!6954 = !DILocation(line: 681, column: 47, scope: !6948)
!6955 = !DILocation(line: 681, column: 6, scope: !6875)
!6956 = !DILocation(line: 682, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 682, column: 7)
!6958 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 681, column: 63)
!6959 = !DILocation(line: 682, column: 13, scope: !6957)
!6960 = !DILocation(line: 682, column: 20, scope: !6957)
!6961 = !DILocation(line: 682, column: 7, scope: !6958)
!6962 = !DILocation(line: 683, column: 8, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 682, column: 31)
!6964 = !DILocation(line: 684, column: 8, scope: !6963)
!6965 = !DILocation(line: 685, column: 30, scope: !6963)
!6966 = !DILocation(line: 685, column: 4, scope: !6963)
!6967 = !DILocation(line: 686, column: 3, scope: !6963)
!6968 = !DILocation(line: 687, column: 8, scope: !6957)
!6969 = !DILocation(line: 688, column: 2, scope: !6958)
!6970 = !DILocation(line: 689, column: 7, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 688, column: 9)
!6972 = !DILocation(line: 690, column: 7, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 690, column: 7)
!6974 = !DILocation(line: 690, column: 13, scope: !6973)
!6975 = !DILocation(line: 690, column: 20, scope: !6973)
!6976 = !DILocation(line: 690, column: 7, scope: !6971)
!6977 = !DILocation(line: 691, column: 8, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 690, column: 31)
!6979 = !DILocation(line: 692, column: 30, scope: !6978)
!6980 = !DILocation(line: 692, column: 4, scope: !6978)
!6981 = !DILocation(line: 693, column: 3, scope: !6978)
!6982 = !DILocation(line: 694, column: 12, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 693, column: 10)
!6984 = !DILocation(line: 694, column: 18, scope: !6983)
!6985 = !DILocation(line: 694, column: 4, scope: !6983)
!6986 = !DILocation(line: 696, column: 9, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 694, column: 30)
!6988 = !DILocation(line: 697, column: 5, scope: !6987)
!6989 = !DILocation(line: 699, column: 9, scope: !6987)
!6990 = !DILocation(line: 700, column: 5, scope: !6987)
!6991 = !DILocation(line: 702, column: 9, scope: !6987)
!6992 = !DILocation(line: 703, column: 5, scope: !6987)
!6993 = !DILocation(line: 705, column: 9, scope: !6987)
!6994 = !DILocation(line: 706, column: 5, scope: !6987)
!6995 = !DILocation(line: 712, column: 2, scope: !6875)
!6996 = !DILocation(line: 712, column: 8, scope: !6875)
!6997 = !DILocation(line: 712, column: 12, scope: !6875)
!6998 = !DILocation(line: 713, column: 2, scope: !6875)
!6999 = !DILocation(line: 713, column: 8, scope: !6875)
!7000 = !DILocation(line: 713, column: 12, scope: !6875)
!7001 = !DILocation(line: 714, column: 25, scope: !6875)
!7002 = !DILocation(line: 714, column: 31, scope: !6875)
!7003 = !DILocation(line: 714, column: 37, scope: !6875)
!7004 = !DILocation(line: 714, column: 43, scope: !6875)
!7005 = !DILocation(line: 714, column: 2, scope: !6875)
!7006 = !DILocation(line: 715, column: 6, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 715, column: 6)
!7008 = !DILocation(line: 715, column: 12, scope: !7007)
!7009 = !DILocation(line: 715, column: 6, scope: !6875)
!7010 = !DILocation(line: 716, column: 3, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 715, column: 23)
!7012 = !DILocation(line: 716, column: 9, scope: !7011)
!7013 = !DILocation(line: 716, column: 13, scope: !7011)
!7014 = !DILocation(line: 717, column: 8, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 717, column: 7)
!7016 = !DILocation(line: 717, column: 14, scope: !7015)
!7017 = !DILocation(line: 717, column: 19, scope: !7015)
!7018 = !DILocation(line: 717, column: 35, scope: !7015)
!7019 = !DILocation(line: 717, column: 39, scope: !7015)
!7020 = !DILocation(line: 717, column: 45, scope: !7015)
!7021 = !DILocation(line: 717, column: 52, scope: !7015)
!7022 = !DILocation(line: 717, column: 38, scope: !7015)
!7023 = !DILocation(line: 717, column: 7, scope: !7011)
!7024 = !DILocation(line: 718, column: 4, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 717, column: 64)
!7026 = !DILocation(line: 718, column: 10, scope: !7025)
!7027 = !DILocation(line: 718, column: 14, scope: !7025)
!7028 = !DILocation(line: 719, column: 3, scope: !7025)
!7029 = !DILocation(line: 720, column: 17, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 719, column: 10)
!7031 = !DILocation(line: 720, column: 23, scope: !7030)
!7032 = !DILocation(line: 720, column: 30, scope: !7030)
!7033 = !DILocation(line: 720, column: 13, scope: !7030)
!7034 = !DILocation(line: 720, column: 11, scope: !7030)
!7035 = !DILocation(line: 721, column: 8, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 721, column: 8)
!7037 = !DILocation(line: 721, column: 13, scope: !7036)
!7038 = !DILocation(line: 721, column: 8, scope: !7030)
!7039 = !DILocation(line: 722, column: 9, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 722, column: 9)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 721, column: 25)
!7042 = !DILocation(line: 722, column: 16, scope: !7040)
!7043 = !DILocation(line: 722, column: 9, scope: !7041)
!7044 = !DILocation(line: 723, column: 6, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 722, column: 32)
!7046 = !DILocation(line: 723, column: 11, scope: !7045)
!7047 = !DILocation(line: 723, column: 22, scope: !7045)
!7048 = !DILocation(line: 724, column: 10, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 724, column: 10)
!7050 = !DILocation(line: 724, column: 16, scope: !7049)
!7051 = !DILocation(line: 724, column: 21, scope: !7049)
!7052 = !DILocation(line: 724, column: 36, scope: !7049)
!7053 = !DILocation(line: 725, column: 9, scope: !7049)
!7054 = !DILocation(line: 725, column: 15, scope: !7049)
!7055 = !DILocation(line: 725, column: 22, scope: !7049)
!7056 = !DILocation(line: 724, column: 10, scope: !7045)
!7057 = !DILocation(line: 726, column: 12, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 725, column: 33)
!7059 = !DILocation(line: 726, column: 18, scope: !7058)
!7060 = !DILocation(line: 726, column: 22, scope: !7058)
!7061 = !DILocation(line: 727, column: 8, scope: !7058)
!7062 = !DILocation(line: 727, column: 14, scope: !7058)
!7063 = !DILocation(line: 727, column: 21, scope: !7058)
!7064 = !DILocation(line: 726, column: 7, scope: !7058)
!7065 = !DILocation(line: 729, column: 7, scope: !7058)
!7066 = !DILocation(line: 729, column: 13, scope: !7058)
!7067 = !DILocation(line: 729, column: 17, scope: !7058)
!7068 = !DILocation(line: 730, column: 12, scope: !7058)
!7069 = !DILocation(line: 730, column: 18, scope: !7058)
!7070 = !DILocation(line: 730, column: 23, scope: !7058)
!7071 = !DILocation(line: 730, column: 29, scope: !7058)
!7072 = !DILocation(line: 730, column: 36, scope: !7058)
!7073 = !DILocation(line: 730, column: 7, scope: !7058)
!7074 = !DILocation(line: 732, column: 6, scope: !7058)
!7075 = !DILocation(line: 733, column: 17, scope: !7045)
!7076 = !DILocation(line: 733, column: 6, scope: !7045)
!7077 = !DILocation(line: 734, column: 5, scope: !7045)
!7078 = !DILocation(line: 735, column: 4, scope: !7041)
!7079 = !DILocation(line: 736, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 736, column: 9)
!7081 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 735, column: 11)
!7082 = !DILocation(line: 736, column: 18, scope: !7080)
!7083 = !DILocation(line: 736, column: 9, scope: !7081)
!7084 = !DILocation(line: 737, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 736, column: 35)
!7086 = !DILocation(line: 737, column: 11, scope: !7085)
!7087 = !DILocation(line: 737, column: 22, scope: !7085)
!7088 = !DILocation(line: 738, column: 11, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 738, column: 10)
!7090 = !DILocation(line: 738, column: 17, scope: !7089)
!7091 = !DILocation(line: 738, column: 22, scope: !7089)
!7092 = !DILocation(line: 738, column: 38, scope: !7089)
!7093 = !DILocation(line: 739, column: 10, scope: !7089)
!7094 = !DILocation(line: 739, column: 16, scope: !7089)
!7095 = !DILocation(line: 739, column: 23, scope: !7089)
!7096 = !DILocation(line: 738, column: 10, scope: !7085)
!7097 = !DILocation(line: 740, column: 7, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 739, column: 35)
!7099 = !DILocation(line: 740, column: 13, scope: !7098)
!7100 = !DILocation(line: 740, column: 17, scope: !7098)
!7101 = !DILocation(line: 741, column: 12, scope: !7098)
!7102 = !DILocation(line: 741, column: 18, scope: !7098)
!7103 = !DILocation(line: 741, column: 23, scope: !7098)
!7104 = !DILocation(line: 741, column: 29, scope: !7098)
!7105 = !DILocation(line: 741, column: 36, scope: !7098)
!7106 = !DILocation(line: 741, column: 7, scope: !7098)
!7107 = !DILocation(line: 743, column: 6, scope: !7098)
!7108 = !DILocation(line: 744, column: 5, scope: !7085)
!7109 = !DILocation(line: 747, column: 2, scope: !7011)
!7110 = !DILocation(line: 748, column: 7, scope: !6875)
!7111 = !DILocation(line: 748, column: 13, scope: !6875)
!7112 = !DILocation(line: 748, column: 18, scope: !6875)
!7113 = !DILocation(line: 748, column: 24, scope: !6875)
!7114 = !DILocation(line: 748, column: 31, scope: !6875)
!7115 = !DILocation(line: 748, column: 2, scope: !6875)
!7116 = !DILocation(line: 749, column: 30, scope: !6875)
!7117 = !DILocation(line: 749, column: 36, scope: !6875)
!7118 = !DILocation(line: 749, column: 43, scope: !6875)
!7119 = !DILocation(line: 749, column: 42, scope: !6875)
!7120 = !DILocation(line: 749, column: 49, scope: !6875)
!7121 = !DILocation(line: 749, column: 2, scope: !6875)
!7122 = !DILocation(line: 750, column: 7, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 750, column: 6)
!7124 = !DILocation(line: 750, column: 6, scope: !7123)
!7125 = !DILocation(line: 750, column: 13, scope: !7123)
!7126 = !DILocation(line: 750, column: 6, scope: !6875)
!7127 = !DILocation(line: 751, column: 3, scope: !7123)
!7128 = !DILocation(line: 751, column: 9, scope: !7123)
!7129 = !DILocation(line: 751, column: 13, scope: !7123)
!7130 = !DILocation(line: 752, column: 7, scope: !6875)
!7131 = !DILocation(line: 752, column: 13, scope: !6875)
!7132 = !DILocation(line: 752, column: 18, scope: !6875)
!7133 = !DILocation(line: 752, column: 24, scope: !6875)
!7134 = !DILocation(line: 752, column: 31, scope: !6875)
!7135 = !DILocation(line: 752, column: 2, scope: !6875)
!7136 = !DILocation(line: 757, column: 2, scope: !6875)
!7137 = !DILocation(line: 757, column: 8, scope: !6875)
!7138 = !DILocation(line: 757, column: 25, scope: !6875)
!7139 = !DILocation(line: 758, column: 6, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 758, column: 6)
!7141 = !DILocation(line: 758, column: 6, scope: !6875)
!7142 = !DILocation(line: 759, column: 3, scope: !7140)
!7143 = !DILocation(line: 759, column: 9, scope: !7140)
!7144 = !DILocation(line: 759, column: 26, scope: !7140)
!7145 = !DILocation(line: 760, column: 6, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 760, column: 6)
!7147 = !DILocation(line: 760, column: 20, scope: !7146)
!7148 = !DILocation(line: 760, column: 23, scope: !7146)
!7149 = !DILocation(line: 760, column: 6, scope: !6875)
!7150 = !DILocation(line: 761, column: 3, scope: !7146)
!7151 = !DILocation(line: 761, column: 9, scope: !7146)
!7152 = !DILocation(line: 761, column: 26, scope: !7146)
!7153 = !DILocation(line: 763, column: 2, scope: !6875)
!7154 = !DILocation(line: 763, column: 8, scope: !6875)
!7155 = !DILocation(line: 763, column: 27, scope: !6875)
!7156 = !DILocation(line: 765, column: 6, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 765, column: 6)
!7158 = !DILocation(line: 765, column: 6, scope: !6875)
!7159 = !DILocation(line: 766, column: 3, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7157, file: !3, line: 765, column: 21)
!7161 = !DILocation(line: 766, column: 9, scope: !7160)
!7162 = !DILocation(line: 766, column: 28, scope: !7160)
!7163 = !DILocation(line: 767, column: 3, scope: !7160)
!7164 = !DILocation(line: 767, column: 9, scope: !7160)
!7165 = !DILocation(line: 767, column: 26, scope: !7160)
!7166 = !DILocation(line: 772, column: 7, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 772, column: 7)
!7168 = !DILocation(line: 772, column: 7, scope: !7160)
!7169 = !DILocation(line: 773, column: 4, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 772, column: 22)
!7171 = !DILocation(line: 773, column: 10, scope: !7170)
!7172 = !DILocation(line: 773, column: 29, scope: !7170)
!7173 = !DILocation(line: 777, column: 4, scope: !7170)
!7174 = !DILocation(line: 777, column: 10, scope: !7170)
!7175 = !DILocation(line: 777, column: 27, scope: !7170)
!7176 = !DILocation(line: 781, column: 3, scope: !7170)
!7177 = !DILocation(line: 782, column: 2, scope: !7160)
!7178 = !DILocation(line: 783, column: 6, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 783, column: 6)
!7180 = !DILocation(line: 783, column: 12, scope: !7179)
!7181 = !DILocation(line: 783, column: 19, scope: !7179)
!7182 = !DILocation(line: 783, column: 6, scope: !6875)
!7183 = !DILocation(line: 784, column: 29, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 783, column: 30)
!7185 = !DILocation(line: 784, column: 35, scope: !7184)
!7186 = !DILocation(line: 784, column: 43, scope: !7184)
!7187 = !DILocation(line: 784, column: 3, scope: !7184)
!7188 = !DILocation(line: 785, column: 30, scope: !7184)
!7189 = !DILocation(line: 785, column: 36, scope: !7184)
!7190 = !DILocation(line: 785, column: 44, scope: !7184)
!7191 = !DILocation(line: 785, column: 3, scope: !7184)
!7192 = !DILocation(line: 786, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 786, column: 7)
!7194 = !DILocation(line: 786, column: 7, scope: !7184)
!7195 = !DILocation(line: 788, column: 6, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 786, column: 20)
!7197 = !DILocation(line: 788, column: 12, scope: !7196)
!7198 = !DILocation(line: 787, column: 4, scope: !7196)
!7199 = !DILocation(line: 789, column: 3, scope: !7196)
!7200 = !DILocation(line: 791, column: 6, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 789, column: 10)
!7202 = !DILocation(line: 791, column: 12, scope: !7201)
!7203 = !DILocation(line: 790, column: 4, scope: !7201)
!7204 = !DILocation(line: 793, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 793, column: 7)
!7206 = !DILocation(line: 793, column: 7, scope: !7184)
!7207 = !DILocation(line: 795, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 793, column: 21)
!7209 = !DILocation(line: 795, column: 12, scope: !7208)
!7210 = !DILocation(line: 794, column: 4, scope: !7208)
!7211 = !DILocation(line: 796, column: 3, scope: !7208)
!7212 = !DILocation(line: 798, column: 6, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 796, column: 10)
!7214 = !DILocation(line: 798, column: 12, scope: !7213)
!7215 = !DILocation(line: 797, column: 4, scope: !7213)
!7216 = !DILocation(line: 800, column: 2, scope: !7184)
!7217 = !DILocation(line: 803, column: 7, scope: !6875)
!7218 = !DILocation(line: 803, column: 12, scope: !6875)
!7219 = !DILocation(line: 803, column: 18, scope: !6875)
!7220 = !DILocation(line: 803, column: 25, scope: !6875)
!7221 = !DILocation(line: 803, column: 2, scope: !6875)
!7222 = !DILocation(line: 804, column: 7, scope: !6875)
!7223 = !DILocation(line: 804, column: 13, scope: !6875)
!7224 = !DILocation(line: 804, column: 19, scope: !6875)
!7225 = !DILocation(line: 804, column: 26, scope: !6875)
!7226 = !DILocation(line: 804, column: 2, scope: !6875)
!7227 = !DILocation(line: 805, column: 1, scope: !6875)
!7228 = distinct !DISubprogram(name: "kasan_check_write", scope: !7229, file: !7229, line: 38, type: !7230, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7229 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!482, !6799, !7}
!7232 = !DILocalVariable(name: "p", arg: 1, scope: !7228, file: !7229, line: 38, type: !6799)
!7233 = !DILocation(line: 38, column: 59, scope: !7228)
!7234 = !DILocalVariable(name: "size", arg: 2, scope: !7228, file: !7229, line: 38, type: !7)
!7235 = !DILocation(line: 38, column: 75, scope: !7228)
!7236 = !DILocation(line: 40, column: 2, scope: !7228)
!7237 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7238, file: !7238, line: 178, type: !7239, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7238 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7239 = !DISubroutineType(types: !7240)
!7240 = !{null, !6799, !321, !113}
!7241 = !DILocalVariable(name: "ptr", arg: 1, scope: !7237, file: !7238, line: 178, type: !6799)
!7242 = !DILocation(line: 178, column: 60, scope: !7237)
!7243 = !DILocalVariable(name: "size", arg: 2, scope: !7237, file: !7238, line: 178, type: !321)
!7244 = !DILocation(line: 178, column: 72, scope: !7237)
!7245 = !DILocalVariable(name: "type", arg: 3, scope: !7237, file: !7238, line: 179, type: !113)
!7246 = !DILocation(line: 179, column: 15, scope: !7237)
!7247 = !DILocation(line: 179, column: 23, scope: !7237)
!7248 = distinct !DISubprogram(name: "mxser_set_baud", scope: !3, file: !3, line: 568, type: !7249, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!113, !213, !309}
!7251 = !DILocalVariable(name: "tty", arg: 1, scope: !7248, file: !3, line: 568, type: !213)
!7252 = !DILocation(line: 568, column: 46, scope: !7248)
!7253 = !DILocalVariable(name: "newspd", arg: 2, scope: !7248, file: !3, line: 568, type: !309)
!7254 = !DILocation(line: 568, column: 56, scope: !7248)
!7255 = !DILocalVariable(name: "info", scope: !7248, file: !3, line: 570, type: !114)
!7256 = !DILocation(line: 570, column: 21, scope: !7248)
!7257 = !DILocation(line: 570, column: 28, scope: !7248)
!7258 = !DILocation(line: 570, column: 33, scope: !7248)
!7259 = !DILocalVariable(name: "quot", scope: !7248, file: !3, line: 571, type: !7)
!7260 = !DILocation(line: 571, column: 15, scope: !7248)
!7261 = !DILocalVariable(name: "baud", scope: !7248, file: !3, line: 571, type: !7)
!7262 = !DILocation(line: 571, column: 25, scope: !7248)
!7263 = !DILocalVariable(name: "cval", scope: !7248, file: !3, line: 572, type: !419)
!7264 = !DILocation(line: 572, column: 16, scope: !7248)
!7265 = !DILocalVariable(name: "timeout", scope: !7248, file: !3, line: 573, type: !413)
!7266 = !DILocation(line: 573, column: 6, scope: !7248)
!7267 = !DILocation(line: 575, column: 7, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 575, column: 6)
!7269 = !DILocation(line: 575, column: 13, scope: !7268)
!7270 = !DILocation(line: 575, column: 6, scope: !7248)
!7271 = !DILocation(line: 576, column: 3, scope: !7268)
!7272 = !DILocation(line: 578, column: 6, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 578, column: 6)
!7274 = !DILocation(line: 578, column: 15, scope: !7273)
!7275 = !DILocation(line: 578, column: 21, scope: !7273)
!7276 = !DILocation(line: 578, column: 13, scope: !7273)
!7277 = !DILocation(line: 578, column: 6, scope: !7248)
!7278 = !DILocation(line: 579, column: 3, scope: !7273)
!7279 = !DILocation(line: 581, column: 6, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 581, column: 6)
!7281 = !DILocation(line: 581, column: 13, scope: !7280)
!7282 = !DILocation(line: 581, column: 6, scope: !7248)
!7283 = !DILocation(line: 582, column: 14, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 581, column: 21)
!7285 = !DILocation(line: 582, column: 20, scope: !7284)
!7286 = !DILocation(line: 582, column: 12, scope: !7284)
!7287 = !DILocation(line: 582, column: 30, scope: !7284)
!7288 = !DILocation(line: 582, column: 8, scope: !7284)
!7289 = !DILocation(line: 583, column: 24, scope: !7284)
!7290 = !DILocation(line: 583, column: 3, scope: !7284)
!7291 = !DILocation(line: 584, column: 2, scope: !7284)
!7292 = !DILocation(line: 584, column: 13, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 584, column: 13)
!7294 = !DILocation(line: 584, column: 13, scope: !7280)
!7295 = !DILocation(line: 585, column: 10, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 584, column: 21)
!7297 = !DILocation(line: 585, column: 16, scope: !7296)
!7298 = !DILocation(line: 585, column: 28, scope: !7296)
!7299 = !DILocation(line: 585, column: 26, scope: !7296)
!7300 = !DILocation(line: 585, column: 8, scope: !7296)
!7301 = !DILocation(line: 586, column: 7, scope: !7302)
!7302 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 586, column: 7)
!7303 = !DILocation(line: 586, column: 12, scope: !7302)
!7304 = !DILocation(line: 586, column: 7, scope: !7296)
!7305 = !DILocation(line: 587, column: 9, scope: !7302)
!7306 = !DILocation(line: 587, column: 4, scope: !7302)
!7307 = !DILocation(line: 588, column: 10, scope: !7296)
!7308 = !DILocation(line: 588, column: 16, scope: !7296)
!7309 = !DILocation(line: 588, column: 26, scope: !7296)
!7310 = !DILocation(line: 588, column: 25, scope: !7296)
!7311 = !DILocation(line: 588, column: 8, scope: !7296)
!7312 = !DILocation(line: 589, column: 24, scope: !7296)
!7313 = !DILocation(line: 589, column: 29, scope: !7296)
!7314 = !DILocation(line: 589, column: 35, scope: !7296)
!7315 = !DILocation(line: 589, column: 3, scope: !7296)
!7316 = !DILocation(line: 590, column: 2, scope: !7296)
!7317 = !DILocation(line: 591, column: 8, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 590, column: 9)
!7319 = !DILocation(line: 598, column: 17, scope: !7248)
!7320 = !DILocation(line: 598, column: 23, scope: !7248)
!7321 = !DILocation(line: 598, column: 12, scope: !7248)
!7322 = !DILocation(line: 598, column: 38, scope: !7248)
!7323 = !DILocation(line: 598, column: 43, scope: !7248)
!7324 = !DILocation(line: 598, column: 50, scope: !7248)
!7325 = !DILocation(line: 598, column: 48, scope: !7248)
!7326 = !DILocation(line: 598, column: 10, scope: !7248)
!7327 = !DILocalVariable(name: "__base", scope: !7328, file: !3, line: 599, type: !549)
!7328 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 599, column: 2)
!7329 = !DILocation(line: 599, column: 2, scope: !7328)
!7330 = !DILocalVariable(name: "__rem", scope: !7328, file: !3, line: 599, type: !549)
!7331 = !DILocation(line: 600, column: 18, scope: !7248)
!7332 = !DILocation(line: 600, column: 26, scope: !7248)
!7333 = !DILocation(line: 600, column: 2, scope: !7248)
!7334 = !DILocation(line: 600, column: 8, scope: !7248)
!7335 = !DILocation(line: 600, column: 16, scope: !7248)
!7336 = !DILocation(line: 602, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 602, column: 6)
!7338 = !DILocation(line: 602, column: 6, scope: !7248)
!7339 = !DILocation(line: 603, column: 3, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 602, column: 12)
!7341 = !DILocation(line: 603, column: 9, scope: !7340)
!7342 = !DILocation(line: 603, column: 13, scope: !7340)
!7343 = !DILocation(line: 604, column: 8, scope: !7340)
!7344 = !DILocation(line: 604, column: 14, scope: !7340)
!7345 = !DILocation(line: 604, column: 19, scope: !7340)
!7346 = !DILocation(line: 604, column: 25, scope: !7340)
!7347 = !DILocation(line: 604, column: 32, scope: !7340)
!7348 = !DILocation(line: 604, column: 3, scope: !7340)
!7349 = !DILocation(line: 605, column: 2, scope: !7340)
!7350 = !DILocation(line: 606, column: 3, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 605, column: 9)
!7352 = !DILocation(line: 606, column: 9, scope: !7351)
!7353 = !DILocation(line: 606, column: 13, scope: !7351)
!7354 = !DILocation(line: 607, column: 8, scope: !7351)
!7355 = !DILocation(line: 607, column: 14, scope: !7351)
!7356 = !DILocation(line: 607, column: 19, scope: !7351)
!7357 = !DILocation(line: 607, column: 25, scope: !7351)
!7358 = !DILocation(line: 607, column: 32, scope: !7351)
!7359 = !DILocation(line: 607, column: 3, scope: !7351)
!7360 = !DILocation(line: 608, column: 3, scope: !7351)
!7361 = !DILocation(line: 611, column: 13, scope: !7248)
!7362 = !DILocation(line: 611, column: 19, scope: !7248)
!7363 = !DILocation(line: 611, column: 26, scope: !7248)
!7364 = !DILocation(line: 611, column: 9, scope: !7248)
!7365 = !DILocation(line: 611, column: 7, scope: !7248)
!7366 = !DILocation(line: 613, column: 7, scope: !7248)
!7367 = !DILocation(line: 613, column: 12, scope: !7248)
!7368 = !DILocation(line: 613, column: 29, scope: !7248)
!7369 = !DILocation(line: 613, column: 35, scope: !7248)
!7370 = !DILocation(line: 613, column: 42, scope: !7248)
!7371 = !DILocation(line: 613, column: 2, scope: !7248)
!7372 = !DILocation(line: 615, column: 7, scope: !7248)
!7373 = !DILocation(line: 615, column: 12, scope: !7248)
!7374 = !DILocation(line: 615, column: 20, scope: !7248)
!7375 = !DILocation(line: 615, column: 26, scope: !7248)
!7376 = !DILocation(line: 615, column: 33, scope: !7248)
!7377 = !DILocation(line: 615, column: 2, scope: !7248)
!7378 = !DILocation(line: 616, column: 7, scope: !7248)
!7379 = !DILocation(line: 616, column: 12, scope: !7248)
!7380 = !DILocation(line: 616, column: 18, scope: !7248)
!7381 = !DILocation(line: 616, column: 24, scope: !7248)
!7382 = !DILocation(line: 616, column: 31, scope: !7248)
!7383 = !DILocation(line: 616, column: 2, scope: !7248)
!7384 = !DILocation(line: 617, column: 7, scope: !7248)
!7385 = !DILocation(line: 617, column: 13, scope: !7248)
!7386 = !DILocation(line: 617, column: 19, scope: !7248)
!7387 = !DILocation(line: 617, column: 26, scope: !7248)
!7388 = !DILocation(line: 617, column: 2, scope: !7248)
!7389 = !DILocation(line: 620, column: 6, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7248, file: !3, line: 620, column: 6)
!7391 = !DILocation(line: 620, column: 18, scope: !7390)
!7392 = !DILocation(line: 620, column: 6, scope: !7248)
!7393 = !DILocation(line: 621, column: 10, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 620, column: 29)
!7395 = !DILocation(line: 621, column: 16, scope: !7394)
!7396 = !DILocation(line: 621, column: 28, scope: !7394)
!7397 = !DILocation(line: 621, column: 26, scope: !7394)
!7398 = !DILocation(line: 621, column: 8, scope: !7394)
!7399 = !DILocation(line: 622, column: 8, scope: !7394)
!7400 = !DILocation(line: 623, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 623, column: 7)
!7402 = !DILocation(line: 623, column: 14, scope: !7401)
!7403 = !DILocation(line: 623, column: 12, scope: !7401)
!7404 = !DILocation(line: 623, column: 23, scope: !7401)
!7405 = !DILocation(line: 623, column: 30, scope: !7401)
!7406 = !DILocation(line: 623, column: 21, scope: !7401)
!7407 = !DILocation(line: 623, column: 7, scope: !7394)
!7408 = !DILocation(line: 624, column: 12, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 623, column: 35)
!7410 = !DILocation(line: 624, column: 9, scope: !7409)
!7411 = !DILocation(line: 625, column: 8, scope: !7409)
!7412 = !DILocation(line: 626, column: 3, scope: !7409)
!7413 = !DILocation(line: 627, column: 12, scope: !7401)
!7414 = !DILocation(line: 627, column: 9, scope: !7401)
!7415 = !DILocation(line: 629, column: 29, scope: !7394)
!7416 = !DILocation(line: 629, column: 35, scope: !7394)
!7417 = !DILocation(line: 629, column: 43, scope: !7394)
!7418 = !DILocation(line: 629, column: 3, scope: !7394)
!7419 = !DILocation(line: 630, column: 2, scope: !7394)
!7420 = !DILocation(line: 632, column: 29, scope: !7390)
!7421 = !DILocation(line: 632, column: 35, scope: !7390)
!7422 = !DILocation(line: 632, column: 3, scope: !7390)
!7423 = !DILocation(line: 634, column: 2, scope: !7248)
!7424 = !DILocation(line: 635, column: 1, scope: !7248)
!7425 = distinct !DISubprogram(name: "tty_get_baud_rate", scope: !119, file: !119, line: 538, type: !7426, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!3885, !213}
!7428 = !DILocalVariable(name: "tty", arg: 1, scope: !7425, file: !119, line: 538, type: !213)
!7429 = !DILocation(line: 538, column: 60, scope: !7425)
!7430 = !DILocation(line: 540, column: 32, scope: !7425)
!7431 = !DILocation(line: 540, column: 37, scope: !7425)
!7432 = !DILocation(line: 540, column: 9, scope: !7425)
!7433 = !DILocation(line: 540, column: 2, scope: !7425)
!7434 = distinct !DISubprogram(name: "mxser_set_must_fifo_value", scope: !3, file: !3, line: 354, type: !5874, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7435 = !DILocalVariable(name: "info", arg: 1, scope: !7434, file: !3, line: 354, type: !114)
!7436 = !DILocation(line: 354, column: 58, scope: !7434)
!7437 = !DILocalVariable(name: "oldlcr", scope: !7434, file: !3, line: 356, type: !1361)
!7438 = !DILocation(line: 356, column: 5, scope: !7434)
!7439 = !DILocalVariable(name: "efr", scope: !7434, file: !3, line: 357, type: !1361)
!7440 = !DILocation(line: 357, column: 5, scope: !7434)
!7441 = !DILocation(line: 359, column: 15, scope: !7434)
!7442 = !DILocation(line: 359, column: 21, scope: !7434)
!7443 = !DILocation(line: 359, column: 28, scope: !7434)
!7444 = !DILocation(line: 359, column: 11, scope: !7434)
!7445 = !DILocation(line: 359, column: 9, scope: !7434)
!7446 = !DILocation(line: 360, column: 33, scope: !7434)
!7447 = !DILocation(line: 360, column: 39, scope: !7434)
!7448 = !DILocation(line: 360, column: 46, scope: !7434)
!7449 = !DILocation(line: 360, column: 2, scope: !7434)
!7450 = !DILocation(line: 362, column: 12, scope: !7434)
!7451 = !DILocation(line: 362, column: 18, scope: !7434)
!7452 = !DILocation(line: 362, column: 25, scope: !7434)
!7453 = !DILocation(line: 362, column: 8, scope: !7434)
!7454 = !DILocation(line: 362, column: 6, scope: !7434)
!7455 = !DILocation(line: 363, column: 6, scope: !7434)
!7456 = !DILocation(line: 364, column: 6, scope: !7434)
!7457 = !DILocation(line: 366, column: 7, scope: !7434)
!7458 = !DILocation(line: 366, column: 12, scope: !7434)
!7459 = !DILocation(line: 366, column: 18, scope: !7434)
!7460 = !DILocation(line: 366, column: 25, scope: !7434)
!7461 = !DILocation(line: 366, column: 2, scope: !7434)
!7462 = !DILocation(line: 367, column: 11, scope: !7434)
!7463 = !DILocation(line: 367, column: 17, scope: !7434)
!7464 = !DILocation(line: 367, column: 7, scope: !7434)
!7465 = !DILocation(line: 367, column: 32, scope: !7434)
!7466 = !DILocation(line: 367, column: 38, scope: !7434)
!7467 = !DILocation(line: 367, column: 45, scope: !7434)
!7468 = !DILocation(line: 367, column: 2, scope: !7434)
!7469 = !DILocation(line: 368, column: 11, scope: !7434)
!7470 = !DILocation(line: 368, column: 17, scope: !7434)
!7471 = !DILocation(line: 368, column: 7, scope: !7434)
!7472 = !DILocation(line: 368, column: 29, scope: !7434)
!7473 = !DILocation(line: 368, column: 35, scope: !7434)
!7474 = !DILocation(line: 368, column: 42, scope: !7434)
!7475 = !DILocation(line: 368, column: 2, scope: !7434)
!7476 = !DILocation(line: 369, column: 11, scope: !7434)
!7477 = !DILocation(line: 369, column: 17, scope: !7434)
!7478 = !DILocation(line: 369, column: 7, scope: !7434)
!7479 = !DILocation(line: 369, column: 31, scope: !7434)
!7480 = !DILocation(line: 369, column: 37, scope: !7434)
!7481 = !DILocation(line: 369, column: 44, scope: !7434)
!7482 = !DILocation(line: 369, column: 2, scope: !7434)
!7483 = !DILocation(line: 370, column: 7, scope: !7434)
!7484 = !DILocation(line: 370, column: 15, scope: !7434)
!7485 = !DILocation(line: 370, column: 21, scope: !7434)
!7486 = !DILocation(line: 370, column: 28, scope: !7434)
!7487 = !DILocation(line: 370, column: 2, scope: !7434)
!7488 = !DILocation(line: 371, column: 1, scope: !7434)
!7489 = distinct !DISubprogram(name: "tty_port_set_cts_flow", scope: !119, file: !119, line: 617, type: !7490, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{null, !3897, !482}
!7492 = !DILocalVariable(name: "port", arg: 1, scope: !7489, file: !119, line: 617, type: !3897)
!7493 = !DILocation(line: 617, column: 59, scope: !7489)
!7494 = !DILocalVariable(name: "val", arg: 2, scope: !7489, file: !119, line: 617, type: !482)
!7495 = !DILocation(line: 617, column: 70, scope: !7489)
!7496 = !DILocation(line: 619, column: 6, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7489, file: !119, line: 619, column: 6)
!7498 = !DILocation(line: 619, column: 6, scope: !7489)
!7499 = !DILocation(line: 620, column: 31, scope: !7497)
!7500 = !DILocation(line: 620, column: 37, scope: !7497)
!7501 = !DILocation(line: 620, column: 3, scope: !7497)
!7502 = !DILocation(line: 622, column: 33, scope: !7497)
!7503 = !DILocation(line: 622, column: 39, scope: !7497)
!7504 = !DILocation(line: 622, column: 3, scope: !7497)
!7505 = !DILocation(line: 623, column: 1, scope: !7489)
!7506 = distinct !DISubprogram(name: "tty_port_set_check_carrier", scope: !119, file: !119, line: 643, type: !7490, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7507 = !DILocalVariable(name: "port", arg: 1, scope: !7506, file: !119, line: 643, type: !3897)
!7508 = !DILocation(line: 643, column: 64, scope: !7506)
!7509 = !DILocalVariable(name: "val", arg: 2, scope: !7506, file: !119, line: 643, type: !482)
!7510 = !DILocation(line: 643, column: 75, scope: !7506)
!7511 = !DILocation(line: 645, column: 6, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7506, file: !119, line: 645, column: 6)
!7513 = !DILocation(line: 645, column: 6, scope: !7506)
!7514 = !DILocation(line: 646, column: 31, scope: !7512)
!7515 = !DILocation(line: 646, column: 37, scope: !7512)
!7516 = !DILocation(line: 646, column: 3, scope: !7512)
!7517 = !DILocation(line: 648, column: 33, scope: !7512)
!7518 = !DILocation(line: 648, column: 39, scope: !7512)
!7519 = !DILocation(line: 648, column: 3, scope: !7512)
!7520 = !DILocation(line: 649, column: 1, scope: !7506)
!7521 = distinct !DISubprogram(name: "mxser_set_must_xoff1_value", scope: !3, file: !3, line: 337, type: !5770, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7522 = !DILocalVariable(name: "baseio", arg: 1, scope: !7521, file: !3, line: 337, type: !145)
!7523 = !DILocation(line: 337, column: 54, scope: !7521)
!7524 = !DILocalVariable(name: "value", arg: 2, scope: !7521, file: !3, line: 337, type: !1361)
!7525 = !DILocation(line: 337, column: 65, scope: !7521)
!7526 = !DILocalVariable(name: "oldlcr", scope: !7521, file: !3, line: 339, type: !1361)
!7527 = !DILocation(line: 339, column: 5, scope: !7521)
!7528 = !DILocalVariable(name: "efr", scope: !7521, file: !3, line: 340, type: !1361)
!7529 = !DILocation(line: 340, column: 5, scope: !7521)
!7530 = !DILocation(line: 342, column: 15, scope: !7521)
!7531 = !DILocation(line: 342, column: 22, scope: !7521)
!7532 = !DILocation(line: 342, column: 11, scope: !7521)
!7533 = !DILocation(line: 342, column: 9, scope: !7521)
!7534 = !DILocation(line: 343, column: 33, scope: !7521)
!7535 = !DILocation(line: 343, column: 40, scope: !7521)
!7536 = !DILocation(line: 343, column: 2, scope: !7521)
!7537 = !DILocation(line: 345, column: 12, scope: !7521)
!7538 = !DILocation(line: 345, column: 19, scope: !7521)
!7539 = !DILocation(line: 345, column: 8, scope: !7521)
!7540 = !DILocation(line: 345, column: 6, scope: !7521)
!7541 = !DILocation(line: 346, column: 6, scope: !7521)
!7542 = !DILocation(line: 347, column: 6, scope: !7521)
!7543 = !DILocation(line: 349, column: 7, scope: !7521)
!7544 = !DILocation(line: 349, column: 12, scope: !7521)
!7545 = !DILocation(line: 349, column: 19, scope: !7521)
!7546 = !DILocation(line: 349, column: 2, scope: !7521)
!7547 = !DILocation(line: 350, column: 7, scope: !7521)
!7548 = !DILocation(line: 350, column: 14, scope: !7521)
!7549 = !DILocation(line: 350, column: 21, scope: !7521)
!7550 = !DILocation(line: 350, column: 2, scope: !7521)
!7551 = !DILocation(line: 351, column: 7, scope: !7521)
!7552 = !DILocation(line: 351, column: 15, scope: !7521)
!7553 = !DILocation(line: 351, column: 22, scope: !7521)
!7554 = !DILocation(line: 351, column: 2, scope: !7521)
!7555 = !DILocation(line: 352, column: 1, scope: !7521)
!7556 = distinct !DISubprogram(name: "mxser_enable_must_rx_software_flow_control", scope: !3, file: !3, line: 455, type: !5733, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7557 = !DILocalVariable(name: "baseio", arg: 1, scope: !7556, file: !3, line: 455, type: !145)
!7558 = !DILocation(line: 455, column: 70, scope: !7556)
!7559 = !DILocalVariable(name: "oldlcr", scope: !7556, file: !3, line: 457, type: !1361)
!7560 = !DILocation(line: 457, column: 5, scope: !7556)
!7561 = !DILocalVariable(name: "efr", scope: !7556, file: !3, line: 458, type: !1361)
!7562 = !DILocation(line: 458, column: 5, scope: !7556)
!7563 = !DILocation(line: 460, column: 15, scope: !7556)
!7564 = !DILocation(line: 460, column: 22, scope: !7556)
!7565 = !DILocation(line: 460, column: 11, scope: !7556)
!7566 = !DILocation(line: 460, column: 9, scope: !7556)
!7567 = !DILocation(line: 461, column: 33, scope: !7556)
!7568 = !DILocation(line: 461, column: 40, scope: !7556)
!7569 = !DILocation(line: 461, column: 2, scope: !7556)
!7570 = !DILocation(line: 463, column: 12, scope: !7556)
!7571 = !DILocation(line: 463, column: 19, scope: !7556)
!7572 = !DILocation(line: 463, column: 8, scope: !7556)
!7573 = !DILocation(line: 463, column: 6, scope: !7556)
!7574 = !DILocation(line: 464, column: 6, scope: !7556)
!7575 = !DILocation(line: 465, column: 6, scope: !7556)
!7576 = !DILocation(line: 467, column: 7, scope: !7556)
!7577 = !DILocation(line: 467, column: 12, scope: !7556)
!7578 = !DILocation(line: 467, column: 19, scope: !7556)
!7579 = !DILocation(line: 467, column: 2, scope: !7556)
!7580 = !DILocation(line: 468, column: 7, scope: !7556)
!7581 = !DILocation(line: 468, column: 15, scope: !7556)
!7582 = !DILocation(line: 468, column: 22, scope: !7556)
!7583 = !DILocation(line: 468, column: 2, scope: !7556)
!7584 = !DILocation(line: 469, column: 1, scope: !7556)
!7585 = distinct !DISubprogram(name: "mxser_disable_must_rx_software_flow_control", scope: !3, file: !3, line: 471, type: !5733, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7586 = !DILocalVariable(name: "baseio", arg: 1, scope: !7585, file: !3, line: 471, type: !145)
!7587 = !DILocation(line: 471, column: 71, scope: !7585)
!7588 = !DILocalVariable(name: "oldlcr", scope: !7585, file: !3, line: 473, type: !1361)
!7589 = !DILocation(line: 473, column: 5, scope: !7585)
!7590 = !DILocalVariable(name: "efr", scope: !7585, file: !3, line: 474, type: !1361)
!7591 = !DILocation(line: 474, column: 5, scope: !7585)
!7592 = !DILocation(line: 476, column: 15, scope: !7585)
!7593 = !DILocation(line: 476, column: 22, scope: !7585)
!7594 = !DILocation(line: 476, column: 11, scope: !7585)
!7595 = !DILocation(line: 476, column: 9, scope: !7585)
!7596 = !DILocation(line: 477, column: 33, scope: !7585)
!7597 = !DILocation(line: 477, column: 40, scope: !7585)
!7598 = !DILocation(line: 477, column: 2, scope: !7585)
!7599 = !DILocation(line: 479, column: 12, scope: !7585)
!7600 = !DILocation(line: 479, column: 19, scope: !7585)
!7601 = !DILocation(line: 479, column: 8, scope: !7585)
!7602 = !DILocation(line: 479, column: 6, scope: !7585)
!7603 = !DILocation(line: 480, column: 6, scope: !7585)
!7604 = !DILocation(line: 482, column: 7, scope: !7585)
!7605 = !DILocation(line: 482, column: 12, scope: !7585)
!7606 = !DILocation(line: 482, column: 19, scope: !7585)
!7607 = !DILocation(line: 482, column: 2, scope: !7585)
!7608 = !DILocation(line: 483, column: 7, scope: !7585)
!7609 = !DILocation(line: 483, column: 15, scope: !7585)
!7610 = !DILocation(line: 483, column: 22, scope: !7585)
!7611 = !DILocation(line: 483, column: 2, scope: !7585)
!7612 = !DILocation(line: 484, column: 1, scope: !7585)
!7613 = distinct !DISubprogram(name: "mxser_enable_must_tx_software_flow_control", scope: !3, file: !3, line: 424, type: !5733, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7614 = !DILocalVariable(name: "baseio", arg: 1, scope: !7613, file: !3, line: 424, type: !145)
!7615 = !DILocation(line: 424, column: 70, scope: !7613)
!7616 = !DILocalVariable(name: "oldlcr", scope: !7613, file: !3, line: 426, type: !1361)
!7617 = !DILocation(line: 426, column: 5, scope: !7613)
!7618 = !DILocalVariable(name: "efr", scope: !7613, file: !3, line: 427, type: !1361)
!7619 = !DILocation(line: 427, column: 5, scope: !7613)
!7620 = !DILocation(line: 429, column: 15, scope: !7613)
!7621 = !DILocation(line: 429, column: 22, scope: !7613)
!7622 = !DILocation(line: 429, column: 11, scope: !7613)
!7623 = !DILocation(line: 429, column: 9, scope: !7613)
!7624 = !DILocation(line: 430, column: 33, scope: !7613)
!7625 = !DILocation(line: 430, column: 40, scope: !7613)
!7626 = !DILocation(line: 430, column: 2, scope: !7613)
!7627 = !DILocation(line: 432, column: 12, scope: !7613)
!7628 = !DILocation(line: 432, column: 19, scope: !7613)
!7629 = !DILocation(line: 432, column: 8, scope: !7613)
!7630 = !DILocation(line: 432, column: 6, scope: !7613)
!7631 = !DILocation(line: 433, column: 6, scope: !7613)
!7632 = !DILocation(line: 434, column: 6, scope: !7613)
!7633 = !DILocation(line: 436, column: 7, scope: !7613)
!7634 = !DILocation(line: 436, column: 12, scope: !7613)
!7635 = !DILocation(line: 436, column: 19, scope: !7613)
!7636 = !DILocation(line: 436, column: 2, scope: !7613)
!7637 = !DILocation(line: 437, column: 7, scope: !7613)
!7638 = !DILocation(line: 437, column: 15, scope: !7613)
!7639 = !DILocation(line: 437, column: 22, scope: !7613)
!7640 = !DILocation(line: 437, column: 2, scope: !7613)
!7641 = !DILocation(line: 438, column: 1, scope: !7613)
!7642 = distinct !DISubprogram(name: "mxser_disable_must_tx_software_flow_control", scope: !3, file: !3, line: 440, type: !5733, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7643 = !DILocalVariable(name: "baseio", arg: 1, scope: !7642, file: !3, line: 440, type: !145)
!7644 = !DILocation(line: 440, column: 71, scope: !7642)
!7645 = !DILocalVariable(name: "oldlcr", scope: !7642, file: !3, line: 442, type: !1361)
!7646 = !DILocation(line: 442, column: 5, scope: !7642)
!7647 = !DILocalVariable(name: "efr", scope: !7642, file: !3, line: 443, type: !1361)
!7648 = !DILocation(line: 443, column: 5, scope: !7642)
!7649 = !DILocation(line: 445, column: 15, scope: !7642)
!7650 = !DILocation(line: 445, column: 22, scope: !7642)
!7651 = !DILocation(line: 445, column: 11, scope: !7642)
!7652 = !DILocation(line: 445, column: 9, scope: !7642)
!7653 = !DILocation(line: 446, column: 33, scope: !7642)
!7654 = !DILocation(line: 446, column: 40, scope: !7642)
!7655 = !DILocation(line: 446, column: 2, scope: !7642)
!7656 = !DILocation(line: 448, column: 12, scope: !7642)
!7657 = !DILocation(line: 448, column: 19, scope: !7642)
!7658 = !DILocation(line: 448, column: 8, scope: !7642)
!7659 = !DILocation(line: 448, column: 6, scope: !7642)
!7660 = !DILocation(line: 449, column: 6, scope: !7642)
!7661 = !DILocation(line: 451, column: 7, scope: !7642)
!7662 = !DILocation(line: 451, column: 12, scope: !7642)
!7663 = !DILocation(line: 451, column: 19, scope: !7642)
!7664 = !DILocation(line: 451, column: 2, scope: !7642)
!7665 = !DILocation(line: 452, column: 7, scope: !7642)
!7666 = !DILocation(line: 452, column: 15, scope: !7642)
!7667 = !DILocation(line: 452, column: 22, scope: !7642)
!7668 = !DILocation(line: 452, column: 2, scope: !7642)
!7669 = !DILocation(line: 453, column: 1, scope: !7642)
!7670 = distinct !DISubprogram(name: "mxser_set_must_enum_value", scope: !3, file: !3, line: 373, type: !5770, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7671 = !DILocalVariable(name: "baseio", arg: 1, scope: !7670, file: !3, line: 373, type: !145)
!7672 = !DILocation(line: 373, column: 53, scope: !7670)
!7673 = !DILocalVariable(name: "value", arg: 2, scope: !7670, file: !3, line: 373, type: !1361)
!7674 = !DILocation(line: 373, column: 64, scope: !7670)
!7675 = !DILocalVariable(name: "oldlcr", scope: !7670, file: !3, line: 375, type: !1361)
!7676 = !DILocation(line: 375, column: 5, scope: !7670)
!7677 = !DILocalVariable(name: "efr", scope: !7670, file: !3, line: 376, type: !1361)
!7678 = !DILocation(line: 376, column: 5, scope: !7670)
!7679 = !DILocation(line: 378, column: 15, scope: !7670)
!7680 = !DILocation(line: 378, column: 22, scope: !7670)
!7681 = !DILocation(line: 378, column: 11, scope: !7670)
!7682 = !DILocation(line: 378, column: 9, scope: !7670)
!7683 = !DILocation(line: 379, column: 33, scope: !7670)
!7684 = !DILocation(line: 379, column: 40, scope: !7670)
!7685 = !DILocation(line: 379, column: 2, scope: !7670)
!7686 = !DILocation(line: 381, column: 12, scope: !7670)
!7687 = !DILocation(line: 381, column: 19, scope: !7670)
!7688 = !DILocation(line: 381, column: 8, scope: !7670)
!7689 = !DILocation(line: 381, column: 6, scope: !7670)
!7690 = !DILocation(line: 382, column: 6, scope: !7670)
!7691 = !DILocation(line: 383, column: 6, scope: !7670)
!7692 = !DILocation(line: 385, column: 7, scope: !7670)
!7693 = !DILocation(line: 385, column: 12, scope: !7670)
!7694 = !DILocation(line: 385, column: 19, scope: !7670)
!7695 = !DILocation(line: 385, column: 2, scope: !7670)
!7696 = !DILocation(line: 386, column: 7, scope: !7670)
!7697 = !DILocation(line: 386, column: 14, scope: !7670)
!7698 = !DILocation(line: 386, column: 21, scope: !7670)
!7699 = !DILocation(line: 386, column: 2, scope: !7670)
!7700 = !DILocation(line: 387, column: 7, scope: !7670)
!7701 = !DILocation(line: 387, column: 15, scope: !7670)
!7702 = !DILocation(line: 387, column: 22, scope: !7670)
!7703 = !DILocation(line: 387, column: 2, scope: !7670)
!7704 = !DILocation(line: 388, column: 1, scope: !7670)
!7705 = distinct !DISubprogram(name: "tty_port_initialized", scope: !119, file: !119, line: 664, type: !7706, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7706 = !DISubroutineType(types: !7707)
!7707 = !{!482, !3897}
!7708 = !DILocalVariable(name: "port", arg: 1, scope: !7705, file: !119, line: 664, type: !3897)
!7709 = !DILocation(line: 664, column: 58, scope: !7705)
!7710 = !DILocation(line: 666, column: 41, scope: !7705)
!7711 = !DILocation(line: 666, column: 47, scope: !7705)
!7712 = !DILocation(line: 666, column: 9, scope: !7705)
!7713 = !DILocation(line: 666, column: 2, scope: !7705)
!7714 = distinct !DISubprogram(name: "mxser_receive_chars", scope: !3, file: !3, line: 2054, type: !7715, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!7715 = !DISubroutineType(types: !7716)
!7716 = !{null, !213, !114, !698}
!7717 = !DILocation(line: 352, column: 51, scope: !5987, inlinedAt: !7718)
!7718 = distinct !DILocation(line: 2153, column: 2, scope: !7714)
!7719 = !DILocation(line: 392, column: 53, scope: !5977, inlinedAt: !7720)
!7720 = distinct !DILocation(line: 2151, column: 2, scope: !7714)
!7721 = !DILocalVariable(name: "tty", arg: 1, scope: !7714, file: !3, line: 2054, type: !213)
!7722 = !DILocation(line: 2054, column: 52, scope: !7714)
!7723 = !DILocalVariable(name: "port", arg: 2, scope: !7714, file: !3, line: 2055, type: !114)
!7724 = !DILocation(line: 2055, column: 24, scope: !7714)
!7725 = !DILocalVariable(name: "status", arg: 3, scope: !7714, file: !3, line: 2055, type: !698)
!7726 = !DILocation(line: 2055, column: 35, scope: !7714)
!7727 = !DILocalVariable(name: "ch", scope: !7714, file: !3, line: 2057, type: !419)
!7728 = !DILocation(line: 2057, column: 16, scope: !7714)
!7729 = !DILocalVariable(name: "gdl", scope: !7714, file: !3, line: 2057, type: !419)
!7730 = !DILocation(line: 2057, column: 20, scope: !7714)
!7731 = !DILocalVariable(name: "ignored", scope: !7714, file: !3, line: 2058, type: !113)
!7732 = !DILocation(line: 2058, column: 6, scope: !7714)
!7733 = !DILocalVariable(name: "cnt", scope: !7714, file: !3, line: 2059, type: !113)
!7734 = !DILocation(line: 2059, column: 6, scope: !7714)
!7735 = !DILocalVariable(name: "recv_room", scope: !7714, file: !3, line: 2060, type: !113)
!7736 = !DILocation(line: 2060, column: 6, scope: !7714)
!7737 = !DILocalVariable(name: "max", scope: !7714, file: !3, line: 2061, type: !113)
!7738 = !DILocation(line: 2061, column: 6, scope: !7714)
!7739 = !DILocation(line: 2063, column: 14, scope: !7714)
!7740 = !DILocation(line: 2063, column: 19, scope: !7714)
!7741 = !DILocation(line: 2063, column: 12, scope: !7714)
!7742 = !DILocation(line: 2064, column: 6, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 2064, column: 6)
!7744 = !DILocation(line: 2064, column: 16, scope: !7743)
!7745 = !DILocation(line: 2064, column: 21, scope: !7743)
!7746 = !DILocation(line: 2064, column: 25, scope: !7743)
!7747 = !DILocation(line: 2064, column: 31, scope: !7743)
!7748 = !DILocation(line: 2064, column: 6, scope: !7714)
!7749 = !DILocation(line: 2065, column: 16, scope: !7743)
!7750 = !DILocation(line: 2065, column: 3, scope: !7743)
!7751 = !DILocation(line: 2066, column: 6, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 2066, column: 6)
!7753 = !DILocation(line: 2066, column: 12, scope: !7752)
!7754 = !DILocation(line: 2066, column: 19, scope: !7752)
!7755 = !DILocation(line: 2066, column: 29, scope: !7752)
!7756 = !DILocation(line: 2066, column: 6, scope: !7714)
!7757 = !DILocation(line: 2068, column: 8, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2068, column: 7)
!7759 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2066, column: 49)
!7760 = !DILocation(line: 2068, column: 7, scope: !7758)
!7761 = !DILocation(line: 2068, column: 15, scope: !7758)
!7762 = !DILocation(line: 2068, column: 7, scope: !7759)
!7763 = !DILocation(line: 2069, column: 4, scope: !7758)
!7764 = !DILocation(line: 2070, column: 7, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2070, column: 7)
!7766 = !DILocation(line: 2070, column: 13, scope: !7765)
!7767 = !DILocation(line: 2070, column: 20, scope: !7765)
!7768 = !DILocation(line: 2070, column: 30, scope: !7765)
!7769 = !DILocation(line: 2070, column: 54, scope: !7765)
!7770 = !DILocation(line: 2071, column: 7, scope: !7765)
!7771 = !DILocation(line: 2071, column: 6, scope: !7765)
!7772 = !DILocation(line: 2071, column: 14, scope: !7765)
!7773 = !DILocation(line: 2070, column: 7, scope: !7759)
!7774 = !DILocation(line: 2072, column: 4, scope: !7765)
!7775 = !DILocation(line: 2073, column: 8, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2073, column: 7)
!7777 = !DILocation(line: 2073, column: 7, scope: !7776)
!7778 = !DILocation(line: 2073, column: 15, scope: !7776)
!7779 = !DILocation(line: 2073, column: 7, scope: !7759)
!7780 = !DILocation(line: 2074, column: 4, scope: !7776)
!7781 = !DILocation(line: 2076, column: 13, scope: !7759)
!7782 = !DILocation(line: 2076, column: 19, scope: !7759)
!7783 = !DILocation(line: 2076, column: 26, scope: !7759)
!7784 = !DILocation(line: 2076, column: 9, scope: !7759)
!7785 = !DILocation(line: 2076, column: 7, scope: !7759)
!7786 = !DILocation(line: 2078, column: 7, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2078, column: 7)
!7788 = !DILocation(line: 2078, column: 13, scope: !7787)
!7789 = !DILocation(line: 2078, column: 20, scope: !7787)
!7790 = !DILocation(line: 2078, column: 30, scope: !7787)
!7791 = !DILocation(line: 2078, column: 7, scope: !7759)
!7792 = !DILocation(line: 2079, column: 8, scope: !7787)
!7793 = !DILocation(line: 2079, column: 4, scope: !7787)
!7794 = !DILocation(line: 2080, column: 7, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2080, column: 7)
!7796 = !DILocation(line: 2080, column: 14, scope: !7795)
!7797 = !DILocation(line: 2080, column: 11, scope: !7795)
!7798 = !DILocation(line: 2080, column: 7, scope: !7759)
!7799 = !DILocation(line: 2081, column: 9, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 2081, column: 8)
!7801 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2080, column: 25)
!7802 = !DILocation(line: 2081, column: 15, scope: !7800)
!7803 = !DILocation(line: 2081, column: 8, scope: !7801)
!7804 = !DILocation(line: 2082, column: 18, scope: !7800)
!7805 = !DILocation(line: 2082, column: 5, scope: !7800)
!7806 = !DILocation(line: 2083, column: 3, scope: !7801)
!7807 = !DILocation(line: 2084, column: 3, scope: !7759)
!7808 = !DILocation(line: 2084, column: 13, scope: !7759)
!7809 = !DILocation(line: 2085, column: 13, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 2084, column: 17)
!7811 = !DILocation(line: 2085, column: 19, scope: !7810)
!7812 = !DILocation(line: 2085, column: 26, scope: !7810)
!7813 = !DILocation(line: 2085, column: 9, scope: !7810)
!7814 = !DILocation(line: 2085, column: 7, scope: !7810)
!7815 = !DILocation(line: 2086, column: 26, scope: !7810)
!7816 = !DILocation(line: 2086, column: 32, scope: !7810)
!7817 = !DILocation(line: 2086, column: 38, scope: !7810)
!7818 = !DILocation(line: 2086, column: 4, scope: !7810)
!7819 = !DILocation(line: 2087, column: 7, scope: !7810)
!7820 = distinct !{!7820, !7807, !7821}
!7821 = !DILocation(line: 2088, column: 3, scope: !7759)
!7822 = !DILocation(line: 2089, column: 3, scope: !7759)
!7823 = !DILocation(line: 2066, column: 32, scope: !7752)
!7824 = !DILabel(scope: !7714, name: "intr_old", file: !3, line: 2091)
!7825 = !DILocation(line: 2091, column: 1, scope: !7714)
!7826 = !DILocation(line: 2093, column: 2, scope: !7714)
!7827 = !DILocation(line: 2094, column: 10, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2094, column: 7)
!7829 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 2093, column: 5)
!7830 = !DILocation(line: 2094, column: 13, scope: !7828)
!7831 = !DILocation(line: 2094, column: 7, scope: !7829)
!7832 = !DILocation(line: 2095, column: 4, scope: !7828)
!7833 = !DILocation(line: 2097, column: 12, scope: !7829)
!7834 = !DILocation(line: 2097, column: 18, scope: !7829)
!7835 = !DILocation(line: 2097, column: 25, scope: !7829)
!7836 = !DILocation(line: 2097, column: 8, scope: !7829)
!7837 = !DILocation(line: 2097, column: 6, scope: !7829)
!7838 = !DILocation(line: 2098, column: 7, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2098, column: 7)
!7840 = !DILocation(line: 2098, column: 13, scope: !7839)
!7841 = !DILocation(line: 2098, column: 20, scope: !7839)
!7842 = !DILocation(line: 2098, column: 30, scope: !7839)
!7843 = !DILocation(line: 2098, column: 35, scope: !7839)
!7844 = !DILocation(line: 2098, column: 34, scope: !7839)
!7845 = !DILocation(line: 2098, column: 42, scope: !7839)
!7846 = !DILocation(line: 2098, column: 7, scope: !7829)
!7847 = !DILocation(line: 2099, column: 15, scope: !7839)
!7848 = !DILocation(line: 2099, column: 21, scope: !7839)
!7849 = !DILocation(line: 2099, column: 28, scope: !7839)
!7850 = !DILocation(line: 2099, column: 4, scope: !7839)
!7851 = !DILocation(line: 2100, column: 14, scope: !7829)
!7852 = !DILocation(line: 2100, column: 20, scope: !7829)
!7853 = !DILocation(line: 2100, column: 4, scope: !7829)
!7854 = !DILocation(line: 2100, column: 11, scope: !7829)
!7855 = !DILocation(line: 2101, column: 8, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2101, column: 7)
!7857 = !DILocation(line: 2101, column: 7, scope: !7856)
!7858 = !DILocation(line: 2101, column: 17, scope: !7856)
!7859 = !DILocation(line: 2101, column: 23, scope: !7856)
!7860 = !DILocation(line: 2101, column: 15, scope: !7856)
!7861 = !DILocation(line: 2101, column: 7, scope: !7829)
!7862 = !DILocation(line: 2102, column: 8, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 2102, column: 8)
!7864 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2101, column: 43)
!7865 = !DILocation(line: 2102, column: 18, scope: !7863)
!7866 = !DILocation(line: 2102, column: 8, scope: !7864)
!7867 = !DILocation(line: 2103, column: 5, scope: !7863)
!7868 = !DILocation(line: 2104, column: 3, scope: !7864)
!7869 = !DILocalVariable(name: "flag", scope: !7870, file: !3, line: 2105, type: !238)
!7870 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 2104, column: 10)
!7871 = !DILocation(line: 2105, column: 9, scope: !7870)
!7872 = !DILocation(line: 2106, column: 9, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 2106, column: 8)
!7874 = !DILocation(line: 2106, column: 8, scope: !7873)
!7875 = !DILocation(line: 2106, column: 16, scope: !7873)
!7876 = !DILocation(line: 2106, column: 8, scope: !7870)
!7877 = !DILocation(line: 2107, column: 10, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 2107, column: 9)
!7879 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 2106, column: 36)
!7880 = !DILocation(line: 2107, column: 9, scope: !7878)
!7881 = !DILocation(line: 2107, column: 17, scope: !7878)
!7882 = !DILocation(line: 2107, column: 9, scope: !7879)
!7883 = !DILocation(line: 2108, column: 11, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 2107, column: 32)
!7885 = !DILocation(line: 2109, column: 6, scope: !7884)
!7886 = !DILocation(line: 2109, column: 12, scope: !7884)
!7887 = !DILocation(line: 2109, column: 19, scope: !7884)
!7888 = !DILocation(line: 2109, column: 22, scope: !7884)
!7889 = !DILocation(line: 2111, column: 10, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 2111, column: 10)
!7891 = !DILocation(line: 2111, column: 16, scope: !7890)
!7892 = !DILocation(line: 2111, column: 21, scope: !7890)
!7893 = !DILocation(line: 2111, column: 27, scope: !7890)
!7894 = !DILocation(line: 2111, column: 10, scope: !7884)
!7895 = !DILocation(line: 2112, column: 14, scope: !7890)
!7896 = !DILocation(line: 2112, column: 7, scope: !7890)
!7897 = !DILocation(line: 2113, column: 5, scope: !7884)
!7898 = !DILocation(line: 2113, column: 17, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7878, file: !3, line: 2113, column: 16)
!7900 = !DILocation(line: 2113, column: 16, scope: !7899)
!7901 = !DILocation(line: 2113, column: 24, scope: !7899)
!7902 = !DILocation(line: 2113, column: 16, scope: !7878)
!7903 = !DILocation(line: 2114, column: 11, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 2113, column: 39)
!7905 = !DILocation(line: 2115, column: 6, scope: !7904)
!7906 = !DILocation(line: 2115, column: 12, scope: !7904)
!7907 = !DILocation(line: 2115, column: 19, scope: !7904)
!7908 = !DILocation(line: 2115, column: 25, scope: !7904)
!7909 = !DILocation(line: 2116, column: 5, scope: !7904)
!7910 = !DILocation(line: 2116, column: 17, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 2116, column: 16)
!7912 = !DILocation(line: 2116, column: 16, scope: !7911)
!7913 = !DILocation(line: 2116, column: 24, scope: !7911)
!7914 = !DILocation(line: 2116, column: 16, scope: !7899)
!7915 = !DILocation(line: 2117, column: 11, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2116, column: 39)
!7917 = !DILocation(line: 2118, column: 6, scope: !7916)
!7918 = !DILocation(line: 2118, column: 12, scope: !7916)
!7919 = !DILocation(line: 2118, column: 19, scope: !7916)
!7920 = !DILocation(line: 2118, column: 24, scope: !7916)
!7921 = !DILocation(line: 2119, column: 5, scope: !7916)
!7922 = !DILocation(line: 2119, column: 17, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2119, column: 16)
!7924 = !DILocation(line: 2119, column: 16, scope: !7923)
!7925 = !DILocation(line: 2119, column: 24, scope: !7923)
!7926 = !DILocation(line: 2119, column: 16, scope: !7911)
!7927 = !DILocation(line: 2120, column: 11, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2119, column: 39)
!7929 = !DILocation(line: 2121, column: 6, scope: !7928)
!7930 = !DILocation(line: 2121, column: 12, scope: !7928)
!7931 = !DILocation(line: 2121, column: 19, scope: !7928)
!7932 = !DILocation(line: 2121, column: 26, scope: !7928)
!7933 = !DILocation(line: 2122, column: 5, scope: !7928)
!7934 = !DILocation(line: 2123, column: 11, scope: !7923)
!7935 = !DILocation(line: 2124, column: 4, scope: !7879)
!7936 = !DILocation(line: 2125, column: 26, scope: !7870)
!7937 = !DILocation(line: 2125, column: 32, scope: !7870)
!7938 = !DILocation(line: 2125, column: 38, scope: !7870)
!7939 = !DILocation(line: 2125, column: 42, scope: !7870)
!7940 = !DILocation(line: 2125, column: 4, scope: !7870)
!7941 = !DILocation(line: 2126, column: 7, scope: !7870)
!7942 = !DILocation(line: 2127, column: 8, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 2127, column: 8)
!7944 = !DILocation(line: 2127, column: 15, scope: !7943)
!7945 = !DILocation(line: 2127, column: 12, scope: !7943)
!7946 = !DILocation(line: 2127, column: 8, scope: !7870)
!7947 = !DILocation(line: 2128, column: 10, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 2128, column: 9)
!7949 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2127, column: 26)
!7950 = !DILocation(line: 2128, column: 16, scope: !7948)
!7951 = !DILocation(line: 2128, column: 9, scope: !7949)
!7952 = !DILocation(line: 2129, column: 19, scope: !7948)
!7953 = !DILocation(line: 2129, column: 6, scope: !7948)
!7954 = !DILocation(line: 2130, column: 5, scope: !7949)
!7955 = !DILocation(line: 2135, column: 7, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2135, column: 7)
!7957 = !DILocation(line: 2135, column: 13, scope: !7956)
!7958 = !DILocation(line: 2135, column: 20, scope: !7956)
!7959 = !DILocation(line: 2135, column: 7, scope: !7829)
!7960 = !DILocation(line: 2136, column: 4, scope: !7956)
!7961 = !DILocation(line: 2138, column: 17, scope: !7829)
!7962 = !DILocation(line: 2138, column: 23, scope: !7829)
!7963 = !DILocation(line: 2138, column: 30, scope: !7829)
!7964 = !DILocation(line: 2138, column: 13, scope: !7829)
!7965 = !DILocation(line: 2138, column: 4, scope: !7829)
!7966 = !DILocation(line: 2138, column: 11, scope: !7829)
!7967 = !DILocation(line: 2139, column: 2, scope: !7829)
!7968 = !DILocation(line: 2139, column: 12, scope: !7714)
!7969 = !DILocation(line: 2139, column: 11, scope: !7714)
!7970 = !DILocation(line: 2139, column: 19, scope: !7714)
!7971 = distinct !{!7971, !7826, !7972}
!7972 = !DILocation(line: 2139, column: 32, scope: !7714)
!7973 = !DILabel(scope: !7714, name: "end_intr", file: !3, line: 2141)
!7974 = !DILocation(line: 2141, column: 1, scope: !7714)
!7975 = !DILocation(line: 2142, column: 33, scope: !7714)
!7976 = !DILocation(line: 2142, column: 18, scope: !7714)
!7977 = !DILocation(line: 2142, column: 23, scope: !7714)
!7978 = !DILocation(line: 2142, column: 2, scope: !7714)
!7979 = !DILocation(line: 2142, column: 30, scope: !7714)
!7980 = !DILocation(line: 2143, column: 26, scope: !7714)
!7981 = !DILocation(line: 2143, column: 2, scope: !7714)
!7982 = !DILocation(line: 2143, column: 8, scope: !7714)
!7983 = !DILocation(line: 2143, column: 17, scope: !7714)
!7984 = !DILocation(line: 2143, column: 23, scope: !7714)
!7985 = !DILocation(line: 2144, column: 29, scope: !7714)
!7986 = !DILocation(line: 2144, column: 2, scope: !7714)
!7987 = !DILocation(line: 2144, column: 8, scope: !7714)
!7988 = !DILocation(line: 2144, column: 17, scope: !7714)
!7989 = !DILocation(line: 2144, column: 26, scope: !7714)
!7990 = !DILocation(line: 2151, column: 15, scope: !7714)
!7991 = !DILocation(line: 2151, column: 21, scope: !7714)
!7992 = !DILocation(line: 394, column: 2, scope: !6266, inlinedAt: !7720)
!7993 = !DILocation(line: 394, column: 2, scope: !6269, inlinedAt: !7720)
!7994 = !DILocation(line: 2152, column: 24, scope: !7714)
!7995 = !DILocation(line: 2152, column: 30, scope: !7714)
!7996 = !DILocation(line: 2152, column: 2, scope: !7714)
!7997 = !DILocation(line: 2153, column: 13, scope: !7714)
!7998 = !DILocation(line: 2153, column: 19, scope: !7714)
!7999 = !DILocation(line: 354, column: 2, scope: !6103, inlinedAt: !7718)
!8000 = !DILocation(line: 354, column: 2, scope: !6106, inlinedAt: !7718)
!8001 = !DILocation(line: 2154, column: 1, scope: !7714)
!8002 = distinct !DISubprogram(name: "mxser_check_modem_status", scope: !3, file: !3, line: 807, type: !8003, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{null, !213, !114, !113}
!8005 = !DILocalVariable(name: "tty", arg: 1, scope: !8002, file: !3, line: 807, type: !213)
!8006 = !DILocation(line: 807, column: 57, scope: !8002)
!8007 = !DILocalVariable(name: "port", arg: 2, scope: !8002, file: !3, line: 808, type: !114)
!8008 = !DILocation(line: 808, column: 24, scope: !8002)
!8009 = !DILocalVariable(name: "status", arg: 3, scope: !8002, file: !3, line: 808, type: !113)
!8010 = !DILocation(line: 808, column: 34, scope: !8002)
!8011 = !DILocation(line: 811, column: 6, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 811, column: 6)
!8013 = !DILocation(line: 811, column: 13, scope: !8012)
!8014 = !DILocation(line: 811, column: 6, scope: !8002)
!8015 = !DILocation(line: 812, column: 3, scope: !8012)
!8016 = !DILocation(line: 812, column: 9, scope: !8012)
!8017 = !DILocation(line: 812, column: 16, scope: !8012)
!8018 = !DILocation(line: 812, column: 19, scope: !8012)
!8019 = !DILocation(line: 813, column: 6, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 813, column: 6)
!8021 = !DILocation(line: 813, column: 13, scope: !8020)
!8022 = !DILocation(line: 813, column: 6, scope: !8002)
!8023 = !DILocation(line: 814, column: 3, scope: !8020)
!8024 = !DILocation(line: 814, column: 9, scope: !8020)
!8025 = !DILocation(line: 814, column: 16, scope: !8020)
!8026 = !DILocation(line: 814, column: 19, scope: !8020)
!8027 = !DILocation(line: 815, column: 6, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 815, column: 6)
!8029 = !DILocation(line: 815, column: 13, scope: !8028)
!8030 = !DILocation(line: 815, column: 6, scope: !8002)
!8031 = !DILocation(line: 816, column: 3, scope: !8028)
!8032 = !DILocation(line: 816, column: 9, scope: !8028)
!8033 = !DILocation(line: 816, column: 16, scope: !8028)
!8034 = !DILocation(line: 816, column: 19, scope: !8028)
!8035 = !DILocation(line: 817, column: 6, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 817, column: 6)
!8037 = !DILocation(line: 817, column: 13, scope: !8036)
!8038 = !DILocation(line: 817, column: 6, scope: !8002)
!8039 = !DILocation(line: 818, column: 3, scope: !8036)
!8040 = !DILocation(line: 818, column: 9, scope: !8036)
!8041 = !DILocation(line: 818, column: 16, scope: !8036)
!8042 = !DILocation(line: 818, column: 19, scope: !8036)
!8043 = !DILocation(line: 819, column: 32, scope: !8002)
!8044 = !DILocation(line: 819, column: 2, scope: !8002)
!8045 = !DILocation(line: 819, column: 8, scope: !8002)
!8046 = !DILocation(line: 819, column: 17, scope: !8002)
!8047 = !DILocation(line: 819, column: 30, scope: !8002)
!8048 = !DILocation(line: 820, column: 2, scope: !8002)
!8049 = !DILocation(line: 822, column: 30, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 822, column: 6)
!8051 = !DILocation(line: 822, column: 36, scope: !8050)
!8052 = !DILocation(line: 822, column: 6, scope: !8050)
!8053 = !DILocation(line: 822, column: 42, scope: !8050)
!8054 = !DILocation(line: 822, column: 46, scope: !8050)
!8055 = !DILocation(line: 822, column: 53, scope: !8050)
!8056 = !DILocation(line: 822, column: 6, scope: !8002)
!8057 = !DILocation(line: 823, column: 7, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 823, column: 7)
!8059 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 822, column: 71)
!8060 = !DILocation(line: 823, column: 14, scope: !8058)
!8061 = !DILocation(line: 823, column: 7, scope: !8059)
!8062 = !DILocation(line: 824, column: 4, scope: !8058)
!8063 = !DILocation(line: 825, column: 2, scope: !8059)
!8064 = !DILocation(line: 827, column: 28, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 827, column: 6)
!8066 = !DILocation(line: 827, column: 34, scope: !8065)
!8067 = !DILocation(line: 827, column: 6, scope: !8065)
!8068 = !DILocation(line: 827, column: 6, scope: !8002)
!8069 = !DILocation(line: 828, column: 7, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 828, column: 7)
!8071 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 827, column: 41)
!8072 = !DILocation(line: 828, column: 12, scope: !8070)
!8073 = !DILocation(line: 828, column: 7, scope: !8071)
!8074 = !DILocation(line: 829, column: 8, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 829, column: 8)
!8076 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 828, column: 24)
!8077 = !DILocation(line: 829, column: 15, scope: !8075)
!8078 = !DILocation(line: 829, column: 8, scope: !8076)
!8079 = !DILocation(line: 830, column: 5, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 829, column: 31)
!8081 = !DILocation(line: 830, column: 10, scope: !8080)
!8082 = !DILocation(line: 830, column: 21, scope: !8080)
!8083 = !DILocation(line: 832, column: 10, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 832, column: 9)
!8085 = !DILocation(line: 832, column: 16, scope: !8084)
!8086 = !DILocation(line: 832, column: 21, scope: !8084)
!8087 = !DILocation(line: 832, column: 37, scope: !8084)
!8088 = !DILocation(line: 833, column: 9, scope: !8084)
!8089 = !DILocation(line: 833, column: 15, scope: !8084)
!8090 = !DILocation(line: 833, column: 22, scope: !8084)
!8091 = !DILocation(line: 832, column: 9, scope: !8080)
!8092 = !DILocation(line: 834, column: 11, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 833, column: 34)
!8094 = !DILocation(line: 834, column: 17, scope: !8093)
!8095 = !DILocation(line: 834, column: 21, scope: !8093)
!8096 = !DILocation(line: 835, column: 7, scope: !8093)
!8097 = !DILocation(line: 835, column: 13, scope: !8093)
!8098 = !DILocation(line: 835, column: 20, scope: !8093)
!8099 = !DILocation(line: 834, column: 6, scope: !8093)
!8100 = !DILocation(line: 836, column: 6, scope: !8093)
!8101 = !DILocation(line: 836, column: 12, scope: !8093)
!8102 = !DILocation(line: 836, column: 16, scope: !8093)
!8103 = !DILocation(line: 837, column: 11, scope: !8093)
!8104 = !DILocation(line: 837, column: 17, scope: !8093)
!8105 = !DILocation(line: 837, column: 22, scope: !8093)
!8106 = !DILocation(line: 837, column: 28, scope: !8093)
!8107 = !DILocation(line: 837, column: 35, scope: !8093)
!8108 = !DILocation(line: 837, column: 6, scope: !8093)
!8109 = !DILocation(line: 839, column: 5, scope: !8093)
!8110 = !DILocation(line: 840, column: 16, scope: !8080)
!8111 = !DILocation(line: 840, column: 5, scope: !8080)
!8112 = !DILocation(line: 841, column: 4, scope: !8080)
!8113 = !DILocation(line: 842, column: 3, scope: !8076)
!8114 = !DILocation(line: 843, column: 10, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 843, column: 8)
!8116 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 842, column: 10)
!8117 = !DILocation(line: 843, column: 17, scope: !8115)
!8118 = !DILocation(line: 843, column: 8, scope: !8116)
!8119 = !DILocation(line: 844, column: 5, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 843, column: 34)
!8121 = !DILocation(line: 844, column: 10, scope: !8120)
!8122 = !DILocation(line: 844, column: 21, scope: !8120)
!8123 = !DILocation(line: 845, column: 9, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 845, column: 9)
!8125 = !DILocation(line: 845, column: 15, scope: !8124)
!8126 = !DILocation(line: 845, column: 20, scope: !8124)
!8127 = !DILocation(line: 845, column: 35, scope: !8124)
!8128 = !DILocation(line: 846, column: 8, scope: !8124)
!8129 = !DILocation(line: 846, column: 14, scope: !8124)
!8130 = !DILocation(line: 846, column: 21, scope: !8124)
!8131 = !DILocation(line: 845, column: 9, scope: !8120)
!8132 = !DILocation(line: 847, column: 6, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 846, column: 32)
!8134 = !DILocation(line: 847, column: 12, scope: !8133)
!8135 = !DILocation(line: 847, column: 16, scope: !8133)
!8136 = !DILocation(line: 848, column: 11, scope: !8133)
!8137 = !DILocation(line: 848, column: 17, scope: !8133)
!8138 = !DILocation(line: 848, column: 22, scope: !8133)
!8139 = !DILocation(line: 848, column: 28, scope: !8133)
!8140 = !DILocation(line: 848, column: 35, scope: !8133)
!8141 = !DILocation(line: 848, column: 6, scope: !8133)
!8142 = !DILocation(line: 850, column: 5, scope: !8133)
!8143 = !DILocation(line: 851, column: 4, scope: !8120)
!8144 = !DILocation(line: 853, column: 2, scope: !8071)
!8145 = !DILocation(line: 854, column: 1, scope: !8002)
!8146 = distinct !DISubprogram(name: "mxser_transmit_chars", scope: !3, file: !3, line: 2156, type: !8147, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{null, !213, !114}
!8149 = !DILocalVariable(name: "tty", arg: 1, scope: !8146, file: !3, line: 2156, type: !213)
!8150 = !DILocation(line: 2156, column: 53, scope: !8146)
!8151 = !DILocalVariable(name: "port", arg: 2, scope: !8146, file: !3, line: 2156, type: !114)
!8152 = !DILocation(line: 2156, column: 77, scope: !8146)
!8153 = !DILocalVariable(name: "count", scope: !8146, file: !3, line: 2158, type: !113)
!8154 = !DILocation(line: 2158, column: 6, scope: !8146)
!8155 = !DILocalVariable(name: "cnt", scope: !8146, file: !3, line: 2158, type: !113)
!8156 = !DILocation(line: 2158, column: 13, scope: !8146)
!8157 = !DILocation(line: 2160, column: 6, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2160, column: 6)
!8159 = !DILocation(line: 2160, column: 12, scope: !8158)
!8160 = !DILocation(line: 2160, column: 6, scope: !8146)
!8161 = !DILocation(line: 2161, column: 8, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 2160, column: 20)
!8163 = !DILocation(line: 2161, column: 14, scope: !8162)
!8164 = !DILocation(line: 2161, column: 22, scope: !8162)
!8165 = !DILocation(line: 2161, column: 28, scope: !8162)
!8166 = !DILocation(line: 2161, column: 35, scope: !8162)
!8167 = !DILocation(line: 2161, column: 3, scope: !8162)
!8168 = !DILocation(line: 2162, column: 3, scope: !8162)
!8169 = !DILocation(line: 2162, column: 9, scope: !8162)
!8170 = !DILocation(line: 2162, column: 16, scope: !8162)
!8171 = !DILocation(line: 2163, column: 19, scope: !8162)
!8172 = !DILocation(line: 2163, column: 24, scope: !8162)
!8173 = !DILocation(line: 2163, column: 3, scope: !8162)
!8174 = !DILocation(line: 2163, column: 30, scope: !8162)
!8175 = !DILocation(line: 2164, column: 3, scope: !8162)
!8176 = !DILocation(line: 2164, column: 9, scope: !8162)
!8177 = !DILocation(line: 2164, column: 18, scope: !8162)
!8178 = !DILocation(line: 2164, column: 23, scope: !8162)
!8179 = !DILocation(line: 2165, column: 3, scope: !8162)
!8180 = !DILocation(line: 2165, column: 9, scope: !8162)
!8181 = !DILocation(line: 2165, column: 18, scope: !8162)
!8182 = !DILocation(line: 2165, column: 26, scope: !8162)
!8183 = !DILocation(line: 2166, column: 3, scope: !8162)
!8184 = !DILocation(line: 2166, column: 9, scope: !8162)
!8185 = !DILocation(line: 2166, column: 16, scope: !8162)
!8186 = !DILocation(line: 2166, column: 18, scope: !8162)
!8187 = !DILocation(line: 2167, column: 3, scope: !8162)
!8188 = !DILocation(line: 2170, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2170, column: 6)
!8190 = !DILocation(line: 2170, column: 12, scope: !8189)
!8191 = !DILocation(line: 2170, column: 17, scope: !8189)
!8192 = !DILocation(line: 2170, column: 26, scope: !8189)
!8193 = !DILocation(line: 2170, column: 6, scope: !8146)
!8194 = !DILocation(line: 2171, column: 3, scope: !8189)
!8195 = !DILocation(line: 2173, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2173, column: 6)
!8197 = !DILocation(line: 2173, column: 12, scope: !8196)
!8198 = !DILocation(line: 2173, column: 21, scope: !8196)
!8199 = !DILocation(line: 2173, column: 26, scope: !8196)
!8200 = !DILocation(line: 2173, column: 29, scope: !8196)
!8201 = !DILocation(line: 2173, column: 34, scope: !8196)
!8202 = !DILocation(line: 2173, column: 42, scope: !8196)
!8203 = !DILocation(line: 2174, column: 5, scope: !8196)
!8204 = !DILocation(line: 2174, column: 10, scope: !8196)
!8205 = !DILocation(line: 2174, column: 21, scope: !8196)
!8206 = !DILocation(line: 2175, column: 5, scope: !8196)
!8207 = !DILocation(line: 2175, column: 11, scope: !8196)
!8208 = !DILocation(line: 2175, column: 16, scope: !8196)
!8209 = !DILocation(line: 2175, column: 32, scope: !8196)
!8210 = !DILocation(line: 2176, column: 6, scope: !8196)
!8211 = !DILocation(line: 2176, column: 12, scope: !8196)
!8212 = !DILocation(line: 2176, column: 19, scope: !8196)
!8213 = !DILocation(line: 2173, column: 6, scope: !8146)
!8214 = !DILocation(line: 2177, column: 3, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 2176, column: 32)
!8216 = !DILocation(line: 2177, column: 9, scope: !8215)
!8217 = !DILocation(line: 2177, column: 13, scope: !8215)
!8218 = !DILocation(line: 2178, column: 8, scope: !8215)
!8219 = !DILocation(line: 2178, column: 14, scope: !8215)
!8220 = !DILocation(line: 2178, column: 19, scope: !8215)
!8221 = !DILocation(line: 2178, column: 25, scope: !8215)
!8222 = !DILocation(line: 2178, column: 32, scope: !8215)
!8223 = !DILocation(line: 2178, column: 3, scope: !8215)
!8224 = !DILocation(line: 2179, column: 3, scope: !8215)
!8225 = !DILocation(line: 2182, column: 8, scope: !8146)
!8226 = !DILocation(line: 2182, column: 14, scope: !8146)
!8227 = !DILocation(line: 2182, column: 6, scope: !8146)
!8228 = !DILocation(line: 2183, column: 10, scope: !8146)
!8229 = !DILocation(line: 2183, column: 16, scope: !8146)
!8230 = !DILocation(line: 2183, column: 8, scope: !8146)
!8231 = !DILocation(line: 2184, column: 2, scope: !8146)
!8232 = !DILocation(line: 2185, column: 8, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2184, column: 5)
!8234 = !DILocation(line: 2185, column: 14, scope: !8233)
!8235 = !DILocation(line: 2185, column: 19, scope: !8233)
!8236 = !DILocation(line: 2185, column: 28, scope: !8233)
!8237 = !DILocation(line: 2185, column: 34, scope: !8233)
!8238 = !DILocation(line: 2185, column: 43, scope: !8233)
!8239 = !DILocation(line: 2186, column: 4, scope: !8233)
!8240 = !DILocation(line: 2186, column: 10, scope: !8233)
!8241 = !DILocation(line: 2186, column: 17, scope: !8233)
!8242 = !DILocation(line: 2185, column: 3, scope: !8233)
!8243 = !DILocation(line: 2187, column: 21, scope: !8233)
!8244 = !DILocation(line: 2187, column: 27, scope: !8233)
!8245 = !DILocation(line: 2187, column: 37, scope: !8233)
!8246 = !DILocation(line: 2187, column: 3, scope: !8233)
!8247 = !DILocation(line: 2187, column: 9, scope: !8233)
!8248 = !DILocation(line: 2187, column: 19, scope: !8233)
!8249 = !DILocation(line: 2188, column: 9, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2188, column: 7)
!8251 = !DILocation(line: 2188, column: 15, scope: !8250)
!8252 = !DILocation(line: 2188, column: 7, scope: !8250)
!8253 = !DILocation(line: 2188, column: 24, scope: !8250)
!8254 = !DILocation(line: 2188, column: 7, scope: !8233)
!8255 = !DILocation(line: 2189, column: 4, scope: !8250)
!8256 = !DILocation(line: 2190, column: 2, scope: !8233)
!8257 = !DILocation(line: 2190, column: 11, scope: !8146)
!8258 = !DILocation(line: 2190, column: 19, scope: !8146)
!8259 = distinct !{!8259, !8231, !8260}
!8260 = !DILocation(line: 2190, column: 22, scope: !8146)
!8261 = !DILocation(line: 2191, column: 34, scope: !8146)
!8262 = !DILocation(line: 2191, column: 40, scope: !8146)
!8263 = !DILocation(line: 2191, column: 46, scope: !8146)
!8264 = !DILocation(line: 2191, column: 38, scope: !8146)
!8265 = !DILocation(line: 2191, column: 33, scope: !8146)
!8266 = !DILocation(line: 2191, column: 18, scope: !8146)
!8267 = !DILocation(line: 2191, column: 23, scope: !8146)
!8268 = !DILocation(line: 2191, column: 2, scope: !8146)
!8269 = !DILocation(line: 2191, column: 30, scope: !8146)
!8270 = !DILocation(line: 2193, column: 27, scope: !8146)
!8271 = !DILocation(line: 2193, column: 33, scope: !8146)
!8272 = !DILocation(line: 2193, column: 39, scope: !8146)
!8273 = !DILocation(line: 2193, column: 31, scope: !8146)
!8274 = !DILocation(line: 2193, column: 26, scope: !8146)
!8275 = !DILocation(line: 2193, column: 2, scope: !8146)
!8276 = !DILocation(line: 2193, column: 8, scope: !8146)
!8277 = !DILocation(line: 2193, column: 17, scope: !8146)
!8278 = !DILocation(line: 2193, column: 23, scope: !8146)
!8279 = !DILocation(line: 2194, column: 30, scope: !8146)
!8280 = !DILocation(line: 2194, column: 36, scope: !8146)
!8281 = !DILocation(line: 2194, column: 42, scope: !8146)
!8282 = !DILocation(line: 2194, column: 34, scope: !8146)
!8283 = !DILocation(line: 2194, column: 29, scope: !8146)
!8284 = !DILocation(line: 2194, column: 2, scope: !8146)
!8285 = !DILocation(line: 2194, column: 8, scope: !8146)
!8286 = !DILocation(line: 2194, column: 17, scope: !8146)
!8287 = !DILocation(line: 2194, column: 26, scope: !8146)
!8288 = !DILocation(line: 2195, column: 22, scope: !8146)
!8289 = !DILocation(line: 2195, column: 28, scope: !8146)
!8290 = !DILocation(line: 2195, column: 34, scope: !8146)
!8291 = !DILocation(line: 2195, column: 26, scope: !8146)
!8292 = !DILocation(line: 2195, column: 2, scope: !8146)
!8293 = !DILocation(line: 2195, column: 8, scope: !8146)
!8294 = !DILocation(line: 2195, column: 15, scope: !8146)
!8295 = !DILocation(line: 2195, column: 18, scope: !8146)
!8296 = !DILocation(line: 2197, column: 6, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2197, column: 6)
!8298 = !DILocation(line: 2197, column: 12, scope: !8297)
!8299 = !DILocation(line: 2197, column: 21, scope: !8297)
!8300 = !DILocation(line: 2197, column: 6, scope: !8146)
!8301 = !DILocation(line: 2198, column: 14, scope: !8297)
!8302 = !DILocation(line: 2198, column: 3, scope: !8297)
!8303 = !DILocation(line: 2200, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2200, column: 6)
!8305 = !DILocation(line: 2200, column: 12, scope: !8304)
!8306 = !DILocation(line: 2200, column: 21, scope: !8304)
!8307 = !DILocation(line: 2200, column: 6, scope: !8146)
!8308 = !DILocation(line: 2201, column: 3, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 2200, column: 27)
!8310 = !DILocation(line: 2201, column: 9, scope: !8309)
!8311 = !DILocation(line: 2201, column: 13, scope: !8309)
!8312 = !DILocation(line: 2202, column: 8, scope: !8309)
!8313 = !DILocation(line: 2202, column: 14, scope: !8309)
!8314 = !DILocation(line: 2202, column: 19, scope: !8309)
!8315 = !DILocation(line: 2202, column: 25, scope: !8309)
!8316 = !DILocation(line: 2202, column: 32, scope: !8309)
!8317 = !DILocation(line: 2202, column: 3, scope: !8309)
!8318 = !DILocation(line: 2203, column: 2, scope: !8309)
!8319 = !DILocation(line: 2204, column: 1, scope: !8146)
!8320 = distinct !DISubprogram(name: "test_bit", scope: !8321, file: !8321, line: 132, type: !8322, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8321 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8322 = !DISubroutineType(types: !8323)
!8323 = !{!482, !309, !8324}
!8324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8325, size: 64)
!8325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6786)
!8326 = !DILocalVariable(name: "nr", arg: 1, scope: !8327, file: !6789, line: 210, type: !309)
!8327 = distinct !DISubprogram(name: "variable_test_bit", scope: !6789, file: !6789, line: 210, type: !8322, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8328 = !DILocation(line: 210, column: 52, scope: !8327, inlinedAt: !8329)
!8329 = distinct !DILocation(line: 135, column: 9, scope: !8320)
!8330 = !DILocalVariable(name: "addr", arg: 2, scope: !8327, file: !6789, line: 210, type: !8324)
!8331 = !DILocation(line: 210, column: 86, scope: !8327, inlinedAt: !8329)
!8332 = !DILocalVariable(name: "oldbit", scope: !8327, file: !6789, line: 212, type: !482)
!8333 = !DILocation(line: 212, column: 7, scope: !8327, inlinedAt: !8329)
!8334 = !DILocalVariable(name: "nr", arg: 1, scope: !8335, file: !6789, line: 204, type: !309)
!8335 = distinct !DISubprogram(name: "constant_test_bit", scope: !6789, file: !6789, line: 204, type: !8322, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8336 = !DILocation(line: 204, column: 52, scope: !8335, inlinedAt: !8337)
!8337 = distinct !DILocation(line: 135, column: 9, scope: !8320)
!8338 = !DILocalVariable(name: "addr", arg: 2, scope: !8335, file: !6789, line: 204, type: !8324)
!8339 = !DILocation(line: 204, column: 86, scope: !8335, inlinedAt: !8337)
!8340 = !DILocalVariable(name: "v", arg: 1, scope: !8341, file: !6796, line: 69, type: !6799)
!8341 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6796, file: !6796, line: 69, type: !6797, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8342 = !DILocation(line: 69, column: 73, scope: !8341, inlinedAt: !8343)
!8343 = distinct !DILocation(line: 134, column: 2, scope: !8320)
!8344 = !DILocalVariable(name: "size", arg: 2, scope: !8341, file: !6796, line: 69, type: !321)
!8345 = !DILocation(line: 69, column: 83, scope: !8341, inlinedAt: !8343)
!8346 = !DILocalVariable(name: "nr", arg: 1, scope: !8320, file: !8321, line: 132, type: !309)
!8347 = !DILocation(line: 132, column: 34, scope: !8320)
!8348 = !DILocalVariable(name: "addr", arg: 2, scope: !8320, file: !8321, line: 132, type: !8324)
!8349 = !DILocation(line: 132, column: 68, scope: !8320)
!8350 = !DILocation(line: 134, column: 25, scope: !8320)
!8351 = !DILocation(line: 134, column: 32, scope: !8320)
!8352 = !DILocation(line: 134, column: 30, scope: !8320)
!8353 = !DILocation(line: 71, column: 19, scope: !8341, inlinedAt: !8343)
!8354 = !DILocation(line: 71, column: 22, scope: !8341, inlinedAt: !8343)
!8355 = !DILocation(line: 71, column: 2, scope: !8341, inlinedAt: !8343)
!8356 = !DILocation(line: 72, column: 2, scope: !8341, inlinedAt: !8343)
!8357 = !DILocation(line: 135, column: 9, scope: !8320)
!8358 = !DILocation(line: 206, column: 19, scope: !8335, inlinedAt: !8337)
!8359 = !DILocation(line: 206, column: 22, scope: !8335, inlinedAt: !8337)
!8360 = !DILocation(line: 206, column: 15, scope: !8335, inlinedAt: !8337)
!8361 = !DILocation(line: 207, column: 4, scope: !8335, inlinedAt: !8337)
!8362 = !DILocation(line: 207, column: 9, scope: !8335, inlinedAt: !8337)
!8363 = !DILocation(line: 207, column: 12, scope: !8335, inlinedAt: !8337)
!8364 = !DILocation(line: 206, column: 44, scope: !8335, inlinedAt: !8337)
!8365 = !DILocation(line: 207, column: 37, scope: !8335, inlinedAt: !8337)
!8366 = !DILocation(line: 217, column: 33, scope: !8327, inlinedAt: !8329)
!8367 = !DILocation(line: 217, column: 46, scope: !8327, inlinedAt: !8329)
!8368 = !DILocation(line: 214, column: 2, scope: !8327, inlinedAt: !8329)
!8369 = !{i32 -2147074673, i32 -2147074613}
!8370 = !DILocation(line: 219, column: 9, scope: !8327, inlinedAt: !8329)
!8371 = !DILocation(line: 135, column: 2, scope: !8320)
!8372 = distinct !DISubprogram(name: "kasan_check_read", scope: !7229, file: !7229, line: 34, type: !7230, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8373 = !DILocalVariable(name: "p", arg: 1, scope: !8372, file: !7229, line: 34, type: !6799)
!8374 = !DILocation(line: 34, column: 58, scope: !8372)
!8375 = !DILocalVariable(name: "size", arg: 2, scope: !8372, file: !7229, line: 34, type: !7)
!8376 = !DILocation(line: 34, column: 74, scope: !8372)
!8377 = !DILocation(line: 36, column: 2, scope: !8372)
!8378 = distinct !DISubprogram(name: "mxser_stoprx", scope: !3, file: !3, line: 1845, type: !3929, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8379 = !DILocalVariable(name: "tty", arg: 1, scope: !8378, file: !3, line: 1845, type: !213)
!8380 = !DILocation(line: 1845, column: 45, scope: !8378)
!8381 = !DILocalVariable(name: "info", scope: !8378, file: !3, line: 1847, type: !114)
!8382 = !DILocation(line: 1847, column: 21, scope: !8378)
!8383 = !DILocation(line: 1847, column: 28, scope: !8378)
!8384 = !DILocation(line: 1847, column: 33, scope: !8378)
!8385 = !DILocation(line: 1849, column: 2, scope: !8378)
!8386 = !DILocation(line: 1849, column: 8, scope: !8378)
!8387 = !DILocation(line: 1849, column: 22, scope: !8378)
!8388 = !DILocation(line: 1850, column: 6, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 1850, column: 6)
!8390 = !DILocation(line: 1850, column: 6, scope: !8378)
!8391 = !DILocation(line: 1851, column: 7, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 1851, column: 7)
!8393 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 1850, column: 20)
!8394 = !DILocation(line: 1851, column: 13, scope: !8392)
!8395 = !DILocation(line: 1851, column: 20, scope: !8392)
!8396 = !DILocation(line: 1851, column: 7, scope: !8393)
!8397 = !DILocation(line: 1852, column: 4, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1851, column: 31)
!8399 = !DILocation(line: 1852, column: 10, scope: !8398)
!8400 = !DILocation(line: 1852, column: 14, scope: !8398)
!8401 = !DILocation(line: 1853, column: 9, scope: !8398)
!8402 = !DILocation(line: 1853, column: 15, scope: !8398)
!8403 = !DILocation(line: 1853, column: 20, scope: !8398)
!8404 = !DILocation(line: 1853, column: 26, scope: !8398)
!8405 = !DILocation(line: 1853, column: 33, scope: !8398)
!8406 = !DILocation(line: 1853, column: 4, scope: !8398)
!8407 = !DILocation(line: 1854, column: 3, scope: !8398)
!8408 = !DILocation(line: 1855, column: 19, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1854, column: 10)
!8410 = !DILocation(line: 1855, column: 4, scope: !8409)
!8411 = !DILocation(line: 1855, column: 10, scope: !8409)
!8412 = !DILocation(line: 1855, column: 17, scope: !8409)
!8413 = !DILocation(line: 1856, column: 12, scope: !8409)
!8414 = !DILocation(line: 1856, column: 18, scope: !8409)
!8415 = !DILocation(line: 1856, column: 25, scope: !8409)
!8416 = !DILocation(line: 1856, column: 4, scope: !8409)
!8417 = !DILocation(line: 1857, column: 4, scope: !8409)
!8418 = !DILocation(line: 1857, column: 10, scope: !8409)
!8419 = !DILocation(line: 1857, column: 14, scope: !8409)
!8420 = !DILocation(line: 1858, column: 9, scope: !8409)
!8421 = !DILocation(line: 1858, column: 15, scope: !8409)
!8422 = !DILocation(line: 1858, column: 20, scope: !8409)
!8423 = !DILocation(line: 1858, column: 26, scope: !8409)
!8424 = !DILocation(line: 1858, column: 33, scope: !8409)
!8425 = !DILocation(line: 1858, column: 4, scope: !8409)
!8426 = !DILocation(line: 1860, column: 2, scope: !8393)
!8427 = !DILocation(line: 1862, column: 6, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 1862, column: 6)
!8429 = !DILocation(line: 1862, column: 6, scope: !8378)
!8430 = !DILocation(line: 1863, column: 3, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 1862, column: 22)
!8432 = !DILocation(line: 1863, column: 9, scope: !8431)
!8433 = !DILocation(line: 1863, column: 13, scope: !8431)
!8434 = !DILocation(line: 1864, column: 8, scope: !8431)
!8435 = !DILocation(line: 1864, column: 14, scope: !8431)
!8436 = !DILocation(line: 1864, column: 19, scope: !8431)
!8437 = !DILocation(line: 1864, column: 25, scope: !8431)
!8438 = !DILocation(line: 1864, column: 32, scope: !8431)
!8439 = !DILocation(line: 1864, column: 3, scope: !8431)
!8440 = !DILocation(line: 1865, column: 2, scope: !8431)
!8441 = !DILocation(line: 1866, column: 1, scope: !8378)
!8442 = distinct !DISubprogram(name: "tty_insert_flip_char", scope: !8443, file: !8443, line: 18, type: !8444, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8443 = !DIFile(filename: "./include/linux/tty_flip.h", directory: "/home/lizy2001/genbc/linux")
!8444 = !DISubroutineType(types: !8445)
!8445 = !{!113, !3897, !419, !238}
!8446 = !DILocalVariable(name: "port", arg: 1, scope: !8442, file: !8443, line: 18, type: !3897)
!8447 = !DILocation(line: 18, column: 57, scope: !8442)
!8448 = !DILocalVariable(name: "ch", arg: 2, scope: !8442, file: !8443, line: 19, type: !419)
!8449 = !DILocation(line: 19, column: 20, scope: !8442)
!8450 = !DILocalVariable(name: "flag", arg: 3, scope: !8442, file: !8443, line: 19, type: !238)
!8451 = !DILocation(line: 19, column: 29, scope: !8442)
!8452 = !DILocalVariable(name: "tb", scope: !8442, file: !8443, line: 21, type: !125)
!8453 = !DILocation(line: 21, column: 21, scope: !8442)
!8454 = !DILocation(line: 21, column: 26, scope: !8442)
!8455 = !DILocation(line: 21, column: 32, scope: !8442)
!8456 = !DILocation(line: 21, column: 36, scope: !8442)
!8457 = !DILocalVariable(name: "change", scope: !8442, file: !8443, line: 22, type: !113)
!8458 = !DILocation(line: 22, column: 6, scope: !8442)
!8459 = !DILocation(line: 24, column: 12, scope: !8442)
!8460 = !DILocation(line: 24, column: 16, scope: !8442)
!8461 = !DILocation(line: 24, column: 22, scope: !8442)
!8462 = !DILocation(line: 24, column: 37, scope: !8442)
!8463 = !DILocation(line: 24, column: 41, scope: !8442)
!8464 = !DILocation(line: 24, column: 46, scope: !8442)
!8465 = !DILocation(line: 0, scope: !8442)
!8466 = !DILocation(line: 24, column: 9, scope: !8442)
!8467 = !DILocation(line: 25, column: 7, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8442, file: !8443, line: 25, column: 6)
!8469 = !DILocation(line: 25, column: 14, scope: !8468)
!8470 = !DILocation(line: 25, column: 17, scope: !8468)
!8471 = !DILocation(line: 25, column: 21, scope: !8468)
!8472 = !DILocation(line: 25, column: 28, scope: !8468)
!8473 = !DILocation(line: 25, column: 32, scope: !8468)
!8474 = !DILocation(line: 25, column: 26, scope: !8468)
!8475 = !DILocation(line: 25, column: 6, scope: !8442)
!8476 = !DILocation(line: 26, column: 8, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !8443, line: 26, column: 7)
!8478 = distinct !DILexicalBlock(scope: !8468, file: !8443, line: 25, column: 38)
!8479 = !DILocation(line: 26, column: 12, scope: !8477)
!8480 = !DILocation(line: 26, column: 7, scope: !8477)
!8481 = !DILocation(line: 26, column: 18, scope: !8477)
!8482 = !DILocation(line: 26, column: 7, scope: !8478)
!8483 = !DILocation(line: 27, column: 34, scope: !8477)
!8484 = !DILocation(line: 27, column: 18, scope: !8477)
!8485 = !DILocation(line: 27, column: 22, scope: !8477)
!8486 = !DILocation(line: 27, column: 26, scope: !8477)
!8487 = !DILocation(line: 27, column: 5, scope: !8477)
!8488 = !DILocation(line: 27, column: 32, scope: !8477)
!8489 = !DILocation(line: 27, column: 4, scope: !8477)
!8490 = !DILocation(line: 28, column: 35, scope: !8478)
!8491 = !DILocation(line: 28, column: 17, scope: !8478)
!8492 = !DILocation(line: 28, column: 21, scope: !8478)
!8493 = !DILocation(line: 28, column: 25, scope: !8478)
!8494 = !DILocation(line: 28, column: 29, scope: !8478)
!8495 = !DILocation(line: 28, column: 4, scope: !8478)
!8496 = !DILocation(line: 28, column: 33, scope: !8478)
!8497 = !DILocation(line: 29, column: 3, scope: !8478)
!8498 = !DILocation(line: 31, column: 32, scope: !8442)
!8499 = !DILocation(line: 31, column: 38, scope: !8442)
!8500 = !DILocation(line: 31, column: 42, scope: !8442)
!8501 = !DILocation(line: 31, column: 9, scope: !8442)
!8502 = !DILocation(line: 31, column: 2, scope: !8442)
!8503 = !DILocation(line: 32, column: 1, scope: !8442)
!8504 = distinct !DISubprogram(name: "flag_buf_ptr", scope: !119, file: !119, line: 80, type: !8505, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!274, !125, !113}
!8507 = !DILocalVariable(name: "b", arg: 1, scope: !8504, file: !119, line: 80, type: !125)
!8508 = !DILocation(line: 80, column: 53, scope: !8504)
!8509 = !DILocalVariable(name: "ofs", arg: 2, scope: !8504, file: !119, line: 80, type: !113)
!8510 = !DILocation(line: 80, column: 60, scope: !8504)
!8511 = !DILocation(line: 82, column: 30, scope: !8504)
!8512 = !DILocation(line: 82, column: 33, scope: !8504)
!8513 = !DILocation(line: 82, column: 17, scope: !8504)
!8514 = !DILocation(line: 82, column: 40, scope: !8504)
!8515 = !DILocation(line: 82, column: 43, scope: !8504)
!8516 = !DILocation(line: 82, column: 38, scope: !8504)
!8517 = !DILocation(line: 82, column: 2, scope: !8504)
!8518 = distinct !DISubprogram(name: "char_buf_ptr", scope: !119, file: !119, line: 75, type: !8519, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!4053, !125, !113}
!8521 = !DILocalVariable(name: "b", arg: 1, scope: !8518, file: !119, line: 75, type: !125)
!8522 = !DILocation(line: 75, column: 62, scope: !8518)
!8523 = !DILocalVariable(name: "ofs", arg: 2, scope: !8518, file: !119, line: 75, type: !113)
!8524 = !DILocation(line: 75, column: 69, scope: !8518)
!8525 = !DILocation(line: 77, column: 27, scope: !8518)
!8526 = !DILocation(line: 77, column: 30, scope: !8518)
!8527 = !DILocation(line: 77, column: 10, scope: !8518)
!8528 = !DILocation(line: 77, column: 38, scope: !8518)
!8529 = !DILocation(line: 77, column: 36, scope: !8518)
!8530 = !DILocation(line: 77, column: 2, scope: !8518)
!8531 = distinct !DISubprogram(name: "tty_port_check_carrier", scope: !119, file: !119, line: 638, type: !7706, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8532 = !DILocalVariable(name: "port", arg: 1, scope: !8531, file: !119, line: 638, type: !3897)
!8533 = !DILocation(line: 638, column: 60, scope: !8531)
!8534 = !DILocation(line: 640, column: 38, scope: !8531)
!8535 = !DILocation(line: 640, column: 44, scope: !8531)
!8536 = !DILocation(line: 640, column: 9, scope: !8531)
!8537 = !DILocation(line: 640, column: 2, scope: !8531)
!8538 = distinct !DISubprogram(name: "tty_port_cts_enabled", scope: !119, file: !119, line: 612, type: !7706, scopeLine: 613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8539 = !DILocalVariable(name: "port", arg: 1, scope: !8538, file: !119, line: 612, type: !3897)
!8540 = !DILocation(line: 612, column: 58, scope: !8538)
!8541 = !DILocation(line: 614, column: 38, scope: !8538)
!8542 = !DILocation(line: 614, column: 44, scope: !8538)
!8543 = !DILocation(line: 614, column: 9, scope: !8538)
!8544 = !DILocation(line: 614, column: 2, scope: !8538)
!8545 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !8546, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !228, !112}
!8548 = !DILocalVariable(name: "dev", arg: 1, scope: !8545, file: !73, line: 660, type: !228)
!8549 = !DILocation(line: 660, column: 51, scope: !8545)
!8550 = !DILocalVariable(name: "data", arg: 2, scope: !8545, file: !73, line: 660, type: !112)
!8551 = !DILocation(line: 660, column: 62, scope: !8545)
!8552 = !DILocation(line: 662, column: 21, scope: !8545)
!8553 = !DILocation(line: 662, column: 2, scope: !8545)
!8554 = !DILocation(line: 662, column: 7, scope: !8545)
!8555 = !DILocation(line: 662, column: 19, scope: !8545)
!8556 = !DILocation(line: 663, column: 1, scope: !8545)
!8557 = distinct !DISubprogram(name: "pci_get_drvdata", scope: !4424, file: !4424, line: 1865, type: !8558, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{!112, !4444}
!8560 = !DILocalVariable(name: "pdev", arg: 1, scope: !8557, file: !4424, line: 1865, type: !4444)
!8561 = !DILocation(line: 1865, column: 53, scope: !8557)
!8562 = !DILocation(line: 1867, column: 26, scope: !8557)
!8563 = !DILocation(line: 1867, column: 32, scope: !8557)
!8564 = !DILocation(line: 1867, column: 9, scope: !8557)
!8565 = !DILocation(line: 1867, column: 2, scope: !8557)
!8566 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !73, file: !73, line: 655, type: !8567, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8567 = !DISubroutineType(types: !8568)
!8568 = !{!112, !3742}
!8569 = !DILocalVariable(name: "dev", arg: 1, scope: !8566, file: !73, line: 655, type: !3742)
!8570 = !DILocation(line: 655, column: 58, scope: !8566)
!8571 = !DILocation(line: 657, column: 9, scope: !8566)
!8572 = !DILocation(line: 657, column: 14, scope: !8566)
!8573 = !DILocation(line: 657, column: 2, scope: !8566)
!8574 = distinct !DISubprogram(name: "mxser_release_vector", scope: !3, file: !3, line: 2362, type: !4813, scopeLine: 2363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8575 = !DILocalVariable(name: "brd", arg: 1, scope: !8574, file: !3, line: 2362, type: !4216)
!8576 = !DILocation(line: 2362, column: 54, scope: !8574)
!8577 = !DILocation(line: 2364, column: 31, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 2364, column: 6)
!8579 = !DILocation(line: 2364, column: 6, scope: !8578)
!8580 = !DILocation(line: 2364, column: 6, scope: !8574)
!8581 = !DILocation(line: 2365, column: 3, scope: !8578)
!8582 = !DILocation(line: 2366, column: 2, scope: !8574)
!8583 = !DILocation(line: 2367, column: 1, scope: !8574)
!8584 = distinct !DISubprogram(name: "mxser_overlapping_vector", scope: !3, file: !3, line: 2348, type: !8585, scopeLine: 2349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8585 = !DISubroutineType(types: !8586)
!8586 = !{!482, !4216}
!8587 = !DILocalVariable(name: "brd", arg: 1, scope: !8584, file: !3, line: 2348, type: !4216)
!8588 = !DILocation(line: 2348, column: 58, scope: !8584)
!8589 = !DILocation(line: 2350, column: 9, scope: !8584)
!8590 = !DILocation(line: 2350, column: 34, scope: !8584)
!8591 = !DILocation(line: 2351, column: 3, scope: !8584)
!8592 = !DILocation(line: 2351, column: 8, scope: !8584)
!8593 = !DILocation(line: 2351, column: 18, scope: !8584)
!8594 = !DILocation(line: 2351, column: 23, scope: !8584)
!8595 = !DILocation(line: 2351, column: 32, scope: !8584)
!8596 = !DILocation(line: 2351, column: 15, scope: !8584)
!8597 = !DILocation(line: 2351, column: 39, scope: !8584)
!8598 = !DILocation(line: 2352, column: 3, scope: !8584)
!8599 = !DILocation(line: 2352, column: 8, scope: !8584)
!8600 = !DILocation(line: 2352, column: 17, scope: !8584)
!8601 = !DILocation(line: 2352, column: 22, scope: !8584)
!8602 = !DILocation(line: 2352, column: 31, scope: !8584)
!8603 = !DILocation(line: 2352, column: 44, scope: !8584)
!8604 = !DILocation(line: 2352, column: 49, scope: !8584)
!8605 = !DILocation(line: 2352, column: 55, scope: !8584)
!8606 = !DILocation(line: 2352, column: 42, scope: !8584)
!8607 = !DILocation(line: 2352, column: 40, scope: !8584)
!8608 = !DILocation(line: 2352, column: 38, scope: !8584)
!8609 = !DILocation(line: 2352, column: 15, scope: !8584)
!8610 = !DILocation(line: 0, scope: !8584)
!8611 = !DILocation(line: 2350, column: 2, scope: !8584)
!8612 = distinct !DISubprogram(name: "alloc_tty_driver", scope: !3854, file: !3854, line: 355, type: !8613, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!3852, !7}
!8615 = !DILocalVariable(name: "lines", arg: 1, scope: !8612, file: !3854, line: 355, type: !7)
!8616 = !DILocation(line: 355, column: 64, scope: !8612)
!8617 = !DILocalVariable(name: "ret", scope: !8612, file: !3854, line: 357, type: !3852)
!8618 = !DILocation(line: 357, column: 21, scope: !8612)
!8619 = !DILocation(line: 357, column: 27, scope: !8612)
!8620 = !DILocation(line: 358, column: 13, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8612, file: !3854, line: 358, column: 6)
!8622 = !DILocation(line: 358, column: 6, scope: !8621)
!8623 = !DILocation(line: 358, column: 6, scope: !8612)
!8624 = !DILocation(line: 359, column: 3, scope: !8621)
!8625 = !DILocation(line: 360, column: 9, scope: !8612)
!8626 = !DILocation(line: 360, column: 2, scope: !8612)
!8627 = !DILocation(line: 361, column: 1, scope: !8612)
!8628 = distinct !DISubprogram(name: "mxser_get_ISA_conf", scope: !3, file: !3, line: 2437, type: !8629, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8629 = !DISubroutineType(types: !8630)
!8630 = !{!113, !113, !4216}
!8631 = !DILocalVariable(name: "cap", arg: 1, scope: !8628, file: !3, line: 2437, type: !113)
!8632 = !DILocation(line: 2437, column: 42, scope: !8628)
!8633 = !DILocalVariable(name: "brd", arg: 2, scope: !8628, file: !3, line: 2437, type: !4216)
!8634 = !DILocation(line: 2437, column: 67, scope: !8628)
!8635 = !DILocalVariable(name: "id", scope: !8628, file: !3, line: 2439, type: !113)
!8636 = !DILocation(line: 2439, column: 6, scope: !8628)
!8637 = !DILocalVariable(name: "i", scope: !8628, file: !3, line: 2439, type: !113)
!8638 = !DILocation(line: 2439, column: 10, scope: !8628)
!8639 = !DILocalVariable(name: "bits", scope: !8628, file: !3, line: 2439, type: !113)
!8640 = !DILocation(line: 2439, column: 13, scope: !8628)
!8641 = !DILocalVariable(name: "ret", scope: !8628, file: !3, line: 2439, type: !113)
!8642 = !DILocation(line: 2439, column: 19, scope: !8628)
!8643 = !DILocalVariable(name: "regs", scope: !8628, file: !3, line: 2440, type: !8644)
!8644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1775)
!8645 = !DILocation(line: 2440, column: 17, scope: !8628)
!8646 = !DILocalVariable(name: "irq", scope: !8628, file: !3, line: 2440, type: !316)
!8647 = !DILocation(line: 2440, column: 27, scope: !8628)
!8648 = !DILocalVariable(name: "scratch", scope: !8628, file: !3, line: 2441, type: !419)
!8649 = !DILocation(line: 2441, column: 16, scope: !8628)
!8650 = !DILocalVariable(name: "scratch2", scope: !8628, file: !3, line: 2441, type: !419)
!8651 = !DILocation(line: 2441, column: 25, scope: !8628)
!8652 = !DILocation(line: 2443, column: 2, scope: !8628)
!8653 = !DILocation(line: 2443, column: 7, scope: !8628)
!8654 = !DILocation(line: 2443, column: 17, scope: !8628)
!8655 = !DILocation(line: 2445, column: 27, scope: !8628)
!8656 = !DILocation(line: 2445, column: 32, scope: !8628)
!8657 = !DILocation(line: 2445, column: 7, scope: !8628)
!8658 = !DILocation(line: 2445, column: 5, scope: !8628)
!8659 = !DILocation(line: 2446, column: 10, scope: !8628)
!8660 = !DILocation(line: 2446, column: 2, scope: !8628)
!8661 = !DILocation(line: 2448, column: 3, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2446, column: 14)
!8663 = !DILocation(line: 2448, column: 8, scope: !8662)
!8664 = !DILocation(line: 2448, column: 13, scope: !8662)
!8665 = !DILocation(line: 2449, column: 3, scope: !8662)
!8666 = !DILocation(line: 2451, column: 3, scope: !8662)
!8667 = !DILocation(line: 2451, column: 8, scope: !8662)
!8668 = !DILocation(line: 2451, column: 13, scope: !8662)
!8669 = !DILocation(line: 2452, column: 3, scope: !8662)
!8670 = !DILocation(line: 2454, column: 3, scope: !8662)
!8671 = !DILocation(line: 2454, column: 8, scope: !8662)
!8672 = !DILocation(line: 2454, column: 13, scope: !8662)
!8673 = !DILocation(line: 2455, column: 3, scope: !8662)
!8674 = !DILocation(line: 2457, column: 3, scope: !8662)
!8675 = !DILocation(line: 2457, column: 8, scope: !8662)
!8676 = !DILocation(line: 2457, column: 13, scope: !8662)
!8677 = !DILocation(line: 2458, column: 3, scope: !8662)
!8678 = !DILocation(line: 2460, column: 3, scope: !8662)
!8679 = !DILocation(line: 2460, column: 8, scope: !8662)
!8680 = !DILocation(line: 2460, column: 13, scope: !8662)
!8681 = !DILocation(line: 2461, column: 3, scope: !8662)
!8682 = !DILocation(line: 2463, column: 3, scope: !8662)
!8683 = !DILocation(line: 2463, column: 8, scope: !8662)
!8684 = !DILocation(line: 2463, column: 13, scope: !8662)
!8685 = !DILocation(line: 2464, column: 3, scope: !8662)
!8686 = !DILocation(line: 2466, column: 3, scope: !8662)
!8687 = !DILocation(line: 2469, column: 6, scope: !8628)
!8688 = !DILocation(line: 2472, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2472, column: 6)
!8690 = !DILocation(line: 2472, column: 11, scope: !8689)
!8691 = !DILocation(line: 2472, column: 17, scope: !8689)
!8692 = !DILocation(line: 2472, column: 24, scope: !8689)
!8693 = !DILocation(line: 2472, column: 29, scope: !8689)
!8694 = !DILocation(line: 2472, column: 33, scope: !8689)
!8695 = !DILocation(line: 2472, column: 38, scope: !8689)
!8696 = !DILocation(line: 2472, column: 44, scope: !8689)
!8697 = !DILocation(line: 2472, column: 50, scope: !8689)
!8698 = !DILocation(line: 2472, column: 6, scope: !8628)
!8699 = !DILocation(line: 2473, column: 9, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2472, column: 65)
!8701 = !DILocation(line: 2473, column: 17, scope: !8700)
!8702 = !DILocation(line: 2473, column: 7, scope: !8700)
!8703 = !DILocation(line: 2474, column: 9, scope: !8700)
!8704 = !DILocation(line: 2474, column: 16, scope: !8700)
!8705 = !DILocation(line: 2474, column: 20, scope: !8700)
!8706 = !DILocation(line: 2474, column: 13, scope: !8700)
!8707 = !DILocation(line: 2474, column: 7, scope: !8700)
!8708 = !DILocation(line: 2475, column: 7, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 2475, column: 7)
!8710 = !DILocation(line: 2475, column: 15, scope: !8709)
!8711 = !DILocation(line: 2475, column: 23, scope: !8709)
!8712 = !DILocation(line: 2475, column: 11, scope: !8709)
!8713 = !DILocation(line: 2475, column: 7, scope: !8700)
!8714 = !DILocation(line: 2476, column: 4, scope: !8709)
!8715 = !DILocation(line: 2477, column: 2, scope: !8700)
!8716 = !DILocation(line: 2477, column: 13, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8689, file: !3, line: 2477, column: 13)
!8718 = !DILocation(line: 2477, column: 18, scope: !8717)
!8719 = !DILocation(line: 2477, column: 24, scope: !8717)
!8720 = !DILocation(line: 2477, column: 31, scope: !8717)
!8721 = !DILocation(line: 2477, column: 13, scope: !8689)
!8722 = !DILocation(line: 2478, column: 9, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2477, column: 37)
!8724 = !DILocation(line: 2478, column: 17, scope: !8723)
!8725 = !DILocation(line: 2478, column: 7, scope: !8723)
!8726 = !DILocation(line: 2479, column: 9, scope: !8723)
!8727 = !DILocation(line: 2479, column: 16, scope: !8723)
!8728 = !DILocation(line: 2479, column: 20, scope: !8723)
!8729 = !DILocation(line: 2479, column: 13, scope: !8723)
!8730 = !DILocation(line: 2479, column: 7, scope: !8723)
!8731 = !DILocation(line: 2480, column: 9, scope: !8723)
!8732 = !DILocation(line: 2480, column: 16, scope: !8723)
!8733 = !DILocation(line: 2480, column: 20, scope: !8723)
!8734 = !DILocation(line: 2480, column: 13, scope: !8723)
!8735 = !DILocation(line: 2480, column: 7, scope: !8723)
!8736 = !DILocation(line: 2481, column: 7, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 2481, column: 7)
!8738 = !DILocation(line: 2481, column: 14, scope: !8737)
!8739 = !DILocation(line: 2481, column: 11, scope: !8737)
!8740 = !DILocation(line: 2481, column: 7, scope: !8723)
!8741 = !DILocation(line: 2482, column: 4, scope: !8737)
!8742 = !DILocation(line: 2483, column: 2, scope: !8723)
!8743 = !DILocation(line: 2483, column: 13, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2483, column: 13)
!8745 = !DILocation(line: 2483, column: 18, scope: !8744)
!8746 = !DILocation(line: 2483, column: 24, scope: !8744)
!8747 = !DILocation(line: 2483, column: 31, scope: !8744)
!8748 = !DILocation(line: 2483, column: 13, scope: !8717)
!8749 = !DILocation(line: 2484, column: 9, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 2483, column: 37)
!8751 = !DILocation(line: 2484, column: 17, scope: !8750)
!8752 = !DILocation(line: 2484, column: 7, scope: !8750)
!8753 = !DILocation(line: 2485, column: 9, scope: !8750)
!8754 = !DILocation(line: 2485, column: 16, scope: !8750)
!8755 = !DILocation(line: 2485, column: 20, scope: !8750)
!8756 = !DILocation(line: 2485, column: 13, scope: !8750)
!8757 = !DILocation(line: 2485, column: 7, scope: !8750)
!8758 = !DILocation(line: 2486, column: 9, scope: !8750)
!8759 = !DILocation(line: 2486, column: 16, scope: !8750)
!8760 = !DILocation(line: 2486, column: 20, scope: !8750)
!8761 = !DILocation(line: 2486, column: 13, scope: !8750)
!8762 = !DILocation(line: 2486, column: 7, scope: !8750)
!8763 = !DILocation(line: 2487, column: 8, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 2487, column: 7)
!8765 = !DILocation(line: 2487, column: 15, scope: !8764)
!8766 = !DILocation(line: 2487, column: 12, scope: !8764)
!8767 = !DILocation(line: 2487, column: 24, scope: !8764)
!8768 = !DILocation(line: 2487, column: 28, scope: !8764)
!8769 = !DILocation(line: 2487, column: 35, scope: !8764)
!8770 = !DILocation(line: 2487, column: 32, scope: !8764)
!8771 = !DILocation(line: 2487, column: 7, scope: !8750)
!8772 = !DILocation(line: 2488, column: 4, scope: !8764)
!8773 = !DILocation(line: 2489, column: 2, scope: !8750)
!8774 = !DILocation(line: 2491, column: 7, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2491, column: 6)
!8776 = !DILocation(line: 2491, column: 6, scope: !8628)
!8777 = !DILocation(line: 2492, column: 3, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 2491, column: 12)
!8779 = !DILocation(line: 2493, column: 3, scope: !8778)
!8780 = !DILocation(line: 2495, column: 20, scope: !8628)
!8781 = !DILocation(line: 2495, column: 24, scope: !8628)
!8782 = !DILocation(line: 2495, column: 34, scope: !8628)
!8783 = !DILocation(line: 2495, column: 2, scope: !8628)
!8784 = !DILocation(line: 2495, column: 7, scope: !8628)
!8785 = !DILocation(line: 2495, column: 11, scope: !8628)
!8786 = !DILocation(line: 2496, column: 9, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2496, column: 2)
!8788 = !DILocation(line: 2496, column: 7, scope: !8787)
!8789 = !DILocation(line: 2496, column: 14, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2496, column: 2)
!8791 = !DILocation(line: 2496, column: 16, scope: !8790)
!8792 = !DILocation(line: 2496, column: 2, scope: !8787)
!8793 = !DILocation(line: 2497, column: 37, scope: !8790)
!8794 = !DILocation(line: 2497, column: 39, scope: !8790)
!8795 = !DILocation(line: 2497, column: 32, scope: !8790)
!8796 = !DILocation(line: 2497, column: 26, scope: !8790)
!8797 = !DILocation(line: 2497, column: 44, scope: !8790)
!8798 = !DILocation(line: 2497, column: 3, scope: !8790)
!8799 = !DILocation(line: 2497, column: 8, scope: !8790)
!8800 = !DILocation(line: 2497, column: 14, scope: !8790)
!8801 = !DILocation(line: 2497, column: 17, scope: !8790)
!8802 = !DILocation(line: 2497, column: 24, scope: !8790)
!8803 = !DILocation(line: 2496, column: 22, scope: !8790)
!8804 = !DILocation(line: 2496, column: 2, scope: !8790)
!8805 = distinct !{!8805, !8792, !8806}
!8806 = !DILocation(line: 2497, column: 46, scope: !8787)
!8807 = !DILocation(line: 2498, column: 7, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2498, column: 6)
!8809 = !DILocation(line: 2498, column: 16, scope: !8808)
!8810 = !DILocation(line: 2498, column: 24, scope: !8808)
!8811 = !DILocation(line: 2498, column: 6, scope: !8628)
!8812 = !DILocation(line: 2499, column: 3, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8808, file: !3, line: 2498, column: 30)
!8814 = !DILocation(line: 2500, column: 3, scope: !8813)
!8815 = !DILocation(line: 2502, column: 21, scope: !8628)
!8816 = !DILocation(line: 2502, column: 16, scope: !8628)
!8817 = !DILocation(line: 2502, column: 2, scope: !8628)
!8818 = !DILocation(line: 2502, column: 7, scope: !8628)
!8819 = !DILocation(line: 2502, column: 14, scope: !8628)
!8820 = !DILocation(line: 2503, column: 6, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2503, column: 6)
!8822 = !DILocation(line: 2503, column: 9, scope: !8821)
!8823 = !DILocation(line: 2503, column: 6, scope: !8628)
!8824 = !DILocation(line: 2504, column: 3, scope: !8821)
!8825 = !DILocation(line: 2504, column: 8, scope: !8821)
!8826 = !DILocation(line: 2504, column: 20, scope: !8821)
!8827 = !DILocation(line: 2506, column: 3, scope: !8821)
!8828 = !DILocation(line: 2506, column: 8, scope: !8821)
!8829 = !DILocation(line: 2506, column: 20, scope: !8821)
!8830 = !DILocation(line: 2507, column: 9, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2507, column: 2)
!8832 = !DILocation(line: 2507, column: 19, scope: !8831)
!8833 = !DILocation(line: 2507, column: 7, scope: !8831)
!8834 = !DILocation(line: 2507, column: 29, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8831, file: !3, line: 2507, column: 2)
!8836 = !DILocation(line: 2507, column: 31, scope: !8835)
!8837 = !DILocation(line: 2507, column: 2, scope: !8831)
!8838 = !DILocation(line: 2508, column: 7, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2508, column: 7)
!8840 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2507, column: 54)
!8841 = !DILocation(line: 2508, column: 18, scope: !8839)
!8842 = !DILocation(line: 2508, column: 16, scope: !8839)
!8843 = !DILocation(line: 2508, column: 7, scope: !8840)
!8844 = !DILocation(line: 2509, column: 4, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2508, column: 24)
!8846 = !DILocation(line: 2509, column: 9, scope: !8845)
!8847 = !DILocation(line: 2509, column: 15, scope: !8845)
!8848 = !DILocation(line: 2509, column: 18, scope: !8845)
!8849 = !DILocation(line: 2509, column: 28, scope: !8845)
!8850 = !DILocation(line: 2510, column: 4, scope: !8845)
!8851 = !DILocation(line: 2510, column: 9, scope: !8845)
!8852 = !DILocation(line: 2510, column: 15, scope: !8845)
!8853 = !DILocation(line: 2510, column: 18, scope: !8845)
!8854 = !DILocation(line: 2510, column: 27, scope: !8845)
!8855 = !DILocation(line: 2511, column: 3, scope: !8845)
!8856 = !DILocation(line: 2512, column: 4, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2511, column: 10)
!8858 = !DILocation(line: 2512, column: 9, scope: !8857)
!8859 = !DILocation(line: 2512, column: 15, scope: !8857)
!8860 = !DILocation(line: 2512, column: 18, scope: !8857)
!8861 = !DILocation(line: 2512, column: 28, scope: !8857)
!8862 = !DILocation(line: 2513, column: 4, scope: !8857)
!8863 = !DILocation(line: 2513, column: 9, scope: !8857)
!8864 = !DILocation(line: 2513, column: 15, scope: !8857)
!8865 = !DILocation(line: 2513, column: 18, scope: !8857)
!8866 = !DILocation(line: 2513, column: 27, scope: !8857)
!8867 = !DILocation(line: 2515, column: 2, scope: !8840)
!8868 = !DILocation(line: 2507, column: 38, scope: !8835)
!8869 = !DILocation(line: 2507, column: 47, scope: !8835)
!8870 = !DILocation(line: 2507, column: 2, scope: !8835)
!8871 = distinct !{!8871, !8837, !8872}
!8872 = !DILocation(line: 2515, column: 2, scope: !8831)
!8873 = !DILocation(line: 2516, column: 17, scope: !8628)
!8874 = !DILocation(line: 2516, column: 21, scope: !8628)
!8875 = !DILocation(line: 2516, column: 13, scope: !8628)
!8876 = !DILocation(line: 2516, column: 33, scope: !8628)
!8877 = !DILocation(line: 2516, column: 11, scope: !8628)
!8878 = !DILocation(line: 2517, column: 7, scope: !8628)
!8879 = !DILocation(line: 2517, column: 16, scope: !8628)
!8880 = !DILocation(line: 2517, column: 33, scope: !8628)
!8881 = !DILocation(line: 2517, column: 37, scope: !8628)
!8882 = !DILocation(line: 2517, column: 2, scope: !8628)
!8883 = !DILocation(line: 2518, column: 10, scope: !8628)
!8884 = !DILocation(line: 2518, column: 14, scope: !8628)
!8885 = !DILocation(line: 2518, column: 2, scope: !8628)
!8886 = !DILocation(line: 2519, column: 7, scope: !8628)
!8887 = !DILocation(line: 2519, column: 17, scope: !8628)
!8888 = !DILocation(line: 2519, column: 21, scope: !8628)
!8889 = !DILocation(line: 2519, column: 2, scope: !8628)
!8890 = !DILocation(line: 2520, column: 29, scope: !8628)
!8891 = !DILocation(line: 2520, column: 33, scope: !8628)
!8892 = !DILocation(line: 2520, column: 2, scope: !8628)
!8893 = !DILocation(line: 2521, column: 16, scope: !8628)
!8894 = !DILocation(line: 2521, column: 20, scope: !8628)
!8895 = !DILocation(line: 2521, column: 12, scope: !8628)
!8896 = !DILocation(line: 2521, column: 10, scope: !8628)
!8897 = !DILocation(line: 2523, column: 6, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2523, column: 6)
!8899 = !DILocation(line: 2523, column: 14, scope: !8898)
!8900 = !DILocation(line: 2523, column: 6, scope: !8628)
!8901 = !DILocation(line: 2524, column: 3, scope: !8898)
!8902 = !DILocation(line: 2524, column: 8, scope: !8898)
!8903 = !DILocation(line: 2524, column: 18, scope: !8898)
!8904 = !DILocation(line: 2526, column: 3, scope: !8898)
!8905 = !DILocation(line: 2526, column: 8, scope: !8898)
!8906 = !DILocation(line: 2526, column: 18, scope: !8898)
!8907 = !DILocation(line: 2527, column: 7, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2527, column: 6)
!8909 = !DILocation(line: 2527, column: 6, scope: !8628)
!8910 = !DILocation(line: 2531, column: 5, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 2528, column: 18)
!8912 = !DILocation(line: 2531, column: 10, scope: !8911)
!8913 = !DILocation(line: 2531, column: 19, scope: !8911)
!8914 = !DILocation(line: 2531, column: 27, scope: !8911)
!8915 = !DILocation(line: 2531, column: 32, scope: !8911)
!8916 = !DILocation(line: 2531, column: 41, scope: !8911)
!8917 = !DILocation(line: 2532, column: 9, scope: !8911)
!8918 = !DILocation(line: 2532, column: 14, scope: !8911)
!8919 = !DILocation(line: 2532, column: 20, scope: !8911)
!8920 = !DILocation(line: 2532, column: 7, scope: !8911)
!8921 = !DILocation(line: 2532, column: 5, scope: !8911)
!8922 = !DILocation(line: 2531, column: 48, scope: !8911)
!8923 = !DILocation(line: 2532, column: 27, scope: !8911)
!8924 = !DILocation(line: 2529, column: 3, scope: !8911)
!8925 = !DILocation(line: 2533, column: 3, scope: !8911)
!8926 = !DILocation(line: 2536, column: 29, scope: !8628)
!8927 = !DILocation(line: 2536, column: 8, scope: !8628)
!8928 = !DILocation(line: 2536, column: 6, scope: !8628)
!8929 = !DILocation(line: 2537, column: 6, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2537, column: 6)
!8931 = !DILocation(line: 2537, column: 6, scope: !8628)
!8932 = !DILocation(line: 2538, column: 3, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 2537, column: 11)
!8934 = !DILocation(line: 2541, column: 5, scope: !8933)
!8935 = !DILocation(line: 2541, column: 10, scope: !8933)
!8936 = !DILocation(line: 2541, column: 19, scope: !8933)
!8937 = !DILocation(line: 2541, column: 27, scope: !8933)
!8938 = !DILocation(line: 2541, column: 32, scope: !8933)
!8939 = !DILocation(line: 2541, column: 41, scope: !8933)
!8940 = !DILocation(line: 2542, column: 9, scope: !8933)
!8941 = !DILocation(line: 2542, column: 14, scope: !8933)
!8942 = !DILocation(line: 2542, column: 20, scope: !8933)
!8943 = !DILocation(line: 2542, column: 7, scope: !8933)
!8944 = !DILocation(line: 2542, column: 5, scope: !8933)
!8945 = !DILocation(line: 2541, column: 48, scope: !8933)
!8946 = !DILocation(line: 2542, column: 27, scope: !8933)
!8947 = !DILocation(line: 2539, column: 3, scope: !8933)
!8948 = !DILocation(line: 2543, column: 10, scope: !8933)
!8949 = !DILocation(line: 2543, column: 3, scope: !8933)
!8950 = !DILocation(line: 2545, column: 9, scope: !8628)
!8951 = !DILocation(line: 2545, column: 14, scope: !8628)
!8952 = !DILocation(line: 2545, column: 20, scope: !8628)
!8953 = !DILocation(line: 2545, column: 2, scope: !8628)
!8954 = !DILabel(scope: !8628, name: "err_irqconflict", file: !3, line: 2547)
!8955 = !DILocation(line: 2547, column: 1, scope: !8628)
!8956 = !DILocation(line: 2548, column: 2, scope: !8628)
!8957 = !DILocation(line: 2549, column: 2, scope: !8628)
!8958 = !DILocation(line: 2550, column: 1, scope: !8628)
!8959 = distinct !DISubprogram(name: "mxser_open", scope: !3, file: !3, line: 998, type: !3921, scopeLine: 999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!8960 = !DILocalVariable(name: "tty", arg: 1, scope: !8959, file: !3, line: 998, type: !213)
!8961 = !DILocation(line: 998, column: 42, scope: !8959)
!8962 = !DILocalVariable(name: "filp", arg: 2, scope: !8959, file: !3, line: 998, type: !351)
!8963 = !DILocation(line: 998, column: 60, scope: !8959)
!8964 = !DILocalVariable(name: "info", scope: !8959, file: !3, line: 1000, type: !114)
!8965 = !DILocation(line: 1000, column: 21, scope: !8959)
!8966 = !DILocalVariable(name: "line", scope: !8959, file: !3, line: 1001, type: !113)
!8967 = !DILocation(line: 1001, column: 6, scope: !8959)
!8968 = !DILocation(line: 1003, column: 9, scope: !8959)
!8969 = !DILocation(line: 1003, column: 14, scope: !8959)
!8970 = !DILocation(line: 1003, column: 7, scope: !8959)
!8971 = !DILocation(line: 1004, column: 6, scope: !8972)
!8972 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 1004, column: 6)
!8973 = !DILocation(line: 1004, column: 11, scope: !8972)
!8974 = !DILocation(line: 1004, column: 6, scope: !8959)
!8975 = !DILocation(line: 1005, column: 3, scope: !8972)
!8976 = !DILocation(line: 1006, column: 23, scope: !8959)
!8977 = !DILocation(line: 1006, column: 28, scope: !8959)
!8978 = !DILocation(line: 1006, column: 10, scope: !8959)
!8979 = !DILocation(line: 1006, column: 53, scope: !8959)
!8980 = !DILocation(line: 1006, column: 59, scope: !8959)
!8981 = !DILocation(line: 1006, column: 64, scope: !8959)
!8982 = !DILocation(line: 1006, column: 7, scope: !8959)
!8983 = !DILocation(line: 1007, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8959, file: !3, line: 1007, column: 6)
!8985 = !DILocation(line: 1007, column: 13, scope: !8984)
!8986 = !DILocation(line: 1007, column: 6, scope: !8959)
!8987 = !DILocation(line: 1008, column: 3, scope: !8984)
!8988 = !DILocation(line: 1010, column: 21, scope: !8959)
!8989 = !DILocation(line: 1010, column: 2, scope: !8959)
!8990 = !DILocation(line: 1010, column: 7, scope: !8959)
!8991 = !DILocation(line: 1010, column: 19, scope: !8959)
!8992 = !DILocation(line: 1011, column: 24, scope: !8959)
!8993 = !DILocation(line: 1011, column: 30, scope: !8959)
!8994 = !DILocation(line: 1011, column: 36, scope: !8959)
!8995 = !DILocation(line: 1011, column: 41, scope: !8959)
!8996 = !DILocation(line: 1011, column: 9, scope: !8959)
!8997 = !DILocation(line: 1011, column: 2, scope: !8959)
!8998 = !DILocation(line: 1012, column: 1, scope: !8959)
!8999 = distinct !DISubprogram(name: "mxser_close", scope: !3, file: !3, line: 1069, type: !3925, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9000 = !DILocalVariable(name: "tty", arg: 1, scope: !8999, file: !3, line: 1069, type: !213)
!9001 = !DILocation(line: 1069, column: 44, scope: !8999)
!9002 = !DILocalVariable(name: "filp", arg: 2, scope: !8999, file: !3, line: 1069, type: !351)
!9003 = !DILocation(line: 1069, column: 62, scope: !8999)
!9004 = !DILocalVariable(name: "info", scope: !8999, file: !3, line: 1071, type: !114)
!9005 = !DILocation(line: 1071, column: 21, scope: !8999)
!9006 = !DILocation(line: 1071, column: 28, scope: !8999)
!9007 = !DILocation(line: 1071, column: 33, scope: !8999)
!9008 = !DILocalVariable(name: "port", scope: !8999, file: !3, line: 1072, type: !3897)
!9009 = !DILocation(line: 1072, column: 19, scope: !8999)
!9010 = !DILocation(line: 1072, column: 27, scope: !8999)
!9011 = !DILocation(line: 1072, column: 33, scope: !8999)
!9012 = !DILocation(line: 1074, column: 6, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1074, column: 6)
!9014 = !DILocation(line: 1074, column: 11, scope: !9013)
!9015 = !DILocation(line: 1074, column: 17, scope: !9013)
!9016 = !DILocation(line: 1074, column: 32, scope: !9013)
!9017 = !DILocation(line: 1074, column: 35, scope: !9013)
!9018 = !DILocation(line: 1074, column: 40, scope: !9013)
!9019 = !DILocation(line: 1074, column: 6, scope: !8999)
!9020 = !DILocation(line: 1075, column: 3, scope: !9013)
!9021 = !DILocation(line: 1076, column: 27, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1076, column: 6)
!9023 = !DILocation(line: 1076, column: 33, scope: !9022)
!9024 = !DILocation(line: 1076, column: 38, scope: !9022)
!9025 = !DILocation(line: 1076, column: 6, scope: !9022)
!9026 = !DILocation(line: 1076, column: 44, scope: !9022)
!9027 = !DILocation(line: 1076, column: 6, scope: !8999)
!9028 = !DILocation(line: 1077, column: 3, scope: !9022)
!9029 = !DILocation(line: 1078, column: 2, scope: !8999)
!9030 = !DILocation(line: 1078, column: 8, scope: !8999)
!9031 = !DILocation(line: 1078, column: 16, scope: !8999)
!9032 = !DILocation(line: 1079, column: 14, scope: !8999)
!9033 = !DILocation(line: 1079, column: 20, scope: !8999)
!9034 = !DILocation(line: 1079, column: 2, scope: !8999)
!9035 = !DILocation(line: 1080, column: 19, scope: !8999)
!9036 = !DILocation(line: 1080, column: 2, scope: !8999)
!9037 = !DILocation(line: 1081, column: 21, scope: !8999)
!9038 = !DILocation(line: 1081, column: 2, scope: !8999)
!9039 = !DILocation(line: 1082, column: 27, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1082, column: 6)
!9041 = !DILocation(line: 1082, column: 6, scope: !9040)
!9042 = !DILocation(line: 1082, column: 33, scope: !9040)
!9043 = !DILocation(line: 1082, column: 36, scope: !9040)
!9044 = !DILocation(line: 1082, column: 6, scope: !8999)
!9045 = !DILocation(line: 1083, column: 26, scope: !9040)
!9046 = !DILocation(line: 1083, column: 3, scope: !9040)
!9047 = !DILocation(line: 1084, column: 22, scope: !8999)
!9048 = !DILocation(line: 1084, column: 2, scope: !8999)
!9049 = !DILocation(line: 1085, column: 27, scope: !8999)
!9050 = !DILocation(line: 1085, column: 2, scope: !8999)
!9051 = !DILocation(line: 1086, column: 16, scope: !8999)
!9052 = !DILocation(line: 1086, column: 22, scope: !8999)
!9053 = !DILocation(line: 1086, column: 2, scope: !8999)
!9054 = !DILocation(line: 1087, column: 2, scope: !8999)
!9055 = !DILocation(line: 1087, column: 8, scope: !8999)
!9056 = !DILocation(line: 1087, column: 16, scope: !8999)
!9057 = !DILocation(line: 1090, column: 21, scope: !8999)
!9058 = !DILocation(line: 1090, column: 27, scope: !8999)
!9059 = !DILocation(line: 1090, column: 2, scope: !8999)
!9060 = !DILocation(line: 1091, column: 19, scope: !8999)
!9061 = !DILocation(line: 1091, column: 2, scope: !8999)
!9062 = !DILocation(line: 1092, column: 1, scope: !8999)
!9063 = distinct !DISubprogram(name: "mxser_write", scope: !3, file: !3, line: 1094, type: !3934, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9064 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9065)
!9065 = distinct !DILocation(line: 1125, column: 4, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1125, column: 4)
!9067 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1125, column: 4)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1125, column: 4)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1125, column: 4)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 1125, column: 4)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 1124, column: 31)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 1122, column: 7)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 1121, column: 39)
!9074 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1121, column: 6)
!9075 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9076)
!9076 = distinct !DILocation(line: 1114, column: 3, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1103, column: 12)
!9078 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9076)
!9079 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9080)
!9080 = distinct !DILocation(line: 1130, column: 4, scope: !9071)
!9081 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9080)
!9082 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9083)
!9083 = distinct !DILocation(line: 1110, column: 3, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 1110, column: 3)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1110, column: 3)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1110, column: 3)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 1110, column: 3)
!9088 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1110, column: 3)
!9089 = !DILocalVariable(name: "tty", arg: 1, scope: !9063, file: !3, line: 1094, type: !213)
!9090 = !DILocation(line: 1094, column: 43, scope: !9063)
!9091 = !DILocalVariable(name: "buf", arg: 2, scope: !9063, file: !3, line: 1094, type: !417)
!9092 = !DILocation(line: 1094, column: 69, scope: !9063)
!9093 = !DILocalVariable(name: "count", arg: 3, scope: !9063, file: !3, line: 1094, type: !113)
!9094 = !DILocation(line: 1094, column: 78, scope: !9063)
!9095 = !DILocalVariable(name: "c", scope: !9063, file: !3, line: 1096, type: !113)
!9096 = !DILocation(line: 1096, column: 6, scope: !9063)
!9097 = !DILocalVariable(name: "total", scope: !9063, file: !3, line: 1096, type: !113)
!9098 = !DILocation(line: 1096, column: 9, scope: !9063)
!9099 = !DILocalVariable(name: "info", scope: !9063, file: !3, line: 1097, type: !114)
!9100 = !DILocation(line: 1097, column: 21, scope: !9063)
!9101 = !DILocation(line: 1097, column: 28, scope: !9063)
!9102 = !DILocation(line: 1097, column: 33, scope: !9063)
!9103 = !DILocalVariable(name: "flags", scope: !9063, file: !3, line: 1098, type: !145)
!9104 = !DILocation(line: 1098, column: 16, scope: !9063)
!9105 = !DILocation(line: 1100, column: 7, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1100, column: 6)
!9107 = !DILocation(line: 1100, column: 13, scope: !9106)
!9108 = !DILocation(line: 1100, column: 18, scope: !9106)
!9109 = !DILocation(line: 1100, column: 6, scope: !9063)
!9110 = !DILocation(line: 1101, column: 3, scope: !9106)
!9111 = !DILocation(line: 1103, column: 2, scope: !9063)
!9112 = !DILocalVariable(name: "__UNIQUE_ID___x254", scope: !9113, file: !3, line: 1104, type: !113)
!9113 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1104, column: 7)
!9114 = !DILocation(line: 1104, column: 7, scope: !9113)
!9115 = !DILocalVariable(name: "__UNIQUE_ID___y255", scope: !9113, file: !3, line: 1104, type: !113)
!9116 = !DILocalVariable(name: "__UNIQUE_ID___x252", scope: !9117, file: !3, line: 1104, type: !145)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 1104, column: 7)
!9118 = !DILocation(line: 1104, column: 7, scope: !9117)
!9119 = !DILocalVariable(name: "__UNIQUE_ID___y253", scope: !9117, file: !3, line: 1104, type: !145)
!9120 = !DILocation(line: 1104, column: 5, scope: !9077)
!9121 = !DILocation(line: 1106, column: 7, scope: !9122)
!9122 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 1106, column: 7)
!9123 = !DILocation(line: 1106, column: 9, scope: !9122)
!9124 = !DILocation(line: 1106, column: 7, scope: !9077)
!9125 = !DILocation(line: 1107, column: 4, scope: !9122)
!9126 = !DILocation(line: 1109, column: 10, scope: !9077)
!9127 = !DILocation(line: 1109, column: 16, scope: !9077)
!9128 = !DILocation(line: 1109, column: 21, scope: !9077)
!9129 = !DILocation(line: 1109, column: 32, scope: !9077)
!9130 = !DILocation(line: 1109, column: 38, scope: !9077)
!9131 = !DILocation(line: 1109, column: 30, scope: !9077)
!9132 = !DILocation(line: 1109, column: 49, scope: !9077)
!9133 = !DILocation(line: 1109, column: 54, scope: !9077)
!9134 = !DILocation(line: 1109, column: 3, scope: !9077)
!9135 = !DILocation(line: 1110, column: 3, scope: !9077)
!9136 = !DILocation(line: 1110, column: 3, scope: !9088)
!9137 = !DILocalVariable(name: "__dummy", scope: !9138, file: !3, line: 1110, type: !145)
!9138 = distinct !DILexicalBlock(scope: !9087, file: !3, line: 1110, column: 3)
!9139 = !DILocation(line: 1110, column: 3, scope: !9138)
!9140 = !DILocalVariable(name: "__dummy2", scope: !9138, file: !3, line: 1110, type: !145)
!9141 = !DILocation(line: 1110, column: 3, scope: !9087)
!9142 = !DILocation(line: 1110, column: 3, scope: !9086)
!9143 = !DILocation(line: 1110, column: 3, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9086, file: !3, line: 1110, column: 3)
!9145 = !DILocalVariable(name: "__dummy", scope: !9146, file: !3, line: 1110, type: !145)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 1110, column: 3)
!9147 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 1110, column: 3)
!9148 = !DILocation(line: 1110, column: 3, scope: !9146)
!9149 = !DILocalVariable(name: "__dummy2", scope: !9146, file: !3, line: 1110, type: !145)
!9150 = !DILocation(line: 1110, column: 3, scope: !9147)
!9151 = !DILocation(line: 1110, column: 3, scope: !9085)
!9152 = !{i32 -2141457798}
!9153 = !DILocation(line: 1110, column: 3, scope: !9084)
!9154 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9083)
!9155 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9083)
!9156 = !DILocation(line: 1111, column: 22, scope: !9077)
!9157 = !DILocation(line: 1111, column: 28, scope: !9077)
!9158 = !DILocation(line: 1111, column: 40, scope: !9077)
!9159 = !DILocation(line: 1111, column: 38, scope: !9077)
!9160 = !DILocation(line: 1111, column: 21, scope: !9077)
!9161 = !DILocation(line: 1111, column: 43, scope: !9077)
!9162 = !DILocation(line: 1111, column: 3, scope: !9077)
!9163 = !DILocation(line: 1111, column: 9, scope: !9077)
!9164 = !DILocation(line: 1111, column: 19, scope: !9077)
!9165 = !DILocation(line: 1113, column: 21, scope: !9077)
!9166 = !DILocation(line: 1113, column: 3, scope: !9077)
!9167 = !DILocation(line: 1113, column: 9, scope: !9077)
!9168 = !DILocation(line: 1113, column: 18, scope: !9077)
!9169 = !DILocation(line: 1114, column: 27, scope: !9077)
!9170 = !DILocation(line: 1114, column: 33, scope: !9077)
!9171 = !DILocation(line: 1114, column: 40, scope: !9077)
!9172 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9076)
!9173 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9076)
!9174 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9076)
!9175 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9076)
!9176 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9076)
!9177 = !DILocation(line: 1116, column: 10, scope: !9077)
!9178 = !DILocation(line: 1116, column: 7, scope: !9077)
!9179 = !DILocation(line: 1117, column: 12, scope: !9077)
!9180 = !DILocation(line: 1117, column: 9, scope: !9077)
!9181 = !DILocation(line: 1118, column: 12, scope: !9077)
!9182 = !DILocation(line: 1118, column: 9, scope: !9077)
!9183 = distinct !{!9183, !9111, !9184}
!9184 = !DILocation(line: 1119, column: 2, scope: !9063)
!9185 = !DILocation(line: 1121, column: 6, scope: !9074)
!9186 = !DILocation(line: 1121, column: 12, scope: !9074)
!9187 = !DILocation(line: 1121, column: 21, scope: !9074)
!9188 = !DILocation(line: 1121, column: 25, scope: !9074)
!9189 = !DILocation(line: 1121, column: 30, scope: !9074)
!9190 = !DILocation(line: 1121, column: 6, scope: !9063)
!9191 = !DILocation(line: 1122, column: 8, scope: !9072)
!9192 = !DILocation(line: 1122, column: 13, scope: !9072)
!9193 = !DILocation(line: 1122, column: 24, scope: !9072)
!9194 = !DILocation(line: 1123, column: 6, scope: !9072)
!9195 = !DILocation(line: 1123, column: 12, scope: !9072)
!9196 = !DILocation(line: 1123, column: 17, scope: !9072)
!9197 = !DILocation(line: 1123, column: 33, scope: !9072)
!9198 = !DILocation(line: 1124, column: 6, scope: !9072)
!9199 = !DILocation(line: 1124, column: 12, scope: !9072)
!9200 = !DILocation(line: 1124, column: 19, scope: !9072)
!9201 = !DILocation(line: 1124, column: 5, scope: !9072)
!9202 = !DILocation(line: 1122, column: 7, scope: !9073)
!9203 = !DILocation(line: 1125, column: 4, scope: !9071)
!9204 = !DILocation(line: 1125, column: 4, scope: !9070)
!9205 = !DILocalVariable(name: "__dummy", scope: !9206, file: !3, line: 1125, type: !145)
!9206 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1125, column: 4)
!9207 = !DILocation(line: 1125, column: 4, scope: !9206)
!9208 = !DILocalVariable(name: "__dummy2", scope: !9206, file: !3, line: 1125, type: !145)
!9209 = !DILocation(line: 1125, column: 4, scope: !9069)
!9210 = !DILocation(line: 1125, column: 4, scope: !9068)
!9211 = !DILocation(line: 1125, column: 4, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 1125, column: 4)
!9213 = !DILocalVariable(name: "__dummy", scope: !9214, file: !3, line: 1125, type: !145)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 1125, column: 4)
!9215 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 1125, column: 4)
!9216 = !DILocation(line: 1125, column: 4, scope: !9214)
!9217 = !DILocalVariable(name: "__dummy2", scope: !9214, file: !3, line: 1125, type: !145)
!9218 = !DILocation(line: 1125, column: 4, scope: !9215)
!9219 = !DILocation(line: 1125, column: 4, scope: !9067)
!9220 = !{i32 -2141456700}
!9221 = !DILocation(line: 1125, column: 4, scope: !9066)
!9222 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9065)
!9223 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9065)
!9224 = !DILocation(line: 1126, column: 9, scope: !9071)
!9225 = !DILocation(line: 1126, column: 15, scope: !9071)
!9226 = !DILocation(line: 1126, column: 19, scope: !9071)
!9227 = !DILocation(line: 1126, column: 37, scope: !9071)
!9228 = !DILocation(line: 1126, column: 43, scope: !9071)
!9229 = !DILocation(line: 1126, column: 50, scope: !9071)
!9230 = !DILocation(line: 1126, column: 4, scope: !9071)
!9231 = !DILocation(line: 1128, column: 4, scope: !9071)
!9232 = !DILocation(line: 1128, column: 10, scope: !9071)
!9233 = !DILocation(line: 1128, column: 14, scope: !9071)
!9234 = !DILocation(line: 1129, column: 9, scope: !9071)
!9235 = !DILocation(line: 1129, column: 15, scope: !9071)
!9236 = !DILocation(line: 1129, column: 20, scope: !9071)
!9237 = !DILocation(line: 1129, column: 26, scope: !9071)
!9238 = !DILocation(line: 1129, column: 33, scope: !9071)
!9239 = !DILocation(line: 1129, column: 4, scope: !9071)
!9240 = !DILocation(line: 1130, column: 28, scope: !9071)
!9241 = !DILocation(line: 1130, column: 34, scope: !9071)
!9242 = !DILocation(line: 1130, column: 41, scope: !9071)
!9243 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9080)
!9244 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9080)
!9245 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9080)
!9246 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9080)
!9247 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9080)
!9248 = !DILocation(line: 1131, column: 3, scope: !9071)
!9249 = !DILocation(line: 1132, column: 2, scope: !9073)
!9250 = !DILocation(line: 1133, column: 9, scope: !9063)
!9251 = !DILocation(line: 1133, column: 2, scope: !9063)
!9252 = !DILocation(line: 1134, column: 1, scope: !9063)
!9253 = distinct !DISubprogram(name: "mxser_put_char", scope: !3, file: !3, line: 1136, type: !3938, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9254 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9255)
!9255 = distinct !DILocation(line: 1156, column: 4, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 1156, column: 4)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1156, column: 4)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 1156, column: 4)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !3, line: 1156, column: 4)
!9260 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 1156, column: 4)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 1155, column: 29)
!9262 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 1153, column: 7)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 1152, column: 21)
!9264 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1152, column: 6)
!9265 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9266)
!9266 = distinct !DILocation(line: 1151, column: 2, scope: !9253)
!9267 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9266)
!9268 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9269)
!9269 = distinct !DILocation(line: 1160, column: 4, scope: !9261)
!9270 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9269)
!9271 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9272)
!9272 = distinct !DILocation(line: 1147, column: 2, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9274, file: !3, line: 1147, column: 2)
!9274 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 1147, column: 2)
!9275 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 1147, column: 2)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1147, column: 2)
!9277 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1147, column: 2)
!9278 = !DILocalVariable(name: "tty", arg: 1, scope: !9253, file: !3, line: 1136, type: !213)
!9279 = !DILocation(line: 1136, column: 46, scope: !9253)
!9280 = !DILocalVariable(name: "ch", arg: 2, scope: !9253, file: !3, line: 1136, type: !419)
!9281 = !DILocation(line: 1136, column: 65, scope: !9253)
!9282 = !DILocalVariable(name: "info", scope: !9253, file: !3, line: 1138, type: !114)
!9283 = !DILocation(line: 1138, column: 21, scope: !9253)
!9284 = !DILocation(line: 1138, column: 28, scope: !9253)
!9285 = !DILocation(line: 1138, column: 33, scope: !9253)
!9286 = !DILocalVariable(name: "flags", scope: !9253, file: !3, line: 1139, type: !145)
!9287 = !DILocation(line: 1139, column: 16, scope: !9253)
!9288 = !DILocation(line: 1141, column: 7, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1141, column: 6)
!9290 = !DILocation(line: 1141, column: 13, scope: !9289)
!9291 = !DILocation(line: 1141, column: 18, scope: !9289)
!9292 = !DILocation(line: 1141, column: 6, scope: !9253)
!9293 = !DILocation(line: 1142, column: 3, scope: !9289)
!9294 = !DILocation(line: 1144, column: 6, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1144, column: 6)
!9296 = !DILocation(line: 1144, column: 12, scope: !9295)
!9297 = !DILocation(line: 1144, column: 21, scope: !9295)
!9298 = !DILocation(line: 1144, column: 6, scope: !9253)
!9299 = !DILocation(line: 1145, column: 3, scope: !9295)
!9300 = !DILocation(line: 1147, column: 2, scope: !9253)
!9301 = !DILocation(line: 1147, column: 2, scope: !9277)
!9302 = !DILocalVariable(name: "__dummy", scope: !9303, file: !3, line: 1147, type: !145)
!9303 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 1147, column: 2)
!9304 = !DILocation(line: 1147, column: 2, scope: !9303)
!9305 = !DILocalVariable(name: "__dummy2", scope: !9303, file: !3, line: 1147, type: !145)
!9306 = !DILocation(line: 1147, column: 2, scope: !9276)
!9307 = !DILocation(line: 1147, column: 2, scope: !9275)
!9308 = !DILocation(line: 1147, column: 2, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 1147, column: 2)
!9310 = !DILocalVariable(name: "__dummy", scope: !9311, file: !3, line: 1147, type: !145)
!9311 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 1147, column: 2)
!9312 = distinct !DILexicalBlock(scope: !9309, file: !3, line: 1147, column: 2)
!9313 = !DILocation(line: 1147, column: 2, scope: !9311)
!9314 = !DILocalVariable(name: "__dummy2", scope: !9311, file: !3, line: 1147, type: !145)
!9315 = !DILocation(line: 1147, column: 2, scope: !9312)
!9316 = !DILocation(line: 1147, column: 2, scope: !9274)
!9317 = !{i32 -2141455580}
!9318 = !DILocation(line: 1147, column: 2, scope: !9273)
!9319 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9272)
!9320 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9272)
!9321 = !DILocation(line: 1148, column: 43, scope: !9253)
!9322 = !DILocation(line: 1148, column: 2, scope: !9253)
!9323 = !DILocation(line: 1148, column: 8, scope: !9253)
!9324 = !DILocation(line: 1148, column: 13, scope: !9253)
!9325 = !DILocation(line: 1148, column: 22, scope: !9253)
!9326 = !DILocation(line: 1148, column: 28, scope: !9253)
!9327 = !DILocation(line: 1148, column: 37, scope: !9253)
!9328 = !DILocation(line: 1148, column: 41, scope: !9253)
!9329 = !DILocation(line: 1149, column: 2, scope: !9253)
!9330 = !DILocation(line: 1149, column: 8, scope: !9253)
!9331 = !DILocation(line: 1149, column: 18, scope: !9253)
!9332 = !DILocation(line: 1150, column: 2, scope: !9253)
!9333 = !DILocation(line: 1150, column: 8, scope: !9253)
!9334 = !DILocation(line: 1150, column: 16, scope: !9253)
!9335 = !DILocation(line: 1151, column: 26, scope: !9253)
!9336 = !DILocation(line: 1151, column: 32, scope: !9253)
!9337 = !DILocation(line: 1151, column: 39, scope: !9253)
!9338 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9266)
!9339 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9266)
!9340 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9266)
!9341 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9266)
!9342 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9266)
!9343 = !DILocation(line: 1152, column: 7, scope: !9264)
!9344 = !DILocation(line: 1152, column: 12, scope: !9264)
!9345 = !DILocation(line: 1152, column: 6, scope: !9253)
!9346 = !DILocation(line: 1153, column: 8, scope: !9262)
!9347 = !DILocation(line: 1153, column: 13, scope: !9262)
!9348 = !DILocation(line: 1153, column: 24, scope: !9262)
!9349 = !DILocation(line: 1154, column: 6, scope: !9262)
!9350 = !DILocation(line: 1154, column: 12, scope: !9262)
!9351 = !DILocation(line: 1154, column: 17, scope: !9262)
!9352 = !DILocation(line: 1154, column: 33, scope: !9262)
!9353 = !DILocation(line: 1155, column: 5, scope: !9262)
!9354 = !DILocation(line: 1155, column: 11, scope: !9262)
!9355 = !DILocation(line: 1155, column: 18, scope: !9262)
!9356 = !DILocation(line: 1153, column: 7, scope: !9263)
!9357 = !DILocation(line: 1156, column: 4, scope: !9261)
!9358 = !DILocation(line: 1156, column: 4, scope: !9260)
!9359 = !DILocalVariable(name: "__dummy", scope: !9360, file: !3, line: 1156, type: !145)
!9360 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 1156, column: 4)
!9361 = !DILocation(line: 1156, column: 4, scope: !9360)
!9362 = !DILocalVariable(name: "__dummy2", scope: !9360, file: !3, line: 1156, type: !145)
!9363 = !DILocation(line: 1156, column: 4, scope: !9259)
!9364 = !DILocation(line: 1156, column: 4, scope: !9258)
!9365 = !DILocation(line: 1156, column: 4, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1156, column: 4)
!9367 = !DILocalVariable(name: "__dummy", scope: !9368, file: !3, line: 1156, type: !145)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 1156, column: 4)
!9369 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 1156, column: 4)
!9370 = !DILocation(line: 1156, column: 4, scope: !9368)
!9371 = !DILocalVariable(name: "__dummy2", scope: !9368, file: !3, line: 1156, type: !145)
!9372 = !DILocation(line: 1156, column: 4, scope: !9369)
!9373 = !DILocation(line: 1156, column: 4, scope: !9257)
!9374 = !{i32 -2141454482}
!9375 = !DILocation(line: 1156, column: 4, scope: !9256)
!9376 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9255)
!9377 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9255)
!9378 = !DILocation(line: 1157, column: 9, scope: !9261)
!9379 = !DILocation(line: 1157, column: 15, scope: !9261)
!9380 = !DILocation(line: 1157, column: 19, scope: !9261)
!9381 = !DILocation(line: 1157, column: 37, scope: !9261)
!9382 = !DILocation(line: 1157, column: 43, scope: !9261)
!9383 = !DILocation(line: 1157, column: 50, scope: !9261)
!9384 = !DILocation(line: 1157, column: 4, scope: !9261)
!9385 = !DILocation(line: 1158, column: 4, scope: !9261)
!9386 = !DILocation(line: 1158, column: 10, scope: !9261)
!9387 = !DILocation(line: 1158, column: 14, scope: !9261)
!9388 = !DILocation(line: 1159, column: 9, scope: !9261)
!9389 = !DILocation(line: 1159, column: 15, scope: !9261)
!9390 = !DILocation(line: 1159, column: 20, scope: !9261)
!9391 = !DILocation(line: 1159, column: 26, scope: !9261)
!9392 = !DILocation(line: 1159, column: 33, scope: !9261)
!9393 = !DILocation(line: 1159, column: 4, scope: !9261)
!9394 = !DILocation(line: 1160, column: 28, scope: !9261)
!9395 = !DILocation(line: 1160, column: 34, scope: !9261)
!9396 = !DILocation(line: 1160, column: 41, scope: !9261)
!9397 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9269)
!9398 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9269)
!9399 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9269)
!9400 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9269)
!9401 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9269)
!9402 = !DILocation(line: 1161, column: 3, scope: !9261)
!9403 = !DILocation(line: 1162, column: 2, scope: !9263)
!9404 = !DILocation(line: 1163, column: 2, scope: !9253)
!9405 = !DILocation(line: 1164, column: 1, scope: !9253)
!9406 = distinct !DISubprogram(name: "mxser_flush_chars", scope: !3, file: !3, line: 1167, type: !3929, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9407 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9408)
!9408 = distinct !DILocation(line: 1183, column: 2, scope: !9406)
!9409 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9408)
!9410 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9411)
!9411 = distinct !DILocation(line: 1177, column: 2, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 1177, column: 2)
!9413 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 1177, column: 2)
!9414 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1177, column: 2)
!9415 = distinct !DILexicalBlock(scope: !9416, file: !3, line: 1177, column: 2)
!9416 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1177, column: 2)
!9417 = !DILocalVariable(name: "tty", arg: 1, scope: !9406, file: !3, line: 1167, type: !213)
!9418 = !DILocation(line: 1167, column: 50, scope: !9406)
!9419 = !DILocalVariable(name: "info", scope: !9406, file: !3, line: 1169, type: !114)
!9420 = !DILocation(line: 1169, column: 21, scope: !9406)
!9421 = !DILocation(line: 1169, column: 28, scope: !9406)
!9422 = !DILocation(line: 1169, column: 33, scope: !9406)
!9423 = !DILocalVariable(name: "flags", scope: !9406, file: !3, line: 1170, type: !145)
!9424 = !DILocation(line: 1170, column: 16, scope: !9406)
!9425 = !DILocation(line: 1172, column: 6, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1172, column: 6)
!9427 = !DILocation(line: 1172, column: 12, scope: !9426)
!9428 = !DILocation(line: 1172, column: 21, scope: !9426)
!9429 = !DILocation(line: 1172, column: 26, scope: !9426)
!9430 = !DILocation(line: 1172, column: 29, scope: !9426)
!9431 = !DILocation(line: 1172, column: 34, scope: !9426)
!9432 = !DILocation(line: 1172, column: 42, scope: !9426)
!9433 = !DILocation(line: 1172, column: 46, scope: !9426)
!9434 = !DILocation(line: 1172, column: 52, scope: !9426)
!9435 = !DILocation(line: 1172, column: 57, scope: !9426)
!9436 = !DILocation(line: 1172, column: 66, scope: !9426)
!9437 = !DILocation(line: 1173, column: 5, scope: !9426)
!9438 = !DILocation(line: 1173, column: 10, scope: !9426)
!9439 = !DILocation(line: 1173, column: 21, scope: !9426)
!9440 = !DILocation(line: 1173, column: 24, scope: !9426)
!9441 = !DILocation(line: 1173, column: 30, scope: !9426)
!9442 = !DILocation(line: 1173, column: 35, scope: !9426)
!9443 = !DILocation(line: 1173, column: 50, scope: !9426)
!9444 = !DILocation(line: 1174, column: 6, scope: !9426)
!9445 = !DILocation(line: 1174, column: 12, scope: !9426)
!9446 = !DILocation(line: 1174, column: 19, scope: !9426)
!9447 = !DILocation(line: 1172, column: 6, scope: !9406)
!9448 = !DILocation(line: 1175, column: 3, scope: !9426)
!9449 = !DILocation(line: 1177, column: 2, scope: !9406)
!9450 = !DILocation(line: 1177, column: 2, scope: !9416)
!9451 = !DILocalVariable(name: "__dummy", scope: !9452, file: !3, line: 1177, type: !145)
!9452 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1177, column: 2)
!9453 = !DILocation(line: 1177, column: 2, scope: !9452)
!9454 = !DILocalVariable(name: "__dummy2", scope: !9452, file: !3, line: 1177, type: !145)
!9455 = !DILocation(line: 1177, column: 2, scope: !9415)
!9456 = !DILocation(line: 1177, column: 2, scope: !9414)
!9457 = !DILocation(line: 1177, column: 2, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 1177, column: 2)
!9459 = !DILocalVariable(name: "__dummy", scope: !9460, file: !3, line: 1177, type: !145)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 1177, column: 2)
!9461 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1177, column: 2)
!9462 = !DILocation(line: 1177, column: 2, scope: !9460)
!9463 = !DILocalVariable(name: "__dummy2", scope: !9460, file: !3, line: 1177, type: !145)
!9464 = !DILocation(line: 1177, column: 2, scope: !9461)
!9465 = !DILocation(line: 1177, column: 2, scope: !9413)
!9466 = !{i32 -2141453430}
!9467 = !DILocation(line: 1177, column: 2, scope: !9412)
!9468 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9411)
!9469 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9411)
!9470 = !DILocation(line: 1179, column: 7, scope: !9406)
!9471 = !DILocation(line: 1179, column: 13, scope: !9406)
!9472 = !DILocation(line: 1179, column: 17, scope: !9406)
!9473 = !DILocation(line: 1179, column: 35, scope: !9406)
!9474 = !DILocation(line: 1179, column: 41, scope: !9406)
!9475 = !DILocation(line: 1179, column: 48, scope: !9406)
!9476 = !DILocation(line: 1179, column: 2, scope: !9406)
!9477 = !DILocation(line: 1180, column: 2, scope: !9406)
!9478 = !DILocation(line: 1180, column: 8, scope: !9406)
!9479 = !DILocation(line: 1180, column: 12, scope: !9406)
!9480 = !DILocation(line: 1181, column: 7, scope: !9406)
!9481 = !DILocation(line: 1181, column: 13, scope: !9406)
!9482 = !DILocation(line: 1181, column: 18, scope: !9406)
!9483 = !DILocation(line: 1181, column: 24, scope: !9406)
!9484 = !DILocation(line: 1181, column: 31, scope: !9406)
!9485 = !DILocation(line: 1181, column: 2, scope: !9406)
!9486 = !DILocation(line: 1183, column: 26, scope: !9406)
!9487 = !DILocation(line: 1183, column: 32, scope: !9406)
!9488 = !DILocation(line: 1183, column: 39, scope: !9406)
!9489 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9408)
!9490 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9408)
!9491 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9408)
!9492 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9408)
!9493 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9408)
!9494 = !DILocation(line: 1184, column: 1, scope: !9406)
!9495 = distinct !DISubprogram(name: "mxser_write_room", scope: !3, file: !3, line: 1186, type: !3943, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9496 = !DILocalVariable(name: "tty", arg: 1, scope: !9495, file: !3, line: 1186, type: !213)
!9497 = !DILocation(line: 1186, column: 48, scope: !9495)
!9498 = !DILocalVariable(name: "info", scope: !9495, file: !3, line: 1188, type: !114)
!9499 = !DILocation(line: 1188, column: 21, scope: !9495)
!9500 = !DILocation(line: 1188, column: 28, scope: !9495)
!9501 = !DILocation(line: 1188, column: 33, scope: !9495)
!9502 = !DILocalVariable(name: "ret", scope: !9495, file: !3, line: 1189, type: !113)
!9503 = !DILocation(line: 1189, column: 6, scope: !9495)
!9504 = !DILocation(line: 1191, column: 27, scope: !9495)
!9505 = !DILocation(line: 1191, column: 33, scope: !9495)
!9506 = !DILocation(line: 1191, column: 25, scope: !9495)
!9507 = !DILocation(line: 1191, column: 42, scope: !9495)
!9508 = !DILocation(line: 1191, column: 8, scope: !9495)
!9509 = !DILocation(line: 1191, column: 6, scope: !9495)
!9510 = !DILocation(line: 1192, column: 9, scope: !9495)
!9511 = !DILocation(line: 1192, column: 13, scope: !9495)
!9512 = !DILocation(line: 1192, column: 23, scope: !9495)
!9513 = !DILocation(line: 1192, column: 2, scope: !9495)
!9514 = distinct !DISubprogram(name: "mxser_chars_in_buffer", scope: !3, file: !3, line: 1195, type: !3943, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9515 = !DILocalVariable(name: "tty", arg: 1, scope: !9514, file: !3, line: 1195, type: !213)
!9516 = !DILocation(line: 1195, column: 53, scope: !9514)
!9517 = !DILocalVariable(name: "info", scope: !9514, file: !3, line: 1197, type: !114)
!9518 = !DILocation(line: 1197, column: 21, scope: !9514)
!9519 = !DILocation(line: 1197, column: 28, scope: !9514)
!9520 = !DILocation(line: 1197, column: 33, scope: !9514)
!9521 = !DILocation(line: 1198, column: 9, scope: !9514)
!9522 = !DILocation(line: 1198, column: 15, scope: !9514)
!9523 = !DILocation(line: 1198, column: 2, scope: !9514)
!9524 = !DILocalVariable(name: "addr", arg: 1, scope: !9525, file: !9526, line: 138, type: !2178)
!9525 = distinct !DISubprogram(name: "check_copy_size", scope: !9526, file: !9526, line: 138, type: !9527, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9526 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!9527 = !DISubroutineType(types: !9528)
!9528 = !{!482, !2178, !321, !482}
!9529 = !DILocation(line: 138, column: 29, scope: !9525, inlinedAt: !9530)
!9530 = distinct !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !9536)
!9531 = distinct !DILexicalBlock(scope: !9533, file: !9532, line: 199, column: 6)
!9532 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!9533 = distinct !DISubprogram(name: "copy_to_user", scope: !9532, file: !9532, line: 197, type: !9534, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!145, !112, !2178, !145}
!9536 = distinct !DILocation(line: 1785, column: 7, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1785, column: 7)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1760, column: 22)
!9539 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1724, column: 15)
!9540 = !DILocalVariable(name: "bytes", arg: 2, scope: !9525, file: !9526, line: 138, type: !321)
!9541 = !DILocation(line: 138, column: 42, scope: !9525, inlinedAt: !9530)
!9542 = !DILocalVariable(name: "is_source", arg: 3, scope: !9525, file: !9526, line: 138, type: !482)
!9543 = !DILocation(line: 138, column: 54, scope: !9525, inlinedAt: !9530)
!9544 = !DILocalVariable(name: "sz", scope: !9525, file: !9526, line: 140, type: !113)
!9545 = !DILocation(line: 140, column: 6, scope: !9525, inlinedAt: !9530)
!9546 = !DILocalVariable(name: "__ret_warn_on", scope: !9547, file: !9526, line: 150, type: !113)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !9526, line: 150, column: 6)
!9548 = distinct !DILexicalBlock(scope: !9525, file: !9526, line: 150, column: 6)
!9549 = !DILocation(line: 150, column: 6, scope: !9547, inlinedAt: !9530)
!9550 = !DILocalVariable(name: "to", arg: 1, scope: !9533, file: !9532, line: 197, type: !112)
!9551 = !DILocation(line: 197, column: 27, scope: !9533, inlinedAt: !9536)
!9552 = !DILocalVariable(name: "from", arg: 2, scope: !9533, file: !9532, line: 197, type: !2178)
!9553 = !DILocation(line: 197, column: 43, scope: !9533, inlinedAt: !9536)
!9554 = !DILocalVariable(name: "n", arg: 3, scope: !9533, file: !9532, line: 197, type: !145)
!9555 = !DILocation(line: 197, column: 63, scope: !9533, inlinedAt: !9536)
!9556 = !DILocalVariable(name: "lock", arg: 1, scope: !9557, file: !5559, line: 402, type: !1084)
!9557 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !5559, file: !5559, line: 402, type: !5978, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9558 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !9559)
!9559 = distinct !DILocation(line: 1768, column: 3, scope: !9538)
!9560 = !DILocalVariable(name: "lock", arg: 1, scope: !9561, file: !5559, line: 377, type: !1084)
!9561 = distinct !DISubprogram(name: "spin_lock_irq", scope: !5559, file: !5559, line: 377, type: !5978, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!9562 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !9563)
!9563 = distinct !DILocation(line: 1763, column: 3, scope: !9538)
!9564 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !9565)
!9565 = distinct !DILocation(line: 1755, column: 3, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1749, column: 24)
!9567 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !9568)
!9568 = distinct !DILocation(line: 1753, column: 3, scope: !9566)
!9569 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !9570)
!9570 = distinct !DILocation(line: 1746, column: 3, scope: !9539)
!9571 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !9572)
!9572 = distinct !DILocation(line: 1743, column: 3, scope: !9539)
!9573 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !9574)
!9574 = distinct !DILocation(line: 1736, column: 3, scope: !9539)
!9575 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !9574)
!9576 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !9577)
!9577 = distinct !DILocation(line: 1734, column: 3, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 1734, column: 3)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 1734, column: 3)
!9580 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 1734, column: 3)
!9581 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 1734, column: 3)
!9582 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1734, column: 3)
!9583 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !9584)
!9584 = distinct !DILocation(line: 1713, column: 4, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 1709, column: 10)
!9586 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 1693, column: 7)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 1682, column: 58)
!9588 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1682, column: 6)
!9589 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 1711, column: 4, scope: !9585)
!9591 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 1708, column: 4, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 1693, column: 32)
!9594 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !9595)
!9595 = distinct !DILocation(line: 1703, column: 4, scope: !9593)
!9596 = !DILocalVariable(name: "tty", arg: 1, scope: !4739, file: !3, line: 1671, type: !213)
!9597 = !DILocation(line: 1671, column: 43, scope: !4739)
!9598 = !DILocalVariable(name: "cmd", arg: 2, scope: !4739, file: !3, line: 1672, type: !7)
!9599 = !DILocation(line: 1672, column: 16, scope: !4739)
!9600 = !DILocalVariable(name: "arg", arg: 3, scope: !4739, file: !3, line: 1672, type: !145)
!9601 = !DILocation(line: 1672, column: 35, scope: !4739)
!9602 = !DILocalVariable(name: "info", scope: !4739, file: !3, line: 1674, type: !114)
!9603 = !DILocation(line: 1674, column: 21, scope: !4739)
!9604 = !DILocation(line: 1674, column: 28, scope: !4739)
!9605 = !DILocation(line: 1674, column: 33, scope: !4739)
!9606 = !DILocalVariable(name: "cnow", scope: !4739, file: !3, line: 1675, type: !4251)
!9607 = !DILocation(line: 1675, column: 22, scope: !4739)
!9608 = !DILocalVariable(name: "flags", scope: !4739, file: !3, line: 1676, type: !145)
!9609 = !DILocation(line: 1676, column: 16, scope: !4739)
!9610 = !DILocalVariable(name: "argp", scope: !4739, file: !3, line: 1677, type: !112)
!9611 = !DILocation(line: 1677, column: 15, scope: !4739)
!9612 = !DILocation(line: 1677, column: 37, scope: !4739)
!9613 = !DILocation(line: 1677, column: 22, scope: !4739)
!9614 = !DILocation(line: 1679, column: 6, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1679, column: 6)
!9616 = !DILocation(line: 1679, column: 11, scope: !9615)
!9617 = !DILocation(line: 1679, column: 17, scope: !9615)
!9618 = !DILocation(line: 1679, column: 6, scope: !4739)
!9619 = !DILocation(line: 1680, column: 30, scope: !9615)
!9620 = !DILocation(line: 1680, column: 35, scope: !9615)
!9621 = !DILocation(line: 1680, column: 10, scope: !9615)
!9622 = !DILocation(line: 1680, column: 3, scope: !9615)
!9623 = !DILocation(line: 1682, column: 6, scope: !9588)
!9624 = !DILocation(line: 1682, column: 10, scope: !9588)
!9625 = !DILocation(line: 1682, column: 30, scope: !9588)
!9626 = !DILocation(line: 1682, column: 33, scope: !9588)
!9627 = !DILocation(line: 1682, column: 37, scope: !9588)
!9628 = !DILocation(line: 1682, column: 6, scope: !4739)
!9629 = !DILocalVariable(name: "p", scope: !9587, file: !3, line: 1683, type: !113)
!9630 = !DILocation(line: 1683, column: 7, scope: !9587)
!9631 = !DILocalVariable(name: "opmode", scope: !9587, file: !3, line: 1684, type: !145)
!9632 = !DILocation(line: 1684, column: 17, scope: !9587)
!9633 = !DILocalVariable(name: "shiftbit", scope: !9587, file: !3, line: 1686, type: !113)
!9634 = !DILocation(line: 1686, column: 7, scope: !9587)
!9635 = !DILocalVariable(name: "val", scope: !9587, file: !3, line: 1687, type: !419)
!9636 = !DILocation(line: 1687, column: 17, scope: !9587)
!9637 = !DILocalVariable(name: "mask", scope: !9587, file: !3, line: 1687, type: !419)
!9638 = !DILocation(line: 1687, column: 22, scope: !9587)
!9639 = !DILocation(line: 1689, column: 7, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 1689, column: 7)
!9641 = !DILocation(line: 1689, column: 13, scope: !9640)
!9642 = !DILocation(line: 1689, column: 20, scope: !9640)
!9643 = !DILocation(line: 1689, column: 30, scope: !9640)
!9644 = !DILocation(line: 1689, column: 7, scope: !9587)
!9645 = !DILocation(line: 1690, column: 4, scope: !9640)
!9646 = !DILocation(line: 1692, column: 7, scope: !9587)
!9647 = !DILocation(line: 1692, column: 12, scope: !9587)
!9648 = !DILocation(line: 1692, column: 18, scope: !9587)
!9649 = !DILocation(line: 1692, column: 5, scope: !9587)
!9650 = !DILocation(line: 1693, column: 7, scope: !9586)
!9651 = !DILocation(line: 1693, column: 11, scope: !9586)
!9652 = !DILocation(line: 1693, column: 7, scope: !9587)
!9653 = !DILocation(line: 1694, column: 8, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1694, column: 8)
!9655 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 1694, column: 8)
!9656 = !DILocalVariable(name: "__ret_gu", scope: !9657, file: !3, line: 1694, type: !113)
!9657 = distinct !DILexicalBlock(scope: !9654, file: !3, line: 1694, column: 8)
!9658 = !DILocation(line: 1694, column: 8, scope: !9657)
!9659 = !DILocalVariable(name: "__val_gu", scope: !9657, file: !3, line: 1694, type: !7)
!9660 = !{i32 -2141441035}
!9661 = !DILocation(line: 1694, column: 8, scope: !9655)
!9662 = !DILocation(line: 1694, column: 8, scope: !9593)
!9663 = !DILocation(line: 1695, column: 5, scope: !9655)
!9664 = !DILocation(line: 1696, column: 8, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 1696, column: 8)
!9666 = !DILocation(line: 1696, column: 15, scope: !9665)
!9667 = !DILocation(line: 1696, column: 29, scope: !9665)
!9668 = !DILocation(line: 1697, column: 6, scope: !9665)
!9669 = !DILocation(line: 1697, column: 13, scope: !9665)
!9670 = !DILocation(line: 1697, column: 33, scope: !9665)
!9671 = !DILocation(line: 1698, column: 6, scope: !9665)
!9672 = !DILocation(line: 1698, column: 13, scope: !9665)
!9673 = !DILocation(line: 1698, column: 27, scope: !9665)
!9674 = !DILocation(line: 1699, column: 6, scope: !9665)
!9675 = !DILocation(line: 1699, column: 13, scope: !9665)
!9676 = !DILocation(line: 1696, column: 8, scope: !9593)
!9677 = !DILocation(line: 1700, column: 5, scope: !9665)
!9678 = !DILocation(line: 1701, column: 20, scope: !9593)
!9679 = !DILocation(line: 1701, column: 11, scope: !9593)
!9680 = !DILocation(line: 1701, column: 9, scope: !9593)
!9681 = !DILocation(line: 1702, column: 15, scope: !9593)
!9682 = !DILocation(line: 1702, column: 17, scope: !9593)
!9683 = !DILocation(line: 1702, column: 13, scope: !9593)
!9684 = !DILocation(line: 1703, column: 19, scope: !9593)
!9685 = !DILocation(line: 1703, column: 25, scope: !9593)
!9686 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !9595)
!9687 = distinct !DILexicalBlock(scope: !9688, file: !5559, line: 379, column: 2)
!9688 = distinct !DILexicalBlock(scope: !9561, file: !5559, line: 379, column: 2)
!9689 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !9595)
!9690 = distinct !DILexicalBlock(scope: !9688, file: !5559, line: 379, column: 2)
!9691 = !{i32 -2145408882}
!9692 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !9595)
!9693 = distinct !DILexicalBlock(scope: !9690, file: !5559, line: 379, column: 2)
!9694 = !DILocation(line: 1704, column: 14, scope: !9593)
!9695 = !DILocation(line: 1704, column: 20, scope: !9593)
!9696 = !DILocation(line: 1704, column: 10, scope: !9593)
!9697 = !DILocation(line: 1704, column: 8, scope: !9593)
!9698 = !DILocation(line: 1705, column: 11, scope: !9593)
!9699 = !DILocation(line: 1705, column: 8, scope: !9593)
!9700 = !DILocation(line: 1706, column: 12, scope: !9593)
!9701 = !DILocation(line: 1706, column: 22, scope: !9593)
!9702 = !DILocation(line: 1706, column: 19, scope: !9593)
!9703 = !DILocation(line: 1706, column: 8, scope: !9593)
!9704 = !DILocation(line: 1707, column: 9, scope: !9593)
!9705 = !DILocation(line: 1707, column: 14, scope: !9593)
!9706 = !DILocation(line: 1707, column: 20, scope: !9593)
!9707 = !DILocation(line: 1707, column: 4, scope: !9593)
!9708 = !DILocation(line: 1708, column: 21, scope: !9593)
!9709 = !DILocation(line: 1708, column: 27, scope: !9593)
!9710 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !9592)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !5559, line: 404, column: 2)
!9712 = distinct !DILexicalBlock(scope: !9557, file: !5559, line: 404, column: 2)
!9713 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !9592)
!9714 = distinct !DILexicalBlock(scope: !9712, file: !5559, line: 404, column: 2)
!9715 = !{i32 -2145407134}
!9716 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !9592)
!9717 = distinct !DILexicalBlock(scope: !9714, file: !5559, line: 404, column: 2)
!9718 = !DILocation(line: 1709, column: 3, scope: !9593)
!9719 = !DILocation(line: 1710, column: 15, scope: !9585)
!9720 = !DILocation(line: 1710, column: 17, scope: !9585)
!9721 = !DILocation(line: 1710, column: 13, scope: !9585)
!9722 = !DILocation(line: 1711, column: 19, scope: !9585)
!9723 = !DILocation(line: 1711, column: 25, scope: !9585)
!9724 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !9590)
!9725 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !9590)
!9726 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !9590)
!9727 = !DILocation(line: 1712, column: 17, scope: !9585)
!9728 = !DILocation(line: 1712, column: 23, scope: !9585)
!9729 = !DILocation(line: 1712, column: 13, scope: !9585)
!9730 = !DILocation(line: 1712, column: 41, scope: !9585)
!9731 = !DILocation(line: 1712, column: 38, scope: !9585)
!9732 = !DILocation(line: 1712, column: 11, scope: !9585)
!9733 = !DILocation(line: 1713, column: 21, scope: !9585)
!9734 = !DILocation(line: 1713, column: 27, scope: !9585)
!9735 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !9584)
!9736 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !9584)
!9737 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !9584)
!9738 = !DILocation(line: 1714, column: 11, scope: !9585)
!9739 = !DILocation(line: 1715, column: 8, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 1715, column: 8)
!9741 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 1715, column: 8)
!9742 = !DILocalVariable(name: "__ret_pu", scope: !9743, file: !3, line: 1715, type: !113)
!9743 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1715, column: 8)
!9744 = !DILocation(line: 1715, column: 8, scope: !9743)
!9745 = !DILocalVariable(name: "__ptr_pu", scope: !9743, file: !3, line: 1715, type: !112)
!9746 = !DILocalVariable(name: "__val_pu", scope: !9743, file: !3, line: 1715, type: !113)
!9747 = !{i32 -2141438961}
!9748 = !DILocation(line: 1715, column: 8, scope: !9741)
!9749 = !DILocation(line: 1715, column: 8, scope: !9585)
!9750 = !DILocation(line: 1716, column: 5, scope: !9741)
!9751 = !DILocation(line: 1718, column: 3, scope: !9587)
!9752 = !DILocation(line: 1721, column: 6, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !4739, file: !3, line: 1721, column: 6)
!9754 = !DILocation(line: 1721, column: 10, scope: !9753)
!9755 = !DILocation(line: 1721, column: 24, scope: !9753)
!9756 = !DILocation(line: 1721, column: 40, scope: !9753)
!9757 = !DILocation(line: 1721, column: 27, scope: !9753)
!9758 = !DILocation(line: 1721, column: 6, scope: !4739)
!9759 = !DILocation(line: 1722, column: 3, scope: !9753)
!9760 = !DILocation(line: 1724, column: 10, scope: !4739)
!9761 = !DILocation(line: 1724, column: 2, scope: !4739)
!9762 = !DILocation(line: 1726, column: 30, scope: !9539)
!9763 = !DILocation(line: 1726, column: 36, scope: !9539)
!9764 = !DILocation(line: 1726, column: 11, scope: !9539)
!9765 = !DILocation(line: 1726, column: 3, scope: !9539)
!9766 = !DILocation(line: 1734, column: 3, scope: !9539)
!9767 = !DILocation(line: 1734, column: 3, scope: !9582)
!9768 = !DILocalVariable(name: "__dummy", scope: !9769, file: !3, line: 1734, type: !145)
!9769 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 1734, column: 3)
!9770 = !DILocation(line: 1734, column: 3, scope: !9769)
!9771 = !DILocalVariable(name: "__dummy2", scope: !9769, file: !3, line: 1734, type: !145)
!9772 = !DILocation(line: 1734, column: 3, scope: !9581)
!9773 = !DILocation(line: 1734, column: 3, scope: !9580)
!9774 = !DILocation(line: 1734, column: 3, scope: !9775)
!9775 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 1734, column: 3)
!9776 = !DILocalVariable(name: "__dummy", scope: !9777, file: !3, line: 1734, type: !145)
!9777 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 1734, column: 3)
!9778 = distinct !DILexicalBlock(scope: !9775, file: !3, line: 1734, column: 3)
!9779 = !DILocation(line: 1734, column: 3, scope: !9777)
!9780 = !DILocalVariable(name: "__dummy2", scope: !9777, file: !3, line: 1734, type: !145)
!9781 = !DILocation(line: 1734, column: 3, scope: !9778)
!9782 = !DILocation(line: 1734, column: 3, scope: !9579)
!9783 = !{i32 -2141437526}
!9784 = !DILocation(line: 1734, column: 3, scope: !9578)
!9785 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !9577)
!9786 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !9577)
!9787 = !DILocation(line: 1735, column: 10, scope: !9539)
!9788 = !DILocation(line: 1735, column: 16, scope: !9539)
!9789 = !DILocation(line: 1736, column: 27, scope: !9539)
!9790 = !DILocation(line: 1736, column: 33, scope: !9539)
!9791 = !DILocation(line: 1736, column: 40, scope: !9539)
!9792 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !9574)
!9793 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !9574)
!9794 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !9574)
!9795 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !9574)
!9796 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !9574)
!9797 = !DILocalVariable(name: "__ret", scope: !9798, file: !3, line: 1738, type: !113)
!9798 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1738, column: 10)
!9799 = !DILocation(line: 1738, column: 10, scope: !9798)
!9800 = !DILocation(line: 1738, column: 10, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1738, column: 10)
!9802 = !DILocation(line: 1738, column: 10, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 1738, column: 10)
!9804 = !DILocation(line: 1738, column: 10, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 1738, column: 10)
!9806 = !DILocalVariable(name: "__wq_entry", scope: !9807, file: !3, line: 1738, type: !9808)
!9807 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1738, column: 10)
!9808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1491, line: 29, size: 320, elements: !9809)
!9809 = !{!9810, !9811, !9812, !9818}
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9808, file: !1491, line: 30, baseType: !7, size: 32)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !9808, file: !1491, line: 31, baseType: !112, size: 64, offset: 64)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !9808, file: !1491, line: 32, baseType: !9813, size: 64, offset: 128)
!9813 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1491, line: 16, baseType: !9814)
!9814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9815, size: 64)
!9815 = !DISubroutineType(types: !9816)
!9816 = !{!113, !9817, !7, !113, !112}
!9817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9808, size: 64)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9808, file: !1491, line: 33, baseType: !166, size: 128, offset: 192)
!9819 = !DILocation(line: 1738, column: 10, scope: !9807)
!9820 = !DILocalVariable(name: "__ret", scope: !9807, file: !3, line: 1738, type: !309)
!9821 = !DILocalVariable(name: "__int", scope: !9822, file: !3, line: 1738, type: !309)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1738, column: 10)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 1738, column: 10)
!9824 = distinct !DILexicalBlock(scope: !9807, file: !3, line: 1738, column: 10)
!9825 = !DILocation(line: 1738, column: 10, scope: !9822)
!9826 = !DILocation(line: 1738, column: 10, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 1738, column: 10)
!9828 = !DILocation(line: 1738, column: 10, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 1738, column: 10)
!9830 = !DILocation(line: 1738, column: 10, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9829, file: !3, line: 1738, column: 10)
!9832 = !DILocation(line: 1738, column: 10, scope: !9823)
!9833 = distinct !{!9833, !9834, !9834}
!9834 = !DILocation(line: 1738, column: 10, scope: !9824)
!9835 = !DILabel(scope: !9807, name: "__out", file: !3, line: 1738)
!9836 = !DILocation(line: 1738, column: 3, scope: !9539)
!9837 = !DILocation(line: 1741, column: 10, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1741, column: 10)
!9839 = !DILocalVariable(name: "__ret_pu", scope: !9840, file: !3, line: 1741, type: !113)
!9840 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 1741, column: 10)
!9841 = !DILocation(line: 1741, column: 10, scope: !9840)
!9842 = !DILocalVariable(name: "__ptr_pu", scope: !9840, file: !3, line: 1741, type: !112)
!9843 = !DILocalVariable(name: "__val_pu", scope: !9840, file: !3, line: 1741, type: !113)
!9844 = !{i32 -2141435664}
!9845 = !DILocation(line: 1741, column: 10, scope: !9539)
!9846 = !DILocation(line: 1741, column: 3, scope: !9539)
!9847 = !DILocation(line: 1743, column: 18, scope: !9539)
!9848 = !DILocation(line: 1743, column: 24, scope: !9539)
!9849 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !9572)
!9850 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !9572)
!9851 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !9572)
!9852 = !DILocation(line: 1744, column: 3, scope: !9539)
!9853 = !DILocation(line: 1744, column: 9, scope: !9539)
!9854 = !DILocation(line: 1744, column: 18, scope: !9539)
!9855 = !DILocation(line: 1744, column: 24, scope: !9539)
!9856 = !DILocation(line: 1745, column: 3, scope: !9539)
!9857 = !DILocation(line: 1745, column: 9, scope: !9539)
!9858 = !DILocation(line: 1745, column: 18, scope: !9539)
!9859 = !DILocation(line: 1745, column: 24, scope: !9539)
!9860 = !DILocation(line: 1746, column: 20, scope: !9539)
!9861 = !DILocation(line: 1746, column: 26, scope: !9539)
!9862 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !9570)
!9863 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !9570)
!9864 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !9570)
!9865 = !DILocation(line: 1747, column: 3, scope: !9539)
!9866 = !DILocalVariable(name: "len", scope: !9566, file: !3, line: 1750, type: !113)
!9867 = !DILocation(line: 1750, column: 7, scope: !9566)
!9868 = !DILocalVariable(name: "lsr", scope: !9566, file: !3, line: 1750, type: !113)
!9869 = !DILocation(line: 1750, column: 12, scope: !9566)
!9870 = !DILocation(line: 1752, column: 31, scope: !9566)
!9871 = !DILocation(line: 1752, column: 9, scope: !9566)
!9872 = !DILocation(line: 1752, column: 7, scope: !9566)
!9873 = !DILocation(line: 1753, column: 18, scope: !9566)
!9874 = !DILocation(line: 1753, column: 24, scope: !9566)
!9875 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !9568)
!9876 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !9568)
!9877 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !9568)
!9878 = !DILocation(line: 1754, column: 13, scope: !9566)
!9879 = !DILocation(line: 1754, column: 19, scope: !9566)
!9880 = !DILocation(line: 1754, column: 26, scope: !9566)
!9881 = !DILocation(line: 1754, column: 9, scope: !9566)
!9882 = !DILocation(line: 1754, column: 38, scope: !9566)
!9883 = !DILocation(line: 1754, column: 7, scope: !9566)
!9884 = !DILocation(line: 1755, column: 20, scope: !9566)
!9885 = !DILocation(line: 1755, column: 26, scope: !9566)
!9886 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !9565)
!9887 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !9565)
!9888 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !9565)
!9889 = !DILocation(line: 1756, column: 11, scope: !9566)
!9890 = !DILocation(line: 1756, column: 7, scope: !9566)
!9891 = !DILocation(line: 1758, column: 10, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1758, column: 10)
!9893 = !DILocalVariable(name: "__ret_pu", scope: !9894, file: !3, line: 1758, type: !113)
!9894 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 1758, column: 10)
!9895 = !DILocation(line: 1758, column: 10, scope: !9894)
!9896 = !DILocalVariable(name: "__ptr_pu", scope: !9894, file: !3, line: 1758, type: !112)
!9897 = !DILocalVariable(name: "__val_pu", scope: !9894, file: !3, line: 1758, type: !113)
!9898 = !{i32 -2141434773}
!9899 = !DILocation(line: 1758, column: 10, scope: !9566)
!9900 = !DILocation(line: 1758, column: 3, scope: !9566)
!9901 = !DILocalVariable(name: "mcr", scope: !9538, file: !3, line: 1761, type: !113)
!9902 = !DILocation(line: 1761, column: 7, scope: !9538)
!9903 = !DILocalVariable(name: "status", scope: !9538, file: !3, line: 1761, type: !113)
!9904 = !DILocation(line: 1761, column: 12, scope: !9538)
!9905 = !DILocation(line: 1763, column: 18, scope: !9538)
!9906 = !DILocation(line: 1763, column: 24, scope: !9538)
!9907 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !9563)
!9908 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !9563)
!9909 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !9563)
!9910 = !DILocation(line: 1764, column: 26, scope: !9538)
!9911 = !DILocation(line: 1764, column: 32, scope: !9538)
!9912 = !DILocation(line: 1764, column: 43, scope: !9538)
!9913 = !DILocation(line: 1764, column: 48, scope: !9538)
!9914 = !DILocation(line: 1764, column: 12, scope: !9538)
!9915 = !DILocation(line: 1764, column: 10, scope: !9538)
!9916 = !DILocation(line: 1765, column: 28, scope: !9538)
!9917 = !DILocation(line: 1765, column: 33, scope: !9538)
!9918 = !DILocation(line: 1765, column: 39, scope: !9538)
!9919 = !DILocation(line: 1765, column: 3, scope: !9538)
!9920 = !DILocation(line: 1767, column: 13, scope: !9538)
!9921 = !DILocation(line: 1767, column: 19, scope: !9538)
!9922 = !DILocation(line: 1767, column: 26, scope: !9538)
!9923 = !DILocation(line: 1767, column: 9, scope: !9538)
!9924 = !DILocation(line: 1767, column: 7, scope: !9538)
!9925 = !DILocation(line: 1768, column: 20, scope: !9538)
!9926 = !DILocation(line: 1768, column: 26, scope: !9538)
!9927 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !9559)
!9928 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !9559)
!9929 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !9559)
!9930 = !DILocation(line: 1770, column: 7, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1770, column: 7)
!9932 = !DILocation(line: 1770, column: 11, scope: !9931)
!9933 = !DILocation(line: 1770, column: 7, scope: !9538)
!9934 = !DILocation(line: 1771, column: 4, scope: !9931)
!9935 = !DILocation(line: 1771, column: 10, scope: !9931)
!9936 = !DILocation(line: 1771, column: 19, scope: !9931)
!9937 = !DILocation(line: 1771, column: 31, scope: !9931)
!9938 = !DILocation(line: 1773, column: 4, scope: !9931)
!9939 = !DILocation(line: 1773, column: 10, scope: !9931)
!9940 = !DILocation(line: 1773, column: 19, scope: !9931)
!9941 = !DILocation(line: 1773, column: 31, scope: !9931)
!9942 = !DILocation(line: 1775, column: 7, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1775, column: 7)
!9944 = !DILocation(line: 1775, column: 11, scope: !9943)
!9945 = !DILocation(line: 1775, column: 7, scope: !9538)
!9946 = !DILocation(line: 1776, column: 4, scope: !9943)
!9947 = !DILocation(line: 1776, column: 10, scope: !9943)
!9948 = !DILocation(line: 1776, column: 19, scope: !9943)
!9949 = !DILocation(line: 1776, column: 31, scope: !9943)
!9950 = !DILocation(line: 1778, column: 4, scope: !9943)
!9951 = !DILocation(line: 1778, column: 10, scope: !9943)
!9952 = !DILocation(line: 1778, column: 19, scope: !9943)
!9953 = !DILocation(line: 1778, column: 31, scope: !9943)
!9954 = !DILocation(line: 1780, column: 7, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1780, column: 7)
!9956 = !DILocation(line: 1780, column: 12, scope: !9955)
!9957 = !DILocation(line: 1780, column: 7, scope: !9538)
!9958 = !DILocation(line: 1781, column: 4, scope: !9955)
!9959 = !DILocation(line: 1781, column: 10, scope: !9955)
!9960 = !DILocation(line: 1781, column: 19, scope: !9955)
!9961 = !DILocation(line: 1781, column: 31, scope: !9955)
!9962 = !DILocation(line: 1783, column: 4, scope: !9955)
!9963 = !DILocation(line: 1783, column: 10, scope: !9955)
!9964 = !DILocation(line: 1783, column: 19, scope: !9955)
!9965 = !DILocation(line: 1783, column: 31, scope: !9955)
!9966 = !DILocation(line: 1785, column: 20, scope: !9537)
!9967 = !DILocation(line: 1785, column: 27, scope: !9537)
!9968 = !DILocation(line: 1785, column: 33, scope: !9537)
!9969 = !DILocation(line: 1785, column: 26, scope: !9537)
!9970 = !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !9536)
!9971 = !DILocation(line: 141, column: 6, scope: !9972, inlinedAt: !9530)
!9972 = distinct !DILexicalBlock(scope: !9525, file: !9526, line: 141, column: 6)
!9973 = !DILocation(line: 0, scope: !9972, inlinedAt: !9530)
!9974 = !DILocation(line: 141, column: 6, scope: !9525, inlinedAt: !9530)
!9975 = !DILocation(line: 142, column: 29, scope: !9976, inlinedAt: !9530)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !9526, line: 142, column: 7)
!9977 = distinct !DILexicalBlock(scope: !9972, file: !9526, line: 141, column: 39)
!9978 = !DILocation(line: 142, column: 8, scope: !9976, inlinedAt: !9530)
!9979 = !DILocation(line: 142, column: 7, scope: !9977, inlinedAt: !9530)
!9980 = !DILocation(line: 143, column: 18, scope: !9976, inlinedAt: !9530)
!9981 = !DILocation(line: 143, column: 22, scope: !9976, inlinedAt: !9530)
!9982 = !DILocation(line: 143, column: 4, scope: !9976, inlinedAt: !9530)
!9983 = !DILocation(line: 144, column: 12, scope: !9984, inlinedAt: !9530)
!9984 = distinct !DILexicalBlock(scope: !9976, file: !9526, line: 144, column: 12)
!9985 = !DILocation(line: 144, column: 12, scope: !9976, inlinedAt: !9530)
!9986 = !DILocation(line: 145, column: 4, scope: !9984, inlinedAt: !9530)
!9987 = !DILocation(line: 147, column: 4, scope: !9984, inlinedAt: !9530)
!9988 = !DILocation(line: 148, column: 3, scope: !9977, inlinedAt: !9530)
!9989 = !DILocation(line: 150, column: 6, scope: !9990, inlinedAt: !9530)
!9990 = distinct !DILexicalBlock(scope: !9547, file: !9526, line: 150, column: 6)
!9991 = !DILocation(line: 150, column: 6, scope: !9992, inlinedAt: !9530)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !9526, line: 150, column: 6)
!9993 = distinct !DILexicalBlock(scope: !9990, file: !9526, line: 150, column: 6)
!9994 = !{i32 -2145488532, i32 -2145488503, i32 -2145488457, i32 -2145488399, i32 -2145488345, i32 -2145488291, i32 -2145488236, i32 -2145488205}
!9995 = !DILocation(line: 150, column: 6, scope: !9996, inlinedAt: !9530)
!9996 = distinct !DILexicalBlock(scope: !9993, file: !9526, line: 150, column: 6)
!9997 = !{i32 -2145487785, i32 -2145487778, i32 -2145487726, i32 -2145487695, i32 -2145487665}
!9998 = !DILocation(line: 150, column: 6, scope: !9993, inlinedAt: !9530)
!9999 = !DILocation(line: 150, column: 6, scope: !9548, inlinedAt: !9530)
!10000 = !DILocation(line: 150, column: 6, scope: !9525, inlinedAt: !9530)
!10001 = !DILocation(line: 151, column: 3, scope: !9548, inlinedAt: !9530)
!10002 = !DILocation(line: 152, column: 20, scope: !9525, inlinedAt: !9530)
!10003 = !DILocation(line: 152, column: 26, scope: !9525, inlinedAt: !9530)
!10004 = !DILocation(line: 152, column: 33, scope: !9525, inlinedAt: !9530)
!10005 = !DILocation(line: 152, column: 2, scope: !9525, inlinedAt: !9530)
!10006 = !DILocation(line: 153, column: 2, scope: !9525, inlinedAt: !9530)
!10007 = !DILocation(line: 154, column: 1, scope: !9525, inlinedAt: !9530)
!10008 = !DILocation(line: 199, column: 6, scope: !9533, inlinedAt: !9536)
!10009 = !DILocation(line: 200, column: 21, scope: !9531, inlinedAt: !9536)
!10010 = !DILocation(line: 200, column: 25, scope: !9531, inlinedAt: !9536)
!10011 = !DILocation(line: 200, column: 31, scope: !9531, inlinedAt: !9536)
!10012 = !DILocation(line: 200, column: 7, scope: !9531, inlinedAt: !9536)
!10013 = !DILocation(line: 200, column: 5, scope: !9531, inlinedAt: !9536)
!10014 = !DILocation(line: 200, column: 3, scope: !9531, inlinedAt: !9536)
!10015 = !DILocation(line: 201, column: 9, scope: !9533, inlinedAt: !9536)
!10016 = !DILocation(line: 1785, column: 7, scope: !9537)
!10017 = !DILocation(line: 1785, column: 7, scope: !9538)
!10018 = !DILocation(line: 1787, column: 4, scope: !9537)
!10019 = !DILocation(line: 1789, column: 3, scope: !9538)
!10020 = !DILocation(line: 1792, column: 7, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 1792, column: 7)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 1792, column: 7)
!10023 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1791, column: 26)
!10024 = !DILocalVariable(name: "__ret_pu", scope: !10025, file: !3, line: 1792, type: !113)
!10025 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 1792, column: 7)
!10026 = !DILocation(line: 1792, column: 7, scope: !10025)
!10027 = !DILocalVariable(name: "__ptr_pu", scope: !10025, file: !3, line: 1792, type: !112)
!10028 = !DILocalVariable(name: "__val_pu", scope: !10025, file: !3, line: 1792, type: !419)
!10029 = !{i32 -2141433851}
!10030 = !DILocation(line: 1792, column: 7, scope: !10022)
!10031 = !DILocation(line: 1792, column: 7, scope: !10023)
!10032 = !DILocation(line: 1793, column: 4, scope: !10022)
!10033 = !DILocation(line: 1795, column: 3, scope: !10023)
!10034 = !DILocation(line: 1795, column: 9, scope: !10023)
!10035 = !DILocation(line: 1795, column: 20, scope: !10023)
!10036 = !DILocation(line: 1796, column: 3, scope: !10023)
!10037 = !DILocalVariable(name: "method", scope: !10038, file: !3, line: 1799, type: !113)
!10038 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1798, column: 29)
!10039 = !DILocation(line: 1799, column: 7, scope: !10038)
!10040 = !DILocation(line: 1801, column: 7, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 1801, column: 7)
!10042 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 1801, column: 7)
!10043 = !DILocalVariable(name: "__ret_gu", scope: !10044, file: !3, line: 1801, type: !113)
!10044 = distinct !DILexicalBlock(scope: !10041, file: !3, line: 1801, column: 7)
!10045 = !DILocation(line: 1801, column: 7, scope: !10044)
!10046 = !DILocalVariable(name: "__val_gu", scope: !10044, file: !3, line: 1801, type: !7)
!10047 = !{i32 -2141433043}
!10048 = !DILocation(line: 1801, column: 7, scope: !10042)
!10049 = !DILocation(line: 1801, column: 7, scope: !10038)
!10050 = !DILocation(line: 1802, column: 4, scope: !10042)
!10051 = !DILocation(line: 1803, column: 39, scope: !10038)
!10052 = !DILocation(line: 1803, column: 25, scope: !10038)
!10053 = !DILocation(line: 1803, column: 30, scope: !10038)
!10054 = !DILocation(line: 1803, column: 3, scope: !10038)
!10055 = !DILocation(line: 1803, column: 37, scope: !10038)
!10056 = !DILocation(line: 1804, column: 10, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 1804, column: 10)
!10058 = !DILocalVariable(name: "__ret_pu", scope: !10059, file: !3, line: 1804, type: !113)
!10059 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 1804, column: 10)
!10060 = !DILocation(line: 1804, column: 10, scope: !10059)
!10061 = !DILocalVariable(name: "__ptr_pu", scope: !10059, file: !3, line: 1804, type: !112)
!10062 = !DILocalVariable(name: "__val_pu", scope: !10059, file: !3, line: 1804, type: !113)
!10063 = !{i32 -2141431014}
!10064 = !DILocation(line: 1804, column: 10, scope: !10038)
!10065 = !DILocation(line: 1804, column: 3, scope: !10038)
!10066 = !DILocation(line: 1807, column: 3, scope: !9539)
!10067 = !DILocation(line: 1810, column: 1, scope: !4739)
!10068 = distinct !DISubprogram(name: "mxser_set_termios", scope: !3, file: !3, line: 1938, type: !3956, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10069 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10070)
!10070 = distinct !DILocation(line: 1960, column: 4, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 1956, column: 31)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 1956, column: 7)
!10073 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1953, column: 53)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 1953, column: 6)
!10075 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10070)
!10076 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10077)
!10077 = distinct !DILocation(line: 1957, column: 4, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 1957, column: 4)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 1957, column: 4)
!10080 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 1957, column: 4)
!10081 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 1957, column: 4)
!10082 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1957, column: 4)
!10083 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10084)
!10084 = distinct !DILocation(line: 1945, column: 2, scope: !10068)
!10085 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10084)
!10086 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10087)
!10087 = distinct !DILocation(line: 1943, column: 2, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10089, file: !3, line: 1943, column: 2)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1943, column: 2)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1943, column: 2)
!10091 = distinct !DILexicalBlock(scope: !10092, file: !3, line: 1943, column: 2)
!10092 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 1943, column: 2)
!10093 = !DILocalVariable(name: "tty", arg: 1, scope: !10068, file: !3, line: 1938, type: !213)
!10094 = !DILocation(line: 1938, column: 50, scope: !10068)
!10095 = !DILocalVariable(name: "old_termios", arg: 2, scope: !10068, file: !3, line: 1938, type: !3900)
!10096 = !DILocation(line: 1938, column: 72, scope: !10068)
!10097 = !DILocalVariable(name: "info", scope: !10068, file: !3, line: 1940, type: !114)
!10098 = !DILocation(line: 1940, column: 21, scope: !10068)
!10099 = !DILocation(line: 1940, column: 28, scope: !10068)
!10100 = !DILocation(line: 1940, column: 33, scope: !10068)
!10101 = !DILocalVariable(name: "flags", scope: !10068, file: !3, line: 1941, type: !145)
!10102 = !DILocation(line: 1941, column: 16, scope: !10068)
!10103 = !DILocation(line: 1943, column: 2, scope: !10068)
!10104 = !DILocation(line: 1943, column: 2, scope: !10092)
!10105 = !DILocalVariable(name: "__dummy", scope: !10106, file: !3, line: 1943, type: !145)
!10106 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1943, column: 2)
!10107 = !DILocation(line: 1943, column: 2, scope: !10106)
!10108 = !DILocalVariable(name: "__dummy2", scope: !10106, file: !3, line: 1943, type: !145)
!10109 = !DILocation(line: 1943, column: 2, scope: !10091)
!10110 = !DILocation(line: 1943, column: 2, scope: !10090)
!10111 = !DILocation(line: 1943, column: 2, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 1943, column: 2)
!10113 = !DILocalVariable(name: "__dummy", scope: !10114, file: !3, line: 1943, type: !145)
!10114 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 1943, column: 2)
!10115 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 1943, column: 2)
!10116 = !DILocation(line: 1943, column: 2, scope: !10114)
!10117 = !DILocalVariable(name: "__dummy2", scope: !10114, file: !3, line: 1943, type: !145)
!10118 = !DILocation(line: 1943, column: 2, scope: !10115)
!10119 = !DILocation(line: 1943, column: 2, scope: !10089)
!10120 = !{i32 -2141425893}
!10121 = !DILocation(line: 1943, column: 2, scope: !10088)
!10122 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10087)
!10123 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10087)
!10124 = !DILocation(line: 1944, column: 21, scope: !10068)
!10125 = !DILocation(line: 1944, column: 2, scope: !10068)
!10126 = !DILocation(line: 1945, column: 26, scope: !10068)
!10127 = !DILocation(line: 1945, column: 32, scope: !10068)
!10128 = !DILocation(line: 1945, column: 39, scope: !10068)
!10129 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10084)
!10130 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10084)
!10131 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10084)
!10132 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10084)
!10133 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10084)
!10134 = !DILocation(line: 1947, column: 7, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 1947, column: 6)
!10136 = !DILocation(line: 1947, column: 20, scope: !10135)
!10137 = !DILocation(line: 1947, column: 28, scope: !10135)
!10138 = !DILocation(line: 1947, column: 39, scope: !10135)
!10139 = !DILocation(line: 1947, column: 43, scope: !10135)
!10140 = !DILocation(line: 1947, column: 6, scope: !10068)
!10141 = !DILocation(line: 1948, column: 3, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10135, file: !3, line: 1947, column: 59)
!10143 = !DILocation(line: 1948, column: 8, scope: !10142)
!10144 = !DILocation(line: 1948, column: 19, scope: !10142)
!10145 = !DILocation(line: 1949, column: 15, scope: !10142)
!10146 = !DILocation(line: 1949, column: 3, scope: !10142)
!10147 = !DILocation(line: 1950, column: 2, scope: !10142)
!10148 = !DILocation(line: 1953, column: 7, scope: !10074)
!10149 = !DILocation(line: 1953, column: 20, scope: !10074)
!10150 = !DILocation(line: 1953, column: 28, scope: !10074)
!10151 = !DILocation(line: 1953, column: 36, scope: !10074)
!10152 = !DILocation(line: 1953, column: 40, scope: !10074)
!10153 = !DILocation(line: 1953, column: 6, scope: !10068)
!10154 = !DILocation(line: 1954, column: 3, scope: !10073)
!10155 = !DILocation(line: 1954, column: 8, scope: !10073)
!10156 = !DILocation(line: 1954, column: 16, scope: !10073)
!10157 = !DILocation(line: 1956, column: 7, scope: !10072)
!10158 = !DILocation(line: 1956, column: 13, scope: !10072)
!10159 = !DILocation(line: 1956, column: 20, scope: !10072)
!10160 = !DILocation(line: 1956, column: 7, scope: !10073)
!10161 = !DILocation(line: 1957, column: 4, scope: !10071)
!10162 = !DILocation(line: 1957, column: 4, scope: !10082)
!10163 = !DILocalVariable(name: "__dummy", scope: !10164, file: !3, line: 1957, type: !145)
!10164 = distinct !DILexicalBlock(scope: !10081, file: !3, line: 1957, column: 4)
!10165 = !DILocation(line: 1957, column: 4, scope: !10164)
!10166 = !DILocalVariable(name: "__dummy2", scope: !10164, file: !3, line: 1957, type: !145)
!10167 = !DILocation(line: 1957, column: 4, scope: !10081)
!10168 = !DILocation(line: 1957, column: 4, scope: !10080)
!10169 = !DILocation(line: 1957, column: 4, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 1957, column: 4)
!10171 = !DILocalVariable(name: "__dummy", scope: !10172, file: !3, line: 1957, type: !145)
!10172 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 1957, column: 4)
!10173 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 1957, column: 4)
!10174 = !DILocation(line: 1957, column: 4, scope: !10172)
!10175 = !DILocalVariable(name: "__dummy2", scope: !10172, file: !3, line: 1957, type: !145)
!10176 = !DILocation(line: 1957, column: 4, scope: !10173)
!10177 = !DILocation(line: 1957, column: 4, scope: !10079)
!10178 = !{i32 -2141424673}
!10179 = !DILocation(line: 1957, column: 4, scope: !10078)
!10180 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10077)
!10181 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10077)
!10182 = !DILocation(line: 1959, column: 6, scope: !10071)
!10183 = !DILocation(line: 1959, column: 12, scope: !10071)
!10184 = !DILocation(line: 1958, column: 4, scope: !10071)
!10185 = !DILocation(line: 1960, column: 28, scope: !10071)
!10186 = !DILocation(line: 1960, column: 34, scope: !10071)
!10187 = !DILocation(line: 1960, column: 41, scope: !10071)
!10188 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10070)
!10189 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10070)
!10190 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10070)
!10191 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10070)
!10192 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10070)
!10193 = !DILocation(line: 1961, column: 3, scope: !10071)
!10194 = !DILocation(line: 1963, column: 15, scope: !10073)
!10195 = !DILocation(line: 1963, column: 3, scope: !10073)
!10196 = !DILocation(line: 1964, column: 2, scope: !10073)
!10197 = !DILocation(line: 1965, column: 1, scope: !10068)
!10198 = distinct !DISubprogram(name: "mxser_throttle", scope: !3, file: !3, line: 1872, type: !3929, scopeLine: 1873, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10199 = !DILocalVariable(name: "tty", arg: 1, scope: !10198, file: !3, line: 1872, type: !213)
!10200 = !DILocation(line: 1872, column: 47, scope: !10198)
!10201 = !DILocation(line: 1874, column: 15, scope: !10198)
!10202 = !DILocation(line: 1874, column: 2, scope: !10198)
!10203 = !DILocation(line: 1875, column: 1, scope: !10198)
!10204 = distinct !DISubprogram(name: "mxser_unthrottle", scope: !3, file: !3, line: 1877, type: !3929, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10205 = !DILocalVariable(name: "tty", arg: 1, scope: !10204, file: !3, line: 1877, type: !213)
!10206 = !DILocation(line: 1877, column: 49, scope: !10204)
!10207 = !DILocalVariable(name: "info", scope: !10204, file: !3, line: 1879, type: !114)
!10208 = !DILocation(line: 1879, column: 21, scope: !10204)
!10209 = !DILocation(line: 1879, column: 28, scope: !10204)
!10210 = !DILocation(line: 1879, column: 33, scope: !10204)
!10211 = !DILocation(line: 1882, column: 2, scope: !10204)
!10212 = !DILocation(line: 1882, column: 8, scope: !10204)
!10213 = !DILocation(line: 1882, column: 22, scope: !10204)
!10214 = !DILocation(line: 1883, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 1883, column: 6)
!10216 = !DILocation(line: 1883, column: 6, scope: !10204)
!10217 = !DILocation(line: 1884, column: 7, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !3, line: 1884, column: 7)
!10219 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 1883, column: 20)
!10220 = !DILocation(line: 1884, column: 13, scope: !10218)
!10221 = !DILocation(line: 1884, column: 7, scope: !10219)
!10222 = !DILocation(line: 1885, column: 4, scope: !10218)
!10223 = !DILocation(line: 1885, column: 10, scope: !10218)
!10224 = !DILocation(line: 1885, column: 17, scope: !10218)
!10225 = !DILocation(line: 1887, column: 8, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 1887, column: 8)
!10227 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 1886, column: 8)
!10228 = !DILocation(line: 1887, column: 14, scope: !10226)
!10229 = !DILocation(line: 1887, column: 21, scope: !10226)
!10230 = !DILocation(line: 1887, column: 8, scope: !10227)
!10231 = !DILocation(line: 1888, column: 5, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 1887, column: 32)
!10233 = !DILocation(line: 1888, column: 11, scope: !10232)
!10234 = !DILocation(line: 1888, column: 15, scope: !10232)
!10235 = !DILocation(line: 1889, column: 10, scope: !10232)
!10236 = !DILocation(line: 1889, column: 16, scope: !10232)
!10237 = !DILocation(line: 1889, column: 21, scope: !10232)
!10238 = !DILocation(line: 1889, column: 27, scope: !10232)
!10239 = !DILocation(line: 1889, column: 34, scope: !10232)
!10240 = !DILocation(line: 1889, column: 5, scope: !10232)
!10241 = !DILocation(line: 1890, column: 4, scope: !10232)
!10242 = !DILocation(line: 1891, column: 20, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 1890, column: 11)
!10244 = !DILocation(line: 1891, column: 5, scope: !10243)
!10245 = !DILocation(line: 1891, column: 11, scope: !10243)
!10246 = !DILocation(line: 1891, column: 18, scope: !10243)
!10247 = !DILocation(line: 1892, column: 13, scope: !10243)
!10248 = !DILocation(line: 1892, column: 19, scope: !10243)
!10249 = !DILocation(line: 1892, column: 26, scope: !10243)
!10250 = !DILocation(line: 1892, column: 5, scope: !10243)
!10251 = !DILocation(line: 1893, column: 5, scope: !10243)
!10252 = !DILocation(line: 1893, column: 11, scope: !10243)
!10253 = !DILocation(line: 1893, column: 15, scope: !10243)
!10254 = !DILocation(line: 1894, column: 10, scope: !10243)
!10255 = !DILocation(line: 1894, column: 16, scope: !10243)
!10256 = !DILocation(line: 1894, column: 21, scope: !10243)
!10257 = !DILocation(line: 1894, column: 27, scope: !10243)
!10258 = !DILocation(line: 1894, column: 34, scope: !10243)
!10259 = !DILocation(line: 1894, column: 5, scope: !10243)
!10260 = !DILocation(line: 1897, column: 2, scope: !10219)
!10261 = !DILocation(line: 1899, column: 6, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 1899, column: 6)
!10263 = !DILocation(line: 1899, column: 6, scope: !10204)
!10264 = !DILocation(line: 1900, column: 3, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10262, file: !3, line: 1899, column: 22)
!10266 = !DILocation(line: 1900, column: 9, scope: !10265)
!10267 = !DILocation(line: 1900, column: 13, scope: !10265)
!10268 = !DILocation(line: 1901, column: 8, scope: !10265)
!10269 = !DILocation(line: 1901, column: 14, scope: !10265)
!10270 = !DILocation(line: 1901, column: 19, scope: !10265)
!10271 = !DILocation(line: 1901, column: 25, scope: !10265)
!10272 = !DILocation(line: 1901, column: 32, scope: !10265)
!10273 = !DILocation(line: 1901, column: 3, scope: !10265)
!10274 = !DILocation(line: 1902, column: 2, scope: !10265)
!10275 = !DILocation(line: 1903, column: 1, scope: !10204)
!10276 = distinct !DISubprogram(name: "mxser_stop", scope: !3, file: !3, line: 1911, type: !3929, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10277 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10278)
!10278 = distinct !DILocation(line: 1921, column: 2, scope: !10276)
!10279 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10278)
!10280 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10281)
!10281 = distinct !DILocation(line: 1916, column: 2, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 1916, column: 2)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1916, column: 2)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 1916, column: 2)
!10285 = distinct !DILexicalBlock(scope: !10286, file: !3, line: 1916, column: 2)
!10286 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1916, column: 2)
!10287 = !DILocalVariable(name: "tty", arg: 1, scope: !10276, file: !3, line: 1911, type: !213)
!10288 = !DILocation(line: 1911, column: 43, scope: !10276)
!10289 = !DILocalVariable(name: "info", scope: !10276, file: !3, line: 1913, type: !114)
!10290 = !DILocation(line: 1913, column: 21, scope: !10276)
!10291 = !DILocation(line: 1913, column: 28, scope: !10276)
!10292 = !DILocation(line: 1913, column: 33, scope: !10276)
!10293 = !DILocalVariable(name: "flags", scope: !10276, file: !3, line: 1914, type: !145)
!10294 = !DILocation(line: 1914, column: 16, scope: !10276)
!10295 = !DILocation(line: 1916, column: 2, scope: !10276)
!10296 = !DILocation(line: 1916, column: 2, scope: !10286)
!10297 = !DILocalVariable(name: "__dummy", scope: !10298, file: !3, line: 1916, type: !145)
!10298 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 1916, column: 2)
!10299 = !DILocation(line: 1916, column: 2, scope: !10298)
!10300 = !DILocalVariable(name: "__dummy2", scope: !10298, file: !3, line: 1916, type: !145)
!10301 = !DILocation(line: 1916, column: 2, scope: !10285)
!10302 = !DILocation(line: 1916, column: 2, scope: !10284)
!10303 = !DILocation(line: 1916, column: 2, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1916, column: 2)
!10305 = !DILocalVariable(name: "__dummy", scope: !10306, file: !3, line: 1916, type: !145)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1916, column: 2)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1916, column: 2)
!10308 = !DILocation(line: 1916, column: 2, scope: !10306)
!10309 = !DILocalVariable(name: "__dummy2", scope: !10306, file: !3, line: 1916, type: !145)
!10310 = !DILocation(line: 1916, column: 2, scope: !10307)
!10311 = !DILocation(line: 1916, column: 2, scope: !10283)
!10312 = !{i32 -2141427986}
!10313 = !DILocation(line: 1916, column: 2, scope: !10282)
!10314 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10281)
!10315 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10281)
!10316 = !DILocation(line: 1917, column: 6, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 1917, column: 6)
!10318 = !DILocation(line: 1917, column: 12, scope: !10317)
!10319 = !DILocation(line: 1917, column: 16, scope: !10317)
!10320 = !DILocation(line: 1917, column: 6, scope: !10276)
!10321 = !DILocation(line: 1918, column: 3, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 1917, column: 33)
!10323 = !DILocation(line: 1918, column: 9, scope: !10322)
!10324 = !DILocation(line: 1918, column: 13, scope: !10322)
!10325 = !DILocation(line: 1919, column: 8, scope: !10322)
!10326 = !DILocation(line: 1919, column: 14, scope: !10322)
!10327 = !DILocation(line: 1919, column: 19, scope: !10322)
!10328 = !DILocation(line: 1919, column: 25, scope: !10322)
!10329 = !DILocation(line: 1919, column: 32, scope: !10322)
!10330 = !DILocation(line: 1919, column: 3, scope: !10322)
!10331 = !DILocation(line: 1920, column: 2, scope: !10322)
!10332 = !DILocation(line: 1921, column: 26, scope: !10276)
!10333 = !DILocation(line: 1921, column: 32, scope: !10276)
!10334 = !DILocation(line: 1921, column: 39, scope: !10276)
!10335 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10278)
!10336 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10278)
!10337 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10278)
!10338 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10278)
!10339 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10278)
!10340 = !DILocation(line: 1922, column: 1, scope: !10276)
!10341 = distinct !DISubprogram(name: "mxser_start", scope: !3, file: !3, line: 1924, type: !3929, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10342 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10343)
!10343 = distinct !DILocation(line: 1935, column: 2, scope: !10341)
!10344 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10343)
!10345 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10346)
!10346 = distinct !DILocation(line: 1929, column: 2, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 1929, column: 2)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 1929, column: 2)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1929, column: 2)
!10350 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 1929, column: 2)
!10351 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 1929, column: 2)
!10352 = !DILocalVariable(name: "tty", arg: 1, scope: !10341, file: !3, line: 1924, type: !213)
!10353 = !DILocation(line: 1924, column: 44, scope: !10341)
!10354 = !DILocalVariable(name: "info", scope: !10341, file: !3, line: 1926, type: !114)
!10355 = !DILocation(line: 1926, column: 21, scope: !10341)
!10356 = !DILocation(line: 1926, column: 28, scope: !10341)
!10357 = !DILocation(line: 1926, column: 33, scope: !10341)
!10358 = !DILocalVariable(name: "flags", scope: !10341, file: !3, line: 1927, type: !145)
!10359 = !DILocation(line: 1927, column: 16, scope: !10341)
!10360 = !DILocation(line: 1929, column: 2, scope: !10341)
!10361 = !DILocation(line: 1929, column: 2, scope: !10351)
!10362 = !DILocalVariable(name: "__dummy", scope: !10363, file: !3, line: 1929, type: !145)
!10363 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1929, column: 2)
!10364 = !DILocation(line: 1929, column: 2, scope: !10363)
!10365 = !DILocalVariable(name: "__dummy2", scope: !10363, file: !3, line: 1929, type: !145)
!10366 = !DILocation(line: 1929, column: 2, scope: !10350)
!10367 = !DILocation(line: 1929, column: 2, scope: !10349)
!10368 = !DILocation(line: 1929, column: 2, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 1929, column: 2)
!10370 = !DILocalVariable(name: "__dummy", scope: !10371, file: !3, line: 1929, type: !145)
!10371 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 1929, column: 2)
!10372 = distinct !DILexicalBlock(scope: !10369, file: !3, line: 1929, column: 2)
!10373 = !DILocation(line: 1929, column: 2, scope: !10371)
!10374 = !DILocalVariable(name: "__dummy2", scope: !10371, file: !3, line: 1929, type: !145)
!10375 = !DILocation(line: 1929, column: 2, scope: !10372)
!10376 = !DILocation(line: 1929, column: 2, scope: !10348)
!10377 = !{i32 -2141426943}
!10378 = !DILocation(line: 1929, column: 2, scope: !10347)
!10379 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10346)
!10380 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10346)
!10381 = !DILocation(line: 1930, column: 6, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 1930, column: 6)
!10383 = !DILocation(line: 1930, column: 12, scope: !10382)
!10384 = !DILocation(line: 1930, column: 21, scope: !10382)
!10385 = !DILocation(line: 1930, column: 24, scope: !10382)
!10386 = !DILocation(line: 1930, column: 30, scope: !10382)
!10387 = !DILocation(line: 1930, column: 35, scope: !10382)
!10388 = !DILocation(line: 1930, column: 6, scope: !10341)
!10389 = !DILocation(line: 1931, column: 8, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10382, file: !3, line: 1930, column: 45)
!10391 = !DILocation(line: 1931, column: 14, scope: !10390)
!10392 = !DILocation(line: 1931, column: 18, scope: !10390)
!10393 = !DILocation(line: 1931, column: 36, scope: !10390)
!10394 = !DILocation(line: 1931, column: 42, scope: !10390)
!10395 = !DILocation(line: 1931, column: 49, scope: !10390)
!10396 = !DILocation(line: 1931, column: 3, scope: !10390)
!10397 = !DILocation(line: 1932, column: 3, scope: !10390)
!10398 = !DILocation(line: 1932, column: 9, scope: !10390)
!10399 = !DILocation(line: 1932, column: 13, scope: !10390)
!10400 = !DILocation(line: 1933, column: 8, scope: !10390)
!10401 = !DILocation(line: 1933, column: 14, scope: !10390)
!10402 = !DILocation(line: 1933, column: 19, scope: !10390)
!10403 = !DILocation(line: 1933, column: 25, scope: !10390)
!10404 = !DILocation(line: 1933, column: 32, scope: !10390)
!10405 = !DILocation(line: 1933, column: 3, scope: !10390)
!10406 = !DILocation(line: 1934, column: 2, scope: !10390)
!10407 = !DILocation(line: 1935, column: 26, scope: !10341)
!10408 = !DILocation(line: 1935, column: 32, scope: !10341)
!10409 = !DILocation(line: 1935, column: 39, scope: !10341)
!10410 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10343)
!10411 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10343)
!10412 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10343)
!10413 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10343)
!10414 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10343)
!10415 = !DILocation(line: 1936, column: 1, scope: !10341)
!10416 = distinct !DISubprogram(name: "mxser_hangup", scope: !3, file: !3, line: 2027, type: !3929, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10417 = !DILocalVariable(name: "tty", arg: 1, scope: !10416, file: !3, line: 2027, type: !213)
!10418 = !DILocation(line: 2027, column: 45, scope: !10416)
!10419 = !DILocalVariable(name: "info", scope: !10416, file: !3, line: 2029, type: !114)
!10420 = !DILocation(line: 2029, column: 21, scope: !10416)
!10421 = !DILocation(line: 2029, column: 28, scope: !10416)
!10422 = !DILocation(line: 2029, column: 33, scope: !10416)
!10423 = !DILocation(line: 2031, column: 21, scope: !10416)
!10424 = !DILocation(line: 2031, column: 2, scope: !10416)
!10425 = !DILocation(line: 2032, column: 19, scope: !10416)
!10426 = !DILocation(line: 2032, column: 25, scope: !10416)
!10427 = !DILocation(line: 2032, column: 2, scope: !10416)
!10428 = !DILocation(line: 2033, column: 1, scope: !10416)
!10429 = distinct !DISubprogram(name: "mxser_rs_break", scope: !3, file: !3, line: 2038, type: !3965, scopeLine: 2039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10430 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10431)
!10431 = distinct !DILocation(line: 2050, column: 2, scope: !10429)
!10432 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10431)
!10433 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10434)
!10434 = distinct !DILocation(line: 2043, column: 2, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10436, file: !3, line: 2043, column: 2)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2043, column: 2)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 2043, column: 2)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 2043, column: 2)
!10439 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2043, column: 2)
!10440 = !DILocalVariable(name: "tty", arg: 1, scope: !10429, file: !3, line: 2038, type: !213)
!10441 = !DILocation(line: 2038, column: 46, scope: !10429)
!10442 = !DILocalVariable(name: "break_state", arg: 2, scope: !10429, file: !3, line: 2038, type: !113)
!10443 = !DILocation(line: 2038, column: 55, scope: !10429)
!10444 = !DILocalVariable(name: "info", scope: !10429, file: !3, line: 2040, type: !114)
!10445 = !DILocation(line: 2040, column: 21, scope: !10429)
!10446 = !DILocation(line: 2040, column: 28, scope: !10429)
!10447 = !DILocation(line: 2040, column: 33, scope: !10429)
!10448 = !DILocalVariable(name: "flags", scope: !10429, file: !3, line: 2041, type: !145)
!10449 = !DILocation(line: 2041, column: 16, scope: !10429)
!10450 = !DILocation(line: 2043, column: 2, scope: !10429)
!10451 = !DILocation(line: 2043, column: 2, scope: !10439)
!10452 = !DILocalVariable(name: "__dummy", scope: !10453, file: !3, line: 2043, type: !145)
!10453 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 2043, column: 2)
!10454 = !DILocation(line: 2043, column: 2, scope: !10453)
!10455 = !DILocalVariable(name: "__dummy2", scope: !10453, file: !3, line: 2043, type: !145)
!10456 = !DILocation(line: 2043, column: 2, scope: !10438)
!10457 = !DILocation(line: 2043, column: 2, scope: !10437)
!10458 = !DILocation(line: 2043, column: 2, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2043, column: 2)
!10460 = !DILocalVariable(name: "__dummy", scope: !10461, file: !3, line: 2043, type: !145)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2043, column: 2)
!10462 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 2043, column: 2)
!10463 = !DILocation(line: 2043, column: 2, scope: !10461)
!10464 = !DILocalVariable(name: "__dummy2", scope: !10461, file: !3, line: 2043, type: !145)
!10465 = !DILocation(line: 2043, column: 2, scope: !10462)
!10466 = !DILocation(line: 2043, column: 2, scope: !10436)
!10467 = !{i32 -2141419508}
!10468 = !DILocation(line: 2043, column: 2, scope: !10435)
!10469 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10434)
!10470 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10434)
!10471 = !DILocation(line: 2044, column: 6, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10429, file: !3, line: 2044, column: 6)
!10473 = !DILocation(line: 2044, column: 18, scope: !10472)
!10474 = !DILocation(line: 2044, column: 6, scope: !10429)
!10475 = !DILocation(line: 2045, column: 12, scope: !10472)
!10476 = !DILocation(line: 2045, column: 18, scope: !10472)
!10477 = !DILocation(line: 2045, column: 25, scope: !10472)
!10478 = !DILocation(line: 2045, column: 8, scope: !10472)
!10479 = !DILocation(line: 2045, column: 37, scope: !10472)
!10480 = !DILocation(line: 2046, column: 4, scope: !10472)
!10481 = !DILocation(line: 2046, column: 10, scope: !10472)
!10482 = !DILocation(line: 2046, column: 17, scope: !10472)
!10483 = !DILocation(line: 2045, column: 3, scope: !10472)
!10484 = !DILocation(line: 2048, column: 12, scope: !10472)
!10485 = !DILocation(line: 2048, column: 18, scope: !10472)
!10486 = !DILocation(line: 2048, column: 25, scope: !10472)
!10487 = !DILocation(line: 2048, column: 8, scope: !10472)
!10488 = !DILocation(line: 2048, column: 37, scope: !10472)
!10489 = !DILocation(line: 2049, column: 4, scope: !10472)
!10490 = !DILocation(line: 2049, column: 10, scope: !10472)
!10491 = !DILocation(line: 2049, column: 17, scope: !10472)
!10492 = !DILocation(line: 2048, column: 3, scope: !10472)
!10493 = !DILocation(line: 2050, column: 26, scope: !10429)
!10494 = !DILocation(line: 2050, column: 32, scope: !10429)
!10495 = !DILocation(line: 2050, column: 39, scope: !10429)
!10496 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10431)
!10497 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10431)
!10498 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10431)
!10499 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10431)
!10500 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10431)
!10501 = !DILocation(line: 2051, column: 2, scope: !10429)
!10502 = distinct !DISubprogram(name: "mxser_flush_buffer", scope: !3, file: !3, line: 1014, type: !3929, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10503 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10504)
!10504 = distinct !DILocation(line: 1029, column: 2, scope: !10502)
!10505 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10504)
!10506 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10507)
!10507 = distinct !DILocation(line: 1021, column: 2, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 1021, column: 2)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 1021, column: 2)
!10510 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1021, column: 2)
!10511 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 1021, column: 2)
!10512 = distinct !DILexicalBlock(scope: !10502, file: !3, line: 1021, column: 2)
!10513 = !DILocalVariable(name: "tty", arg: 1, scope: !10502, file: !3, line: 1014, type: !213)
!10514 = !DILocation(line: 1014, column: 51, scope: !10502)
!10515 = !DILocalVariable(name: "info", scope: !10502, file: !3, line: 1016, type: !114)
!10516 = !DILocation(line: 1016, column: 21, scope: !10502)
!10517 = !DILocation(line: 1016, column: 28, scope: !10502)
!10518 = !DILocation(line: 1016, column: 33, scope: !10502)
!10519 = !DILocalVariable(name: "fcr", scope: !10502, file: !3, line: 1017, type: !238)
!10520 = !DILocation(line: 1017, column: 7, scope: !10502)
!10521 = !DILocalVariable(name: "flags", scope: !10502, file: !3, line: 1018, type: !145)
!10522 = !DILocation(line: 1018, column: 16, scope: !10502)
!10523 = !DILocation(line: 1021, column: 2, scope: !10502)
!10524 = !DILocation(line: 1021, column: 2, scope: !10512)
!10525 = !DILocalVariable(name: "__dummy", scope: !10526, file: !3, line: 1021, type: !145)
!10526 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1021, column: 2)
!10527 = !DILocation(line: 1021, column: 2, scope: !10526)
!10528 = !DILocalVariable(name: "__dummy2", scope: !10526, file: !3, line: 1021, type: !145)
!10529 = !DILocation(line: 1021, column: 2, scope: !10511)
!10530 = !DILocation(line: 1021, column: 2, scope: !10510)
!10531 = !DILocation(line: 1021, column: 2, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 1021, column: 2)
!10533 = !DILocalVariable(name: "__dummy", scope: !10534, file: !3, line: 1021, type: !145)
!10534 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 1021, column: 2)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1021, column: 2)
!10536 = !DILocation(line: 1021, column: 2, scope: !10534)
!10537 = !DILocalVariable(name: "__dummy2", scope: !10534, file: !3, line: 1021, type: !145)
!10538 = !DILocation(line: 1021, column: 2, scope: !10535)
!10539 = !DILocation(line: 1021, column: 2, scope: !10509)
!10540 = !{i32 -2141476271}
!10541 = !DILocation(line: 1021, column: 2, scope: !10508)
!10542 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10507)
!10543 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10507)
!10544 = !DILocation(line: 1022, column: 37, scope: !10502)
!10545 = !DILocation(line: 1022, column: 43, scope: !10502)
!10546 = !DILocation(line: 1022, column: 53, scope: !10502)
!10547 = !DILocation(line: 1022, column: 19, scope: !10502)
!10548 = !DILocation(line: 1022, column: 25, scope: !10502)
!10549 = !DILocation(line: 1022, column: 35, scope: !10502)
!10550 = !DILocation(line: 1022, column: 2, scope: !10502)
!10551 = !DILocation(line: 1022, column: 8, scope: !10502)
!10552 = !DILocation(line: 1022, column: 17, scope: !10502)
!10553 = !DILocation(line: 1024, column: 12, scope: !10502)
!10554 = !DILocation(line: 1024, column: 18, scope: !10502)
!10555 = !DILocation(line: 1024, column: 25, scope: !10502)
!10556 = !DILocation(line: 1024, column: 8, scope: !10502)
!10557 = !DILocation(line: 1024, column: 6, scope: !10502)
!10558 = !DILocation(line: 1025, column: 8, scope: !10502)
!10559 = !DILocation(line: 1025, column: 12, scope: !10502)
!10560 = !DILocation(line: 1025, column: 34, scope: !10502)
!10561 = !DILocation(line: 1025, column: 7, scope: !10502)
!10562 = !DILocation(line: 1026, column: 3, scope: !10502)
!10563 = !DILocation(line: 1026, column: 9, scope: !10502)
!10564 = !DILocation(line: 1026, column: 16, scope: !10502)
!10565 = !DILocation(line: 1025, column: 2, scope: !10502)
!10566 = !DILocation(line: 1027, column: 7, scope: !10502)
!10567 = !DILocation(line: 1027, column: 12, scope: !10502)
!10568 = !DILocation(line: 1027, column: 18, scope: !10502)
!10569 = !DILocation(line: 1027, column: 25, scope: !10502)
!10570 = !DILocation(line: 1027, column: 2, scope: !10502)
!10571 = !DILocation(line: 1029, column: 26, scope: !10502)
!10572 = !DILocation(line: 1029, column: 32, scope: !10502)
!10573 = !DILocation(line: 1029, column: 39, scope: !10502)
!10574 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10504)
!10575 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10504)
!10576 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10504)
!10577 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10504)
!10578 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10504)
!10579 = !DILocation(line: 1031, column: 13, scope: !10502)
!10580 = !DILocation(line: 1031, column: 2, scope: !10502)
!10581 = !DILocation(line: 1032, column: 1, scope: !10502)
!10582 = distinct !DISubprogram(name: "mxser_wait_until_sent", scope: !3, file: !3, line: 1970, type: !3971, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10583 = !DILocalVariable(name: "pscr_ret__", scope: !10584, file: !10585, line: 15, type: !1230)
!10584 = distinct !DILexicalBlock(scope: !10586, file: !10585, line: 15, column: 9)
!10585 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!10586 = distinct !DISubprogram(name: "get_current", scope: !10585, file: !10585, line: 13, type: !10587, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10587 = !DISubroutineType(types: !10588)
!10588 = !{!1230}
!10589 = !DILocation(line: 15, column: 9, scope: !10584, inlinedAt: !10590)
!10590 = distinct !DILocation(line: 2021, column: 2, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 2021, column: 2)
!10592 = distinct !DILexicalBlock(scope: !10593, file: !3, line: 2021, column: 2)
!10593 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2021, column: 2)
!10594 = !DILocalVariable(name: "__vpp_verify", scope: !10595, file: !10585, line: 15, type: !2178)
!10595 = distinct !DILexicalBlock(scope: !10584, file: !10585, line: 15, column: 9)
!10596 = !DILocation(line: 15, column: 9, scope: !10595, inlinedAt: !10590)
!10597 = !DILocalVariable(name: "pfo_val__", scope: !10598, file: !10585, line: 15, type: !413)
!10598 = distinct !DILexicalBlock(scope: !10584, file: !10585, line: 15, column: 9)
!10599 = !DILocation(line: 15, column: 9, scope: !10598, inlinedAt: !10590)
!10600 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10601)
!10601 = distinct !DILocation(line: 2020, column: 2, scope: !10582)
!10602 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10601)
!10603 = !DILocation(line: 15, column: 9, scope: !10584, inlinedAt: !10604)
!10604 = distinct !DILocation(line: 2015, column: 22, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 2015, column: 7)
!10606 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2011, column: 66)
!10607 = !DILocation(line: 15, column: 9, scope: !10595, inlinedAt: !10604)
!10608 = !DILocation(line: 15, column: 9, scope: !10598, inlinedAt: !10604)
!10609 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10610)
!10610 = distinct !DILocation(line: 2014, column: 3, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10612, file: !3, line: 2014, column: 3)
!10612 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 2014, column: 3)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 2014, column: 3)
!10614 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2014, column: 3)
!10615 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 2014, column: 3)
!10616 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10617)
!10617 = distinct !DILocation(line: 2012, column: 3, scope: !10606)
!10618 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10617)
!10619 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10620)
!10620 = distinct !DILocation(line: 2010, column: 2, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 2010, column: 2)
!10622 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2010, column: 2)
!10623 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 2010, column: 2)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 2010, column: 2)
!10625 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2010, column: 2)
!10626 = !DILocalVariable(name: "tty", arg: 1, scope: !10582, file: !3, line: 1970, type: !213)
!10627 = !DILocation(line: 1970, column: 54, scope: !10582)
!10628 = !DILocalVariable(name: "timeout", arg: 2, scope: !10582, file: !3, line: 1970, type: !113)
!10629 = !DILocation(line: 1970, column: 63, scope: !10582)
!10630 = !DILocalVariable(name: "info", scope: !10582, file: !3, line: 1972, type: !114)
!10631 = !DILocation(line: 1972, column: 21, scope: !10582)
!10632 = !DILocation(line: 1972, column: 28, scope: !10582)
!10633 = !DILocation(line: 1972, column: 33, scope: !10582)
!10634 = !DILocalVariable(name: "orig_jiffies", scope: !10582, file: !3, line: 1973, type: !145)
!10635 = !DILocation(line: 1973, column: 16, scope: !10582)
!10636 = !DILocalVariable(name: "char_time", scope: !10582, file: !3, line: 1973, type: !145)
!10637 = !DILocation(line: 1973, column: 30, scope: !10582)
!10638 = !DILocalVariable(name: "flags", scope: !10582, file: !3, line: 1974, type: !145)
!10639 = !DILocation(line: 1974, column: 16, scope: !10582)
!10640 = !DILocalVariable(name: "lsr", scope: !10582, file: !3, line: 1975, type: !113)
!10641 = !DILocation(line: 1975, column: 6, scope: !10582)
!10642 = !DILocation(line: 1977, column: 6, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1977, column: 6)
!10644 = !DILocation(line: 1977, column: 12, scope: !10643)
!10645 = !DILocation(line: 1977, column: 17, scope: !10643)
!10646 = !DILocation(line: 1977, column: 6, scope: !10582)
!10647 = !DILocation(line: 1978, column: 3, scope: !10643)
!10648 = !DILocation(line: 1980, column: 6, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1980, column: 6)
!10650 = !DILocation(line: 1980, column: 12, scope: !10649)
!10651 = !DILocation(line: 1980, column: 27, scope: !10649)
!10652 = !DILocation(line: 1980, column: 6, scope: !10582)
!10653 = !DILocation(line: 1981, column: 3, scope: !10649)
!10654 = !DILocation(line: 1983, column: 17, scope: !10582)
!10655 = !DILocation(line: 1983, column: 15, scope: !10582)
!10656 = !DILocation(line: 1992, column: 15, scope: !10582)
!10657 = !DILocation(line: 1992, column: 21, scope: !10582)
!10658 = !DILocation(line: 1992, column: 29, scope: !10582)
!10659 = !DILocation(line: 1992, column: 42, scope: !10582)
!10660 = !DILocation(line: 1992, column: 48, scope: !10582)
!10661 = !DILocation(line: 1992, column: 40, scope: !10582)
!10662 = !DILocation(line: 1992, column: 14, scope: !10582)
!10663 = !DILocation(line: 1992, column: 12, scope: !10582)
!10664 = !DILocation(line: 1993, column: 14, scope: !10582)
!10665 = !DILocation(line: 1993, column: 24, scope: !10582)
!10666 = !DILocation(line: 1993, column: 12, scope: !10582)
!10667 = !DILocation(line: 1994, column: 6, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1994, column: 6)
!10669 = !DILocation(line: 1994, column: 16, scope: !10668)
!10670 = !DILocation(line: 1994, column: 6, scope: !10582)
!10671 = !DILocation(line: 1995, column: 13, scope: !10668)
!10672 = !DILocation(line: 1995, column: 3, scope: !10668)
!10673 = !DILocation(line: 1996, column: 6, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1996, column: 6)
!10675 = !DILocation(line: 1996, column: 14, scope: !10674)
!10676 = !DILocation(line: 1996, column: 17, scope: !10674)
!10677 = !DILocation(line: 1996, column: 27, scope: !10674)
!10678 = !DILocation(line: 1996, column: 25, scope: !10674)
!10679 = !DILocation(line: 1996, column: 6, scope: !10582)
!10680 = !DILocation(line: 1997, column: 15, scope: !10674)
!10681 = !DILocation(line: 1997, column: 13, scope: !10674)
!10682 = !DILocation(line: 1997, column: 3, scope: !10674)
!10683 = !DILocation(line: 2007, column: 7, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2007, column: 6)
!10685 = !DILocation(line: 2007, column: 15, scope: !10684)
!10686 = !DILocation(line: 2007, column: 18, scope: !10684)
!10687 = !DILocation(line: 2007, column: 32, scope: !10684)
!10688 = !DILocation(line: 2007, column: 38, scope: !10684)
!10689 = !DILocation(line: 2007, column: 30, scope: !10684)
!10690 = !DILocation(line: 2007, column: 26, scope: !10684)
!10691 = !DILocation(line: 2007, column: 6, scope: !10582)
!10692 = !DILocation(line: 2008, column: 17, scope: !10684)
!10693 = !DILocation(line: 2008, column: 23, scope: !10684)
!10694 = !DILocation(line: 2008, column: 15, scope: !10684)
!10695 = !DILocation(line: 2008, column: 11, scope: !10684)
!10696 = !DILocation(line: 2008, column: 3, scope: !10684)
!10697 = !DILocation(line: 2010, column: 2, scope: !10582)
!10698 = !DILocation(line: 2010, column: 2, scope: !10625)
!10699 = !DILocalVariable(name: "__dummy", scope: !10700, file: !3, line: 2010, type: !145)
!10700 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 2010, column: 2)
!10701 = !DILocation(line: 2010, column: 2, scope: !10700)
!10702 = !DILocalVariable(name: "__dummy2", scope: !10700, file: !3, line: 2010, type: !145)
!10703 = !DILocation(line: 2010, column: 2, scope: !10624)
!10704 = !DILocation(line: 2010, column: 2, scope: !10623)
!10705 = !DILocation(line: 2010, column: 2, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 2010, column: 2)
!10707 = !DILocalVariable(name: "__dummy", scope: !10708, file: !3, line: 2010, type: !145)
!10708 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 2010, column: 2)
!10709 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 2010, column: 2)
!10710 = !DILocation(line: 2010, column: 2, scope: !10708)
!10711 = !DILocalVariable(name: "__dummy2", scope: !10708, file: !3, line: 2010, type: !145)
!10712 = !DILocation(line: 2010, column: 2, scope: !10709)
!10713 = !DILocation(line: 2010, column: 2, scope: !10622)
!10714 = !{i32 -2141423631}
!10715 = !DILocation(line: 2010, column: 2, scope: !10621)
!10716 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10620)
!10717 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10620)
!10718 = !DILocation(line: 2011, column: 2, scope: !10582)
!10719 = !DILocation(line: 2011, column: 22, scope: !10582)
!10720 = !DILocation(line: 2011, column: 28, scope: !10582)
!10721 = !DILocation(line: 2011, column: 35, scope: !10582)
!10722 = !DILocation(line: 2011, column: 18, scope: !10582)
!10723 = !DILocation(line: 2011, column: 16, scope: !10582)
!10724 = !DILocation(line: 2011, column: 48, scope: !10582)
!10725 = !DILocation(line: 2011, column: 9, scope: !10582)
!10726 = !DILocation(line: 2012, column: 27, scope: !10606)
!10727 = !DILocation(line: 2012, column: 33, scope: !10606)
!10728 = !DILocation(line: 2012, column: 40, scope: !10606)
!10729 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10617)
!10730 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10617)
!10731 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10617)
!10732 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10617)
!10733 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10617)
!10734 = !DILocation(line: 2013, column: 34, scope: !10606)
!10735 = !DILocation(line: 2013, column: 3, scope: !10606)
!10736 = !DILocation(line: 2014, column: 3, scope: !10606)
!10737 = !DILocation(line: 2014, column: 3, scope: !10615)
!10738 = !DILocalVariable(name: "__dummy", scope: !10739, file: !3, line: 2014, type: !145)
!10739 = distinct !DILexicalBlock(scope: !10614, file: !3, line: 2014, column: 3)
!10740 = !DILocation(line: 2014, column: 3, scope: !10739)
!10741 = !DILocalVariable(name: "__dummy2", scope: !10739, file: !3, line: 2014, type: !145)
!10742 = !DILocation(line: 2014, column: 3, scope: !10614)
!10743 = !DILocation(line: 2014, column: 3, scope: !10613)
!10744 = !DILocation(line: 2014, column: 3, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 2014, column: 3)
!10746 = !DILocalVariable(name: "__dummy", scope: !10747, file: !3, line: 2014, type: !145)
!10747 = distinct !DILexicalBlock(scope: !10748, file: !3, line: 2014, column: 3)
!10748 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 2014, column: 3)
!10749 = !DILocation(line: 2014, column: 3, scope: !10747)
!10750 = !DILocalVariable(name: "__dummy2", scope: !10747, file: !3, line: 2014, type: !145)
!10751 = !DILocation(line: 2014, column: 3, scope: !10748)
!10752 = !DILocation(line: 2014, column: 3, scope: !10612)
!10753 = !{i32 -2141422594}
!10754 = !DILocation(line: 2014, column: 3, scope: !10611)
!10755 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10610)
!10756 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10610)
!10757 = !{i32 -2146160511}
!10758 = !DILocation(line: 2015, column: 7, scope: !10605)
!10759 = !DILocation(line: 2015, column: 7, scope: !10606)
!10760 = !DILocation(line: 2016, column: 4, scope: !10605)
!10761 = !DILocation(line: 2017, column: 7, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 2017, column: 7)
!10763 = !DILocation(line: 2017, column: 15, scope: !10762)
!10764 = !DILocation(line: 2017, column: 18, scope: !10762)
!10765 = !DILocation(line: 2017, column: 7, scope: !10606)
!10766 = !DILocation(line: 2018, column: 4, scope: !10762)
!10767 = distinct !{!10767, !10718, !10768}
!10768 = !DILocation(line: 2019, column: 2, scope: !10582)
!10769 = !DILocation(line: 2020, column: 26, scope: !10582)
!10770 = !DILocation(line: 2020, column: 32, scope: !10582)
!10771 = !DILocation(line: 2020, column: 39, scope: !10582)
!10772 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10601)
!10773 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10601)
!10774 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10601)
!10775 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10601)
!10776 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10601)
!10777 = !DILocation(line: 2021, column: 2, scope: !10582)
!10778 = !DILocation(line: 2021, column: 2, scope: !10593)
!10779 = !DILocation(line: 2021, column: 2, scope: !10592)
!10780 = !DILocation(line: 2021, column: 2, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10592, file: !3, line: 2021, column: 2)
!10782 = !DILocation(line: 2021, column: 2, scope: !10591)
!10783 = !{i32 -2141420416}
!10784 = !DILocation(line: 2022, column: 1, scope: !10582)
!10785 = distinct !DISubprogram(name: "mxser_tiocmget", scope: !3, file: !3, line: 1333, type: !3943, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10786 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10787)
!10787 = distinct !DILocation(line: 1351, column: 2, scope: !10785)
!10788 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10787)
!10789 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10790)
!10790 = distinct !DILocation(line: 1347, column: 2, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10792, file: !3, line: 1347, column: 2)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1347, column: 2)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 1347, column: 2)
!10794 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1347, column: 2)
!10795 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1347, column: 2)
!10796 = !DILocalVariable(name: "tty", arg: 1, scope: !10785, file: !3, line: 1333, type: !213)
!10797 = !DILocation(line: 1333, column: 46, scope: !10785)
!10798 = !DILocalVariable(name: "info", scope: !10785, file: !3, line: 1335, type: !114)
!10799 = !DILocation(line: 1335, column: 21, scope: !10785)
!10800 = !DILocation(line: 1335, column: 28, scope: !10785)
!10801 = !DILocation(line: 1335, column: 33, scope: !10785)
!10802 = !DILocalVariable(name: "control", scope: !10785, file: !3, line: 1336, type: !419)
!10803 = !DILocation(line: 1336, column: 16, scope: !10785)
!10804 = !DILocalVariable(name: "status", scope: !10785, file: !3, line: 1336, type: !419)
!10805 = !DILocation(line: 1336, column: 25, scope: !10785)
!10806 = !DILocalVariable(name: "flags", scope: !10785, file: !3, line: 1337, type: !145)
!10807 = !DILocation(line: 1337, column: 16, scope: !10785)
!10808 = !DILocation(line: 1340, column: 6, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1340, column: 6)
!10810 = !DILocation(line: 1340, column: 11, scope: !10809)
!10811 = !DILocation(line: 1340, column: 17, scope: !10809)
!10812 = !DILocation(line: 1340, column: 6, scope: !10785)
!10813 = !DILocation(line: 1341, column: 3, scope: !10809)
!10814 = !DILocation(line: 1342, column: 19, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1342, column: 6)
!10816 = !DILocation(line: 1342, column: 6, scope: !10815)
!10817 = !DILocation(line: 1342, column: 6, scope: !10785)
!10818 = !DILocation(line: 1343, column: 3, scope: !10815)
!10819 = !DILocation(line: 1345, column: 12, scope: !10785)
!10820 = !DILocation(line: 1345, column: 18, scope: !10785)
!10821 = !DILocation(line: 1345, column: 10, scope: !10785)
!10822 = !DILocation(line: 1347, column: 2, scope: !10785)
!10823 = !DILocation(line: 1347, column: 2, scope: !10795)
!10824 = !DILocalVariable(name: "__dummy", scope: !10825, file: !3, line: 1347, type: !145)
!10825 = distinct !DILexicalBlock(scope: !10794, file: !3, line: 1347, column: 2)
!10826 = !DILocation(line: 1347, column: 2, scope: !10825)
!10827 = !DILocalVariable(name: "__dummy2", scope: !10825, file: !3, line: 1347, type: !145)
!10828 = !DILocation(line: 1347, column: 2, scope: !10794)
!10829 = !DILocation(line: 1347, column: 2, scope: !10793)
!10830 = !DILocation(line: 1347, column: 2, scope: !10831)
!10831 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1347, column: 2)
!10832 = !DILocalVariable(name: "__dummy", scope: !10833, file: !3, line: 1347, type: !145)
!10833 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 1347, column: 2)
!10834 = distinct !DILexicalBlock(scope: !10831, file: !3, line: 1347, column: 2)
!10835 = !DILocation(line: 1347, column: 2, scope: !10833)
!10836 = !DILocalVariable(name: "__dummy2", scope: !10833, file: !3, line: 1347, type: !145)
!10837 = !DILocation(line: 1347, column: 2, scope: !10834)
!10838 = !DILocation(line: 1347, column: 2, scope: !10792)
!10839 = !{i32 -2141447770}
!10840 = !DILocation(line: 1347, column: 2, scope: !10791)
!10841 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10790)
!10842 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10790)
!10843 = !DILocation(line: 1348, column: 15, scope: !10785)
!10844 = !DILocation(line: 1348, column: 21, scope: !10785)
!10845 = !DILocation(line: 1348, column: 28, scope: !10785)
!10846 = !DILocation(line: 1348, column: 11, scope: !10785)
!10847 = !DILocation(line: 1348, column: 9, scope: !10785)
!10848 = !DILocation(line: 1349, column: 6, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 1349, column: 6)
!10850 = !DILocation(line: 1349, column: 13, scope: !10849)
!10851 = !DILocation(line: 1349, column: 6, scope: !10785)
!10852 = !DILocation(line: 1350, column: 28, scope: !10849)
!10853 = !DILocation(line: 1350, column: 33, scope: !10849)
!10854 = !DILocation(line: 1350, column: 39, scope: !10849)
!10855 = !DILocation(line: 1350, column: 3, scope: !10849)
!10856 = !DILocation(line: 1351, column: 26, scope: !10785)
!10857 = !DILocation(line: 1351, column: 32, scope: !10785)
!10858 = !DILocation(line: 1351, column: 39, scope: !10785)
!10859 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10787)
!10860 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10787)
!10861 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10787)
!10862 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10787)
!10863 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10787)
!10864 = !DILocation(line: 1352, column: 11, scope: !10785)
!10865 = !DILocation(line: 1352, column: 19, scope: !10785)
!10866 = !DILocation(line: 1352, column: 10, scope: !10785)
!10867 = !DILocation(line: 1353, column: 9, scope: !10785)
!10868 = !DILocation(line: 1353, column: 17, scope: !10785)
!10869 = !DILocation(line: 1353, column: 8, scope: !10785)
!10870 = !DILocation(line: 1352, column: 52, scope: !10785)
!10871 = !DILocation(line: 1354, column: 9, scope: !10785)
!10872 = !DILocation(line: 1354, column: 16, scope: !10785)
!10873 = !DILocation(line: 1354, column: 8, scope: !10785)
!10874 = !DILocation(line: 1353, column: 50, scope: !10785)
!10875 = !DILocation(line: 1355, column: 9, scope: !10785)
!10876 = !DILocation(line: 1355, column: 16, scope: !10785)
!10877 = !DILocation(line: 1355, column: 8, scope: !10785)
!10878 = !DILocation(line: 1354, column: 49, scope: !10785)
!10879 = !DILocation(line: 1356, column: 9, scope: !10785)
!10880 = !DILocation(line: 1356, column: 16, scope: !10785)
!10881 = !DILocation(line: 1356, column: 8, scope: !10785)
!10882 = !DILocation(line: 1355, column: 48, scope: !10785)
!10883 = !DILocation(line: 1357, column: 9, scope: !10785)
!10884 = !DILocation(line: 1357, column: 16, scope: !10785)
!10885 = !DILocation(line: 1357, column: 8, scope: !10785)
!10886 = !DILocation(line: 1356, column: 49, scope: !10785)
!10887 = !DILocation(line: 1352, column: 2, scope: !10785)
!10888 = !DILocation(line: 1358, column: 1, scope: !10785)
!10889 = distinct !DISubprogram(name: "mxser_tiocmset", scope: !3, file: !3, line: 1360, type: !3980, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10890 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10891)
!10891 = distinct !DILocation(line: 1385, column: 2, scope: !10889)
!10892 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10891)
!10893 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10894)
!10894 = distinct !DILocation(line: 1372, column: 2, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1372, column: 2)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 1372, column: 2)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 1372, column: 2)
!10898 = distinct !DILexicalBlock(scope: !10899, file: !3, line: 1372, column: 2)
!10899 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1372, column: 2)
!10900 = !DILocalVariable(name: "tty", arg: 1, scope: !10889, file: !3, line: 1360, type: !213)
!10901 = !DILocation(line: 1360, column: 46, scope: !10889)
!10902 = !DILocalVariable(name: "set", arg: 2, scope: !10889, file: !3, line: 1361, type: !7)
!10903 = !DILocation(line: 1361, column: 16, scope: !10889)
!10904 = !DILocalVariable(name: "clear", arg: 3, scope: !10889, file: !3, line: 1361, type: !7)
!10905 = !DILocation(line: 1361, column: 34, scope: !10889)
!10906 = !DILocalVariable(name: "info", scope: !10889, file: !3, line: 1363, type: !114)
!10907 = !DILocation(line: 1363, column: 21, scope: !10889)
!10908 = !DILocation(line: 1363, column: 28, scope: !10889)
!10909 = !DILocation(line: 1363, column: 33, scope: !10889)
!10910 = !DILocalVariable(name: "flags", scope: !10889, file: !3, line: 1364, type: !145)
!10911 = !DILocation(line: 1364, column: 16, scope: !10889)
!10912 = !DILocation(line: 1367, column: 6, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1367, column: 6)
!10914 = !DILocation(line: 1367, column: 11, scope: !10913)
!10915 = !DILocation(line: 1367, column: 17, scope: !10913)
!10916 = !DILocation(line: 1367, column: 6, scope: !10889)
!10917 = !DILocation(line: 1368, column: 3, scope: !10913)
!10918 = !DILocation(line: 1369, column: 19, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1369, column: 6)
!10920 = !DILocation(line: 1369, column: 6, scope: !10919)
!10921 = !DILocation(line: 1369, column: 6, scope: !10889)
!10922 = !DILocation(line: 1370, column: 3, scope: !10919)
!10923 = !DILocation(line: 1372, column: 2, scope: !10889)
!10924 = !DILocation(line: 1372, column: 2, scope: !10899)
!10925 = !DILocalVariable(name: "__dummy", scope: !10926, file: !3, line: 1372, type: !145)
!10926 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 1372, column: 2)
!10927 = !DILocation(line: 1372, column: 2, scope: !10926)
!10928 = !DILocalVariable(name: "__dummy2", scope: !10926, file: !3, line: 1372, type: !145)
!10929 = !DILocation(line: 1372, column: 2, scope: !10898)
!10930 = !DILocation(line: 1372, column: 2, scope: !10897)
!10931 = !DILocation(line: 1372, column: 2, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 1372, column: 2)
!10933 = !DILocalVariable(name: "__dummy", scope: !10934, file: !3, line: 1372, type: !145)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1372, column: 2)
!10935 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 1372, column: 2)
!10936 = !DILocation(line: 1372, column: 2, scope: !10934)
!10937 = !DILocalVariable(name: "__dummy2", scope: !10934, file: !3, line: 1372, type: !145)
!10938 = !DILocation(line: 1372, column: 2, scope: !10935)
!10939 = !DILocation(line: 1372, column: 2, scope: !10896)
!10940 = !{i32 -2141446618}
!10941 = !DILocation(line: 1372, column: 2, scope: !10895)
!10942 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10894)
!10943 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10894)
!10944 = !DILocation(line: 1374, column: 6, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1374, column: 6)
!10946 = !DILocation(line: 1374, column: 10, scope: !10945)
!10947 = !DILocation(line: 1374, column: 6, scope: !10889)
!10948 = !DILocation(line: 1375, column: 3, scope: !10945)
!10949 = !DILocation(line: 1375, column: 9, scope: !10945)
!10950 = !DILocation(line: 1375, column: 13, scope: !10945)
!10951 = !DILocation(line: 1376, column: 6, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1376, column: 6)
!10953 = !DILocation(line: 1376, column: 10, scope: !10952)
!10954 = !DILocation(line: 1376, column: 6, scope: !10889)
!10955 = !DILocation(line: 1377, column: 3, scope: !10952)
!10956 = !DILocation(line: 1377, column: 9, scope: !10952)
!10957 = !DILocation(line: 1377, column: 13, scope: !10952)
!10958 = !DILocation(line: 1379, column: 6, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1379, column: 6)
!10960 = !DILocation(line: 1379, column: 12, scope: !10959)
!10961 = !DILocation(line: 1379, column: 6, scope: !10889)
!10962 = !DILocation(line: 1380, column: 3, scope: !10959)
!10963 = !DILocation(line: 1380, column: 9, scope: !10959)
!10964 = !DILocation(line: 1380, column: 13, scope: !10959)
!10965 = !DILocation(line: 1381, column: 6, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 1381, column: 6)
!10967 = !DILocation(line: 1381, column: 12, scope: !10966)
!10968 = !DILocation(line: 1381, column: 6, scope: !10889)
!10969 = !DILocation(line: 1382, column: 3, scope: !10966)
!10970 = !DILocation(line: 1382, column: 9, scope: !10966)
!10971 = !DILocation(line: 1382, column: 13, scope: !10966)
!10972 = !DILocation(line: 1384, column: 7, scope: !10889)
!10973 = !DILocation(line: 1384, column: 13, scope: !10889)
!10974 = !DILocation(line: 1384, column: 18, scope: !10889)
!10975 = !DILocation(line: 1384, column: 24, scope: !10889)
!10976 = !DILocation(line: 1384, column: 31, scope: !10889)
!10977 = !DILocation(line: 1384, column: 2, scope: !10889)
!10978 = !DILocation(line: 1385, column: 26, scope: !10889)
!10979 = !DILocation(line: 1385, column: 32, scope: !10889)
!10980 = !DILocation(line: 1385, column: 39, scope: !10889)
!10981 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10891)
!10982 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10891)
!10983 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10891)
!10984 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10891)
!10985 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10891)
!10986 = !DILocation(line: 1386, column: 2, scope: !10889)
!10987 = !DILocation(line: 1387, column: 1, scope: !10889)
!10988 = distinct !DISubprogram(name: "mxser_get_icount", scope: !3, file: !3, line: 1819, type: !4011, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!10989 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !10990)
!10990 = distinct !DILocation(line: 1829, column: 2, scope: !10988)
!10991 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !10990)
!10992 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !10993)
!10993 = distinct !DILocation(line: 1827, column: 2, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !3, line: 1827, column: 2)
!10995 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 1827, column: 2)
!10996 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1827, column: 2)
!10997 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 1827, column: 2)
!10998 = distinct !DILexicalBlock(scope: !10988, file: !3, line: 1827, column: 2)
!10999 = !DILocalVariable(name: "tty", arg: 1, scope: !10988, file: !3, line: 1819, type: !213)
!11000 = !DILocation(line: 1819, column: 48, scope: !10988)
!11001 = !DILocalVariable(name: "icount", arg: 2, scope: !10988, file: !3, line: 1820, type: !4013)
!11002 = !DILocation(line: 1820, column: 34, scope: !10988)
!11003 = !DILocalVariable(name: "info", scope: !10988, file: !3, line: 1823, type: !114)
!11004 = !DILocation(line: 1823, column: 21, scope: !10988)
!11005 = !DILocation(line: 1823, column: 28, scope: !10988)
!11006 = !DILocation(line: 1823, column: 33, scope: !10988)
!11007 = !DILocalVariable(name: "cnow", scope: !10988, file: !3, line: 1824, type: !4251)
!11008 = !DILocation(line: 1824, column: 22, scope: !10988)
!11009 = !DILocalVariable(name: "flags", scope: !10988, file: !3, line: 1825, type: !145)
!11010 = !DILocation(line: 1825, column: 16, scope: !10988)
!11011 = !DILocation(line: 1827, column: 2, scope: !10988)
!11012 = !DILocation(line: 1827, column: 2, scope: !10998)
!11013 = !DILocalVariable(name: "__dummy", scope: !11014, file: !3, line: 1827, type: !145)
!11014 = distinct !DILexicalBlock(scope: !10997, file: !3, line: 1827, column: 2)
!11015 = !DILocation(line: 1827, column: 2, scope: !11014)
!11016 = !DILocalVariable(name: "__dummy2", scope: !11014, file: !3, line: 1827, type: !145)
!11017 = !DILocation(line: 1827, column: 2, scope: !10997)
!11018 = !DILocation(line: 1827, column: 2, scope: !10996)
!11019 = !DILocation(line: 1827, column: 2, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 1827, column: 2)
!11021 = !DILocalVariable(name: "__dummy", scope: !11022, file: !3, line: 1827, type: !145)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 1827, column: 2)
!11023 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 1827, column: 2)
!11024 = !DILocation(line: 1827, column: 2, scope: !11022)
!11025 = !DILocalVariable(name: "__dummy2", scope: !11022, file: !3, line: 1827, type: !145)
!11026 = !DILocation(line: 1827, column: 2, scope: !11023)
!11027 = !DILocation(line: 1827, column: 2, scope: !10995)
!11028 = !{i32 -2141429601}
!11029 = !DILocation(line: 1827, column: 2, scope: !10994)
!11030 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !10993)
!11031 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !10993)
!11032 = !DILocation(line: 1828, column: 9, scope: !10988)
!11033 = !DILocation(line: 1828, column: 15, scope: !10988)
!11034 = !DILocation(line: 1829, column: 26, scope: !10988)
!11035 = !DILocation(line: 1829, column: 32, scope: !10988)
!11036 = !DILocation(line: 1829, column: 39, scope: !10988)
!11037 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !10990)
!11038 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !10990)
!11039 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !10990)
!11040 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !10990)
!11041 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !10990)
!11042 = !DILocation(line: 1831, column: 23, scope: !10988)
!11043 = !DILocation(line: 1831, column: 2, scope: !10988)
!11044 = !DILocation(line: 1831, column: 10, scope: !10988)
!11045 = !DILocation(line: 1831, column: 16, scope: !10988)
!11046 = !DILocation(line: 1832, column: 21, scope: !10988)
!11047 = !DILocation(line: 1832, column: 2, scope: !10988)
!11048 = !DILocation(line: 1832, column: 10, scope: !10988)
!11049 = !DILocation(line: 1832, column: 14, scope: !10988)
!11050 = !DILocation(line: 1833, column: 25, scope: !10988)
!11051 = !DILocation(line: 1833, column: 2, scope: !10988)
!11052 = !DILocation(line: 1833, column: 10, scope: !10988)
!11053 = !DILocation(line: 1833, column: 18, scope: !10988)
!11054 = !DILocation(line: 1834, column: 29, scope: !10988)
!11055 = !DILocation(line: 1834, column: 2, scope: !10988)
!11056 = !DILocation(line: 1834, column: 10, scope: !10988)
!11057 = !DILocation(line: 1834, column: 22, scope: !10988)
!11058 = !DILocation(line: 1835, column: 24, scope: !10988)
!11059 = !DILocation(line: 1835, column: 2, scope: !10988)
!11060 = !DILocation(line: 1835, column: 10, scope: !10988)
!11061 = !DILocation(line: 1835, column: 17, scope: !10988)
!11062 = !DILocation(line: 1836, column: 20, scope: !10988)
!11063 = !DILocation(line: 1836, column: 2, scope: !10988)
!11064 = !DILocation(line: 1836, column: 10, scope: !10988)
!11065 = !DILocation(line: 1836, column: 13, scope: !10988)
!11066 = !DILocation(line: 1837, column: 20, scope: !10988)
!11067 = !DILocation(line: 1837, column: 2, scope: !10988)
!11068 = !DILocation(line: 1837, column: 10, scope: !10988)
!11069 = !DILocation(line: 1837, column: 13, scope: !10988)
!11070 = !DILocation(line: 1838, column: 21, scope: !10988)
!11071 = !DILocation(line: 1838, column: 2, scope: !10988)
!11072 = !DILocation(line: 1838, column: 10, scope: !10988)
!11073 = !DILocation(line: 1838, column: 14, scope: !10988)
!11074 = !DILocation(line: 1839, column: 21, scope: !10988)
!11075 = !DILocation(line: 1839, column: 2, scope: !10988)
!11076 = !DILocation(line: 1839, column: 10, scope: !10988)
!11077 = !DILocation(line: 1839, column: 14, scope: !10988)
!11078 = !DILocation(line: 1840, column: 21, scope: !10988)
!11079 = !DILocation(line: 1840, column: 2, scope: !10988)
!11080 = !DILocation(line: 1840, column: 10, scope: !10988)
!11081 = !DILocation(line: 1840, column: 14, scope: !10988)
!11082 = !DILocation(line: 1841, column: 21, scope: !10988)
!11083 = !DILocation(line: 1841, column: 2, scope: !10988)
!11084 = !DILocation(line: 1841, column: 10, scope: !10988)
!11085 = !DILocation(line: 1841, column: 14, scope: !10988)
!11086 = !DILocation(line: 1842, column: 2, scope: !10988)
!11087 = distinct !DISubprogram(name: "mxser_get_serial_info", scope: !3, file: !3, line: 1206, type: !4032, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!11088 = !DILocalVariable(name: "tty", arg: 1, scope: !11087, file: !3, line: 1206, type: !213)
!11089 = !DILocation(line: 1206, column: 53, scope: !11087)
!11090 = !DILocalVariable(name: "ss", arg: 2, scope: !11087, file: !3, line: 1207, type: !4034)
!11091 = !DILocation(line: 1207, column: 25, scope: !11087)
!11092 = !DILocalVariable(name: "info", scope: !11087, file: !3, line: 1209, type: !114)
!11093 = !DILocation(line: 1209, column: 21, scope: !11087)
!11094 = !DILocation(line: 1209, column: 28, scope: !11087)
!11095 = !DILocation(line: 1209, column: 33, scope: !11087)
!11096 = !DILocalVariable(name: "port", scope: !11087, file: !3, line: 1210, type: !3897)
!11097 = !DILocation(line: 1210, column: 19, scope: !11087)
!11098 = !DILocation(line: 1210, column: 27, scope: !11087)
!11099 = !DILocation(line: 1210, column: 33, scope: !11087)
!11100 = !DILocation(line: 1212, column: 6, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 1212, column: 6)
!11102 = !DILocation(line: 1212, column: 11, scope: !11101)
!11103 = !DILocation(line: 1212, column: 17, scope: !11101)
!11104 = !DILocation(line: 1212, column: 6, scope: !11087)
!11105 = !DILocation(line: 1213, column: 3, scope: !11101)
!11106 = !DILocation(line: 1215, column: 14, scope: !11087)
!11107 = !DILocation(line: 1215, column: 20, scope: !11087)
!11108 = !DILocation(line: 1215, column: 2, scope: !11087)
!11109 = !DILocation(line: 1216, column: 13, scope: !11087)
!11110 = !DILocation(line: 1216, column: 19, scope: !11087)
!11111 = !DILocation(line: 1216, column: 2, scope: !11087)
!11112 = !DILocation(line: 1216, column: 6, scope: !11087)
!11113 = !DILocation(line: 1216, column: 11, scope: !11087)
!11114 = !DILocation(line: 1217, column: 13, scope: !11087)
!11115 = !DILocation(line: 1217, column: 18, scope: !11087)
!11116 = !DILocation(line: 1217, column: 2, scope: !11087)
!11117 = !DILocation(line: 1217, column: 6, scope: !11087)
!11118 = !DILocation(line: 1217, column: 11, scope: !11087)
!11119 = !DILocation(line: 1218, column: 13, scope: !11087)
!11120 = !DILocation(line: 1218, column: 19, scope: !11087)
!11121 = !DILocation(line: 1218, column: 2, scope: !11087)
!11122 = !DILocation(line: 1218, column: 6, scope: !11087)
!11123 = !DILocation(line: 1218, column: 11, scope: !11087)
!11124 = !DILocation(line: 1219, column: 12, scope: !11087)
!11125 = !DILocation(line: 1219, column: 18, scope: !11087)
!11126 = !DILocation(line: 1219, column: 25, scope: !11087)
!11127 = !DILocation(line: 1219, column: 2, scope: !11087)
!11128 = !DILocation(line: 1219, column: 6, scope: !11087)
!11129 = !DILocation(line: 1219, column: 10, scope: !11087)
!11130 = !DILocation(line: 1220, column: 14, scope: !11087)
!11131 = !DILocation(line: 1220, column: 20, scope: !11087)
!11132 = !DILocation(line: 1220, column: 25, scope: !11087)
!11133 = !DILocation(line: 1220, column: 2, scope: !11087)
!11134 = !DILocation(line: 1220, column: 6, scope: !11087)
!11135 = !DILocation(line: 1220, column: 12, scope: !11087)
!11136 = !DILocation(line: 1221, column: 18, scope: !11087)
!11137 = !DILocation(line: 1221, column: 24, scope: !11087)
!11138 = !DILocation(line: 1221, column: 2, scope: !11087)
!11139 = !DILocation(line: 1221, column: 6, scope: !11087)
!11140 = !DILocation(line: 1221, column: 16, scope: !11087)
!11141 = !DILocation(line: 1222, column: 20, scope: !11087)
!11142 = !DILocation(line: 1222, column: 26, scope: !11087)
!11143 = !DILocation(line: 1222, column: 31, scope: !11087)
!11144 = !DILocation(line: 1222, column: 2, scope: !11087)
!11145 = !DILocation(line: 1222, column: 6, scope: !11087)
!11146 = !DILocation(line: 1222, column: 18, scope: !11087)
!11147 = !DILocation(line: 1223, column: 21, scope: !11087)
!11148 = !DILocation(line: 1223, column: 27, scope: !11087)
!11149 = !DILocation(line: 1223, column: 32, scope: !11087)
!11150 = !DILocation(line: 1223, column: 2, scope: !11087)
!11151 = !DILocation(line: 1223, column: 6, scope: !11087)
!11152 = !DILocation(line: 1223, column: 19, scope: !11087)
!11153 = !DILocation(line: 1224, column: 23, scope: !11087)
!11154 = !DILocation(line: 1224, column: 29, scope: !11087)
!11155 = !DILocation(line: 1224, column: 2, scope: !11087)
!11156 = !DILocation(line: 1224, column: 6, scope: !11087)
!11157 = !DILocation(line: 1224, column: 21, scope: !11087)
!11158 = !DILocation(line: 1225, column: 16, scope: !11087)
!11159 = !DILocation(line: 1225, column: 22, scope: !11087)
!11160 = !DILocation(line: 1225, column: 2, scope: !11087)
!11161 = !DILocation(line: 1226, column: 2, scope: !11087)
!11162 = !DILocation(line: 1227, column: 1, scope: !11087)
!11163 = distinct !DISubprogram(name: "mxser_set_serial_info", scope: !3, file: !3, line: 1229, type: !4032, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!11164 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !11165)
!11165 = distinct !DILocation(line: 1298, column: 4, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1295, column: 48)
!11167 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 1295, column: 7)
!11168 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 1294, column: 34)
!11169 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1294, column: 6)
!11170 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !11165)
!11171 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !11172)
!11172 = distinct !DILocation(line: 1296, column: 4, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 1296, column: 4)
!11174 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 1296, column: 4)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 1296, column: 4)
!11176 = distinct !DILexicalBlock(scope: !11177, file: !3, line: 1296, column: 4)
!11177 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 1296, column: 4)
!11178 = !DILocalVariable(name: "tty", arg: 1, scope: !11163, file: !3, line: 1229, type: !213)
!11179 = !DILocation(line: 1229, column: 53, scope: !11163)
!11180 = !DILocalVariable(name: "ss", arg: 2, scope: !11163, file: !3, line: 1230, type: !4034)
!11181 = !DILocation(line: 1230, column: 25, scope: !11163)
!11182 = !DILocalVariable(name: "info", scope: !11163, file: !3, line: 1232, type: !114)
!11183 = !DILocation(line: 1232, column: 21, scope: !11163)
!11184 = !DILocation(line: 1232, column: 28, scope: !11163)
!11185 = !DILocation(line: 1232, column: 33, scope: !11163)
!11186 = !DILocalVariable(name: "port", scope: !11163, file: !3, line: 1233, type: !3897)
!11187 = !DILocation(line: 1233, column: 19, scope: !11163)
!11188 = !DILocation(line: 1233, column: 27, scope: !11163)
!11189 = !DILocation(line: 1233, column: 33, scope: !11163)
!11190 = !DILocalVariable(name: "baud", scope: !11163, file: !3, line: 1234, type: !3885)
!11191 = !DILocation(line: 1234, column: 10, scope: !11163)
!11192 = !DILocalVariable(name: "sl_flags", scope: !11163, file: !3, line: 1235, type: !145)
!11193 = !DILocation(line: 1235, column: 16, scope: !11163)
!11194 = !DILocalVariable(name: "flags", scope: !11163, file: !3, line: 1236, type: !7)
!11195 = !DILocation(line: 1236, column: 15, scope: !11163)
!11196 = !DILocalVariable(name: "retval", scope: !11163, file: !3, line: 1237, type: !113)
!11197 = !DILocation(line: 1237, column: 6, scope: !11163)
!11198 = !DILocation(line: 1239, column: 6, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1239, column: 6)
!11200 = !DILocation(line: 1239, column: 11, scope: !11199)
!11201 = !DILocation(line: 1239, column: 17, scope: !11199)
!11202 = !DILocation(line: 1239, column: 6, scope: !11163)
!11203 = !DILocation(line: 1240, column: 3, scope: !11199)
!11204 = !DILocation(line: 1241, column: 19, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1241, column: 6)
!11206 = !DILocation(line: 1241, column: 6, scope: !11205)
!11207 = !DILocation(line: 1241, column: 6, scope: !11163)
!11208 = !DILocation(line: 1242, column: 3, scope: !11205)
!11209 = !DILocation(line: 1244, column: 14, scope: !11163)
!11210 = !DILocation(line: 1244, column: 20, scope: !11163)
!11211 = !DILocation(line: 1244, column: 2, scope: !11163)
!11212 = !DILocation(line: 1245, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1245, column: 6)
!11214 = !DILocation(line: 1245, column: 13, scope: !11213)
!11215 = !DILocation(line: 1245, column: 6, scope: !11163)
!11216 = !DILocation(line: 1246, column: 17, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 1245, column: 21)
!11218 = !DILocation(line: 1246, column: 23, scope: !11217)
!11219 = !DILocation(line: 1246, column: 3, scope: !11217)
!11220 = !DILocation(line: 1247, column: 3, scope: !11217)
!11221 = !DILocation(line: 1250, column: 6, scope: !11222)
!11222 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1250, column: 6)
!11223 = !DILocation(line: 1250, column: 10, scope: !11222)
!11224 = !DILocation(line: 1250, column: 17, scope: !11222)
!11225 = !DILocation(line: 1250, column: 23, scope: !11222)
!11226 = !DILocation(line: 1250, column: 30, scope: !11222)
!11227 = !DILocation(line: 1250, column: 14, scope: !11222)
!11228 = !DILocation(line: 1250, column: 34, scope: !11222)
!11229 = !DILocation(line: 1251, column: 4, scope: !11222)
!11230 = !DILocation(line: 1251, column: 8, scope: !11222)
!11231 = !DILocation(line: 1251, column: 16, scope: !11222)
!11232 = !DILocation(line: 1251, column: 22, scope: !11222)
!11233 = !DILocation(line: 1251, column: 13, scope: !11222)
!11234 = !DILocation(line: 1250, column: 6, scope: !11163)
!11235 = !DILocation(line: 1252, column: 17, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11222, file: !3, line: 1251, column: 30)
!11237 = !DILocation(line: 1252, column: 23, scope: !11236)
!11238 = !DILocation(line: 1252, column: 3, scope: !11236)
!11239 = !DILocation(line: 1253, column: 3, scope: !11236)
!11240 = !DILocation(line: 1256, column: 10, scope: !11163)
!11241 = !DILocation(line: 1256, column: 16, scope: !11163)
!11242 = !DILocation(line: 1256, column: 22, scope: !11163)
!11243 = !DILocation(line: 1256, column: 8, scope: !11163)
!11244 = !DILocation(line: 1258, column: 7, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1258, column: 6)
!11246 = !DILocation(line: 1258, column: 6, scope: !11163)
!11247 = !DILocation(line: 1259, column: 8, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 1259, column: 7)
!11249 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 1258, column: 31)
!11250 = !DILocation(line: 1259, column: 12, scope: !11248)
!11251 = !DILocation(line: 1259, column: 25, scope: !11248)
!11252 = !DILocation(line: 1259, column: 31, scope: !11248)
!11253 = !DILocation(line: 1259, column: 22, scope: !11248)
!11254 = !DILocation(line: 1259, column: 42, scope: !11248)
!11255 = !DILocation(line: 1260, column: 6, scope: !11248)
!11256 = !DILocation(line: 1260, column: 10, scope: !11248)
!11257 = !DILocation(line: 1260, column: 25, scope: !11248)
!11258 = !DILocation(line: 1260, column: 31, scope: !11248)
!11259 = !DILocation(line: 1260, column: 36, scope: !11248)
!11260 = !DILocation(line: 1260, column: 22, scope: !11248)
!11261 = !DILocation(line: 1260, column: 49, scope: !11248)
!11262 = !DILocation(line: 1261, column: 7, scope: !11248)
!11263 = !DILocation(line: 1261, column: 11, scope: !11248)
!11264 = !DILocation(line: 1261, column: 17, scope: !11248)
!11265 = !DILocation(line: 1261, column: 6, scope: !11248)
!11266 = !DILocation(line: 1261, column: 40, scope: !11248)
!11267 = !DILocation(line: 1261, column: 46, scope: !11248)
!11268 = !DILocation(line: 1261, column: 51, scope: !11248)
!11269 = !DILocation(line: 1261, column: 57, scope: !11248)
!11270 = !DILocation(line: 1261, column: 36, scope: !11248)
!11271 = !DILocation(line: 1259, column: 7, scope: !11249)
!11272 = !DILocation(line: 1262, column: 18, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 1261, column: 78)
!11274 = !DILocation(line: 1262, column: 24, scope: !11273)
!11275 = !DILocation(line: 1262, column: 4, scope: !11273)
!11276 = !DILocation(line: 1263, column: 4, scope: !11273)
!11277 = !DILocation(line: 1265, column: 24, scope: !11249)
!11278 = !DILocation(line: 1265, column: 30, scope: !11249)
!11279 = !DILocation(line: 1265, column: 35, scope: !11249)
!11280 = !DILocation(line: 1265, column: 41, scope: !11249)
!11281 = !DILocation(line: 1266, column: 6, scope: !11249)
!11282 = !DILocation(line: 1266, column: 10, scope: !11249)
!11283 = !DILocation(line: 1266, column: 16, scope: !11249)
!11284 = !DILocation(line: 1266, column: 5, scope: !11249)
!11285 = !DILocation(line: 1265, column: 60, scope: !11249)
!11286 = !DILocation(line: 1265, column: 3, scope: !11249)
!11287 = !DILocation(line: 1265, column: 9, scope: !11249)
!11288 = !DILocation(line: 1265, column: 14, scope: !11249)
!11289 = !DILocation(line: 1265, column: 20, scope: !11249)
!11290 = !DILocation(line: 1267, column: 2, scope: !11249)
!11291 = !DILocation(line: 1272, column: 19, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 1267, column: 9)
!11293 = !DILocation(line: 1272, column: 25, scope: !11292)
!11294 = !DILocation(line: 1272, column: 31, scope: !11292)
!11295 = !DILocation(line: 1273, column: 6, scope: !11292)
!11296 = !DILocation(line: 1273, column: 10, scope: !11292)
!11297 = !DILocation(line: 1273, column: 16, scope: !11292)
!11298 = !DILocation(line: 1273, column: 5, scope: !11292)
!11299 = !DILocation(line: 1272, column: 47, scope: !11292)
!11300 = !DILocation(line: 1272, column: 3, scope: !11292)
!11301 = !DILocation(line: 1272, column: 9, scope: !11292)
!11302 = !DILocation(line: 1272, column: 15, scope: !11292)
!11303 = !DILocation(line: 1274, column: 23, scope: !11292)
!11304 = !DILocation(line: 1274, column: 27, scope: !11292)
!11305 = !DILocation(line: 1274, column: 39, scope: !11292)
!11306 = !DILocation(line: 1274, column: 44, scope: !11292)
!11307 = !DILocation(line: 1274, column: 3, scope: !11292)
!11308 = !DILocation(line: 1274, column: 9, scope: !11292)
!11309 = !DILocation(line: 1274, column: 21, scope: !11292)
!11310 = !DILocation(line: 1275, column: 24, scope: !11292)
!11311 = !DILocation(line: 1275, column: 28, scope: !11292)
!11312 = !DILocation(line: 1275, column: 41, scope: !11292)
!11313 = !DILocation(line: 1275, column: 46, scope: !11292)
!11314 = !DILocation(line: 1275, column: 3, scope: !11292)
!11315 = !DILocation(line: 1275, column: 9, scope: !11292)
!11316 = !DILocation(line: 1275, column: 22, scope: !11292)
!11317 = !DILocation(line: 1276, column: 24, scope: !11292)
!11318 = !DILocation(line: 1276, column: 30, scope: !11292)
!11319 = !DILocation(line: 1276, column: 36, scope: !11292)
!11320 = !DILocation(line: 1276, column: 23, scope: !11292)
!11321 = !DILocation(line: 1276, column: 3, scope: !11292)
!11322 = !DILocation(line: 1276, column: 9, scope: !11292)
!11323 = !DILocation(line: 1276, column: 21, scope: !11292)
!11324 = !DILocation(line: 1277, column: 8, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1277, column: 7)
!11326 = !DILocation(line: 1277, column: 14, scope: !11325)
!11327 = !DILocation(line: 1277, column: 20, scope: !11325)
!11328 = !DILocation(line: 1277, column: 38, scope: !11325)
!11329 = !DILocation(line: 1277, column: 56, scope: !11325)
!11330 = !DILocation(line: 1278, column: 6, scope: !11325)
!11331 = !DILocation(line: 1278, column: 10, scope: !11325)
!11332 = !DILocation(line: 1278, column: 23, scope: !11325)
!11333 = !DILocation(line: 1278, column: 29, scope: !11325)
!11334 = !DILocation(line: 1278, column: 20, scope: !11325)
!11335 = !DILocation(line: 1278, column: 39, scope: !11325)
!11336 = !DILocation(line: 1279, column: 5, scope: !11325)
!11337 = !DILocation(line: 1279, column: 9, scope: !11325)
!11338 = !DILocation(line: 1280, column: 5, scope: !11325)
!11339 = !DILocation(line: 1280, column: 11, scope: !11325)
!11340 = !DILocation(line: 1279, column: 24, scope: !11325)
!11341 = !DILocation(line: 1277, column: 7, scope: !11292)
!11342 = !DILocation(line: 1281, column: 8, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 1281, column: 8)
!11344 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 1280, column: 28)
!11345 = !DILocation(line: 1281, column: 12, scope: !11343)
!11346 = !DILocation(line: 1281, column: 27, scope: !11343)
!11347 = !DILocation(line: 1281, column: 8, scope: !11344)
!11348 = !DILocation(line: 1282, column: 19, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 1281, column: 33)
!11350 = !DILocation(line: 1282, column: 25, scope: !11349)
!11351 = !DILocation(line: 1282, column: 5, scope: !11349)
!11352 = !DILocation(line: 1283, column: 5, scope: !11349)
!11353 = !DILocation(line: 1285, column: 11, scope: !11344)
!11354 = !DILocation(line: 1285, column: 15, scope: !11344)
!11355 = !DILocation(line: 1285, column: 27, scope: !11344)
!11356 = !DILocation(line: 1285, column: 31, scope: !11344)
!11357 = !DILocation(line: 1285, column: 25, scope: !11344)
!11358 = !DILocation(line: 1285, column: 9, scope: !11344)
!11359 = !DILocation(line: 1286, column: 25, scope: !11344)
!11360 = !DILocation(line: 1286, column: 30, scope: !11344)
!11361 = !DILocation(line: 1286, column: 36, scope: !11344)
!11362 = !DILocation(line: 1286, column: 4, scope: !11344)
!11363 = !DILocation(line: 1287, column: 3, scope: !11344)
!11364 = !DILocation(line: 1290, column: 15, scope: !11163)
!11365 = !DILocation(line: 1290, column: 19, scope: !11163)
!11366 = !DILocation(line: 1290, column: 2, scope: !11163)
!11367 = !DILocation(line: 1290, column: 8, scope: !11163)
!11368 = !DILocation(line: 1290, column: 13, scope: !11163)
!11369 = !DILocation(line: 1292, column: 20, scope: !11163)
!11370 = !DILocation(line: 1292, column: 2, scope: !11163)
!11371 = !DILocation(line: 1294, column: 27, scope: !11169)
!11372 = !DILocation(line: 1294, column: 6, scope: !11169)
!11373 = !DILocation(line: 1294, column: 6, scope: !11163)
!11374 = !DILocation(line: 1295, column: 7, scope: !11167)
!11375 = !DILocation(line: 1295, column: 17, scope: !11167)
!11376 = !DILocation(line: 1295, column: 23, scope: !11167)
!11377 = !DILocation(line: 1295, column: 29, scope: !11167)
!11378 = !DILocation(line: 1295, column: 13, scope: !11167)
!11379 = !DILocation(line: 1295, column: 7, scope: !11168)
!11380 = !DILocation(line: 1296, column: 4, scope: !11166)
!11381 = !DILocation(line: 1296, column: 4, scope: !11177)
!11382 = !DILocalVariable(name: "__dummy", scope: !11383, file: !3, line: 1296, type: !145)
!11383 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 1296, column: 4)
!11384 = !DILocation(line: 1296, column: 4, scope: !11383)
!11385 = !DILocalVariable(name: "__dummy2", scope: !11383, file: !3, line: 1296, type: !145)
!11386 = !DILocation(line: 1296, column: 4, scope: !11176)
!11387 = !DILocation(line: 1296, column: 4, scope: !11175)
!11388 = !DILocation(line: 1296, column: 4, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 1296, column: 4)
!11390 = !DILocalVariable(name: "__dummy", scope: !11391, file: !3, line: 1296, type: !145)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 1296, column: 4)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 1296, column: 4)
!11393 = !DILocation(line: 1296, column: 4, scope: !11391)
!11394 = !DILocalVariable(name: "__dummy2", scope: !11391, file: !3, line: 1296, type: !145)
!11395 = !DILocation(line: 1296, column: 4, scope: !11392)
!11396 = !DILocation(line: 1296, column: 4, scope: !11174)
!11397 = !{i32 -2141450642}
!11398 = !DILocation(line: 1296, column: 4, scope: !11173)
!11399 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !11172)
!11400 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !11172)
!11401 = !DILocation(line: 1297, column: 23, scope: !11166)
!11402 = !DILocation(line: 1297, column: 4, scope: !11166)
!11403 = !DILocation(line: 1298, column: 28, scope: !11166)
!11404 = !DILocation(line: 1298, column: 34, scope: !11166)
!11405 = !DILocation(line: 1298, column: 41, scope: !11166)
!11406 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !11165)
!11407 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !11165)
!11408 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !11165)
!11409 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !11165)
!11410 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !11165)
!11411 = !DILocation(line: 1299, column: 3, scope: !11166)
!11412 = !DILocation(line: 1300, column: 2, scope: !11168)
!11413 = !DILocation(line: 1301, column: 27, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 1300, column: 9)
!11415 = !DILocation(line: 1301, column: 33, scope: !11414)
!11416 = !DILocation(line: 1301, column: 12, scope: !11414)
!11417 = !DILocation(line: 1301, column: 10, scope: !11414)
!11418 = !DILocation(line: 1302, column: 7, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 1302, column: 7)
!11420 = !DILocation(line: 1302, column: 14, scope: !11419)
!11421 = !DILocation(line: 1302, column: 7, scope: !11414)
!11422 = !DILocation(line: 1303, column: 29, scope: !11419)
!11423 = !DILocation(line: 1303, column: 4, scope: !11419)
!11424 = !DILocation(line: 1305, column: 16, scope: !11163)
!11425 = !DILocation(line: 1305, column: 22, scope: !11163)
!11426 = !DILocation(line: 1305, column: 2, scope: !11163)
!11427 = !DILocation(line: 1306, column: 9, scope: !11163)
!11428 = !DILocation(line: 1306, column: 2, scope: !11163)
!11429 = !DILocation(line: 1307, column: 1, scope: !11163)
!11430 = distinct !DISubprogram(name: "mxser_close_port", scope: !3, file: !3, line: 1035, type: !4181, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!11431 = !DILocalVariable(name: "port", arg: 1, scope: !11430, file: !3, line: 1035, type: !3897)
!11432 = !DILocation(line: 1035, column: 47, scope: !11430)
!11433 = !DILocalVariable(name: "info", scope: !11430, file: !3, line: 1037, type: !114)
!11434 = !DILocation(line: 1037, column: 21, scope: !11430)
!11435 = !DILocalVariable(name: "__mptr", scope: !11436, file: !3, line: 1037, type: !112)
!11436 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1037, column: 28)
!11437 = !DILocation(line: 1037, column: 28, scope: !11436)
!11438 = !DILocation(line: 1037, column: 28, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 1037, column: 28)
!11440 = !DILocalVariable(name: "timeout", scope: !11430, file: !3, line: 1038, type: !145)
!11441 = !DILocation(line: 1038, column: 16, scope: !11430)
!11442 = !DILocation(line: 1045, column: 2, scope: !11430)
!11443 = !DILocation(line: 1045, column: 8, scope: !11430)
!11444 = !DILocation(line: 1045, column: 12, scope: !11430)
!11445 = !DILocation(line: 1046, column: 6, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1046, column: 6)
!11447 = !DILocation(line: 1046, column: 12, scope: !11446)
!11448 = !DILocation(line: 1046, column: 19, scope: !11446)
!11449 = !DILocation(line: 1046, column: 6, scope: !11430)
!11450 = !DILocation(line: 1047, column: 3, scope: !11446)
!11451 = !DILocation(line: 1047, column: 9, scope: !11446)
!11452 = !DILocation(line: 1047, column: 13, scope: !11446)
!11453 = !DILocation(line: 1049, column: 7, scope: !11430)
!11454 = !DILocation(line: 1049, column: 13, scope: !11430)
!11455 = !DILocation(line: 1049, column: 18, scope: !11430)
!11456 = !DILocation(line: 1049, column: 24, scope: !11430)
!11457 = !DILocation(line: 1049, column: 31, scope: !11430)
!11458 = !DILocation(line: 1049, column: 2, scope: !11430)
!11459 = !DILocation(line: 1055, column: 12, scope: !11430)
!11460 = !DILocation(line: 1055, column: 20, scope: !11430)
!11461 = !DILocation(line: 1055, column: 10, scope: !11430)
!11462 = !DILocation(line: 1056, column: 2, scope: !11430)
!11463 = !DILocation(line: 1056, column: 15, scope: !11430)
!11464 = !DILocation(line: 1056, column: 21, scope: !11430)
!11465 = !DILocation(line: 1056, column: 28, scope: !11430)
!11466 = !DILocation(line: 1056, column: 11, scope: !11430)
!11467 = !DILocation(line: 1056, column: 40, scope: !11430)
!11468 = !DILocation(line: 1056, column: 9, scope: !11430)
!11469 = !DILocation(line: 1057, column: 3, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 1056, column: 58)
!11471 = !DILocation(line: 1058, column: 7, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 1058, column: 7)
!11473 = !DILocation(line: 1058, column: 7, scope: !11470)
!11474 = !DILocation(line: 1059, column: 4, scope: !11472)
!11475 = distinct !{!11475, !11462, !11476}
!11476 = !DILocation(line: 1060, column: 2, scope: !11430)
!11477 = !DILocation(line: 1061, column: 1, scope: !11430)
!11478 = distinct !DISubprogram(name: "tty_port_set_initialized", scope: !119, file: !119, line: 669, type: !7490, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!11479 = !DILocalVariable(name: "port", arg: 1, scope: !11478, file: !119, line: 669, type: !3897)
!11480 = !DILocation(line: 669, column: 62, scope: !11478)
!11481 = !DILocalVariable(name: "val", arg: 2, scope: !11478, file: !119, line: 669, type: !482)
!11482 = !DILocation(line: 669, column: 73, scope: !11478)
!11483 = !DILocation(line: 671, column: 6, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11478, file: !119, line: 671, column: 6)
!11485 = !DILocation(line: 671, column: 6, scope: !11478)
!11486 = !DILocation(line: 672, column: 34, scope: !11484)
!11487 = !DILocation(line: 672, column: 40, scope: !11484)
!11488 = !DILocation(line: 672, column: 3, scope: !11484)
!11489 = !DILocation(line: 674, column: 36, scope: !11484)
!11490 = !DILocation(line: 674, column: 42, scope: !11484)
!11491 = !DILocation(line: 674, column: 3, scope: !11484)
!11492 = !DILocation(line: 675, column: 1, scope: !11478)
!11493 = !DILocation(line: 138, column: 29, scope: !9525, inlinedAt: !11494)
!11494 = distinct !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11495)
!11495 = distinct !DILocation(line: 1639, column: 7, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 1639, column: 7)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1557, column: 26)
!11498 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 1501, column: 15)
!11499 = !DILocation(line: 138, column: 42, scope: !9525, inlinedAt: !11494)
!11500 = !DILocation(line: 138, column: 54, scope: !9525, inlinedAt: !11494)
!11501 = !DILocation(line: 140, column: 6, scope: !9525, inlinedAt: !11494)
!11502 = !DILocation(line: 150, column: 6, scope: !9547, inlinedAt: !11494)
!11503 = !DILocation(line: 197, column: 27, scope: !9533, inlinedAt: !11495)
!11504 = !DILocation(line: 197, column: 43, scope: !9533, inlinedAt: !11495)
!11505 = !DILocation(line: 197, column: 63, scope: !9533, inlinedAt: !11495)
!11506 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !11507)
!11507 = distinct !DILocation(line: 1600, column: 5, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 1567, column: 53)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 1567, column: 4)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1567, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 1566, column: 45)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 1566, column: 3)
!11513 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 1566, column: 3)
!11514 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !11515)
!11515 = distinct !DILocation(line: 1581, column: 5, scope: !11508)
!11516 = !DILocation(line: 138, column: 29, scope: !9525, inlinedAt: !11517)
!11517 = distinct !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11518)
!11518 = distinct !DILocation(line: 1551, column: 9, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1551, column: 9)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 1524, column: 48)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 1524, column: 4)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 1524, column: 4)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 1523, column: 3)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 1523, column: 3)
!11525 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1521, column: 24)
!11526 = !DILocation(line: 138, column: 42, scope: !9525, inlinedAt: !11517)
!11527 = !DILocation(line: 138, column: 54, scope: !9525, inlinedAt: !11517)
!11528 = !DILocation(line: 140, column: 6, scope: !9525, inlinedAt: !11517)
!11529 = !DILocation(line: 150, column: 6, scope: !9547, inlinedAt: !11517)
!11530 = !DILocation(line: 197, column: 27, scope: !9533, inlinedAt: !11518)
!11531 = !DILocation(line: 197, column: 43, scope: !9533, inlinedAt: !11518)
!11532 = !DILocation(line: 197, column: 63, scope: !9533, inlinedAt: !11518)
!11533 = !DILocation(line: 402, column: 57, scope: !9557, inlinedAt: !11534)
!11534 = distinct !DILocation(line: 1542, column: 5, scope: !11520)
!11535 = !DILocation(line: 377, column: 55, scope: !9561, inlinedAt: !11536)
!11536 = distinct !DILocation(line: 1540, column: 5, scope: !11520)
!11537 = !DILocation(line: 138, column: 29, scope: !9525, inlinedAt: !11538)
!11538 = distinct !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11539)
!11539 = distinct !DILocation(line: 1518, column: 7, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1518, column: 7)
!11541 = !DILocation(line: 138, column: 42, scope: !9525, inlinedAt: !11538)
!11542 = !DILocation(line: 138, column: 54, scope: !9525, inlinedAt: !11538)
!11543 = !DILocation(line: 140, column: 6, scope: !9525, inlinedAt: !11538)
!11544 = !DILocation(line: 150, column: 6, scope: !9547, inlinedAt: !11538)
!11545 = !DILocation(line: 197, column: 27, scope: !9533, inlinedAt: !11539)
!11546 = !DILocation(line: 197, column: 43, scope: !9533, inlinedAt: !11539)
!11547 = !DILocation(line: 197, column: 63, scope: !9533, inlinedAt: !11539)
!11548 = !DILocation(line: 15, column: 9, scope: !10584, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 1503, column: 3, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 1503, column: 3)
!11551 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1503, column: 3)
!11552 = !DILocation(line: 15, column: 9, scope: !10595, inlinedAt: !11549)
!11553 = !DILocation(line: 15, column: 9, scope: !10598, inlinedAt: !11549)
!11554 = !DILocalVariable(name: "cmd", arg: 1, scope: !4743, file: !3, line: 1492, type: !7)
!11555 = !DILocation(line: 1492, column: 45, scope: !4743)
!11556 = !DILocalVariable(name: "argp", arg: 2, scope: !4743, file: !3, line: 1492, type: !112)
!11557 = !DILocation(line: 1492, column: 63, scope: !4743)
!11558 = !DILocalVariable(name: "ip", scope: !4743, file: !3, line: 1494, type: !114)
!11559 = !DILocation(line: 1494, column: 21, scope: !4743)
!11560 = !DILocalVariable(name: "port", scope: !4743, file: !3, line: 1495, type: !3897)
!11561 = !DILocation(line: 1495, column: 19, scope: !4743)
!11562 = !DILocalVariable(name: "tty", scope: !4743, file: !3, line: 1496, type: !213)
!11563 = !DILocation(line: 1496, column: 21, scope: !4743)
!11564 = !DILocalVariable(name: "result", scope: !4743, file: !3, line: 1497, type: !113)
!11565 = !DILocation(line: 1497, column: 6, scope: !4743)
!11566 = !DILocalVariable(name: "status", scope: !4743, file: !3, line: 1497, type: !113)
!11567 = !DILocation(line: 1497, column: 14, scope: !4743)
!11568 = !DILocalVariable(name: "i", scope: !4743, file: !3, line: 1498, type: !7)
!11569 = !DILocation(line: 1498, column: 15, scope: !4743)
!11570 = !DILocalVariable(name: "j", scope: !4743, file: !3, line: 1498, type: !7)
!11571 = !DILocation(line: 1498, column: 18, scope: !4743)
!11572 = !DILocalVariable(name: "ret", scope: !4743, file: !3, line: 1499, type: !113)
!11573 = !DILocation(line: 1499, column: 6, scope: !4743)
!11574 = !DILocation(line: 1501, column: 10, scope: !4743)
!11575 = !DILocation(line: 1501, column: 2, scope: !4743)
!11576 = !DILocation(line: 1503, column: 3, scope: !11550)
!11577 = !DILocation(line: 1503, column: 3, scope: !11551)
!11578 = !DILocation(line: 1506, column: 10, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1506, column: 10)
!11580 = !DILocalVariable(name: "__ret_pu", scope: !11581, file: !3, line: 1506, type: !113)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 1506, column: 10)
!11582 = !DILocation(line: 1506, column: 10, scope: !11581)
!11583 = !DILocalVariable(name: "__ptr_pu", scope: !11581, file: !3, line: 1506, type: !112)
!11584 = !DILocalVariable(name: "__val_pu", scope: !11581, file: !3, line: 1506, type: !113)
!11585 = !{i32 -2141444591}
!11586 = !DILocation(line: 1506, column: 10, scope: !11498)
!11587 = !DILocation(line: 1506, column: 3, scope: !11498)
!11588 = !DILocation(line: 1509, column: 10, scope: !11498)
!11589 = !DILocation(line: 1510, column: 10, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1510, column: 3)
!11591 = !DILocation(line: 1510, column: 8, scope: !11590)
!11592 = !DILocation(line: 1510, column: 15, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 1510, column: 3)
!11594 = !DILocation(line: 1510, column: 17, scope: !11593)
!11595 = !DILocation(line: 1510, column: 3, scope: !11590)
!11596 = !DILocation(line: 1511, column: 11, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 1511, column: 4)
!11598 = !DILocation(line: 1511, column: 9, scope: !11597)
!11599 = !DILocation(line: 1511, column: 16, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11597, file: !3, line: 1511, column: 4)
!11601 = !DILocation(line: 1511, column: 18, scope: !11600)
!11602 = !DILocation(line: 1511, column: 4, scope: !11597)
!11603 = !DILocation(line: 1512, column: 22, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11600, file: !3, line: 1512, column: 9)
!11605 = !DILocation(line: 1512, column: 9, scope: !11604)
!11606 = !DILocation(line: 1512, column: 25, scope: !11604)
!11607 = !DILocation(line: 1512, column: 31, scope: !11604)
!11608 = !DILocation(line: 1512, column: 34, scope: !11604)
!11609 = !DILocation(line: 1512, column: 9, scope: !11600)
!11610 = !DILocation(line: 1513, column: 22, scope: !11604)
!11611 = !DILocation(line: 1513, column: 19, scope: !11604)
!11612 = !DILocation(line: 1513, column: 13, scope: !11604)
!11613 = !DILocation(line: 1513, column: 6, scope: !11604)
!11614 = !DILocation(line: 1511, column: 44, scope: !11600)
!11615 = !DILocation(line: 1511, column: 4, scope: !11600)
!11616 = distinct !{!11616, !11602, !11617}
!11617 = !DILocation(line: 1513, column: 23, scope: !11597)
!11618 = !DILocation(line: 1510, column: 34, scope: !11593)
!11619 = !DILocation(line: 1510, column: 3, scope: !11593)
!11620 = distinct !{!11620, !11595, !11621}
!11621 = !DILocation(line: 1513, column: 23, scope: !11590)
!11622 = !DILocation(line: 1514, column: 10, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1514, column: 10)
!11624 = !DILocalVariable(name: "__ret_pu", scope: !11625, file: !3, line: 1514, type: !113)
!11625 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 1514, column: 10)
!11626 = !DILocation(line: 1514, column: 10, scope: !11625)
!11627 = !DILocalVariable(name: "__ptr_pu", scope: !11625, file: !3, line: 1514, type: !112)
!11628 = !DILocalVariable(name: "__val_pu", scope: !11625, file: !3, line: 1514, type: !145)
!11629 = !{i32 -2141443737}
!11630 = !DILocation(line: 1514, column: 10, scope: !11498)
!11631 = !DILocation(line: 1514, column: 3, scope: !11498)
!11632 = !DILocation(line: 1518, column: 20, scope: !11540)
!11633 = !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11539)
!11634 = !DILocation(line: 141, column: 6, scope: !9972, inlinedAt: !11538)
!11635 = !DILocation(line: 0, scope: !9972, inlinedAt: !11538)
!11636 = !DILocation(line: 141, column: 6, scope: !9525, inlinedAt: !11538)
!11637 = !DILocation(line: 142, column: 29, scope: !9976, inlinedAt: !11538)
!11638 = !DILocation(line: 142, column: 8, scope: !9976, inlinedAt: !11538)
!11639 = !DILocation(line: 142, column: 7, scope: !9977, inlinedAt: !11538)
!11640 = !DILocation(line: 143, column: 18, scope: !9976, inlinedAt: !11538)
!11641 = !DILocation(line: 143, column: 22, scope: !9976, inlinedAt: !11538)
!11642 = !DILocation(line: 143, column: 4, scope: !9976, inlinedAt: !11538)
!11643 = !DILocation(line: 144, column: 12, scope: !9984, inlinedAt: !11538)
!11644 = !DILocation(line: 144, column: 12, scope: !9976, inlinedAt: !11538)
!11645 = !DILocation(line: 145, column: 4, scope: !9984, inlinedAt: !11538)
!11646 = !DILocation(line: 147, column: 4, scope: !9984, inlinedAt: !11538)
!11647 = !DILocation(line: 148, column: 3, scope: !9977, inlinedAt: !11538)
!11648 = !DILocation(line: 150, column: 6, scope: !9990, inlinedAt: !11538)
!11649 = !DILocation(line: 150, column: 6, scope: !9992, inlinedAt: !11538)
!11650 = !DILocation(line: 150, column: 6, scope: !9996, inlinedAt: !11538)
!11651 = !DILocation(line: 150, column: 6, scope: !9993, inlinedAt: !11538)
!11652 = !DILocation(line: 150, column: 6, scope: !9548, inlinedAt: !11538)
!11653 = !DILocation(line: 150, column: 6, scope: !9525, inlinedAt: !11538)
!11654 = !DILocation(line: 151, column: 3, scope: !9548, inlinedAt: !11538)
!11655 = !DILocation(line: 152, column: 20, scope: !9525, inlinedAt: !11538)
!11656 = !DILocation(line: 152, column: 26, scope: !9525, inlinedAt: !11538)
!11657 = !DILocation(line: 152, column: 33, scope: !9525, inlinedAt: !11538)
!11658 = !DILocation(line: 152, column: 2, scope: !9525, inlinedAt: !11538)
!11659 = !DILocation(line: 153, column: 2, scope: !9525, inlinedAt: !11538)
!11660 = !DILocation(line: 154, column: 1, scope: !9525, inlinedAt: !11538)
!11661 = !DILocation(line: 199, column: 6, scope: !9533, inlinedAt: !11539)
!11662 = !DILocation(line: 200, column: 21, scope: !9531, inlinedAt: !11539)
!11663 = !DILocation(line: 200, column: 25, scope: !9531, inlinedAt: !11539)
!11664 = !DILocation(line: 200, column: 31, scope: !9531, inlinedAt: !11539)
!11665 = !DILocation(line: 200, column: 7, scope: !9531, inlinedAt: !11539)
!11666 = !DILocation(line: 200, column: 5, scope: !9531, inlinedAt: !11539)
!11667 = !DILocation(line: 200, column: 3, scope: !9531, inlinedAt: !11539)
!11668 = !DILocation(line: 201, column: 9, scope: !9533, inlinedAt: !11539)
!11669 = !DILocation(line: 1518, column: 7, scope: !11540)
!11670 = !DILocation(line: 1518, column: 7, scope: !11498)
!11671 = !DILocation(line: 1519, column: 8, scope: !11540)
!11672 = !DILocation(line: 1519, column: 4, scope: !11540)
!11673 = !DILocation(line: 1520, column: 10, scope: !11498)
!11674 = !DILocation(line: 1520, column: 3, scope: !11498)
!11675 = !DILocalVariable(name: "ms", scope: !11525, file: !3, line: 1522, type: !11676)
!11676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_mstatus", file: !3, line: 275, size: 160, elements: !11677)
!11677 = !{!11678, !11679, !11680, !11681, !11682}
!11678 = !DIDerivedType(tag: DW_TAG_member, name: "cflag", scope: !11676, file: !3, line: 276, baseType: !3874, size: 32)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "cts", scope: !11676, file: !3, line: 277, baseType: !113, size: 32, offset: 32)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "dsr", scope: !11676, file: !3, line: 278, baseType: !113, size: 32, offset: 64)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !11676, file: !3, line: 279, baseType: !113, size: 32, offset: 96)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "dcd", scope: !11676, file: !3, line: 280, baseType: !113, size: 32, offset: 128)
!11683 = !DILocation(line: 1522, column: 24, scope: !11525)
!11684 = !DILocalVariable(name: "msu", scope: !11525, file: !3, line: 1522, type: !11685)
!11685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11676, size: 64)
!11686 = !DILocation(line: 1522, column: 36, scope: !11525)
!11687 = !DILocation(line: 1522, column: 42, scope: !11525)
!11688 = !DILocation(line: 1523, column: 10, scope: !11524)
!11689 = !DILocation(line: 1523, column: 8, scope: !11524)
!11690 = !DILocation(line: 1523, column: 15, scope: !11523)
!11691 = !DILocation(line: 1523, column: 17, scope: !11523)
!11692 = !DILocation(line: 1523, column: 3, scope: !11524)
!11693 = !DILocation(line: 1524, column: 11, scope: !11522)
!11694 = !DILocation(line: 1524, column: 9, scope: !11522)
!11695 = !DILocation(line: 1524, column: 16, scope: !11521)
!11696 = !DILocation(line: 1524, column: 18, scope: !11521)
!11697 = !DILocation(line: 1524, column: 4, scope: !11522)
!11698 = !DILocation(line: 1525, column: 24, scope: !11520)
!11699 = !DILocation(line: 1525, column: 11, scope: !11520)
!11700 = !DILocation(line: 1525, column: 27, scope: !11520)
!11701 = !DILocation(line: 1525, column: 33, scope: !11520)
!11702 = !DILocation(line: 1525, column: 8, scope: !11520)
!11703 = !DILocation(line: 1526, column: 13, scope: !11520)
!11704 = !DILocation(line: 1526, column: 17, scope: !11520)
!11705 = !DILocation(line: 1526, column: 10, scope: !11520)
!11706 = !DILocation(line: 1527, column: 5, scope: !11520)
!11707 = !DILocation(line: 1529, column: 17, scope: !11520)
!11708 = !DILocation(line: 1529, column: 23, scope: !11520)
!11709 = !DILocation(line: 1529, column: 5, scope: !11520)
!11710 = !DILocation(line: 1530, column: 10, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1530, column: 9)
!11712 = !DILocation(line: 1530, column: 14, scope: !11711)
!11713 = !DILocation(line: 1530, column: 9, scope: !11520)
!11714 = !DILocation(line: 1531, column: 6, scope: !11711)
!11715 = !DILocation(line: 1533, column: 28, scope: !11520)
!11716 = !DILocation(line: 1533, column: 11, scope: !11520)
!11717 = !DILocation(line: 1533, column: 9, scope: !11520)
!11718 = !DILocation(line: 1535, column: 10, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1535, column: 9)
!11720 = !DILocation(line: 1535, column: 9, scope: !11520)
!11721 = !DILocation(line: 1536, column: 17, scope: !11719)
!11722 = !DILocation(line: 1536, column: 21, scope: !11719)
!11723 = !DILocation(line: 1536, column: 36, scope: !11719)
!11724 = !DILocation(line: 1536, column: 9, scope: !11719)
!11725 = !DILocation(line: 1536, column: 15, scope: !11719)
!11726 = !DILocation(line: 1536, column: 6, scope: !11719)
!11727 = !DILocation(line: 1538, column: 17, scope: !11719)
!11728 = !DILocation(line: 1538, column: 22, scope: !11719)
!11729 = !DILocation(line: 1538, column: 30, scope: !11719)
!11730 = !DILocation(line: 1538, column: 9, scope: !11719)
!11731 = !DILocation(line: 1538, column: 15, scope: !11719)
!11732 = !DILocation(line: 1539, column: 18, scope: !11520)
!11733 = !DILocation(line: 1539, column: 5, scope: !11520)
!11734 = !DILocation(line: 1540, column: 20, scope: !11520)
!11735 = !DILocation(line: 1540, column: 24, scope: !11520)
!11736 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !11536)
!11737 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !11536)
!11738 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !11536)
!11739 = !DILocation(line: 1541, column: 18, scope: !11520)
!11740 = !DILocation(line: 1541, column: 22, scope: !11520)
!11741 = !DILocation(line: 1541, column: 29, scope: !11520)
!11742 = !DILocation(line: 1541, column: 14, scope: !11520)
!11743 = !DILocation(line: 1541, column: 12, scope: !11520)
!11744 = !DILocation(line: 1542, column: 22, scope: !11520)
!11745 = !DILocation(line: 1542, column: 26, scope: !11520)
!11746 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !11534)
!11747 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !11534)
!11748 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !11534)
!11749 = !DILocation(line: 1543, column: 9, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1543, column: 9)
!11751 = !DILocation(line: 1543, column: 16, scope: !11750)
!11752 = !DILocation(line: 1543, column: 9, scope: !11520)
!11753 = !DILocation(line: 1544, column: 9, scope: !11750)
!11754 = !DILocation(line: 1544, column: 13, scope: !11750)
!11755 = !DILocation(line: 1544, column: 6, scope: !11750)
!11756 = !DILocation(line: 1545, column: 9, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1545, column: 9)
!11758 = !DILocation(line: 1545, column: 16, scope: !11757)
!11759 = !DILocation(line: 1545, column: 9, scope: !11520)
!11760 = !DILocation(line: 1546, column: 9, scope: !11757)
!11761 = !DILocation(line: 1546, column: 13, scope: !11757)
!11762 = !DILocation(line: 1546, column: 6, scope: !11757)
!11763 = !DILocation(line: 1547, column: 9, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 1547, column: 9)
!11765 = !DILocation(line: 1547, column: 16, scope: !11764)
!11766 = !DILocation(line: 1547, column: 9, scope: !11520)
!11767 = !DILocation(line: 1548, column: 9, scope: !11764)
!11768 = !DILocation(line: 1548, column: 13, scope: !11764)
!11769 = !DILocation(line: 1548, column: 6, scope: !11764)
!11770 = !DILocation(line: 1547, column: 18, scope: !11764)
!11771 = !DILabel(scope: !11520, name: "copy", file: !3, line: 1549)
!11772 = !DILocation(line: 1549, column: 4, scope: !11520)
!11773 = !DILocation(line: 1550, column: 19, scope: !11520)
!11774 = !DILocation(line: 1550, column: 25, scope: !11520)
!11775 = !DILocation(line: 1550, column: 5, scope: !11520)
!11776 = !DILocation(line: 1551, column: 22, scope: !11519)
!11777 = !DILocation(line: 1551, column: 27, scope: !11519)
!11778 = !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11518)
!11779 = !DILocation(line: 141, column: 6, scope: !9972, inlinedAt: !11517)
!11780 = !DILocation(line: 0, scope: !9972, inlinedAt: !11517)
!11781 = !DILocation(line: 141, column: 6, scope: !9525, inlinedAt: !11517)
!11782 = !DILocation(line: 142, column: 29, scope: !9976, inlinedAt: !11517)
!11783 = !DILocation(line: 142, column: 8, scope: !9976, inlinedAt: !11517)
!11784 = !DILocation(line: 142, column: 7, scope: !9977, inlinedAt: !11517)
!11785 = !DILocation(line: 143, column: 18, scope: !9976, inlinedAt: !11517)
!11786 = !DILocation(line: 143, column: 22, scope: !9976, inlinedAt: !11517)
!11787 = !DILocation(line: 143, column: 4, scope: !9976, inlinedAt: !11517)
!11788 = !DILocation(line: 144, column: 12, scope: !9984, inlinedAt: !11517)
!11789 = !DILocation(line: 144, column: 12, scope: !9976, inlinedAt: !11517)
!11790 = !DILocation(line: 145, column: 4, scope: !9984, inlinedAt: !11517)
!11791 = !DILocation(line: 147, column: 4, scope: !9984, inlinedAt: !11517)
!11792 = !DILocation(line: 148, column: 3, scope: !9977, inlinedAt: !11517)
!11793 = !DILocation(line: 150, column: 6, scope: !9990, inlinedAt: !11517)
!11794 = !DILocation(line: 150, column: 6, scope: !9992, inlinedAt: !11517)
!11795 = !DILocation(line: 150, column: 6, scope: !9996, inlinedAt: !11517)
!11796 = !DILocation(line: 150, column: 6, scope: !9993, inlinedAt: !11517)
!11797 = !DILocation(line: 150, column: 6, scope: !9548, inlinedAt: !11517)
!11798 = !DILocation(line: 150, column: 6, scope: !9525, inlinedAt: !11517)
!11799 = !DILocation(line: 151, column: 3, scope: !9548, inlinedAt: !11517)
!11800 = !DILocation(line: 152, column: 20, scope: !9525, inlinedAt: !11517)
!11801 = !DILocation(line: 152, column: 26, scope: !9525, inlinedAt: !11517)
!11802 = !DILocation(line: 152, column: 33, scope: !9525, inlinedAt: !11517)
!11803 = !DILocation(line: 152, column: 2, scope: !9525, inlinedAt: !11517)
!11804 = !DILocation(line: 153, column: 2, scope: !9525, inlinedAt: !11517)
!11805 = !DILocation(line: 154, column: 1, scope: !9525, inlinedAt: !11517)
!11806 = !DILocation(line: 199, column: 6, scope: !9533, inlinedAt: !11518)
!11807 = !DILocation(line: 200, column: 21, scope: !9531, inlinedAt: !11518)
!11808 = !DILocation(line: 200, column: 25, scope: !9531, inlinedAt: !11518)
!11809 = !DILocation(line: 200, column: 31, scope: !9531, inlinedAt: !11518)
!11810 = !DILocation(line: 200, column: 7, scope: !9531, inlinedAt: !11518)
!11811 = !DILocation(line: 200, column: 5, scope: !9531, inlinedAt: !11518)
!11812 = !DILocation(line: 200, column: 3, scope: !9531, inlinedAt: !11518)
!11813 = !DILocation(line: 201, column: 9, scope: !9533, inlinedAt: !11518)
!11814 = !DILocation(line: 1551, column: 9, scope: !11519)
!11815 = !DILocation(line: 1551, column: 9, scope: !11520)
!11816 = !DILocation(line: 1552, column: 6, scope: !11519)
!11817 = !DILocation(line: 1553, column: 8, scope: !11520)
!11818 = !DILocation(line: 1554, column: 4, scope: !11520)
!11819 = !DILocation(line: 1524, column: 44, scope: !11521)
!11820 = !DILocation(line: 1524, column: 4, scope: !11521)
!11821 = distinct !{!11821, !11697, !11822}
!11822 = !DILocation(line: 1554, column: 4, scope: !11522)
!11823 = !DILocation(line: 1523, column: 34, scope: !11523)
!11824 = !DILocation(line: 1523, column: 3, scope: !11523)
!11825 = distinct !{!11825, !11692, !11826}
!11826 = !DILocation(line: 1554, column: 4, scope: !11524)
!11827 = !DILocation(line: 1555, column: 3, scope: !11525)
!11828 = !DILocalVariable(name: "me", scope: !11497, file: !3, line: 1558, type: !11829)
!11829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11830, size: 64)
!11830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mxser_mon_ext", file: !3, line: 202, size: 17408, elements: !11831)
!11831 = !{!11832, !11833, !11834, !11835, !11836, !11838, !11840, !11841, !11842, !11843, !11844, !11845}
!11832 = !DIDerivedType(tag: DW_TAG_member, name: "rx_cnt", scope: !11830, file: !3, line: 203, baseType: !4733, size: 2048)
!11833 = !DIDerivedType(tag: DW_TAG_member, name: "tx_cnt", scope: !11830, file: !3, line: 204, baseType: !4733, size: 2048, offset: 2048)
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "up_rxcnt", scope: !11830, file: !3, line: 205, baseType: !4733, size: 2048, offset: 4096)
!11835 = !DIDerivedType(tag: DW_TAG_member, name: "up_txcnt", scope: !11830, file: !3, line: 206, baseType: !4733, size: 2048, offset: 6144)
!11836 = !DIDerivedType(tag: DW_TAG_member, name: "modem_status", scope: !11830, file: !3, line: 207, baseType: !11837, size: 1024, offset: 8192)
!11837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1024, elements: !2281)
!11838 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11830, file: !3, line: 209, baseType: !11839, size: 2048, offset: 9216)
!11839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 2048, elements: !2281)
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "databits", scope: !11830, file: !3, line: 210, baseType: !11837, size: 1024, offset: 11264)
!11841 = !DIDerivedType(tag: DW_TAG_member, name: "stopbits", scope: !11830, file: !3, line: 211, baseType: !11837, size: 1024, offset: 12288)
!11842 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11830, file: !3, line: 212, baseType: !11837, size: 1024, offset: 13312)
!11843 = !DIDerivedType(tag: DW_TAG_member, name: "flowctrl", scope: !11830, file: !3, line: 213, baseType: !11837, size: 1024, offset: 14336)
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "fifo", scope: !11830, file: !3, line: 214, baseType: !11837, size: 1024, offset: 15360)
!11845 = !DIDerivedType(tag: DW_TAG_member, name: "iftype", scope: !11830, file: !3, line: 215, baseType: !11837, size: 1024, offset: 16384)
!11846 = !DILocation(line: 1558, column: 25, scope: !11497)
!11847 = !DILocalVariable(name: "cflag", scope: !11497, file: !3, line: 1559, type: !7)
!11848 = !DILocation(line: 1559, column: 16, scope: !11497)
!11849 = !DILocalVariable(name: "iflag", scope: !11497, file: !3, line: 1559, type: !7)
!11850 = !DILocation(line: 1559, column: 23, scope: !11497)
!11851 = !DILocalVariable(name: "p", scope: !11497, file: !3, line: 1559, type: !7)
!11852 = !DILocation(line: 1559, column: 30, scope: !11497)
!11853 = !DILocalVariable(name: "opmode", scope: !11497, file: !3, line: 1560, type: !1361)
!11854 = !DILocation(line: 1560, column: 6, scope: !11497)
!11855 = !DILocation(line: 1562, column: 8, scope: !11497)
!11856 = !DILocation(line: 1562, column: 6, scope: !11497)
!11857 = !DILocation(line: 1563, column: 8, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 1563, column: 7)
!11859 = !DILocation(line: 1563, column: 7, scope: !11497)
!11860 = !DILocation(line: 1564, column: 4, scope: !11858)
!11861 = !DILocation(line: 1566, column: 10, scope: !11513)
!11862 = !DILocation(line: 1566, column: 17, scope: !11513)
!11863 = !DILocation(line: 1566, column: 8, scope: !11513)
!11864 = !DILocation(line: 1566, column: 22, scope: !11512)
!11865 = !DILocation(line: 1566, column: 24, scope: !11512)
!11866 = !DILocation(line: 1566, column: 3, scope: !11513)
!11867 = !DILocation(line: 1567, column: 11, scope: !11510)
!11868 = !DILocation(line: 1567, column: 9, scope: !11510)
!11869 = !DILocation(line: 1567, column: 16, scope: !11509)
!11870 = !DILocation(line: 1567, column: 18, scope: !11509)
!11871 = !DILocation(line: 1567, column: 4, scope: !11510)
!11872 = !DILocation(line: 1568, column: 9, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1568, column: 9)
!11874 = !DILocation(line: 1568, column: 11, scope: !11873)
!11875 = !DILocation(line: 1568, column: 9, scope: !11508)
!11876 = !DILocation(line: 1569, column: 8, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 1568, column: 38)
!11878 = !DILocation(line: 1570, column: 6, scope: !11877)
!11879 = !DILocation(line: 1572, column: 24, scope: !11508)
!11880 = !DILocation(line: 1572, column: 11, scope: !11508)
!11881 = !DILocation(line: 1572, column: 27, scope: !11508)
!11882 = !DILocation(line: 1572, column: 33, scope: !11508)
!11883 = !DILocation(line: 1572, column: 8, scope: !11508)
!11884 = !DILocation(line: 1573, column: 13, scope: !11508)
!11885 = !DILocation(line: 1573, column: 17, scope: !11508)
!11886 = !DILocation(line: 1573, column: 10, scope: !11508)
!11887 = !DILocation(line: 1575, column: 17, scope: !11508)
!11888 = !DILocation(line: 1575, column: 23, scope: !11508)
!11889 = !DILocation(line: 1575, column: 5, scope: !11508)
!11890 = !DILocation(line: 1576, column: 10, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1576, column: 9)
!11892 = !DILocation(line: 1576, column: 14, scope: !11891)
!11893 = !DILocation(line: 1576, column: 9, scope: !11508)
!11894 = !DILocation(line: 1577, column: 20, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 1576, column: 22)
!11896 = !DILocation(line: 1577, column: 26, scope: !11895)
!11897 = !DILocation(line: 1577, column: 6, scope: !11895)
!11898 = !DILocation(line: 1578, column: 6, scope: !11895)
!11899 = !DILocation(line: 1581, column: 20, scope: !11508)
!11900 = !DILocation(line: 1581, column: 24, scope: !11508)
!11901 = !DILocation(line: 379, column: 2, scope: !9687, inlinedAt: !11515)
!11902 = !DILocation(line: 379, column: 2, scope: !9690, inlinedAt: !11515)
!11903 = !DILocation(line: 379, column: 2, scope: !9693, inlinedAt: !11515)
!11904 = !DILocation(line: 1582, column: 28, scope: !11508)
!11905 = !DILocation(line: 1582, column: 32, scope: !11508)
!11906 = !DILocation(line: 1582, column: 43, scope: !11508)
!11907 = !DILocation(line: 1582, column: 14, scope: !11508)
!11908 = !DILocation(line: 1582, column: 12, scope: !11508)
!11909 = !DILocation(line: 1584, column: 9, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1584, column: 9)
!11911 = !DILocation(line: 1584, column: 16, scope: !11910)
!11912 = !DILocation(line: 1584, column: 9, scope: !11508)
!11913 = !DILocation(line: 1585, column: 6, scope: !11910)
!11914 = !DILocation(line: 1585, column: 10, scope: !11910)
!11915 = !DILocation(line: 1585, column: 17, scope: !11910)
!11916 = !DILocation(line: 1585, column: 20, scope: !11910)
!11917 = !DILocation(line: 1586, column: 9, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1586, column: 9)
!11919 = !DILocation(line: 1586, column: 16, scope: !11918)
!11920 = !DILocation(line: 1586, column: 9, scope: !11508)
!11921 = !DILocation(line: 1587, column: 6, scope: !11918)
!11922 = !DILocation(line: 1587, column: 10, scope: !11918)
!11923 = !DILocation(line: 1587, column: 17, scope: !11918)
!11924 = !DILocation(line: 1587, column: 20, scope: !11918)
!11925 = !DILocation(line: 1588, column: 9, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1588, column: 9)
!11927 = !DILocation(line: 1588, column: 16, scope: !11926)
!11928 = !DILocation(line: 1588, column: 9, scope: !11508)
!11929 = !DILocation(line: 1589, column: 6, scope: !11926)
!11930 = !DILocation(line: 1589, column: 10, scope: !11926)
!11931 = !DILocation(line: 1589, column: 17, scope: !11926)
!11932 = !DILocation(line: 1589, column: 20, scope: !11926)
!11933 = !DILocation(line: 1590, column: 9, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1590, column: 9)
!11935 = !DILocation(line: 1590, column: 16, scope: !11934)
!11936 = !DILocation(line: 1590, column: 9, scope: !11508)
!11937 = !DILocation(line: 1591, column: 6, scope: !11934)
!11938 = !DILocation(line: 1591, column: 10, scope: !11934)
!11939 = !DILocation(line: 1591, column: 17, scope: !11934)
!11940 = !DILocation(line: 1591, column: 20, scope: !11934)
!11941 = !DILocation(line: 1593, column: 33, scope: !11508)
!11942 = !DILocation(line: 1593, column: 5, scope: !11508)
!11943 = !DILocation(line: 1593, column: 9, scope: !11508)
!11944 = !DILocation(line: 1593, column: 18, scope: !11508)
!11945 = !DILocation(line: 1593, column: 31, scope: !11508)
!11946 = !DILocation(line: 1594, column: 21, scope: !11508)
!11947 = !DILocation(line: 1594, column: 25, scope: !11508)
!11948 = !DILocation(line: 1594, column: 34, scope: !11508)
!11949 = !DILocation(line: 1594, column: 5, scope: !11508)
!11950 = !DILocation(line: 1594, column: 9, scope: !11508)
!11951 = !DILocation(line: 1594, column: 16, scope: !11508)
!11952 = !DILocation(line: 1594, column: 19, scope: !11508)
!11953 = !DILocation(line: 1595, column: 21, scope: !11508)
!11954 = !DILocation(line: 1595, column: 25, scope: !11508)
!11955 = !DILocation(line: 1595, column: 34, scope: !11508)
!11956 = !DILocation(line: 1595, column: 5, scope: !11508)
!11957 = !DILocation(line: 1595, column: 9, scope: !11508)
!11958 = !DILocation(line: 1595, column: 16, scope: !11508)
!11959 = !DILocation(line: 1595, column: 19, scope: !11508)
!11960 = !DILocation(line: 1596, column: 23, scope: !11508)
!11961 = !DILocation(line: 1596, column: 27, scope: !11508)
!11962 = !DILocation(line: 1596, column: 36, scope: !11508)
!11963 = !DILocation(line: 1596, column: 5, scope: !11508)
!11964 = !DILocation(line: 1596, column: 9, scope: !11508)
!11965 = !DILocation(line: 1596, column: 18, scope: !11508)
!11966 = !DILocation(line: 1596, column: 21, scope: !11508)
!11967 = !DILocation(line: 1597, column: 23, scope: !11508)
!11968 = !DILocation(line: 1597, column: 27, scope: !11508)
!11969 = !DILocation(line: 1597, column: 36, scope: !11508)
!11970 = !DILocation(line: 1597, column: 5, scope: !11508)
!11971 = !DILocation(line: 1597, column: 9, scope: !11508)
!11972 = !DILocation(line: 1597, column: 18, scope: !11508)
!11973 = !DILocation(line: 1597, column: 21, scope: !11508)
!11974 = !DILocation(line: 1599, column: 6, scope: !11508)
!11975 = !DILocation(line: 1599, column: 10, scope: !11508)
!11976 = !DILocation(line: 1599, column: 19, scope: !11508)
!11977 = !DILocation(line: 1598, column: 5, scope: !11508)
!11978 = !DILocation(line: 1598, column: 9, scope: !11508)
!11979 = !DILocation(line: 1598, column: 22, scope: !11508)
!11980 = !DILocation(line: 1598, column: 25, scope: !11508)
!11981 = !DILocation(line: 1600, column: 22, scope: !11508)
!11982 = !DILocation(line: 1600, column: 26, scope: !11508)
!11983 = !DILocation(line: 404, column: 2, scope: !9711, inlinedAt: !11507)
!11984 = !DILocation(line: 404, column: 2, scope: !9714, inlinedAt: !11507)
!11985 = !DILocation(line: 404, column: 2, scope: !9717, inlinedAt: !11507)
!11986 = !DILocation(line: 1602, column: 29, scope: !11508)
!11987 = !DILocation(line: 1602, column: 33, scope: !11508)
!11988 = !DILocation(line: 1602, column: 11, scope: !11508)
!11989 = !DILocation(line: 1602, column: 9, scope: !11508)
!11990 = !DILocation(line: 1604, column: 10, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1604, column: 9)
!11992 = !DILocation(line: 1604, column: 9, scope: !11508)
!11993 = !DILocation(line: 1605, column: 14, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 1604, column: 15)
!11995 = !DILocation(line: 1605, column: 18, scope: !11994)
!11996 = !DILocation(line: 1605, column: 33, scope: !11994)
!11997 = !DILocation(line: 1605, column: 12, scope: !11994)
!11998 = !DILocation(line: 1606, column: 14, scope: !11994)
!11999 = !DILocation(line: 1606, column: 18, scope: !11994)
!12000 = !DILocation(line: 1606, column: 33, scope: !11994)
!12001 = !DILocation(line: 1606, column: 12, scope: !11994)
!12002 = !DILocation(line: 1607, column: 47, scope: !11994)
!12003 = !DILocation(line: 1607, column: 51, scope: !11994)
!12004 = !DILocation(line: 1607, column: 24, scope: !11994)
!12005 = !DILocation(line: 1607, column: 6, scope: !11994)
!12006 = !DILocation(line: 1607, column: 10, scope: !11994)
!12007 = !DILocation(line: 1607, column: 19, scope: !11994)
!12008 = !DILocation(line: 1607, column: 22, scope: !11994)
!12009 = !DILocation(line: 1608, column: 5, scope: !11994)
!12010 = !DILocation(line: 1609, column: 14, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 1608, column: 12)
!12012 = !DILocation(line: 1609, column: 19, scope: !12011)
!12013 = !DILocation(line: 1609, column: 27, scope: !12011)
!12014 = !DILocation(line: 1609, column: 12, scope: !12011)
!12015 = !DILocation(line: 1610, column: 14, scope: !12011)
!12016 = !DILocation(line: 1610, column: 19, scope: !12011)
!12017 = !DILocation(line: 1610, column: 27, scope: !12011)
!12018 = !DILocation(line: 1610, column: 12, scope: !12011)
!12019 = !DILocation(line: 1611, column: 42, scope: !12011)
!12020 = !DILocation(line: 1611, column: 24, scope: !12011)
!12021 = !DILocation(line: 1611, column: 6, scope: !12011)
!12022 = !DILocation(line: 1611, column: 10, scope: !12011)
!12023 = !DILocation(line: 1611, column: 19, scope: !12011)
!12024 = !DILocation(line: 1611, column: 22, scope: !12011)
!12025 = !DILocation(line: 1613, column: 18, scope: !11508)
!12026 = !DILocation(line: 1613, column: 5, scope: !11508)
!12027 = !DILocation(line: 1615, column: 23, scope: !11508)
!12028 = !DILocation(line: 1615, column: 29, scope: !11508)
!12029 = !DILocation(line: 1615, column: 5, scope: !11508)
!12030 = !DILocation(line: 1615, column: 9, scope: !11508)
!12031 = !DILocation(line: 1615, column: 18, scope: !11508)
!12032 = !DILocation(line: 1615, column: 21, scope: !11508)
!12033 = !DILocation(line: 1616, column: 23, scope: !11508)
!12034 = !DILocation(line: 1616, column: 29, scope: !11508)
!12035 = !DILocation(line: 1616, column: 5, scope: !11508)
!12036 = !DILocation(line: 1616, column: 9, scope: !11508)
!12037 = !DILocation(line: 1616, column: 18, scope: !11508)
!12038 = !DILocation(line: 1616, column: 21, scope: !11508)
!12039 = !DILocation(line: 1617, column: 21, scope: !11508)
!12040 = !DILocation(line: 1617, column: 27, scope: !11508)
!12041 = !DILocation(line: 1617, column: 5, scope: !11508)
!12042 = !DILocation(line: 1617, column: 9, scope: !11508)
!12043 = !DILocation(line: 1617, column: 16, scope: !11508)
!12044 = !DILocation(line: 1617, column: 19, scope: !11508)
!12045 = !DILocation(line: 1620, column: 9, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1620, column: 9)
!12047 = !DILocation(line: 1620, column: 15, scope: !12046)
!12048 = !DILocation(line: 1620, column: 9, scope: !11508)
!12049 = !DILocation(line: 1621, column: 6, scope: !12046)
!12050 = !DILocation(line: 1621, column: 10, scope: !12046)
!12051 = !DILocation(line: 1621, column: 19, scope: !12046)
!12052 = !DILocation(line: 1621, column: 22, scope: !12046)
!12053 = !DILocation(line: 1623, column: 9, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1623, column: 9)
!12055 = !DILocation(line: 1623, column: 15, scope: !12054)
!12056 = !DILocation(line: 1623, column: 9, scope: !11508)
!12057 = !DILocation(line: 1624, column: 6, scope: !12054)
!12058 = !DILocation(line: 1624, column: 10, scope: !12054)
!12059 = !DILocation(line: 1624, column: 19, scope: !12054)
!12060 = !DILocation(line: 1624, column: 22, scope: !12054)
!12061 = !DILocation(line: 1626, column: 9, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1626, column: 9)
!12063 = !DILocation(line: 1626, column: 13, scope: !12062)
!12064 = !DILocation(line: 1626, column: 18, scope: !12062)
!12065 = !DILocation(line: 1626, column: 9, scope: !11508)
!12066 = !DILocation(line: 1627, column: 6, scope: !12062)
!12067 = !DILocation(line: 1627, column: 10, scope: !12062)
!12068 = !DILocation(line: 1627, column: 15, scope: !12062)
!12069 = !DILocation(line: 1627, column: 18, scope: !12062)
!12070 = !DILocation(line: 1629, column: 9, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1629, column: 9)
!12072 = !DILocation(line: 1629, column: 13, scope: !12071)
!12073 = !DILocation(line: 1629, column: 20, scope: !12071)
!12074 = !DILocation(line: 1629, column: 30, scope: !12071)
!12075 = !DILocation(line: 1629, column: 9, scope: !11508)
!12076 = !DILocation(line: 1630, column: 19, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 1629, column: 55)
!12078 = !DILocation(line: 1630, column: 23, scope: !12077)
!12079 = !DILocation(line: 1630, column: 15, scope: !12077)
!12080 = !DILocation(line: 1630, column: 41, scope: !12077)
!12081 = !DILocation(line: 1630, column: 43, scope: !12077)
!12082 = !DILocation(line: 1630, column: 48, scope: !12077)
!12083 = !DILocation(line: 1630, column: 37, scope: !12077)
!12084 = !DILocation(line: 1630, column: 13, scope: !12077)
!12085 = !DILocation(line: 1631, column: 13, scope: !12077)
!12086 = !DILocation(line: 1632, column: 5, scope: !12077)
!12087 = !DILocation(line: 1633, column: 13, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 1632, column: 12)
!12089 = !DILocation(line: 1635, column: 21, scope: !11508)
!12090 = !DILocation(line: 1635, column: 5, scope: !11508)
!12091 = !DILocation(line: 1635, column: 9, scope: !11508)
!12092 = !DILocation(line: 1635, column: 16, scope: !11508)
!12093 = !DILocation(line: 1635, column: 19, scope: !11508)
!12094 = !DILocation(line: 1636, column: 19, scope: !11508)
!12095 = !DILocation(line: 1636, column: 25, scope: !11508)
!12096 = !DILocation(line: 1636, column: 5, scope: !11508)
!12097 = !DILocation(line: 1637, column: 4, scope: !11508)
!12098 = !DILocation(line: 1567, column: 44, scope: !11509)
!12099 = !DILocation(line: 1567, column: 49, scope: !11509)
!12100 = !DILocation(line: 1567, column: 4, scope: !11509)
!12101 = distinct !{!12101, !11871, !12102}
!12102 = !DILocation(line: 1637, column: 4, scope: !11510)
!12103 = !DILocation(line: 1638, column: 3, scope: !11511)
!12104 = !DILocation(line: 1566, column: 41, scope: !11512)
!12105 = !DILocation(line: 1566, column: 3, scope: !11512)
!12106 = distinct !{!12106, !11866, !12107}
!12107 = !DILocation(line: 1638, column: 3, scope: !11513)
!12108 = !DILocation(line: 1639, column: 20, scope: !11496)
!12109 = !DILocation(line: 1639, column: 26, scope: !11496)
!12110 = !DILocation(line: 199, column: 6, scope: !9531, inlinedAt: !11495)
!12111 = !DILocation(line: 141, column: 6, scope: !9972, inlinedAt: !11494)
!12112 = !DILocation(line: 0, scope: !9972, inlinedAt: !11494)
!12113 = !DILocation(line: 141, column: 6, scope: !9525, inlinedAt: !11494)
!12114 = !DILocation(line: 142, column: 29, scope: !9976, inlinedAt: !11494)
!12115 = !DILocation(line: 142, column: 8, scope: !9976, inlinedAt: !11494)
!12116 = !DILocation(line: 142, column: 7, scope: !9977, inlinedAt: !11494)
!12117 = !DILocation(line: 143, column: 18, scope: !9976, inlinedAt: !11494)
!12118 = !DILocation(line: 143, column: 22, scope: !9976, inlinedAt: !11494)
!12119 = !DILocation(line: 143, column: 4, scope: !9976, inlinedAt: !11494)
!12120 = !DILocation(line: 144, column: 12, scope: !9984, inlinedAt: !11494)
!12121 = !DILocation(line: 144, column: 12, scope: !9976, inlinedAt: !11494)
!12122 = !DILocation(line: 145, column: 4, scope: !9984, inlinedAt: !11494)
!12123 = !DILocation(line: 147, column: 4, scope: !9984, inlinedAt: !11494)
!12124 = !DILocation(line: 148, column: 3, scope: !9977, inlinedAt: !11494)
!12125 = !DILocation(line: 150, column: 6, scope: !9990, inlinedAt: !11494)
!12126 = !DILocation(line: 150, column: 6, scope: !9992, inlinedAt: !11494)
!12127 = !DILocation(line: 150, column: 6, scope: !9996, inlinedAt: !11494)
!12128 = !DILocation(line: 150, column: 6, scope: !9993, inlinedAt: !11494)
!12129 = !DILocation(line: 150, column: 6, scope: !9548, inlinedAt: !11494)
!12130 = !DILocation(line: 150, column: 6, scope: !9525, inlinedAt: !11494)
!12131 = !DILocation(line: 151, column: 3, scope: !9548, inlinedAt: !11494)
!12132 = !DILocation(line: 152, column: 20, scope: !9525, inlinedAt: !11494)
!12133 = !DILocation(line: 152, column: 26, scope: !9525, inlinedAt: !11494)
!12134 = !DILocation(line: 152, column: 33, scope: !9525, inlinedAt: !11494)
!12135 = !DILocation(line: 152, column: 2, scope: !9525, inlinedAt: !11494)
!12136 = !DILocation(line: 153, column: 2, scope: !9525, inlinedAt: !11494)
!12137 = !DILocation(line: 154, column: 1, scope: !9525, inlinedAt: !11494)
!12138 = !DILocation(line: 199, column: 6, scope: !9533, inlinedAt: !11495)
!12139 = !DILocation(line: 200, column: 21, scope: !9531, inlinedAt: !11495)
!12140 = !DILocation(line: 200, column: 25, scope: !9531, inlinedAt: !11495)
!12141 = !DILocation(line: 200, column: 31, scope: !9531, inlinedAt: !11495)
!12142 = !DILocation(line: 200, column: 7, scope: !9531, inlinedAt: !11495)
!12143 = !DILocation(line: 200, column: 5, scope: !9531, inlinedAt: !11495)
!12144 = !DILocation(line: 200, column: 3, scope: !9531, inlinedAt: !11495)
!12145 = !DILocation(line: 201, column: 9, scope: !9533, inlinedAt: !11495)
!12146 = !DILocation(line: 1639, column: 7, scope: !11496)
!12147 = !DILocation(line: 1639, column: 7, scope: !11497)
!12148 = !DILocation(line: 1640, column: 8, scope: !11496)
!12149 = !DILocation(line: 1640, column: 4, scope: !11496)
!12150 = !DILocation(line: 1641, column: 9, scope: !11497)
!12151 = !DILocation(line: 1641, column: 3, scope: !11497)
!12152 = !DILocation(line: 1642, column: 10, scope: !11497)
!12153 = !DILocation(line: 1642, column: 3, scope: !11497)
!12154 = !DILocation(line: 1645, column: 3, scope: !11498)
!12155 = !DILocation(line: 1648, column: 1, scope: !4743)
!12156 = distinct !DISubprogram(name: "might_fault", scope: !12157, file: !12157, line: 315, type: !1940, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12157 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!12158 = !DILocation(line: 315, column: 40, scope: !12156)
!12159 = distinct !DISubprogram(name: "tty_io_error", scope: !119, file: !119, line: 399, type: !12160, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{!482, !213}
!12162 = !DILocalVariable(name: "tty", arg: 1, scope: !12159, file: !119, line: 399, type: !213)
!12163 = !DILocation(line: 399, column: 52, scope: !12159)
!12164 = !DILocation(line: 401, column: 33, scope: !12159)
!12165 = !DILocation(line: 401, column: 38, scope: !12159)
!12166 = !DILocation(line: 401, column: 9, scope: !12159)
!12167 = !DILocation(line: 401, column: 2, scope: !12159)
!12168 = distinct !DISubprogram(name: "mxser_get_lsr_info", scope: !3, file: !3, line: 1319, type: !12169, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{!113, !114, !2731}
!12171 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !12172)
!12172 = distinct !DILocation(line: 1328, column: 2, scope: !12168)
!12173 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !12172)
!12174 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !12175)
!12175 = distinct !DILocation(line: 1326, column: 2, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 1326, column: 2)
!12177 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 1326, column: 2)
!12178 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 1326, column: 2)
!12179 = distinct !DILexicalBlock(scope: !12180, file: !3, line: 1326, column: 2)
!12180 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 1326, column: 2)
!12181 = !DILocalVariable(name: "info", arg: 1, scope: !12168, file: !3, line: 1319, type: !114)
!12182 = !DILocation(line: 1319, column: 50, scope: !12168)
!12183 = !DILocalVariable(name: "value", arg: 2, scope: !12168, file: !3, line: 1320, type: !2731)
!12184 = !DILocation(line: 1320, column: 24, scope: !12168)
!12185 = !DILocalVariable(name: "status", scope: !12168, file: !3, line: 1322, type: !419)
!12186 = !DILocation(line: 1322, column: 16, scope: !12168)
!12187 = !DILocalVariable(name: "result", scope: !12168, file: !3, line: 1323, type: !7)
!12188 = !DILocation(line: 1323, column: 15, scope: !12168)
!12189 = !DILocalVariable(name: "flags", scope: !12168, file: !3, line: 1324, type: !145)
!12190 = !DILocation(line: 1324, column: 16, scope: !12168)
!12191 = !DILocation(line: 1326, column: 2, scope: !12168)
!12192 = !DILocation(line: 1326, column: 2, scope: !12180)
!12193 = !DILocalVariable(name: "__dummy", scope: !12194, file: !3, line: 1326, type: !145)
!12194 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 1326, column: 2)
!12195 = !DILocation(line: 1326, column: 2, scope: !12194)
!12196 = !DILocalVariable(name: "__dummy2", scope: !12194, file: !3, line: 1326, type: !145)
!12197 = !DILocation(line: 1326, column: 2, scope: !12179)
!12198 = !DILocation(line: 1326, column: 2, scope: !12178)
!12199 = !DILocation(line: 1326, column: 2, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12178, file: !3, line: 1326, column: 2)
!12201 = !DILocalVariable(name: "__dummy", scope: !12202, file: !3, line: 1326, type: !145)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !3, line: 1326, column: 2)
!12203 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1326, column: 2)
!12204 = !DILocation(line: 1326, column: 2, scope: !12202)
!12205 = !DILocalVariable(name: "__dummy2", scope: !12202, file: !3, line: 1326, type: !145)
!12206 = !DILocation(line: 1326, column: 2, scope: !12203)
!12207 = !DILocation(line: 1326, column: 2, scope: !12177)
!12208 = !{i32 -2141449616}
!12209 = !DILocation(line: 1326, column: 2, scope: !12176)
!12210 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !12175)
!12211 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !12175)
!12212 = !DILocation(line: 1327, column: 15, scope: !12168)
!12213 = !DILocation(line: 1327, column: 21, scope: !12168)
!12214 = !DILocation(line: 1327, column: 28, scope: !12168)
!12215 = !DILocation(line: 1327, column: 11, scope: !12168)
!12216 = !DILocation(line: 1327, column: 9, scope: !12168)
!12217 = !DILocation(line: 1328, column: 26, scope: !12168)
!12218 = !DILocation(line: 1328, column: 32, scope: !12168)
!12219 = !DILocation(line: 1328, column: 39, scope: !12168)
!12220 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !12172)
!12221 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !12172)
!12222 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !12172)
!12223 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !12172)
!12224 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !12172)
!12225 = !DILocation(line: 1329, column: 13, scope: !12168)
!12226 = !DILocation(line: 1329, column: 20, scope: !12168)
!12227 = !DILocation(line: 1329, column: 12, scope: !12168)
!12228 = !DILocation(line: 1329, column: 9, scope: !12168)
!12229 = !DILocation(line: 1330, column: 9, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 1330, column: 9)
!12231 = !DILocalVariable(name: "__ret_pu", scope: !12232, file: !3, line: 1330, type: !113)
!12232 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 1330, column: 9)
!12233 = !DILocation(line: 1330, column: 9, scope: !12232)
!12234 = !DILocalVariable(name: "__ptr_pu", scope: !12232, file: !3, line: 1330, type: !112)
!12235 = !DILocalVariable(name: "__val_pu", scope: !12232, file: !3, line: 1330, type: !7)
!12236 = !{i32 -2141449176}
!12237 = !DILocation(line: 1330, column: 9, scope: !12168)
!12238 = !DILocation(line: 1330, column: 2, scope: !12168)
!12239 = distinct !DISubprogram(name: "mxser_cflags_changed", scope: !3, file: !3, line: 1650, type: !12240, scopeLine: 1652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12240 = !DISubroutineType(types: !12241)
!12241 = !{!113, !114, !145, !12242}
!12242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!12243 = !DILocation(line: 407, column: 64, scope: !6303, inlinedAt: !12244)
!12244 = distinct !DILocation(line: 1659, column: 2, scope: !12239)
!12245 = !DILocation(line: 407, column: 84, scope: !6303, inlinedAt: !12244)
!12246 = !DILocation(line: 327, column: 67, scope: !5558, inlinedAt: !12247)
!12247 = distinct !DILocation(line: 1657, column: 2, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 1657, column: 2)
!12249 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 1657, column: 2)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 1657, column: 2)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !3, line: 1657, column: 2)
!12252 = distinct !DILexicalBlock(scope: !12239, file: !3, line: 1657, column: 2)
!12253 = !DILocalVariable(name: "info", arg: 1, scope: !12239, file: !3, line: 1650, type: !114)
!12254 = !DILocation(line: 1650, column: 52, scope: !12239)
!12255 = !DILocalVariable(name: "arg", arg: 2, scope: !12239, file: !3, line: 1650, type: !145)
!12256 = !DILocation(line: 1650, column: 72, scope: !12239)
!12257 = !DILocalVariable(name: "cprev", arg: 3, scope: !12239, file: !3, line: 1651, type: !12242)
!12258 = !DILocation(line: 1651, column: 24, scope: !12239)
!12259 = !DILocalVariable(name: "cnow", scope: !12239, file: !3, line: 1653, type: !4251)
!12260 = !DILocation(line: 1653, column: 22, scope: !12239)
!12261 = !DILocalVariable(name: "flags", scope: !12239, file: !3, line: 1654, type: !145)
!12262 = !DILocation(line: 1654, column: 16, scope: !12239)
!12263 = !DILocalVariable(name: "ret", scope: !12239, file: !3, line: 1655, type: !113)
!12264 = !DILocation(line: 1655, column: 6, scope: !12239)
!12265 = !DILocation(line: 1657, column: 2, scope: !12239)
!12266 = !DILocation(line: 1657, column: 2, scope: !12252)
!12267 = !DILocalVariable(name: "__dummy", scope: !12268, file: !3, line: 1657, type: !145)
!12268 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 1657, column: 2)
!12269 = !DILocation(line: 1657, column: 2, scope: !12268)
!12270 = !DILocalVariable(name: "__dummy2", scope: !12268, file: !3, line: 1657, type: !145)
!12271 = !DILocation(line: 1657, column: 2, scope: !12251)
!12272 = !DILocation(line: 1657, column: 2, scope: !12250)
!12273 = !DILocation(line: 1657, column: 2, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 1657, column: 2)
!12275 = !DILocalVariable(name: "__dummy", scope: !12276, file: !3, line: 1657, type: !145)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 1657, column: 2)
!12277 = distinct !DILexicalBlock(scope: !12274, file: !3, line: 1657, column: 2)
!12278 = !DILocation(line: 1657, column: 2, scope: !12276)
!12279 = !DILocalVariable(name: "__dummy2", scope: !12276, file: !3, line: 1657, type: !145)
!12280 = !DILocation(line: 1657, column: 2, scope: !12277)
!12281 = !DILocation(line: 1657, column: 2, scope: !12249)
!12282 = !{i32 -2141441529}
!12283 = !DILocation(line: 1657, column: 2, scope: !12248)
!12284 = !DILocation(line: 329, column: 10, scope: !5558, inlinedAt: !12247)
!12285 = !DILocation(line: 329, column: 16, scope: !5558, inlinedAt: !12247)
!12286 = !DILocation(line: 1658, column: 9, scope: !12239)
!12287 = !DILocation(line: 1658, column: 15, scope: !12239)
!12288 = !DILocation(line: 1659, column: 26, scope: !12239)
!12289 = !DILocation(line: 1659, column: 32, scope: !12239)
!12290 = !DILocation(line: 1659, column: 39, scope: !12239)
!12291 = !DILocation(line: 409, column: 2, scope: !6377, inlinedAt: !12244)
!12292 = !DILocation(line: 409, column: 2, scope: !6382, inlinedAt: !12244)
!12293 = !DILocation(line: 409, column: 2, scope: !6383, inlinedAt: !12244)
!12294 = !DILocation(line: 409, column: 2, scope: !6390, inlinedAt: !12244)
!12295 = !DILocation(line: 409, column: 2, scope: !6393, inlinedAt: !12244)
!12296 = !DILocation(line: 1661, column: 10, scope: !12239)
!12297 = !DILocation(line: 1661, column: 14, scope: !12239)
!12298 = !DILocation(line: 1661, column: 27, scope: !12239)
!12299 = !DILocation(line: 1661, column: 36, scope: !12239)
!12300 = !DILocation(line: 1661, column: 43, scope: !12239)
!12301 = !DILocation(line: 1661, column: 50, scope: !12239)
!12302 = !DILocation(line: 1661, column: 40, scope: !12239)
!12303 = !DILocation(line: 1661, column: 56, scope: !12239)
!12304 = !DILocation(line: 1662, column: 5, scope: !12239)
!12305 = !DILocation(line: 1662, column: 9, scope: !12239)
!12306 = !DILocation(line: 1662, column: 22, scope: !12239)
!12307 = !DILocation(line: 1662, column: 31, scope: !12239)
!12308 = !DILocation(line: 1662, column: 38, scope: !12239)
!12309 = !DILocation(line: 1662, column: 45, scope: !12239)
!12310 = !DILocation(line: 1662, column: 35, scope: !12239)
!12311 = !DILocation(line: 1662, column: 51, scope: !12239)
!12312 = !DILocation(line: 1663, column: 5, scope: !12239)
!12313 = !DILocation(line: 1663, column: 9, scope: !12239)
!12314 = !DILocation(line: 1663, column: 22, scope: !12239)
!12315 = !DILocation(line: 1663, column: 31, scope: !12239)
!12316 = !DILocation(line: 1663, column: 38, scope: !12239)
!12317 = !DILocation(line: 1663, column: 45, scope: !12239)
!12318 = !DILocation(line: 1663, column: 35, scope: !12239)
!12319 = !DILocation(line: 1663, column: 51, scope: !12239)
!12320 = !DILocation(line: 1664, column: 5, scope: !12239)
!12321 = !DILocation(line: 1664, column: 9, scope: !12239)
!12322 = !DILocation(line: 1664, column: 22, scope: !12239)
!12323 = !DILocation(line: 1664, column: 31, scope: !12239)
!12324 = !DILocation(line: 1664, column: 38, scope: !12239)
!12325 = !DILocation(line: 1664, column: 45, scope: !12239)
!12326 = !DILocation(line: 1664, column: 35, scope: !12239)
!12327 = !DILocation(line: 0, scope: !12239)
!12328 = !DILocation(line: 1661, column: 6, scope: !12239)
!12329 = !DILocation(line: 1666, column: 3, scope: !12239)
!12330 = !DILocation(line: 1666, column: 11, scope: !12239)
!12331 = !DILocation(line: 1668, column: 9, scope: !12239)
!12332 = !DILocation(line: 1668, column: 2, scope: !12239)
!12333 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !4748, file: !3, line: 531, type: !113)
!12334 = !DILocation(line: 531, column: 40, scope: !4748)
!12335 = !DILocalVariable(name: "mode", arg: 2, scope: !4748, file: !3, line: 531, type: !113)
!12336 = !DILocation(line: 531, column: 54, scope: !4748)
!12337 = !DILocalVariable(name: "port", arg: 3, scope: !4748, file: !3, line: 531, type: !113)
!12338 = !DILocation(line: 531, column: 64, scope: !4748)
!12339 = !DILocalVariable(name: "status", scope: !4748, file: !3, line: 534, type: !419)
!12340 = !DILocation(line: 534, column: 16, scope: !4748)
!12341 = !DILocation(line: 536, column: 15, scope: !4748)
!12342 = !DILocation(line: 536, column: 24, scope: !4748)
!12343 = !DILocation(line: 536, column: 11, scope: !4748)
!12344 = !DILocation(line: 536, column: 9, scope: !4748)
!12345 = !DILocation(line: 538, column: 12, scope: !4748)
!12346 = !DILocation(line: 538, column: 2, scope: !4748)
!12347 = !DILocation(line: 538, column: 18, scope: !4748)
!12348 = !DILocation(line: 539, column: 21, scope: !4748)
!12349 = !DILocation(line: 539, column: 12, scope: !4748)
!12350 = !DILocation(line: 539, column: 2, scope: !4748)
!12351 = !DILocation(line: 539, column: 18, scope: !4748)
!12352 = !DILocation(line: 540, column: 21, scope: !4748)
!12353 = !DILocation(line: 540, column: 11, scope: !4748)
!12354 = !DILocation(line: 540, column: 9, scope: !4748)
!12355 = !DILocation(line: 541, column: 6, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 541, column: 6)
!12357 = !DILocation(line: 541, column: 6, scope: !4748)
!12358 = !DILocation(line: 542, column: 13, scope: !12356)
!12359 = !DILocation(line: 542, column: 3, scope: !12356)
!12360 = !DILocation(line: 542, column: 19, scope: !12356)
!12361 = !DILocation(line: 544, column: 9, scope: !4748)
!12362 = !DILocation(line: 544, column: 2, scope: !4748)
!12363 = distinct !DISubprogram(name: "kzalloc", scope: !105, file: !105, line: 662, type: !12364, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12364 = !DISubroutineType(types: !12365)
!12365 = !{!112, !321, !773}
!12366 = !DILocalVariable(name: "s", arg: 1, scope: !12367, file: !105, line: 445, type: !954)
!12367 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !105, file: !105, line: 445, type: !12368, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12368 = !DISubroutineType(types: !12369)
!12369 = !{!112, !954, !773, !321}
!12370 = !DILocation(line: 445, column: 72, scope: !12367, inlinedAt: !12371)
!12371 = distinct !DILocation(line: 552, column: 10, scope: !12372, inlinedAt: !12375)
!12372 = distinct !DILexicalBlock(scope: !12373, file: !105, line: 540, column: 34)
!12373 = distinct !DILexicalBlock(scope: !12374, file: !105, line: 540, column: 6)
!12374 = distinct !DISubprogram(name: "kmalloc", scope: !105, file: !105, line: 538, type: !12364, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12375 = distinct !DILocation(line: 664, column: 9, scope: !12363)
!12376 = !DILocalVariable(name: "flags", arg: 2, scope: !12367, file: !105, line: 446, type: !773)
!12377 = !DILocation(line: 446, column: 9, scope: !12367, inlinedAt: !12371)
!12378 = !DILocalVariable(name: "size", arg: 3, scope: !12367, file: !105, line: 446, type: !321)
!12379 = !DILocation(line: 446, column: 23, scope: !12367, inlinedAt: !12371)
!12380 = !DILocalVariable(name: "ret", scope: !12367, file: !105, line: 448, type: !112)
!12381 = !DILocation(line: 448, column: 8, scope: !12367, inlinedAt: !12371)
!12382 = !DILocalVariable(name: "flags", arg: 1, scope: !12383, file: !105, line: 318, type: !773)
!12383 = distinct !DISubprogram(name: "kmalloc_type", scope: !105, file: !105, line: 318, type: !12384, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12384 = !DISubroutineType(types: !12385)
!12385 = !{!104, !773}
!12386 = !DILocation(line: 318, column: 67, scope: !12383, inlinedAt: !12387)
!12387 = distinct !DILocation(line: 553, column: 20, scope: !12372, inlinedAt: !12375)
!12388 = !DILocalVariable(name: "size", arg: 1, scope: !12389, file: !105, line: 346, type: !321)
!12389 = distinct !DISubprogram(name: "kmalloc_index", scope: !105, file: !105, line: 346, type: !12390, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12390 = !DISubroutineType(types: !12391)
!12391 = !{!7, !321}
!12392 = !DILocation(line: 346, column: 58, scope: !12389, inlinedAt: !12393)
!12393 = distinct !DILocation(line: 547, column: 11, scope: !12372, inlinedAt: !12375)
!12394 = !DILocalVariable(name: "size", arg: 1, scope: !12395, file: !105, line: 472, type: !321)
!12395 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !105, file: !105, line: 472, type: !12396, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12396 = !DISubroutineType(types: !12397)
!12397 = !{!112, !321, !773, !7}
!12398 = !DILocation(line: 472, column: 28, scope: !12395, inlinedAt: !12399)
!12399 = distinct !DILocation(line: 481, column: 9, scope: !12400, inlinedAt: !12401)
!12400 = distinct !DISubprogram(name: "kmalloc_large", scope: !105, file: !105, line: 478, type: !12364, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12401 = distinct !DILocation(line: 545, column: 11, scope: !12402, inlinedAt: !12375)
!12402 = distinct !DILexicalBlock(scope: !12372, file: !105, line: 544, column: 7)
!12403 = !DILocalVariable(name: "flags", arg: 2, scope: !12395, file: !105, line: 472, type: !773)
!12404 = !DILocation(line: 472, column: 40, scope: !12395, inlinedAt: !12399)
!12405 = !DILocalVariable(name: "order", arg: 3, scope: !12395, file: !105, line: 472, type: !7)
!12406 = !DILocation(line: 472, column: 60, scope: !12395, inlinedAt: !12399)
!12407 = !DILocalVariable(name: "size", arg: 1, scope: !12400, file: !105, line: 478, type: !321)
!12408 = !DILocation(line: 478, column: 51, scope: !12400, inlinedAt: !12401)
!12409 = !DILocalVariable(name: "flags", arg: 2, scope: !12400, file: !105, line: 478, type: !773)
!12410 = !DILocation(line: 478, column: 63, scope: !12400, inlinedAt: !12401)
!12411 = !DILocalVariable(name: "order", scope: !12400, file: !105, line: 480, type: !7)
!12412 = !DILocation(line: 480, column: 15, scope: !12400, inlinedAt: !12401)
!12413 = !DILocalVariable(name: "size", arg: 1, scope: !12374, file: !105, line: 538, type: !321)
!12414 = !DILocation(line: 538, column: 45, scope: !12374, inlinedAt: !12375)
!12415 = !DILocalVariable(name: "flags", arg: 2, scope: !12374, file: !105, line: 538, type: !773)
!12416 = !DILocation(line: 538, column: 57, scope: !12374, inlinedAt: !12375)
!12417 = !DILocalVariable(name: "index", scope: !12372, file: !105, line: 542, type: !7)
!12418 = !DILocation(line: 542, column: 16, scope: !12372, inlinedAt: !12375)
!12419 = !DILocalVariable(name: "size", arg: 1, scope: !12363, file: !105, line: 662, type: !321)
!12420 = !DILocation(line: 662, column: 36, scope: !12363)
!12421 = !DILocalVariable(name: "flags", arg: 2, scope: !12363, file: !105, line: 662, type: !773)
!12422 = !DILocation(line: 662, column: 48, scope: !12363)
!12423 = !DILocation(line: 664, column: 17, scope: !12363)
!12424 = !DILocation(line: 664, column: 23, scope: !12363)
!12425 = !DILocation(line: 664, column: 29, scope: !12363)
!12426 = !DILocation(line: 540, column: 27, scope: !12373, inlinedAt: !12375)
!12427 = !DILocation(line: 540, column: 6, scope: !12373, inlinedAt: !12375)
!12428 = !DILocation(line: 540, column: 6, scope: !12374, inlinedAt: !12375)
!12429 = !DILocation(line: 544, column: 7, scope: !12402, inlinedAt: !12375)
!12430 = !DILocation(line: 544, column: 12, scope: !12402, inlinedAt: !12375)
!12431 = !DILocation(line: 544, column: 7, scope: !12372, inlinedAt: !12375)
!12432 = !DILocation(line: 545, column: 25, scope: !12402, inlinedAt: !12375)
!12433 = !DILocation(line: 545, column: 31, scope: !12402, inlinedAt: !12375)
!12434 = !DILocation(line: 480, column: 33, scope: !12400, inlinedAt: !12401)
!12435 = !DILocation(line: 480, column: 23, scope: !12400, inlinedAt: !12401)
!12436 = !DILocation(line: 481, column: 29, scope: !12400, inlinedAt: !12401)
!12437 = !DILocation(line: 481, column: 35, scope: !12400, inlinedAt: !12401)
!12438 = !DILocation(line: 481, column: 42, scope: !12400, inlinedAt: !12401)
!12439 = !DILocation(line: 474, column: 23, scope: !12395, inlinedAt: !12399)
!12440 = !DILocation(line: 474, column: 29, scope: !12395, inlinedAt: !12399)
!12441 = !DILocation(line: 474, column: 36, scope: !12395, inlinedAt: !12399)
!12442 = !DILocation(line: 474, column: 9, scope: !12395, inlinedAt: !12399)
!12443 = !DILocation(line: 545, column: 4, scope: !12402, inlinedAt: !12375)
!12444 = !DILocation(line: 547, column: 25, scope: !12372, inlinedAt: !12375)
!12445 = !DILocation(line: 348, column: 7, scope: !12446, inlinedAt: !12393)
!12446 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 348, column: 6)
!12447 = !DILocation(line: 348, column: 6, scope: !12389, inlinedAt: !12393)
!12448 = !DILocation(line: 349, column: 3, scope: !12446, inlinedAt: !12393)
!12449 = !DILocation(line: 351, column: 6, scope: !12450, inlinedAt: !12393)
!12450 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 351, column: 6)
!12451 = !DILocation(line: 351, column: 11, scope: !12450, inlinedAt: !12393)
!12452 = !DILocation(line: 351, column: 6, scope: !12389, inlinedAt: !12393)
!12453 = !DILocation(line: 352, column: 3, scope: !12450, inlinedAt: !12393)
!12454 = !DILocation(line: 354, column: 32, scope: !12455, inlinedAt: !12393)
!12455 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 354, column: 6)
!12456 = !DILocation(line: 354, column: 37, scope: !12455, inlinedAt: !12393)
!12457 = !DILocation(line: 354, column: 42, scope: !12455, inlinedAt: !12393)
!12458 = !DILocation(line: 354, column: 45, scope: !12455, inlinedAt: !12393)
!12459 = !DILocation(line: 354, column: 50, scope: !12455, inlinedAt: !12393)
!12460 = !DILocation(line: 354, column: 6, scope: !12389, inlinedAt: !12393)
!12461 = !DILocation(line: 355, column: 3, scope: !12455, inlinedAt: !12393)
!12462 = !DILocation(line: 356, column: 32, scope: !12463, inlinedAt: !12393)
!12463 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 356, column: 6)
!12464 = !DILocation(line: 356, column: 37, scope: !12463, inlinedAt: !12393)
!12465 = !DILocation(line: 356, column: 43, scope: !12463, inlinedAt: !12393)
!12466 = !DILocation(line: 356, column: 46, scope: !12463, inlinedAt: !12393)
!12467 = !DILocation(line: 356, column: 51, scope: !12463, inlinedAt: !12393)
!12468 = !DILocation(line: 356, column: 6, scope: !12389, inlinedAt: !12393)
!12469 = !DILocation(line: 357, column: 3, scope: !12463, inlinedAt: !12393)
!12470 = !DILocation(line: 358, column: 6, scope: !12471, inlinedAt: !12393)
!12471 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 358, column: 6)
!12472 = !DILocation(line: 358, column: 11, scope: !12471, inlinedAt: !12393)
!12473 = !DILocation(line: 358, column: 6, scope: !12389, inlinedAt: !12393)
!12474 = !DILocation(line: 358, column: 26, scope: !12471, inlinedAt: !12393)
!12475 = !DILocation(line: 359, column: 6, scope: !12476, inlinedAt: !12393)
!12476 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 359, column: 6)
!12477 = !DILocation(line: 359, column: 11, scope: !12476, inlinedAt: !12393)
!12478 = !DILocation(line: 359, column: 6, scope: !12389, inlinedAt: !12393)
!12479 = !DILocation(line: 359, column: 26, scope: !12476, inlinedAt: !12393)
!12480 = !DILocation(line: 360, column: 6, scope: !12481, inlinedAt: !12393)
!12481 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 360, column: 6)
!12482 = !DILocation(line: 360, column: 11, scope: !12481, inlinedAt: !12393)
!12483 = !DILocation(line: 360, column: 6, scope: !12389, inlinedAt: !12393)
!12484 = !DILocation(line: 360, column: 26, scope: !12481, inlinedAt: !12393)
!12485 = !DILocation(line: 361, column: 6, scope: !12486, inlinedAt: !12393)
!12486 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 361, column: 6)
!12487 = !DILocation(line: 361, column: 11, scope: !12486, inlinedAt: !12393)
!12488 = !DILocation(line: 361, column: 6, scope: !12389, inlinedAt: !12393)
!12489 = !DILocation(line: 361, column: 26, scope: !12486, inlinedAt: !12393)
!12490 = !DILocation(line: 362, column: 6, scope: !12491, inlinedAt: !12393)
!12491 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 362, column: 6)
!12492 = !DILocation(line: 362, column: 11, scope: !12491, inlinedAt: !12393)
!12493 = !DILocation(line: 362, column: 6, scope: !12389, inlinedAt: !12393)
!12494 = !DILocation(line: 362, column: 26, scope: !12491, inlinedAt: !12393)
!12495 = !DILocation(line: 363, column: 6, scope: !12496, inlinedAt: !12393)
!12496 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 363, column: 6)
!12497 = !DILocation(line: 363, column: 11, scope: !12496, inlinedAt: !12393)
!12498 = !DILocation(line: 363, column: 6, scope: !12389, inlinedAt: !12393)
!12499 = !DILocation(line: 363, column: 26, scope: !12496, inlinedAt: !12393)
!12500 = !DILocation(line: 364, column: 6, scope: !12501, inlinedAt: !12393)
!12501 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 364, column: 6)
!12502 = !DILocation(line: 364, column: 11, scope: !12501, inlinedAt: !12393)
!12503 = !DILocation(line: 364, column: 6, scope: !12389, inlinedAt: !12393)
!12504 = !DILocation(line: 364, column: 26, scope: !12501, inlinedAt: !12393)
!12505 = !DILocation(line: 365, column: 6, scope: !12506, inlinedAt: !12393)
!12506 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 365, column: 6)
!12507 = !DILocation(line: 365, column: 11, scope: !12506, inlinedAt: !12393)
!12508 = !DILocation(line: 365, column: 6, scope: !12389, inlinedAt: !12393)
!12509 = !DILocation(line: 365, column: 26, scope: !12506, inlinedAt: !12393)
!12510 = !DILocation(line: 366, column: 6, scope: !12511, inlinedAt: !12393)
!12511 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 366, column: 6)
!12512 = !DILocation(line: 366, column: 11, scope: !12511, inlinedAt: !12393)
!12513 = !DILocation(line: 366, column: 6, scope: !12389, inlinedAt: !12393)
!12514 = !DILocation(line: 366, column: 26, scope: !12511, inlinedAt: !12393)
!12515 = !DILocation(line: 367, column: 6, scope: !12516, inlinedAt: !12393)
!12516 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 367, column: 6)
!12517 = !DILocation(line: 367, column: 11, scope: !12516, inlinedAt: !12393)
!12518 = !DILocation(line: 367, column: 6, scope: !12389, inlinedAt: !12393)
!12519 = !DILocation(line: 367, column: 26, scope: !12516, inlinedAt: !12393)
!12520 = !DILocation(line: 368, column: 6, scope: !12521, inlinedAt: !12393)
!12521 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 368, column: 6)
!12522 = !DILocation(line: 368, column: 11, scope: !12521, inlinedAt: !12393)
!12523 = !DILocation(line: 368, column: 6, scope: !12389, inlinedAt: !12393)
!12524 = !DILocation(line: 368, column: 26, scope: !12521, inlinedAt: !12393)
!12525 = !DILocation(line: 369, column: 6, scope: !12526, inlinedAt: !12393)
!12526 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 369, column: 6)
!12527 = !DILocation(line: 369, column: 11, scope: !12526, inlinedAt: !12393)
!12528 = !DILocation(line: 369, column: 6, scope: !12389, inlinedAt: !12393)
!12529 = !DILocation(line: 369, column: 26, scope: !12526, inlinedAt: !12393)
!12530 = !DILocation(line: 370, column: 6, scope: !12531, inlinedAt: !12393)
!12531 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 370, column: 6)
!12532 = !DILocation(line: 370, column: 11, scope: !12531, inlinedAt: !12393)
!12533 = !DILocation(line: 370, column: 6, scope: !12389, inlinedAt: !12393)
!12534 = !DILocation(line: 370, column: 26, scope: !12531, inlinedAt: !12393)
!12535 = !DILocation(line: 371, column: 6, scope: !12536, inlinedAt: !12393)
!12536 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 371, column: 6)
!12537 = !DILocation(line: 371, column: 11, scope: !12536, inlinedAt: !12393)
!12538 = !DILocation(line: 371, column: 6, scope: !12389, inlinedAt: !12393)
!12539 = !DILocation(line: 371, column: 26, scope: !12536, inlinedAt: !12393)
!12540 = !DILocation(line: 372, column: 6, scope: !12541, inlinedAt: !12393)
!12541 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 372, column: 6)
!12542 = !DILocation(line: 372, column: 11, scope: !12541, inlinedAt: !12393)
!12543 = !DILocation(line: 372, column: 6, scope: !12389, inlinedAt: !12393)
!12544 = !DILocation(line: 372, column: 26, scope: !12541, inlinedAt: !12393)
!12545 = !DILocation(line: 373, column: 6, scope: !12546, inlinedAt: !12393)
!12546 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 373, column: 6)
!12547 = !DILocation(line: 373, column: 11, scope: !12546, inlinedAt: !12393)
!12548 = !DILocation(line: 373, column: 6, scope: !12389, inlinedAt: !12393)
!12549 = !DILocation(line: 373, column: 26, scope: !12546, inlinedAt: !12393)
!12550 = !DILocation(line: 374, column: 6, scope: !12551, inlinedAt: !12393)
!12551 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 374, column: 6)
!12552 = !DILocation(line: 374, column: 11, scope: !12551, inlinedAt: !12393)
!12553 = !DILocation(line: 374, column: 6, scope: !12389, inlinedAt: !12393)
!12554 = !DILocation(line: 374, column: 26, scope: !12551, inlinedAt: !12393)
!12555 = !DILocation(line: 375, column: 6, scope: !12556, inlinedAt: !12393)
!12556 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 375, column: 6)
!12557 = !DILocation(line: 375, column: 11, scope: !12556, inlinedAt: !12393)
!12558 = !DILocation(line: 375, column: 6, scope: !12389, inlinedAt: !12393)
!12559 = !DILocation(line: 375, column: 27, scope: !12556, inlinedAt: !12393)
!12560 = !DILocation(line: 376, column: 6, scope: !12561, inlinedAt: !12393)
!12561 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 376, column: 6)
!12562 = !DILocation(line: 376, column: 11, scope: !12561, inlinedAt: !12393)
!12563 = !DILocation(line: 376, column: 6, scope: !12389, inlinedAt: !12393)
!12564 = !DILocation(line: 376, column: 32, scope: !12561, inlinedAt: !12393)
!12565 = !DILocation(line: 377, column: 6, scope: !12566, inlinedAt: !12393)
!12566 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 377, column: 6)
!12567 = !DILocation(line: 377, column: 11, scope: !12566, inlinedAt: !12393)
!12568 = !DILocation(line: 377, column: 6, scope: !12389, inlinedAt: !12393)
!12569 = !DILocation(line: 377, column: 32, scope: !12566, inlinedAt: !12393)
!12570 = !DILocation(line: 378, column: 6, scope: !12571, inlinedAt: !12393)
!12571 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 378, column: 6)
!12572 = !DILocation(line: 378, column: 11, scope: !12571, inlinedAt: !12393)
!12573 = !DILocation(line: 378, column: 6, scope: !12389, inlinedAt: !12393)
!12574 = !DILocation(line: 378, column: 32, scope: !12571, inlinedAt: !12393)
!12575 = !DILocation(line: 379, column: 6, scope: !12576, inlinedAt: !12393)
!12576 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 379, column: 6)
!12577 = !DILocation(line: 379, column: 11, scope: !12576, inlinedAt: !12393)
!12578 = !DILocation(line: 379, column: 6, scope: !12389, inlinedAt: !12393)
!12579 = !DILocation(line: 379, column: 33, scope: !12576, inlinedAt: !12393)
!12580 = !DILocation(line: 380, column: 6, scope: !12581, inlinedAt: !12393)
!12581 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 380, column: 6)
!12582 = !DILocation(line: 380, column: 11, scope: !12581, inlinedAt: !12393)
!12583 = !DILocation(line: 380, column: 6, scope: !12389, inlinedAt: !12393)
!12584 = !DILocation(line: 380, column: 33, scope: !12581, inlinedAt: !12393)
!12585 = !DILocation(line: 381, column: 6, scope: !12586, inlinedAt: !12393)
!12586 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 381, column: 6)
!12587 = !DILocation(line: 381, column: 11, scope: !12586, inlinedAt: !12393)
!12588 = !DILocation(line: 381, column: 6, scope: !12389, inlinedAt: !12393)
!12589 = !DILocation(line: 381, column: 33, scope: !12586, inlinedAt: !12393)
!12590 = !DILocation(line: 382, column: 2, scope: !12591, inlinedAt: !12393)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !105, line: 382, column: 2)
!12592 = distinct !DILexicalBlock(scope: !12389, file: !105, line: 382, column: 2)
!12593 = !{i32 -2141785314, i32 -2141785285, i32 -2141785239, i32 -2141785181, i32 -2141785127, i32 -2141785073, i32 -2141785018, i32 -2141784987}
!12594 = !DILocation(line: 382, column: 2, scope: !12595, inlinedAt: !12393)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !105, line: 382, column: 2)
!12596 = distinct !DILexicalBlock(scope: !12592, file: !105, line: 382, column: 2)
!12597 = !{i32 -2141784544, i32 -2141784537, i32 -2141784483, i32 -2141784452, i32 -2141784422}
!12598 = !DILocation(line: 382, column: 2, scope: !12596, inlinedAt: !12393)
!12599 = !DILocation(line: 386, column: 1, scope: !12389, inlinedAt: !12393)
!12600 = !DILocation(line: 547, column: 9, scope: !12372, inlinedAt: !12375)
!12601 = !DILocation(line: 549, column: 8, scope: !12602, inlinedAt: !12375)
!12602 = distinct !DILexicalBlock(scope: !12372, file: !105, line: 549, column: 7)
!12603 = !DILocation(line: 549, column: 7, scope: !12372, inlinedAt: !12375)
!12604 = !DILocation(line: 550, column: 4, scope: !12602, inlinedAt: !12375)
!12605 = !DILocation(line: 553, column: 33, scope: !12372, inlinedAt: !12375)
!12606 = !DILocation(line: 325, column: 6, scope: !12607, inlinedAt: !12387)
!12607 = distinct !DILexicalBlock(scope: !12383, file: !105, line: 325, column: 6)
!12608 = !DILocation(line: 325, column: 6, scope: !12383, inlinedAt: !12387)
!12609 = !DILocation(line: 326, column: 3, scope: !12607, inlinedAt: !12387)
!12610 = !DILocation(line: 332, column: 9, scope: !12383, inlinedAt: !12387)
!12611 = !DILocation(line: 332, column: 15, scope: !12383, inlinedAt: !12387)
!12612 = !DILocation(line: 332, column: 2, scope: !12383, inlinedAt: !12387)
!12613 = !DILocation(line: 336, column: 1, scope: !12383, inlinedAt: !12387)
!12614 = !DILocation(line: 553, column: 5, scope: !12372, inlinedAt: !12375)
!12615 = !DILocation(line: 553, column: 41, scope: !12372, inlinedAt: !12375)
!12616 = !DILocation(line: 554, column: 5, scope: !12372, inlinedAt: !12375)
!12617 = !DILocation(line: 554, column: 12, scope: !12372, inlinedAt: !12375)
!12618 = !DILocation(line: 448, column: 31, scope: !12367, inlinedAt: !12371)
!12619 = !DILocation(line: 448, column: 34, scope: !12367, inlinedAt: !12371)
!12620 = !DILocation(line: 448, column: 14, scope: !12367, inlinedAt: !12371)
!12621 = !DILocation(line: 450, column: 22, scope: !12367, inlinedAt: !12371)
!12622 = !DILocation(line: 450, column: 25, scope: !12367, inlinedAt: !12371)
!12623 = !DILocation(line: 450, column: 30, scope: !12367, inlinedAt: !12371)
!12624 = !DILocation(line: 450, column: 36, scope: !12367, inlinedAt: !12371)
!12625 = !DILocation(line: 450, column: 8, scope: !12367, inlinedAt: !12371)
!12626 = !DILocation(line: 450, column: 6, scope: !12367, inlinedAt: !12371)
!12627 = !DILocation(line: 451, column: 9, scope: !12367, inlinedAt: !12371)
!12628 = !DILocation(line: 552, column: 3, scope: !12372, inlinedAt: !12375)
!12629 = !DILocation(line: 557, column: 19, scope: !12374, inlinedAt: !12375)
!12630 = !DILocation(line: 557, column: 25, scope: !12374, inlinedAt: !12375)
!12631 = !DILocation(line: 557, column: 9, scope: !12374, inlinedAt: !12375)
!12632 = !DILocation(line: 557, column: 2, scope: !12374, inlinedAt: !12375)
!12633 = !DILocation(line: 558, column: 1, scope: !12374, inlinedAt: !12375)
!12634 = !DILocation(line: 664, column: 2, scope: !12363)
!12635 = distinct !DISubprogram(name: "get_order", scope: !12636, file: !12636, line: 29, type: !5481, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12636 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!12637 = !DILocalVariable(name: "x", arg: 1, scope: !12638, file: !6789, line: 366, type: !414)
!12638 = distinct !DISubprogram(name: "fls64", scope: !6789, file: !6789, line: 366, type: !12639, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!113, !414}
!12641 = !DILocation(line: 366, column: 40, scope: !12638, inlinedAt: !12642)
!12642 = distinct !DILocation(line: 46, column: 9, scope: !12635)
!12643 = !DILocalVariable(name: "bitpos", scope: !12638, file: !6789, line: 368, type: !113)
!12644 = !DILocation(line: 368, column: 6, scope: !12638, inlinedAt: !12642)
!12645 = !DILocalVariable(name: "size", arg: 1, scope: !12635, file: !12636, line: 29, type: !145)
!12646 = !DILocation(line: 29, column: 63, scope: !12635)
!12647 = !DILocation(line: 31, column: 27, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12635, file: !12636, line: 31, column: 6)
!12649 = !DILocation(line: 31, column: 6, scope: !12648)
!12650 = !DILocation(line: 31, column: 6, scope: !12635)
!12651 = !DILocation(line: 32, column: 8, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !12636, line: 32, column: 7)
!12653 = distinct !DILexicalBlock(scope: !12648, file: !12636, line: 31, column: 34)
!12654 = !DILocation(line: 32, column: 7, scope: !12653)
!12655 = !DILocation(line: 33, column: 4, scope: !12652)
!12656 = !DILocation(line: 35, column: 7, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12653, file: !12636, line: 35, column: 7)
!12658 = !DILocation(line: 35, column: 12, scope: !12657)
!12659 = !DILocation(line: 35, column: 7, scope: !12653)
!12660 = !DILocation(line: 36, column: 4, scope: !12657)
!12661 = !DILocation(line: 38, column: 10, scope: !12653)
!12662 = !DILocation(line: 38, column: 28, scope: !12653)
!12663 = !DILocation(line: 38, column: 41, scope: !12653)
!12664 = !DILocation(line: 38, column: 3, scope: !12653)
!12665 = !DILocation(line: 41, column: 6, scope: !12635)
!12666 = !DILocation(line: 42, column: 7, scope: !12635)
!12667 = !DILocation(line: 46, column: 15, scope: !12635)
!12668 = !DILocation(line: 374, column: 2, scope: !12638, inlinedAt: !12642)
!12669 = !DILocation(line: 376, column: 14, scope: !12638, inlinedAt: !12642)
!12670 = !{i32 368300}
!12671 = !DILocation(line: 377, column: 9, scope: !12638, inlinedAt: !12642)
!12672 = !DILocation(line: 377, column: 16, scope: !12638, inlinedAt: !12642)
!12673 = !DILocation(line: 46, column: 2, scope: !12635)
!12674 = !DILocation(line: 48, column: 1, scope: !12635)
!12675 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12676, file: !12676, line: 30, type: !12677, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12676 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12677 = !DISubroutineType(types: !12678)
!12678 = !{!113, !413}
!12679 = !DILocation(line: 366, column: 40, scope: !12638, inlinedAt: !12680)
!12680 = distinct !DILocation(line: 32, column: 9, scope: !12675)
!12681 = !DILocation(line: 368, column: 6, scope: !12638, inlinedAt: !12680)
!12682 = !DILocalVariable(name: "n", arg: 1, scope: !12675, file: !12676, line: 30, type: !413)
!12683 = !DILocation(line: 30, column: 21, scope: !12675)
!12684 = !DILocation(line: 32, column: 15, scope: !12675)
!12685 = !DILocation(line: 374, column: 2, scope: !12638, inlinedAt: !12680)
!12686 = !DILocation(line: 376, column: 14, scope: !12638, inlinedAt: !12680)
!12687 = !DILocation(line: 377, column: 9, scope: !12638, inlinedAt: !12680)
!12688 = !DILocation(line: 377, column: 16, scope: !12638, inlinedAt: !12680)
!12689 = !DILocation(line: 32, column: 18, scope: !12675)
!12690 = !DILocation(line: 32, column: 2, scope: !12675)
!12691 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12692, file: !12692, line: 137, type: !12693, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12692 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!112, !954, !2178, !321, !773}
!12695 = !DILocalVariable(name: "s", arg: 1, scope: !12691, file: !12692, line: 137, type: !954)
!12696 = !DILocation(line: 137, column: 54, scope: !12691)
!12697 = !DILocalVariable(name: "object", arg: 2, scope: !12691, file: !12692, line: 137, type: !2178)
!12698 = !DILocation(line: 137, column: 69, scope: !12691)
!12699 = !DILocalVariable(name: "size", arg: 3, scope: !12691, file: !12692, line: 138, type: !321)
!12700 = !DILocation(line: 138, column: 12, scope: !12691)
!12701 = !DILocalVariable(name: "flags", arg: 4, scope: !12691, file: !12692, line: 138, type: !773)
!12702 = !DILocation(line: 138, column: 24, scope: !12691)
!12703 = !DILocation(line: 140, column: 17, scope: !12691)
!12704 = !DILocation(line: 140, column: 2, scope: !12691)
!12705 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6703, file: !6703, line: 661, type: !1940, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12706 = !DILocalVariable(name: "__edi", scope: !12707, file: !6703, line: 663, type: !145)
!12707 = distinct !DILexicalBlock(scope: !12705, file: !6703, line: 663, column: 2)
!12708 = !DILocation(line: 663, column: 2, scope: !12707)
!12709 = !DILocalVariable(name: "__esi", scope: !12707, file: !6703, line: 663, type: !145)
!12710 = !DILocalVariable(name: "__edx", scope: !12707, file: !6703, line: 663, type: !145)
!12711 = !DILocalVariable(name: "__ecx", scope: !12707, file: !6703, line: 663, type: !145)
!12712 = !DILocalVariable(name: "__eax", scope: !12707, file: !6703, line: 663, type: !145)
!12713 = !{i32 -2145709981, i32 -2145709251, i32 -2145709017, i32 -2145708966, i32 -2145708938, i32 -2145708913, i32 -2145709229, i32 -2145709216, i32 -2145708778, i32 -2145708659, i32 -2145709124, i32 -2145709097, i32 -2145709069, i32 -2145709039}
!12714 = !DILocation(line: 664, column: 1, scope: !12705)
!12715 = distinct !DISubprogram(name: "copy_overflow", scope: !9526, file: !9526, line: 132, type: !12716, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12716 = !DISubroutineType(types: !12717)
!12717 = !{null, !113, !145}
!12718 = !DILocalVariable(name: "size", arg: 1, scope: !12715, file: !9526, line: 132, type: !113)
!12719 = !DILocation(line: 132, column: 38, scope: !12715)
!12720 = !DILocalVariable(name: "count", arg: 2, scope: !12715, file: !9526, line: 132, type: !145)
!12721 = !DILocation(line: 132, column: 58, scope: !12715)
!12722 = !DILocalVariable(name: "__ret_warn_on", scope: !12723, file: !9526, line: 134, type: !113)
!12723 = distinct !DILexicalBlock(scope: !12715, file: !9526, line: 134, column: 2)
!12724 = !DILocation(line: 134, column: 2, scope: !12723)
!12725 = !DILocation(line: 134, column: 2, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12723, file: !9526, line: 134, column: 2)
!12727 = !DILocation(line: 134, column: 2, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12726, file: !9526, line: 134, column: 2)
!12729 = !DILocation(line: 134, column: 2, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12728, file: !9526, line: 134, column: 2)
!12731 = !DILocation(line: 134, column: 2, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12728, file: !9526, line: 134, column: 2)
!12733 = !DILocation(line: 134, column: 2, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12732, file: !9526, line: 134, column: 2)
!12735 = !DILocation(line: 134, column: 2, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12732, file: !9526, line: 134, column: 2)
!12737 = !{i32 -2145490356, i32 -2145490327, i32 -2145490281, i32 -2145490223, i32 -2145490169, i32 -2145490115, i32 -2145490060, i32 -2145490029}
!12738 = !DILocation(line: 134, column: 2, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12732, file: !9526, line: 134, column: 2)
!12740 = !{i32 -2145489609, i32 -2145489602, i32 -2145489550, i32 -2145489519, i32 -2145489489}
!12741 = !DILocation(line: 134, column: 2, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12732, file: !9526, line: 134, column: 2)
!12743 = !DILocation(line: 134, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12728, file: !9526, line: 134, column: 2)
!12745 = !DILocation(line: 135, column: 1, scope: !12715)
!12746 = distinct !DISubprogram(name: "check_object_size", scope: !9526, file: !9526, line: 122, type: !12747, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !2178, !145, !482}
!12749 = !DILocalVariable(name: "ptr", arg: 1, scope: !12746, file: !9526, line: 122, type: !2178)
!12750 = !DILocation(line: 122, column: 50, scope: !12746)
!12751 = !DILocalVariable(name: "n", arg: 2, scope: !12746, file: !9526, line: 122, type: !145)
!12752 = !DILocation(line: 122, column: 69, scope: !12746)
!12753 = !DILocalVariable(name: "to_user", arg: 3, scope: !12746, file: !9526, line: 123, type: !482)
!12754 = !DILocation(line: 123, column: 15, scope: !12746)
!12755 = !DILocation(line: 124, column: 3, scope: !12746)
!12756 = distinct !DISubprogram(name: "signal_pending", scope: !1818, file: !1818, line: 356, type: !12757, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{!113, !1230}
!12759 = !DILocalVariable(name: "p", arg: 1, scope: !12756, file: !1818, line: 356, type: !1230)
!12760 = !DILocation(line: 356, column: 54, scope: !12756)
!12761 = !DILocation(line: 358, column: 9, scope: !12756)
!12762 = !DILocation(line: 358, column: 2, scope: !12756)
!12763 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !1232, file: !1232, line: 1828, type: !12764, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12764 = !DISubroutineType(types: !12765)
!12765 = !{!113, !1230, !113}
!12766 = !DILocalVariable(name: "tsk", arg: 1, scope: !12763, file: !1232, line: 1828, type: !1230)
!12767 = !DILocation(line: 1828, column: 60, scope: !12763)
!12768 = !DILocalVariable(name: "flag", arg: 2, scope: !12763, file: !1232, line: 1828, type: !113)
!12769 = !DILocation(line: 1828, column: 69, scope: !12763)
!12770 = !DILocation(line: 1830, column: 46, scope: !12763)
!12771 = !DILocation(line: 1830, column: 29, scope: !12763)
!12772 = !DILocation(line: 1830, column: 52, scope: !12763)
!12773 = !DILocation(line: 1830, column: 9, scope: !12763)
!12774 = !DILocation(line: 1830, column: 2, scope: !12763)
!12775 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !9526, file: !9526, line: 82, type: !12776, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12776 = !DISubroutineType(types: !12777)
!12777 = !{!113, !12778, !113}
!12778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!12779 = !DILocalVariable(name: "ti", arg: 1, scope: !12775, file: !9526, line: 82, type: !12778)
!12780 = !DILocation(line: 82, column: 59, scope: !12775)
!12781 = !DILocalVariable(name: "flag", arg: 2, scope: !12775, file: !9526, line: 82, type: !113)
!12782 = !DILocation(line: 82, column: 67, scope: !12775)
!12783 = !DILocation(line: 84, column: 18, scope: !12775)
!12784 = !DILocation(line: 84, column: 42, scope: !12775)
!12785 = !DILocation(line: 84, column: 46, scope: !12775)
!12786 = !DILocation(line: 84, column: 9, scope: !12775)
!12787 = !DILocation(line: 84, column: 2, scope: !12775)
!12788 = distinct !DISubprogram(name: "task_thread_info", scope: !1232, file: !1232, line: 1729, type: !12789, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{!12778, !1230}
!12791 = !DILocalVariable(name: "task", arg: 1, scope: !12788, file: !1232, line: 1729, type: !1230)
!12792 = !DILocation(line: 1729, column: 72, scope: !12788)
!12793 = !DILocation(line: 1731, column: 10, scope: !12788)
!12794 = !DILocation(line: 1731, column: 16, scope: !12788)
!12795 = !DILocation(line: 1731, column: 2, scope: !12788)
!12796 = distinct !DISubprogram(name: "mxser_read_register", scope: !3, file: !3, line: 1457, type: !12797, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{!113, !113, !12799}
!12799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!12800 = !DILocalVariable(name: "port", arg: 1, scope: !12796, file: !3, line: 1457, type: !113)
!12801 = !DILocation(line: 1457, column: 43, scope: !12796)
!12802 = !DILocalVariable(name: "regs", arg: 2, scope: !12796, file: !3, line: 1457, type: !12799)
!12803 = !DILocation(line: 1457, column: 65, scope: !12796)
!12804 = !DILocalVariable(name: "i", scope: !12796, file: !3, line: 1459, type: !113)
!12805 = !DILocation(line: 1459, column: 6, scope: !12796)
!12806 = !DILocalVariable(name: "k", scope: !12796, file: !3, line: 1459, type: !113)
!12807 = !DILocation(line: 1459, column: 9, scope: !12796)
!12808 = !DILocalVariable(name: "value", scope: !12796, file: !3, line: 1459, type: !113)
!12809 = !DILocation(line: 1459, column: 12, scope: !12796)
!12810 = !DILocalVariable(name: "id", scope: !12796, file: !3, line: 1459, type: !113)
!12811 = !DILocation(line: 1459, column: 19, scope: !12796)
!12812 = !DILocalVariable(name: "j", scope: !12796, file: !3, line: 1460, type: !7)
!12813 = !DILocation(line: 1460, column: 15, scope: !12796)
!12814 = !DILocation(line: 1462, column: 26, scope: !12796)
!12815 = !DILocation(line: 1462, column: 7, scope: !12796)
!12816 = !DILocation(line: 1462, column: 5, scope: !12796)
!12817 = !DILocation(line: 1463, column: 6, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 1463, column: 6)
!12819 = !DILocation(line: 1463, column: 9, scope: !12818)
!12820 = !DILocation(line: 1463, column: 6, scope: !12796)
!12821 = !DILocation(line: 1464, column: 10, scope: !12818)
!12822 = !DILocation(line: 1464, column: 3, scope: !12818)
!12823 = !DILocation(line: 1465, column: 9, scope: !12824)
!12824 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 1465, column: 2)
!12825 = !DILocation(line: 1465, column: 7, scope: !12824)
!12826 = !DILocation(line: 1465, column: 14, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12824, file: !3, line: 1465, column: 2)
!12828 = !DILocation(line: 1465, column: 16, scope: !12827)
!12829 = !DILocation(line: 1465, column: 2, scope: !12824)
!12830 = !DILocation(line: 1466, column: 8, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 1465, column: 27)
!12832 = !DILocation(line: 1466, column: 10, scope: !12831)
!12833 = !DILocation(line: 1466, column: 18, scope: !12831)
!12834 = !DILocation(line: 1466, column: 5, scope: !12831)
!12835 = !DILocation(line: 1467, column: 10, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 1467, column: 3)
!12837 = !DILocation(line: 1467, column: 8, scope: !12836)
!12838 = !DILocation(line: 1467, column: 19, scope: !12839)
!12839 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 1467, column: 3)
!12840 = !DILocation(line: 1467, column: 21, scope: !12839)
!12841 = !DILocation(line: 1467, column: 3, scope: !12836)
!12842 = !DILocation(line: 1468, column: 18, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 1467, column: 35)
!12844 = !DILocation(line: 1468, column: 4, scope: !12843)
!12845 = !DILocation(line: 1469, column: 8, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12843, file: !3, line: 1469, column: 8)
!12847 = !DILocation(line: 1469, column: 12, scope: !12846)
!12848 = !DILocation(line: 1469, column: 10, scope: !12846)
!12849 = !DILocation(line: 1469, column: 8, scope: !12843)
!12850 = !DILocation(line: 1470, column: 29, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 1469, column: 15)
!12852 = !DILocation(line: 1470, column: 5, scope: !12851)
!12853 = !DILocation(line: 1471, column: 39, scope: !12851)
!12854 = !DILocation(line: 1471, column: 5, scope: !12851)
!12855 = !DILocation(line: 1472, column: 4, scope: !12851)
!12856 = !DILocation(line: 1473, column: 19, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 1472, column: 11)
!12858 = !DILocation(line: 1473, column: 5, scope: !12857)
!12859 = !DILocation(line: 1474, column: 29, scope: !12857)
!12860 = !DILocation(line: 1474, column: 5, scope: !12857)
!12861 = !DILocation(line: 1476, column: 3, scope: !12843)
!12862 = !DILocation(line: 1467, column: 28, scope: !12839)
!12863 = !DILocation(line: 1467, column: 3, scope: !12839)
!12864 = distinct !{!12864, !12841, !12865}
!12865 = !DILocation(line: 1476, column: 3, scope: !12836)
!12866 = !DILocation(line: 1477, column: 13, scope: !12831)
!12867 = !DILocation(line: 1477, column: 9, scope: !12831)
!12868 = !DILocation(line: 1478, column: 9, scope: !12831)
!12869 = !DILocation(line: 1479, column: 10, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 1479, column: 3)
!12871 = !DILocation(line: 1479, column: 17, scope: !12870)
!12872 = !DILocation(line: 1479, column: 8, scope: !12870)
!12873 = !DILocation(line: 1479, column: 27, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 1479, column: 3)
!12875 = !DILocation(line: 1479, column: 29, scope: !12874)
!12876 = !DILocation(line: 1479, column: 3, scope: !12870)
!12877 = !DILocation(line: 1480, column: 18, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 1479, column: 49)
!12879 = !DILocation(line: 1480, column: 4, scope: !12878)
!12880 = !DILocation(line: 1481, column: 28, scope: !12878)
!12881 = !DILocation(line: 1481, column: 4, scope: !12878)
!12882 = !DILocation(line: 1482, column: 12, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12878, file: !3, line: 1482, column: 8)
!12884 = !DILocation(line: 1482, column: 8, scope: !12883)
!12885 = !DILocation(line: 1482, column: 18, scope: !12883)
!12886 = !DILocation(line: 1482, column: 8, scope: !12878)
!12887 = !DILocation(line: 1483, column: 14, scope: !12883)
!12888 = !DILocation(line: 1483, column: 11, scope: !12883)
!12889 = !DILocation(line: 1483, column: 5, scope: !12883)
!12890 = !DILocation(line: 1484, column: 3, scope: !12878)
!12891 = !DILocation(line: 1479, column: 36, scope: !12874)
!12892 = !DILocation(line: 1479, column: 42, scope: !12874)
!12893 = !DILocation(line: 1479, column: 3, scope: !12874)
!12894 = distinct !{!12894, !12876, !12895}
!12895 = !DILocation(line: 1484, column: 3, scope: !12870)
!12896 = !DILocation(line: 1485, column: 13, scope: !12831)
!12897 = !DILocation(line: 1485, column: 3, scope: !12831)
!12898 = !DILocation(line: 1485, column: 8, scope: !12831)
!12899 = !DILocation(line: 1485, column: 11, scope: !12831)
!12900 = !DILocation(line: 1486, column: 11, scope: !12831)
!12901 = !DILocation(line: 1486, column: 3, scope: !12831)
!12902 = !DILocation(line: 1487, column: 2, scope: !12831)
!12903 = !DILocation(line: 1465, column: 23, scope: !12827)
!12904 = !DILocation(line: 1465, column: 2, scope: !12827)
!12905 = distinct !{!12905, !12829, !12906}
!12906 = !DILocation(line: 1487, column: 2, scope: !12824)
!12907 = !DILocation(line: 1488, column: 20, scope: !12796)
!12908 = !DILocation(line: 1488, column: 2, scope: !12796)
!12909 = !DILocation(line: 1489, column: 9, scope: !12796)
!12910 = !DILocation(line: 1489, column: 2, scope: !12796)
!12911 = !DILocation(line: 1490, column: 1, scope: !12796)
!12912 = distinct !DISubprogram(name: "mxser_request_vector", scope: !3, file: !3, line: 2355, type: !5555, scopeLine: 2356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12913 = !DILocalVariable(name: "brd", arg: 1, scope: !12912, file: !3, line: 2355, type: !4216)
!12914 = !DILocation(line: 2355, column: 53, scope: !12912)
!12915 = !DILocation(line: 2357, column: 31, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2357, column: 6)
!12917 = !DILocation(line: 2357, column: 6, scope: !12916)
!12918 = !DILocation(line: 2357, column: 6, scope: !12912)
!12919 = !DILocation(line: 2358, column: 3, scope: !12916)
!12920 = !DILocation(line: 2359, column: 9, scope: !12912)
!12921 = !DILocation(line: 2359, column: 2, scope: !12912)
!12922 = !DILocation(line: 2360, column: 1, scope: !12912)
!12923 = distinct !DISubprogram(name: "mxser_program_mode", scope: !3, file: !3, line: 1389, type: !3099, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!12924 = !DILocalVariable(name: "port", arg: 1, scope: !12923, file: !3, line: 1389, type: !113)
!12925 = !DILocation(line: 1389, column: 42, scope: !12923)
!12926 = !DILocalVariable(name: "id", scope: !12923, file: !3, line: 1391, type: !113)
!12927 = !DILocation(line: 1391, column: 6, scope: !12923)
!12928 = !DILocalVariable(name: "i", scope: !12923, file: !3, line: 1391, type: !113)
!12929 = !DILocation(line: 1391, column: 10, scope: !12923)
!12930 = !DILocalVariable(name: "j", scope: !12923, file: !3, line: 1391, type: !113)
!12931 = !DILocation(line: 1391, column: 13, scope: !12923)
!12932 = !DILocalVariable(name: "n", scope: !12923, file: !3, line: 1391, type: !113)
!12933 = !DILocation(line: 1391, column: 16, scope: !12923)
!12934 = !DILocation(line: 1393, column: 10, scope: !12923)
!12935 = !DILocation(line: 1393, column: 2, scope: !12923)
!12936 = !DILocation(line: 1394, column: 10, scope: !12923)
!12937 = !DILocation(line: 1394, column: 2, scope: !12923)
!12938 = !DILocation(line: 1395, column: 10, scope: !12923)
!12939 = !DILocation(line: 1395, column: 2, scope: !12923)
!12940 = !DILocation(line: 1396, column: 12, scope: !12923)
!12941 = !DILocation(line: 1396, column: 8, scope: !12923)
!12942 = !DILocation(line: 1397, column: 12, scope: !12923)
!12943 = !DILocation(line: 1397, column: 8, scope: !12923)
!12944 = !DILocation(line: 1398, column: 10, scope: !12923)
!12945 = !DILocation(line: 1398, column: 2, scope: !12923)
!12946 = !DILocation(line: 1399, column: 12, scope: !12923)
!12947 = !DILocation(line: 1399, column: 8, scope: !12923)
!12948 = !DILocation(line: 1401, column: 11, scope: !12923)
!12949 = !DILocation(line: 1401, column: 16, scope: !12923)
!12950 = !DILocation(line: 1401, column: 7, scope: !12923)
!12951 = !DILocation(line: 1401, column: 21, scope: !12923)
!12952 = !DILocation(line: 1401, column: 5, scope: !12923)
!12953 = !DILocation(line: 1402, column: 7, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 1402, column: 6)
!12955 = !DILocation(line: 1402, column: 10, scope: !12954)
!12956 = !DILocation(line: 1402, column: 27, scope: !12954)
!12957 = !DILocation(line: 1403, column: 5, scope: !12954)
!12958 = !DILocation(line: 1403, column: 8, scope: !12954)
!12959 = !DILocation(line: 1403, column: 25, scope: !12954)
!12960 = !DILocation(line: 1404, column: 5, scope: !12954)
!12961 = !DILocation(line: 1404, column: 8, scope: !12954)
!12962 = !DILocation(line: 1404, column: 25, scope: !12954)
!12963 = !DILocation(line: 1405, column: 5, scope: !12954)
!12964 = !DILocation(line: 1405, column: 8, scope: !12954)
!12965 = !DILocation(line: 1405, column: 26, scope: !12954)
!12966 = !DILocation(line: 1406, column: 5, scope: !12954)
!12967 = !DILocation(line: 1406, column: 8, scope: !12954)
!12968 = !DILocation(line: 1406, column: 26, scope: !12954)
!12969 = !DILocation(line: 1407, column: 5, scope: !12954)
!12970 = !DILocation(line: 1407, column: 8, scope: !12954)
!12971 = !DILocation(line: 1402, column: 6, scope: !12923)
!12972 = !DILocation(line: 1408, column: 3, scope: !12954)
!12973 = !DILocation(line: 1409, column: 9, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 1409, column: 2)
!12975 = !DILocation(line: 1409, column: 16, scope: !12974)
!12976 = !DILocation(line: 1409, column: 7, scope: !12974)
!12977 = !DILocation(line: 1409, column: 21, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 1409, column: 2)
!12979 = !DILocation(line: 1409, column: 23, scope: !12978)
!12980 = !DILocation(line: 1409, column: 2, scope: !12974)
!12981 = !DILocation(line: 1410, column: 11, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 1409, column: 33)
!12983 = !DILocation(line: 1410, column: 16, scope: !12982)
!12984 = !DILocation(line: 1410, column: 7, scope: !12982)
!12985 = !DILocation(line: 1410, column: 5, scope: !12982)
!12986 = !DILocation(line: 1411, column: 7, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 1411, column: 7)
!12988 = !DILocation(line: 1411, column: 9, scope: !12987)
!12989 = !DILocation(line: 1411, column: 7, scope: !12982)
!12990 = !DILocation(line: 1412, column: 6, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 1411, column: 17)
!12992 = !DILocation(line: 1413, column: 3, scope: !12991)
!12993 = !DILocation(line: 1413, column: 15, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 1413, column: 14)
!12995 = !DILocation(line: 1413, column: 17, scope: !12994)
!12996 = !DILocation(line: 1413, column: 23, scope: !12994)
!12997 = !DILocation(line: 1413, column: 27, scope: !12994)
!12998 = !DILocation(line: 1413, column: 29, scope: !12994)
!12999 = !DILocation(line: 1413, column: 14, scope: !12987)
!13000 = !DILocation(line: 1414, column: 6, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12994, file: !3, line: 1413, column: 36)
!13002 = !DILocation(line: 1415, column: 4, scope: !13001)
!13003 = !DILocation(line: 1417, column: 6, scope: !12994)
!13004 = !DILocation(line: 1418, column: 2, scope: !12982)
!13005 = !DILocation(line: 1409, column: 29, scope: !12978)
!13006 = !DILocation(line: 1409, column: 2, scope: !12978)
!13007 = distinct !{!13007, !12980, !13008}
!13008 = !DILocation(line: 1418, column: 2, scope: !12974)
!13009 = !DILocation(line: 1419, column: 6, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 1419, column: 6)
!13011 = !DILocation(line: 1419, column: 8, scope: !13010)
!13012 = !DILocation(line: 1419, column: 6, scope: !12923)
!13013 = !DILocation(line: 1420, column: 6, scope: !13010)
!13014 = !DILocation(line: 1420, column: 3, scope: !13010)
!13015 = !DILocation(line: 1421, column: 9, scope: !12923)
!13016 = !DILocation(line: 1421, column: 2, scope: !12923)
!13017 = !DILocation(line: 1422, column: 1, scope: !12923)
!13018 = distinct !DISubprogram(name: "mxser_normal_mode", scope: !3, file: !3, line: 1424, type: !1933, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !197)
!13019 = !DILocalVariable(name: "port", arg: 1, scope: !13018, file: !3, line: 1424, type: !113)
!13020 = !DILocation(line: 1424, column: 42, scope: !13018)
!13021 = !DILocalVariable(name: "i", scope: !13018, file: !3, line: 1426, type: !113)
!13022 = !DILocation(line: 1426, column: 6, scope: !13018)
!13023 = !DILocalVariable(name: "n", scope: !13018, file: !3, line: 1426, type: !113)
!13024 = !DILocation(line: 1426, column: 9, scope: !13018)
!13025 = !DILocation(line: 1428, column: 13, scope: !13018)
!13026 = !DILocation(line: 1428, column: 18, scope: !13018)
!13027 = !DILocation(line: 1428, column: 2, scope: !13018)
!13028 = !DILocation(line: 1429, column: 13, scope: !13018)
!13029 = !DILocation(line: 1429, column: 18, scope: !13018)
!13030 = !DILocation(line: 1429, column: 2, scope: !13018)
!13031 = !DILocation(line: 1430, column: 11, scope: !13018)
!13032 = !DILocation(line: 1430, column: 16, scope: !13018)
!13033 = !DILocation(line: 1430, column: 2, scope: !13018)
!13034 = !DILocation(line: 1431, column: 10, scope: !13018)
!13035 = !DILocation(line: 1431, column: 15, scope: !13018)
!13036 = !DILocation(line: 1431, column: 2, scope: !13018)
!13037 = !DILocation(line: 1432, column: 13, scope: !13018)
!13038 = !DILocation(line: 1432, column: 18, scope: !13018)
!13039 = !DILocation(line: 1432, column: 2, scope: !13018)
!13040 = !DILocation(line: 1433, column: 13, scope: !13018)
!13041 = !DILocation(line: 1433, column: 18, scope: !13018)
!13042 = !DILocation(line: 1433, column: 2, scope: !13018)
!13043 = !DILocation(line: 1434, column: 9, scope: !13044)
!13044 = distinct !DILexicalBlock(scope: !13018, file: !3, line: 1434, column: 2)
!13045 = !DILocation(line: 1434, column: 7, scope: !13044)
!13046 = !DILocation(line: 1434, column: 14, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13044, file: !3, line: 1434, column: 2)
!13048 = !DILocation(line: 1434, column: 16, scope: !13047)
!13049 = !DILocation(line: 1434, column: 2, scope: !13044)
!13050 = !DILocation(line: 1435, column: 11, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 1434, column: 27)
!13052 = !DILocation(line: 1435, column: 16, scope: !13051)
!13053 = !DILocation(line: 1435, column: 7, scope: !13051)
!13054 = !DILocation(line: 1435, column: 5, scope: !13051)
!13055 = !DILocation(line: 1436, column: 8, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1436, column: 7)
!13057 = !DILocation(line: 1436, column: 10, scope: !13056)
!13058 = !DILocation(line: 1436, column: 18, scope: !13056)
!13059 = !DILocation(line: 1436, column: 7, scope: !13051)
!13060 = !DILocation(line: 1437, column: 4, scope: !13056)
!13061 = !DILocation(line: 1438, column: 8, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13051, file: !3, line: 1438, column: 7)
!13063 = !DILocation(line: 1438, column: 10, scope: !13062)
!13064 = !DILocation(line: 1438, column: 15, scope: !13062)
!13065 = !DILocation(line: 1438, column: 7, scope: !13051)
!13066 = !DILocation(line: 1439, column: 14, scope: !13062)
!13067 = !DILocation(line: 1439, column: 10, scope: !13062)
!13068 = !DILocation(line: 1439, column: 4, scope: !13062)
!13069 = !DILocation(line: 1440, column: 2, scope: !13051)
!13070 = !DILocation(line: 1434, column: 23, scope: !13047)
!13071 = !DILocation(line: 1434, column: 2, scope: !13047)
!13072 = distinct !{!13072, !13049, !13073}
!13073 = !DILocation(line: 1440, column: 2, scope: !13044)
!13074 = !DILocation(line: 1441, column: 13, scope: !13018)
!13075 = !DILocation(line: 1441, column: 18, scope: !13018)
!13076 = !DILocation(line: 1441, column: 2, scope: !13018)
!13077 = !DILocation(line: 1442, column: 1, scope: !13018)
